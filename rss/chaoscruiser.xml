<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fchaoscruiser-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/chaoscruiser-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fchaoscruiser-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fchaoscruiser-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>混沌巡洋舰</title>
<link>http://www.jintiankansha.me/column/ultiWL8Axg</link>
<description>混沌巡洋舰 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>强化学习理解的三重境界</title>
<link>http://www.jintiankansha.me/t/A5jNLvecGM</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/A5jNLvecGM</guid>
<description>&lt;p&gt;&lt;span&gt;想像一下我们是人工智能体，我们有强化学习和监督学习可以选择，但干的事情是不一样的。&lt;/span&gt;&lt;span&gt;面对一只老虎的时候，如果只有监督学习就会反映出老虎两个字，但如果有强化学习就可以决定逃跑还是战斗，哪一个重要是非常明显的，因为在老虎面前你知道这是老虎是没有意义的，需要决定是不是要逃跑，所以要靠强化学习来决定你的行为。&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;强化学习有哪些实打实的应用呢？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;只要在问题里包含了动态的决策与控制，&lt;/span&gt; &lt;span&gt;都可以用到强化学习&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1， 制造业&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;强化学习之于制药业有一种天然的契合 ， 把强化学习翻个牌子换个叫法， 也可以叫做控制论， 学习控制机器手的精确动作， 比如让它自动的做比目前所能及的更复杂的事情， 强化学习在制造业的应用潜力是显然的 。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6617283950617284&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibce5vF9ib3b3HiaHGBxGjjGop8YBT4xfFfeIjiatN1CyyZZVqicS0kicw2faTLPZtvkZrkYV4mZ988CiaA1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;405&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;2， &lt;/span&gt;&lt;strong&gt;&lt;span&gt;无人驾驶&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这就不用多说了， 开车本质是个控制问题, 　自动驾驶不仅需要模拟人类行为，　还需要对前所未遇的情况进行决策，　这需要强化学习。　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5612009237875288&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibce5vF9ib3b3HiaHGBxGjjGop8BvCqcZ8G0tw81FlSBbLpUvJQkpvZ1WYK40jX7E00y9OknVic4PFNbYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;433&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;3, &lt;/span&gt;&lt;strong&gt;&lt;span&gt;智能交通&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;智能交通， 显然这里包含了非常多的决策与控制问题， 就拿目前的共享汽车行业 ，滴滴和uber的派单系统时时都是一个动态的决策， 如何把正确的司机和乘客连接在一起， 如何让车辆调动到需求量最大的地方， 这些都要时时的考虑各种因素调整决策。我们�&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 19 Apr 2019 15:02:23 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/A5jNLvecGM</dc:identifier>
</item>
<item>
<title>GAN的五个神奇应用场景</title>
<link>http://www.jintiankansha.me/t/ut0yzl0oXL</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/ut0yzl0oXL</guid>
<description>&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5039745627980922&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImptoTntHRWibc2DKXtPvcUrGT46E9nSnTgHE3SE2gotHYibvcJMe3EH97Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;629&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图中的图片有什么共同点？回答是这些脸都是虚构的，是由GAN（对抗神经网络）生成的。自从2014年第一次提出之后，做为一种生成式的模型，不到五年的时间，GAN已经衍伸出很多意料之外的应用场景，本文简述其中五个，未来预期GAN会在更多的领域大放异彩。关于GAN的基础知识，可以参考&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383280&amp;amp;idx=1&amp;amp;sn=a6fd903f2c47339c52dcea9eedf65851&amp;amp;chksm=84f3cbb1b38442a7f4aac491852e06c34794154946a3656bc4ac4805b1ef1b41cb4469ae8419&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;对抗神经网络初探&lt;/a&gt;，GAN用在艺术品生成与风格迁移的具体案例分析，可以参考&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383188&amp;amp;idx=1&amp;amp;sn=ec8d1090fe46741c14ccf7cc02b57c2c&amp;amp;chksm=84f3cbd5b38442c33ef70b698dd07f5b7aa954623fe3724e9f83b8e10a44b86a3777054395a4&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;怎么样用深度学习取悦你的女朋友（有代码）&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1）图像编辑&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3046875&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImpibxozsleicRf8xpibetUEqojxAlsKLpNvKSD8UHJUUA4UMx2UVtE6c8Hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这简直是美图秀秀中的各种滤镜的升级版，给出一张原始的妹子图片，可以生成出金发版，卷发版，微笑版，还能ps出你的双胞胎兄弟长什么样。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2776470588235294&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImpicms4hLEk6kaQpg3NhGPicW7Ebd3ObPQZEIL6qiaibibhYoymFFgkEebbFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;850&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不止是对人物进行定向的修改，还能修改图片中的坏境因素，例如上图中左图中是下雨的场景，右图是GAN生成的同样坏境但是没有下雨的照片，俩者人眼看来，就只能看出是否下雨这一个差异来。实现这样黑科技的，是GAN的一个变种，称为conditional GAN， 有了这项技术，就可以根据一个人小时候的照片，生成其长大后，年老后的样子，或者你上传你家狗狗的照片，然后再虚拟的坏境下给狗狗换衣服，然后你再购买你喜欢的狗狗衣服。这项技术也存在着被滥用的风险，比如生成虚拟的果照。关于技术细节，请阅读参考资料【1】与【2】。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;2）恶意攻击检测&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通过给深度神经网络一些特异生产的训练数据，深度学习生成的模型是可以被黑客攻击，利用甚至控制的。为了对抗这样的逆向攻击（adversarial attacks），可以训练对抗神经网络去生成更多的虚假训练数据作为假想敌，让模型在演习中去识别出这些虚假数据，就如同人类打疫苗，GAN生成的虚假数据让正在做分类的模型更加稳健。&lt;/p&gt;

&lt;p&gt;另一个在安全领域的应用的加密传输，在图片中，可以使用额外的像素来加密一段文字，从而你以为你接收的是一副普通的图片，但实际上通过解密，却可以发现其中包含了加密的信息。GAN的变种SSGAN，通过在传统的GAN模型中增加一个判别器，可以识别出这样加密后的图像，也可以用于更高效生成上述的加密信息。参考【3】&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.48792270531400966&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImpgMvx77uaDrbhdsJxMs7MXoKJibbzIkl9wTZc9GGXgG7kNzU33kD1v7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;621&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;3）数据生成&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在特定的应用场景下，例如医疗领域，缺少训练数据是应用深度学习的最大障碍。数据增强的传统做法是将原图像拉伸旋转剪切，但这毕竟还是原来的图像，通过使用GAN，能够生成更多类似的数据，如下图所示，右边是真实的图片，而左边是合成的训练数据，中间的是GAN生成后原始图片，之后经过了修饰，使得面部的肌肉和纹理更加真实。这个GAN生成的图片，通过了图灵测试，让眼科医生都无法分辨出。而随着生成出的数据被加入训练集，相同的模型在分类任务上的表现也有所提升，具体参考【4】。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3567251461988304&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImpC1hzfPgQk6DEZ1Hb7c2cCxugLBRAMBoricpr6sAvrES9qvnM3eKtNow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;342&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;4）注意力预测&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;人类在看一张图片时，往往只关注特定的部分，而通过GAN模型，可以预测出人类关心的区域在哪里，下图展示的SalGAN预测出的图片中人类观测的热点区域，和真实的区域，以及之前模型的对比。SalGAN的预测不止更准确，而且能够包含很多之前模型没有预测到的区域。对注意力的预测，可以指导广告的投送，例如在电影中做植入广告前，可以先预测一下植入的区域是不是在注意力的热点区。类似的方法还可以反过来用，假设不同类型的人有不同的注意力热点模式，根据一个人关注图片中的那个部分，来对人进行归类。参考【5】&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0885416666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImpWf4BsxOsENqRTTONtWNnEbsWhRk09BrfVJwqDcricksmLhjYH8Oib01w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;768&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;5）三维结构生成&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;&quot; data-croporisrc=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImpkbEaNCb1SkKe0kQ7FbvVjicovlwpK8NSwjOvWpcOdfur7gvLcFeudOA/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;673&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;1231.0089928057555&quot; data-ratio=&quot;1.8276374442793462&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibccpZBbGf9HicIlJ9xNX1wImphoLlQnm3Jgwzib5XicY71ZBFibtx88ld99P8WdxwPq5d9ib8NCGIsRYCHw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;673&quot; /&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;总结&lt;/p&gt;
&lt;p&gt;标注数据总是少数的，未标注的数据才是待开掘的金矿。GAN可以通过标注数据，生成模拟数据，也可以用在自监督学习中，让模型具备从部分标记的数据中学习的能力。本文只是列出了在图片上使用GAN的五种有趣的场景，在视频，有向图及自然语言处理上，GAN也有诸多应用，结合贝叶斯网络，GAN还可以应用在因果推理，参考文献【7】。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;参考文献&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【1】https:&lt;/span&gt;&lt;span&gt;//github.com/hezhangsprinter/ID-CGAN&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【2】 https:&lt;/span&gt;&lt;span&gt;//arxiv.org/pdf/1611.06355.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【3】 https:&lt;/span&gt;&lt;span&gt;//arxiv.org/ftp/arxiv/papers/1707/1707.01613.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【4】 https:&lt;/span&gt;&lt;span&gt;//arxiv.org/pdf/1612.07828.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【5】 https:&lt;/span&gt;&lt;span&gt;//arxiv.org/pdf/1701.01081.pdf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【6】 https:&lt;/span&gt;&lt;span&gt;//github.com/maxorange/pix2vox&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;【7】 https://arxiv.org/pdf/1810.07406.pdf&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 13 Apr 2019 10:53:23 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/ut0yzl0oXL</dc:identifier>
</item>
<item>
<title>当机器学习遇上进化算法</title>
<link>http://www.jintiankansha.me/t/ctzlXu0ZQQ</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/ctzlXu0ZQQ</guid>
<description>&lt;p&gt;&lt;span data-offset-key=&quot;d5ucb-0-0&quot;&gt;进化，是生物智能演化的原动力。 学习， 是人类文明产生的原动力，也是当下红红火火的AI进步的原动力。 如果这两种神秘的力量结合， 我们会得到一个怎样的物种呢？虽然说这方面的尝试还不多， 不过我们已经可以在一些过去人的研究中见出端倪。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;3l2r6-0-0&quot;&gt;首先，我们说两种算法的本质都是在做优化。 在充满随机性的世界里， 大部分的自然过程趋势是熵增，耗散，或者说随机性的增加。而唯有生物的进化和学习，却可以抵抗这种趋势，在随机中产生有序，产生结构。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;mot5-0-0&quot;&gt;虽然都在做优化， 它们的优势和缺点也非常明显。  &lt;/span&gt;让我们来概述一下两种方法的核心。 &lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;1nhp4-0-0&quot;&gt;&lt;strong&gt;&lt;span&gt;进化算法vs机器学习&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;d6sib-0-0&quot;&gt;进化算法&lt;/span&gt;&lt;span data-offset-key=&quot;d6sib-0-1&quot;&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;ea40g-0-0&quot;&gt;进化算法建立在基因之上，基因 - 可以理解为生命在各种条件下的一组行为策略。比如吃什么， 向什么方向移动，肤色的选择等。 这组策略被一套叫DNA的大分子固定， 也就是我们常常说的遗传编码 ， 它通过一个复杂的化学反应， 制造RNA和特定的蛋白质，而一切生命现象都是由特定蛋白质实现的， 我们简单的说就是生命策略， 比如在外界环境出现如何变化时候如何反应。 你可以把DNA的编码看成一系列的if else语句， 就是在某种条件下， 触发某个蛋白质， 实现某一个功能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.5166666666666667&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuUm28E0usZSQZpFdSE3NmGF9DUZ3KvPmSVU42OT6ruCf2icCJUaLLQdcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;720&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span data-offset-key=&quot;4o7te-0-0&quot;&gt;那么进化算法包含以下要素：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;d1jn4-0-0&quot;&gt;1，生物通过基因编码生存策略。 基因即一组可以编码蛋白质的生物大分子。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;f6mpe-0-0&quot;&gt;2， 单组策略的存在时间有限， 它会以繁殖的形式得到一个和自己一样的策略， 但是这个过程不是完全精确的， 它会以一定的方式出错或者说变化， 这恰恰使得下一代的策略可以轻微的偏离上一代。 从而在一段时间里， 形成越来越多的策略，我们叫做基因池。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;514bc-0-0&quot;&gt;3， 有的时候不同的基因会发生交叉， 也就是说把两组策略把各自的一部分给对方， 然后形成新的策略组合。 这种重组产生新的基因的速度会比变异快的多， 也就是我们说的交配。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;577ih-0-0&quot;&gt;3， 环境会评估某个策略（DNA） 是不是适合自己， 这个通常由一个叫适应度函数的东西表达。 适应度越高， 基因就是越适应当下环境。这个适应度很像机器学习里的目标函数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;6ds96-0-0&quot;&gt;3， 经过一段时间， 适应环境的策略会比不适应的环境的策略得到更多的个体，因为它自身存活的概率更高， 这样， 最终环境里数量最多的， 是最适应环境的策略。这样的策略不一定有一个。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;npng-0-0&quot;&gt;4， 环境会变化。当环境变化， 最适宜的策略发生变化， 这个时候最适合的策略也发生变化， 导致新的物种和生态系统的生成。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;5ll5m-0-0&quot;&gt;机器学习：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;vaek-0-0&quot;&gt;理解机器学习最简单的角度是从一个计算机程序来看： 学习算法是一段特殊的程序。 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;et0m5-0-0&quot;&gt;如果说一段程序可以看做一连串从输入到输出的过程，无论是工程师还是程序员，我们都想通过设计来完成某种功能， 比如说你做一个网页， 你要画视觉图， UI图， 前端后端交互图，我们都是在给计算机设计一套解决具体问题的流程， 如做一个淘宝网。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;698n-0-0&quot;&gt;而机器学习呢？ 机器学习是你不去设计， 而让计算机自己去磨，如同用一套很一般的模子里打磨出能够解决特定问题的武器。 这点上，机器学习做的正是” 自发能够产生解决问题的程序的程序” ， 一些机器学习的经典算法如线性回归， SVM， 神经网络， 它们单个都不能解决问题， 但是通过“学习”却可以一会去预测房价， 一会去寻找美女。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;65q35-0-0&quot;&gt;生物世界的学习与机器学习最接近的是强化学习。 强化学习的目标函数是未来的奖励总和， 智能体需要学习到合理的行为来实现奖励最大化。 最简单的强化学习即条件反射。 与进化算法非常类似的， 强化学习在优化行为策略， 但是与之不同的是， 强化学习的优化方法是下面要讲的梯度方法， 一种更为贪婪， 高效的优化方法。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;5sdfg-0-0&quot;&gt;整个机器学习依靠的寻求最优的方法就是梯度优化， 这个方法相比进化算法， 更具方向性和目的性， 虽然我依然不知道我要寻找的那个最优是什么， 但是我每往前走一步， 都希望最大程度的接近它， 或者说贪婪的接近它， 这个时候我们就会设置一个目标函数（类似于进化算法里的适应度）， 然后我们让参数顺着最快速减少目标函数的方向去自动调整， 如下图。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;22t20-0-0&quot;&gt;深度学习作为机器学习的发展， 其成功几乎完全依靠了以反向传播为基础的梯度下降方法， 而事实上也是， 梯度下降在很多时候更加精准。但是， 如果你认为因为梯度下降完全优于进化算法的优化方法， 就错了。 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.71&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuUJ21wR3plUss5PTvxw9DibPwk4ic2JEDgxtT3501gC8kUrvicBNcYeibdIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;cj6jk-0-0&quot;&gt;首先， 关于优化问题， 我最喜欢用的例子是一个小姑娘在山上采集蘑菇， 地势越低的地方蘑菇越多。 因而， 她需要找到一个最快的到达山谷的路径，小姑娘视力不好，因此她最好的做法就是用脚感受当下地势下降最快的方向往前走一步， 这就是梯度下降法。 在一个山谷形状比较简单的地方， 犹如上图， 你是很容易达到这个目标的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;8h2dd-0-0&quot;&gt;然而真实世界的地形却并非如此简单， 比如下图，你看到无数的波峰和波谷。 每个波谷都代表一个局部最小值。 而事实上哪一个谷是最低谷， 这件事并没有那么容易。 如果你采用机器学习所使用的梯度下降， 则你极大可能会陷入到某个小的山谷里长期停滞。 当然， 在深度学习的问题里， 局部最优往往足够好了。 可是在最真实的情况下， 这下波峰和波谷的高低也可能是动态调整的， 今天的谷底可能是明天的波峰。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.7795275590551181&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuU17QfcbcRBgHOH2JbLXibBNmMSXicKic8bDcgpzuDzjJALoCMh5oY1qPtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;254&quot; /&gt;&lt;/p&gt;

地形比较崎岖

&lt;p&gt;&lt;span data-offset-key=&quot;5sqjj-0-0&quot;&gt;而进化算法呢？ 进化算法就不一样了， 进化算法相当于一次释放出无数个小姑娘（基因池）， 这些小姑娘， 各自在这个崎岖的地形里试错寻找蘑菇丰盛的最低点。 每个人的搜索策略（每个人的基因）有不同。 虽然趋近每个小山谷的速度不如梯度下降。 但是最终找到那个最优解的可能反而还更快。 这里面最核心的是， 用一个群体替代个体， 在优化的同时更多的保持多样性。 就如同自然界的物种， 有些物种比如说熊猫，居然进化成那么可爱但是站动力不强的样子， 但是自然还是没有淘汰它。 因为这种当下看着不太有利的基因， 不一定在自然巨变中就一定是没有用的。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;进化算法结合机器学习之最小案例&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;a5r3u-0-0&quot;&gt;废话少说，我们来看看把学习算法和进化算法合在一起， 会发生什么？ &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;1uo9j-0-0&quot;&gt;我们从一篇1994年的文章开始看起（Learning and evolution in neural networks by Nolfi, Elman, &amp;amp; Parisi)  这篇文章的作者试图阐述一件事，就是如果进化和学习是相辅相成的，不仅进化可以促进学习能力的增加，反过来， 学习也会促进进化的过程 ， 造成类似于拉马克进化的效果。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;8locs-0-0&quot;&gt;来看如下的儿童游戏：  在一个grid走方格任务里，模拟生物需要在最短的时间里收集足够多的食物（用F代表），  这个生物由一个菜鸟级的神经网络代表。 神经网络接受的输入数据来自周围的食物的方向和距离远近（一种视觉，足以让你找到临近的食物）。 它的行为呢？ 直线前进， 向左或向右转动。  神经网络的输出决定它的行为。 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;1.09&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuUV9iatorUapbf9rcXntx2JauE6mL9Ba4W2ico2aPL6C5RviaOe6PJq2Libw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;1.2066666666666668&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuU0FIiarVqqeMibGvC4msB76n6D4g5VJukox91NFolZbsF4d2uzm52D07A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;f7i75-0-0&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;  进化算法在这里具体管什么呢？ 由于网络只有7个隐层神经元， 和两个动作输出神经元， 它的策略就是由它们的权重表达的。 而一组权重， 就可以看作一组DNA。 我们一开始准备很多这样的权重， 代表不同的策略（基因池）然后放到略有不同的环境里让这些虚拟生物跑， 跑到一定时间，就开始看它们采集到的食物的数量（fitness适应度）， 那些食物采集比较少的生物， 而保留优胜者，经过这样一个经典的进化算法流程， 生物就可以学到上图所示的那种策略。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;48t8l-0-0&quot;&gt;然而， 文章的发出者偏偏不是等闲之辈， 这个网络在干这件事之余还干的一件事是， 进行预测！ 不停的预测下一刻它会看到的东西 ，或者说理解它的动作将给它带来什么样的环境变化。你看， 这不就是当下大名鼎鼎的好奇心或预训练的前身吗， 看来还真的是我们总在重复前辈的思想。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;2bp3v-0-0&quot;&gt;预测这个事情会产生什么效果呢？ 通过预测的对错（不停的把自己想到的和最终结果对比），它会开始进行学习，一个重点在于， 学习的过程只在代系之内， 也就是说比如100轮（一轮就是一次游戏）做一次进化算法的迭代， 那么学习可能是在这100轮里每轮都进行的， 但是学习的结果不会传递给下一代， 就好像你死了， 你头脑里的知识也消失了。   那么随之而来的是什么现象呢？ 学习不是就没有意义了吗？ &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;frnfo-0-0&quot;&gt;不是。  在实验中我们发现， 这个预测性学习， 不仅仅是学会了预测， 而且， 它让虚拟生物在进化算法中得到的食物采集能力， 也就是说任务采集能力大大增加，也就是说，进化算法被监督学习助力了！  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.8316666666666667&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuU4ULZ0B3C9rBbaqEXMxw8lRIKTxn2iczickaP9ng3SC3f42XTZUtkILzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;3qkv5-0-0&quot;&gt;这件事表明看上去匪夷所思， 它就好像是我们过去所说的拉马克进化的复兴。拉马克进化是说， 亲代在后来习得的能力是可以通过遗传传递给子代的， 用一句话就是“用进废退” 。如果你看上面的曲线， 仿佛是说监督学习的个体， 由于亲代可以把它监督学习的成果传递给下一代， 引起了具备监督学习的批次进化速度更快。 事实上呢？ 这是不可能的， 因为每一次学习到的权重并不会传递给子代， 虽然说传递是会发生的， 但是学习得到的权重改变却没有被传递。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;am9ao-0-0&quot;&gt;那么学习是如何作用于进化的呢？用一句话概括这个过程的本质是： 学习使得进化的选择效应发生了变化。 那些通过监督学习能够最大程度的改变命运的个体，每一次被选择出来， 而非像在没有学习的版本里只是天生丽质被选择了。 一句话， 学习， 使得进化的选择更准确。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;am9ao-0-0&quot;&gt;如果你这样理解这件事情， 还是会觉得有点民科， 我们可以给出一个比较数学的版本。 你依然想象一个高低不平的山区地图， 然后我们希望在上面寻找最小值。 每一个不同的策略， 代表地图上的一个点。 那么学习的效果是什么呢？学习可以在局部改变你的策略， 这就好比， 我们的策略可以从当下的一个点， 丰富到周围的很多点， 甚至是一个小的局域。 由于我们的地图是极度凹凸不平的， 可能在很小的局域里就包含了很多的地势变化。 一个没有学习的群体， 它的效果是在这个凹凸不平的地图上撒上很多点， 而有学习的呢？就是撒上很多小圆圈， 如果小圆圈所覆盖的地方包含了极小值， 我们就可以迅速的锁定它。 也就是说， 虽然学习本身的成果无法遗传， 通过学习， 我们才能更好判断哪些是值得保留的真正优势策略。 用优化的语言说就是学习通过局部优化增加了进化这个全局搜索器的效率。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;76mfl-0-0&quot;&gt;好了 ， 这个游戏看起来有点简单， 但那时你一定不要小瞧简单的游戏， 做AI， 你就应该从toy model 里理解问题， 然后看你的想法是否salable， 可扩展。 恰恰是， 这篇文章的成果可以映射当下的一系列AI成果， 直到征服星际争霸的alpha-star。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;3im45-0-0&quot;&gt;如果你追溯这条线的发展， 你首先会看到。机器学习和进化算法， 在这篇文章后， 都得到了飞速发展， 但是机器学习要快很多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;f37a3-0-0&quot;&gt;然后你会看到， 进化算法开始桥悄悄进入很多机器学习框架。而且， 正在实现之前机器学习所完全不可能实现的任务。  &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;f37a3-0-0&quot;&gt;&lt;strong&gt;进化算法结合机器学习带来的无限可能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;91kr2-0-0&quot;&gt;首先， 进化算法的本质是一种集群算法， 通过集群， 遍历式的搜索策略空间。 这点， 就比梯度下降更好克服非线性问题里局部极小的问题。  而且在用梯度方法不好并行的一些问题里， 如RNN的训练， 这种方法却可以产生出并行的威力。 再有，进化算法可以帮助我们做梯度下降所难以实现的改变，梯度下降需要问题可以微分， 而进化算法就自由的多， 只要你能够定义适应度和策略就可以做。 它特别擅长做超参数的调整， 改进网络架构， 甚至可以改变学习算法本身。 一句话就是说， 进化算法迈大步， 梯度下降局部调。 这样的思路结合，可以解决相当困难的问题。&lt;strong&gt;最后， 进化算法更有遐想力的地方， 还在于它所带来的智能体间合作与博弈的可能。&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;7gvjq-0-0&quot;&gt;我们先来看合作， 后面的文章来自那个AI界的不为人赏识的教父级人物Schmidhuber： Accelerated Neural Evolution through Cooperatively Co-evolved Synapses  这篇08年左右的文章，将这种思路几乎用到了极致。这篇文章用进化算法直接解决了一个传统强化学习的经典任务pole balancing的较困难版本， 并且证明它在这类问题上比强化学习更有可扩展性。  联想到强化学习运用到现实生活中， 却经常碰壁， 原因就是鲁棒性差， 可扩展性不高，进化算法会是对它的一个极好补充。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;7gvjq-0-0&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;e9fdq-0-0&quot;&gt;那么何为合作？ 这篇文章里， Schmidhuber直接用进化算法来优化一个模块化的网络。 网络中的每个模块可以看作群体中的一个个体， 而它们的组合网络就可以解决更复杂的任务， 合作体现在网络模块之间的配合。 这点让人不仅想到那个群体和个体的界限问题。 人由不同的器官组成， 人脑由不同脑区组成， 社会由人组成， 这些都可以看作一种广义的合作。 如果每个个体都很优秀， 组成的国家很弱小， 它还是会灭亡，基因传不下去。因此， 进化就会鼓励合作。同样的道理， 在这个模块化的网络里， 进化算法会促进模块间更好的配合最终完成复杂的控制任务。  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.49666666666666665&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuUGLvwG9xbn0tm7TSwWNTZib3tskeNbqx6srB0X0KMv3hthKnODjVfC1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;

四个模块的网路， 网络权重由一组“染色体”编码Accelerated Neural Evolution through Cooperatively Co-evolved Synapses


&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.44666666666666666&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuU3I4iaACCKML0l7MSUFg64j8dF06cw8GzbKrmK3qkkciat1ficVfWcZD5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;

经典强化学习游戏， 平衡杆， 我们需要以恰当的方法移动小车，让上面的倒立单摆稳定。 这个游戏有很多复杂版本。

&lt;p&gt;&lt;span data-offset-key=&quot;33n2q-0-0&quot;&gt;进化算法和机器学习混合的最新应用案例 - AlphaStart： &lt;/span&gt;&lt;span data-offset-key=&quot;bf129-0-0&quot;&gt;AlphaStart, 在星际争霸这样级别的游戏击败人类， 应该说这是一个了不起的胜利， 因为星际争霸这个游戏比围棋要接近真实世界很多， 信息是局部的，远方的世界笼罩在黑雾里， 当下和未来是连续的， 战略需要跨越很多时间尺度。这些问题，需要比阿法狗更加复杂的接近方法。  AlphaStart以一个具有记忆的神经网络LSTM为基础， 然后用到的学习方法， 正是进化算法加机器学习（强化+监督学习）。应该说， 这才是这套方法的灵&lt;/span&gt;魂（参见AlphaStart: An Evolutionary Computation Perspective）。 &lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;40ln9-0-0&quot;&gt;它的思想简直是对1994文章的升华， 把拉马克进化真正用起来。 也就是说， 我们把一个最外层的代系间的进化过程， 和内层的持续不断的强化学习结合起来。 内层的学习会影响外层的进化。 更重要的是， 在这里， 我们通过进化引入了不同参数的网络（智能体）间的博弈。 那些从一个根基上产生的稍有不同的网络， 会通过学习来改变自己， 并在战斗中一决雌雄， 当一轮结束， 优胜者将改写失败者的基因， 但失败者不会马上消失，正如文章中所说：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;4931d-0-0&quot;&gt;“The fittest solutions survive longer, naturally providing a form of elitism/hall of fame, but even ancestors that aren’t elites may be preserved, maintaining diversity.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;Image FocusPlugin--unfocused Image--isBlock&quot; data-ratio=&quot;0.505&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcebdNQcqmFd7cGXNcVMicbuUjvtRygbMC26iciauue49ngHF297rxjqqME094I8CgPhE1GW1DXhQsQwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; /&gt;&lt;/p&gt;

alphastar的进化历程图， 我们看到在每个时间点我们得到的都不是一个点， 而是一群点，代表我们式以族群为单元进化的， alaphastart不是一个网络

&lt;p&gt;&lt;span data-offset-key=&quot;9vqjg-0-0&quot;&gt;这样， 我们就鼓励了种群的多样性， 而得到一个在纳什均衡状态下多样化的解空间（一组不同策略的组合）。也就说， 最后的最优解不是一个网络， 一个是策略集群。 如此， 我们就可以玩转很复杂的问题。  保持多样性的好处还是在之前的小姑娘采蘑菇的例子说的，任何优化都是在高低不平的空间里寻找最低点， 而在星际这样复杂的游戏中， 整个地形都在缓慢或迅速的变化着， 之前处于劣势的个体，可能在下一个拐点变成处于优势的。 &lt;strong&gt;这也是进化算法的温情之处， 世界是充满不确定性的，因此我不要斩尽杀绝。&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;5ekui-0-0&quot;&gt;正如schmidhuber在上一篇文章说的， 这一类损失函数对应的地形动态变化的问题里， 那些传统的优化问题甚至会完全失效（稳定性丧失）， 而最后剩下的，会是进化算法。 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span data-offset-key=&quot;2q9bl-0-0&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;  deepmind的宣传稿里有一个非常好的例子， 我不是星际玩家， 但是你应该可以很快理解。 大意说的是在早期具有优势的策略（比如用某种武器迅速偷袭对方的高风险策略）， 会随着时间发生变化， 有的时候， 这种变化完全不是之前基础的改进， 而是从完全不同的分支长出来的（比如早期通过增加工人取得经济优势，这与风险策略几乎相反，而这个策略后来居上）。如果你砍掉所有的分支， 你是否还能找到那个后期的优势策略呢？  那个后来最优的策略， 压根不是你先前的最优渐进发展出来的。     &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-offset-key=&quot;fd5mp-0-0&quot;&gt;“As the league progresses and new competitors are created, &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 11:37:37 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/ctzlXu0ZQQ</dc:identifier>
</item>
<item>
<title>5分钟读懂强化学习之Q-learning</title>
<link>http://www.jintiankansha.me/t/SrT1aw8yLw</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/SrT1aw8yLw</guid>
<description>&lt;p&gt;强化学习的难点，在于其引入了时间这个维度，不管是有监督还是无监督学习，都是能获得即使反馈，但到了强化学习中，反馈来的没那么及时。在周志华的《机器学习》中，举过一个种西瓜的例子。种瓜有很多步骤，例如选种，浇水，施肥，除草，杀虫这么多操作之后最终才能收获西瓜。但是，我们只有等到西瓜收获之后，才知道种的瓜好不好，也就是说，我们在种瓜过程中执行的某个操作时，并不能立即获得这个操作能不能获得好瓜，仅能得到一个当前的反馈，比如瓜苗看起来更健壮了。因此我们就需要多次种瓜，不断摸索，才能总结一个好的种瓜策略。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcenH9WLvLsrBZukiafEJwhkEjFBzNFcGulOr8XicbMINSzX2wtfdicyia9EQTbLasqdBicriaUg2uTtmNtA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; class=&quot;&quot; data-ratio=&quot;0.8597222222222223&quot; data-w=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为了应对时间带来的不确定性，就需要一个框架来量化时间的流逝对我们关心奖励有怎样的影响。按照最简单的线性模型，我们首先确认要引入那些特征，首先是前一个时间的得分，其次是新发生的事件对奖励的影响，由于我们对未来的奖励看的不如现在的重要，因此可以引入折线率，折现率越高，说明我们越处于游戏的早期，对未来的关注也越多，这道理就如同我们在年轻时更要做长久的规划。同时在更新策略时，也会有快慢之分，将其称为学习率。由此得出了时间差分学习(Temporal Difference)，简称TD方法的更新公式：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.14660831509846828&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaatGHyEQuonYibg2174nHUCFhLdAGRQvSVal7TrHezmsKZ01ErVogJuYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;457&quot; /&gt;&lt;/p&gt;

&lt;p&gt;该公式描述了给定一个策略，该怎么去更新下一个时刻的估值函数，其中的V代表估值函数，下一个时刻的估值乘以折现率，再减去当前的差值，代表了一个策略的间接影响，可以看成是战略决策，再加上下一个时刻能立即获得的奖励，就是智能体（agent）应该关注的策略的影响，最后对此乘以学习率，用来控制随机性的影响，既要避免由于学习率过低导致的智能体学的太慢，也要避免学习率过高导致智能体矫枉过正。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;由于在当下，你并不知道下一时刻的估值函数，所以你要做的是对其有一个尽可能准确的估算，这个估算被称为Q value，对应的算法称为Q-learning。如果你是用神经网络得出对未来value的估算的，那你使用的算法框架就从强化学习变为了深度强化学习。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7262357414448669&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaiaD8kfEVYfNkfJgLhYEbOzyOo6TqicKnb0NGgYfL5ib6Kkb8jOMt56xTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;526&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面是一个具体的例子，将一个结冰的湖看成是一个4×4的方格，&lt;span&gt;每个格子可以是起始块（S），目标块（G）、冻结块（F）或者危险块（H），目标是通过上下左右的移动，找出能最快从起始块到目标块的最短路径来，同时避免走到危险块上，（走到危险块就意味着游戏结束）为了引入随机性的影响，还可以假设有风吹过，会随机的让你向一个方向漂移。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.466893039049236&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaacrLdcvu8QwtBo9mvVzf3KZ3wZGMospic8OhNsuz9sdlNvfjjicP53hdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;589&quot; /&gt;&lt;/p&gt;
&lt;p&gt;左图是每个位置对应的Q value的表，最初都是0，一开始的策略就是随机生成的，假定第一步是向左，那根据上文公式，假定学习率是0.1，折现率是0.5，而每走一步，会带来-0.4的奖励，那么（1.2）的Q value就是 0 + 0.1 ×[ -0.4 + 0.5× (0)-0] = -0.04，为了简化问题，此处这里没有假设湖面有风。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4200626959247649&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaibSXpgch86ApiaPm5EBrQkr7KvJxmlPOoYxDa4icOJiajK8Oyl55fuhd7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;638&quot; /&gt;&lt;/p&gt;
&lt;p&gt;假设之后又接着往右走了一步，用类似的方法更新（1，3）的Q value了，得到（1.3）的Q value还为-0.04&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4054878048780488&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaTtSt6Siceq5eg320L4ibrKfiaVFKloHuhiaAXS3ficPIheOXfH8W0Mskqcw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;656&quot; /&gt;&lt;/p&gt;

&lt;p&gt;等到了下个时刻，骰子告诉我们要往左走，此时就需要更新（1，2）的Q-value，计算式为：V(s) = 0 +0.1× [ -0.4 + 0.5× (-0.04)-0) ]&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.46333853354134164&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaabAV71N9QPLA95sNdHmxw735yYwBd1JZ4fVxG4fMuYaHrlhLnDrnBcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;641&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;从这里，智能体就能学到先向右在向左不是一个好的策略，会浪费时间，依次类推，不断根据之前的状态更新左边的Q table，直到目标达成或游戏结束。这就是TD learning的基本步骤，通过多次的实验，智能体掌握了在不同位置下，相应的策略的估值分，从而解决了将较远的未来映射到当下的对不同策略的激励这个强化学习的核心问题。&lt;/p&gt;

&lt;p&gt;根据是否亲自尝试不同的策略，Q learning可以分为在线和离线俩者，用学下棋来举例，前者是AI通过自己和人类选手下棋或者自我对弈来提升，而后者AI不操作只观察他人下棋的棋谱，下面看看再离线（off-line）的Q learning中，Q value更新的公式又有了怎样的改变。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.12110726643598616&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaa56EFEGaa5FzYynegbiaG0HHB5VXQericOGjxf1VyCWAGKjQyTyzeCPSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;578&quot; /&gt;&lt;/p&gt;

&lt;p&gt;和之前的公式对比，最大的不同是未来的Q值是所有行动/策略对应的未来Q值中最大的那一个，这代表着模型根据已有的知识，选择了局部最优的那个行动，通过不断的优化Q table，使得这样一个只考虑一步的最简单型启发规则，也能学到全局相对较优的策略。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.292626728110599&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaatd4f6hZKGMOiasVOoUG86yF7sKictnZPX3LCNib7BPjlyMxJYAiabw8htA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;434&quot; /&gt;&lt;/p&gt;


&lt;p&gt;还是冰湖的案例，假设在训练的循环中，当前智能体已经学会了在（3，2）这个点上，向左和向右走对应的估值，此时模型要做的是去判定利用当前的知识，还是去探索未知策略的影响，探索是为了发现环境的更多信息，而当探索进行到了一定的程度，就需要根据已知信息去最大化奖励值，在Q learning中，通过一个0-1的参数来用随机性调控探索和开发的权衡。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.54&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaRggot5LiaL2n2jGVV7aOQAQp5L5WXiaqkvtl1CFlv4FLJJuGW0H3IZDA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;800&quot; /&gt;&lt;/p&gt;
&lt;p&gt;假设骰子告诉智能体应该选择探索，因此选择了向下走，左图代表的之前智能体的Q-table，现在要做的是根据公式，更新（3，2）这里的Q value，由于向下走的Q-value最低，假定学习率是0.1，折现率是1，那么（3，2）这个点向下走这个策略的更新后的Q value就是：&lt;/p&gt;

&lt;p&gt;Q( (3,2) down) = Q( (3,2) down ) + 0.1× ( 0.4 + 1 × max [Q( (4,2) action) ]- Q( (3,2), down））&lt;/p&gt;

&lt;p&gt;Q( (3,2), down) = 0.6 + 0.1× ( 0.4 + 1 × max [0.2, 0.4, 0.6] – 0.6)=0.64&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4582043343653251&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaDiahblY26dmQgclaiac3B1IOojqD73sqjlEfqdpjYvgEZf4j0CEcNekw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;646&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而在在线的Q learning算法下（称为State-Action-Reward-State-Action ，简称SARSA），Q table的更新公式变为了&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-croporisrc=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaatj8T5icjPo7sDEOpshRUibnb0ldh2ic59JdNcGibaqwicpcicHjiaM8TyEKmA/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;588&quot; data-cropy1=&quot;9.517985611510792&quot; data-cropy2=&quot;93.06474820143886&quot; data-ratio=&quot;0.14285714285714285&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaa2dTIjl6icv7frMeMnyqIUPDhYeJ55RWKPxtoicbj5p0gpOB5kubo8DMQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;588&quot; /&gt;&lt;/p&gt;
&lt;p&gt; 此处不同的是没有了max，由于是智能体在亲自参与，这里也就没法像离线时那样，选择一个最优的策略。不管是在线还是离线，在训练的时候需要做经验回放，即存储当前训练的状态到记忆体中，等下一次训练时再调用。&lt;/p&gt;

&lt;p&gt;以上就是强化学习中最基础的Q learning，上诉的例子中不存在随机性，要引入随机性，可以需要通过蒙特卡罗的方法，来进行采样，同时引入对弈树，对其进行翦枝，这就是alpha zero的精髓。了解了Q learning的步骤，可以分析强化学习适用的领域所满足的假设，例如必须有能够清晰定义，事先已知且有限的策略，但现实生活中，真正重要的选择都是无限游戏，有无数种可能的选项，有前人根本不曾想到的选项，因此说强化学习不等价于强AI，只是通向强AI的一条必要选项。&lt;/p&gt;

&lt;p&gt;不同于人类的学习，是首先对坏境建模，之后再根据模型找到合适的启发式规则，Q learning框架是模型无关的，不管是什么样的问题，Q learning做的都是去更新状态对应的估值表，不管问题本身具有什么样的特点。和人类思维的另一个不同是Q learning中没有因果关系，学到的Q table只是反映了奖励和策略之间的相关性，而人类的学习则是受着因果关系指引的。关于这个话题，可以参考&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651384268&amp;amp;idx=1&amp;amp;sn=07488417ce770804c65a42411735f94b&amp;amp;chksm=84f3c78db3844e9bf479069e7168e0756d9c2854120223650bad38128bd4d19f1f19545fb0f5&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;让神经网络变得透明-因果推理对机器学习的八项助力&lt;/a&gt;，其中有详细的论述。&lt;/p&gt;

&lt;p&gt;更多阅读&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651383664&amp;amp;idx=1&amp;amp;sn=89f11f166582925c041b960035f10c37&amp;amp;chksm=84f3c931b3844027a5c484c7af41f73dada1cb15a87fe4aa776fe293e45b66c0ea96e2e20c77&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;强化学习最小手册&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651384219&amp;amp;idx=1&amp;amp;sn=f396d027ea5a6074e0f0cda0aeb0cded&amp;amp;chksm=84f3c7dab3844ecc80be70e9b9e47cd12686624d71158caf69fb79de9b1067d1b548e31ee132&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;空间简史-人类认识空间的旅程与其对强化学习的启示&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 08 Apr 2019 18:01:45 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/SrT1aw8yLw</dc:identifier>
</item>
<item>
<title>模拟人类思维的机器学习算法</title>
<link>http://www.jintiankansha.me/t/EXOKZtMJtK</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/EXOKZtMJtK</guid>
<description>&lt;p&gt;假定你是一个数据科学家， 老板给了你一组数据， 你来让机器完成这个预测的任务。就假定一定老掉牙的任务吧， 房价。 这也是大家所最关心的东西了。&lt;/p&gt;

&lt;p&gt;用数据来预测的一个关键要素是寻找数据间的相关性，无论是谷歌搜索预测总统选举， 还是用数据推测买啤酒的用户是不是更容易买花生， 这些相关性都已经存在， 数据能够帮我们发现那些我们看不见的相关性，但是， 首先为前提的是， 相关性必须是已经存在的， 你不能从没有相关性的东西里预测另一个东西， 比如从今天天气的好坏预测汽车板块的股价。&lt;/p&gt;

&lt;p&gt;如果给相关性换一个词，那就是信息。你增加的每个数据， 必须让你所要预测的东西更加确定， 否则就是噪声。那么， 什么是最简单的数据预测方法呢？ 你所再熟悉不过的东西， 线性回归。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;1 线性回归&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;回归这个词说的其实是一种由果索因的思维， regression拉丁语的原意， 是act of going back， 是回去，往回走的意思。 那么回的是哪里？ 我们说， 如果一组变量间存在相关性，比如A，B，C都与D相关。 那么我们就认为A，B，C可以确定D 。  预测D也就是由D回到A，B，C的过程。 线性回归， 就是给A，B，C三者每个变量一个重要性的打分，称为权重，然后按权重对三个有影响的变量做线性带权加和。&lt;/p&gt;

&lt;p&gt;让问题再简单一些，如果只保留A这一个影响因素， 你会发现D和A在一条直线上。 无论你一开始发现D的数据如何跳动， 你不停的收集数据， 它的平均数总是要回到那条直线上。&lt;/p&gt;


&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5179738562091504&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaAsIYb93t9qxon2rXomhfa5KgjsELVEocXUaiaDpFAY2dQBCOyPNLguA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;612&quot; /&gt;&lt;/p&gt;

&lt;p&gt;将线性回归的思路用在预测房产的价格，如果你打开链家的网站，  你会发现一个房子的价格决定于非常多的相关因素， 比如房子的地点， 房子的面积， 房子中卧室， 厕所，客厅的数量和面积， 周围环境的交通， 安静与否，有无学校等， 我们要从这些要素中知道房子的价格。如果你是老式的数据专家， 让你找到一个方法预测房价。你的方法一定是到各个地点做调查成交价，然后把它们画成一个表格。这个表格里， 前面是那些链接房产列出来的房屋属性， 最后一个是价格。 你会设法列出一个经验公式来， 比如刚刚的线性公式，然后你认为哪个因素比较重要， 就把前面的系数调大一点， 直到这个公式和你表里的公式符合的比较好。 &lt;/p&gt;

&lt;p&gt;这个老派数据专家的做法， 换一个专业的术语叫做拟合。 只要是学过中学物理的人对这个东西都不会陌生。 记得我们要求得一些重要参数吗， 比如重力加速度， 还是水的密度。 你的做法都是取不同体积的水， 计算它们的质量，然后把它们画在一张纸上，每一个点对应一次测量， 一般情况下， 你会发现所有的数据点在一条直线来拟合， 而这条直线的斜率，可以帮你计算出水的密度来。  这就是拟合， 也就是老派房价研究者的方法了。 你把房子的大小，屋子的数量算作显著因素， 然后把不同地区的房价平均值作为基准， 就可以给每个地方的房子拟合出这样一个曲线。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.806970509383378&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaldvybSbvTibjyN5fRjZguicW3L8faOAJhgvBg0sQfXdEZ9FO0IWpf4sg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;373&quot; /&gt;&lt;/p&gt;

&lt;p&gt;好了， 把这门直线拟合的技术交给电脑， 就是机器学习了， 你可以用python完成，也可以用excel。 就是这么简单。 事实上很多人也是这么说的， 它们管机器学习叫做拟合。线性回归一定不像你想的那么简单。  首先， 当下的数据， 早已不是以前那种两个或三个特征的数据。 如果你打开链接， 你可能发现近百个和房价有关的特征。&lt;/p&gt;

&lt;p&gt;如果你是百度预测广告链接的人， 你会发现你的用户的特征成千上万。难道你不能挑出那些重要的吗？ 问题是， 没有人能预先清楚哪些要素重要。&lt;/p&gt;
&lt;p&gt;如果给一千个因素列出一个线性回归的公式， 然后把它们的系数解出来， 你看看这件事还容不容易呢 ？ 即使是交给电脑， 也不是一两下可以算出。&lt;/p&gt;

&lt;p&gt;更关键的是， 你其实预先并不知道你的这些特征有还是没有用， 我们要设计的算法， 要能从这些信息中首先识别， 然后学习价格的pattern（模式），然后得到这个关系。 在此之前， 老派人士的专业知识可以很好的帮我们滤清这个关系， 比如你可以很清晰的甄选出房子的大小和卧室数量很重要。 但是， 一旦特征多起来， 我想就会超出任何人的专业知识， 比如你是否能判断一个地区的男女比例对房价的影响呢？然后我们的数据也很多， 在这样多的数据下， 任何专家都会眼花缭乱。  &lt;/p&gt;

&lt;p&gt;所以， 我们要建立一个新的思维框架， 来让机器自己完成这个特别繁琐的任务。首先， 我们 把之前说的因素，属性换以一个新的词汇-特征。特征， 就是那些我们认为可以用来预测的因子， 无论它最终是否有作用。一个特征， 可以用一个数表示，更好的理解是它是空间里的一个坐标，就如同下x，y，z。 特征的个数我们通常称之为维度。 &lt;/p&gt;

&lt;p&gt;这样， 刚刚说的一个问题的特征很多， 我们就换作了一个新的词， 就是维度很高， “高维”， 问题越高维， 就是通常说的越复杂。 维度本身同时决定我们可能需求的数据量多少， 高维度意味着我们需要求解问题的信息量也成比例的增长。由于你我都很难想象高维空间的事情， 我们就拿二维来讲解， 以后， 机器学习就称为在平面画曲线的过程。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7491525423728813&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaGY2VBFfJnNKHfNQPpkcaslrpIgK5LdIhiaibTZiaYEpH6vISYKq8rjAHg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;295&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后我们来说算法，特征如何决定预测对象， 哪些特征有用， 哪些没用，用处大小， 就是算法的事情。算法也可以看作机器学习模型，它就像一个机器， 这个机器输入进去数据， 输出我们要预测的对象， 听起来像不像一个函数呢？ 但是它不是一个函数， 对机器学习模型更好的理解是一个框架，或者说一大类函数的综合。 &lt;/p&gt;

&lt;p&gt;比如刚刚我们说的线性回归。 作为机器学习模型的线性回归，可以看作包含了所有的这类很多因素相加的函数， 那些刚刚说的决定每个特征重要性的参数，叫权重。 每一组权重都对应一个特定的函数， 我们也叫它假设。 机器学习与函数的区别在于， 你所拥有的是这样一台机器，你把数据扔进去，它自动给你吐出一个最好的假设， 它能够最好的解释你的数据。   &lt;/p&gt;
&lt;p&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;为什么叫模拟人类思维的机器学习模型？  因为这些假设的提出是直接从我们的思维转化的。 比如决定房价的方法就是不同的因素按照一定权重组合。最终得到这组最匹配数据的假设的好处是什么？  机器就可以自动做预测了。 我们不再需要房产专家， 我们用有限驾驭无限。 因为你用来得到这个假设的是你收集的有限的数据， 而你要预测的是无限的情况。&lt;/p&gt;

&lt;p&gt;现在我们来说如何求得这个假设， 或者说最佳参数， 这个过程通常称为训练。训练用一句话总结，就是在错误中改进和学习， 假定你是一个房价预测元， 你的评估也许开始是按照自己的经验来是房子的面积比较重要还是地点比较重要， 但是之后他很快被上级打的一塌糊涂，之后在一步步调整权重。机器，也是一样， 我们要写一个程序，模拟小孩挨揍学习的过程。&lt;/p&gt;
&lt;p&gt;和人学习的过程不同的是， 我们要从统计的角度， 设计一个自动调节的过程，之前所说的，机器学习模型就是一个框架，我们开始选择的假设（参数）一定是错误的， 而每个数据， 都按照给定的算法一步步的调整模型， 最终得到正确的算法。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4856687898089172&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaah0xvfbyOwrm6c3TsCOH80ctVxjecUhbKRUGlc28sDFIeA9sDHoK4yg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;628&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们来看如何得到这样一个训练算法， 首先， 你会发现由于我们手里有很多特征， 很容易找到一组参数得到完全准确的价格， 假定你有一个待回归的， 有三个特征， 每个特征都有对应的权重，从无数个特征对应权重的组合中找出对数据拟合最好的那个，就是我们的目标 。你也许会说， 这不就是解n元一次方程组吗， 比如你有三个数据，三组特征， 这就是一个三元一次方程组， 然后只要是符合一定条件， 它是有唯一解的。 但你手里不可能只有三个数据， 假定你有几十个几百个特征， 你的数据通常是这个特征的若干倍， 你只基于某几个数据求得的精确解一定会死的很惨。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;机器学习训练的根本思维方法就是，我要根据所有的数据求解， 而使得所有数据都拟合的解一定不存在，我要做的是，首先量化模型造成的错误， 然后， 让这个错误最小， 这就是优化的思维。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;首先说说量化错误， 记住， 我说的统计的观点， 我们必须针对全体数据衡量这个模型的错误， 这个东西， 通常叫cost function， 你可以理解为由于模型较差引起的花销， 或者是一笔罚款。 在这里， 我们可以把它简单定义为所有数据点预测误差的平方和。&lt;/p&gt;

&lt;p&gt;一个要牢牢记住的观点是cost函数是参数的函数， 而不是特征的函数， 记得刚讲过的我们的预测由特征决定的吗？ 这里， 我们的代价函数确是由参数决定的， 对应每一个参数， 或者每个假设， 它由一个值。 那些比较符号真实的假设，这个值就越低。你要找的那个模型， 就是错误最少的， 就是最接近真实的。 你可以用只有一个参数的情况做个实验，这个时候我们得到一个抛物线， 最优解就是那个初中你就会算的抛物线的谷底。 这， 就是最优点，在这里， 你就走上了人生巅峰。&lt;/p&gt;

&lt;p&gt;寻找这个人生巅峰（谷底）的方法由很多， 这就是数学里的优化理论。 如果你是一个傻子， 你可以用遍历的方法找 ， 也就是把所有情况试一遍， 人生不值得，这是一个很值得的事情。 但是， 如果你要讲点效率， 通常我们会换个思维。 ，实际操作中的方法称为梯度下降， 这个想法的核心是， 我不知道那个人生巅峰在哪里， 但是我知道当下每一步我能够做的最好的事情，就是沿着让我自己的cost代价函数下降最快的方向走一步， 就如同水总要向低留，而不是反过来。具体走多远， 步子不要太大别把巅峰给错过了， 也不要太小走的太慢了， 具体自己调一下。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7326732673267327&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaa8dEibPqvJ8yGMa2sbZNNKfQSsLpwVSZ6Er7icIqBSE1BGriasgDB9d1dg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;303&quot; /&gt;&lt;/p&gt;
&lt;p&gt;好了， 假定我们已经在这个人生巅峰， 你觉得是不是万事大吉了呢？ 有没有一种可能， 是你的数据误导了你， 你发现海淀的房价很低， 但是事实上你手里只有一个海淀的数据 ， 而这个房子还是凶宅呢？ 这个闹鬼的屋子导致它的价格异常的低， 结果海淀区这个特征被学到了一个极低的房价， 你还自以为你处在人生巅峰。一旦换了下一个五道口的房子， 你就输惨了。&lt;/p&gt;

&lt;p&gt;你的模型很强大， 它可以抓住海淀这个特征， 但是恰恰数据有问题， 结果， 你被舞蹈， 这个现象， 构成一个机器学习的核心概念， 过拟合。 它所引出的， 是机器学习和简单的函数拟合的根本区别， 机器学习要的不是最好的拟合一条线， 而是举一反三的泛化能力。 &lt;/p&gt;

&lt;p&gt;如果你拟合的很好， 而在新数据面前变成弱鸡， 那就一定不是好模型。过拟合最好的例子是星座， 比如你认为有几个星星， 你就想出这像一个大熊。 事实上它可能还是仙鹤， 还是汽车。 无论哪个， 你的观测都不至于让你推断它真的和任何一个动物神似， 你确偏偏从这极少的数据中推到一个结论。 可以想象的是， 如果这些星星真的是某个动物的一部分， 你从这里得到的模型换一组星星一定错 。如果说机器学习预测是模式识别， 过拟合就是一种走火入魔， 从噪声里读出了模式。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4743935309973046&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaxArQJKsUsmRia566PJAUxBib1r8XuEJHiaG0qr5cMQbv4Q2ficsPyk9jyw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;371&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这也告诉我们数据的重要性， 要不你的数据很干净， 没有那些鬼屋一类的脏数据。要不，就是你的数据很多， 有几个脏数据会被很多的好数据纠正。 当然我们也可以从模型角度入手，让它更聪明的去除噪声。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;二 做分类的几种方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;分类和回归的区别仅在于预测的数据类型不同， 一种预测的目标是如价格， 人的身高， 国家GDP这种连续的值，后一种通常是预测类别，比如男人女人， 有病没病。 但是在数学上这会造成很大的区别， 所以被分入到两个大类里面。&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;如果你翻开机器学习的字典， 分类问题独具鳌头， 几乎占领了大部分算法的席位。为什么分类如此重要， 依然类比人类的智能， 我们日常生活中， 大部分都在做是和否的判断，一个东西能不能吃， 一个地方能不能去，  这些大大小小的判断， 都可以看作是分类问题。 因此， 掌握分类， 也成为让机器掌握智能的关键。&lt;/p&gt;

&lt;p&gt;设想一个最简单的问题， 莫过于分辨物体， 一个机器学习特别俗套的问题就是分辨鸢尾花儿， 这种十分美丽的植物有很多品种但都相似，有一个著名的植物学家收集了所有这类花的数据，然后构建了一个数据集， 这个数据集后来被机器学习专家用作了一个经典的试验所， 你像做一个自动的分类器， 就先拿它来试。  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.576837416481069&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaZFudKl24IaVcbzt27AqqEDR6P4A9VIF5lgIXvHdpuicmpBjQfjyBYsQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;449&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果让你构建这样一个分类器， 什么是第一要素呢？ 刚刚我们讲了模式隐藏在特征之中， 与你预测相关性越高的那些特征作用就越大。  此处， 构建分类器的第一步也就是抓取关键特征， 当然这一步已经被植物学家完成， 一般来说， 这类花最大的分别度在于花瓣和萼片的长度， 这也正是植物学家要提取的特征。 大家注意这一步是传统机器学习的关键， 在深度学习以前， 它决定了学习的成败， 而特征提取， 也特别需要专业知识。  &lt;/p&gt;

&lt;p&gt;好了， 有了关键特征， 我们如何进一步让机器来辨识花儿？ 想象下人的情况， 你最常用的思维方法是什么？ 做比较！ 我要预测华清嘉园的房子价格， 你最可能做的是看看旁边和它差不多的展春园的价格怎么样， 就可以估测的八九不离十。 &lt;/p&gt;

&lt;p&gt; 那么机器也是一样的 我们完全可以寻找那些和我目前数据最相近的数据，然后由它们确定我的数据的类别。 这个方法， 就是机器学习的KNN-K最近邻法。 当然，我们这里所说的最近， 不是那个地理的最近， 而是特征空间里得最近。说到近， 就要有距离的概念。 我们可以用初中学习的勾股定理计算欧式距离， 也可以用其它非常多的距离计算方法。比如拿两个特征得情况， 这个时候， 我们有一个特征平面， 那个这个距离就和我们所说的平面上两点的距离没有区别。总之， 你要量化这个数据间的差别大小 ， 然后， 就可以通过距离做预测。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.841726618705036&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaa6LRO9hja2Gob8X4ehShLNM2BeOGOllY6qA3uicSfFXG18lQGFpgiaZnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;278&quot; /&gt;&lt;/p&gt;

&lt;p&gt;金融投资在评估企业价值的时候有一个价值比较法。首先， 你要得到一组决定公司估值的特征， 然后， 你要按照这个特征公司放到这个空间里， 最后，寻找与你要估值公司最近的公司经过一系列校准进行估值。&lt;/p&gt;

&lt;p&gt;KNN依然可以用于分类，也可以用于回归。 只要你有足够多的数据点， 而且特征不太多， 就不可以用。 为什么说特征不太多呢？ 因为你我都不擅长思考高维空间的几何。 但是数学家可以证明， 在极高维度的空间里， 随着数据变的稀疏，距离这个概念并不是特别有用， 因为大家的距离其实都差不多。&lt;/p&gt;

&lt;p&gt;这个时候， 建立在距离之上的KNN就没有那么好用了。  但是这样的例子实际上非常之多， 尤其是在自然语言识别上。比如一类经典的问题就是考证一些经典的作者：&lt;/p&gt;

&lt;p&gt;1787年5月，美国各州（当时为13个）代表在费城召开制宪会议；1787年9月，美国的宪法草案被分发到各州进行讨论。一批反对派以“反联邦主义者”为笔名，发表了大量文章对该草案提出批评。宪法起草人之一亚历山大·汉密尔顿着急了，他找到曾任外交国务秘书（即后来的国务卿）的约翰·杰伊，以及纽约市国会议员麦迪逊，一同以普布利乌斯（Publius）的笔名发表文章，向公众解释为什么美国需要一部宪法。他们走笔如飞，通常在一周之内就会发表3-4篇新的评论。1788年，他们所写的85篇文章结集出版，这就是美国历史上著名的《联邦党人文集》。&lt;/p&gt;

&lt;p&gt;《联邦党人文集》出版的时候，汉密尔顿坚持匿名发表，于是，这些文章到底出自谁人之手，成了一桩公案。1810年，汉密尔顿接受了一个政敌的决斗挑战，但出于基督徒的宗教信仰，他决意不向对方开枪。在决斗之前数日，汉密尔顿自知时日不多，他列出了一份《联邦党人文集》的作者名单。1818年，麦迪逊又提出了另一份作者名单。这两份名单并不一致。在85篇文章中，有73篇文章的作者身份较为明确，其余12篇存在争议。&lt;/p&gt;

&lt;p&gt;像这样一个问题， 在没有机器学习的时代， 可以耗费一个考据学家10年20年也不一定能有结果。 但是用机器学习一个叫朴素贝叶斯的方法， 就可以解开。（参考&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651384272&amp;amp;idx=1&amp;amp;sn=ea54b08f3493f367a0ac029cd70d363a&amp;amp;chksm=84f3c791b3844e87d15170cee081f3df8042b8515c7707fde7fcc6160500c540892d80869051&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;贝叶斯推理实用入门&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;我们来看这个方法是怎么样的，首先， 不同的作者写作风格的差异很大体现在用词上， 因此， 我们可以找到一组两个作者都会使用但是和使用频率不同的关键词作为特征。 我们可以想象， 这个特征的数量很大。  然后， 我们可以统计在作者身份明确的稿子里这些词出现的频率，  已经身份明确的稿子的总量有了这个信息后。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4299835255354201&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaiaEM24pvFywdyKwIhQdv7olvWUPTDZicQYdfMLAFYWYzsjuicRCay9EpQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;607&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们就可以展开贝叶斯公式， 直接计算某个稿子是某人的概率， 当然， 这里出现了一组包含很多特征的条件概率， 朴素贝叶斯的核心， 就是假定特征之间是独立的吗， 这样，我们就可以展开成概率连乘的形式， 在这个连乘的形式里，我们看到了我们刚刚计算的那些频率， 如此， 我们就可以直接计算出谋篇未知文章的概率。 神奇的是， 朴素贝叶斯可以对一些从未出现过的特征组合做预测，只要那些特征之前出现过就好。&lt;/p&gt;

&lt;p&gt;关于多个特征下的分类， 事实上最常用的方法是一大类被称为树模型的家族， 而最基本的称为决策树。 它能体现好几个人类理性的基本要素。&lt;/p&gt;

&lt;p&gt;决策树是一个极为典型的模拟人类逻辑的思路，简单的说， 决策树就是分而治之。按照特征把事物分成很多小组，然后对所有的情况分开判断， 如果A符合某条件就是是， 不符合就是否。我在简史课里给大家讲过这个分而治之最大的问题是要列举的可能太多了， 假定你有N个特征， 每个特征两个情况，你就有2的N次方个组合的情况， 要做到天网恢恢疏而不漏， 那得看到什么时候。&lt;/p&gt;

&lt;p&gt;而决策树得核心智慧， 就是优先级算法， 虽然特征很多， 但是并不是每个特征都一样重要， 我们如果先按照最重要得特征进行判断， 依此往下， 你可能不需要2得N次方个情况， 而是按照树结构做N次判定即可。 优先级， 也是人类智慧得核心，事实上， 我们永远在抓轻重缓急，在抓主要矛盾， 无论是有意的还是无意的，当然大部分人的轻重缓急是按照时间来的，时间比较近的就是比较重要的， 这也是为什么很多人有拖延症。 &lt;/p&gt;

&lt;p&gt;很多人说到优先级算法很想到相亲， 其实这也是一种人类思维自然使用的决策树， 比如女生找男朋友通常心理都有一个优先级构成的树， 首先， 对方的年龄多大？ 如果对方年龄大于50岁直接pass， 然后看工资，如果工资小于20万直接pass，工资在20和30万间看下学历， 学历小于本科直接pass。 这其实就是一个决策树的结构。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8430034129692833&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaabKGCsJ6hExKoRjMDqiaM4orECfEQkF4qHCD7BIMmAJN3QM3dGiaV92Xw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;586&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那么从机器算法的角度看，算法是完全类似的， 你可以把整个问题看成一个树，树的根部是你选择的第一个特征， 更好的角度是把特征看成一个问题，树的根部是你要问的第一个问题， 根据这个问题的回答， 数据会在左边右边分成两组。 然后在每个答案的基础上， 你继续问下一个问题， 所谓的决策树的分叉， 每个枝杈就是一个新的问题。 如此，就会形成一个树的结构。&lt;/p&gt;

&lt;p&gt;构建这个树的主要难点， 在于要由机器决定哪个问题先问， 哪个问题后问， 如何选择这个优先顺序？ 这我们又回到数学物理一个古老而重要的概念 – 信息。 记得我说的信息是特征与预测的相关性吗？  这里， 同样的套路换一个思路， 那就是， 你每增加一个问题，我的预测从模糊变得清晰了吗？ 变清晰了多少？ 如果你是一个人的话，就是你比先前更肯定了多少？ 变得清晰的越多， 变得肯定的越多， 这个问题就是能够给我们带来更多的信息。 能够增加最多信息的特征，就是优先特征。 我们可以做一个思想实验，还是人们用举决策树相亲的例子， 假定你要找一个男生，  告诉你它不会做菜， 这个一般情况下， 对你判定要不要见他影响不大，因为大部分男生都不会做菜 ，而且一般你也都会叫外卖。它在数字上的表现是什么？ 就是来了10个男生，5个被你pass， 5个被你保留， 但是两边的人里做菜的数量和不会做菜的数量都差不多。 &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5601023017902813&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaavkhg8fEGAZehbFMdbbPD7ia4ewO4ImZ2MJP62OyahaY0UnUNhHPEW7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用数学的角度看， 这就是信息熵， 你问了这个问题， 信息熵不变，这就是一个很糟糕的问题。而如果你问的是年龄呢？ 年薪呢？ 显然两边的yes or no的比例会非常不同。  因此，年龄或年薪带来的信息增益就更多。 建立决策数的一种经典方法所谓ID3， 就是把描述的这些变成程序了。刚刚说的过程非常容易的称为一个迭代的过程。 迭代的起点是哪个信息量最大的问题也就是父问题， 然后， 根据回答的yes or  no把样本分堆， 每个堆里会出现一个最终预测标签的分布， 根据同样方法选择子问题， 在子问题之下样本继续分堆， 预测标签重新分化， 我的要求就是， 每一次分化， 结果的分布都更纯净， 每个问题回答的yes or no下， 都是同一个标签。 最终达到稳定后过程停止。   &lt;/p&gt;

&lt;p&gt;这样形成的决策树， 我们会形成任何一个情况下的优先级。 或许长的帅的人工资不重要。 或许学历高的人年龄不重要。 这种不同情况不停调整优先级的思维， 真的是被决策树利用到了极致！ 从原始数据里提炼的决策树， 可以对无限的新情况进行预测。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;三 降维与聚类&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我们刚刚讲过的几种简单的回归与分类方法， 事实上都建立在一个基础上， 就是你的数据必须包含连个部分， 一部分是特征， 一部分是预测对象的值。 这对于数据的要求其实还挺严格的。 但是， 如果我手里拿到一大批数据， 但是这批数据偏偏没有要预测的值呢？ 我们是不是就无能为力了呢？  不是这样的，   还是以刚刚的房价数据为例， 如果我把那些房子的价格都抹掉， 你可以做什么呢？&lt;/p&gt;

&lt;p&gt;事实上，机器学习模型依然可以帮助你发现数据的内在结构。 即使这些结构不能帮助你预测价格， 却可以对你产生重大的启示。&lt;/p&gt;

&lt;p&gt;还记得我们刚刚说过的那个问题， 现在的数据经常具有非常多的特征， 我们称之为高维吗？  但是你要知道， 真实的数据里通常没有那么大的信息量。 比如刚刚的房价数据， 你看到的那个车库的面积其实和房屋的总面积是高度正相关的， 这就说明， 信息里存在大量冗余。 这种冗余信息， 有时候对你分析和理解数据没有好处。&lt;/p&gt;

&lt;p&gt;我们会介绍一个方法叫PCA。什么是PCA？ PCA- 其名称 principle component analysis 就是一种能够从高维度数据里提取信息的方法。PCA让我们假设数据的特征分布符合高斯分布，但是特征不是独立的，而是存在大量线性相关的特征， 线性相关的特征使得数据的表现维度高于真实维度， 这将加深维度灾难，使得训练缓慢。&lt;/p&gt;

&lt;p&gt;你想把这些冗余数据去掉， 你想给老板画出一份漂亮的数据分析报告， 直接告诉它数据里的那些特征是最主要的， 或者你想把一些比较表面的特征化城一个更本质的合成指数，比如房屋综合质量指数？  这时候， 我们可以用PCA。PCA， 其实做的是一个坐标变换， 把线性相关的特征合成一个， 重新合成一组正交的特征。听着有点晕，可以画图看一下。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.420863309352518&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaLHhOCZoFOiaNGUa05L0VgGpI5nPBvSM46cO0JSZXkHJrsib9lhBnzbvw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们知道，要显示两个不同的特征是否线性相关的做法一般是求解其谐方差， 如果我们所有特征的两两相关系数放到一个矩阵里，这个时候得到一个矩阵叫谐方差矩阵， 这已经是对我数据内部的相关性的最好的表示。我们知道，要抽取一组特征里的相关性。&lt;/p&gt;

&lt;p&gt;我们想象，如果把特征看成一个向量空间，我们第一段描述的那个事情，无非是要找到那么一组基底，让原来的数据在新的空间里线性无关，换句话也就是说原来的数据在经过一个线性变换后， 数据可以被投影到一组正交的特征上， 新的特征之上， 每个特征尽量独立。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.8561643835616438&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaakzcL5LP9gWrvCg6hGGYH0owHIdvwQkSjRDQeX4y1tGibNAWicAQpiaZGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;438&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;这里我给我们的PCA流程加入一个细节， 就是在求解特征根前不仅要减去均值，还要让每个方向的方差值相等，也就是说， 进入处理之前得到的矩阵对角线是相等的。这个过程叫做归一化，归一化对我后面要说的一件事至关重要。&lt;/p&gt;

&lt;p&gt;我们得到的这个E矩阵是个对角阵，每个值代表的是新特征的方差， 我们把方差从大到小排列，并且重整其特征向量的顺序得到最终的坐标变换矩阵。那么我要问大家，为什么一开始的特征方差是相等的，而后面不同不同了？正是因为存在线性相关的特征，而新的特征进行了特征的重组之后把线性相关的特征进行了重新组合，使得原先均等的方差变得不等了， 你可以理解为如果存在大量变化趋势相同的更向量，使得数据的方差在某个放向加强， 比如说在一个股市大盘里很多股票是正向关联变化的， 这样的方向我们通常称之为主成分。排在头上的特征又被称作第一主成份。 如果是股市，我们可以想象为它是引领股市变化的板块。&lt;/p&gt;

&lt;p&gt;如果我们的数据是很多篇文章，每个文章是一个数据点，特征是一组关键词在文章的频率， 如果我们做这样一个PCA的工作， 就会实现对一些类似文章中常出现的文章被聚集在一个新特征上。新特征就是这样类似单词的组合， 每个新特征， 都代表了一系列文章。 比如政治类很可能被聚成一类， 而其它也如此。   &lt;/p&gt;

&lt;p&gt;PCA的本质，就是寻找数据内的冗余维度， 一言以蔽之， 就是找核心矛盾。 在众多特征里找到最重要的特征。 PCA可以实现对复杂特征的降维处理，大家注意， 这也是我们接触的第一个无监督算法。因为你的数据无需包含你要预测的变量， 比如刚刚说的文章的例子， 你并不需要有文章类别有关的信息，PCA还是可以帮你把你数据库的主成分抓出来。&lt;/p&gt;

&lt;p&gt;因此用PCA你也可以实现压缩， 比如你电脑里的电影，大型游戏，和照片，大多存储称为JPDEG压缩格式， 它们的本质其实也是降维， 把原始数据格式的照片， 用一套新特征，给编码出来， 这套新特征， 比之前的数据要少很多， 但是保持大部分信息。由于保存了大部分信息， 你打开一张Jpeg照片和原始格式照片并不能区分很大。  &lt;/p&gt;

&lt;p&gt;而PCA，则是一个最简单的压缩方法。 在刚说的机器学习方法里，压缩了的数据往往更加好用， 这里面教给我们的， 一个是数据不等同于信息，你的数据量大， 不一定信息就多， 事实上数据的维度表现很高， 而真正的信息其实往往没有那么多维度。 而以PCA为代表的降维工具， 就是让我们实现这种对信息的浓缩， 让我们节省大量计算机硬盘还是我们大脑资源的同时， 得到最难主要的信息。&lt;/p&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;  当你手里的数据特征太多维度灾难发生的时候，你的电脑根本跑不动，这个方法就十分有用。一类是你缺乏带标注的数据， 这种情况十分常见， 因为数据的标注是最昂贵的， 这种昂贵的情况最好的解决方法就是先用没有标注的数据提取它的信息。 而无监督学习是极好的工具。用PCA对大量无标注信息做训练， 然后得到的新特征用于少量标注数据的有监督学习，会省掉不少麻烦。&lt;/p&gt;

&lt;p&gt;大家注意任何模型的都是都是错的，有些是有用的。 什么时候有用， 取决于我们的假设。 我们对PCA的假设是数据符合高斯分布， 当然，实际中数据可能不符合这种假定， 但并不代表模型不能用， 因为所有模型都是错的， 只是它的有用性会打个折扣。&lt;/p&gt;

&lt;p&gt;降维不仅在机器学习里， 而且在日常生活里是一个重要的思维方法，人脑能够处理的信息量极少，降维，抓住主要矛盾，所谓擒贼先擒王，是人生的制胜法宝。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5613496932515337&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/dcEP2tDMibcd3X73dGgQfQzyy1j7xsBaaftS9fTsePiavicX2RYCkt0CtRdLVaNLa4oBI3mq8BjO78UpaXVXM82LQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;978&quot; /&gt;&lt;/p&gt;


&lt;p&gt;最后提一句聚类，所谓聚类算法， 也是在没有预测标签的时候我们可以玩的一个方法， 只不过， 这个时候我们是要根据特征的相似度， 把数据分成一撮一撮的， 说不定， 这样我们就可以发现一个新物种， 或者一个具有特别商业价值的客户群。这里常用的方法K-means也是基于数据点在特征空间上距离的，类似之前提到的KNN。先随机给出K个簇的中心点，再一步步的根据数据调整当前的中心簇的位置，从而使数据能够分开。&lt;/p&gt;

&lt;p&gt;更多阅读&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzQwNzI3OA==&amp;amp;mid=2651384253&amp;amp;idx=1&amp;amp;sn=ae80db08ac2b72167a6ea07d9ec05ac9&amp;amp;chksm=84f3c7fcb3844eeaceee8b6e8744480df7faef7792ae05f0f8745ffbedd5b0a0c99b8deb3da1&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;与不确定性作战-从物理模型到特征提取&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;




</description>
<pubDate>Sun, 07 Apr 2019 03:52:44 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/EXOKZtMJtK</dc:identifier>
</item>
</channel>
</rss>