<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>OpenCV开发笔记（七十三）：红胖子8分钟带你使用opencv+dnn+yolov3识别物体 - 红胖子(红模仿)</title>
<link>http://www.cnblogs.com/qq21497936/p/13882661.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qq21497936/p/13882661.html</guid>
<description>

&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;  级联分类器的效果并不是很好，准确度相对深度学习较低，上一章节使用了dnn中的tensorflow，本章使用yolov3模型，识别出具体的分类。&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  320x320，置信度0.6&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151202927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjE0OTc5MzY=,size_16,color_FFFFFF,t_70#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;  608x608，置信度0.6（.cfg里面是608）&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151147907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjE0OTc5MzY=,size_16,color_FFFFFF,t_70#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151144451.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  opencv3.4.x支持了各种模型。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;支持的模型&lt;/h2&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;h2&gt;操作步骤：yolov3&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;  不同深度学习框架产生的模型，在操作上和数据输出上有一些区别。梳理下opencv使用tensorflow训练好的模型的使用步骤。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;步骤一：读取分类文件&lt;/h3&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;  模型文件对应了不同的分类文件，分类文件是以行为标识，所在的行数（0开始），就是最终识别出的分类号的第几个分类。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code&gt;std::string classesFile = &quot;E:/qtProject/openCVDemo/dnnData/&quot; \
                    &quot;yolov3/coco.names&quot;;
// 读入分类名称，存入缓存
std::ifstream ifs(classesFile);
std::vector&amp;lt;std::string&amp;gt; classes;
std::string classLine;
while(std::getline(ifs, classLine))
{
    classes.push_back(classLine);
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;步骤二：加载模型和配置文件，建立神经网络。&lt;/h3&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;  根据不同的模型，使用cv::dnn::readNetFromXXX系列函数进行读取，opencv3.4.x系列支持的dnn模型（支持模型往上看）。&lt;br/&gt;  yolov3模型如下：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code&gt;std::string modelWeights = &quot;E:/qtProject/openCVDemo/dnnData/&quot; \
                       &quot;yolov3/yolov3.weights&quot;;
std::string modelCfg = &quot;E:/qtProject/openCVDemo/dnnData/&quot; \
                       &quot;yolov3/yolov3.cfg&quot;;
// 加载yolov3模型
cv::dnn::Net net = cv::dnn::readNetFromDarknet(modelCfg, modelWeights);
if(net.empty())
{
    qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; &quot;net is empty!!!&quot;;
    return;
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;步骤三：将要预测的图片加入到神经网络中&lt;/h3&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;  加入之后，需要识别图片，那么需要把图片输入到神经网络当中去，使用yolov3模型特别注意，要先进行归一化，然后变成指定大小的图片，如下：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;20&quot;&gt;
&lt;pre&gt;
&lt;code&gt;// 读取图片识别
mat = cv::imread(&quot;E:/testFile/15.jpg&quot;);
if(!mat.data)
{
    qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; &quot;Failed to read image!!!&quot;;
    return;
}
//    cv::dnn::blobFromImage(mat, blob);
//  必须要设置，否则会跑飞
cv::dnn::blobFromImage(mat,
                     blob,
                     1.0f/255,
                     cv::Size(320, 320),
                     cv::Scalar(0, 0, 0),
                     true,
                     false);
net.setInput(blob);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;  宽度高度增加可以提升检测的准确度，最好是根据cfg文件进行修改，本Demo是320x320，实际.cfg文件中的是608x608，并且经过测试，这个是识别效果最好的像素，大于608则会跑飞。&lt;br/&gt;  &lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151620787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjE0OTc5MzY=,size_16,color_FFFFFF,t_70#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;步骤四：分类预测，获取识别的结果&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;  输入之后，就进行识别，识别是向前预测（分类预测），并且拿到结果，对于yolov3模型，规定了有3个输出层，所以需要先获取3个输出层，然后预测的时候就需要指定预测这3个输出层，否则会跑飞。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code&gt;// 获取输出的层
std::vector&amp;lt;cv::String&amp;gt; outPutNames;
std::vector&amp;lt;int&amp;gt; outLayers = net.getUnconnectedOutLayers();
for(int index = 0; index &amp;lt; outLayers.size(); index++)
{
    outPutNames.push_back(layerNames[outLayers[index] - 1]);
    qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__
    &amp;lt;&amp;lt; QString(layerNames[outLayers[index] - 1].c_str());
} 
// 推理预测：可以输入预测的图层名称
std::vector&amp;lt;cv::Mat&amp;gt; probs;
net.forward(probs, outPutNames);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8.7558139534884&quot;&gt;
&lt;p&gt;  对于预测的结果，存于std::vector&lt;a&gt;cv::Mat&lt;/a&gt;类型的probs，每一个元素指定为cv::Mat类型的prob，每一行代表一个检测到的分类，具体列信息如下表：&lt;br/&gt;  &lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151637858.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;  （注意：具体的使用，请参照“步骤五”）&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;步骤五：对达到置信度的可以通过输出的mat进行分类和框选&lt;/h3&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  关键的输出结果步骤，不同的识别有区别，yolov3如下图：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;code&gt;// 置信度预制，大于执行度的将其使用rect框出来
for(int index = 0; index &amp;lt; probs.size(); index++)
{
    for (int row = 0; row &amp;lt; probs[index].rows; row++)
    {
        // 获取probs中一个元素里面匹配对的所有对象中得分最高的
        cv::Mat scores = probs[index].row(row).colRange(5, probs[index].cols);
        cv::Point classIdPoint;
        double confidence;
        // Get the value and location of the maximum score
        cv::minMaxLoc(scores, 0, &amp;amp;confidence, 0, &amp;amp;classIdPoint);
        if(confidence &amp;gt; 0.6)
        {
            qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; confidence &amp;lt;&amp;lt; classIdPoint.x;
            int centerX = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 0) * mat.cols);
            int centerY = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 1) * mat.rows);
            int width   = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 2) * mat.cols);
            int height  = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 3) * mat.rows);
            int left = centerX - width / 2;
            int top = centerY - height / 2;
            cv::Rect objectRect(left, top, width, height);
            cv::rectangle(mat, objectRect, cv::Scalar(255, 0, 0), 2);
            cv::String label = cv::format(&quot;%s:%.4f&quot;,
                                          classes[classIdPoint.x].data(),
                                          confidence);
            cv::putText(mat,
                        label,
                        cv::Point(left, top - 10),
                        cv::FONT_HERSHEY_SIMPLEX,
                        0.4,
                        cv::Scalar(0, 0, 255));
            qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__
                    &amp;lt;&amp;lt; centerX &amp;lt;&amp;lt; centerY &amp;lt;&amp;lt; width &amp;lt;&amp;lt; height;
        }
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
&lt;h2&gt;读取yolov3模型与配置文件函数原型&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code&gt;Net readNetFromDarknet(const String &amp;amp;cfgFile,
                      const String &amp;amp;darknetModel = String());
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  从文件中读取。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;ul&gt;&lt;li&gt;参数一：带有网络体系结构文本描述的.cfg文件的路径；&lt;/li&gt;
&lt;li&gt;参数二：已学习网络的.weights文件的路径；&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;读取图片（需要识别的）函数原型&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;15&quot;&gt;
&lt;pre&gt;
&lt;code&gt;void blobFromImage(InputArray image,
                  OutputArray blob,
                  double scalefactor=1.0,
                  const Size&amp;amp; size = Size(),
                  const Scalar&amp;amp; mean = Scalar(),
                  bool swapRB=false,
                  bool crop=false,
                  int ddepth=CV_32F);.
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  从图像创建区域。可选择从中心调整和裁剪图像。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;ul&gt;&lt;li&gt;参数一：图像输入图像（1、3或4通道）；&lt;/li&gt;
&lt;li&gt;参数二：输出的图像空间；&lt;/li&gt;
&lt;li&gt;参数三：图像值的缩放因子乘数；&lt;/li&gt;
&lt;li&gt;参数四：大小输出图像的空间大小；&lt;/li&gt;
&lt;li&gt;参数五：从通道中减去平均值的平均标量。价值是有意的，如果image有BGR顺序，swapRB为真，则按（mean-R，mean-G，mean-B）顺序排列；&lt;/li&gt;
&lt;li&gt;参数六：swapRB标志，指示交换第一个和最后一个通道，在三通道图像是必要的；&lt;/li&gt;
&lt;li&gt;参数七：裁剪标志，指示调整大小后是否裁剪图像；&lt;/li&gt;
&lt;li&gt;参数八：输出blob的深度，选择CV_32F或CV_8U；&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;设置神经网络输入函数原型&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code&gt;void cv::dnn::Net::setInput(InputArray blob,
                      const String&amp;amp; name = &quot;&quot;,
                      double scalefactor = 1.0,
                      const Scalar&amp;amp; mean = Scalar());
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  设置网络的新输入值。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;ul&gt;&lt;li&gt;参数一：一个新的blob。应具有CV_32F或CV_8U深度。&lt;/li&gt;
&lt;li&gt;参数二：输入层的名称。&lt;/li&gt;
&lt;li&gt;参数三：可选的标准化刻度。&lt;/li&gt;
&lt;li&gt;参数四：可选的平均减去值。&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;返回所有层的名称（按照本身的索引循序排列）&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;std::vector&amp;lt;String&amp;gt; getLayerNames() const;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;返回具有未连接输出的层的索引。&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;std::vector&amp;lt;int&amp;gt; getUnconnectedOutLayers() const;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;深度检测识别（向前预测）函数原型&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;void cv::dnn::Net::Mat forward(const String&amp;amp; outputName = String());
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;  向前预测，返回指定层的第一个输出的blob，一般是返回最后一层，可使用cv::Net::getLayarNames()获取所有的层名称。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;ul&gt;&lt;li&gt;参数一：outputName需要获取输出的层的名称&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;


&lt;div class=&quot;cl-preview-section&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;code&gt;void OpenCVManager::testYoloV3()
{
    std::string classesFile = &quot;E:/qtProject/openCVDemo/dnnData/&quot; \
                              &quot;yolov3/coco.names&quot;;
    std::string modelWeights = &quot;E:/qtProject/openCVDemo/dnnData/&quot; \
                          &quot;yolov3/yolov3.weights&quot;;
    std::string modelCfg = &quot;E:/qtProject/openCVDemo/dnnData/&quot; \
                           &quot;yolov3/yolov3.cfg&quot;;

    // 读入分类名称，存入缓存
    std::ifstream ifs(classesFile);
    std::vector&amp;lt;std::string&amp;gt; classes;
    std::string classLine;
    while(std::getline(ifs, classLine))
    {
        classes.push_back(classLine);
    }

    // 加载yolov3模型
    cv::dnn::Net net = cv::dnn::readNetFromDarknet(modelCfg, modelWeights);
    if(net.empty())
    {
        qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; &quot;net is empty!!!&quot;;
        return;
    }

    cv::Mat mat;
    cv::Mat blob;

    // 获得所有层的名称和索引
    std::vector&amp;lt;cv::String&amp;gt; layerNames = net.getLayerNames();
    int lastLayerId = net.getLayerId(layerNames[layerNames.size() - 1]);
    cv::Ptr&amp;lt;cv::dnn::Layer&amp;gt; lastLayer = net.getLayer(cv::dnn::DictValue(lastLayerId));
    qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__
             &amp;lt;&amp;lt; QString(lastLayer-&amp;gt;type.c_str())
             &amp;lt;&amp;lt; QString(lastLayer-&amp;gt;getDefaultName().c_str())
             &amp;lt;&amp;lt; QString(layerNames[layerNames.size()-1].c_str());

    // 获取输出的层
    std::vector&amp;lt;cv::String&amp;gt; outPutNames;
    std::vector&amp;lt;int&amp;gt; outLayers = net.getUnconnectedOutLayers();
    for(int index = 0; index &amp;lt; outLayers.size(); index++)
    {
        outPutNames.push_back(layerNames[outLayers[index] - 1]);
        qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ 
                 &amp;lt;&amp;lt; QString(layerNames[outLayers[index] - 1].c_str());
    }

    while(true)
    {
        // 读取图片识别
        mat = cv::imread(&quot;E:/testFile/15.jpg&quot;);
        if(!mat.data)
        {
            qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; &quot;Failed to read image!!!&quot;;
            return;
        }

//        cv::dnn::blobFromImage(mat, blob);
        // 必须要设置，否则会跑飞
        cv::dnn::blobFromImage(mat,
                               blob,
                               1.0f/255,
                               cv::Size(320, 320),
                               cv::Scalar(0, 0, 0),
                               true,
                               false);
        net.setInput(blob);
        // 推理预测：可以输入预测的图层名称
        std::vector&amp;lt;cv::Mat&amp;gt; probs;
        net.forward(probs, outPutNames);

        // 显示识别花费的时间
        std::vector&amp;lt;double&amp;gt; layersTimes;
        double freq = cv::getTickFrequency() / 1000;
        double t = net.getPerfProfile(layersTimes) / freq;
        std::string label = cv::format(&quot;Inference time: %.2f ms&quot;, t);
        cv::putText(mat,
                  label,
                  cv::Point(0, 15),
                  cv::FONT_HERSHEY_SIMPLEX,
                  0.5,
                  cv::Scalar(255, 0, 0));
        // 置信度预制，大于执行度的将其使用rect框出来
        for(int index = 0; index &amp;lt; probs.size(); index++)
        {
            for (int row = 0; row &amp;lt; probs[index].rows; row++)
            {
                // 获取probs中一个元素里面匹配对的所有对象中得分最高的
                cv::Mat scores = probs[index].row(row).colRange(5, probs[index].cols);
                cv::Point classIdPoint;
                double confidence;
                // Get the value and location of the maximum score
                cv::minMaxLoc(scores, 0, &amp;amp;confidence, 0, &amp;amp;classIdPoint);
                if(confidence &amp;gt; 0.6)
                {
                    qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__ &amp;lt;&amp;lt; confidence &amp;lt;&amp;lt; classIdPoint.x;
                    int centerX = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 0) * mat.cols);
                    int centerY = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 1) * mat.rows);
                    int width   = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 2) * mat.cols);
                    int height  = (int)(probs.at(index).at&amp;lt;float&amp;gt;(row, 3) * mat.rows);
                    int left = centerX - width / 2;
                    int top = centerY - height / 2;
                    cv::Rect objectRect(left, top, width, height);
                    cv::rectangle(mat, objectRect, cv::Scalar(255, 0, 0), 2);
                    cv::String label = cv::format(&quot;%s:%.4f&quot;,
                                                  classes[classIdPoint.x].data(),
                                                  confidence);
                    cv::putText(mat,
                                label,
                                cv::Point(left, top - 10),
                                cv::FONT_HERSHEY_SIMPLEX,
                                0.4,
                                cv::Scalar(0, 0, 255));
                    qDebug() &amp;lt;&amp;lt; __FILE__ &amp;lt;&amp;lt; __LINE__
                            &amp;lt;&amp;lt; centerX &amp;lt;&amp;lt; centerY &amp;lt;&amp;lt; width &amp;lt;&amp;lt; height;
                }
            }
        }

        cv::imshow(_windowTitle.toStdString(), mat);
        cv::waitKey(0);
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cl-preview-section&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;  openCVDemo_v1.65.0_基础模板_yolov3分类检测.rar。&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
&lt;h2&gt;入坑一：加载模型时候错误&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;p&gt;错误&lt;br/&gt;  &lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151957690.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;原因&lt;br/&gt;  模型文件加载错误。&lt;br/&gt;解决&lt;br/&gt;  检查文件是否存在，路径是否正确，模型文件是否能对应上。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h2&gt;入坑二：输入blob时错误&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;cl-preview-section&quot;&gt;
&lt;p&gt;错误&lt;br/&gt;  &lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151949876.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cl-preview-section&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;原因&lt;br/&gt;  预测的时候未输入参数，需要输入参数（注意：tensorflow未输入没有问题）。&lt;br/&gt;解决&lt;br/&gt;  &lt;img src=&quot;https://img-blog.csdnimg.cn/20201021151946802.png#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;


</description>
<pubDate>Tue, 27 Oct 2020 00:34:00 +0000</pubDate>
<dc:creator>红胖子(红模仿)</dc:creator>
<og:description>前言 级联分类器的效果并不是很好，准确度相对深度学习较低，上一章节使用了dnn中的tensorflow，本章使用yolov3模型，识别出具体的分类。 Demo 320x320，置信度0.6 608x6</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/qq21497936/p/13882661.html</dc:identifier>
</item>
<item>
<title>一笔订单，但是误付了两笔钱！这种重复付款异常到底该如何解决？ - 楼下小黑哥</title>
<link>http://www.cnblogs.com/goodAndyxublog/p/13882587.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/goodAndyxublog/p/13882587.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082649004-1691317989.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;封面送给我狗哥~&lt;/p&gt;
&lt;p&gt;Hello，大家好，我是楼下小黑哥~&lt;/p&gt;
&lt;p&gt;今天的文章我们接着上次的话题，继续聊聊支付系统异常解决办法。&lt;/p&gt;
&lt;p&gt;在上篇文章中「&lt;a href=&quot;https://mp.weixin.qq.com/s/0TQqA9GYlXvMkQfmlLy3Qg&quot;&gt;支付掉单异常解决方案&lt;/a&gt;」，我们主要提到的是支付过程中掉单的场景，用户明明付款成功，银行卡都扣款了，但是订单却还显示待付款。&lt;/p&gt;
&lt;p&gt;而在今天的文章中，我们将聊到重复付款的异常，即同一笔订单，扣了用户两笔钱。&lt;/p&gt;
&lt;p&gt;另外我们还将会提到另外一种异常，用户扣款成功，但是订单却支付失败的场景。&lt;/p&gt;
&lt;p&gt;以上两种异常对于被扣款的用户来讲，使用体验极差，自己多付了钱，订单却还不成功。所以如果不及时处理这两类异常，那就真的等着被投诉吧。&lt;/p&gt;
&lt;blockquote readability=&quot;5.5384615384615&quot;&gt;
&lt;p&gt;欢迎关注我的公众号：程序通事，获得日常干货推送。如果您对我的专题内容感兴趣，也可以关注我的博客：&lt;a href=&quot;https://studyidea.cn&quot;&gt;studyidea.cn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;重复付款异常&quot;&gt;重复付款异常&lt;/h2&gt;
&lt;h3 id=&quot;异常场景&quot;&gt;异常场景&lt;/h3&gt;
&lt;p&gt;重复付款异常一般常见于网银支付，微信支付，支付宝等这类需要跳转到一个支付网关页（网银支付），或者跳转到钱包 APP(支付宝、微信)，从而异步完成扣款的支付场景。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082649240-968119571.jpg&quot; alt=&quot;网银支付流程&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这种支付场景下，只能通过接受异步通知才能知道支付结果，我们一般将其称为异步支付。&lt;/p&gt;
&lt;blockquote readability=&quot;15.606060606061&quot;&gt;
&lt;p&gt;PS：有了异步支付，那么同步支付是什么？&lt;/p&gt;
&lt;p&gt;其实同步支付指的就是调用支付接口之后，就可以立刻返回支付结果的，比如银行卡类快捷/代扣等支付就是同步支付。&lt;/p&gt;
&lt;p&gt;当然也有一些奇葩的银行卡支付渠道，同步支付结果为受理成功，只能接受异步通知或者查询返回支付结果。&lt;/p&gt;
&lt;p&gt;由于银行卡支付需要返回明确支付结果，对于这类渠道只能内部设计将异步转为同步,感兴趣可以看下之前历史文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/0d4P0LAu_3AMgnollhEzvg&quot;&gt;架构设计|异步请求如何同步处理？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后台支付流程如下：&lt;/p&gt;
&lt;blockquote readability=&quot;2.8571428571429&quot;&gt;
&lt;p&gt;图片来自之前的文章:&lt;a href=&quot;https://mp.weixin.qq.com/s/l8KoQF1BsaGUMV8-6Ay7mw&quot;&gt;银行卡支付原理&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082649633-999170298.jpg&quot; alt=&quot;网关支付&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;为什么会发生重复付款？&quot;&gt;为什么会发生重复付款？&lt;/h3&gt;
&lt;p&gt;主要原因其实跟上次内部掉单异常一样，跟业务表设计有关。&lt;/p&gt;
&lt;p&gt;上次我们提到，支付系统主要表结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082649843-787372831.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这个表结构下，只要支付订单未成功，商户就可以重复使用其内部同一订单号调用支付接口。&lt;/p&gt;
&lt;p&gt;假设这样一个场景，用户在收银台支付时选择招行进行网银支付，当他点击支付之后，商户系统将会调用支付公司的网银接口。&lt;/p&gt;
&lt;p&gt;这时支付系统内部将会创建一笔支付单以及关联的渠道订单，并且调用招行系统的接口。&lt;/p&gt;
&lt;p&gt;然后用户的浏览器页面将会打开一个新页面，然后跳转到招行网站。&lt;/p&gt;
&lt;p&gt;这时如果此时用户再次在收银台点击支付，将会再次调用支付系统接口。这时候由于支付单已存在，所以仅仅会再创建一条渠道订单记录，并且调用招行系统的接口。这时用户的浏览器将会再次打开一个招行的网站。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果用户在两个招行网银页都完成支付，这时就发生了重复付款。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;上面这种场景看起来有点傻,但是真实用户操作真的会发生。除了这种，博客园上的小伙伴还提到这么下面这种情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082650091-99479569.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;解决办法&lt;/h3&gt;
&lt;p&gt;重复付款异常的主要的解决办法有两种，分为事前与事后。&lt;/p&gt;
&lt;p&gt;事前主要的目是尽可能防止用户重复付款，主要解决办法为优化付款页面，尽可能做好提示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一种优化方式，付款页面直接跳转到第三方/银行的网银页面，不要打开新的页面去跳转。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082650264-1951946928.gif&quot; alt=&quot;网银同步跳转&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这种方式可以防止用户误打开两个网银付款的页面，从而导致重复付款。&lt;/p&gt;
&lt;p&gt;但是这里会有一个问题，银行网银页面付款成功之后，用户如何知道其在商户侧订单状态也成功了？&lt;/p&gt;
&lt;p&gt;其实很简单，现在网银支付接口，一般都会有一个参数 &lt;strong&gt;return_url:同步跳转地址&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082650491-364220649.jpg&quot; alt=&quot;来自支付宝开发文档&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;只要在接口传入这个地址，当支付成功之后，页面最终就会跳转到这个传入的地址，商户侧就可以在地址显示订单是否支付成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082650641-2048104145.jpg&quot; alt=&quot;支付系统异常处理-同步跳转&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面我们提到，用户有可能会使用浏览器回退功能，跳转到支付页，从而导致重复付款。&lt;/p&gt;
&lt;p&gt;对于这种情况，我们可以在其回退支付页时，首先向后台查询这笔订单支付结果，如果已支付成功，那就直接显示成功页面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二种优化，对于这种重新打开一个页面跳转到银行网站，我们可以在页面加入弹窗提示，询问用户是否已支付完成。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082650798-1142876603.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;比如上面这种处理方式，当用户点击确认完成充值，可以马上向后台发起查询订单状态。&lt;/p&gt;
&lt;p&gt;下面来聊聊事后的解决办法，&lt;strong&gt;其实解决办法很简单，发起内部退款，将多余支付的一笔反向退款回去&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;支付系统内部可以有个定时任务，定时扫描支付单下有多条成功渠道订单的记录，然后选择将重复支付渠道订单发起退款。&lt;/p&gt;
&lt;p&gt;这种方式是支付公司系统内部的操作，不需要商户侧发起指令。&lt;/p&gt;
&lt;h2 id=&quot;订单失效异常&quot;&gt;订单失效异常&lt;/h2&gt;
&lt;h3 id=&quot;异常场景-2&quot;&gt;异常场景&lt;/h3&gt;
&lt;p&gt;这种场景一般常见于电商购物，秒杀等购物场景。当用户下单之后，页面将会开始倒计时，用户需要在有效期内支付成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082651009-1400620650.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;假设用户点击跳转到支付宝，但是其没有立刻支付，而是停留了很久，在订单最后一秒时间内完成了支付，但是这个时候订单早已因为时间到期而被自动取消。&lt;/p&gt;
&lt;p&gt;这样就发生用户扣款已经成功，但是订单却是失败或关闭的场景的。&lt;/p&gt;
&lt;p&gt;另外还有一种情况，用户在有效期内支付成功，但是因为网络、内部应用等问题，支付结果的异步通知过了很久才收到，这时内部订单的早因为时间到期而被取消。&lt;/p&gt;
&lt;h3 id=&quot;解决办法-2&quot;&gt;解决办法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;第一种解决办法，上送有效期给支付渠道。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般支付接口都会有一个支付有效期的字段，表明这笔支付最晚可以支付的时间。如果超时未支付，这笔支付将会被关闭。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082651175-1888380115.jpg&quot; alt=&quot;来自支付宝开发文档&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当然一般情况下，如果未上送，这个字段内部一般会有个默认的有效期，比如 3 天，这个时间就比较长了。&lt;/p&gt;
&lt;p&gt;所以当调用支付接口时，可以将订单剩余有效期传入支付接口。这样用户如果在超时时间内未完成支付，支付将会失败。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二种解决办法，内部发起退款。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个解决办法依然事后托底的解决办法，对于支付订单已关闭，但是支付却成功的情况，发起内部退款，将钱退给用户。&lt;/p&gt;
&lt;p&gt;内部可以有个定时任务，定时扫描支付订单已关闭但是支付却成功的情况，然后发起退款指令。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;最后用思维导图方式帮大家总结一下支付系统可能会碰到的异常。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/other/1419561/202010/1419561-20201027082651334-28675286.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;历史支付系统相关文章&quot;&gt;历史支付系统相关文章&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://studyidea.cn/more-pay&quot;&gt;收款神器！解读聚合收款码背后的原理|原创&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://studyidea.cn/offline-pay&quot;&gt;手机没网了，却还能支付，这是什么原理？|原创&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://studyidea.cn/barcodepay&quot;&gt;轻轻一扫，立刻扣款，付款码背后的原理你不想知道吗？|原创&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://studyidea.cn/articles/2019/08/26/1566790579930.html&quot;&gt;支付渠道路由系统进化史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://studyidea.cn/articles/2019/08/26/1566790305561.html&quot;&gt;从零开始设计对账系统&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote readability=&quot;5.5384615384615&quot;&gt;
&lt;p&gt;欢迎关注我的公众号：程序通事，获得日常干货推送。如果您对我的专题内容感兴趣，也可以关注我的博客：&lt;a href=&quot;https://studyidea.cn&quot;&gt;studyidea.cn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Tue, 27 Oct 2020 00:27:00 +0000</pubDate>
<dc:creator>楼下小黑哥</dc:creator>
<og:description>封面送给我狗哥~ Hello，大家好，我是楼下小黑哥~ 今天的文章我们接着上次的话题，继续聊聊支付系统异常解决办法。 在上篇文章中「支付掉单异常解决方案」，我们主要提到的是支付过程中掉单的场景，用户明</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/goodAndyxublog/p/13882587.html</dc:identifier>
</item>
<item>
<title>程序员如何利用技术管理技巧 - pointersss</title>
<link>http://www.cnblogs.com/pointers/p/13882517.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pointers/p/13882517.html</guid>
<description>&lt;p class=&quot;js_darkmode__0&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 10px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__1&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-size: 14px; font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;最近读了一本书《一分钟经理人》，是肯·布兰佳与斯宾塞·约翰逊合著的一部管理学著作，觉得挺受用的，里面都是干货。用讲故事的方式，通过不同的人物来讲不同的部分，有较强的代入感，易于理解，一般的管理类书籍会比较晦涩，难读是常态，这本书作者很好的解决了这个问题。讲的是怎样制定目标、赞美下属、批评下属。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__2&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 10px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__3&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-size: 14px; font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;如果你是管理者，如果遇到工作量巨大，而且无法抽身，如果你苦恼于如何调动员工的积极性，激发员工的执行力，如果你还不知道如何培养管理下属，我强烈推荐这本书。我将思维导图整理如下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/2186635/202010/2186635-20201027081426769-439775019.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;



&lt;p class=&quot;js_darkmode__4&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__5&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-size: 14px; font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;如果看不清可以公众号向我留言，我发送xmind源文件。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__6&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;

&lt;h2 class=&quot;js_darkmode__10&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;1. 内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt; &lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__12&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;一分钟目标包含了工作目标、衡量标准和完成期限，应该用一到两段说明白，读一遍大概花一分钟左右。而且遵循的是&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;80/20目标设定法则&lt;/strong&gt;。也就是说80%的成功是来自于20%的目标，即我们的关键任务——&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;可能一共只有3到6个工作目标&lt;/strong&gt;。当然这是针对不同的项目进行设定目标的。举一个例子：&lt;/span&gt;&lt;/p&gt;

&lt;h2 class=&quot;js_darkmode__17&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;2. 流程&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__19&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;一分钟目标的完成，需要如下几个步骤：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;list-paddingleft-2&quot; readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__20&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;共同制定工作目标，并清楚简洁的描述出来，明确好表现的标准是怎样的&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__21&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;每个目标都单独记录下来，用不超过250个字来描述，并且写下完成的期限&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__22&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;规定每天抽出几分钟时间，重温自己最重要的目标&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__23&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;鼓励他们用一分钟时间审视自己的表现，检查是否与目标一致。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__24&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;如果与目标不一致时，反思自己的表现，迅速调整&lt;br data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 class=&quot;js_darkmode__27&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;3. 优势&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__29&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;从流程中可以看出，这5个步骤是一个闭环。第一点优势：&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;目标明确，&lt;/strong&gt;制定目标是满足SMART原则的，具体可以参考我上篇文章《&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483745&amp;amp;idx=1&amp;amp;sn=771a9271de088ecae9121bc62c0abf58&amp;amp;chksm=cf209473f8571d656c8623fad6f9a3611261742780dafeafcab16f62ec925665a428076675ba&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;如何才能迅速晋升？&lt;/a&gt;》；第二点优势：便于反思，鼓励他们时刻审视自己的表现，检查是否偏离目标。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__31&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;br data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;js_darkmode__35&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong class=&quot;js_darkmode__36&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-style=&quot;color: rgb(7, 193, 96); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 16px; letter-spacing: 0.544px; white-space: normal; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;4. 如何引导&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;js_darkmode__38&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;一般基层管理的重要工作就是发现和解决问题。所以需要下属员工及时反馈问题，并且进行正确的引导。引导过程才是关键所在，我们可以这样的方式进行引导。&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;list-paddingleft-2&quot; readability=&quot;5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__39&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;下属不知道如何汇报问题时，就可以问他们“&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;说说最近一周或者一个月都做了什么？做的怎么样了？&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__40&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;他如果不知道，或者没有发现自己问题时，可以继续引导，问“&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;你希望得到什么样的结果？&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__41&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;继续引导，问“&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;是什么导致了实际和计划产生了差距？&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__42&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;继续问“&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;你打算后续怎么做？这样做能否解决问题？不能解决的话，怎么办？&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__43&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;继续问”&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;如果以后遇到此类情况，你应该怎样做？&lt;/strong&gt;“&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__44&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;在他自己得出结论后，告诉他，“&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;&gt;是你自己解决的问题，我只是问了几个问题，这些问题你自己也可以问。&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;js_darkmode__45&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;js_darkmode__46&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; text-align: center; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;js_darkmode__50&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;1. &lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__51&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;赞美是每个经理人必须要要具备的素质，所以赞美是有技巧的。&lt;br data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__52&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__53&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;2. 流程&lt;/strong&gt;&lt;br data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__54&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;赞美需要如下几个流程：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;list-paddingleft-2&quot; readability=&quot;5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p class=&quot;js_darkmode__55&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span class=&quot;js_darkmode__56&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; text-align: left;&quot;&gt;设定目标，保持关注&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__57&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; text-align: left;&quot;&gt;：跟他一起设定好一分钟目标后，一直和他保持密切的联系——仔细观察员工的行动，要求以日报或者周报形式告知我详细的进展情况。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p class=&quot;js_darkmode__58&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span class=&quot;js_darkmode__59&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; text-align: left;&quot;&gt;及时称赞&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__60&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; text-align: left;&quot;&gt;。一旦发现员工事情做的比较好，就需要及时的、明确的告诉他这件事对在哪里（要说得非常具体）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p class=&quot;js_darkmode__61&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span class=&quot;js_darkmode__62&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; text-align: left;&quot;&gt;跟他说这件事让我感到多么高兴，对整个团队和其他同事都有比较大的意义&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__63&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; text-align: left;&quot;&gt;（通常是拍拍肩膀或简单而友好地接触一下，肢体接触也会有比较的效果）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__64&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;沉默几秒钟&lt;/strong&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;，让他静静地体会做对事情带来的喜悦&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__65&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;鼓励他&lt;/strong&gt;以后继续保持这样做事&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__66&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;明确说明你对他有信心&lt;/strong&gt;，并会支持他们获得成功&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;js_darkmode__67&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;3. 如何做&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__68&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__69&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;在员工刚来的时候，就预先告诉他，会对他做出工作评价：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;list-paddingleft-2&quot; readability=&quot;2&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p class=&quot;js_darkmode__70&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;希望你能够成功，并且成为公司的骨干，同时也能从自己的工作中得到乐趣&lt;/span&gt;&lt;/strong&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;。&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;（给予期待，以人为本，关注员工的发展）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p class=&quot;js_darkmode__71&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;因此，我会坦白地对你的工作（业绩）给出评价&lt;/span&gt;&lt;/strong&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;（让你知道自己的工作做得好还是不好），这样你就更容易把工作做好。（提前打预防针，无论是称赞，还是批评，我会评价你，希望你把事情做好）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p class=&quot;js_darkmode__72&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;警告员工，在开始时，这样做可能会让我们俩都感觉不舒服&lt;/span&gt;&lt;/strong&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;。不过我向你保证，这方面的反馈信息会对你有很大帮助。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;js_darkmode__73&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;js_darkmode__74&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;4. 优势&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__75&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__76&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;对于经理来说，有如下几个好处：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__77&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__78&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;下属成功，你自己的组织地位就会上升&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__79&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__80&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;下属能力提升，自己才能晋升&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__81&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__82&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;让下属有归属感，能和你保持良好的关系&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;js_darkmode__83&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__84&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;对于下属来说，有如下几个好处：&lt;br data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;list-paddingleft-2&quot; readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p class=&quot;js_darkmode__85&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 25px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__86&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;得到赞美，让他更加有积极性&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__87&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;&lt;span class=&quot;js_darkmode__88&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;&quot;&gt;人是有思想的动物，&lt;span class=&quot;js_darkmode__89&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;&quot;&gt;人渴望被尊重，不愿意被操控，人喜欢得到赞美，&lt;strong data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot;&gt;管理需要尊重人性&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;js_darkmode__90&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;js_darkmode__91&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; text-align: center; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;js_darkmode__95&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;1. &lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__96&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;&quot;&gt;让他确认我们设定的目标是否阐述清楚，如果没有，他会承担责任，并再次详细说明工作目标。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&quot;js_darkmode__97&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-style=&quot;color: rgb(7, 193, 96); font-size: 16px; letter-spacing: 0.544px; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;2. 流程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__98&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;如&lt;span class=&quot;js_darkmode__99&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;果对一切都轻车&lt;span class=&quot;js_darkmode__100&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;熟路的员工犯错了，你需要及时的有所反应，你可以进行如下步骤：&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;list-paddingleft-2&quot; readability=&quot;6.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;js_darkmode__101&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;在事情发生后立刻批评&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__102&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;：跟员工确认事实+明确指出他错在哪里，要说的非常具体，并且要及时更正。&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot;&gt;举一个例子：你可以慢慢的走到他的工位旁，一脸严肃的注视着他的眼睛，询问关于这件事情的来龙去脉，是否属实，并明确的告诉他这件事情错在哪里。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;js_darkmode__103&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;告诉他这件事给你的感受，以及对团队和项目所造成的影响&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__104&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;。这里要描述的非常具体。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;js_darkmode__105&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;沉默一小会&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__106&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;，让他们深刻体会到你的感受，审视自己的错误（30s）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;js_darkmode__107&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;告诉他，他的实际能力比这次表现出来的更强&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__108&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;，能力远不止于此。让他们知道你真诚地站在他们这一边。&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot;&gt;举一个例子：你可以告诉他，“我之所以这么生气，是因为你，你不应该的”&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;js_darkmode__109&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;对人进行称赞&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;js_darkmode__110&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;。再次肯定地告诉他们，他们自身还是很好、很有价值的人。（只是在这件事上做得不好）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__111&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 14px; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; text-align: left;&quot;&gt;批评完了之后，整件事情就过去了&lt;/span&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;js_darkmode__112&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;3. 优势&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;js_darkmode__123&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;1. &lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;积攒错误&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__125&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span class=&quot;js_darkmode__126&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px;&quot;&gt;大多数经理&lt;span class=&quot;js_darkmode__127&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px;&quot;&gt;都喜欢把下属的错误记下来，&lt;span class=&quot;js_darkmode__128&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px;&quot;&gt;积攒到一起，然后跟他们算总账，结果可想而知，两人要么互相大声指责对方不是，要么一言不发在心里怨恨对方。而下属可能早就忘记了当时究竟做错了什么。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;js_darkmode__130&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; font-size: 14px; color: rgb(49, 49, 49); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;br data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(49, 49, 49)&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__131&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 5px; margin-left: 8px; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;2. &lt;strong data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(7, 193, 96)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(7, 193, 96)&quot;&gt;对人不对事&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;js_darkmode__133&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(47, 47, 47)&quot; data-style=&quot;max-width: 100%; color: rgb(47, 47, 47); font-family: 微软雅黑, 宋体, 黑体, Arial, Helvetica, sans-serif; font-size: 14px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;经理在批评下属时，常常会把矛头指向对方自身。非常不好！应该对事不对人。消除错误行为，保留有价值的人。&lt;/span&gt;&lt;/p&gt;
&lt;hr class=&quot;js_darkmode__136&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; letter-spacing: 0.544px; white-space: normal; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; border-style: solid; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-color: rgba(0, 0, 0, 0.098); transform-origin: 0px 0px 0px; transform: scale(1, 0.5); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;/&gt;&lt;p class=&quot;js_darkmode__137&quot; data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; min-height: 1em; letter-spacing: 0.544px; white-space: normal; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(163, 163, 163)&quot;&gt;推荐阅读（干货）&lt;/strong&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483891&amp;amp;idx=1&amp;amp;sn=24cd8a6abf3b0681179dc5e5e846e0ba&amp;amp;chksm=cf2094e1f8571df70c1e37be4f3a3a81df0165e5e3359006a16ed64730fe9e5cc7fe97c37289&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;em data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;程序员进阶必备能力——晋升之道&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483792&amp;amp;idx=1&amp;amp;sn=f30fe58e4ea99d647b1853eca6bd5a6a&amp;amp;chksm=cf209482f8571d94e7dd372851397f98a838e84a9fbea9299337e5ee2301084228a4f57d315c&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;em data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;送给刚毕业的程序员——7点建议&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483826&amp;amp;idx=1&amp;amp;sn=c82601363825ba261b88c0198ee3a91d&amp;amp;chksm=cf2094a0f8571db6b69603ba66b1ac62ef588fc3668ffdcddd4ca2fa62713eb8c614e279290b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;em data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;程序员进阶&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483826&amp;amp;idx=1&amp;amp;sn=c82601363825ba261b88c0198ee3a91d&amp;amp;chksm=cf2094a0f8571db6b69603ba66b1ac62ef588fc3668ffdcddd4ca2fa62713eb8c614e279290b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;em data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;技术专家必备能力——深度思考&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483879&amp;amp;idx=1&amp;amp;sn=96067a68ebe584002a64dc0e21edb21d&amp;amp;chksm=cf2094f5f8571de38333e04d03d1dd60a56574d08d62324ae65bc73a3bc414e6d6e5e9d17121&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;span data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;em data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;&lt;strong data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(255, 104, 39)&quot;&gt;程序员如何选择一家好公司&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong data-darkmode-bgcolor-16027590497592=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16027590497592=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(163, 163, 163)&quot;&gt;&lt;span class=&quot;js_darkmode__13&quot; data-darkmode-bgcolor-16027590497592=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16027590497592=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16027590497592=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16027590497592=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; color: rgb(49, 49, 49); font-size: 14px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; data-darkmode-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(49, 49, 49)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(49, 49, 49)&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(49, 49, 49)&quot;&gt;觉得不错，记得关注、转发和在看！多年经验分享，实属不易，感谢支持！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr class=&quot;js_darkmode__14&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; border-color: rgba(0, 0, 0, 0.098); white-space: normal; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; border-style: solid; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; transform-origin: 0px 0px 0px; transform: scale(1, 0.5); box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(163, 163, 163)&quot;/&gt;&lt;p class=&quot;js_darkmode__15&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; min-height: 1em; white-space: normal; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(163, 163, 163)&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;span data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;&gt;&lt;span data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 15px; max-width: 100%; color: rgb(77, 77, 77); letter-spacing: 0.544px;&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;&gt;博主是一位物联网大厂技术总监，从业7年。&lt;span class=&quot;js_darkmode__17&quot; data-darkmode-bgcolor-16029336602567=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16029336602567=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(53, 53, 53)&quot; data-style=&quot;max-width: 100%; color: rgb(53, 53, 53); letter-spacing: 0.544px; text-align: left;&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(53, 53, 53)&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(53, 53, 53)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(53, 53, 53)&quot;&gt;从软件开发、高级软件开发、技术经理再到技术总监，分享职业发展、技术管理、职场晋升、技术成长等个人多年经验和心得。一起成长！&lt;span data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 15px; max-width: 100%; color: rgb(77, 77, 77); letter-spacing: 0.544px;&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;&gt;有问题可以加我微信交流：&lt;strong data-darkmode-bgcolor-16029336602567=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16029336602567=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;max-width: 100%; color: rgb(77, 77, 77); font-size: 14px; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;&gt;pointersss&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;/&gt;&lt;span data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;&gt;&lt;strong data-darkmode-bgcolor-16029336602567=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16029336602567=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;max-width: 100%; color: rgb(77, 77, 77); font-size: 14px; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;&gt;觉得不错、就长按关注我吧！&lt;br data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037581680207=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037581680207=&quot;rgb(77, 77, 77)&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;js_darkmode__20&quot; data-darkmode-bgcolor-16037581680207=&quot;rgb(56, 56, 56)&quot; data-darkmode-original-bgcolor-16037581680207=&quot;rgb(25, 25, 25)&quot; data-darkmode-color-16037581680207=&quot;rgba(255, 255, 255, 0.6)&quot; data-darkmode-original-color-16037581680207=&quot;rgba(255, 255, 255, 0.6)&quot; data-style=&quot;max-width: 100%; min-height: 1em; color: rgba(255, 255, 255, 0.6); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.442px; white-space: normal; text-align: center; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/2186635/202010/2186635-20201027081726779-453962505.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span data-darkmode-bgcolor-16037579835157=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16037579835157=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16037579835157=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16037579835157=&quot;rgb(77, 77, 77)&quot;&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 27 Oct 2020 00:18:00 +0000</pubDate>
<dc:creator>pointersss</dc:creator>
<og:description>最近读了一本书《一分钟经理人》，是肯&amp;#183;布兰佳与斯宾塞&amp;#183;约翰逊合著的一部管理学著作，觉得挺受用的，里面都是干货。用讲故事的方式，通过不同的人物来讲不同的部分，有较强的代入感，易于理解</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/pointers/p/13882517.html</dc:identifier>
</item>
<item>
<title>日计不足涓滴成河-自定义响应结果格式化器 - Ron.Liang</title>
<link>http://www.cnblogs.com/viter/p/13877544.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/viter/p/13877544.html</guid>
<description>&lt;p&gt;响应结果就是，在客户端向服务器发出请求后，服务器根据客户端的请求参数，给出的结果，这就是一个完整的响应结果过程。响应的结果包含的内容非常多，主要的有 HTTP Status Code，Content-Type,Content 等等，在这里不再一一赘述。&lt;/p&gt;
&lt;p&gt;一般情况下，在 .NET MVC 中，如果是 API 接口，默认使用 JsonOutputFormatter 对结果进行格式化，但是也不排除某些情况下，我们需要对业务进行兼容化的设置，比如部分接口使用 xml，部分接口使用自定义的格式，需求的响应是第一要务。&lt;/p&gt;

&lt;p&gt;在 .NET（介于官方改名，咱也不叫 Core 了哈） MVC中，有几种内置的常见响应结果格式化器，他们分别是：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;0、OutputFormatter（基类）
1、TextOutputFormatter（基类）
2、StringOutputFormatter
3、StreamOutputFormatter
4、JsonOutputFormatter
5、XmlSerializerOutputFormatter
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;由于这几种常见的格式化器的存在，我们可以放心的在 .NET MVC 中使用 请求-&amp;gt; 响应 过程，而不必关心他具体的实现。&lt;/p&gt;

&lt;h2 id=&quot;默认的响应结果格式json&quot;&gt;默认的响应结果格式json&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;private static readonly string[] Summaries = new[]
{
    &quot;Freezing&quot;, &quot;Bracing&quot;, &quot;Chilly&quot;, &quot;Cool&quot;, &quot;Mild&quot;, &quot;Warm&quot;, &quot;Balmy&quot;, &quot;Hot&quot;, &quot;Sweltering&quot;, &quot;Scorching&quot;
};

private IEnumerable&amp;lt;WeatherForecast&amp;gt; GetWeatherForecast()
{
    var rng = new Random();
    return Enumerable.Range(1, 3).Select(index =&amp;gt; new WeatherForecast
    {
        Date = DateTime.Now.AddDays(index),
        TemperatureC = rng.Next(-20, 55),
        Summary = Summaries[rng.Next(Summaries.Length)]
    })
    .ToArray();
}

[HttpGet]
public IEnumerable&amp;lt;WeatherForecast&amp;gt; Get()
{
    return GetWeatherForecast();
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当我们请求上面的 API 接口，将得到下面的默认输出结果。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[
  {
    &quot;date&quot;: &quot;2020-10-24T17:19:05.4638588+08:00&quot;,
    &quot;temperatureC&quot;: 2,
    &quot;temperatureF&quot;: 35,
    &quot;summary&quot;: &quot;Cool&quot;
  },
  {
    &quot;date&quot;: &quot;2020-10-25T17:19:05.464602+08:00&quot;,
    &quot;temperatureC&quot;: 18,
    &quot;temperatureF&quot;: 64,
    &quot;summary&quot;: &quot;Sweltering&quot;
  },
  {
    &quot;date&quot;: &quot;2020-10-26T17:19:05.4646057+08:00&quot;,
    &quot;temperatureC&quot;: -14,
    &quot;temperatureF&quot;: 7,
    &quot;summary&quot;: &quot;Mild&quot;
  }
]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这很好，是我们想要的结果。&lt;/p&gt;
&lt;h2 id=&quot;xml响应结果格式器&quot;&gt;Xml响应结果格式器&lt;/h2&gt;
&lt;p&gt;在上面的天气预报示例中，API接口默认使用了 json 格式输出响应结果，在不改动业务代码的情况下，我们可以增加一种 xml 输出结果，具体做法就是增加一个 API 接口，然后在 startup.cs 中添加 xml 格式化器。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[Produces(&quot;application/xml&quot;)]
[HttpGet(&quot;xml&quot;)]
public IEnumerable&amp;lt;WeatherForecast&amp;gt; Xml()
{
    return GetWeatherForecast();
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;配置-xml-格式器-xmldatacontractserializeroutputformatter&quot;&gt;配置 Xml 格式器 XmlDataContractSerializerOutputFormatter&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;public void ConfigureServices(IServiceCollection services)
{
    services.AddControllers(configure =&amp;gt;
    {
        configure.OutputFormatters.Add(new XmlDataContractSerializerOutputFormatter());
    });
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这个时候再请求 API 地址：/weatherforecast/xml ，我们将会得到的结果如下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;ArrayOfWeatherForecast xmlns:i=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;http://schemas.datacontract.org/2004/07/CustomBinder&quot;&amp;gt;
    &amp;lt;WeatherForecast&amp;gt;
        &amp;lt;Date&amp;gt;2020-10-24T17:24:19.1047116+08:00&amp;lt;/Date&amp;gt;
        &amp;lt;Summary&amp;gt;Scorching&amp;lt;/Summary&amp;gt;
        &amp;lt;TemperatureC&amp;gt;49&amp;lt;/TemperatureC&amp;gt;
    &amp;lt;/WeatherForecast&amp;gt;
    &amp;lt;WeatherForecast&amp;gt;
        &amp;lt;Date&amp;gt;2020-10-25T17:24:19.1047219+08:00&amp;lt;/Date&amp;gt;
        &amp;lt;Summary&amp;gt;Cool&amp;lt;/Summary&amp;gt;
        &amp;lt;TemperatureC&amp;gt;6&amp;lt;/TemperatureC&amp;gt;
    &amp;lt;/WeatherForecast&amp;gt;
    &amp;lt;WeatherForecast&amp;gt;
        &amp;lt;Date&amp;gt;2020-10-26T17:24:19.1047221+08:00&amp;lt;/Date&amp;gt;
        &amp;lt;Summary&amp;gt;Freezing&amp;lt;/Summary&amp;gt;
        &amp;lt;TemperatureC&amp;gt;-20&amp;lt;/TemperatureC&amp;gt;
    &amp;lt;/WeatherForecast&amp;gt;
&amp;lt;/ArrayOfWeatherForecast&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;细心的同学可能发现了问题。&lt;/p&gt;
&lt;p&gt;API 接口 /xml 的特性标注多了一个 [Produces(&quot;application/xml&quot;)]正是得益于 ProducesAttribute 特性，我们可以在 MVC 框架内随意的定制响应结果。&lt;/p&gt;
&lt;p&gt;ProducesAttribute 和其它的特性类没有太多的区别，其基本原理就是使用用户指定的 contentType 参数（本例中为 application/xml) 到 OutputFormatters 中查找对应类型的 Formatters，如果找到了，就使用该 Formatters 格式化响应结果，如果没有找到，就抛出 No output formatter was found for content types 的警告，同时，客户端会收到一个 406(Not Acceptable) 的响应结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/26882/202010/26882-20201026112246760-1843802418.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;

&lt;p&gt;没错，上面的几种常见的格式化器虽然非常好用。但是，我现在要对接一个旧的第三方客户端，该客户端采用的是 url 参数请求协议包，很明显，由于这个客户端过于年长（假装找不到维护人员），只能在服务器端进行兼容了。&lt;/p&gt;
&lt;p&gt;不过也不用过于担心，开发一个自定义的格式化器还是非常简单的。我们只需要定义一个继承自 TextOutputFormatter 的子类即可，其中有小部分需要编写的代码。&lt;/p&gt;
&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;我们接到的需求是兼容 url 方式的请求参数响应结果，经过调研，确认格式如下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;key=value&amp;amp;key=value&amp;amp;key=value
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;需求调研清楚后，编码的速度就得跟上了&lt;/p&gt;
&lt;h2 id=&quot;定义格式化器-weatheroutputformatter&quot;&gt;定义格式化器 WeatherOutputFormatter&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;public class WeatherOutputFormatter : TextOutputFormatter
{
    private readonly static Type WeatherForecastType = typeof(WeatherForecast);
    public WeatherOutputFormatter()
    {
        SupportedEncodings.Add(Encoding.UTF8);
        SupportedEncodings.Add(Encoding.Unicode);
        SupportedMediaTypes.Add(&quot;text/weather&quot;);
    }

    public override bool CanWriteResult(OutputFormatterCanWriteContext context)
    {
        if (context == null)
        {
            throw new ArgumentNullException(nameof(context));
        }
        if (context.ObjectType == WeatherForecastType || context.Object is WeatherForecast || context.ObjectType.GenericTypeArguments[0] == WeatherForecastType)
        {
            return base.CanWriteResult(context);
        }
        return false;
    }

    private string WriterText(IEnumerable&amp;lt;WeatherForecast&amp;gt; weathers)
    {
        StringBuilder builder = new StringBuilder();
        foreach (var wealther in weathers)
        {
            builder.Append(WriterText(wealther));
        }
        return builder.ToString();
    }

    private string WriterText(WeatherForecast weather) =&amp;gt; $&quot;date={WebUtility.UrlEncode(weather.Date.ToString())}&amp;amp;temperatureC={weather.TemperatureC}&amp;amp;temperatureF={weather.TemperatureF}&amp;amp;summary={WebUtility.UrlEncode(weather.Summary)}&quot;;

    public override async Task WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
    {
        if (context == null)
        {
            throw new ArgumentNullException(nameof(context));
        }
        if (selectedEncoding == null)
        {
            throw new ArgumentNullException(nameof(selectedEncoding));
        }
        string text = string.Empty;
        if (context.ObjectType == WeatherForecastType)
            text = WriterText(context.Object as WeatherForecast);
        else if (context.ObjectType.GenericTypeArguments[0] == WeatherForecastType)
            text = WriterText(context.Object as IEnumerable&amp;lt;WeatherForecast&amp;gt;);
        if (string.IsNullOrEmpty(text))
        {
            await Task.CompletedTask;
        }
        var response = context.HttpContext.Response;
        await response.WriteAsync(text, selectedEncoding);
    }
}

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;正所谓一图胜千言，所以我给大家画了一张图，方便理解&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/26882/202010/26882-20201026112513679-1330007494.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出，我们只需要重写两个方法，同时编写一个自定义格式化逻辑即可完成,看起来还是非常简单的。&lt;/p&gt;
&lt;p&gt;细心的同学可能发现了，在 WriterText 方法中，考虑到兼容性的问题，我们还将 url 中的 value 进行转义，可以说还是非常贴心的哈。&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;[Produces(&quot;text/weather&quot;)]
[HttpGet(&quot;weather&quot;)]
public IEnumerable&amp;lt;WeatherForecast&amp;gt; Weather()
{
    return GetWeatherForecast();
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;测试方法中定义 Produces(&quot;text/weather&quot;)，指定需要的 ContentType，同时，还需要将 WeatherOutputFormatter 添加到 OutputFormatters 中使用&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public void ConfigureServices(IServiceCollection services)
{
    services.AddControllers(configure =&amp;gt;
    {
        configure.OutputFormatters.Add(new XmlDataContractSerializerOutputFormatter());
        configure.OutputFormatters.Add(new WeatherOutputFormatter());
    });
}
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;请求 API 地址 /weather，得到结果如下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;date=2020%2F10%2F27+10%3A35%3A36&amp;amp;temperatureC=42&amp;amp;temperatureF=107&amp;amp;summary=Scorchingdate=2020%2F10%2F28+10%3A35%3A36&amp;amp;temperatureC=28&amp;amp;temperatureF=82&amp;amp;summary=Freezingdate=2020%2F10%2F29+10%3A35%3A36&amp;amp;temperatureC=17&amp;amp;temperatureF=62&amp;amp;summary=Sweltering
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;至此，自定义格式化器已经完成，本文通过一个简单的示例实现，帮助大家理解如何在 MVC 中使用自定义格式化器，文章篇幅不长，做图花了点心思，欢迎您的关注。&lt;/p&gt;
&lt;p&gt;示例代码托管在：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;https://github.com/lianggx/EasyAspNetCoreDemo/tree/master/CustomBinder
&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 27 Oct 2020 00:05:00 +0000</pubDate>
<dc:creator>Ron.Liang</dc:creator>
<og:description>#什么是响应结果 响应结果就是，在客户端向服务器发出请求后，服务器根据客户端的请求参数，给出的结果，这就是一个完整的响应结果过程。响应的结果包含的内容非常多，主要的有 HTTP Status Code</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/viter/p/13877544.html</dc:identifier>
</item>
<item>
<title>golang开发:http请求redirect的问题 - 飞翔码农</title>
<link>http://www.cnblogs.com/feixiangmanon/p/13882418.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/feixiangmanon/p/13882418.html</guid>
<description>&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;这两天在开发项目的时候遇到了一个问题，请求了一个URL，它会302到另一个地址，本意上只是想检查这个URL是否会做3XX的redirect跳转，结果每次reqeust都会返回最后一跳的结果。后来就看了下源码，了解下请求跳转的机制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;实现代码&quot;&gt;实现代码&lt;/h3&gt;
&lt;p&gt;看下实现的简单代码&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;func main() {
        client := &amp;amp;http.Client{}
        url := &quot;http://www.qq.com&quot;
        reqest, err := http.NewRequest(&quot;GET&quot;, url, nil)
        if err != nil {
                panic(err)
        }
        response, _ := client.Do(reqest)
        fmt.Println(response.Status)
}

curl http://www.qq.com
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;302 Found&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body bgcolor=&quot;white&quot;&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;302 Found&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;stgw/1.3.12.4_1.13.5&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们知道在浏览器里面输入http://www.qq.com会302跳转到https://www.qq.com。我们使用curl可以看到使用302的跳转。&lt;/p&gt;
&lt;p&gt;可是我只想获取第一跳的的response 的状态码。发现没法实现了，所以看了下源码。&lt;/p&gt;
&lt;h3 id=&quot;http请求为什么可以做到多次redirect&quot;&gt;http请求为什么可以做到多次redirect&lt;/h3&gt;
&lt;p&gt;看了下 client.Do 源码实现&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;607 err = c.checkRedirect(req, reqs)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;代码的上下文，可以看出 req是将要请求的request，reqs已经请求过的request&lt;/p&gt;
&lt;p&gt;主要看下checkRedirect&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;func (c *Client) checkRedirect(req *Request, via []*Request) error {
        fn := c.CheckRedirect
        if fn == nil {
                fn = defaultCheckRedirect
        }
        return fn(req, via)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到如果设置了checkRedirect就执行checkRedirect，如果没有设置就执行 defaultCheckRedirect。&lt;/p&gt;
&lt;p&gt;再看下 defaultCheckRedirect&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;func defaultCheckRedirect(req *Request, via []*Request) error {
        if len(via) &amp;gt;= 10 {
                return errors.New(&quot;stopped after 10 redirects&quot;)
        }
        return nil
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到最多可以redirect 10次，如果大于10的跳转就抛出错误结束这次请求了。&lt;br/&gt;大体上流程已经搞明白。只要设置checkRedirect返回error，理论上就能实现只请求一次的目的。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;func main() {
        client := &amp;amp;http.Client{}
        url := &quot;http://www.qq.com&quot;
        reqest, err := http.NewRequest(&quot;GET&quot;, url, nil)
        if err != nil {
                panic(err)
        }
        client.CheckRedirect = func(req *http.Request, via []*http.Request) error {
                return fmt.Errorf(&quot;first response&quot;)
        }
        response, _ := client.Do(reqest)
        fmt.Println(response.StatusCode)
}

/private/var/folders/4h/lrsc4fyd12v9ctl31ggk5ckc0000gp/T/___go_build_main_go #gosetup
302
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;基本实现了。&lt;br/&gt;其实，在CheckRedirect方法上面有一行说明，&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;ErrUseLastResponse can be returned by Client.CheckRedirect hooks to control how redirects are processed. If returned, the next request is not sent and the most recent response is returned with its body unclosed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Client.CheckRedirect挂钩可以返回ErrUseLastResponse，以控制如何处理重定向。 如果返回，则不发送下一个请求，并且返回最近的响应且其主体未关闭。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;
&lt;code&gt;可以看到返回 ErrUseLastResponse是官方的建议的设置

最终的代码实现应该是这样的。

```bash
func main() {
        client := &amp;amp;http.Client{}
        url := &quot;http://www.qq.com&quot;
        reqest, err := http.NewRequest(&quot;GET&quot;, url, nil)
        if err != nil {
                panic(err)
        }
        client.CheckRedirect = func(req *http.Request, via []*http.Request) error {
                return http.ErrUseLastResponse
        }
        response, _ := client.Do(reqest)
        fmt.Println(response.StatusCode)
}
&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 26 Oct 2020 23:43:00 +0000</pubDate>
<dc:creator>飞翔码农</dc:creator>
<og:description>这两天在开发项目的时候遇到了一个问题，请求了一个URL，它会302到另一个地址，本意上只是想检查这个URL是否会做3XX的redirect跳转，结果每次reqeust都会返回最后一跳的结果。后来就看了</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/feixiangmanon/p/13882418.html</dc:identifier>
</item>
<item>
<title>一道关于二叉树的字节面试题的思考 - 琴水玉</title>
<link>http://www.cnblogs.com/lovesqcc/p/13882386.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lovesqcc/p/13882386.html</guid>
<description>&lt;p&gt;在本文中，我们通过一个二叉树的路径寻找面试题，讨论了递归和非递归解法，探讨了非递归过程中遇到的问题，模拟了二叉树的回溯，对于理解二叉树的访问是很有益的。而对于回溯算法的理解，锻炼了非线性思维。技术人的精神，就是追根究底，把一个事情彻底弄清楚吧！&lt;/p&gt;&lt;div id=&quot;cnblogs_post_body&quot; readability=&quot;238.94016922846&quot;&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;技术人的精神，就是追根究底，把一个事情彻底弄清楚吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;&lt;h3 id=&quot;题目&quot;&gt;题目&lt;/h3&gt;
&lt;p&gt;众所周知，字节在一二面的末尾，会随机抽一道算法题，当场写代码。我抽到的题目如下：&lt;/p&gt;
&lt;p&gt;二叉树根节点到叶子节点的所有路径和。给定一个仅包含数字 0−9 的二叉树，每一条从根节点到叶子节点的路径都可以用一个数字表示。例如根节点到叶子节点的一条路径是 1→2→3,那么这条路径就用 123 来代替。找出根节点到叶子节点的所有路径表示的数字之和。&lt;/p&gt;
&lt;p&gt;例如：这棵二叉树一共有两条路径，根节点到左叶子节点的路径 12 代替，根节点到右叶子节点的路径用 13 代替。所以答案为12+13=25 。&lt;/p&gt;
&lt;br/&gt;&lt;h3 id=&quot;递归解法&quot;&gt;递归解法&lt;/h3&gt;
&lt;p&gt;看到这个题目，首先想到的，其实就是找到这个二叉树的从根节点到叶子节点的所有路径。而要找到所有路径，第一想到的肯定是递归。通过左子树的递归拿到的路径、右子树的递归拿到的路径，以及根节点，得出最终的所有路径。&lt;/p&gt;
&lt;p&gt;算法如下：&lt;/p&gt;
&lt;p&gt;STEP1：如果已经是叶子节点，那么构造一条路径列表，该路径只有一个元素即叶子节点的值，然后返回【退出条件】。&lt;/p&gt;
&lt;p&gt;STEP2: 递归找到左子树到叶子节点的所有路径列表。对于每条路径，将根节点加入，从而得到新的结果路径，并加入；&lt;/p&gt;
&lt;p&gt;STEP3：递归找到右子树到叶子节点的所有路径列表。对于每条路径，将根节点加入，从而得到新的结果路径，并加入；&lt;/p&gt;
&lt;p&gt;STEP4: 将左右子树的所有路径合并成最终的路径列表【组合子问题的解】。&lt;/p&gt;
&lt;p&gt;有两点说明下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;由于节点的值只有 0-9，因此，可以直接用字符串来表示路径。如果用 List[Integer] ，更灵活，不过会变成列表的列表，处理起来会有点绕。&lt;/li&gt;
&lt;li&gt;构建路径时，使用的是 StringBuilder 的 append 方法，而不是 insert 方法，因此构造的路径是逆序的。主要考虑到 insert 方法会导致数组频繁移动，效率低。具体可以看 StringBuilder 实现。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;递归代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;public List&amp;lt;Path&amp;gt; findAllPaths(TreeNode root) {
        List&amp;lt;Path&amp;gt; le = new ArrayList&amp;lt;&amp;gt;();
        List&amp;lt;Path&amp;gt; ri = new ArrayList&amp;lt;&amp;gt;();
        if (root != null) {

            if (root.left == null &amp;amp;&amp;amp; root.right == null) {
                List&amp;lt;Path&amp;gt; single = new ArrayList&amp;lt;&amp;gt;();
                single.add(new Path(root.val));
                return single;
            }

            if (root.left != null) {
                le = findAllPaths(root.left);
                for (Path p: le) {
                    p.append(root.val);
                }
            }
            if (root.right != null) {
                ri = findAllPaths(root.right);
                for (Path p: ri) {
                    p.append(root.val);
                }
            }
        }
        List&amp;lt;Path&amp;gt; paths = new ArrayList&amp;lt;&amp;gt;();
        paths.addAll(le);
        paths.addAll(ri);
        return paths;
    }


class Path {
    StringBuilder s = new StringBuilder();
    public Path() { }

    public Path(Integer i) {
        s.append(i);
    }

    public Path(List list) {
        list.forEach( e-&amp;gt; {
            s.append(e);
        });
    }

    public Path(String str) { this.s = new StringBuilder(str); }

    public Long getValue() {
        return Long.parseLong(s.reverse().toString());
    }

    public StringBuilder append(Integer i) {
        return s.append(i);
    }

    public String toString() {
        return s.reverse().toString();
    }
}


class TreeNode {

    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }

    public int height() {
        if (left == null &amp;amp;&amp;amp; right == null) {
            return 1;
        }
        int leftHeight = 0;
        int rightHeight = 0;
        if (left != null) {
            leftHeight = left.height();
        }
        if (right != null) {
            rightHeight = right.height();
        }
        return 1 + max(leftHeight, rightHeight);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;关键点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实际上，我在面试当场没有做出来，但在面试后的十分钟，我就把代码写出来了。可能在面试的时候有点紧张，有个地方一直卡住了。&lt;/p&gt;
&lt;p&gt;类似二叉树、动态规划的问题，由于有多条分支，从思维上来说，不像处理数组、链表那样是一种线性思维，而是需要一种非线性思维，因此，多做类似的题目，对思维的锻炼是很有益的，—— 能够帮助人摆脱固有的线性思维。&lt;/p&gt;
&lt;p&gt;一般来说，算法问题，通常可以分为两步：1. 划分子问题； 2. 将子问题的解组合成原问题的解。 划分子问题，相对容易一点，但如果划分不合理，就难以想清楚如何去组合解。我一开始就想到了要用子树的解与根节点来组合，但是一直纠结在对求出单条路径的思考上，而不是把所有路径作为子问题的解。这样，我就难以想到如何去组合得到最终解。但面试结束之后，我脑子里闪过左子树的所有路径列表，顿时就明白如何组合了。因此，有时，把“所有”作为子问题的解，再跟上层节点组合，反而能容易地得到原问题的解。此外，递归要特别注意退出条件。&lt;/p&gt;
&lt;p&gt;推荐可以多做二叉树、动态规划的题目，能够很好地锻炼划分子问题、组合子问题的解来求解的技能。&lt;/p&gt;
&lt;h3 id=&quot;非递归算法&quot;&gt;非递归算法&lt;/h3&gt;
&lt;p&gt;实现递归解法，只是一个开始。递归算法很简洁，但执行效率很低，而且容易栈溢出。如果一个足够大的二叉树，就能让递归代码无法执行下去。因此，需要寻求非递归实现。&lt;/p&gt;
&lt;p&gt;非递归实现，往往需要借助于栈。我们需要模拟一下如何用栈来访问二叉树。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/502996/202010/502996-20201026174309678-1766464321.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以先找找规则，往往规则就是代码的路径。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;每次走到一个节点，先将节点值入栈；&lt;/li&gt;
&lt;li&gt;走到叶子节点时，说明已经走到路径的尽头，可以记录下这条路径。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;第一版非递归实现如下。用一个栈来存储二叉树的访问节点。如果是叶子节点，就记录路径，然后将叶子节点出栈，继续访问。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;public List&amp;lt;Path&amp;gt; findAllPathsNonRecDeadLoop(TreeNode root) {

        List&amp;lt;Path&amp;gt; allPaths = new ArrayList&amp;lt;&amp;gt;();
        Stack&amp;lt;Integer&amp;gt; s = new DyStack&amp;lt;Integer&amp;gt;();

        TreeNode p = root;
        while(p != null) {
            s.push(p.val);
            if (p.left == null &amp;amp;&amp;amp; p.right == null) {
                allPaths.add(new Path(s.unmodifiedList()));
                s.pop();
                if (s.isEmpty()) {
                    break;
                }
            }
            if (p.left != null) {
                p = p.left;
            }
            else if (p.right != null) {
                p = p.right;
            }
        }
        return allPaths;
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;不过，这个代码实现会陷入死循环。为什么呢？因为它会无止境重复进入左子树，而且回溯的时候，也没法找到父节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回溯&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了解决死循环的问题，我们需要加一些支持：进入某个节点时，必须记下该节点的父节点，以及该父节点是否访问过左右子树。这个信息用 TraceNode 来表示。由于始终需要回溯，因此，TraceNode 必须放在栈中，在适当的时候弹出，就像保存现场一样。当遍历的时候，需要记录已经访问的节点，不重复访问，也需要避免将中间节点重复压栈。&lt;/p&gt;
&lt;p&gt;重新理一下。对于当前节点，有四种情形需要考虑：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;当前节点是叶子节点。记录路径、出栈 treeData, 出栈 traceNode ，回溯到父节点；&lt;/li&gt;
&lt;li&gt;当前节点不是叶子节点，有左子树，则需要记录该节点指针及左子树已访问，并进入左子树；&lt;/li&gt;
&lt;li&gt;当前节点不是叶子节点，有右子树，则需要记录该节点指针及右子树已访问，并进入右子树；&lt;/li&gt;
&lt;li&gt;当前节点不是叶子节点，有左右子树且均已访问，出栈 treeData, 出栈 traceNode ，回溯到父节点。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;第二版的递归实现如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;public List&amp;lt;Path&amp;gt; findAllPathsNonRec(TreeNode root) {

        List&amp;lt;Path&amp;gt; allPaths = new ArrayList&amp;lt;&amp;gt;();
        Stack&amp;lt;Integer&amp;gt; treeData = new DyStack&amp;lt;&amp;gt;();
        Stack&amp;lt;TraceNode&amp;gt; trace = new DyStack&amp;lt;&amp;gt;();

        TreeNode p = root;
        TraceNode traceNode = TraceNode.getNoAccessedNode(p);
        while(p != null) {
            if (p.left == null &amp;amp;&amp;amp; p.right == null) {
                // 叶子节点的情形，需要记录路径，并回溯到父节点
                treeData.push(p.val);
                allPaths.add(new ListPath(treeData.unmodifiedList()));
                treeData.pop();
                if (treeData.isEmpty()) {
                    break;
                }
                traceNode = trace.pop();
                p = traceNode.getParent();
                continue;
            }
            else if (traceNode.needAccessLeft()) {
                // 需要访问左子树的情形
                treeData.push(p.val);
                trace.push(TraceNode.getLeftAccessedNode(p));
                p = p.left;
            }
            else if (traceNode.needAccessRight()) {
                // 需要访问右子树的情形
                if (traceNode.hasNoLeft()) {
                    treeData.push(p.val);
                }
                if (!traceNode.hasAccessedLeft()) {
                    // 访问左节点时已经入栈过，这里不重复入栈
                    treeData.push(p.val);
                }
                trace.push(TraceNode.getRightAccessedNode(p));
                p = p.right;
                if (p.left != null) {
                    traceNode = TraceNode.getNoAccessedNode(p);
                }
                else if (p.right != null) {
                    traceNode = TraceNode.getLeftAccessedNode(p);
                }
            }
            else if (traceNode.hasAllAccessed()) {
                // 左右子树都已经访问了，需要回溯到父节点
                if (trace.isEmpty()) {
                    break;
                }
                treeData.pop();
                traceNode = trace.pop();
                p = traceNode.getParent();
            }
        }
        return allPaths;
    }

class TraceNode {

    private TreeNode parent;
    private int accessed;  // 0 均未访问 1 已访问左 2 已访问右

    public TraceNode(TreeNode parent, int child) {
        this.parent = parent;
        this.accessed = child;
    }

    public static TraceNode getNoAccessedNode(TreeNode parent) {
        return new TraceNode(parent, 0);
    }

    public static TraceNode getLeftAccessedNode(TreeNode parent) {
        return new TraceNode(parent, 1);
    }

    public static TraceNode getRightAccessedNode(TreeNode parent) {
        return new TraceNode(parent, 2);
    }

    public boolean needAccessLeft() {
        return parent.left != null &amp;amp;&amp;amp; accessed == 0;
    }

    public boolean needAccessRight() {
        return parent.right != null &amp;amp;&amp;amp; accessed &amp;lt; 2;
    }

    public boolean hasAccessedLeft() {
        return parent.left == null || (parent.left != null &amp;amp;&amp;amp; accessed == 1);
    }

    public boolean hasNoLeft() {
        return parent.left == null;
    }

    public boolean hasAllAccessed() {
        if (parent.left != null &amp;amp;&amp;amp; parent.right == null &amp;amp;&amp;amp; accessed == 1) {
            return true;
        }
        if (parent.right != null &amp;amp;&amp;amp; accessed == 2) {
            return true;
        }
        return false;
    }

    public TreeNode getParent() {
        return parent;
    }

    public int getAccessed() {
        return accessed;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;关于是否已访问左右子树的判断都隐藏在 TraceNode 里，findAllPathsNonRec 方法不感知这个。后续如果觉得用 int 来表示 accessed 空间效率不高，可以内部重构，对 findAllPathsNonRec 无影响。这就是封装的益处。&lt;/p&gt;
&lt;h3 id=&quot;测试&quot;&gt;测试&lt;/h3&gt;
&lt;p&gt;递归代码和非递归代码都是容易有 BUG 的，需要仔细测试下。测试用例通常至少要包括：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;C1: 单个根节点树；&lt;/li&gt;
&lt;li&gt;C2: 单个根节点 + 左节点；&lt;/li&gt;
&lt;li&gt;C3: 单个根节点 + 右节点；&lt;/li&gt;
&lt;li&gt;C4: 单个根节点 + 左右节点；&lt;/li&gt;
&lt;li&gt;C5: 普通的二叉树，左右随机；&lt;/li&gt;
&lt;li&gt;复杂的二叉树，非常大。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如何构造复杂的二叉树呢？可以采用构造法。基于简单的 C2,C3,C4，将一棵树的根节点连接到另一棵树的左叶子节点或右叶子节点上。复杂结构总是由简单结构来组合而成。&lt;/p&gt;
&lt;p&gt;测试代码如下。用 TreeBuilder 注解来表示构造的二叉树，从而能够批量拿到这些方法构造的树，进行测试。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;   public static void main(String[] args) {
        TreePathSum treePathSum = new TreePathSum();
        Method[] methods = treePathSum.getClass().getDeclaredMethods();
        for (Method m: methods) {
            if (m.isAnnotationPresent(TreeBuilder.class)) {
                try {
                    TreeNode t = (TreeNode) m.invoke(treePathSum, null);
                    System.out.println(&quot;height: &quot; + t.height());
                    treePathSum.test2(t);
                } catch (Exception ex) {
                    System.err.println(ex.getMessage());
                }

            }
        }
    }

    public void test(TreeNode root) {

        System.out.println(&quot;Rec Implementation&quot;);

        List&amp;lt;Path&amp;gt; paths = findAllPaths(root);
        Long sum = paths.stream().collect(Collectors.summarizingLong(Path::getValue)).getSum();
        System.out.println(paths);
        System.out.println(sum);

        System.out.println(&quot;Non Rec Implementation&quot;);

        List&amp;lt;Path&amp;gt; paths2 = findAllPathsNonRec(root);
        Long sum2 = paths2.stream().collect(Collectors.summarizingLong(Path::getValue)).getSum();
        System.out.println(paths2);
        System.out.println(sum2);

        assert sum == sum2;
    }

    public void test2(TreeNode root) {
        System.out.println(&quot;Rec Implementation&quot;);
        List&amp;lt;Path&amp;gt; paths = findAllPaths(root);
        System.out.println(paths);

        System.out.println(&quot;Non Rec Implementation&quot;);
        List&amp;lt;Path&amp;gt; paths2 = findAllPathsNonRec(root);
        System.out.println(paths2);

        assert paths.size() == paths2.size();
        for (int i=0; i &amp;lt; paths.size(); i++) {
            assert paths.get(i).toString().equals(paths2.get(i).toString());
        }

    }

    @TreeBuilder
    public TreeNode buildTreeOnlyRoot() {
        TreeNode tree = new TreeNode(9);
        return tree;
    }

    @TreeBuilder
    public TreeNode buildTreeWithL() {
        return buildTreeWithL(5, 1);
    }

    public TreeNode buildTreeWithL(int rootVal, int leftVal) {
        TreeNode tree = new TreeNode(rootVal);
        TreeNode left = new TreeNode(leftVal);
        tree.left = left;
        return tree;
    }

    @TreeBuilder
    public TreeNode buildTreeWithR() {
        return buildTreeWithR(5,2);
    }

    public TreeNode buildTreeWithR(int rootVal, int rightVal) {
        TreeNode tree = new TreeNode(rootVal);
        TreeNode right = new TreeNode(rightVal);
        tree.right = right;
        return tree;
    }

    @TreeBuilder
    public TreeNode buildTreeWithLR() {
        return buildTreeWithLR(5,1,2);
    }

    public TreeNode buildTreeWithLR(int rootVal, int leftVal, int rightVal) {
        TreeNode tree = new TreeNode(rootVal);
        TreeNode left = new TreeNode(leftVal);
        TreeNode right = new TreeNode(rightVal);
        tree.right = right;
        tree.left = left;
        return tree;
    }

    Random rand = new Random(System.currentTimeMillis());

    @TreeBuilder
    public TreeNode buildTreeWithMore() {
        TreeNode tree = new TreeNode(5);
        TreeNode left = new TreeNode(1);
        TreeNode right = new TreeNode(2);
        TreeNode left2 = new TreeNode(3);
        TreeNode right2 = new TreeNode(4);
        tree.right = right;
        tree.left = left;
        left.left = left2;
        left.right = right2;
        return tree;
    }

    @TreeBuilder
    public TreeNode buildTreeWithMore2() {
        TreeNode tree = new TreeNode(5);
        TreeNode left = new TreeNode(1);
        TreeNode right = new TreeNode(2);
        TreeNode left2 = new TreeNode(3);
        TreeNode right2 = new TreeNode(4);
        tree.right = right;
        tree.left = left;
        right.left = left2;
        right.right = right2;
        return tree;
    }

    public TreeNode treeWithRandom() {
        int c = rand.nextInt(3);
        switch (c) {
            case 0: return buildTreeWithL(rand.nextInt(9), rand.nextInt(9));
            case 1: return buildTreeWithR(rand.nextInt(9), rand.nextInt(9));
            case 2: return buildTreeWithLR(rand.nextInt(9), rand.nextInt(9), rand.nextInt(9));
            default: return buildTreeOnlyRoot();
        }
    }

    public TreeNode linkRandom(TreeNode t1, TreeNode t2) {
        if (t2.left == null) {
            t2.left = t1;
        }
        else if (t2.right == null) {
            t2.right = t1;
        }
        else {
            int c = rand.nextInt(4);
            switch (c) {
                case 0: t2.left.left = t1;
                case 1: t2.left.right = t1;
                case 2: t2.right.left = t1;
                case 3: t2.right.right = t1;
                default: t2.left.left = t1;
            }
        }
        return t2;
    }

    @TreeBuilder
    public TreeNode buildTreeWithRandom() {
        TreeNode root = treeWithRandom();
        int i = 12;
        while (i &amp;gt; 0) {
            TreeNode t = treeWithRandom();
            root = linkRandom(root, t);
            i--;
        }
        return root;
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;经测试，发现第二版非递归程序在某种情况下，还是有 BUG 。这说明某些基本情形还是没覆盖到。用如下测试用例调试，发现就有问题：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;@TreeBuilder
    public TreeNode buildTreeWithMore4() {
        TreeNode tree = new TreeNode(5);
        TreeNode left = new TreeNode(1);
        TreeNode right = new TreeNode(2);
        TreeNode left2 = new TreeNode(3);
        TreeNode right2 = new TreeNode(4);
        TreeNode right3 = new TreeNode(6);
        tree.right = right;
        tree.left = left;
        left.right = right3;
        right.right = left2;
        left2.right = right2;
        return tree;
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;回溯再思考&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;问题在哪里？当初次进入没有左子树的右子树时，会有问题。这说明，我还没有真正弄明白整个回溯过程。重新再理一下回溯过程：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;有一个用来指向当前访问节点的指针 p ;&lt;/li&gt;
&lt;li&gt;有一个用来存储已访问节点值的栈 treeData;&lt;/li&gt;
&lt;li&gt;有一个用来回溯的存储最近一次访问的节点信息的栈 trace ；&lt;/li&gt;
&lt;li&gt;有一个用来指明往哪个方向走的 traceNode 。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;问题在于我没想清楚 traceNode 到底是什么含义。 traceNode 的 parent 和 accessed 到底该存放什么。实际上，traceNode 和 p 是配套使用的。p 是当前进入的节点的指针，而 traceNode 用来指明进入 p 之后，该往哪里走。 traceNode 的来源应该有两个：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;第一次进入 p 时，这时候，左右子树都没有访问过，parent 应该与 p 相同，而 accessed 总是初始化为 0 ；&lt;/li&gt;
&lt;li&gt;访问了 p 的左子树或右子树，回溯进入 p 时，这时候 parent 应该是 p 的父节点，从 trace 里拿到。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;第二版非递归程序正是没有考虑到第一次进入 p 时的情况。 如下代码所示。当 p 进入左子树时，需要将最近一次的父节点信息入栈 trace ，同时需要将 traceNode 设置为初始进入 p 时的情形。进入右子树类似。这一点正是第二版非递归程序没有想清楚的地方。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;trace.push(TraceNode.getLeftAccessedNode(p));
p = p.left;
traceNode = TraceNode.getNoAccessedNode(p);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们做一些修改，得到了第三版非递归程序。经测试是 OK 的。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;public List&amp;lt;Path&amp;gt; findAllPathsNonRec(TreeNode root) {

        List&amp;lt;Path&amp;gt; allPaths = new ArrayList&amp;lt;&amp;gt;();
        Stack&amp;lt;Integer&amp;gt; treeData = new DyStack&amp;lt;&amp;gt;();
        Stack&amp;lt;TraceNode&amp;gt; trace = new DyStack&amp;lt;&amp;gt;();

        TreeNode p = root;
        TraceNode traceNode = TraceNode.getNoAccessedNode(p);
        while(p != null) {
            if (p.left == null &amp;amp;&amp;amp; p.right == null) {
                // 叶子节点的情形，需要记录路径，并回溯到父节点
                treeData.push(p.val);
                allPaths.add(new ListPath(treeData.unmodifiedList()));
                treeData.pop();
                if (treeData.isEmpty()) {
                    break;
                }
                traceNode = trace.pop();
                p = traceNode.getParent();
                continue;
            }
            else if (traceNode.needAccessLeft()) {
                // 需要访问左子树的情形
                treeData.push(p.val);
                trace.push(TraceNode.getLeftAccessedNode(p));
                p = p.left;
                traceNode = TraceNode.getNoAccessedNode(p);
            }
            else if (traceNode.needAccessRight()) {
                // 需要访问右子树的情形
                if (traceNode.hasNoLeft()) {
                    treeData.push(p.val);
                }
                if (!traceNode.hasAccessedLeft()) {
                    // 访问左节点时已经入栈过，这里不重复入栈
                    treeData.push(p.val);
                }
                trace.push(TraceNode.getRightAccessedNode(p));
                p = p.right;
                traceNode = TraceNode.getNoAccessedNode(p);
            }
            else if (traceNode.hasAllAccessed()) {
                // 左右子树都已经访问了，需要回溯到父节点
                if (trace.isEmpty()) {
                    break;
                }
                treeData.pop();
                traceNode = trace.pop();
                p = traceNode.getParent();
            }
        }
        return allPaths;
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;&lt;h3 id=&quot;优化&quot;&gt;优化&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;扩展性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于题目中所给的节点值为 0-9， 因此，前面取巧用了字符串来表示路径。如果节点值不为 0-9 呢？如果依然要用字符串表示，则需要分隔符。现在，我们用列表来表示路径。封装的好处，就在于可以替换实现，而尽量少地改变客户端代码（在这里是findAllPaths 和 findAllPathsNonRec 方法）。&lt;/p&gt;
&lt;p&gt;这里，Path 类改成接口，原来的 Path 类改成 StringPath ，然后用 StringPath 替换 Path 。 将原来 StringPath 用到的方法，定义成接口方法。只用到了 append 和 getValue 方法。不过，构造器方法参数也要兼容。这样，只要把原来的 StringPath 改成 ListPath ，其它基本不用动，就可以运行通过。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;interface Path {
    void append(Integer i);
    Long getValue();
}

class StringPath implements Path { // code as before }

class ListPath implements Path {
    List&amp;lt;Integer&amp;gt; path = new ArrayList&amp;lt;&amp;gt;();

    public ListPath(int i) {
        this.path.add(i);
    }

    public ListPath(List list) {
        this.path.addAll(list);
    }

    @Override
    public void append(Integer i) {
        path.add(i);
    }

    @Override
    public Long getValue() {
        StringBuilder s = new StringBuilder();
        path.forEach( e-&amp;gt; {
            s.append(e);
        });
        return Long.parseLong(s.reverse().toString());
    }

    public String toString() {
        return StringUtils.join(path.toArray(), &quot;&quot;);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;
&lt;p&gt;花了一天弄懂二叉树回溯的玩法。技术人的精神，就是追根究底，把一个事情彻底弄清楚吧！&lt;/p&gt;
&lt;p&gt;在本文中，我们通过一个二叉树的路径寻找面试题，讨论了递归和非递归解法，探讨了非递归过程中遇到的问题，模拟了二叉树的回溯，对于理解二叉树的访问是很有益的。而对于回溯算法的理解，锻炼了非线性思维。此外，当程序有 BUG 时，往往是某个方面没想得足够明白导致。坚持思考，清晰定义，就能向正确再迈进一步。&lt;/p&gt;
&lt;p&gt;不看答案，自己弄明白一个问题，收获大大的！&lt;/p&gt;
&lt;p&gt;本文完整源代码见：&lt;a href=&quot;https://github.com/shuqin&quot;&gt;ALLIN&lt;/a&gt; 工程里：zzz.study.datastructure.tree.TreePathSum&lt;/p&gt;
&lt;br/&gt;&lt;/div&gt;</description>
<pubDate>Mon, 26 Oct 2020 22:09:00 +0000</pubDate>
<dc:creator>琴水玉</dc:creator>
<og:description>在本文中，我们通过一个二叉树的路径寻找面试题，讨论了递归和非递归解法，探讨了非递归过程中遇到的问题，模拟了二叉树的回溯，对于理解二叉树的访问是很有益的。而对于回溯算法的理解，锻炼了非线性思维。技术人的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/lovesqcc/p/13882386.html</dc:identifier>
</item>
<item>
<title>vue+uni-app商城实战 | 第一篇：【有来小店】微信小程序快速开发接入Spring Cloud OAuth2实现授权登录 - 你好，旧时光</title>
<link>http://www.cnblogs.com/haoxianrui/p/13882310.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/haoxianrui/p/13882310.html</guid>
<description>&lt;div id=&quot;cnblogs_post_description&quot; readability=&quot;33&quot;&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/Ns1Ep6wqyV9MrYx.gif&quot; class=&quot;desc_img&quot;/&gt;本篇通过实战来讲述如何使用uni-app快速进行商城微信小程序的开发以及小程序如何接入后台Spring Cloud微服务。&lt;/div&gt;&lt;div id=&quot;cnblogs_post_body&quot; readability=&quot;131.87566406692&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/Ns1Ep6wqyV9MrYx.gif&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;

&lt;p&gt;本篇通过实战来讲述如何使用uni-app快速进行商城微信小程序的开发以及小程序如何接入后台Spring Cloud微服务。&lt;/p&gt;
&lt;p&gt;有来商城 &lt;a href=&quot;https://github.com/hxrui/youlai-mall&quot;&gt;youlai-mall&lt;/a&gt; 项目是一套全栈商城系统，技术栈是分布式微服务加上前后端分离模式，所以在本篇项目实战开始之前需要一些往期文章作为基础。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13581881.html&quot;&gt;Spring Cloud实战 | 第一篇：Windows搭建Nacos服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13584204.html&quot;&gt;Spring Cloud实战 | 第二篇：Spring Cloud整合Nacos实现注册中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13585125.html&quot;&gt;Spring Cloud实战 | 第三篇：Spring Cloud整合Nacos实现配置中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13608650.html&quot;&gt;Spring Cloud实战 | 第四篇：Spring Cloud整合Gateway实现API网关&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13615592.html&quot;&gt;Spring Cloud实战 | 第五篇：Spring Cloud整合OpenFeign实现微服务之间的调用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13719356.html&quot;&gt;Spring Cloud实战 | 第六篇：Spring Cloud Gateway+Spring Security OAuth2+JWT实现微服务统一认证授权&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13740264.html&quot;&gt;Spring Cloud实战 | 最终篇：Spring Cloud Gateway+Spring Security OAuth2集成统一认证授权平台下实现注销使JWT失效方案&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote&gt;
&lt;p&gt;管理前端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13624548.html&quot;&gt;vue-element-admin实战 | 第一篇： 移除mock接入后台，搭建有来商城youlai-mall前后端分离管理平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13676619.html&quot;&gt;vue-element-admin实战 | 第二篇： 最小改动接入后台实现根据权限动态加载菜单&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote&gt;
&lt;p&gt;微信小程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/13882310.html&quot;&gt;vue+uniapp商城实战 | 第一篇：【有来小店】微信小程序快速开发接入Spring Cloud OAuth2认证中心完成授权登录&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;1-项目简介&quot;&gt;1. 项目简介&lt;/h2&gt;
&lt;p&gt;有来商城youlai-mall一套全栈的商城系统。整个系统采用微服务架构，前后端分离交互模式。后端采用Spring Boot + Spring Cloud 并使用Spring Cloud Alibaba对微服务进行扩展。管理平台前端采用Vue + Element-UI，基于成熟的后台前端解决方案vue-element-admin。微信小程序端使用uni-app。&lt;/p&gt;
&lt;h2 id=&quot;2-技术选型&quot;&gt;2. 技术选型&lt;/h2&gt;
&lt;p&gt;相信一个Java后端开发来说，后端和管理平台前端的技术栈的选取应当毋庸置疑，当前主流。&lt;/p&gt;
&lt;p&gt;至于基于vue的微信小程序开发为什么选择uni-app而非像微信原生、mpvue、vant等框架，个人观点不能说不好，只能说组件不丰富的问题对于一个前端半吊子的自己来说是不太友好，更别说快速开发了，直到迷茫的时候遇见了了uni-app这么个神玩意儿，可以说是相见恨晚，后文将通过实践证明uni-app绝非是浪的虚名。&lt;/p&gt;
&lt;p&gt;其实微信小程序开发也没必要纠结使用具体某一个框架，觉得哪个组件好用直接引入就好，也可谓是“集天下之大成”，总之适合自己的就好。&lt;/p&gt;
&lt;p&gt;如果还在纠结微信小程序的框架选型不妨多看看多了解下，不然后面会浪费更多的时间成本和精力，可参考以下文章。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ask.dcloud.net.cn/article/35867&quot;&gt;跨端框架深度评测：微信原生、wepy、mpvue、uni-app、taro、chameleon&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-项目演示&quot;&gt;2. 项目演示&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;项目概览&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/vKJShjEPHm2Dce8.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;后台微服务&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/mjaXIngfeks6dOA.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/jKzRahSeUG9gTrq.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;管理前端&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/z3XiWdjcTORUM71.gif&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;微信小程序端&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/Ns1Ep6wqyV9MrYx.gif&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;移动APP端&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;APP介绍：&lt;/strong&gt;&lt;a href=&quot;https://www.cnblogs.com/haoxianrui/p/12826286.html&quot;&gt;vant实战 | 第一篇：有来商城移动端APP项目介绍&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-开发工具&quot;&gt;1. 开发工具&lt;/h2&gt;
&lt;p&gt;作为一位Java Developer来说，日常开发来说IDEA基本完全够用了，但是微信小程序开发必须要有&lt;strong&gt;微信开发者工具&lt;/strong&gt;，除此之外因为使用的是uni-app框架，官方推荐使用的是&lt;strong&gt;HBuilderX&lt;/strong&gt;，点击以下名称即可跳转官方地址下载。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html&quot;&gt;微信开发者工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.dcloud.io/hbuilderx.html&quot;&gt;HBuilderX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; 习惯了IDEA的快捷键童靴们在使用HBuilderX开发之前，建议预先切换下快捷键方案，是不是很人性化的一个开发工具。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/ctngMyRaWdElIib.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-个人微信小程序开发申请&quot;&gt;2. 个人微信小程序开发申请&lt;/h2&gt;
&lt;p&gt;进入&lt;a href=&quot;https://mp.weixin.qq.com/&quot;&gt;微信公众平台&lt;/a&gt;申请小程序开发，创建小程序后在开发一栏的开发设置得到对应的AppID(小程序ID)，下文需要。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/TwdrSfAu43nq1Ny.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; 有来商城项目是基于个人小程序开发，个人相较于企业少了很多接口权限，例如获取用户手机号、调用微信支付接口等。相信大多数童鞋没有条件得到企业号，也舍不得在没有必要的情况花几千块钱注册个公司。不过个人号基本够用了，也可以通过“曲线救国”的方式弥补个人号的不足，举个栗子，可以使用XorPay、Payjs等第三方支付平台弥补个人号无法调用支付接口的问题。&lt;/p&gt;
&lt;h2 id=&quot;3-创建uni-app商城模板&quot;&gt;3. 创建uni-app商城模板&lt;/h2&gt;
&lt;p&gt;后端开发人员一般来说不太擅长前端页面的设计开发，那该怎么快速开发微信商城小程序页面呢？&lt;/p&gt;
&lt;p&gt;还记得上面说的很神奇的uni-app框架吗？它提供了插件市场，里面有很多基于uni-app开发的组件和模板。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ext.dcloud.net.cn/&quot;&gt;uni-app插件市场&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/pQ7NnIi8bAu3Wrk.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;搜索关键词“mall”，选择下载量最多的项目模板点击进入&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/j5rCgVnXmOykMUA.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击“使用HBuilderX导入插件”，便可自动启动应用和加载项目至工作空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/Xdr6YA1MWLgJD5B.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-配置微信小程序接入spring-cloud-oauth2认证中心&quot;&gt;4. 配置微信小程序接入Spring Cloud OAuth2认证中心&lt;/h2&gt;
&lt;h3 id=&quot;41--微信小程序&quot;&gt;4.1 微信小程序&lt;/h3&gt;
&lt;p&gt;导入的商城模板默认的是本地JSON数据，那么接入后台微服务需要封装axios请求，此外还需添加vuex来对状态进行管理，这两项引自vue-element-admin，细节请参考源码 &lt;a href=&quot;https://github.com/hxrui/youlai-mall-weapp&quot;&gt;youlai-mall-weapp&lt;/a&gt;，微信小程序调整步骤如下：&lt;/p&gt;
&lt;p&gt;4.1.1 修改导入模板项目名称为youlai-mall-weapp，并在manifest.json配置AppID&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/kp5UWH8XdMlt4EP.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4.1.2 封装请求axios&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/IPqknGbTmZF1iUd.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4.1.3 添加状态管理vuex&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/rBOQ175khESqaiL.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4.1.4. 登录页面以及授权登录代码逻辑调整&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/c1v9mlyXdkDbGrU.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4.1.5. 微信小程序启动&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/RxEIHut9fvbTcpZ.gif&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/tdruKN9hjx42TUy.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;42--后台微服务&quot;&gt;4.2 后台微服务&lt;/h3&gt;
&lt;p&gt;4.2.1 微信授权登录接入认证中心&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/26/6ljXE15AGnmOqbZ.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;private Result handleForWxAppAuth(Principal principal, Map&amp;lt;String, String&amp;gt; parameters) throws WxErrorException, HttpRequestMethodNotSupportedException {

        String code = parameters.get(&quot;code&quot;);
        if (StrUtil.isBlank(code)) {
            throw new BizException(&quot;code不能为空&quot;);
        }

        WxMaJscode2SessionResult session = wxService.getUserService().getSessionInfo(code);
        String openid = session.getOpenid();
        String sessionKey = session.getSessionKey();

        Result&amp;lt;MemberDTO&amp;gt; result = remoteUmsMemberService.loadMemberByOpenid(openid);
        if (!ResultCode.SUCCESS.getCode().equals(result.getCode())) {
            throw new BizException(&quot;获取会员信息失败&quot;);
        }
        MemberDTO memberDTO = result.getData();
        String username;
        if (memberDTO == null) { // 微信授权登录 会员信息不存在时 注册会员
            String encryptedData = parameters.get(&quot;encryptedData&quot;);
            String iv = parameters.get(&quot;iv&quot;);

            WxMaUserInfo userInfo = wxService.getUserService().getUserInfo(sessionKey, encryptedData, iv);
            if (userInfo == null) {
                throw new BizException(&quot;获取用户信息失败&quot;);
            }
            UmsMember member = new UmsMember()
                    .setNickname(userInfo.getNickName())
                    .setAvatar(userInfo.getAvatarUrl())
                    .setGender(Integer.valueOf(userInfo.getGender()))
                    .setOpenid(openid)
                    .setUsername(openid) 
                    .setPassword(passwordEncoder.encode(openid).replace(AuthConstants.BCRYPT, Strings.EMPTY)) // 加密密码移除前缀加密方式 {bcrypt}
                    .setStatus(Constants.STATUS_NORMAL_VALUE);

            Result res = remoteUmsMemberService.add(member);
            if (!ResultCode.SUCCESS.getCode().equals(res.getCode())) {
                throw new BizException(&quot;注册会员失败&quot;);
            }
            username = openid;
        } else {
            username = memberDTO.getUsername();
        }

        // oauth2认证参数对应授权登录时注册会员的username、password信息，模拟通过oauth2的密码模式认证
        parameters.put(&quot;username&quot;, username);
        parameters.put(&quot;password&quot;, username);

        OAuth2AccessToken oAuth2AccessToken = tokenEndpoint.postAccessToken(principal, parameters).getBody();
        Oauth2Token oauth2Token = Oauth2Token.builder()
                .token(oAuth2AccessToken.getValue())
                .refreshToken(oAuth2AccessToken.getRefreshToken().getValue())
                .expiresIn(oAuth2AccessToken.getExpiresIn())
                .build();
        return Result.success(oauth2Token);

    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;声明：&lt;/strong&gt; 这里的微信登录是基于微信授权快捷登录的方式而非表单，所以在第一次授权登录时注册的会员信息用户名和密码通过自定义方式生成，此后在OAuth2认证时携带这两个参数完成密码模式认证并生成token返回给微信小程序端。如果使用表单注册/登录，替换username和password即可。&lt;/p&gt;

&lt;p&gt;最后分享一些个人心得吧(倚老卖老)，其实学好一门技术的我们心里都知道最有效的办法就是能够在实际场景运用它。自己虽然做了6年的开发，可惜现在还是在小公司做CRUD，不甘心又无奈，根本原因呢就是自己技术太菜。所以利用平时空闲时间创建了&lt;a href=&quot;https://github.com/hxrui/youlai-mall&quot;&gt;youlai-mall&lt;/a&gt;项目，并且为此买了三台云主机，虽然都是活动买的最便宜的那种，但至少对技术的态度是认证的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/25/uHPiDBWA9Rdl4V3.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;初衷就是想把像分布式、高并发等技术引入整合到这个项目，通过实战来加深对技术的理解，就是挺无奈的没有环境那就自己创建环境吧。对项目有兴趣小伙伴欢迎联系我（微信号：haoxianrui）一起加入开发呗。最后觉得对你多多少少有帮助的话可以给个项目关注，也算是对我的一种鼓励认可，谢谢了~&lt;/p&gt;
&lt;p&gt;期待你的加入和建议，有问题随时联系我~（微信号：haoxianrui）&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 26 Oct 2020 16:32:00 +0000</pubDate>
<dc:creator>你好，旧时光</dc:creator>
<og:description>一. 前言 本篇通过实战来讲述如何使用uni-app快速进行商城微信小程序的开发以及小程序如何接入后台Spring Cloud微服务。 有来商城 youlai-mall 项目是一套全栈商城系统，技术栈</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/haoxianrui/p/13882310.html</dc:identifier>
</item>
<item>
<title>Api版本控制 - 隔壁王书</title>
<link>http://www.cnblogs.com/dc20181010/p/13882265.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dc20181010/p/13882265.html</guid>
<description>&lt;p&gt;版本控制是计算机软件行业人士使用的术语。但进化是我们所有人都要经历的事情，它适用于这个世界上的每个对象。&lt;br/&gt;在计算机软件行业，可以看到每3至4年，每台计算机软件都会附带不同的发行版/版本，以满足当前/现代的要求。&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001024923-362831763.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;版本控制是创建和管理软件产品的多个版本的实践，消费者可以根据自己的需求决定使用哪个版本，API的管理也是如此。&lt;br/&gt;API的创建始终始于使应用程序与内部/外部应用程序开发人员集成的想法。就像任何其他传统软件产品一样，它总是从小规模开始，并且会随着时间而发展。让我们看下面的简单用例，以更好地理解它。&lt;br/&gt;例如，我们可能希望使内部/外部应用程序开发人员能够访问客户信息，并且可能开始创建API以提供所需的功能。&lt;br/&gt;作为第一个版本，您可以为API提供仅对客户信息的读取权限。后来，随着对应用程序需求的增加，您的应用程序开发人员可能会请求对客户信息的“写入/更新”访问权限。作为API创建者/开发者，您可以决定是否：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;提供具有对客户信息的写入/更新访问权限的同一API的新版本&lt;/li&gt;
&lt;li&gt;完全提供单独的API，以提供对客户信息的写入/更新访问权限&lt;br/&gt;API的通用设计原则是使用第一种方法-从应用程序开发人员的角度来看，为我们提供相同功能的API的新版本，以及我们处理同一实体（客户）时的附加功能。这将导致具有相同API的2个版本：&lt;br/&gt;• CustomerInfo v1.0-提供对客户信息的只读访问&lt;br/&gt;• CustomerInfo v2.0 —提供对客户信息的读/写/更新访问&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001035251-711835527.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;通过API的版本控制，CustomerInfo API的使用者可以根据需要决定使用哪个版本。&lt;br/&gt;当我们想支持同一个API的多个版本时，作为API创建者/设计者，我们需要考虑以下02个主要设计决策：&lt;br/&gt;• 指定API版本信息的格式是什么&lt;br/&gt;• 消费者将如何指定所选API的API版本&lt;br/&gt;选择用于指定版本信息的格式时，可以选择以下02种常见做法：&lt;br/&gt;• 使用发布/构建日期-这允许使用发布/构建日期来唯一标识每个版本。&lt;br/&gt;示例—版本=“ 20200808” | 版本=“ 20190102”&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001040535-177333557.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;• 使用major.minor数字 -这些数字用于指定同一API的不同版本，并且该数字可以包含1或2或3位数字作为版本号的一部分。一些API开发人员使用“ v”前缀来表示它是版本号。&lt;br/&gt;示例— version =“ 1” | 版本=“ v1” | 版本=“ 1.1” | 版本=“ v1.1” | 版本=“ 1.1.1” | 版本=“ v1.1.1”&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001045177-771353616.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在决定使用者如何指定版本信息时，可以从以下03种常见做法中进行选择：&lt;br/&gt;• HTTP标头-自定义HTTP标头将用于传递API版本信息&lt;br/&gt;示例— x-customerinfoapi-version：2.1&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001052799-1435956344.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;• 查询参数-API版本信息将作为查询参数传递&lt;br/&gt;示例-/customerinfo?version=2.1&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001058382-2034627525.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;• URL -API版本信息将合并到URL本身&lt;br/&gt;示例-/ v2 / customerinfo&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1506969/202010/1506969-20201027001102583-622830217.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;作为API的创建者/开发者，我们还可以结合上面的一些方法，并提供用于提供API版本信息的混合方法。例如，我们可以使用URL方法来指定主要版本，而可以使用HTTP标头方法来指定API的次要版本。&lt;br/&gt;如您所见，API版本控制是API设计/开发中的关键功能，并且作为API提供程序，使消费者能够在不同的API版本之间进行选择是关键的业务差异。&lt;/p&gt;
</description>
<pubDate>Mon, 26 Oct 2020 16:09:00 +0000</pubDate>
<dc:creator>隔壁王书</dc:creator>
<og:description>版本控制是计算机软件行业人士使用的术语。但进化是我们所有人都要经历的事情，它适用于这个世界上的每个对象。 在计算机软件行业，可以看到每3至4年，每台计算机软件都会附带不同的发行版/版本，以满足当前/现</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/dc20181010/p/13882265.html</dc:identifier>
</item>
<item>
<title>如何实现一个FormData - hackftz</title>
<link>http://www.cnblogs.com/hackftz/p/13882180.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hackftz/p/13882180.html</guid>
<description>&lt;h4 id=&quot;一、前言&quot;&gt;一、前言&lt;/h4&gt;
&lt;p&gt;最近项目中遇到一个问题，我们需要在cocos项目里去上传音频文件，而cocos原生环境和平时我们开发所在的浏览器环境和Node环境有很多差异，而cocos环境只提供了基础类，没有提供FormData这种封装类。&lt;/p&gt;
&lt;p&gt;所以问题来了？如何实现一个FormData，以及怎么去使用它？&lt;/p&gt;
&lt;h4 id=&quot;二、浏览器中的formdata&quot;&gt;二、浏览器中的FormData&lt;/h4&gt;
&lt;p&gt;这里我列一个最简单的例子，我们来看看FormData到底是什么。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-jsx&quot;&gt;function App() {

  const [name, setName] = useState('')
  const [age, setAge] = useState(0)
  const [file, setFile] = useState&amp;lt;File | null&amp;gt;()

  const submit = () =&amp;gt; {
    console.log(name, age);

    console.log(file);

    var fd = new FormData()
    fd.append('name', name)
    fd.append('age', age.toString())
    fd.append('file', file as Blob)

    $.ajax({
      type: &quot;POST&quot;,
      url: &quot;www.happy.com&quot;,
      data: fd,
      processData: false,//重要
      contentType: 'multipart/form-data',//重要
      success: function (data: any) {
        
      }
    })
  }
  return (
    &amp;lt;div className=&quot;App&quot;&amp;gt;
      
      &amp;lt;form action=&quot;form_action.asp&quot; method=&quot;get&quot;&amp;gt;
        &amp;lt;p&amp;gt;name: &amp;lt;input type=&quot;text&quot; name=&quot;name&quot; value={name} onChange={e =&amp;gt; setName(e.currentTarget.value)} /&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;age: &amp;lt;input type=&quot;number&quot; name=&quot;age&quot; value={age} onChange={e =&amp;gt; setAge(Number(e.currentTarget.value))} /&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;file:&amp;lt;input type=&quot;file&quot; name=&quot;file&quot; onChange={e =&amp;gt; setFile(e.target.files &amp;amp;&amp;amp; e.target.files[0])}/&amp;gt;
        &amp;lt;/p&amp;gt;
        &amp;lt;input type=&quot;button&quot; name=&quot;b1&quot; value=&quot;submit&quot; onClick={() =&amp;gt; submit()} /&amp;gt;
      &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;FormData&lt;/strong&gt;：FormData 接口提供了一种表示表单数据的键值对 key-value 的构造方式，并且可以轻松的将数据通过XMLHttpRequest.send() 方法发送出去，本接口和此方法都相当简单直接。如果送出时的编码类型被设为 &quot;multipart/form-data&quot;，它会使用和表单一样的格式。（摘自MDN）&lt;/p&gt;
&lt;p&gt;大多数文章里，只给了这样的一种描述或者说是概念，它是一个接口类，用来做上传用，我们来看它在数据形式上体现的是什么。&lt;/p&gt;
&lt;p&gt;下面是chrome devtool request payload里的样子。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-http&quot;&gt;------WebKitFormBoundaryuhGsgTdqAAltAXy7 // 分隔/边界符
Content-Disposition: form-data; name=&quot;name&quot; // 内联形式

hackftz // value
------WebKitFormBoundaryuhGsgTdqAAltAXy7
Content-Disposition: form-data; name=&quot;age&quot;

22
------WebKitFormBoundaryuhGsgTdqAAltAXy7
Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;Minstrel - eyecatch!.mp3&quot;
Content-Type: audio/mpeg


------WebKitFormBoundaryuhGsgTdqAAltAXy7-- // 这里是end_boundary，结尾分隔/边界符，必需！
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;三、我在实现formdata时遇到了哪些坑？&quot;&gt;三、我在实现FormData时遇到了哪些坑？&lt;/h4&gt;
&lt;p&gt;先贴代码，然后说说我遇到了哪些坑。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-js&quot;&gt;export default class MyFormData {
    // 将随机数传入构造函数
        constructor(stamp) {
                this._boundary_key = stamp; // 随机数，分隔符和结尾分隔符必需。
                this._boundary = '--' + this._boundary_key;
                this._end_boundary = this._boundary + '--';
                this._result = [];
        }
        // 上传普通键值对——字符串、数字
        append(key, value) {
                this._result.push(this._boundary + '\r\n');
        this._result.push('Content-Disposition: form-data; name=&quot;' + key + '&quot;' + '\r\n\r\n');
        this._result.push(value);
        this._result.push('\r\n');
        }
        // 上传复杂数据——文件
        appendFile(name, data, ext){
                let type = &quot;audio/mpeg&quot;;
                let filename =  &quot;upload.&quot;+ext;

                this._result.push(`${this._boundary}\r\n`);
                this._result.push(`Content-Disposition: form-data; name=&quot;${name}&quot;; filename=&quot;${filename}&quot;\r\n`); // 上传文件定义
                this._result.push(`Content-Type: ${type}\r\n`);
                this._result.push(&quot;\r\n&quot;);
                this._result.push(data);
                this._result.push(&quot;\r\n&quot;);
        }
        // 获取二进制数据 get
        get arrayBuffer() {
                this._result.push('\r\n' + this._end_boundary); // 结尾分隔符
                let charArr = [];
        
        // 处理charCode
                for (let i = 0; i &amp;lt; this._result.length; i++) { // 取出文本的charCode（10进制
                        let item = this._result[i];
                        if( typeof(item) === 'string'){
                                for (let s = 0; s &amp;lt; item.length; s++){
                                        charArr.push(item.charCodeAt(s));
                                }
                        } else if(typeof(item) === 'number') {
                                let numstr = item.toString()

                                for (let s = 0; s &amp;lt; numstr.length; s++){
                                        charArr.push(numstr.charCodeAt(s));
                                }
                        } else{
                                for (let j = 0; j &amp;lt; item.length; j++){
                                                charArr.push(item[j]);
                                }
                        }
                                
                }
                let array = new Uint8Array(charArr);
                return array.buffer;
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;踩坑记录：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;首先，我需要定义一个boundary_key，它当前环境提供给FormData的随机数，chrome v87.0.4270.0提供给FormData的是&quot;WebKitFormBoundary&quot; + &quot;xxxxxxxxxxxxxx&quot; 随机数。我在项目里使用的是timestamp，这里只要提供一个随机数即可。&lt;/li&gt;
&lt;li&gt;appendFile方法的实现，要根据具体上传类型，文件类型，作content-type定义，比如我这里上传的是音频文件，所以设置的是&quot;audio/mpeg&quot;。&lt;/li&gt;
&lt;li&gt;普通键值对和复杂键值对的区分，如果value是字符串，直接分解成字符再处理；如果是number，这里有个坑，那就是直接添加到FormData会失败，所以需要先把number值转为string，再像处理string值一样处理。&lt;/li&gt;
&lt;li&gt;再看arrayBuffer实现方法，我们可以得知FormData最终要给api data的值是一个由具体blob值，分解为单个字符，存储到一个字符数组中，再创建一个参数为字符数组的新的Uint8Array数组，最终可以将这样一个arrayBuffer数据（通用的、固定长度的原始二进制数据缓冲区。）提供给服务器去解析。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;以上是封装FormData中我遇到的问题，再来看怎么去使用这样一个我们自定义的FormData。&lt;/p&gt;
&lt;h4 id=&quot;四、myformdata的使用&quot;&gt;四、MyFormData的使用&lt;/h4&gt;
&lt;p&gt;话不多说，先贴代码，再谈问题：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-js&quot;&gt;const stamp = Date.now() // 生成随机数，这里使用了时间戳
const fd = new MyFormData(stamp)

for (const key in data) {
        if (data.hasOwnProperty(key)) {
                fd.append(key, data[key])
        }
}

fd.appendFile('file', blob, data.fileExtName); // 添加要上传的文件，这里记得第三个参数要传入文件后缀名。

const config = {
        headers: {
                'Content-Type': `multipart/form-data; boundary=${stamp}` // 分隔符
        },
};

axios({
        url,
        data: fd.arrayBuffer,
        method: 'POST',
        headers
})
        .then(response =&amp;gt; {
                if (response.status === 200) {
                        const { data } = response;
                        console.log(&quot;fun -&amp;gt; JSON.stringify(data)&quot;, JSON.stringify(data))
                }
        })
        .catch(err =&amp;gt; {
                console.log(err);
        });
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;踩坑记录：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;因为我们上传的是二进制流数据，appendFile函数添加后缀名，在formdata数据里定义好Content-Disposition里的文件名，方便和后端开发人员识别是什么样的文件，是有必要的。&lt;/li&gt;
&lt;li&gt;request headers里注意&lt;code&gt;multipart/form-data; boundary=${stamp}&lt;/code&gt;这里一定要把随机数写到&lt;code&gt;boundary=&lt;/code&gt;后面，否则后端服务会报错'no multipart boundary was found'&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;五、如果觉得有帮助的话，还请给个赞，谢谢！&quot;&gt;五、如果觉得有帮助的话，还请给个赞，谢谢！&lt;/h4&gt;
</description>
<pubDate>Mon, 26 Oct 2020 15:37:00 +0000</pubDate>
<dc:creator>hackftz</dc:creator>
<og:description>一、前言 最近项目中遇到一个问题，我们需要在cocos项目里去上传音频文件，而cocos原生环境和平时我们开发所在的浏览器环境和Node环境有很多差异，而cocos环境只提供了基础类，没有提供Form</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/hackftz/p/13882180.html</dc:identifier>
</item>
<item>
<title>MacOs/Liunx主机搭建windows平台双机调试环境 - Taolaw</title>
<link>http://www.cnblogs.com/Taolaw/p/13837755.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Taolaw/p/13837755.html</guid>
<description>&lt;h2 id=&quot;0x00-前言&quot;&gt;0x00 前言&lt;/h2&gt;
&lt;p&gt;本文的主要试用对象是Mac OS/Linux用户，对于想调试windows内核相关的一些东西时，需要搭建双机调试环境的一些记录。另外对于本机是windows的用户也完全试用，windows搭建双机环境是会更简单一些，但是基本是一样的。&lt;/p&gt;
&lt;h2 id=&quot;0x01-测试环境&quot;&gt;0x01 测试环境&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;VMware 15&lt;/li&gt;
&lt;li&gt;windows 7 x86 –&amp;gt; 调试机&lt;/li&gt;
&lt;li&gt;windows xp –&amp;gt; 被调试机1&lt;/li&gt;
&lt;li&gt;windws 7 x86 –&amp;gt; 被调试机2&lt;/li&gt;
&lt;li&gt;Ubuntu 18.04 –&amp;gt; 物理机&lt;/li&gt;
&lt;li&gt;windbg –&amp;gt; 调试器&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;0x02-环境搭建&quot;&gt;0x02 环境搭建&lt;/h2&gt;
&lt;p&gt;环境搭建的核心主要在虚拟机的设置上，这块设置好了，后面就会比较顺利。&lt;/p&gt;
&lt;h3 id=&quot;1虚拟机的配置&quot;&gt;1.虚拟机的配置&lt;/h3&gt;
&lt;p&gt;虚拟机的安装在这里就不在叙述，安装好虚拟机以后，我们打开&lt;code&gt;virtual machine settings–&amp;gt;Add–&amp;gt;serial port–&amp;gt;finish&lt;/code&gt;,如下图所示&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201018220411865-89817536.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;随后我们选择&lt;code&gt;Use socket(named pipe)&lt;/code&gt;选项，这里需要输入一个文件的位置来做socket连接的转储，相当于调试信息转存的中转站，这里只需要指定就可以，稍后会自动在所设置目录自动创建文件，我这里是&lt;code&gt;com1&lt;/code&gt;文件，这里需要特别说明一下，在设置虚拟机的串行端口指定&lt;code&gt;com1&lt;/code&gt;还是&lt;code&gt;com2&lt;/code&gt;这取决于&lt;code&gt;serial port的端口号&lt;/code&gt;是几，默认情况下虚拟机添加了打印机 &lt;code&gt;print&lt;/code&gt;，所以此处默认端口为&lt;code&gt;2&lt;/code&gt;，我在测试时使用&lt;code&gt;com2&lt;/code&gt;没成功，删除了虚拟机的打印机后，使用的&lt;code&gt;com1端口&lt;/code&gt;可以成功。这台虚拟机是xp，是作为被调试机用的，所以我们选择&lt;code&gt;server&lt;/code&gt;，接着勾选&lt;code&gt;I/O Mode&lt;/code&gt;，使此虚拟机支持cpu中断，如下图所示&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201018220903538-187380177.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;接着设置调试机，基本和上面的设置一样，区别是，这次是选择&lt;code&gt;client&lt;/code&gt;，不勾选&lt;code&gt;I/O Mode&lt;/code&gt;选项，如下图所示&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201018221004108-573136214.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;Ok,到这里虚拟机的设置就完成了，接下来是被调试机的设置，我们打开被调试机&lt;/p&gt;
&lt;h3 id=&quot;2被调试机的设置&quot;&gt;2.被调试机的设置&lt;/h3&gt;
&lt;p&gt;这里先拿xp来说一下，windows7及以上的系统设置和xp略有不同，稍后会叙述．打开被调试机，&lt;code&gt;win+R&lt;/code&gt;键入&lt;code&gt;c:\boot.ini&lt;/code&gt;打开系统启动配置.然后添加一行配置，如下&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-powershell&quot;&gt;[boot loader]
timeout=30
default=multi(0)disk(0)rdisk(0)partition(1)\WINDOWS
[operating systems]
multi(0)disk(0)rdisk(0)partition(1)\WINDOWS=&quot;Microsoft Windows XP Professional&quot; /noexecute=optin /fastdetect
multi(0)disk(0)rdisk(0)partition(1)\WINDOWS=&quot;Microsoft Windows XP Professional debug&quot; /debug /debugport=com1 /baudrate=115200 /fastdetect
&lt;/code&gt;
&lt;/pre&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201026165800211-761845107.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;这里的&lt;code&gt;debugport&lt;/code&gt;需要和刚才设置的文件的名字一样，这里也是指定我们选中的串行接口。&lt;code&gt;baudrate&lt;/code&gt;默认为&lt;code&gt;115200&lt;/code&gt;，然后ctrl+s保存，再次重启就会多出一个支持调试的启动选项．如图&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201026223537476-1443140244.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;Windows Vista之后的系统，不在使用&lt;code&gt;BOOT.INI&lt;/code&gt;文件，改为了使用&lt;code&gt;Coot Configuration Data&lt;/code&gt;，其配置的原理也大同小异，下面以windows 7为例子，做一个示范&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-powershell&quot;&gt;C:\Windows\system32&amp;gt;bcdedit.exe /copy {current} /d &quot;windows 7 Debug with Serial&quot;      #复制当前的启动入口

已将该项成功复制到 {2bd58bb9-12d9-11eb-b328-b016eb5db92e}。

C:\Windows\system32&amp;gt;bcdedit.exe /debug {2bd58bb9-12d9-11eb-b328-b016eb5db92e} on      #启动入口启动内核调试

操作成功完成。

C:\Windows\system32&amp;gt;bcdedit /dbgsettings serial DEBUGPORT:1 BAUDRATE:115200      #serial表示使用串口，对应上面xp的com1
操作成功完成。

C:\Windows\system32&amp;gt;bcdedit /dbgsettings      #检查上述的设置
debugtype               Serial
debugport               1
baudrate                115200
操作成功完成。

C:\Windows\system32&amp;gt;bcdedit      #查看Windoes的启动入口

Windows 启动管理器
--------------------
标识符                  {bootmgr}
device                  partition=C:
description             Windows Boot Manager
locale                  zh-CN
inherit                 {globalsettings}
default                 {current}
resumeobject            {2bd58bb5-12d9-11eb-b328-b016eb5db92e}
displayorder            {current}
                        {2bd58bb9-12d9-11eb-b328-b016eb5db92e}
toolsdisplayorder       {memdiag}
timeout                 30

Windows 启动加载器
-------------------
标识符                  {current}
device                  partition=C:
path                    \Windows\system32\winload.exe
description             Windows 7
locale                  zh-CN
inherit                 {bootloadersettings}
recoverysequence        {2bd58bb7-12d9-11eb-b328-b016eb5db92e}
recoveryenabled         Yes
osdevice                partition=C:
systemroot              \Windows
resumeobject            {2bd58bb5-12d9-11eb-b328-b016eb5db92e}
nx                      OptIn

Windows 启动加载器
-------------------
标识符                  {2bd58bb9-12d9-11eb-b328-b016eb5db92e}
device                  partition=C:
path                    \Windows\system32\winload.exe
description             windows 7 Debug with Serial
locale                  zh-CN
inherit                 {bootloadersettings}
recoverysequence        {2bd58bb7-12d9-11eb-b328-b016eb5db92e}
recoveryenabled         Yes
osdevice                partition=C:
systemroot              \Windows
resumeobject            {2bd58bb5-12d9-11eb-b328-b016eb5db92e}
nx                      OptIn
debug                   Yes
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;0x03-调试机的设置&quot;&gt;0x03 调试机的设置&lt;/h2&gt;
&lt;p&gt;打开调试机，安装好windbg。随后我们复制一个新的桌面快捷方式，改名字(为了区分原来的快捷方式)，然后&lt;code&gt;右键--&amp;gt;属性--&amp;gt;目标&lt;/code&gt;在后面添加&lt;code&gt;-b -k com:port=1,baud=115200&lt;/code&gt;图片如下&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201026232050406-2064002630.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201026232115528-1270255161.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;这时我们需要重启被调试机,进入支持debug的启动选项，这时我们观察windbg已经连接到了目标主机，如下图&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201026232148432-82298558.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;h2 id=&quot;0x04-设置内核调试用的符号表&quot;&gt;0x04 设置内核调试用的符号表&lt;/h2&gt;
&lt;p&gt;在内核调试下，按&lt;code&gt;g&lt;/code&gt;可让目标主机继续运行，如果想让目标中断可选择调试器的&lt;code&gt;debug–&amp;gt;Break&lt;/code&gt;选项，即可把控制权交还调试器，随后我们加载内核调试需要的符号表,首先需要调试机联网，随后在调试器键入&lt;code&gt;ctrl+s&lt;/code&gt;打开符号表路径设置，输入如下&lt;code&gt;SRV*c:\symbols* https://msdl.microsoft.com/download/symbols&lt;/code&gt;这里的意思是告诉调试器，首先去c盘的&lt;code&gt;symbols&lt;/code&gt;目录找符号表，如果找不到就联网到微软的符号表服务器远程下载，下载的文件同样会存到&lt;code&gt;symbols&lt;/code&gt;目录方便下次使用.所以需要手动到c盘新建一个名字为symbols的空文件夹．随后在调试器的命令行输入&lt;code&gt;.reload /f&lt;/code&gt;重新加载符号表，一般来说第一次都会联网下载符号表的，下载过程中由于某些文件变化符号表已经不维护，所以会出现部分找不到的情况，但基本影响不大，如果出现完全不能下载的情况，请参考之前的&lt;a href=&quot;https://www.cnblogs.com/Taolaw/p/13789239.html&quot;&gt;文章&lt;/a&gt;解决。下载好以后就可以双机调试了&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1278763/202010/1278763-20201026232514195-939831734.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;/center&gt;
</description>
<pubDate>Mon, 26 Oct 2020 15:26:00 +0000</pubDate>
<dc:creator>Taolaw</dc:creator>
<og:description>0x00 前言 本文的主要试用对象是Mac OS/Linux用户，对于想调试windows内核相关的一些东西时，需要搭建双机调试环境的一些记录。另外对于本机是windows的用户也完全试用，windo</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/Taolaw/p/13837755.html</dc:identifier>
</item>
</channel>
</rss>