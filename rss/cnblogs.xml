<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Mac-搭建Hadoop集群 - 涛姐涛哥</title>
<link>http://www.cnblogs.com/taojietaoge/p/10803537.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/taojietaoge/p/10803537.html</guid>
<description>&lt;p&gt;&lt;span&gt;You have to work very hard to believe that you are really powerless.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Mac-搭建Hadoop集群&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我用到了：VMware Fusion、CentOS7、FileZilla、jdk-8u181-linux-x64.tar.gz和hadoop-2.7.6.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1、集群部署规划&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;NameNode单点部署：&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;2&quot; align=&quot;left&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;节点名称&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;NN1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;NN2&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;DN&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;RM&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;NM&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;规划IP&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;other&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;tjt01&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;NameNode&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;&lt;span&gt;DataNode&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;&lt;span&gt;NodeManager&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;172.16.114.130&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;hive/hdfs&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;tjt02&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;&lt;span&gt;SecondaryNameNode&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;DataNode&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;ResourceManager&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;NodeManager&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;172.16.114.131&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;hbase/kms&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;tjt03&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;&lt;span&gt;DataNode&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;&lt;span&gt;NodeManager&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;172.16.114.132&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;mysql/spark&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;




&lt;p&gt;&lt;span&gt;&lt;strong&gt;2、三台客户机相关准备&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.1、安装VMware虚拟机&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在虚拟机中安装CentOS镜像，由初始安装的CentOS7版本的镜像，完整克隆出另外两台虚拟机&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502164338418-1977274322.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.2、修改主机名&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 3&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 3&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;[root@tjt01 tjt]# vi /etc/hostname&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;分别修改三台虚拟机主机名：tjt01、tjt02、tjt03&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.3、修改host文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;配置主机host：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 tjt]# &lt;span&gt;vi&lt;/span&gt; /etc/hosts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 3&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190503011940247-1590107927.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;将配置发送到其他的主机，同时在其他主机上配置：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 4&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;scp&lt;/span&gt; -r /etc/hosts root@tjt02:/etc/
&lt;span&gt;scp&lt;/span&gt; -r /etc/hosts root@tjt03:/etc/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502172216562-1377598299.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;测试host文件修改结果：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;ping&lt;/span&gt;&lt;span&gt; tjt01
&lt;/span&gt;&lt;span&gt;ping&lt;/span&gt;&lt;span&gt; tjt02
pint tjt03&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502172344338-1339515834.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.4、设置SSH免密登录&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 4&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;span&gt;每两台主机之间设置免密码，自己的主机与自己的主机之间也要求设置免密码；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;输入：ssh-keygen -t rsa&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后按下四次回车，之后在把密匙发到其他主机上，输入：ssh-copy-id tjt01 并按提示输入密码，然后是ssh-copy-id 02和ssh-copy-id 03同样的操作；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之后，在另外两台虚拟机上也执行相同的步骤：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 4&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 4&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;section&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;ssh-keygen&lt;/span&gt; -&lt;span&gt;t rsa
&lt;/span&gt;&lt;span&gt;ssh&lt;/span&gt;-copy-&lt;span&gt;id&lt;/span&gt;&lt;span&gt; tjt01
&lt;/span&gt;&lt;span&gt;ssh&lt;/span&gt;-copy-&lt;span&gt;id&lt;/span&gt;&lt;span&gt; tjt02
&lt;/span&gt;&lt;span&gt;ssh&lt;/span&gt;-copy-&lt;span&gt;id&lt;/span&gt; tjt03&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;测试SSH免密登录：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ssh&lt;/span&gt; tjt01、&lt;span&gt;ssh&lt;/span&gt; tjt02、&lt;span&gt;ssh&lt;/span&gt; tjt03
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502173235532-2031378749.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.5、安装配置JDK&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;虚拟机默认安装了一个openjdk，卸载掉：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 5&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;rpm -qa | &lt;span&gt;grep&lt;/span&gt; jdk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;可以查看已经安装了的openjdk&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;yum&lt;/span&gt; remove *openjdk*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;干掉openjdk&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;yum&lt;/span&gt; remove copy-jdk-configs-&lt;span&gt;3.3&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;.el7_5.noarch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span&gt;干掉jdk-configs&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502175150268-1047679783.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502175808051-1817271011.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将JDK安装包上传到/opt下，可以通过XShell的rz上传，也可以用FileZilla：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502181227915-1107876357.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到/opt 目录下解压：tar xzvf jdk-8u181-linux-x64.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502181608003-709232859.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;设置JAVA_HOME：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;输入：vi /etc/profile，在profile文件中的编辑模式下加上下方export配置：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 5&quot; readability=&quot;33&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;export JAVA_HOME=/opt/jdk1.&lt;span&gt;8&lt;/span&gt;&lt;span&gt;.0_181
export PATH&lt;/span&gt;=$PATH:$JAVA_HOME/bin:$JAVA_HOME/sbin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改好之后使文件生效：source /etc/profile&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502182852817-669744167.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复制JDK到另外两个节点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在这之前要先把另外两台虚拟机上的openjdk也干掉：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;yum&lt;/span&gt; remove *openjdk*
&lt;span&gt;yum&lt;/span&gt; remove copy-jdk-configs-&lt;span&gt;3.3&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;.el7_5.noarch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;然后复制jdk到另外两个虚拟机上：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;scp&lt;/span&gt; -r /opt/jdk1.&lt;span&gt;8&lt;/span&gt;.0_181 root@tjt02:/opt/
&lt;span&gt;scp&lt;/span&gt; -r /opt/jdk1.&lt;span&gt;8&lt;/span&gt;.0_181 root@tjt03:/opt/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;向其他节点复制profile文件：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;scp&lt;/span&gt; /etc/profile root@tjt02:/etc/
&lt;span&gt;scp&lt;/span&gt; /etc/profile root@tjt03:/etc/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502184640054-547309415.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后每个节点分别执行 source /etc/profile ，使profile生效下，并通过java-version简单测试下，jdk复制是否成功：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;tjt02:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502184844933-1797848245.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;tjt03:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502185002636-298063745.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、安装Hadoop&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.1、上传并解压Hadoop&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502185330757-1345264876.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解压：tar zxvf hadoop-2.7.6.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502185701597-1871126938.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.2、搭建Hadoop集群&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 6&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;17&quot;&gt;
&lt;p&gt;&lt;span&gt;配置文件在&lt;span&gt;hadoop2.7.6/etc/hadoop/&lt;span&gt;下，修改设置&lt;span&gt;hadoop2.7.6&lt;span&gt;目录下的可执行权限&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3.2.1、修改 core-site.xml&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; core-site.xml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;然后在core-site.xml文件中编辑如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!-- 指定HDFS中NameNode的地址 --&amp;gt; 
     &amp;lt;property&amp;gt;
     &amp;lt;name&amp;gt;fs.defaultFS&amp;lt;/name&amp;gt;
         &amp;lt;value&amp;gt;hdfs:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;tjt01:9000&amp;lt;/value&amp;gt;&lt;/span&gt;
     &amp;lt;/property&amp;gt;
&amp;lt;!-- 指定hadoop运行时产生文件的存储目录 --&amp;gt; &amp;lt;property&amp;gt; 
     &amp;lt;name&amp;gt;hadoop.tmp.&lt;span&gt;dir&lt;/span&gt;&amp;lt;/name&amp;gt;
     &amp;lt;value&amp;gt;/opt/hadoop-&lt;span&gt;2.7&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;/data/full/tmp&amp;lt;/value&amp;gt;
     &amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502191310734-1660429579.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.2.2、修改hadoop-env.sh&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; hadoop-&lt;span&gt;env&lt;/span&gt;.&lt;span&gt;sh&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改JAVA_HOME：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502192137373-1601562228.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 6&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2.3&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;修改&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;hdfs-site.xml&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; hdfs-site.xml &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改 hdfs-site.xml 的配置如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;configuration&amp;gt; 
&amp;lt;!-- 设置dfs副本数，不设置默认是3个 --&amp;gt; 
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;dfs.replication&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;&lt;span&gt;2&lt;/span&gt;&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt; 
&amp;lt;!-- 设置secondname的端口 --&amp;gt; 
&amp;lt;property&amp;gt; 
  &amp;lt;name&amp;gt;dfs.namenode.secondary.http-address&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;tjt02:&lt;span&gt;50090&lt;/span&gt;&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502192508092-804153659.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 7&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2.4&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;修改&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;slaves&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; slaves&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;增加slaves 配置如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;tjt01
tjt02
tjt03&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502192739406-136512528.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 7&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;18&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;53.5&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2.5&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;修改&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;mapred-env.sh&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; mapred-&lt;span&gt;env&lt;/span&gt;.&lt;span&gt;sh&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改其JAVA_HOME如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;export JAVA_HOME=/opt/jdk1.&lt;span&gt;8&lt;/span&gt;.0_181&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502193046952-310177841.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 7&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2.6&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;修改&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;mapred-site.xml&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;mv&lt;/span&gt; mapred-site.xml.template mapred-&lt;span&gt;site.xml
[root@tjt01 hadoop]# &lt;/span&gt;&lt;span&gt;vi&lt;/span&gt; mapred-site.xml &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改其configuration如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;configuration&amp;gt;
&amp;lt;!-- 指定mr运行在yarn上 --&amp;gt;
    &amp;lt;property&amp;gt;
     &amp;lt;name&amp;gt;mapreduce.framework.name&amp;lt;/name&amp;gt;
     &amp;lt;value&amp;gt;yarn&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502193745146-1534473664.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 7&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2.7&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;修改&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;yarn-env.sh&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; yarn-&lt;span&gt;env&lt;/span&gt;.&lt;span&gt;sh&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改其JAVA_HOME如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;export JAVA_HOME=/opt/jdk1.&lt;span&gt;8&lt;/span&gt;.0_181&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502194047262-1091130668.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 7&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2.8&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;修改&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;yarn-site.xml&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; yarn-site.xml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改配置如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;configuration&amp;gt;
&amp;lt;!-- reducer获取数据的方式 --&amp;gt; 
&amp;lt;property&amp;gt; 
 &amp;lt;name&amp;gt;yarn.nodemanager.aux-services&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;mapreduce_shuffle&amp;lt;/value&amp;gt;
     &amp;lt;/property&amp;gt;
&amp;lt;!-- 指定YARN的ResourceManager的地址 --&amp;gt; &lt;br/&gt;&amp;lt;property&amp;gt; 
        &amp;lt;name&amp;gt;yarn.resourcemanager.&lt;span&gt;hostname&lt;/span&gt;&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;tjt02&amp;lt;/value&amp;gt;
     &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.nodemanager.vmem-check-enabled&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;&lt;span&gt;false&lt;/span&gt;&amp;lt;/value&amp;gt;
        &amp;lt;description&amp;gt;Whether virtual memory limits will be enforced &lt;span&gt;for&lt;/span&gt; containers&amp;lt;/description&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.nodemanager.vmem-pmem-ratio&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;&lt;span&gt;4&lt;/span&gt;&amp;lt;/value&amp;gt;
        &amp;lt;description&amp;gt;&lt;span&gt;Ratio between virtual memory to physical memory when setting memory limits
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; containers&amp;lt;/description&amp;gt;
   &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502195147414-1133327716.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 8&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.3&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;分发&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;hadoop&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;到各个节点&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;scp&lt;/span&gt; -r /opt/hadoop-&lt;span&gt;2.7&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;/ root@tjt02:/opt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;scp&lt;/span&gt; -r /opt/hadoop-&lt;span&gt;2.7&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;/ root@tjt03:/opt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 8&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.4&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;配置环境变量&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;vi&lt;/span&gt; /etc/profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;修改配置如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;export HADOOP_HOME=/opt/hadoop-&lt;span&gt;2.7&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;&lt;span&gt;
export PATH&lt;/span&gt;=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502200524800-1846632687.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;source /etc/profile 使profile文件生效；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# source /etc/profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 8&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.5&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;分发&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;profile&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;到各个节点&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;scp&lt;/span&gt; /etc/profile root@tjt02:/etc/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# &lt;span&gt;scp&lt;/span&gt; /etc/profile root@tjt03:/etc/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502200843885-499955717.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到各自的服务节点上是profile 生效：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
&lt;span&gt;[root@tjt02 ~]# source /etc/profile
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt03 ~]# source /etc/profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 8&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;启动验证集群&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 8&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;span&gt;4.1 &lt;span&gt;启动集群&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 9&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;section&quot; readability=&quot;10.5&quot;&gt;&lt;strong&gt;&lt;span&gt;4.1.1 &lt;span&gt;&lt;span&gt;如果集群是第一次启动，需要格式化&lt;span&gt;namenode&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# hdfs namenode -format&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;当看到19/05/03 03:45:47 INFO common.Storage: Storage directory /opt/hadoop-2.7.6/data/full/tmp/dfs/name has been successfully formatted. 就格式化OK了；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502203041331-1738891675.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 9&quot; readability=&quot;33&quot;&gt;
&lt;p&gt;&lt;span&gt;到此为止，上面存在有一个错误，不能在hdfs-site.xml文件中这么写注释【#tjt】：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502203653077-1809209636.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; readability=&quot;6&quot;&gt;&lt;strong&gt;&lt;span&gt;4.1.2 &lt;span&gt;&lt;span&gt;启动&lt;span&gt;Hdfs&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop-&lt;span&gt;2.7&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;]# start-dfs.&lt;span&gt;sh&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502204041364-741859581.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 9&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;section&quot; readability=&quot;9&quot;&gt;&lt;strong&gt;&lt;span&gt;4.1.3 &lt;span&gt;&lt;span&gt;启动&lt;span&gt;Yarn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;p&gt;&lt;span&gt; 如果Namenode和ResourceManager不是同一台虚拟机的话，不能在NameNode上启动yarn，应该在ResourceManager所在的机器上启动yarn；我的yarn配置在tjt02服务器上，一次需要到tjt02机器上启动yarn&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502204645826-94657685.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt02 hadoop]# start-yarn.&lt;span&gt;sh&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502204800465-1995265305.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 10&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.1.4 jps&lt;span&gt;&lt;span&gt;查看进程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 hadoop]# jps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502204933648-1782171401.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt02 hadoop]# jps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502205038509-980223722.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt03 hadoop]# jps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502205148958-1382078245.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 10&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;section&quot; readability=&quot;7&quot;&gt;&lt;strong&gt;&lt;span&gt;4.1.5 web&lt;span&gt;&lt;span&gt;页面访问&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;p&gt;&lt;span&gt; 在虚拟机tjt01上访问：http://172.16.114.130:50070&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502215058524-1212396161.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Datanode:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190503014935547-2008315099.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在虚拟机tjt02上访问：http://172.16.114.131:8088/cluster&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190502215356776-1971939615.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 4.2、Hadoop停止启动方式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1）各个服务组件逐一启动&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;分别启动hdfs 组件：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;hadoop-deamon.&lt;span&gt;sh&lt;/span&gt; start | stop namenode | datnode | secondarynamenode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;启动yarn：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yarn-deamon.&lt;span&gt;sh&lt;/span&gt; start | stop resourcemanager | nodemanager&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;2) 各个模块分开启动(常用)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;start | stop-dfs.&lt;span&gt;sh&lt;/span&gt;&lt;span&gt;
start &lt;/span&gt;| stop-yarn.&lt;span&gt;sh&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;3) 全部启动&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;start | stop-all.&lt;span&gt;sh&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、关闭防火墙&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;临时关闭&lt;/span&gt;
&lt;span&gt;systemctl stop firewalld
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;禁止开机启动&lt;/span&gt;
systemctl disable firewalld&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190503015053052-770212214.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、创建用户，设置文件权限&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;创建用户，修改密码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@tjt01 ~&lt;span&gt;]# useradd tjt
[root@tjt01 &lt;/span&gt;~]# &lt;span&gt;passwd&lt;/span&gt; tjt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190503015808937-2142028622.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 12&quot;&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;设置&lt;span&gt;&lt;span&gt;tjt&lt;span&gt;用户具有&lt;span&gt;root&lt;span&gt;权限 修改 &lt;span&gt;/etc/sudoers &lt;span&gt;文件，找到下面一行，在&lt;span&gt;root&lt;span&gt;下面添加一行，如下所示:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190503020108153-1572576770.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 2&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 12&quot;&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;修改完毕，现在可以用&lt;span&gt;&lt;span&gt;tjt&lt;span&gt;帐号登录，然后用命令 &lt;span&gt;su - &lt;span&gt;，即可获得&lt;span&gt;root&lt;span&gt;权限进行操作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1580332/201905/1580332-20190503020340775-170467086.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 12&quot;&gt;
&lt;div class=&quot;section&quot;&gt;&lt;span&gt;其实，当Web页面访问：http://172.16.114.130:50070，可以看到hadoop页面时Hadoop集群就成功构建好了。&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 02 May 2019 18:52:00 +0000</pubDate>
<dc:creator>涛姐涛哥</dc:creator>
<og:description>You have to work very hard to believe that you are really powerless. Mac-搭建Hadoop集群 我用到了：VMware Fusi</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/taojietaoge/p/10803537.html</dc:identifier>
</item>
<item>
<title>【剑指Offer】跳台阶 - 坏坏也童鞋</title>
<link>http://www.cnblogs.com/iwiniwin/p/10798889.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/iwiniwin/p/10798889.html</guid>
<description>&lt;p&gt;一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。&lt;/p&gt;
&lt;h2 id=&quot;解法1&quot;&gt;解法1&lt;/h2&gt;
&lt;p&gt;首先对这道题，我们可以通过找规律来解&lt;br/&gt;一只青蛙可以跳上1级台阶，也可以跳上2两级台阶&lt;br/&gt;当n = 1时，有1种跳法&lt;br/&gt;当n = 2时，有2种跳法&lt;br/&gt;当n = 3时，有3种跳法&lt;br/&gt;当n = 4时，有5种跳法&lt;br/&gt;当n = 5时，有8种跳法&lt;br/&gt;...&lt;br/&gt;等等，1，2，3，5，8...，多么熟悉的数列，斐波那契？&lt;br/&gt;仔细想想当有n(n &amp;gt;= 2)级台阶时，求F(n)&lt;br/&gt;青蛙第一步可以选择跳上1级台阶，则还剩n - 1级台阶需要跳，即F(n - 1)&lt;br/&gt;青蛙第一步也可以选择跳上2级台阶，则还剩n - 2级台阶需要跳，即F(n - 2)&lt;br/&gt;则总的跳法F(n) = F(n - 1) + F(n - 2)，毫无疑问这就是斐波那契数列的定义了。&lt;br/&gt;关于斐波那契的求解方法，读者可以参考&lt;a href=&quot;https://www.cnblogs.com/iwiniwin/p/10798884.html&quot;&gt;【剑指Offer】斐波那契数列&lt;/a&gt;，包括了递归，动态规范，矩阵快速幂多种解法，这里就不再赘述了。&lt;br/&gt;下面放上以求解斐波那契数列的方式解题的其中一种写法。&lt;/p&gt;
&lt;h3 id=&quot;实现代码&quot;&gt;实现代码&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;public int jumpFloor(int number)
{
    int f1 = 0;
    int f2 = 1;
    while (number-- &amp;gt; 0)
    {
        f2 = f1 + f2;
        f1 = f2 - f1;
    }
    return f2;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;排列组合&quot;&gt;排列组合&lt;/h2&gt;
&lt;p&gt;网上大多数的解法都是以求解斐波那契数列的思路来解题，但其实使用排列组合的思想也可以求解（真相是一开始没发现是斐波那契，才想到排列组合的-_-||）。&lt;br/&gt;解题前先简单介绍下排列组合，摘自百度百科&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;排列的定义：从n个不同元素中，任取m(m≤n,m与n均为自然数,下同）个元素按照一定的顺序排成一列，叫做从n个不同元素中取出m个元素的一个&lt;code&gt;排列&lt;/code&gt;。从n个不同元素中取出m个元素的所有排列的个数，叫做从n个不同元素中取出m个元素的排列数，用符号A(n,m）表示。&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[A{^m_n} = n * (n - 1) * (n-2) * ... * (n-m+1) = \frac{n * (n - 1) * (n - 2) * (n - m + 1) * (n - m) * ... * 2 * 1}{(n - m) * (n - m - 1) * (n - m - 2) * ... * 2 * 1} \]&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[A{^m_n} = \frac{n!}{(n - m)!}\]&lt;/span&gt;&lt;br/&gt;其中n!表示n的阶乘，比如4! = 4 * 3 * 2 * 1&lt;br/&gt;对于&lt;span class=&quot;math display&quot;&gt;\[A{^m_n} = n * (n - 1) * (n-2) * ... * (n-m+1)\]&lt;/span&gt;可以这样理解，当从n个元素中取第一个元素时，有n种取法。当再取第2个元素时，此时还剩n - 1个元素，有n - 1种取法。当再取第3个元素时，此时还剩n - 2个元素，有n - 2种取法。以此类推，当取到第m个元素时，此时还剩n - m + 1个元素，有n - m + 1种取法。则总取法为&lt;span class=&quot;math display&quot;&gt;\[n * (n - 1) * (n-2) * ... * (n-m+1)\]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;组合的定义：从n个不同元素中，任取m(m≤n）个元素并成一组，叫做从n个不同元素中取出m个元素的一个&lt;code&gt;组合&lt;/code&gt;。从n个不同元素中取出m个元素的所有组合的个数，叫做从n个不同元素中取出m个元素的组合数。用符号C(n,m) 表示。&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[C{^m_n} = \frac{A{^m_n}}{m!} = \frac{n!}{(n - m)!m!}\]&lt;/span&gt;&lt;br/&gt;排列和组合的区别可以先简单理解为，从n个不同元素中，任取m个元素，有多少种取法，如果这m个元素的先后顺序不同，就认为是不同的取法的话，那么总取法数就是排列数A(n,m）。如果取出来的m个元素无论先后顺序如何，都认为是同一种取法，那么总取法数就是组合数C(n,m)。举个栗子，在{1，2，3，4，5}中任取三个数{2， 4， 5}或者{5，2，4}，对于排列数来说，它们属于2种取法，而对于组合数来说它们只算1种取法。&lt;br/&gt;可以发现，排列和组合的区别在于取出来的这m个元素是否有顺序性。当有顺序性时，这m个元素有A(m,m）种排列顺序，所以排列数A(n,m）除以A(m,m）,去除m个元素顺序性的影响，得到的就是组合数C(n,m)，即&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[C{^m_n} =\frac{A{^m_n}}{A{^m_m}} =\frac{A{^m_n}}{m!} \]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;解法2&quot;&gt;解法2&lt;/h2&gt;
&lt;p&gt;回到本题，青蛙可以跳上1级台阶，也可以跳上2级台阶，&lt;br/&gt;对于n级台阶来说，它最多可以跳 n/2 次 2 级台阶，也就是说总的跳法数是跳0次2级台阶跳法数，1次2级台阶跳法数，2次2级台阶跳法数 ... n/2 次2级台阶跳法数的总和&lt;br/&gt;现在问题就变成了求跳指定次数2级台阶的跳法数&lt;br/&gt;假设有n级台阶，指定要跳m次2级台阶，还剩下n - 2m个1级台阶，则青蛙一共要跳n - 2m + m = n - m次才能跳完。即在n-m次跳跃中选择m次跳2级台阶，有多少种跳法数呢，C(n - m,m)种。（注意这里不是An - m,m)，因为选出的m次2级台阶没有顺序性）&lt;br/&gt;所以我们求出C(n - 1,1)，C(n - 2,2)，C(n - 3,3) .. C(n - n/2, n/2)，然后将其相加，记得再加上1（选0个2级台阶，1种跳法），就是总的跳法数&lt;br/&gt;实现代码时注意求组合数C(n,m)的算法，需要做一些优化，主要有两点&lt;br/&gt;先化简公式&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[C{^m_n} =\frac{A{^m_n}}{m!} =\frac{n * (n - 1) * (n-2) * ... * (n-m+1)}{m!} \]&lt;/span&gt;&lt;br/&gt;1，如果C(n,m)的结果用c#的int类型存储，则最大值为2^31^-1，如果按照公式依次计算分子和分母，可能分子或分母会超过2^31^-1，从而造成异常。所以优化为分子和分母的计算同步进行，当判断分子除以分母可以除整的时候，就先相除，避免累计数过大。后面的代码会有对应注释。&lt;br/&gt;2，可以省略的计算就省略&lt;br/&gt;比如求解C(5,4)，其中的4 * 3 * 2，分子分母可以直接相约，本来分子分母的计算都需要连乘4次，现在只需要连乘1次&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[C{^4_5} = \frac{5 * 4 * 3 * 2}{4 * 3 * 2 * 1} \]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;实现代码-1&quot;&gt;实现代码&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;// 求解cnm
public int c(int n, int m)
{
    int count = m;
    int nf = 1, mf = 1;
    if (m &amp;gt;= n - m + 1)
    {
        // 对应优化2，只需要连乘n-m次
        count = n - m;
    }
    for (int i =0; i &amp;lt; count; i++)
    {
        nf *= (n - i);
        mf *= (i + 1);
        // 对应优化1，可以除整的时候就先除
        if (nf % mf == 0)
        {
            nf = nf / mf;
            mf = 1;
        }
    }
    return nf / mf;
}

public int jumpFloor(int number)
{
    int ret = 1;
    int count = number / 2;
    for (int i = 1; i &amp;lt;= count; i++)
    {
        ret += c(number - i, i);
    }
    return ret;
}&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 02 May 2019 18:04:00 +0000</pubDate>
<dc:creator>坏坏也童鞋</dc:creator>
<og:description>分享剑指Offer，跳台阶题目的解法，除了大多数的斐波那契数列解法，还有排列组合思路的解法。题目描述：一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/iwiniwin/p/10798889.html</dc:identifier>
</item>
<item>
<title>C语言益智游戏（记忆童年） - 东小东</title>
<link>http://www.cnblogs.com/dongxiaodong/p/10804004.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dongxiaodong/p/10804004.html</guid>
<description>&lt;p&gt;&lt;strong&gt;时间：大一上学期&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目的：C语言上半部分课设&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;名称：数字益智游戏（未删减版）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;补充：&lt;/strong&gt;system(&quot;cls&quot;);为清屏&lt;/p&gt;
&lt;p&gt;           system(&quot;pause&quot;);为暂停屏幕，按任意键结束&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;一共有5场游戏：&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;1、 背背乘法口诀表&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;刚开始为乘法口诀表无答案；小朋友可以自己先思考;然后输入1之后可以看到乘法口诀表及其答案。最后按任意键返回主菜单。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201905/1485202-20190503001544722-663764968.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201905/1485202-20190503001648333-1726033033.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;2、 数字比大小&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;系统给出随机的10个数字，小朋友要找出并输入其中的最大数，如果输入答案是错误，则还有一次机会输入，正确则有鼓励的话。最后按任意键返回主菜单。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201905/1485202-20190503001725844-1575563395.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;3、数数看有多少个字母和数字&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;游戏一共有5场(1-4为系统给出问题、第五场为自己输入），输入1~5的数字实现，输入1-4时，系统给出包含数字和字母的字符串，输入5时自己输入一个字符串；然后小朋友要回答其中数字和字母个是多少个，系统会自动判断其正误，有一次机会回答问题。最后按任意键返回主菜单。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201905/1485202-20190503001825794-614766430.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;4、加减乘除&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;系统给出两个任意一位数，前面相对后面的数进行加减乘除，小朋友要分别输入其运行结果，系统会自动判断其正误，有一次机会回答问题。最后按任意键返回主菜单。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201905/1485202-20190503001906360-314384220.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;5、排序&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;系统给出任意五个一位数字，小朋友要输出其排序结果，系统会自动判断其正误，有一次机会回答问题。最后按任意键返回主菜单。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201905/1485202-20190503002004602-1587274301.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;代码：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;113&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; #include&amp;lt;stdio.h&amp;gt;
&lt;span&gt;  2&lt;/span&gt; #include&amp;lt;&lt;span&gt;string&lt;/span&gt;.h&amp;gt;
&lt;span&gt;  3&lt;/span&gt; #include&amp;lt;stdlib.h&amp;gt;
&lt;span&gt;  4&lt;/span&gt; #include&amp;lt;time.h&amp;gt;
&lt;span&gt;  5&lt;/span&gt; #include&amp;lt;ctype.h&amp;gt;
&lt;span&gt;  6&lt;/span&gt; #include&amp;lt;math.h&amp;gt;
&lt;span&gt;  7&lt;/span&gt; 
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; aa();
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ab();
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bb();
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bc();
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bd();
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; x, k;
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;     k = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt;&lt;span&gt; (k)
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt;         system(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;cls&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t@ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ \n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t# \t \t \3 小朋友益智游戏\3  \t\t  #\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t#-------------------------------------------------#\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t# \t \t \4 1-&amp;gt;背背乘法口诀表 \t \t  #\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t# \t \t \4 2-&amp;gt;数字比大小 \t\t  #\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t#\t \t \4 3-&amp;gt;数数看有多少个字母和数字    #\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t#\t \t \4 4-&amp;gt;加减乘除  \t\t  #\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t#\t \t \4 5-&amp;gt;排序\t \t \t  #\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t@ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @  \n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; 
&lt;span&gt; 30&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请选择相应的操作:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;         scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;&lt;span&gt;x);
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;         &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (x)
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;case&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;:  aa(); &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;case&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;: ab(); &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;   
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;         &lt;span&gt;case&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;:  bb(); &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;   
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         &lt;span&gt;case&lt;/span&gt; &lt;span&gt;4&lt;/span&gt;:  bc(); &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;    
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;         &lt;span&gt;case&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;: bd(); &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;         &lt;span&gt;default&lt;/span&gt;: printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;输入数字错误,请重新选择\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);  
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bd() {
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; i, a[&lt;span&gt;5&lt;/span&gt;&lt;span&gt;], j, c, k, l, o, b, t, s;
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*********************************************排序****************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;    time_t ts;
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;     srand((unsigned &lt;span&gt;int&lt;/span&gt;)time(&amp;amp;&lt;span&gt;ts));
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;5&lt;/span&gt;; i++) { a[i] = rand() % &lt;span&gt;10&lt;/span&gt;; printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\t&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, a[i]); }
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;4&lt;/span&gt;; i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; &lt;span&gt;4&lt;/span&gt; - i; j++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (a[j] &amp;lt; a[j + &lt;span&gt;1&lt;/span&gt;]) { b = a[j]; a[j] = a[j + &lt;span&gt;1&lt;/span&gt;]; a[j + &lt;span&gt;1&lt;/span&gt;] =&lt;span&gt; b; }
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n小朋友输入你的由大到小排序吧：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d%d%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;k, &amp;amp;l, &amp;amp;o, &amp;amp;s, &amp;amp;&lt;span&gt;t);
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;     j = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (k == a[j] &amp;amp;&amp;amp; l == a[j+&lt;span&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; o == a[j+&lt;span&gt;2&lt;/span&gt;] &amp;amp;&amp;amp; s == a[j+&lt;span&gt;3&lt;/span&gt;] &amp;amp;&amp;amp; t == a[&lt;span&gt;4&lt;/span&gt;]) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;                    \2\2    很棒哟，好样的    \2\2    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;     
&lt;span&gt; 60&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;下次努力，细心,正确答案是：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;5&lt;/span&gt;; i++) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\t&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, a[i]);
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;     }printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n*********************************************排序****************************************************\n\n\n\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;); system(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bc()
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*********************************************加减乘除************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; i, a[&lt;span&gt;10&lt;/span&gt;&lt;span&gt;], j, jia, jian, cheng, chu, k, l, o;
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;    time_t ts;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;     srand((&lt;span&gt;int&lt;/span&gt;)time(&amp;amp;&lt;span&gt;ts));
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;2&lt;/span&gt;; i++) { a[i] = rand() % &lt;span&gt;10&lt;/span&gt;; printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, a[i]); }
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;     jia = jian = cheng = chu = a[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; &lt;span&gt;2&lt;/span&gt;; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;         jia += a[i]; jian -= a[i]; cheng *= a[i]; chu /=&lt;span&gt; a[i];
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; 
&lt;span&gt; 77&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;小朋友快输入你前一个数对后一个数的加减乘除(除的结果要四舍五入）的答案哟：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;j, &amp;amp;k, &amp;amp;l, &amp;amp;&lt;span&gt;o);
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (j == jia&amp;amp;&amp;amp;k == jian&amp;amp;&amp;amp;l == cheng&amp;amp;&amp;amp;o == chu)printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;完美，棒棒的哟\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt; printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;好好检查一下哟，加油,两数的加减乘除答案分别外：%d，%d，%d，%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, jia, jian, cheng, chu);
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*********************************************加减乘除************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;     system(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; bb()
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; q, w, n, b1 = &lt;span&gt;0&lt;/span&gt;, b2 = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;**********************************数数看有多少个字母和数字**************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;     &lt;span&gt;char&lt;/span&gt; a[&lt;span&gt;100&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;asjijFGDFHvn549447548415&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, b[&lt;span&gt;100&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ash65196erfvdfredjimo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, c[&lt;span&gt;100&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ijrefvfrjGHHGJHbuerjbfug&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, d[&lt;span&gt;100&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ijerdfvoierjiuvfj6489hre547gre7fff48&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, dd[&lt;span&gt;100&lt;/span&gt;], tt[&lt;span&gt;100&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;游戏一共有5场(1-4为小东给出问题、第五场为自己输入哟），输入1~5的数字，小朋友想玩哪个呢：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;&lt;span&gt;n);
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (n == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)strcpy(dd, a);
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (n == &lt;span&gt;2&lt;/span&gt;&lt;span&gt;)strcpy(dd, b);
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (n == &lt;span&gt;3&lt;/span&gt;&lt;span&gt;)strcpy(dd, c);
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (n == &lt;span&gt;4&lt;/span&gt;&lt;span&gt;)strcpy(dd, d);
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; 
&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (n == &lt;span&gt;5&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n@@@自己输入一个字符串:\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;         scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, tt);
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;        strcpy(dd, tt);
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, dd);
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i&amp;lt;strlen(dd); i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (isalpha(dd[i]) != &lt;span&gt;0&lt;/span&gt;) b1++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (isdigit(dd[i])) b2++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;     }printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;小朋友快输入你的答案(字母、数字。。用空格隔开）：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;q, &amp;amp;&lt;span&gt;w);
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (q == b1&amp;amp;&amp;amp;w == b2) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;回答正确了\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (q != b1 || w != b2)  printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;有错误，下次努力，正确是字母个数：%d,数字个数：%d\n\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, b1, b2);
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;**********************************数数看有多少个字母和数字**************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;     system(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; aa()
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;********************************************************************背背乘法口诀********************************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;********小朋友会背吗，在心里面想一想答案哦*****\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt;  d, i, j;
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span&gt;9&lt;/span&gt;; i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (j = &lt;span&gt;1&lt;/span&gt;; j &amp;lt;= &lt;span&gt;9&lt;/span&gt;; j++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;             printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d*%d=??\t&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, i, j);
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n（@_@想知道答案吗，是就 输入“1”，就不看！输入“2”@_@ ）   :&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;&lt;span&gt;d);
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (d == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span&gt;9&lt;/span&gt;; i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (j = &lt;span&gt;1&lt;/span&gt;; j &amp;lt;= &lt;span&gt;9&lt;/span&gt;; j++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;                 printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d*%d=%-5d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, i, j, i*&lt;span&gt;j);
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;             printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt;     }printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;********************************************************************乘法口诀********************************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt;     system(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ab()
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;******************************************************************数字比大小******************************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;小朋友\1比比看下面的数谁最大\n#############################################################\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; i, a[&lt;span&gt;10&lt;/span&gt;], max, b[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;], c;
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; &lt;span&gt;    time_t ts;
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;     srand((unsigned &lt;span&gt;int&lt;/span&gt;)time(&amp;amp;&lt;span&gt;ts));
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;10&lt;/span&gt;; i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;         a[i] = rand() % &lt;span&gt;100&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\t&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, a[i]);
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt;     }max = a[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; &lt;span&gt;10&lt;/span&gt;; i++) &lt;span&gt;if&lt;/span&gt; (a[i] &amp;gt; max) max =&lt;span&gt; a[i];
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n#############################################################\n相信自己是最棒的..快来告诉小东你的答案：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;b[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (max == b[&lt;span&gt;0&lt;/span&gt;]) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t小朋友好厉害， \1   \1 小东为你喝彩\1   \1 \n\n\n \n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;没关系，还有一次机会       @加油@,\t再输入一次：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;); scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;b[&lt;span&gt;0&lt;/span&gt;]); &lt;span&gt;if&lt;/span&gt; (max == b[&lt;span&gt;0&lt;/span&gt;]) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\t\t成功了，失败是成功之母， \1   \1 小东为你喝彩\1   \1 \n\n\n \n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;    printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;很遗憾，不过没关系的，最大值是%d哟\n\n\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, max);
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt;     }printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;******************************************************************数字比大小******************************************************************\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt;     system(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 02 May 2019 16:22:00 +0000</pubDate>
<dc:creator>东小东</dc:creator>
<og:description>时间：大一上学期 目的：C语言上半部分课设 名称：数字益智游戏（未删减版） 补充：system(&quot;cls&quot;);为清屏 system(&quot;pause&quot;);为暂停屏幕</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dongxiaodong/p/10804004.html</dc:identifier>
</item>
<item>
<title>nginx分布式实例入门操作 - 小王子的博客</title>
<link>http://www.cnblogs.com/xiaowangzi1987/p/10802372.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaowangzi1987/p/10802372.html</guid>
<description>&lt;h3&gt; 本文目的&lt;/h3&gt;
&lt;p&gt;前段时间学习WCF已经渐入佳境，完成了既定学习目标，转入分布式系统学习。本文技术路线是：&lt;/p&gt;
&lt;p&gt;                                                   &lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502204220962-505067158.png&quot; alt=&quot;&quot; width=&quot;777&quot; height=&quot;143&quot;/&gt;&lt;/p&gt;
&lt;p&gt;采用wcf实现分布式服务端和客户端，客户端部署于本地主机，nginx和WCF部署于虚拟机端（分别是三个虚拟机）&lt;/p&gt;
&lt;p&gt;此文验证：当其中一个服务端断线后，另一个服务端可以继续支撑整个会话的完成。&lt;/p&gt;
&lt;h3&gt;技术关键词&lt;/h3&gt;
&lt;p&gt;wcf，nginx，虚拟机&lt;/p&gt;
&lt;p&gt; （如果wcf基础知识还不是很熟，建议先学习wcf技术知识。虚拟机采用vmware，虚拟机建立的系统是Win7.&lt;/p&gt;
&lt;p&gt;    提前准备好虚拟机，并建立三个虚拟机，每个虚拟机建立Win7系统，每个Win7系统安装.NET4.6平台。&lt;/p&gt;
&lt;p&gt;   下载nginx程序包。）&lt;/p&gt;
&lt;h3&gt;准备工作：虚拟机与主机建立局域网&lt;/h3&gt;
&lt;p&gt;为了保障本文的测试成功，主机与三个虚拟机之间组成局域网。三个虚拟机完成下图设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502160247976-1657007800.png&quot; alt=&quot;&quot; width=&quot;481&quot; height=&quot;280&quot;/&gt;&lt;/p&gt;
&lt;p&gt;三个虚拟机完成虚拟网路设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502160341965-2108101116.png&quot; alt=&quot;&quot; width=&quot;171&quot; height=&quot;119&quot;/&gt;&lt;/p&gt;
&lt;p&gt;选择VMnet8（因为此项外部连接是NAT模式），然后点击NAT设置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502160541332-1272373167.png&quot; alt=&quot;&quot; width=&quot;432&quot; height=&quot;376&quot;/&gt;&lt;/p&gt;
&lt;p&gt;设置NAT网关设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502160641373-1612302746.png&quot; alt=&quot;&quot; width=&quot;375&quot; height=&quot;357&quot;/&gt;&lt;/p&gt;
&lt;p&gt;三个虚拟机还需要关闭防火墙和修改入站规则&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502160740236-1224283148.png&quot; alt=&quot;&quot; width=&quot;465&quot; height=&quot;414&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502160854207-988440027.png&quot; alt=&quot;&quot; width=&quot;720&quot; height=&quot;456&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们来从自己本地主机ping虚拟机进行验证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502161045420-938502660.png&quot; alt=&quot;&quot; width=&quot;361&quot; height=&quot;263&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们从虚拟机向本地主机ping&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502202253217-1670932638.png&quot; alt=&quot;&quot; width=&quot;361&quot; height=&quot;287&quot;/&gt;&lt;/p&gt;
&lt;p&gt;以上就实现了每个虚拟机与主机的局域网建立。&lt;/p&gt;
&lt;h3&gt;wcf契约与Service&lt;/h3&gt;
&lt;p&gt;本文的wcf服务代码没有很特殊的地方，贴代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('aaf15ae8-6a9d-4b0b-ba00-722947d0fe1d')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_aaf15ae8-6a9d-4b0b-ba00-722947d0fe1d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_aaf15ae8-6a9d-4b0b-ba00-722947d0fe1d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('aaf15ae8-6a9d-4b0b-ba00-722947d0fe1d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_aaf15ae8-6a9d-4b0b-ba00-722947d0fe1d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; NginxWCFTest_Contract
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    [ServiceContract]
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IOutputSomething
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        [OperationContract]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;string&lt;/span&gt; GetContentData(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        [OperationContract]
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;string&lt;/span&gt;&lt;span&gt; GetIpAddress();
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('03e00b9f-c0ee-4b19-bf9d-2f9ee6e35636')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_03e00b9f-c0ee-4b19-bf9d-2f9ee6e35636&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_03e00b9f-c0ee-4b19-bf9d-2f9ee6e35636&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('03e00b9f-c0ee-4b19-bf9d-2f9ee6e35636',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_03e00b9f-c0ee-4b19-bf9d-2f9ee6e35636&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; NginxWCFTest_Service
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OutputSomethingService:IOutputSomething
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;string&lt;/span&gt;&lt;span&gt; threadName;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;readonly&lt;/span&gt; &lt;span&gt;object&lt;/span&gt; lockObject = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;object&lt;/span&gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; GetContentData(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;lock&lt;/span&gt;&lt;span&gt; (lockObject)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 threadName = i.ToString(&lt;span&gt;0&lt;/span&gt; + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;我是主机:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; GetIpAddress());
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;.Format(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;序列号:{0},线程号:{1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, i, threadName);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; GetIpAddress()
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt; AddressIP = &lt;span&gt;string&lt;/span&gt;&lt;span&gt;.Empty;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (IPAddress _IPAddress &lt;span&gt;in&lt;/span&gt;&lt;span&gt; Dns.GetHostEntry(Dns.GetHostName()).AddressList)
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (_IPAddress.AddressFamily.ToString() == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InterNetwork&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                     AddressIP =&lt;span&gt; _IPAddress.ToString();
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; AddressIP;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;wcf服务端宿主（部署于192.168.21.129和192.168.21.130）&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('31882072-4478-4905-8723-0c377d42647b')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_31882072-4478-4905-8723-0c377d42647b&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_31882072-4478-4905-8723-0c377d42647b&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('31882072-4478-4905-8723-0c377d42647b',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_31882072-4478-4905-8723-0c377d42647b&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; NginxWCFTest_Hosting
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             ServiceHost host = &lt;span&gt;new&lt;/span&gt; ServiceHost(&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(OutputSomethingService));
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            host.Open();
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;host.Opened += delegate
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    Console.WriteLine(host.Description.Endpoints[0].Address.Uri + &quot;已经启动，按任意键终止服务！&quot;);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;};&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;            Console.Read();
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt; 如果wcf基础知识扎实的话， 宿主的代码很easy，我们重点需要关注的是配置信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ade64fed-51db-4c45-8e3b-744dfd2c77e3')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_ade64fed-51db-4c45-8e3b-744dfd2c77e3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ade64fed-51db-4c45-8e3b-744dfd2c77e3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ade64fed-51db-4c45-8e3b-744dfd2c77e3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ade64fed-51db-4c45-8e3b-744dfd2c77e3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&amp;lt;system.serviceModel&amp;gt;
    &amp;lt;behaviors&amp;gt;
      &amp;lt;serviceBehaviors&amp;gt;
        &amp;lt;behavior name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;metaBehavior&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
          &amp;lt;!--&lt;span&gt; 为避免泄漏元数据信息，
          请在部署前将以下值设置为 &lt;/span&gt;&lt;span&gt;false&lt;/span&gt; --&amp;gt;
          &amp;lt;serviceMetadata httpGetEnabled=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;True&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; httpsGetEnabled=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;True&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 
                           httpGetUrl&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://192.168.21.129:80/OutputSomethingService/meta&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
          &amp;lt;!--&lt;span&gt; 要接收故障异常详细信息以进行调试，
          请将以下值设置为 &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;。在部署前设置为 &lt;span&gt;false&lt;/span&gt;&lt;span&gt; 
          以避免泄漏异常信息 &lt;/span&gt;--&amp;gt;
          &amp;lt;serviceDebug includeExceptionDetailInFaults=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;False&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
        &amp;lt;/behavior&amp;gt;
      &amp;lt;/serviceBehaviors&amp;gt;
    &amp;lt;/behaviors&amp;gt;

    &amp;lt;services&amp;gt;
      &amp;lt;service name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NginxWCFTest_Service.OutputSomethingService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; behaviorConfiguration=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;metaBehavior&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
        &amp;lt;!--修改Binding为webHttpBinding--&amp;gt;
        &amp;lt;endpoint address=&lt;span&gt;&quot;&quot;&lt;/span&gt; binding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;basicHttpBinding&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                  contract&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NginxWCFTest_Contract.IOutputSomething&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;gt;
          &amp;lt;identity&amp;gt;

          &amp;lt;/identity&amp;gt;
        &amp;lt;/endpoint&amp;gt;
        &amp;lt;endpoint address=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mex&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; binding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mexHttpBinding&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; contract=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IMetadataExchange&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;

        &amp;lt;host&amp;gt;
          &amp;lt;baseAddresses&amp;gt;
            &amp;lt;add baseAddress=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://192.168.21.129:80/OutputSomethingService/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
          &amp;lt;/baseAddresses&amp;gt;
        &amp;lt;/host&amp;gt;
      &amp;lt;/service&amp;gt;
    &amp;lt;/services&amp;gt;

  &amp;lt;/system.serviceModel&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;可以看得到服务端宿主的url端口是80，因为80是系统自带的默认端口。一般80作为网页服务器的访问端口，比如一个网站的ip地址是123.123.123.123，我们访问的是123.123.123.123:80  只是80是默认端口可以省略。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502151847407-573955187.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;后面针对为什么用80端口会再一次介绍。&lt;/p&gt;
&lt;h3&gt;wcf客户端宿主（部署于192.168.21.3）&lt;/h3&gt;
&lt;p&gt;客户端宿主代码跟普通没有区别，唯一需要注意的是配置代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f563e861-159a-4501-a9c3-1cb3c77725fb')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_f563e861-159a-4501-a9c3-1cb3c77725fb&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f563e861-159a-4501-a9c3-1cb3c77725fb&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f563e861-159a-4501-a9c3-1cb3c77725fb',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f563e861-159a-4501-a9c3-1cb3c77725fb&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; NginxWCFTest_Client
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; AddressIP = &lt;span&gt;string&lt;/span&gt;&lt;span&gt;.Empty;
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (IPAddress _IPAddress &lt;span&gt;in&lt;/span&gt;&lt;span&gt; Dns.GetHostEntry(Dns.GetHostName()).AddressList)
            {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (_IPAddress.AddressFamily.ToString() == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InterNetwork&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
                {
                    AddressIP &lt;/span&gt;=&lt;span&gt; _IPAddress.ToString();
                }
            }
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;本机IP是：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; AddressIP);




            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (ChannelFactory&amp;lt;IOutputSomething&amp;gt; channelFactory = &lt;span&gt;new&lt;/span&gt; ChannelFactory&amp;lt;IOutputSomething&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;OutputSomethingService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ChannelFactory:一个创建不同类型通道的工厂，客户端使用这些通道将消息发送到不同配置的服务终结点
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建通道&lt;/span&gt;
                IOutputSomething proxy =&lt;span&gt; channelFactory.CreateChannel();
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;20&lt;/span&gt;; i++&lt;span&gt;)
                {
                    Console.WriteLine(proxy.GetContentData(i));
                }
                Console.Read();
            }



           
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502152711241-276191037.png&quot; alt=&quot;&quot; width=&quot;788&quot; height=&quot;128&quot;/&gt;&lt;/p&gt;
&lt;p&gt;大家可以看到客户端指向的地址是jackchen.com地址。这个地址是nginx虚拟机的域名。为此，我们需要做以下事情。&lt;/p&gt;
&lt;h3&gt;主机域名处理&lt;/h3&gt;
&lt;p&gt;nginx虚拟机主机域名处理：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502153058311-873860873.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;553&quot;/&gt;&lt;/p&gt;
&lt;p&gt;主机域名的文件路径地址在“C:\Windows\System32\drivers\etc\hosts&quot; 上图红箭头为新增加域名，如果IE浏览器中输入jackchen.com即相当于输入http://192.168.21.128&lt;/p&gt;
&lt;p&gt;WCF服务端主机域名处理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502153359978-485368057.png&quot; alt=&quot;&quot; width=&quot;370&quot; height=&quot;279&quot;/&gt;&lt;/p&gt;
&lt;p&gt;192.168.21.130与上图类似，配置为192.168.21.130  jackchen.com。&lt;/p&gt;
&lt;p&gt;wcf客户端域名配置如下&lt;/p&gt;
&lt;p&gt;          &lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502162034562-1520777403.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;nginx应用&lt;/h3&gt;
&lt;p&gt;上面讲了WCF分布式服务的客户端和服务端，也讲了主机域名的处理。现在讲讲Nginx的作用和为什么要做域名处理&lt;/p&gt;
&lt;p&gt;nginx的基础知识我就多讲了，此处链接&lt;a href=&quot;http://tengine.taobao.org/book/chapter_09.html&quot;&gt;http://tengine.taobao.org/book/chapter_09.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;从上一步的主机域名解析就可以知道，WCF客户端指向的是ngnix的虚拟机（192.168.21.128），然后由nginx做均衡负载和备份机制管理，&lt;/p&gt;
&lt;p&gt;                        未使用nginx&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502211654461-650541664.png&quot; alt=&quot;&quot; width=&quot;412&quot; height=&quot;196&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用nginx&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502211725735-1216243891.png&quot; alt=&quot;&quot; width=&quot;532&quot; height=&quot;213&quot;/&gt;&lt;/p&gt;
&lt;p&gt;nginx部署于192.168.21.128，需要对nginx文件夹中config文件进行配置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502212020971-86950303.png&quot; alt=&quot;&quot; width=&quot;615&quot; height=&quot;217&quot;/&gt;&lt;/p&gt;
&lt;p&gt;配置信息为：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('e3137de1-2ec7-4a74-b917-827fac230e3f')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_e3137de1-2ec7-4a74-b917-827fac230e3f&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_e3137de1-2ec7-4a74-b917-827fac230e3f&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('e3137de1-2ec7-4a74-b917-827fac230e3f',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_e3137de1-2ec7-4a74-b917-827fac230e3f&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#user  nobody;
worker_processes  &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;

#error_log  logs&lt;/span&gt;/&lt;span&gt;error.log;
#error_log  logs&lt;/span&gt;/&lt;span&gt;error.log  notice;
#error_log  logs&lt;/span&gt;/&lt;span&gt;error.log  info;

pid        logs&lt;/span&gt;/&lt;span&gt;nginx.pid;



events {
    worker_connections  &lt;/span&gt;&lt;span&gt;1024&lt;/span&gt;&lt;span&gt;;
}


http {
    include       mime.types;
    default_type  application&lt;/span&gt;/octet-&lt;span&gt;stream;

    #log_format  main  &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    #                  &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;$status $body_bytes_sent &quot;$http_referer&quot; &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    #                  &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;

    #access_log  logs&lt;/span&gt;/&lt;span&gt;access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
    keepalive_timeout  &lt;/span&gt;&lt;span&gt;65&lt;/span&gt;&lt;span&gt;;

    #gzip  on;

    server {
        listen       &lt;/span&gt;&lt;span&gt;80&lt;/span&gt;&lt;span&gt;;
        server_name  jackchen.com;

        #charset koi8&lt;/span&gt;-&lt;span&gt;r;

        #access_log  logs&lt;/span&gt;/&lt;span&gt;host.access.log  main;

        location &lt;/span&gt;/&lt;span&gt; {
            autoindex  off;#是否打开目录浏览
            root   \html\Views\Home;#默认主页目录在nginx安装目录的html子目录。
            index  Index.cshtml index.html index.htm;#起始页
            proxy_pass http:&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;jackchen.com; &lt;/span&gt;
&lt;span&gt;        }
 
        #error_page  &lt;/span&gt;&lt;span&gt;404&lt;/span&gt;              /&lt;span&gt;404&lt;/span&gt;&lt;span&gt;.html;

        # redirect server error pages to the &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; page /&lt;span&gt;50x.html
        #
        error_page   &lt;/span&gt;&lt;span&gt;500&lt;/span&gt; &lt;span&gt;502&lt;/span&gt; &lt;span&gt;503&lt;/span&gt; &lt;span&gt;504&lt;/span&gt;  /&lt;span&gt;50x.html;
        location &lt;/span&gt;= /&lt;span&gt;50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt;&lt;span&gt;
        #
        #location &lt;/span&gt;~&lt;span&gt; \.php$ {
        #    proxy_pass   http:&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;127.0.0.1;&lt;/span&gt;
&lt;span&gt;        #}

        # pass the PHP scripts to FastCGI server listening on &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;9000&lt;/span&gt;&lt;span&gt;
        #
        #location &lt;/span&gt;~&lt;span&gt; \.php$ {
        #    root           html;
        #    fastcgi_pass   &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;9000&lt;/span&gt;&lt;span&gt;;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  &lt;/span&gt;/&lt;span&gt;scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; Apache&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s document root&lt;/span&gt;
        # concurs with nginx&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s one&lt;/span&gt;
&lt;span&gt;        #
        #location &lt;/span&gt;~ /&lt;span&gt;\.ht {
        #    deny  all;
        #}
    }

upstream linuxidc { 
      server &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;8001&lt;/span&gt;&lt;span&gt;; 
      server &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;8002&lt;/span&gt;&lt;span&gt;;
      server &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;8003&lt;/span&gt;&lt;span&gt;;
}
upstream jackchen.com { 
          server &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;21.129&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt;&lt;span&gt;; 
      server &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;21.130&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt;&lt;span&gt;; 
}
    # another &lt;/span&gt;&lt;span&gt;virtual&lt;/span&gt; host &lt;span&gt;using&lt;/span&gt; mix of IP-, name-, and port-&lt;span&gt;based configuration
    #
    #server {
    #    listen       &lt;/span&gt;&lt;span&gt;8000&lt;/span&gt;&lt;span&gt;;
    #    listen       somename:&lt;/span&gt;&lt;span&gt;8080&lt;/span&gt;&lt;span&gt;;
    #    server_name  somename  alias  another.alias;

    #    location &lt;/span&gt;/&lt;span&gt; {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       &lt;/span&gt;&lt;span&gt;443&lt;/span&gt;&lt;span&gt; ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:&lt;/span&gt;!aNULL:!&lt;span&gt;MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location &lt;/span&gt;/&lt;span&gt; {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;      其中的修改点为：&lt;/p&gt;
&lt;p&gt;              &lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502212253471-1450181178.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;upstream是配置集群，集群由192.168.21.129   和192.168.21.130组成&lt;/p&gt;
&lt;p&gt;修改完了之后准备开启nginx，下图是进入nginx.exe所在的文件夹&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502220053460-1664220069.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                接着输入 start nginx可以启动nginx，输入nginx -s stop可以停止nginx，输入nginx -s reload可以重启nginx &lt;/p&gt;
&lt;h3&gt;效果展示&lt;/h3&gt;
&lt;p&gt;启动两个服务端和nginx，同时启动客户端，效果图如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502213754938-986936554.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;关闭192.168.21.130效果图如下&lt;/p&gt;
&lt;p&gt;        &lt;img src=&quot;https://img2018.cnblogs.com/blog/1096235/201905/1096235-20190502215657220-545550410.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 02 May 2019 14:03:00 +0000</pubDate>
<dc:creator>小王子的博客</dc:creator>
<og:description>本文目的 前段时间学习WCF已经渐入佳境，完成了既定学习目标，转入分布式系统学习。本文技术路线是： 采用wcf实现分布式服务端和客户端，客户端部署于本地主机，nginx和WCF部署于虚拟机端（分别是三</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiaowangzi1987/p/10802372.html</dc:identifier>
</item>
<item>
<title>Node.js学习（第二章：node核心模块--fs） - pubdreamcc</title>
<link>http://www.cnblogs.com/dreamcc/p/10803559.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dreamcc/p/10803559.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;Node.js中赋予了JavaScript很多在浏览器中没有的能力，譬如：文件读写，创建http服务器等等，今天我们就来看看在node中怎样用JavaScript进行文件的读写操作。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;读文件&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;我们在data文件夹下新建一个&lt;code&gt;hello.txt&lt;/code&gt;，并且在里面写入：&lt;code&gt;hello， node.js!!&lt;/code&gt; ，如图：&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1632878/201905/1632878-20190502215643734-998004844.png&quot;/&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;我们在&lt;code&gt;hello.txt&lt;/code&gt;同级目录下创建一个&lt;code&gt;hello.js&lt;/code&gt;文件，我们在这个js文件中利用Node提供的文件操作API, 读取&lt;code&gt;hello.txt&lt;/code&gt;文件中的内容。&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;node中对文件相关的操作需要依赖fs模块，这个是node中内置模块之一，我们需要引入。fs--file system。&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;let fs = require('fs')
fs.readFile() 

 // 读文件。 readFile函数接受两个参数：读取文件路径，回调函数（error，data两个参数），
读取文件成功：data为文件内容，error为null，读取失败：error为错误对象，data为undefined&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后我们&lt;code&gt;hello.js&lt;/code&gt;中的代码如下:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;   let fs = require('fs')
fs.readFile('./hello.txt', (error, data) =&amp;gt; {
  console.log(data.toString())
})
   &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在这里可以说一下，我们读取回来的默认是二进制的内容，所以需要调用toString()方法进行转换。最后，终端可以看到结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1632878/201905/1632878-20190502215658971-1769418037.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们刚才在&lt;code&gt;hello.txt&lt;/code&gt;中写入的文本&lt;code&gt;hello, node.js!!&lt;/code&gt;已经打印出来。看到这里是不是觉得很牛叉，JavaScript居然可以用来读取文件内容，完全颠覆了我们以前对JavaScript的理解，然而这一切都得归功于Node.js。&lt;/p&gt;
&lt;ol readability=&quot;-2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;写文件&lt;/p&gt;
&lt;p&gt;我们在刚才的&lt;code&gt;hello.js&lt;/code&gt;中写入下面这行代码：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;    fs.writeFile('./hello.md', '你好，node.js!', (error) =&amp;gt; {
          if (!error) {
            console.log('创建成功了。。')
          }
    }) 
    
// 写文件。writeFile接受三个参数：写入文件路径，写入内容，回调函数。

    写入成功时候：error为null，写入失败时候：error为错误对象&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后我们看到在同级目录下出现了一个&lt;code&gt;hello.md&lt;/code&gt;文件，并且里面的内容为&lt;code&gt;你好，node.js&lt;/code&gt;. 如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1632878/201905/1632878-20190502215758800-39239621.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1632878/201905/1632878-20190502215814271-12946875.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其实我们对文件的操作不仅仅只局限在读和写上，还有很多的操作，具体详情可以关注我后续的博客或者GitHub，大家也可以提前了解下node.js中文API。 &lt;a href=&quot;http://nodejs.cn/api/fs.html#fs_file_paths&quot;&gt;中文API&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;后话&quot;&gt;后话&lt;/h2&gt;
&lt;p&gt;到了这里，我们是不是对node有了一个基本的了解，知道node是干什么的，而且知道正是由于node.js，我们的JavaScript才有了无限的可能，使得JavaScript不单单局限在浏览器窗口，俗话说得好：‘能用JavaScript来实现的，最终都会用JavaScript来实现’。&lt;/p&gt;
&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;
&lt;p&gt;本仓库是自己Node.js学习过程的真实记录，以后会每天更新一些新的知识点，希望可以对想要学Node.js的同学有一些帮助，欢迎star，你们的点赞是我更新的持久动力。同时如果你觉得本仓库中的一些知识点有错误也可以issue我，方便后期我订正！&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;本仓库同时在博客园和掘金更新，欢迎写博客的朋友一起学习交流。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;博客园&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/dreamcc/&quot;&gt;找我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;掘金&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.im/user/5ca1d53451882543f252db97/posts&quot;&gt;找我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pubdreamcc/Node.js&quot;&gt;找我&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 14:00:00 +0000</pubDate>
<dc:creator>pubdreamcc</dc:creator>
<og:description>前言 Node.js中赋予了JavaScript很多在浏览器中没有的能力，譬如：文件读写，创建http服务器等等，今天我们就来看看在node中怎样用JavaScript进行文件的读写操作。 1. 读文</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dreamcc/p/10803559.html</dc:identifier>
</item>
<item>
<title>降维之奇异值分解(SVD) - Luv_GEM</title>
<link>http://www.cnblogs.com/Luv-GEM/p/10801212.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Luv-GEM/p/10801212.html</guid>
<description>&lt;p&gt;&lt;span&gt;看了几篇关于奇异值分解(S&lt;span class=&quot;fontstyle0&quot;&gt;ingular Value Decomposition，SVD&lt;/span&gt;)的博客，大部分都是从坐标变换（线性变换）的角度来阐述，讲了一堆坐标变换的东西，整了一大堆图，试图“通俗易懂”地向读者解释清楚这个矩阵分解方法。然而这个“通俗易懂”到我这就变成了“似懂非懂”，这些漂亮的图可把我整懵了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;就像《没想到吧》里王祖蓝对一个碎碎念的观众说的，“我问你的问题是，你是很熟悉邓紫棋的歌吗，我只问了你一个问题，你回我这么多干嘛”（上B站忍不住又看了邓紫棋3个视频，差点回不来）。我就想知道这个奇异值分解的数学公式是什么，然后明白它是怎么一步步推导出来的，以及怎么推导出奇异值分解和主成分分析法的关系，咋就要整这么多图呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果你也有这种感觉，那这篇博客就带着你，以数学推导为主，一步步搞清楚奇异值分解是什么。这篇博客反其道而行之，全是数学推导，没有一个图，就是这么任性。当然相信我，这些推导并不难。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这篇博客整理如下的内容：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、奇异值分解的数学公式；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、奇异值分解的流程总结和案例；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、用奇异值分解进行降维；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;4、特征分解、奇异值分解和主成分分析法的关系；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;5、奇异值分解在词向量降维中的应用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、奇异值分解的数学公式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们直接抛出相关结论，不推导也不证明。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一个n×m的矩阵X的奇异值分解定义为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190501205937548-110751949.png&quot; alt=&quot;&quot; width=&quot;82&quot; height=&quot;21&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中U称为左奇异矩阵，是一个n×n的正交矩阵，即满足U&lt;sup&gt;T&lt;/sup&gt;U=E，U&lt;sup&gt;T&lt;/sup&gt;=U&lt;sup&gt;-1&lt;/sup&gt;；而V称为右奇异矩阵，是一个m×m的正交矩阵。Σ为n×m的对角矩阵，对角线上的非零元素是奇异值（Singular Value）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、求奇异值&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先看Σ或者说奇异值是什么。如果矩阵X的秩rank(A)=r，那么实对称矩阵X&lt;sup&gt;T&lt;/sup&gt;X与X的秩相等，X&lt;sup&gt;T&lt;/sup&gt;X有r个非零的特征值和m-r个零特征值：λ&lt;sub&gt;1&lt;/sub&gt;≥λ&lt;sub&gt;2&lt;/sub&gt;≥ λ&lt;sub&gt;3&lt;/sub&gt;...≥λ&lt;sub&gt;r&lt;/sub&gt;&amp;gt;λ&lt;sub&gt;r+1&lt;/sub&gt;=...=λ&lt;sub&gt;m&lt;/sub&gt;=0。奇异值σ为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190501213724724-1600531596.png&quot; alt=&quot;&quot; width=&quot;151&quot; height=&quot;81&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;矩阵Σ可以表示为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190501214015998-2085420257.png&quot; alt=&quot;&quot; width=&quot;173&quot; height=&quot;87&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、求右奇异矩阵V&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后看右奇异矩阵V是什么。将V写成列向量的形式（v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;,.. v&lt;sub&gt;m&lt;/sub&gt;），那么V的列向量是实对称矩阵X&lt;sup&gt;T&lt;/sup&gt;X的&lt;strong&gt;单位特征向量&lt;/strong&gt;，也就是有：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190501221803732-2131478971.png&quot; alt=&quot;&quot; width=&quot;255&quot; height=&quot;79&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、求左奇异矩阵U&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）第一种做法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一种做法更多是为了与右奇异矩阵V的求法相对应，实际计算时会采用另外的方法。前面说了实对称矩阵X&lt;sup&gt;T&lt;/sup&gt;X与X的秩相等，有r个非零特征值，那么另一个实对称矩阵XX&lt;sup&gt;T&lt;/sup&gt;与X&lt;sup&gt;T&lt;/sup&gt;X的秩相等，同样有r个非零特征值，且这两个矩阵的非零特征值相等。将U也写成列向量的形式（u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ...u&lt;sub&gt;r&lt;/sub&gt;,.. u&lt;sub&gt;n&lt;/sub&gt;），那么U的列向量是实对称矩阵XX&lt;sup&gt;T&lt;/sup&gt;的单位特征向量，也就是有：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190501222009568-938783587.png&quot; alt=&quot;&quot; width=&quot;255&quot; height=&quot;79&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;看到这里，虽然不知道这是怎么推导过来的，但是感受到了一种强烈的数学之美，有没有！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（2）第二种做法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在第二种做法中，我们会充分利用实对称矩阵X&lt;sup&gt;T&lt;/sup&gt;X与右奇异矩阵V，来求得左奇异矩阵U，而不用另外去求XX&lt;sup&gt;T&lt;/sup&gt;的单位特征向量。我们首先把X&lt;sup&gt;T&lt;/sup&gt;X的特征值分为两组：特征值大于零的一组（r个），特征值等于零的一组（m-r个），相应的把右奇异矩阵的列向量分为两组：前r个非零特征值对应的单位特征向量为V&lt;sub&gt;1&lt;/sub&gt;=(v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;)，而零特征值对应的单位特征向量为V&lt;sub&gt;2&lt;/sub&gt;=(v&lt;sub&gt;r+1&lt;/sub&gt;,.. v&lt;sub&gt;m&lt;/sub&gt;)。再把左奇异矩阵U的列向量也分为两组，尽管我们还不知道具体的元素值，但是我们知道它有n个列向量：前r个列向量U&lt;sub&gt;1&lt;/sub&gt;=(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ...u&lt;sub&gt;r&lt;/sub&gt;)，后n-r个列向量U&lt;sub&gt;2&lt;/sub&gt;=(u&lt;sub&gt;r+1&lt;/sub&gt;, u&lt;sub&gt;r+2&lt;/sub&gt;, ...u&lt;sub&gt;n&lt;/sub&gt;)。那么我们可以用X、V&lt;sub&gt;1&lt;/sub&gt;和奇异值构成的对角阵方阵S来求出U&lt;sub&gt;1&lt;/sub&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190501230858445-1032316717.png&quot; alt=&quot;&quot; width=&quot;275&quot; height=&quot;136&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;由第一种做法我们已知U&lt;sub&gt;1&lt;/sub&gt;是XX&lt;sup&gt;T&lt;/sup&gt;非零特征值的单位特征向量，那么U&lt;sub&gt;2&lt;/sub&gt;就是零特征值的单位特征向量了。我们不用去求U&lt;sub&gt;2&lt;/sub&gt;，只要构造n-r个列向量，每一个列向量满足：与其他n-1个列向量正交，且是单位向量——这通常是比较容易构造的。于是我们就得到了左奇异矩阵U=(U&lt;sub&gt;1&lt;/sub&gt;, U&lt;sub&gt;2&lt;/sub&gt;)。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们还可以证明一下，由XV&lt;sub&gt;1&lt;/sub&gt;S&lt;sup&gt;-1&lt;/sup&gt;所得到的U&lt;sub&gt;1&lt;/sub&gt;的确满足：列向量相互正交且为单位向量。这个证明很有用，并不复杂。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502053443108-64313812.png&quot; alt=&quot;&quot; width=&quot;352&quot; height=&quot;302&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、奇异值分解的流程和案例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好，有了第一部分的内容，那尽管我们不知道怎么推导出来的，我们也已经知道如何进行奇异值分解了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、奇异值分解的计算过程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果有一个n×m的矩阵X，秩为r，那么对X进行奇异值分解的一种做法是：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;span&gt;（1）求出实对称矩阵X&lt;sup&gt;T&lt;/sup&gt;X的m个特征值λ&lt;sub&gt;i&lt;/sub&gt;（其中非零的有r个）和m个单位特征向量v&lt;sub&gt;i&lt;/sub&gt;，&lt;/span&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（2）把m个特征值λ&lt;sub&gt;i&lt;/sub&gt;从大到小排序，求出奇异值σ&lt;sub&gt;i&lt;/sub&gt;=√λ&lt;sub&gt;i&lt;/sub&gt;（i=1,...,r），并得到S=diag(σ&lt;sub&gt;1&lt;/sub&gt;,σ&lt;sub&gt;2&lt;/sub&gt;,...,σ&lt;sub&gt;r&lt;/sub&gt;)；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（3）相应地把m个特征向量v&lt;sub&gt;i&lt;/sub&gt;进行排列，就可以得到右奇异矩阵V=（v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;,.. v&lt;sub&gt;m&lt;/sub&gt;），同时得到非零特征值的特征向量矩阵V&lt;sub&gt;1&lt;/sub&gt;=(v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;)；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（4）由XV&lt;sub&gt;1&lt;/sub&gt;S&lt;sup&gt;-1&lt;/sup&gt;求出n×r的矩阵U&lt;sub&gt;1&lt;/sub&gt;，写成U&lt;sub&gt;1&lt;/sub&gt;=(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ...u&lt;sub&gt;r&lt;/sub&gt;)；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（5）构造n-r个列向量u&lt;sub&gt;i&lt;/sub&gt;，每个都满足与其他n-1个列向量正交且是单位向量的条件，写成U&lt;sub&gt;2&lt;/sub&gt;=(u&lt;sub&gt;r+1&lt;/sub&gt;, u&lt;sub&gt;r+2&lt;/sub&gt;, ...u&lt;sub&gt;n&lt;/sub&gt;)，于是得到左奇异矩阵U=(U&lt;sub&gt;1&lt;/sub&gt;, U&lt;sub&gt;2&lt;/sub&gt;)=(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ... u&lt;sub&gt;r&lt;/sub&gt;, ..., u&lt;sub&gt;n&lt;/sub&gt;)；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（6）得到X的奇异值分解：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502061014747-1615065502.png&quot; alt=&quot;&quot; width=&quot;187&quot; height=&quot;53&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;接下来我们就举一个简单的例子，按这个流程走一遍。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、奇异值分解的小案例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;问题：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;对以下的矩阵X进行奇异值分解。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502061450711-1565581832.png&quot; alt=&quot;&quot; width=&quot;118&quot; height=&quot;85&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;求解：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502072308735-1839634601.png&quot; alt=&quot;&quot; width=&quot;718&quot; height=&quot;374&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、用奇异值分解做降维&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用奇异值分解做降维，主要用到了线性代数里的分块矩阵理论。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、简化奇异值分解&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们可以看到矩阵Σ由奇异值和很多0元素构成，这些0看着很多余很难受对不对？尤其是对角线上的！所幸我们可以用分块矩阵的理论，把Σ中为0的对角元素抛弃掉。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;和之前一样，X是n×m的矩阵，右奇异矩阵V中的前r个列向量为V&lt;sub&gt;1&lt;/sub&gt;=(v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;)，左奇异矩阵U中的前r个列向量为U&lt;sub&gt;1&lt;/sub&gt;=(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ...u&lt;sub&gt;r&lt;/sub&gt;)，S=diag(σ&lt;sub&gt;1&lt;/sub&gt;,σ&lt;sub&gt;2&lt;/sub&gt;,...,σ&lt;sub&gt;r&lt;/sub&gt;)是奇异值构成的对角矩阵。则可以将奇异值分解的形式化简为X=U&lt;sub&gt;1&lt;/sub&gt;SV&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502091733756-1719912258.png&quot; alt=&quot;&quot; width=&quot;369&quot; height=&quot;342&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、用奇异值分解降维&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们是用分块矩阵对原来的奇异值分解形式进行化简的，现在让我们分块到底！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们知道U&lt;sub&gt;1&lt;/sub&gt;中有r个列向量，我们再将其分块，比如我们想把维度降到d维（d&amp;lt;r），那么把U&lt;sub&gt;1&lt;/sub&gt;分块为两个子矩阵U&lt;sub&gt;1&lt;/sub&gt;=[U&lt;sub&gt;11&lt;/sub&gt;, U&lt;sub&gt;12&lt;/sub&gt;]，有U&lt;sub&gt;11&lt;/sub&gt;=[u&lt;sub&gt;1&lt;/sub&gt;,u&lt;sub&gt;2&lt;/sub&gt;,...,u&lt;sub&gt;d&lt;/sub&gt;]，U&lt;sub&gt;12&lt;/sub&gt;=[u&lt;sub&gt;d+1&lt;/sub&gt;,u&lt;sub&gt;d+2&lt;/sub&gt;,...,u&lt;sub&gt;r&lt;/sub&gt;]。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同样把V&lt;sub&gt;1&lt;/sub&gt;进行分块，得到V&lt;sub&gt;1&lt;/sub&gt;=[V&lt;sub&gt;11&lt;/sub&gt;, V&lt;sub&gt;12&lt;/sub&gt;]，V&lt;sub&gt;11&lt;/sub&gt;=[v&lt;sub&gt;1&lt;/sub&gt;,v&lt;sub&gt;2&lt;/sub&gt;,...,v&lt;sub&gt;d&lt;/sub&gt;]，V&lt;sub&gt;12&lt;/sub&gt;=[v&lt;sub&gt;d+1&lt;/sub&gt;,v&lt;sub&gt;d+2&lt;/sub&gt;,...,v&lt;sub&gt;r&lt;/sub&gt;]。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502094002792-1088032569.png&quot; alt=&quot;&quot; width=&quot;523&quot; height=&quot;78&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是我们可以把X=U&lt;sub&gt;1&lt;/sub&gt;SV&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;也分块成：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502213534269-1574999910.png&quot; alt=&quot;&quot; width=&quot;352&quot; height=&quot;87&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此如果我们想把维度降到d维，那么就让X≈U&lt;sub&gt;11&lt;/sub&gt;S&lt;sub&gt;1&lt;/sub&gt;V&lt;sub&gt;11&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;。这样我们就舍弃了r-d维的信息U&lt;sub&gt;12&lt;/sub&gt;S&lt;sub&gt;2&lt;/sub&gt;V&lt;sub&gt;12&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;，那不免让人担心，信息是否会损失太多。那如何计算损失的信息量呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、度量降维后的信息量&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在主成分分析法的文章中，提到了可以用数据集的方差来衡量数据所包含的信息量，方差越大，包含的信息越多。而方差又和特征值密切相关，在某些特殊情况下方差就等于特征值。于是我们隐约感觉到可以用我们求出来的奇异值或者特征值来度量矩阵的信息量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;是的，矩阵X的信息量就定义为所有奇异值的平方和，也就是X&lt;sup&gt;T&lt;/sup&gt;X的特征值之和：F=λ&lt;sub&gt;1&lt;/sub&gt;+λ&lt;sub&gt;2&lt;/sub&gt;+…+λ&lt;sub&gt;r&lt;/sub&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么降维后的矩阵U&lt;sub&gt;11&lt;/sub&gt;S&lt;sub&gt;1&lt;/sub&gt;V&lt;sub&gt;11&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;的信息量为：F&lt;sub&gt;1&lt;/sub&gt;=λ&lt;sub&gt;1&lt;/sub&gt;+λ&lt;sub&gt;2&lt;/sub&gt;+…+λ&lt;sub&gt;d&lt;/sub&gt;，而损失的信息为矩阵U&lt;sub&gt;12&lt;/sub&gt;S&lt;sub&gt;2&lt;/sub&gt;V&lt;sub&gt;12&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;的信息量：F&lt;sub&gt;2&lt;/sub&gt;=λ&lt;sub&gt;d+1&lt;/sub&gt;+λ&lt;sub&gt;d+2&lt;/sub&gt;+…+λ&lt;sub&gt;r。&lt;/sub&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是损失的信息量占总信息量的比例为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502101156248-894427685.png&quot; alt=&quot;&quot; width=&quot;172&quot; height=&quot;54&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这样我们就可以清晰地看到降到d维后，信息量是否损失太大，是否让我们无法承受。不过好在S中的奇异值是从大到小进行排列的，而且一般下降得特别快，前面少数几个奇异值的平方占总信息量的比例一般就已经很大了，剩下的舍弃了影响也不会很大。&lt;/span&gt;&lt;sub&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好，到这里我们就明白了怎么度量降维后的矩阵所包含的信息量了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后，作为好奇宝宝的你也许会问，为什么矩阵X的信息量就是所有奇异值的平方和呢？好的，邓紫棋已经听到你的呼唤了，返场唱最后一首歌。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;这里是用矩阵X的F范数的平方来度量信息量。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;什么是矩阵的F范数呢？矩阵的F范数定义为矩阵中每个元素平方之和的平方根，那么F范数的平方就是每个元素的平方和。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502113621199-350475293.png&quot; alt=&quot;&quot; width=&quot;147&quot; height=&quot;96&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为矩阵X每个元素的平方和（F范数的平方）是方阵X&lt;sup&gt;T&lt;/sup&gt;X的对角线元素之和（迹），于是我们进行证明：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502114824108-1346891226.png&quot; alt=&quot;&quot; width=&quot;558&quot; height=&quot;140&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实不证明我们也知道方阵X&lt;sup&gt;T&lt;/sup&gt;X的对角线元素之和（迹）就是其特征值之和，哈哈哈，被我带偏了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、特征分解、奇异值值分解与主成分分析法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、由特征分解到奇异值分解&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）什么是特征分解&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一个n×n的方阵A的特征分解（E&lt;span class=&quot;fontstyle0&quot;&gt;igenvalue Decomposition )定义为：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502151037862-394490830.png&quot; alt=&quot;&quot; width=&quot;90&quot; height=&quot;23&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中V是n×n的方阵，其中每一列都是A的特征向量，∧是对角阵，其中每一个元素是A的特征值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果A是对称矩阵，那么A的特征分解就变成了：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502151409943-1304174861.png&quot; alt=&quot;&quot; width=&quot;90&quot; height=&quot;24&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;其中V是正交矩阵，即V&lt;/span&gt;&lt;sup&gt;-1&lt;/sup&gt;=V&lt;sup&gt;T&lt;/sup&gt;。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;注意是方阵才可以进行特征分解哦。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（2）推导奇异值分解&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果有一个&lt;/span&gt;&lt;span&gt;n×m的矩阵X，我们是没法对X进行特征分解的，那么怎么由特征分解推导出奇异值分解呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们注意到X&lt;sup&gt;T&lt;/sup&gt;X是m×m实对称矩阵，于是先对X&lt;sup&gt;T&lt;/sup&gt;X进行特征分解：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502152005790-934740771.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;24&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;V的列向量是单位特征向量，对角阵∧中的对角元素是特征值，且我们对特征值进行降序排列。假设X的秩为r，那么非零的特征值有r个。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;V中的列向量（v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;,.. v&lt;sub&gt;m&lt;/sub&gt;）可以看成是m维空间中的m个标准正交基。X&lt;sup&gt;T&lt;/sup&gt;X特征分解就相当于一个线性变换，用标准正交基构成的矩阵V对对角矩阵进行线性变换，得到X&lt;sup&gt;T&lt;/sup&gt;X。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么n×m的矩阵X应该也可以由一个n维空间中的n个标准正交基和一个m维空间中的m个标准正交基，对某个矩阵进行线性变换得到。我们想办法来找到这些标准正交基。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们就让X&lt;sup&gt;T&lt;/sup&gt;X的单位特征向量V=（v&lt;sub&gt;1&lt;/sub&gt;, v&lt;sub&gt;2&lt;/sub&gt;, ...v&lt;sub&gt;r&lt;/sub&gt;,.. v&lt;sub&gt;m&lt;/sub&gt;）作为m个标准正交基，再找另外n个标准正交基。瞎折腾了一阵后，突然发现Xv&lt;sub&gt;i&lt;/sub&gt;与Xv&lt;sub&gt;j&lt;/sub&gt;是正交的！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502155255254-683924916.png&quot; alt=&quot;&quot; width=&quot;429&quot; height=&quot;57&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;太好了！这意味着只要我们把（Xv&lt;sub&gt;1&lt;/sub&gt;,Xv&lt;sub&gt;2&lt;/sub&gt;,..., Xv&lt;sub&gt;m&lt;/sub&gt;）中的非零列向量进行标准化，就可以得到另一组标准正交基了！如果X的秩为r，那么非零列向量是（Xv&lt;sub&gt;1&lt;/sub&gt;,Xv&lt;sub&gt;2&lt;/sub&gt;,..., Xv&lt;sub&gt;r&lt;/sub&gt;）（我不知道这怎么来的，装逼失败），且满足：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502163319398-1602646273.png&quot; alt=&quot;&quot; width=&quot;263&quot; height=&quot;62&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是我们对Xv&lt;/span&gt;&lt;span&gt;&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;进行标准化：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502162917974-454640115.png&quot; alt=&quot;&quot; width=&quot;197&quot; height=&quot;130&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;得到了r个标准正交基(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ... u&lt;sub&gt;r&lt;/sub&gt;)，可是我们需要n个，还少了n-r个。没关系，我们直接找任意n-r个列向量，填补上去，使得U=(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ... u&lt;sub&gt;r&lt;/sub&gt;, ..., u&lt;sub&gt;n&lt;/sub&gt;)是一组标准正交基。σ&lt;sub&gt;i&lt;/sub&gt;是奇异值，我们用σ&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;作为对角元素来构造一个n×m维的矩阵Σ，那么X就可以用U和V这两个标准正交基组对Σ进行线性变换得到，也就是奇异值分解：X=UΣV&lt;/span&gt;&lt;span&gt;&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、奇异值分解与主成分分析法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;奇异值分解是主成分分析法的一种常用的解决方案。如果数据集X是一个n×m的矩阵，n是变量的个数，m是样本的数量，那么进行主成分分析，也就是用奇异值分解的左奇异矩阵或者右奇异矩阵的装置作为主成分分析法中的转换矩阵，去乘以数据集X，从而得到主成分矩阵Y。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）为什么用奇异值分解&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可是在《&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/Luv-GEM/p/10765574.html&quot;&gt;降维之主成分分析法（PCA）&lt;/a&gt;》中，我们明白了，可以求出X的协方差矩阵&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502182422415-909703453.png&quot; alt=&quot;&quot; width=&quot;57&quot; height=&quot;30&quot;/&gt;的单位特征向量矩阵E，用E的转置E&lt;sup&gt;T&lt;/sup&gt;作为转换矩阵P，然后由PX=Y得到主成分矩阵，再挑出前k主成分就可以做到降维。那我们直接去求E不就好了吗？干嘛还要把奇异值分解拉扯进来？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是因为求解n维矩阵XX&lt;sup&gt;T&lt;/sup&gt;的特征值和特征向量的算法复杂度为O(n&lt;sup&gt;3&lt;/sup&gt;)，因此如果X是高维的数据，也就是n非常大时，进行主成分分析就要计算超大矩阵的特征值。这就出现了算法复杂度过高，计算效率太低的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可是奇异值分解也要对矩阵X&lt;sup&gt;T&lt;/sup&gt;X进行特征分解来求右奇异矩阵V啊，算法复杂度不也是O(n&lt;sup&gt;3&lt;/sup&gt;)？是这样的，不过对高维矩阵进行奇异值分解时，有一些更高效的算法，不用采取暴力特征分解的方式。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;（2）奇异值分解与主成分分析法等价&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们先按照主成分分析法的步骤，对XX&lt;sup&gt;T&lt;/sup&gt;进行特征分解，得到：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502192445707-480592706.png&quot; alt=&quot;&quot; width=&quot;108&quot; height=&quot;22&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后对X进行奇异值分解，沿用前面的符号体系，得到X=UΣV&lt;sup&gt;T&lt;/sup&gt;，把X的奇异值分解代入到上面的特征分解式中：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502192959076-1166015991.png&quot; alt=&quot;&quot; width=&quot;516&quot; height=&quot;30&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;由于在主成分分析法中我们用E&lt;/span&gt;&lt;span&gt;&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;作为转换矩阵P，那么从上面的推导可知，&lt;/span&gt;&lt;span&gt;可以用X的左奇异矩阵U的转置U&lt;/span&gt;&lt;span&gt;&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;作为转换矩阵P，来求出主成分矩阵Y，U&lt;/span&gt;&lt;span&gt;&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;X=Y。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;（3）用奇异值分解做主成分降维&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;X的奇异值分解还可以简化地写成X=U&lt;sub&gt;1&lt;/sub&gt;SV&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;，同样代入XX&lt;sup&gt;T&lt;/sup&gt;的特征分解中，得到：XX&lt;sup&gt;T&lt;/sup&gt;=U&lt;sub&gt;1&lt;/sub&gt;SS&lt;sup&gt;T&lt;/sup&gt;U&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;。U&lt;sub&gt;1&lt;/sub&gt;=(u&lt;sub&gt;1&lt;/sub&gt;, u&lt;sub&gt;2&lt;/sub&gt;, ...u&lt;sub&gt;r&lt;/sub&gt;)是n×r的矩阵，那么U&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;是一个r×n的矩阵，U&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;X就把X的特征从n维降至了r维。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;进一步，我们在前面用分块矩阵的思想，把U&lt;sub&gt;1&lt;/sub&gt;分块为U&lt;sub&gt;1&lt;/sub&gt;=[U&lt;sub&gt;11&lt;/sub&gt;, U&lt;sub&gt;12&lt;/sub&gt;]，U&lt;sub&gt;11&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;是一个d×n维的矩阵，那么用U&lt;sub&gt;11&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;作为转换矩阵，就可以把X的特征进一步压缩至d维。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&lt;span&gt;（4）其他补充&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果你看了其他博主写的博客，会发现有些是用右奇异矩阵V的转置V&lt;/span&gt;&lt;span&gt;&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;来作为特征压缩的转换矩阵，和本文不一样。这是因为那些博客把有m个样本，n维特征的数据集写成了m×n的矩阵X，而本文把数据集写成n×m的矩阵，所以那些博客是用右奇异矩阵V，而本文是用左奇异矩阵U。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;五、奇异值分解与词向量降维&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们来看怎么把奇异值分解用在词向量降维上。如果我们手头有一份文本数据集，里头有m篇文档，总共有n个不重复的词，那么我们可以通过统计文档中所有词出现的次数，整理成一个矩阵X，来构造词向量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一般有两种方法来构造词向量矩阵：一是TF-IDF，词向量矩阵是n×m维的，行向量是每个词的词向量；二是基于窗口的共现矩阵，如果窗口是1，那么词向量矩阵是n×n维的，行向量是每个词的词向量。这两种词向量的表示方法存在很大的问题，那就是数据稀疏和词表维度过高。想象一下，如果文档有10万篇，词有5万个，那会是多么恐怖的一个场景。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此我们非常有必要运用奇异值分解，对词向量矩阵进行降维。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、对TF-IDF词向量矩阵进行降维&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;TF-IDF不用多解释了，由每个词的词频和逆文档频率两部分计算得到每个词的TF-IDF，然后所有词的TF-IDF构成词向量矩阵X&lt;/span&gt;&lt;sup&gt;n×m&lt;/sup&gt;&lt;span&gt;。这个矩阵太大了，我们对这个矩阵X进行奇异值分解得到U&lt;sub&gt;1&lt;/sub&gt;SV&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;，U&lt;sub&gt;1&lt;/sub&gt;是n×r的矩阵，我们用U&lt;sub&gt;1&lt;/sub&gt;的行向量作为n个词的词向量，就实现了对文档数量维度的压缩。&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;如果还嫌词表维度太高，那么我们可以继续降维，从U&lt;sub&gt;1&lt;/sub&gt;中拿出前d个列向量，组成新的n×d维的词向量矩阵U&lt;sub&gt;11&lt;/sub&gt;，行向量作为降到d维后每个词的词向量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;d取多少合适呢？我们可以用奇异值的平方和计算降到d维后的剩余的信息量。如果我们希望保留85%的信息，那么就取以下公式大于或等于85%时的d值，作为降维后的维度。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502210222599-652626867.png&quot; alt=&quot;&quot; width=&quot;157&quot; height=&quot;56&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、对基于窗口的共现矩阵进行降维&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这种方法是用一个相关性矩阵来构造词向量矩阵，叫做共现矩阵。 假设有3个句子（看成三篇文档也没毛病），一共8个不重复的词（把标点也算上），窗口设定为1，也就是把句子拆成一个个的词。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;I enjoy flying.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;I like NLP.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;I like deep learning&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt; 那么共现矩阵就是一个8维的方阵X：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1630478/201905/1630478-20190502210956550-1184113737.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;228&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同样用奇异值分解，把X分解为X=U&lt;sub&gt;1&lt;/sub&gt;SV&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;，然后用U&lt;sub&gt;1&lt;/sub&gt;的行向量作为每次词的词向量，就把词向量的维度从n维降到了r维。如果觉得还太高了，那么可以按照TF-IDF中的做法，继续进行降维。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;参考资料：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、《A Tutorial on Principal Component Analysis. Derivation, Discussion and Singular Value Decomposition》&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、《&lt;span class=&quot;fontstyle0&quot;&gt;A Singularly Valuable Decomposition: The SVD of a Matrix&lt;/span&gt; 》&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 13:57:00 +0000</pubDate>
<dc:creator>Luv_GEM</dc:creator>
<og:description>看了几篇关于奇异值分解(Singular Value Decomposition，SVD)的博客，大部分都是从坐标变换（线性变换）的角度来阐述，讲了一堆坐标变换的东西，整了一大堆图，试图“通俗易懂”地</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Luv-GEM/p/10801212.html</dc:identifier>
</item>
<item>
<title>【动态规划】完全背包问题 - 弗兰克的猫</title>
<link>http://www.cnblogs.com/mfrank/p/10803417.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mfrank/p/10803417.html</guid>
<description>&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;
&lt;p&gt;在上一篇中，我们对01背包问题进行了比较深入的研究，这一篇里，我们来聊聊另一个背包问题：完全背包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/02/5ccaec8a22bb9.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;完全背包&quot;&gt;完全背包&lt;/h2&gt;
&lt;p&gt;有N种物品和一个容量为T的背包，每种物品都就可以选择任意多个，第i种物品的价值为P[i]，体积为V[i]，求解：选哪些物品放入背包，可卡因使得这些物品的价值最大，并且体积总和不超过背包容量。&lt;/p&gt;
&lt;p&gt;跟01背包一样，完全背包也是一个很经典的动态规划问题，不同的地方在于01背包问题中，每件物品最多选择一件，而在完全背包问题中，只要背包装得下，每件物品可以选择任意多件。从每件物品的角度来说，与之相关的策略已经不再是选或者不选了，而是有取0件、取1件、取2件...直到取⌊T/Vi⌋（向下取整）件。&lt;/p&gt;
&lt;h2 id=&quot;贪心算法&quot;&gt;贪心算法&lt;/h2&gt;
&lt;p&gt;看到可以选择任意多件，你也许会想，那还不容易，选性价比最高的就好了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/03/14/5c8a564a63265.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;于是开启贪婪模式，把每种物品的价格除以体积来算出它们各自的性价比，然后只选择性价比最高的物品放入背包中。&lt;/p&gt;
&lt;p&gt;嗯，听起来好像没什么毛病，但仍旧有一个问题，那就是同一种物品虽然可以选择任意多件，但仍旧只能以件为单位，也就是说单个物品是无法拆分的，不能选择半件，只能多选一件或者少选一件。这样就造成了一个问题，往往无法用性价比最高的物品来装满整个背包，比如背包空间为10，性价比最高的物品占用空间为7，那么剩下的空间该如何填充呢？&lt;/p&gt;
&lt;p&gt;你当然会想到用性价比第二高的物品填充，如果仍旧无法填满，那就依次用第三、第四性价比物品来填充。&lt;/p&gt;
&lt;p&gt;听起来似乎可行，但我只需要举一个反例便能证明这个策略行不通。&lt;/p&gt;
&lt;p&gt;想要举反例很简单，比如只有两个物品：物品A：价值5，体积5，物品B：价值8：体积7，背包容量为10，物品B的性价比显然要比物品A高，那么用贪心算法必然会选择放入一个物品B，此时，剩余的空间已无法装下A或者B，所以得到的最高价值为8，而实际上，选择放入两个物品A即可得到更高的价值10。所以这里贪心算法并不适用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/03/14/5c8a56a150bc1.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;递归法&quot;&gt;递归法&lt;/h2&gt;
&lt;p&gt;像上一篇中的那样，我们只需要找到递推关系式，就很容易使用递归解法来求解了。&lt;/p&gt;
&lt;p&gt;用ks(i,t)表示前i种物品放入一个容量为t的背包获得的最大价值，那么对于第i种物品，我们有k种选择，0 &amp;lt;= k * V[i] &amp;lt;= t，即可以选择0、1、2...k个第i种物品，所以递推表达式为：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ks(i,t) = max{ks(i-1, t - V[i] * k) + P[i] * k}; （0 &amp;lt;= k * V[i] &amp;lt;= t）&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;同时，ks(0,t)=0;ks(i,0)=0;&lt;/p&gt;
&lt;p&gt;使用上面的栗子，我们可以先用递归来求解：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public static class Knapsack {
    private static int[] P={0,5,8};
    private static int[] V={0,5,7};
    private static int T = 10;

    @Test
    public void soleve1() {
        int result = ks(P.length - 1,10);
        System.out.println(&quot;最大价值为：&quot; + result);
    }

    private int ks(int i, int t){
        int result = 0;
        if (i == 0 || t == 0){
            // 初始条件
            result = 0;
        } else if(V[i] &amp;gt; t){
            // 装不下该珠宝
            result = ks(i-1, t);
        } else {
            // 可以装下
            // 取k个物品i，取其中使得总价值最大的k
            for (int k = 0; k * V[i] &amp;lt;= t; k++){
                int tmp2 = ks(i-1, t - V[i] * k) + P[i] * k;
                if (tmp2 &amp;gt; result){
                    result = tmp2;
                }
            }
        }
        return result;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;同样，这里的数组P和V分别添加了一个元素0，是为了减少越界判断而做的简单处理，运行如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;最大价值为：11&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果你对比一下01背包问题中的递归解法，就会发现唯一的区别便是这里多了一层循环，因为01背包中，对于第i个物品只有选和不选两种情况，只需要从这两种选择中选出最优的即可，而完全背包问题则需要在k种选择中选出最优解，这便是最内层循环在做的事情。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;for (int k = 0; k * V[i] &amp;lt;= t; k++){
    // 选取k个第i件商品的最优价值为tmp2
    int tmp2 = ks(i-1, t - V[i] * k) + P[i] * k;
    if (tmp2 &amp;gt; result){
        // 从中拿出最大的值即为最优解
        result = tmp2;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;最优化原理和无后效性&quot;&gt;最优化原理和无后效性&lt;/h2&gt;
&lt;p&gt;那这个问题可以不可以像01背包问题一样使用动态规划来求解呢？来证明一下即可。&lt;/p&gt;
&lt;p&gt;首先，先用反证法证明最优化原理：&lt;/p&gt;
&lt;p&gt;假设完全背包的解为F(n1,n2,...,nN)（n1，n2 分别代表第1、第2件物品的选取数量），完全背包的子问题为，将前i种物品放入容量为t的背包并取得最大价值，其对应的解为：F(n1,n2,...,ni)，假设该解不是子问题的最优解，即存在另一组解F(m1,m2,...,mi)，使得F(m1,m2,...,mi) &amp;gt; F(n1,n2,...,ni)，那么F(m1,m2,...,mi,...,nN) 必然大于 F(n1,n2,...,nN)，因此 F(n1,n2,...,nN) 不是原问题的最优解，与原假设不符，所以F(n1,n2,...,ni)必然是子问题的最优解。&lt;/p&gt;
&lt;p&gt;再来看看无后效性：&lt;/p&gt;
&lt;p&gt;对于子问题的任意解，都不会影响后续子问题的解，也就是说，前i种物品如何选择，只要最终的剩余背包空间不变，就不会影响后面物品的选择。即满足无后效性。&lt;/p&gt;
&lt;p&gt;因此，完全背包问题也可以使用动态规划来解决。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/02/5ccaece849f09.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;动态规划&quot;&gt;动态规划&lt;/h2&gt;
&lt;p&gt;既然知道了可以使用动态规划求解，接下来就是要找到这个问题的状态转移方程。&lt;/p&gt;
&lt;p&gt;其实前面的递推法中，已经找到了递推关系式，它便已经是我们需要的状态转移方程。&lt;/p&gt;
&lt;h3 id=&quot;自上而下记忆法&quot;&gt;自上而下记忆法&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;ks(i,t) = max{ks(i-1, t - V[i] * k) + P[i] * k}; （0 &amp;lt;= k * V[i] &amp;lt;= t）&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public static class Knapsack {
    private static int[] P={0,5,8};
    private static int[] V={0,5,7};
    private static int T = 10;

    private Integer[][] results = new Integer[P.length + 1][T + 1];

    @Test
    public void solve2() {
        int result = ks2(P.length - 1,10);
        System.out.println(&quot;最大价值为：&quot; + result);
    }

    private int ks2(int i, int t){
        // 如果该结果已经被计算，那么直接返回
        if (results[i][t] != null) return results[i][t];
        int result = 0;
        if (i == 0 || t == 0){
            // 初始条件
            result = 0;
        } else if(V[i] &amp;gt; t){
            // 装不下该珠宝
            result = ks2(i-1, t);
        } else {
            // 可以装下
            // 取k个物品，取其中使得价值最大的
            for (int k = 0; k * V[i] &amp;lt;= t; k++){
                int tmp2 = ks2(i-1, t - V[i] * k) + P[i] * k;
                if (tmp2 &amp;gt; result){
                    result = tmp2;
                }
            }
        }
        results[i][t] = result;
        return result;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;找出递归解法后，动态规划的解法其实就很简单了，只是多使用了一个二维数组来存储中间的解。&lt;/p&gt;
&lt;h3 id=&quot;自下而上填表法&quot;&gt;自下而上填表法&lt;/h3&gt;
&lt;p&gt;最后，还可以使用填表法来解决，此时需要将数组P和V额外添加的元素0去掉。&lt;/p&gt;
&lt;p&gt;为了方便理解，还是再画一个图吧：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1043143/201905/1043143-20190502211558406-2126017646.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对于第i种物品，我们可以选择的目标其实是从上一层中的某几个位置挑选出价值最高的一个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1043143/201905/1043143-20190502211545752-1539873502.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里当t=10时，因为最多只能放得下1个i2物品，所以只需要将两个数值进行比较，如果t=14，那么就需要将取0个、1个和两个i2物品的情况进行比较，然后选出最大值。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public static class Knapsack {
    private static int[] P={5,8};
    private static int[] V={5,7};
    private static int T = 10;

    private int[][] dp = new int[P.length + 1][T + 1];

    @Test
    public void solve3() {
        for (int i = 0; i &amp;lt; P.length; i++){
            for (int j = 0; j &amp;lt;= T; j++){
                for (int k = 0; k * V[i] &amp;lt;= j; k++){
                    dp[i+1][j] = Math.max(dp[i+1][j], dp[i][j-k * V[i]] + k * P[i]);
                }
            }
        }
        System.out.println(&quot;最大价值为：&quot; + dp[P.length][T]);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;跟01背包问题一样，完全背包的空间复杂度也可以进行优化，具体思路这里就不重复介绍了，可以翻看前面的01背包问题优化篇。&lt;/p&gt;
&lt;p&gt;优化后的状态转移方程为：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ks(t) = max{ks(t), ks(t - Vi) + Pi}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public static class Knapsack {
    private static int[] P={0,5,8};
    private static int[] V={0,5,7};
    private static int T = 10;

    private int[] newResults = new int[T + 1];

    @Test
    public void resolve4() {
        int result = ksp(P.length,T);
        System.out.println(result);
    }

    private int ksp(int i, int t){
        // 开始填表
        for (int m = 0; m &amp;lt; i; m++){
            for (int n = V[m]; n &amp;lt;= t; n++){
                newResults[n] = Math.max(newResults[n] , newResults[n - V[m]] + P[m]);
            }
            // 可以在这里输出中间结果
            System.out.println(JSON.toJSONString(newResults));
        }
        return newResults[newResults.length - 1];
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[0,0,0,0,0,0,0,0,0,0,0]
[0,0,0,0,0,5,5,5,5,5,10]
[0,0,0,0,0,5,5,8,8,8,10]
10&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其实完全背包问题也可以转化成01背包问题来求解，因为第i件物品最多选 ⌊T/Vi⌋(向下取整) 件，于是可以把第i种物品转化为⌊T/Vi⌋件体积和价值相同的物品，然后再来求解这个01背包问题。具体方法这里就不多说了，留给大家自行解决。如果遇到问题，可以翻开前面关于01背包问题的两篇文章。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;完全背包问题跟01背包有很多相似之处，比较一下他们的状态转移方程以及各种解法，就会发现他们其实是异父异母的亲兄弟。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/05/02/5ccaee9d39578.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这两个背包问题的关键都在于状态转移方程的寻找，如果对于类似的问题没有思路，可以先尝试找出递归解法，然后自上而下的记忆法便水到渠成了。&lt;/p&gt;
&lt;p&gt;当然，最重要的还是解题思路，理解记忆法和填表法的精髓，有助于之后举一反三，去解决类似的延伸问题。&lt;/p&gt;
&lt;p&gt;关于完全背包问题的解析到此就结束了，祝大家五一愉快！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/03/14/5c8a580b1789e.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果有疑问或者有什么想法，也欢迎关注我的公众号进行留言交流：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/03/14/5c8a58ba229ca.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 13:22:00 +0000</pubDate>
<dc:creator>弗兰克的猫</dc:creator>
<og:description>说明 在上一篇中，我们对01背包问题进行了比较深入的研究，这一篇里，我们来聊聊另一个背包问题：完全背包。 完全背包 有N种物品和一个容量为T的背包，每种物品都就可以选择任意多个，第i种物品的价值为P[</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/mfrank/p/10803417.html</dc:identifier>
</item>
<item>
<title>详解Redis Cluster集群 - 请叫我头头哥</title>
<link>http://www.cnblogs.com/toutou/p/redis_cluster.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/toutou/p/redis_cluster.html</guid>
<description>&lt;div class=&quot;bodyCustomClass&quot; readability=&quot;32.5&quot;&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Redis Cluster是Redis的分布式解决方案，在Redis 3.0版本正式推出的，有效解决了Redis分布式方面的需求。当遇到单机内存、并发、流量等瓶颈时，可以采用Cluster架构达到负载均衡的目的。分布式集群首要解决把整个数据集按照分区规则映射到多个节点的问题，即把数据集划分到多个节点上，每个节点负责整个数据的一个子集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h2 id=&quot;_nav_0&quot; class=&quot;blogCustomTitleStyle&quot;&gt;&lt;span class=&quot;blogCustomTitleIco&quot;&gt;v&lt;/span&gt;功能介绍&lt;/h2&gt;
&lt;p&gt;1.0 数据自动分片&lt;/p&gt;
&lt;p&gt;集群中每个节点都会负责一定数量的slot，每个key会映射到一个具体的slot，通过这种方式就可能找到key具体保存在哪个节点上了。&lt;/p&gt;
&lt;p&gt;1.1 提供hash tags功能&lt;/p&gt;
&lt;p&gt;通过hash tag功能可以将多个不同key映射到同一个slot上，这样就能够提供multi-key操作，hash tag的使用的方式是在key中包含“{}”，这样只有在“{...}”中字串被用于hash计算。&lt;/p&gt;
&lt;p&gt;1.2 自动失效转移和手动失效转移&lt;/p&gt;
&lt;p&gt;1.3 减少硬件成本和运维成本。&lt;/p&gt;
&lt;h2 id=&quot;_nav_1&quot; class=&quot;blogCustomTitleStyle&quot;&gt;&lt;span class=&quot;blogCustomTitleIco&quot;&gt;v&lt;/span&gt;Redis Cluster目标&lt;/h2&gt;
&lt;p&gt;高性能&lt;/p&gt;
&lt;p&gt;高可用&lt;/p&gt;
&lt;p&gt;线性扩容&lt;/p&gt;
&lt;h2 id=&quot;_nav_2&quot; class=&quot;blogCustomTitleStyle&quot;&gt;&lt;span class=&quot;blogCustomTitleIco&quot;&gt;v&lt;/span&gt;配置Redis Cluster&lt;/h2&gt;
&lt;p&gt;创建目录cluster，并为6个实例创建各自的目录，这6个目录用来存放6个实例，后面将使用这6个实例组成集群。3个Master和3个Slave&lt;/p&gt;
&lt;p&gt;1.0 创建目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir redis-cluster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir 900{1,2,3,4,5,6}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193328346-1086200685.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.1 拷贝6个实例&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp /root/redis-5.0.2/redis.conf /usr/local/bin/redis-cluster/9001&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193334115-292697772.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.2 更新实例配置文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193340662-576564194.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;具体来说，需要注意下：由于在一台机器上，因此每个实例应该有不同的端口；同时，每个实例显然会有自己的存放数据的地方；开启AOF模式；开启集群配置；开启后台模式；&lt;/p&gt;
&lt;p&gt;1.3 Redis集群的操作在后文是通过Ruby脚本来完成的，因此需要安装Ruby相关的RPM包，以及Redis和Ruby的接口包。&lt;/p&gt;
&lt;p&gt;1.3.1 安装ruby&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install ruby&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.3.1 安装rubygems&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install rubygems&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.4 启动Redis cluster实例&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/root/redis-5.0.2/src/redis-server /usr/local/bin/redis-cluster/9001/redis.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193348276-459535066.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;netstat -tnulp | grep redis&lt;/code&gt;和&lt;code&gt;ps -aux | grep redis&lt;/code&gt;查看是否启动成功。&lt;/p&gt;
&lt;p&gt;1.5 redis-cli创建集群&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./redis-cli --cluster create 10.168.11.116:9001 10.168.11.116:9002 10.168.11.116:9003 10.168.11.116:9004 10.168.11.116:9005 10.168.11.116:9006&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193355188-729235446.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注意，redis5.0使用redis-cli作为创建集群的命令，使用c语言实现，不再使用ruby语言。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193401338-2010927774.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.6 检查集群&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./redis-cli --cluster check 10.168.11.116:9001&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193407400-1559199129.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.7 查看集群key、slot、slave分布信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./redis-cli --cluster info 10.168.11.116:9001&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423193413996-1947144457.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.8 集群相关命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CLUSTER INFO 打印集群的信息
CLUSTER NODES 列出集群当前已知的所有节点（node），以及这些节点的相关信息。 
CLUSTER MEET &lt;/span&gt;&amp;lt;ip&amp;gt; &amp;lt;port&amp;gt;&lt;span&gt; 将 ip 和 port 所指定的节点添加到集群当中，让它成为集群的一份子。
CLUSTER FORGET &lt;/span&gt;&amp;lt;node_id&amp;gt;&lt;span&gt; 从集群中移除 node_id 指定的节点。
CLUSTER REPLICATE &lt;/span&gt;&amp;lt;node_id&amp;gt;&lt;span&gt; 将当前节点设置为 node_id 指定的节点的从节点。
CLUSTER SAVECONFIG 将节点的配置文件保存到硬盘里面。
CLUSTER ADDSLOTS &lt;/span&gt;&amp;lt;slot&amp;gt;&lt;span&gt; [slot ...] 将一个或多个槽（slot）指派（assign）给当前节点。
CLUSTER DELSLOTS &lt;/span&gt;&amp;lt;slot&amp;gt;&lt;span&gt; [slot ...] 移除一个或多个槽对当前节点的指派。
CLUSTER FLUSHSLOTS 移除指派给当前节点的所有槽，让当前节点变成一个没有指派任何槽的节点。
CLUSTER SETSLOT &lt;/span&gt;&amp;lt;slot&amp;gt; NODE &amp;lt;node_id&amp;gt;&lt;span&gt; 将槽 slot 指派给 node_id 指定的节点。
CLUSTER SETSLOT &lt;/span&gt;&amp;lt;slot&amp;gt; MIGRATING &amp;lt;node_id&amp;gt;&lt;span&gt; 将本节点的槽 slot 迁移到 node_id 指定的节点中。
CLUSTER SETSLOT &lt;/span&gt;&amp;lt;slot&amp;gt; IMPORTING &amp;lt;node_id&amp;gt;&lt;span&gt; 从 node_id 指定的节点中导入槽 slot 到本节点。
CLUSTER SETSLOT &lt;/span&gt;&amp;lt;slot&amp;gt; STABLE 取消对槽 slot 的导入（&lt;span&gt;import&lt;/span&gt;&lt;span&gt;）或者迁移（migrate）。 
CLUSTER KEYSLOT &lt;/span&gt;&amp;lt;key&amp;gt;&lt;span&gt; 计算键 key 应该被放置在哪个槽上。
CLUSTER COUNTKEYSINSLOT &lt;/span&gt;&amp;lt;slot&amp;gt;&lt;span&gt; 返回槽 slot 目前包含的键值对数量。
CLUSTER GETKEYSINSLOT &lt;/span&gt;&amp;lt;slot&amp;gt; &amp;lt;count&amp;gt;&lt;span&gt; 返回 count 个 slot 槽中的键。 
CLUSTER SLAVES node&lt;/span&gt;-id 返回一个master节点的slaves 列表
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;_nav_2&quot; class=&quot;blogCustomTitleStyle&quot;&gt;&lt;span class=&quot;blogCustomTitleIco&quot;&gt;v&lt;/span&gt;Cluster测试效果&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;./redis-cli -c -h 10.168.11.116 -p 9001&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506684/201904/506684-20190423200314838-1152384198.png&quot; alt=&quot;详解Redis Cluster集群&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其他参考资料：&lt;/p&gt;
&lt;div id=&quot;MySignature&quot; readability=&quot;9.0030211480363&quot;&gt;
&lt;p id=&quot;PSignature&quot;&gt;&lt;br/&gt;作　　者：&lt;strong&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/toutou/&quot; target=&quot;_blank&quot;&gt;请叫我头头哥&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;出　　处：&lt;a href=&quot;http://www.cnblogs.com/toutou/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/toutou/&lt;/a&gt;&lt;br/&gt;关于作者：专注于基础平台的项目开发。如有问题或建议，请多多赐教！&lt;br/&gt;版权声明：本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接。&lt;br/&gt;特此声明：所有评论和私信都会在第一时间回复。也欢迎园子的大大们指正错误，共同进步。或者&lt;a href=&quot;http://msg.cnblogs.com/msg/send/%E8%AF%B7%E5%8F%AB%E6%88%91%E5%A4%B4%E5%A4%B4%E5%93%A5&quot;&gt;直接私信&lt;/a&gt;我&lt;br/&gt;声援博主：如果您觉得文章对您有帮助，可以点击文章右下角&lt;strong&gt;&lt;span&gt;【&lt;a id=&quot;post-up&quot; href=&quot;javascript:void(0);&quot;&gt;推荐&lt;/a&gt;】&lt;/span&gt;&lt;/strong&gt;一下。您的鼓励是作者坚持原创和持续写作的最大动力！&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 02 May 2019 13:09:00 +0000</pubDate>
<dc:creator>请叫我头头哥</dc:creator>
<og:description>Redis Cluster是Redis的分布式解决方案，在Redis 3.0版本正式推出的，有效解决了Redis分布式方面的需求。当遇到单机内存、并发、流量等瓶颈时，可以采用Cluster架构达到负载</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/toutou/p/redis_cluster.html</dc:identifier>
</item>
<item>
<title>听说苏州是互联网的荒漠，真的吗？ - 豌豆花下猫</title>
<link>http://www.cnblogs.com/pythonista/p/10803387.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pythonista/p/10803387.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2n92xyxiwj21g80yt41f.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我国互联网存在着巨大的地域性偏差，除了北上广深杭外，其它省市的互联网都很弱小。去年 8 月，某个公众号发布了一篇《上海不相信互联网》的文章，引起了多方的讨论。CSDN 公众号以此为契机，陆续发布了关于南京、东北、西安、甚至德国等地的互联网发展情况的文章。&lt;/p&gt;
&lt;p&gt;作为一个“苏漂”程序员，我有幸得到了 CSDN 编辑的约稿，因此也给苏州写了一篇。这篇文章并不是专业的行业观察，有些观点缺乏客观的数据支撑，还有一些理应关注的内容因为资料不足而被迫删除，所以整体而言，这篇文章只是&lt;strong&gt;个人之见&lt;/strong&gt; 。它是一个开端吧，今后我会持续关注苏州互联网的发展，再分享我的见闻与思考。&lt;/p&gt;
&lt;p&gt;该文已授权给 CSDN 公众号发布原创，我转载于此，主要是调整了排版。欢迎就文中内容与我交流。如需转载，请联系 CSDN 公众号（当然也可找我，代为联系）。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;本文首发于 CSDN 公众号&lt;/p&gt;
&lt;p&gt;发布标题：《苏州到底有没有互联网？》&lt;/p&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://mp.weixin.qq.com/s/wpUcD5EHdiHz97pnXMKveQ&quot; class=&quot;uri&quot;&gt;https://mp.weixin.qq.com/s/wpUcD5EHdiHz97pnXMKveQ&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;苏州印象&quot;&gt;01 苏州印象&lt;/h2&gt;
&lt;p&gt;说起苏州，你的第一印象是什么？&lt;/p&gt;
&lt;p&gt;是“上有天堂，下有苏杭”、“苏湖熟，天下足”，是烟雨楼台中的江南古城吧？&lt;/p&gt;
&lt;p&gt;是“姑苏城外寒山寺，夜半钟声到客船”，是文人墨客游园林品昆曲哼评弹，是传续历史文化底蕴的代表吧？&lt;/p&gt;
&lt;p&gt;是背靠上海、独占江苏鳌头的现代大都市，是 GDP 排行全国第七名，是非省会或直辖市的城市中的领头羊吧？&lt;/p&gt;
&lt;p&gt;没错，这些都是苏州印象，复古与现代相融合，文化与经济共繁荣。&lt;/p&gt;
&lt;p&gt;它有近 2500 年历史，是中国首批国家历史文化名城之一，它的园林被联合国教科文组织列为世界文化遗产，它的大运河区段也入选了世界遗产名录。&lt;/p&gt;
&lt;p&gt;它的工业总产值居全国第一，进出口总额排全国前三，城市总人口超过 1000 万，是国内第二大的移民城市。&lt;/p&gt;
&lt;p&gt;2018 年 8 月，英国经济学人智库（EIU）发布了年度《全球宜居城市排行榜》，苏州市蝉联成为中国内地最宜居城市，再次超越北上广！&lt;/p&gt;
&lt;p&gt;2018 年 11 月，福布斯中国发布了《创新力最强的30城市》，苏州市排名第 3 ，超越上海和广州！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2ha6gio7vj20sq0b8jrn.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这就是苏州。苏州就是这样。&lt;/p&gt;
&lt;p&gt;然而，在这一连串的光鲜亮丽背后，苏州也有自己的痛——它从未培育过一家互联网独角兽，甚至不及苏北的宿迁，后者至少养育出了一位互联网巨头“大强子”。&lt;/p&gt;
&lt;p&gt;苏州拥有庞大的经济体量，但它的存在感并不强，互联网的实力与自身并不匹配。坊间传言，苏州是互联网的荒漠，这是真的么？&lt;/p&gt;
&lt;h2 id=&quot;互联网荒漠&quot;&gt;02 互联网荒漠&lt;/h2&gt;
&lt;p&gt;南京是苏州终生的劲敌/兄弟，CSDN 曾发布过一篇《“南京才不相信互联网呢”》，介绍了它的互联网状况。&lt;/p&gt;
&lt;p&gt;该文把南京比作是“互联网沙漠之城”，我完全不认同——说是沙漠就太过分啦，南京远不到贫瘠无力的地步，说得那么苦寒兮兮的，把混得更惨的其它城市置于何地呢？&lt;/p&gt;
&lt;p&gt;如果要把北上广深杭，比作互联网的几片树林的话，南京大概是一圈草地吧，苏州反而才是绿植更加稀疏的荒漠。&lt;/p&gt;
&lt;p&gt;在那篇文章的留言区，有读者这样留言：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;比起南京，苏州更是寸草不生。&lt;/p&gt;
&lt;p&gt;苏州的互联网还是婴儿。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;苏州和南京，千年古城也，一省两强，明争暗斗，不分伯仲。&lt;/p&gt;
&lt;p&gt;而在当今的互联网浪潮中，它们距离第一梯队都太远，终于落后成了一对难兄难弟。&lt;/p&gt;
&lt;p&gt;数一数本地知名的互联网公司吧。南京有苏宁、途牛旅游、西祠胡同，苏州有同程旅游、蜗牛游戏、聚合数据。什么？这里有你不知道的？别抱怨了，再多数几家，你很可能也不认识（而我也数不出来）。&lt;/p&gt;
&lt;p&gt;这就是它们惨淡的互联网环境：没有巨头，小头公司不成气候，有的据说甚至遭到了 BAT 的嫌弃。&lt;/p&gt;
&lt;p&gt;哦，差点忘了。苏州还有一张突然空降来的王牌呢——360 安全公司，就是周鸿祎的那家呢。去年，经过一番眼花缭乱的操作，它竟变成了一家苏州的企业！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2ha62b6zxj20xn0cawfm.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;不过，这就是个空壳罢了，像什么“ 霍尔果斯XXX影视公司 ”一样，资本面具而已。&lt;/p&gt;
&lt;p&gt;当然，有一些互联网巨头是真的入驻了苏州的，例如华为、阿里巴巴、百度、微软、IBM，初来时可能还提出过“打造 xxx，提升 xxx”的响亮口号。&lt;/p&gt;
&lt;p&gt;然而，它们派来的都不是互联网核心的业务，本着精明的商人心计，它们当然是来捞取政策红利与人才储备的，可不是来播撒互联网种子的。&lt;/p&gt;
&lt;p&gt;可话说回来，即便是有大资本来苏州吹出一个风口，它就能站对位置，就能被吹得起来么？&lt;/p&gt;
&lt;p&gt;苏州是否容得下互联网，能否发展好互联网呢？&lt;/p&gt;
&lt;h2 id=&quot;一座古城&quot;&gt;03 一座古城&lt;/h2&gt;
&lt;p&gt;从诸多方面来看，苏州都只是一座慢节奏的古城。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它对互联网的很多新鲜事物都免疫。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如近两三年，共享单车群雄并起，但即便是在它们最激进的攻城略地时期，苏州也始终置身事外，不受战火纷扰。就我所见，只有极稀少的几辆小黄车，我一度怀疑它们是从周边城市偷渡进来的......&lt;/p&gt;
&lt;p&gt;苏州是最早实行“禁车令”的极少数大城市之一，当时我初来乍到，作为一个“苏漂”新人，我给苏州的评价是：&lt;strong&gt;不够开放包容，缺少冒险精神。&lt;/strong&gt; 这恰恰就是“互联网精神”的内核之一。&lt;/p&gt;
&lt;p&gt;但是如今再看，风光褪去的共享单车仿佛一场考验市民公德与揭露资本嘴脸的闹剧。苏州虽然没有感受到新物种的红利，却也躲过了它的反噬。&lt;/p&gt;
&lt;p&gt;实际上，苏州有自己的“公共自行车”系统，自 2010 年启动，有桩停车点覆盖了很多生活小区、交通站点、商业体和其它场所。政府投入了巨大的成本来推动 &lt;strong&gt;有序的&lt;/strong&gt; 绿色出行，成果显著，这大概也是“禁车令”的主要考虑吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2lxmize8uj20f00b9mz4.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这座古城自有自己的发展规划，面对热闹的互联网诱惑，她倒是能“守身如玉”。&lt;/p&gt;
&lt;p&gt;共享单车或许还不够“互联网”，但其它的互联网风口也吹不动苏州。&lt;/p&gt;
&lt;p&gt;就看最近几年的大事件吧，在团购网站的“千团大战”、网约车的大战、以及直播与短视频的大战中，牌桌上可有苏州本土的企业呢？好像没有吧！这些可没有碰上“禁 X 令”。&lt;/p&gt;
&lt;p&gt;苏州严重依赖于第二产业，一直是上海制造业的转移地，但同时，金融与科技等第三产业想要在大上海的“黑洞”边发展，就太难了。&lt;/p&gt;
&lt;p&gt;苏州的高等教育严重落后，综合性大学仅有一家苏州大学（211，非985）。在最新发布的《武书连 2019 中国大学排行榜》中，苏州大学取得历史性最好排名 24 名，其它本地高校排名在 300 开外。&lt;/p&gt;
&lt;p&gt;造血能力不足，能少点被上海、南京和杭州吸血，就很不错了。&lt;/p&gt;
&lt;p&gt;苏州本地人喜欢安逸，享受着城市扩张的红利，持有多套房产坐收房租的大有人在。本地年轻人早早婚嫁，靠着啃老支付房贷车贷，拿着一份入不敷出的工资，也活得毫无压力。最后高房价不知吓软了多少外地人的腿。&lt;/p&gt;
&lt;p&gt;在地理空间上，苏州也是相对封闭的。坐拥 8000 多平方公里的土地以及 1000 万人口，它竟然没有建成一个机场。苏州与浙江省之间至今也没有直通的铁路，唯一相通的高速公路还是两车道的，阻碍了高效的跨省域协作。&lt;/p&gt;
&lt;p&gt;苏州就是这样一座古城，养老有余，拼搏不足，家底殷实，环境封闭。&lt;/p&gt;
&lt;p&gt;外地的互联网企业能走进来已然不错，本地互联网企业若想壮大走出去，则举步维艰。&lt;/p&gt;
&lt;p&gt;苏州本地成长起来最大的互联网公司是同程网，它于 2003 年上线，主营在线旅游代理业务，到 2010 年，其综合实力排名全国第三。然而到 2013 年，携程发起猛烈的价格战，同程被迫迎战，一个季度就烧掉了十年的利润，元气大伤。&lt;/p&gt;
&lt;p&gt;此后，BAT 纷纷入局，万达也成立万达旅业想分一杯羹，同程顿时陷入了危机重重的局面。&lt;/p&gt;
&lt;p&gt;最后它被资本招安，与艺龙合并。2018 年 11 月，同程艺龙在港股上市，如今第一大股东是腾讯，第二大股东是携程，公司注册地也变为了北京。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2lxorsaacj217o0kjnpd.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;苏州互联网企业发展之路的艰难，在同程的身上能看到一个缩影。&lt;/p&gt;
&lt;p&gt;苏州是互联网的荒漠，事实不容争辩。那么，它的未来出路在哪呢？&lt;/p&gt;
&lt;h2 id=&quot;苏州互联网的未来&quot;&gt;04 苏州互联网的未来&lt;/h2&gt;
&lt;p&gt;互联网已经深切地改变了我们的生活，智能手机的普及降低了人们“触网”的门槛。&lt;/p&gt;
&lt;p&gt;对于广大用户来说，互联网没有地域之分，人们根本不关心提供服务的是哪个地方的企业。&lt;/p&gt;
&lt;p&gt;不像购买手机时，有人会选择支持国产，互联网用户更在乎的是服务本身，而不在乎谁是提供者——哪家打车平台折扣大就用哪家、哪家外卖平台做活动就选哪家、哪家短视频更抓眼球就用哪家。平台间的迁移成本几乎为零，用户没有忠诚度可言。&lt;/p&gt;
&lt;p&gt;互联网公司相互比拼谁的市场占有率高，谁构建的护城河高，以规模优势打压和吞并竞争对手。强者更强，剩者为王。&lt;/p&gt;
&lt;p&gt;近年来兴风作浪的资本教育了大众两个词汇：烧钱与割韭菜。&lt;/p&gt;
&lt;p&gt;从这个视角来看，苏州是幸运的。用户要的是优质的互联网服务，至于它是不是由本地企业提供的，又有何区别的？把节省下来的钱用在实业上，不是更有意义么？&lt;/p&gt;
&lt;p&gt;寸有所长，尺有所短，苏州互联网的未来出路应该是：&lt;strong&gt;扬长补短，走出一条特色的苏州互联网道路。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据中国互联网络信息中心最新发布的《第43次中国互联网络发展状况统计报告》，网信独角兽企业出现极端的“贫富分化”——北上广浙占去 92.1%，其它省市仅有 7.9%。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2ltrjmiszj20ol0a8776.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这说明了什么？除了这四地，&lt;strong&gt;全国其它地方都是互联网的荒漠啊！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;苏州不是互联网强市，这没啥可否认的，但也不值得妄自菲薄。并不是非要夺得某个领域的互联网头把交椅，才有自尊与荣耀。&lt;/p&gt;
&lt;p&gt;都说现在是“互联网下半场”，人工智能、大数据、物联网、5G是未来的大趋势。怎么把这些技术与现有的工业基础相结合，这才是苏州最迫切的研究课题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;消费互联网的红利将尽，工业互联网的时代即将来临。&lt;/strong&gt; 苏州的未来不是消费互联网，而是工业互联网。我国为了甩掉低端制造业的身份，逐年加码推动工业互联网的发展，这对苏州来说是极大的利好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bgy1g2lvbzlifyj21180byn4y.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过政策引导、资金补贴、规范标准、政府部署等一系列动作，苏州加快了工业互联网的建设。&lt;/p&gt;
&lt;p&gt;2016 年，由工业 4.0 俱乐部、中国工控网等单位主办，苏州召开了第一届“中国工业服务产业互联网大会”。2018 年，苏州成立了苏州市工业互联网产业联盟。&lt;/p&gt;
&lt;p&gt;苏州也开始跑起来了。也许不要几年，它的互联网局面将改善起来，像遍地的小绿车，在这片荒漠上长出一个活力四射的春天。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/68b02e3bly1g2aiq1kpa8j21hc0nmgs4.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;公众号【&lt;strong&gt;Python猫&lt;/strong&gt;】， 本号连载优质的系列文章，有喵星哲学猫系列、Python进阶系列、好书推荐系列、技术写作、优质英文推荐与翻译等等，欢迎关注哦。后台回复“&lt;strong&gt;爱学习&lt;/strong&gt;”，免费获得一份学习大礼包。&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 13:05:00 +0000</pubDate>
<dc:creator>豌豆花下猫</dc:creator>
<og:description>我国互联网存在着巨大的地域性偏差，除了北上广深杭外，其它省市的互联网都很弱小。去年 8 月，某个公众号发布了一篇《上海不相信互联网》的文章，引起了多方的讨论。CSDN 公众号以此为契机，陆续发布了关于</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/pythonista/p/10803387.html</dc:identifier>
</item>
<item>
<title>基于.net core微服务（Consul、Ocelot、Docker、App.Metrics+InfluxDB+Grafana、Exceptionless、数据一致性、Jenkins） - 进击的辣条</title>
<link>http://www.cnblogs.com/wyt007/p/10631109.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wyt007/p/10631109.html</guid>
<description>&lt;h2&gt;1、微服务简介&lt;/h2&gt;
&lt;p&gt;一种架构模式，提倡将单一应用程序划分成一组小的服务，服务之间互相协调、互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务与服务间采用轻量级的通信机制互相沟通（RESTful API）。每个服务都围绕着具体的业务进行构建，并且能够被独立地部署到生产环境、类生产环境等。应尽量避免统一的、集中式的服管理机制，对具体的一个服务而言，应根据业务上下文，选择合适的语言、工具对其进行构建。 　　　　　　　　　　　　　　　　　　　　——马丁•福勒&lt;/p&gt;
&lt;h3&gt;1.1、.net core下的微服务构件&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;服务治理：Consul&lt;/li&gt;
&lt;li&gt;API网关：Ocelot&lt;/li&gt;
&lt;li&gt;作业调度：Quartz.NET,Hangfire&lt;/li&gt;
&lt;li&gt;分布式日志：Exceptionless&lt;/li&gt;
&lt;li&gt;ESB：Masstransit(RabbitMQ)&lt;/li&gt;
&lt;li&gt;APM：Metrac.App,Buttfly&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;1.2、微架构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201903/991704-20190331113046831-1623413271.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;2、Consul&lt;/h2&gt;
&lt;p&gt;http api官方文档地址：&lt;a href=&quot;https://www.consul.io/api/index.html&quot; target=&quot;_blank&quot;&gt;https://www.consul.io/api/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Api本地url: &lt;a href=&quot;http://localhost:8500/v1/agent/services&quot; target=&quot;_blank&quot;&gt;http://localhost:8500/v1/agent/services&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;2.1、Consul是什么&lt;/h3&gt;
&lt;p&gt;是一个服务管理软件。支持多数据中心下，分布式高可用的，服务发现和配置共享。consul支持&lt;strong&gt;健康检查&lt;/strong&gt;，&lt;strong&gt;允许存储键值对&lt;/strong&gt;。一致性协议采用 Raft 算法,用来保证服务的高可用。成员管理和消息广播 采用GOSSIP协议，支持ACL访问控制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务注册&lt;/strong&gt;：一个服务将其位置信息在“中心注册节点”注册的过程。该服务一般会将它的主机IP地址以及端口号进行注册，有时也会有服务访问的认证信息，使用协议，版本号，以及关于环境的一些细节信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务发现&lt;/strong&gt;：服务发现可以让一个应用或者组件发现其运行环境以及其它应用或组件的信息。用户配置一个服务发现工具就可以将实际容器跟运行配置分离开。常见配置信息包括：ip、端口号、名称等。&lt;/p&gt;
&lt;h3&gt;2.2、述语&lt;/h3&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;Agent&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;Agent&lt;/span&gt;&lt;span&gt;是长期运行在每个&lt;span lang=&quot;EN-US&quot;&gt;consul&lt;/span&gt;集群成员节点上守护进程。通过命令&lt;span lang=&quot;EN-US&quot;&gt;consul agent&lt;/span&gt;启动。&lt;span lang=&quot;EN-US&quot;&gt;Agent&lt;/span&gt;有&lt;span lang=&quot;EN-US&quot;&gt;client&lt;/span&gt;和&lt;span lang=&quot;EN-US&quot;&gt;server&lt;/span&gt;两种模式。由于每个节点都必须运行&lt;span lang=&quot;EN-US&quot;&gt;agent&lt;/span&gt;，所有节点要么是&lt;span lang=&quot;EN-US&quot;&gt;client&lt;/span&gt;要么是&lt;span lang=&quot;EN-US&quot;&gt;server&lt;/span&gt;。所有的&lt;span lang=&quot;EN-US&quot;&gt;Agent&lt;/span&gt;都可以调用&lt;span lang=&quot;EN-US&quot;&gt;DNS&lt;/span&gt;或&lt;span lang=&quot;EN-US&quot;&gt;HTTP API&lt;/span&gt;，并负责检查和维护服务同步。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;client&lt;br/&gt;　　运行client模式的Agent，将所有的RPCs转发到Server。Client是相对无状态的。Client唯一所做的是在后台参与LAN gossip pool。只消耗少量的资源，少量的网络带宽。&lt;/li&gt;
&lt;li&gt;Server&lt;br/&gt;　　运行Server模式的Agent，参与Raft quorum，维护集群的状态，响应RPC查询，与其他数据中心交互WAN gossip，转发查询到Leader或远程数据中心。&lt;/li&gt;
&lt;li&gt;Datacenter&lt;br/&gt;　　数据中心的定义似乎是显而易见的，有一些细节是必须考虑的。例如，在EC2，多个可用性区域是否被认为组成了单一的数据中心？我们定义数据中心是在同一个网络环境中——私有的，低延迟，高带宽。这不包括基于公共互联网环境，但是对于我们而言，在同一个EC2的多个可用性区域会被认为是一个的数据中心。&lt;/li&gt;
&lt;li&gt;Consensus&lt;br/&gt;　　当本系列文档中，consensus，意味着leader election协议，以及事务的顺序。由于这些事务是基于一个有限状态机，consensus的定义意味着复制状态机的一致性。&lt;/li&gt;
&lt;li&gt;Gossip&lt;br/&gt;　　consul是建立在Serf之上，提供了完成的Gossip协议，用于成员维护故障检测、事件广播。详细细节参见gossip documentation。这足以知道gossip是基于UDP协议实现随机的节点到节点的通信，主要是在UDP。&lt;/li&gt;
&lt;li&gt;LAN Gossip&lt;br/&gt;　　指的是LAN gossip pool，包含位于同一个局域网或者数据中心的节点。&lt;/li&gt;
&lt;li&gt;WAN Gossip&lt;br/&gt;　　指的是WAN gossip pool，只包含server节点，这些server主要分布在不同的数据中心或者通信是基于互联网或广域网的。&lt;/li&gt;
&lt;li&gt;RPC&lt;br/&gt;　　远程过程调用。是允许client请求服务器的请求/响应机制。&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2.3、部署结构图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201903/991704-20190331120434947-1335806623.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.4、命令&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt; -advertise&lt;br/&gt;通知展现地址用来改变我们给集群中的其他节点展现的地址，一般情况下-bind地址就是展现地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-bootstrap&lt;/strong&gt;&lt;br/&gt;用来控制一个server是否在bootstrap模式，在一个datacenter中只能有一个server处于bootstrap模式，当一个server处于bootstrap模式时，可以自己选举为raft leader。  &lt;/li&gt;
&lt;li&gt;-bootstrap-expect&lt;br/&gt;在一个datacenter中期望提供的server节点数目，当该值提供的时候，consul一直等到达到指定sever数目的时候才会引导整个集群，该标记不能和bootstrap公用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-bind&lt;/strong&gt;&lt;br/&gt;该地址用来在集群内部的通讯，集群内的所有节点到地址都必须是可达的，默认是0.0.0.0&lt;/li&gt;
&lt;li&gt;-client&lt;br/&gt;consul绑定在哪个client地址上，这个地址提供HTTP、DNS、RPC等服务，默认是127.0.0.1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-config-file&lt;/strong&gt;&lt;br/&gt;明确的指定要加载哪个配置文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-config-dir&lt;/strong&gt;&lt;br/&gt;配置文件目录，里面所有以.json结尾的文件都会被加载&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-data-dir&lt;/strong&gt;&lt;br/&gt;提供一个目录用来存放agent的状态，所有的agent允许都需要该目录，该目录必须是稳定的，系统重启后都继续存在&lt;/li&gt;
&lt;li&gt;-datacenter&lt;br/&gt;该标记控制agent允许的datacenter的名称，默认是dc1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-encrypt&lt;/strong&gt;&lt;br/&gt;指定secret key，使consul在通讯时进行加密，key可以通过consul keygen生成，同一个集群中的节点必须使用相同的key&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-join&lt;/strong&gt;&lt;br/&gt;加入一个已经启动的agent的ip地址，可以多次指定多个agent的地址。如果consul不能加入任何指定的地址中，则agent会启动失败，默认agent启动时不会加入任何节点。&lt;/li&gt;
&lt;li&gt;-retry-join&lt;br/&gt;和join类似，但是允许你在第一次失败后进行尝试。&lt;/li&gt;
&lt;li&gt;-retry-interval&lt;br/&gt;两次join之间的时间间隔，默认是30s&lt;/li&gt;
&lt;li&gt;-retry-max&lt;br/&gt;尝试重复join的次数，默认是0，也就是无限次尝试&lt;/li&gt;
&lt;li&gt;-log-level&lt;br/&gt;consul agent启动后显示的日志信息级别。默认是info，可选：trace、debug、info、warn、err。&lt;/li&gt;
&lt;li&gt;-node&lt;br/&gt;节点在集群中的名称，在一个集群中必须是唯一的，默认是该节点的主机名&lt;/li&gt;
&lt;li&gt;-protocol&lt;br/&gt;consul使用的协议版本&lt;/li&gt;
&lt;li&gt;-rejoin&lt;br/&gt;使consul忽略先前的离开，在再次启动后仍旧尝试加入集群中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-server&lt;/strong&gt;&lt;br/&gt;定义agent运行在server模式，每个集群至少有一个server，建议每个集群的server不要超过5个&lt;/li&gt;
&lt;li&gt;-syslog&lt;br/&gt;开启系统日志功能，只在linux/osx上生效&lt;/li&gt;
&lt;li&gt;-ui-dir&lt;br/&gt;提供存放web ui资源的路径，该目录必须是可读的&lt;/li&gt;
&lt;li&gt;-pid-file&lt;br/&gt;提供一个路径来存放pid文件，可以使用该文件进行SIGINT/SIGHUP(关闭/更新)agent&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2.5、常用API&lt;/h3&gt;
&lt;p&gt;consul的主要接口是RESTful HTTP API，该API可以用来增删查改nodes、services、checks、configguration。所有的endpoints主要分为以下类别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;kv&lt;/strong&gt; - Key/Value存储&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;agent&lt;/strong&gt; - Agent控制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;catalog&lt;/strong&gt; - 管理nodes和services&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;health&lt;/strong&gt; - 管理健康监测&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;session&lt;/strong&gt; - Session操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;acl&lt;/strong&gt; - ACL创建和管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; - 用户Events&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;status&lt;/strong&gt; - Consul系统状态&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li readability=&quot;-0.5&quot;&gt;&lt;strong&gt;agent endpoints&lt;/strong&gt;：agent endpoints用来和本地agent进行交互，一般用来服务注册和检查注册，支持以下接口&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
/v1/agent/&lt;span&gt;checks : 返回本地agent注册的所有检查(包括配置文件和HTTP接口)
&lt;/span&gt;/v1/agent/&lt;span&gt;services : 返回本地agent注册的所有 服务
&lt;/span&gt;/v1/agent/&lt;span&gt;members : 返回agent在集群的gossip pool中看到的成员
&lt;/span&gt;/v1/agent/&lt;span&gt;self : 返回本地agent的配置和成员信息
&lt;/span&gt;/v1/agent/join/&amp;lt;address&amp;gt;&lt;span&gt; : 触发本地agent加入node
&lt;/span&gt;/v1/agent/force-leave/&amp;lt;node&amp;gt;&amp;gt;&lt;span&gt;: 强制删除node
&lt;/span&gt;/v1/agent/check/&lt;span&gt;register : 在本地agent增加一个检查项，使用PUT方法传输一个json格式的数据
&lt;/span&gt;/v1/agent/check/deregister/&amp;lt;checkID&amp;gt;&lt;span&gt; : 注销一个本地agent的检查项
&lt;/span&gt;/v1/agent/check/pass/&amp;lt;checkID&amp;gt;&lt;span&gt; : 设置一个本地检查项的状态为passing
&lt;/span&gt;/v1/agent/check/warn/&amp;lt;checkID&amp;gt;&lt;span&gt; : 设置一个本地检查项的状态为warning
&lt;/span&gt;/v1/agent/check/fail/&amp;lt;checkID&amp;gt;&lt;span&gt; : 设置一个本地检查项的状态为critical
&lt;/span&gt;/v1/agent/service/&lt;span&gt;register : 在本地agent增加一个新的服务项，使用PUT方法传输一个json格式的数据
&lt;/span&gt;/v1/agent/service/deregister/&amp;lt;serviceID&amp;gt; : 注销一个本地agent的服务项
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.5&quot;&gt;&lt;strong&gt;catalog endpoints&lt;/strong&gt;：catalog endpoints用来注册/注销nodes、services、checks&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
/v1/catalog/register : Registers a &lt;span&gt;new&lt;/span&gt;&lt;span&gt; node, service, or check
&lt;/span&gt;/v1/catalog/&lt;span&gt;deregister : Deregisters a node, service, or check
&lt;/span&gt;/v1/catalog/&lt;span&gt;datacenters : Lists known datacenters
&lt;/span&gt;/v1/catalog/nodes : Lists nodes &lt;span&gt;in&lt;/span&gt;&lt;span&gt; a given DC
&lt;/span&gt;/v1/catalog/services : Lists services &lt;span&gt;in&lt;/span&gt;&lt;span&gt; a given DC
&lt;/span&gt;/v1/catalog/service/&amp;lt;service&amp;gt; : Lists the nodes &lt;span&gt;in&lt;/span&gt;&lt;span&gt; a given service
&lt;/span&gt;/v1/catalog/node/&amp;lt;node&amp;gt; : Lists the services provided by a node
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.5&quot;&gt;&lt;strong&gt;health endpoints&lt;/strong&gt;：health endpoints用来查询健康状况相关信息，该功能从catalog中单独分离出来&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
/v1/healt/node/&amp;lt;node&amp;gt;: 返回node所定义的检查，可用参数?dc=
/v1/health/checks/&amp;lt;service&amp;gt;: 返回和服务相关联的检查，可用参数?dc=
/v1/health/service/&amp;lt;service&amp;gt;&lt;span&gt;: 返回给定datacenter中给定node中service
&lt;/span&gt;/v1/health/state/&amp;lt;state&amp;gt;: 返回给定datacenter中指定状态的服务，state可以是&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;any&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;unknown&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;passing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;warning&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, or &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;critical&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;，可用参数?dc=
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;&lt;strong&gt;session endpoints&lt;/strong&gt;：session endpoints用来create、update、destory、query sessions&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
/v1/session/create: Creates a &lt;span&gt;new&lt;/span&gt;&lt;span&gt; session
&lt;/span&gt;/v1/session/destroy/&amp;lt;session&amp;gt;&lt;span&gt;: Destroys a given session
&lt;/span&gt;/v1/session/info/&amp;lt;session&amp;gt;&lt;span&gt;: Queries a given session
&lt;/span&gt;/v1/session/node/&amp;lt;node&amp;gt;&lt;span&gt;: Lists sessions belonging to a node
&lt;/span&gt;/v1/session/list: Lists all the active sessions
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.5&quot;&gt;&lt;strong&gt;acl endpoints&lt;/strong&gt;：acl endpoints用来create、update、destory、query acl&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
/v1/acl/create: Creates a &lt;span&gt;new&lt;/span&gt;&lt;span&gt; token with policy
&lt;/span&gt;/v1/acl/&lt;span&gt;update: Update the policy of a token
&lt;/span&gt;/v1/acl/destroy/&amp;lt;id&amp;gt;&lt;span&gt;: Destroys a given token
&lt;/span&gt;/v1/acl/info/&amp;lt;id&amp;gt;&lt;span&gt;: Queries the policy of a given token
&lt;/span&gt;/v1/acl/clone/&amp;lt;id&amp;gt;: Creates a &lt;span&gt;new&lt;/span&gt;&lt;span&gt; token by cloning an existing token
&lt;/span&gt;/v1/acl/list: Lists all the active tokens
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1.5&quot;&gt;&lt;strong&gt;event endpoints&lt;/strong&gt;：event endpoints用来fire新的events、查询已有的events&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
/v1/&lt;span&gt;event&lt;/span&gt;/fire/&amp;lt;name&amp;gt;&lt;span&gt;: 触发一个新的event，用户event需要name和其他可选的参数，使用PUT方法
&lt;/span&gt;/v1/&lt;span&gt;event&lt;/span&gt;/list: 返回agent知道的events
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-2&quot;&gt;&lt;strong&gt;status endpoints&lt;/strong&gt;：status endpoints用来或者consul 集群的信息&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
/v1/status/&lt;span&gt;leader : 返回当前集群的Raft leader
&lt;/span&gt;/v1/status/peers : 返回当前集群中同事
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2.6、使用consul&lt;/h3&gt;
&lt;ul&gt;&lt;li readability=&quot;2&quot;&gt;启动&lt;br/&gt;语法：&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
consul agent -server -datacenter=数据中心名称 -bootstrap -data-dir 数据存放路径 -config-file 配置文件路径 -ui-dir UI存放路径 -node=n1 -bind 本机IP
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注册成Windows服务&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
sc.exe create &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Consul&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; binPath= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;E:\Consul\consule.exe&lt;/strong&gt; agent -server -datacenter=数据中心名称 -bootstrap -data-dir 数据存放路径 -config-file 配置文件路径 -ui-dir UI存放路径 -node=n1 -bind 本机IP&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
consul agent -server -datacenter=dc1 -bootstrap -data-dir /tmp/consul -config-file ./conf -ui-dir ./dist -node=n1 -bind &lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;查看集群成员&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
consul members
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-2&quot;&gt;把192.168.1.126加入集群&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
consul join &lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;1.126&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-2&quot;&gt;查看节点raft信息&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
consul &lt;span&gt;operator&lt;/span&gt; raft list-peers
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2.7、项目实例&lt;/h3&gt;
&lt;ul readability=&quot;1.96699669967&quot;&gt;&lt;li&gt;项目准备&lt;br/&gt;项目地址：&lt;a href=&quot;https://github.com/786744873/HisMicroserviceSample&quot; target=&quot;_blank&quot;&gt;https://github.com/786744873/HisMicroserviceSample&lt;/a&gt;&lt;br/&gt;项目部署说明：分别部署 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.203&lt;/span&gt;&lt;/span&gt; 、 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.207&lt;/span&gt;&lt;/span&gt; 两台服务器&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201903/991704-20190331124446523-1276330235.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li readability=&quot;22.5&quot;&gt;配置consul配置文件&lt;br/&gt;文件结构：&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;│  consul.exe
│  
├─conf
│      service.json
│      watchs.json
│      xacl.json
│      
├─data
├─dist&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;span&gt;service.json（服务发现配置）：&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;encrypt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;7TnJPB4lKtjEcCWWjN6jSA==&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;加密秘钥&lt;/span&gt;
    &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;services&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [{
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BasicsService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务id&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BasicsService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务名称&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tags&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BasicsService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;],    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务标签&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;address&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;192.168.103.203&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务地址&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;port&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;6801&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;端口&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checks&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [{
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BasicsServiceCheck&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查id&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BasicsServiceCheck&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查名称&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://192.168.103.203:6801/health&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检车接口地址&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;10s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查周期&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tls_skip_verify&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;跳过验证&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;method&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查请求方法&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;timeout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求超时时间&lt;/span&gt;
&lt;span&gt;            }]
        },
        {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InvoicingService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务id&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InvoicingService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务名称&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tags&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InvoicingService&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;],    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务标签&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;address&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;192.168.103.203&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务地址&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;port&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;6802&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;端口&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checks&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [{
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InvoicingServiceCheck&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查id&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InvoicingServiceCheck&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查名称&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://&lt;strong&gt;192.168.103.203&lt;/strong&gt;:6802/health&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检车接口地址&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;10s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查周期&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tls_skip_verify&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;跳过验证&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;method&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查请求方法&lt;/span&gt;
                &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;timeout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求超时时间&lt;/span&gt;
&lt;span&gt;            }]
        }
    ]
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;span&gt;watchs.json（服务监控配置）：&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;watches&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [{
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checks&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;监控触发类型&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handler_type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;异常通知类型&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;state&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;critical&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;监控触发状态&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http_handler_config&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;path&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://localhost:6801/notice&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;通知地址&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;method&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;通知请求方式&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;timeout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;10s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;通知超时时间&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;header&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Authorization&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiZ3N3IiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiYWRtaW4iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2V4cGlyYXRpb24iOiIyMDIyLzEyLzMxIDEyOjM2OjEyIiwibmJmIjoxNTE0Njk0OTcyLCJleHAiOjE1MTQ3MzA5NzIsImlzcyI6ImdzdyIsImF1ZCI6ImdzdyJ9.jPu1yZ8jORN5QgCuPV50sYOKvX88GLSDiRX_0fpEzU4&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]
            }    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求头&lt;/span&gt;
&lt;span&gt;        }
    }]
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;分别启动 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.203&lt;/span&gt;&lt;/span&gt; 、 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.207&lt;/span&gt;&lt;/span&gt; 上的应用基础和进销存服务，然后再启动Consul，我们让 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.203&lt;/span&gt;&lt;/span&gt; 作为主Consul&lt;br/&gt;第一台service（192.168.103.203）：&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
consul agent -server -datacenter=dc1 &lt;strong&gt;-bootstrap&lt;/strong&gt; -data-dir ./data -config-file ./conf -ui-dir ./dist -node=n1 -bind &lt;strong&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.203&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二台service（192.168.103.207）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
consul agent -server -datacenter=dc1 -data-dir ./data -config-file ./conf -ui-dir ./dist -node=n2 -bind &lt;strong&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;103.207&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后可以通过访问192.168.103.203:8500进入UI页面查看信息&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;client&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
consul agent -datacenter=dc1 -data-dir /tmp/consul -node cn1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mac OX系统，进入consul所在目录执行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Sudo scp consul /usr/local/bin/
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2.8、Consul DNS&lt;/h3&gt;
&lt;p&gt;DnsAgent.exe作为DNS工具&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[
  {
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Pattern&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;^.*\\.consul$&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NameServer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;127.0.0.1:8600&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QueryTimeout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;1000&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;CompressionMutation&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
  }
]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;访问地址：http://服务名称.service.consul&lt;/p&gt;
&lt;h2&gt;3、Ocelot&lt;/h2&gt;
&lt;p&gt;github地址：&lt;a href=&quot;https://github.com/TomPallister/Ocelot&quot; target=&quot;_blank&quot;&gt;https://github.com/TomPallister/Ocelot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ocelot的目标是使用.NET运行微服务/面向服务架构，我们需要一个统一的入口进入我们的服务，提供监控、鉴权、负载均衡等机制，也可以通过编写中间件的形式，来扩展Ocelot的功能。  Ocelot是一堆特定顺序的中间件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201903/991704-20190331134909278-11044504.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3.1、Ocelot使用&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;安装Ocelot&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
Install-Package Ocelot
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.5&quot;&gt;引入在Program.cs中加载配置文件&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; IWebHost BuildWebHost(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
{

    IWebHostBuilder builder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WebHostBuilder();
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注入WebHostBuilder&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; builder.ConfigureServices(service =&amp;gt;&lt;span&gt;
    {
        service.AddSingleton(builder);
    })
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;加载configuration配置文人年&lt;/span&gt;
        .ConfigureAppConfiguration(conbuilder =&amp;gt;&lt;span&gt;
        {
            conbuilder.AddJsonFile(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;appsettings.json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;strong&gt;conbuilder.AddJsonFile(&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;configuration.json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;);&lt;/strong&gt;
        })
        .UseContentRoot(Directory.GetCurrentDirectory())
        .UseKestrel()
        .UseUrls(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://*:6800&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        .UseStartup&lt;/span&gt;&amp;lt;Startup&amp;gt;&lt;span&gt;()
        .Build();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.5&quot;&gt;修改Startup.cs&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
{       
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注入配置文件&lt;/span&gt;
&lt;span&gt;    services.AddOcelot(Configuration);
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;  &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Configure(IApplicationBuilder app, IHostingEnvironment env)
{
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加中间件&lt;/span&gt;
&lt;span&gt;    app.UseOcelot().Wait();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;42.5&quot;&gt;创建配置文件（configuration.json）&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;121&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ReRoutes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;路由配置&lt;/span&gt;
&lt;span&gt;    {
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamPathTemplate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{url}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;下游请求路由&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamScheme&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;下游请求方式，有http或https&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamHostAndPorts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;下游请求的host和端口，为了配合负载均衡，可以配置多项&lt;/span&gt;
&lt;span&gt;        {
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Port&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;6801&lt;/span&gt;&lt;span&gt;
        }
      ],
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UpstreamPathTemplate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/basics/{url}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;上游请求路由&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UpstreamHttpMethod&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Get&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Delete&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Put&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ],    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;上游请求谓词
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;ServiceName&quot;: &quot;BasicsService&quot;,    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Consul中注册服务的名称
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;LoadBalancer&quot;: &quot;RoundRobin&quot;,    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;负载均衡（可选）LeastConnection –请求空闲的Url  RoundRobin – 轮询请求  NoLoadBalance – 无负载均衡
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;UseServiceDiscovery&quot;: true,    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;是否启用负载均衡&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ReRouteIsCaseSensitive&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,    &lt;span&gt;//
&lt;/span&gt;      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QoSOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;熔断设置（可选）&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ExceptionsAllowedBeforeBreaking&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;3&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;允许异常请求数&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DurationOfBreak&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;熔断时间，以秒为单位&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;TimeoutValue&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;5000&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求超时数，以毫秒为单位&lt;/span&gt;
&lt;span&gt;      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;HttpHandlerOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {    &lt;span&gt;//
&lt;/span&gt;        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowAutoRedirect&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,    &lt;span&gt;//
&lt;/span&gt;        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UseCookieContainer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,    &lt;span&gt;//
&lt;/span&gt;        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UseTracing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;    &lt;span&gt;//
&lt;/span&gt;&lt;span&gt;      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AuthenticationOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {    &lt;span&gt;//
&lt;/span&gt;        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AuthenticationProviderKey&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&quot;&lt;/span&gt;,    &lt;span&gt;//
&lt;/span&gt;        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowedScopes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: []    &lt;span&gt;//
&lt;/span&gt;&lt;span&gt;      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RateLimitOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;限流设置（可选）&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClientWhitelist&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ],    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;白名单，不受限流控制的&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EnableRateLimiting&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;是否启用限流&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Period&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;统计时间段：1s, 2m, 3h, 4d&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PeriodTimespan&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;15&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;间隔多少秒后可以重试&lt;/span&gt;
        &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Limit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;100&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设定时间段内允许的最大请求数&lt;/span&gt;
&lt;span&gt;      }
    },
    {
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamPathTemplate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{url}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamScheme&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamHostAndPorts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
        {
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Port&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;6802&lt;/span&gt;&lt;span&gt;
        }
      ],
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UpstreamPathTemplate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/invoicing/{url}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UpstreamHttpMethod&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Get&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Delete&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Put&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ],
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;ServiceName&quot;: &quot;InvoicingService&quot;,
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;LoadBalancer&quot;: &quot;RoundRobin&quot;,
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;UseServiceDiscovery&quot;: true,&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ReRouteIsCaseSensitive&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QoSOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ExceptionsAllowedBeforeBreaking&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;3&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DurationOfBreak&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;TimeoutValue&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;5000&lt;/span&gt;&lt;span&gt;
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;HttpHandlerOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowAutoRedirect&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UseCookieContainer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UseTracing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AuthenticationOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AuthenticationProviderKey&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowedScopes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: []
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RateLimitOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClientWhitelist&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EnableRateLimiting&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Period&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PeriodTimespan&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;15&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Limit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;100&lt;/span&gt;&lt;span&gt;
      }
    },
    {
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamPathTemplate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{url}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamScheme&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DownstreamHostAndPorts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
        {
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Port&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;6806&lt;/span&gt;&lt;span&gt;
        }
      ],
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UpstreamPathTemplate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/authentication/{url}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UpstreamHttpMethod&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Get&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Delete&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Put&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ],
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;ServiceName&quot;: &quot;AuthenticationService&quot;,
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;LoadBalancer&quot;: &quot;RoundRobin&quot;,
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;UseServiceDiscovery&quot;: true,&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ReRouteIsCaseSensitive&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QoSOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ExceptionsAllowedBeforeBreaking&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;3&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DurationOfBreak&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;TimeoutValue&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;5000&lt;/span&gt;&lt;span&gt;
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;HttpHandlerOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowAutoRedirect&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UseCookieContainer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UseTracing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AuthenticationOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AuthenticationProviderKey&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowedScopes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: []
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RateLimitOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClientWhitelist&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EnableRateLimiting&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Period&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PeriodTimespan&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;15&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Limit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;100&lt;/span&gt;&lt;span&gt;
      }
    }

  ],
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GlobalConfiguration&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;全局设置&lt;/span&gt;
    &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ServiceDiscoveryProvider&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {&lt;span&gt;//Consul服务地址，用于上方的服务发现&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Port&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;8500&lt;/span&gt;&lt;span&gt;
    },
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RateLimitOptions&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: {    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;全局限流设置（可选）&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClientIdHeader&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;clientid&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;识别请求头，默认是 ClientId&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QuotaExceededMessage&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;access is denied&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;被限流后，当请求过载时返回的提示消息&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;HttpStatusCode&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;600,当请求过载时返回的http状态码&lt;/span&gt;
      &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DisableRateLimitHeaders&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;此值指定是否禁用X-Rate-Limit和Rety-After标头&lt;/span&gt;
&lt;span&gt;    }
  }
}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;4、Docker&lt;/h2&gt;
&lt;p&gt;容器是一个打包了应用服务的环境。它是一个轻量级的虚拟机，每一个容器由一组特定的应用和必要的依赖库组成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407123203718-156144231.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;4.1、Docker-镜像常用命令 &lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
docker images:查看本地镜像，docker images ubu*&lt;span&gt;，通配符查看
docker inspect ubuntu:查看镜像详细信息
docker search aspnetcore:搜索docker hub上符合要求的镜像
docker pull microsoft&lt;/span&gt;/&lt;span&gt;aspnetcore:拉取镜像，在run时不用从docker hub拉取
docker rmi 镜像ID1 镜像ID2：删除镜像ID1和ID2，如果强制删除加&lt;/span&gt;-f
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4.2、Docker-容器常用命令&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
docker create ubuntu:&lt;span&gt;14.04&lt;/span&gt;&lt;span&gt;：创建容器，处于停止状态
docker ps：查看运行的容器，加&lt;/span&gt;-a查看所有容器。加-l查询出最后创建的容器，加-n=&lt;span&gt;3查看最后创建的3个容器
docker start 容器名：运行已存在的容器
docker stop 容器名：停止容器
docker rm 容器名：删除容器，docker rm $(docker ps &lt;/span&gt;-a -&lt;span&gt;q)删除所有容器
docker run &lt;/span&gt;-i -t --name ubuntu14 ubuntu:&lt;span&gt;14.04&lt;/span&gt; /bin/bash：运行一个ubuntu14.04的，带终端的容器，名字叫ubuntu14 ，-i用于打开容器的标准输入，-&lt;span&gt;t让容器建立一个命令行终端
docker run &lt;/span&gt;--name back_ubuntu14 -d ubuntu:&lt;span&gt;14.04&lt;/span&gt; /bin/sh -c &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;while true;do echo hello world;sleep 1;done&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;：-&lt;span&gt;d是后台开容器
docker attach 容器名：依附容器
docker logs &lt;/span&gt;-f --tail=&lt;span&gt;5&lt;/span&gt;&lt;span&gt;  back_ubuntu14：查看最近的5条日志
docker top 容器名：查看容器进程 
docker inspect 容器名：查看容器信息，查看具体子项docker inspect &lt;/span&gt;--format=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;{{.NetworkSettings.IPAddress}}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;  back_ubuntu14
docker export 容器名 &lt;/span&gt;&amp;gt;&lt;span&gt;容器存储名称.tar：导出容器
win powershell下  docker export 容器ID &lt;/span&gt;-&lt;span&gt;o 名字.tar
docker import 容器存储名称.tar：导入镜像
docker commit &lt;/span&gt;-m=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;abc&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; --author=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gsw&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; 容器ID  镜像名称：提交容器到本地镜像
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4.4、Docker-Dockerfile&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;FROM：指定待扩展的父级镜像。除了注释外，在文件开头必须是一个FROM指令，接下来的指令便在这个父级镜像的环境中运行，直到遇到下一个FROM指令。通过添加多个FROM指令，可以在同一个Dockerfile文件中创建多个镜像。
MAINTAINER：用来声明创建的镜像的作都信息。非必需
RUN：用来修改镜像命令，常用来安装库、程序 以及配置程序。一条RUN指令执行完毕后，会在当前镜像上创建一个新的镜像层，接下来的指令会在新的镜像上继续执行。
EXPOSE：用来指明容器内进程对外开放的端口，多个端口之间使用空格隔开。运行容器时，通过参数&lt;/span&gt;-P(大写)即可将EXPOSE里所指定的端口映射到主机上国外的坠机端口，其队容器或主机就可以通过映射后的端口与此容器通信。同时，我们也可以通过-&lt;span&gt;p(小写)参数将Dockerfile中EXPOSE中没有的端口设置成公开的。
ADD：向新镜像中添加文件，这个文件可以是一个主机文件，也可以是一个网络文件，也可以是一个文件夹。
VOLUME：在镜像里创建一个指定路径的挂载点，这个路径可以来自主机或都其他容器。多个容器可以通过同一个挂载点共享数据，即便其中一个容器已经停止，挂载点也仍然可以访问，只有当挂载点的容器引用全部消失时，挂载点才会自动删除。
WORKDIR：为接下来执行的指令指定一个新的工作目录，这个目录可以是绝对目录，也可以是相对目录。
ENV：设置容器运行的环境变量。在运行容器的时候，通过&lt;/span&gt;-&lt;span&gt;e参数可以修改这个环境变量值 ，也可以添加新的环境变量
CMD：用来设置启动容器时默认运行的命令。
ENTRYPOINT：与CMD类似，它也是用来指定容器启动时默认运行的命令。
USER：为容器的运行及接下来RUN、CMD、ENTRYPOINT等指令的运行指定用户或UID
ONBUILD：触发指令。构建镜像的时候，Docker的镜像构建器会将所有的ONBUILD指令指定的命令保存到镜像的元数据中，这些命令在当前镜像的构建的构建过程中并不会执行。只有新的镜像用用FRMO指令指定父镜像为这个镜像时，便会触发。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4.5、Docker生成asp.net core镜像和运行&lt;/h3&gt;
&lt;p&gt;发布asp.net core项目，并在发布文件夹下创建Dockerfile文件，复制下面内容&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#父镜像
FROM microsoft&lt;/span&gt;/&lt;span&gt;aspnetcore

#设置工作目录
WORKDIR &lt;/span&gt;/&lt;span&gt;app

#复制发布文件到&lt;/span&gt;/&lt;span&gt;app下
COPY . &lt;/span&gt;/&lt;span&gt;app

#设置端口
EXPOSE &lt;/span&gt;&lt;span&gt;80&lt;/span&gt;&lt;span&gt;

#使用dotnet XXXXXXXXX.dll来运行asp.net core项目，注意大小写
ENTRYPOINT [&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dotnet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, “XXXXXXXXX.dll&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;4.6、Docker生成asp.net core镜像和运行&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
docker build -&lt;span&gt;t xxxxxxxxxxx:latest .
docker run &lt;/span&gt;-it -p &lt;span&gt;6801&lt;/span&gt;:&lt;span&gt;6801&lt;/span&gt;  xxxxxxxxxxx:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;docker内部web的端口， 上述命令中，第二个端口为docker内web的端口。&lt;/p&gt;
&lt;h2&gt;5、App.Metrics+InfluxDB+Grafana&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;建议：建议在网关上进行监控，因为网关上监控可以监控所有&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;App.Metrics：&lt;a href=&quot;https://www.app-metrics.io&quot; target=&quot;_blank&quot;&gt;https://www.app-metrics.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;InfluxDB1.5.1-1：&lt;a href=&quot;https://portal.influxdata.com&quot; target=&quot;_blank&quot;&gt;https://portal.influxdata.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grafana-5.0.4：&lt;a href=&quot;https://grafana.com/get&quot; target=&quot;_blank&quot;&gt;https://grafana.com/get&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;5.1、安装使用&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;下载 influxdb&lt;br/&gt;&lt;a href=&quot;https://portal.influxdata.com&quot; target=&quot;_blank&quot;&gt;https://portal.influxdata.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载  Grafana&lt;br/&gt;&lt;a href=&quot;https://grafana.com/get&quot; target=&quot;_blank&quot;&gt;https://grafana.com/get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;运行influxdb-版本号下的influxd.exe&lt;/li&gt;
&lt;li&gt;运行grafana-版本号下，bin目录下grafana-server.exe&lt;/li&gt;
&lt;li&gt;运行influxdb-版本号下的influx.exe，输入 &lt;span class=&quot;cnblogs_code&quot;&gt;create database influxdbtest&lt;/span&gt; 创建数据库，同时 &lt;span class=&quot;cnblogs_code&quot;&gt;create user &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; with password &lt;span&gt;'&lt;/span&gt;&lt;span&gt;123456&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;/span&gt;  创建用户&lt;/li&gt;
&lt;li&gt;配置Grafana，然后启动网关程序，登录localhost:3000查看监控信息，用户名密码是：admin&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;5.2、配置Grafana&lt;/h3&gt;
&lt;h4&gt;5.2.1、配置数据源&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407153452671-33241260.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;5.2.2、配置Dashboard&lt;/h4&gt;
&lt;p&gt;我们采用模板导入模式，将项目引用 &lt;span class=&quot;cnblogs_code&quot;&gt;App.Metrics&lt;/span&gt; 并访问 &lt;span class=&quot;cnblogs_code&quot;&gt;App.Metrics&lt;/span&gt; 源地址：&lt;a href=&quot;https://www.app-metrics.io/&quot; target=&quot;_blank&quot;&gt;https://www.app-metrics.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407154203826-1001444478.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;获取到InfluxDB对应的仪表盘编号2125，然后输入使用该模板&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407154329933-1762067431.png&quot; alt=&quot;&quot; width=&quot;771&quot; height=&quot;429&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407154429651-705168606.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;导入成功后&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407154621267-575876501.png&quot; alt=&quot;&quot; width=&quot;787&quot; height=&quot;383&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;5.3、App.Metrics监控数据采集&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407162117108-599766977.png&quot; alt=&quot;&quot; width=&quot;1369&quot; height=&quot;673&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;5.4、APM-Grafana告警&lt;/h3&gt;
&lt;h2&gt;6、Exceptionless&lt;/h2&gt;
&lt;ul readability=&quot;2.7436708860759&quot;&gt;&lt;li&gt;在线方式&lt;br/&gt;&lt;a href=&quot;https://exceptionless.com/&quot; target=&quot;_blank&quot;&gt;https://exceptionless.com/&lt;/a&gt;注册用户，新建Organizations和Project，并选项目类型。&lt;/li&gt;
&lt;li readability=&quot;8.4114149821641&quot;&gt;离线方式&lt;p&gt;下载地址：&lt;a href=&quot;https://github.com/exceptionless/Exceptionless/releases&quot; target=&quot;_blank&quot;&gt;https://github.com/exceptionless/Exceptionless/releases&lt;/a&gt;&lt;br/&gt;解压压缩包，运行Start.bat&lt;br/&gt;系统会自动下载elasticsearch和kibana&lt;/p&gt;
&lt;p&gt;ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&lt;/p&gt;
&lt;p&gt;Kibana是一个开源的分析与可视化平台，设计出来用于和Elasticsearch一起使用的。你可以用kibana搜索、查看、交互存放在Elasticsearch索引里的数据，使用各种不同的图表、表格、地图等kibana能够很轻易地展示高级数据分析与可视化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;6.1、创建组织&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407220454363-1596043274.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;6.2、创建项目&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190407220533665-1150476865.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;6.3、集成Exceptionless 客户端&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Install-Package Exceptionless.AspNetCore
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过 API 密钥执行  &lt;span class=&quot;cnblogs_code&quot;&gt;app.UseExceptionless(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Qa3OzvEJC9FXo9SdwwFBv6bAkVbjWQKbV6hhtYEM&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;  方法&lt;/p&gt;
&lt;h3&gt;6.4、示例代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#region&lt;/span&gt; Exceptionless测试
&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
{
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;调试Exceptionless.Logging.LogLevel.Debu&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Debug);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;错误Exceptionless.Logging.LogLevel.Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Error);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;大错Exceptionless.Logging.LogLevel.fatal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Fatal);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Exceptionless.Logging.LogLevel.Info&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Info);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Exceptionless.Logging.LogLevel.Off&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Off);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Exceptionless.Logging.LogLevel.Other&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Other);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Exceptionless.Logging.LogLevel.Trace&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Trace);
    ExceptionlessClient.Default.SubmitLog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Exceptionless.Logging.LogLevel.Warn&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, Exceptionless.Logging.LogLevel.Warn);


    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; data = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Exceptionless.Models.DataDictionary();
    data.Add(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;data1key&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;data1value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    ExceptionlessClient.Default.SubmitEvent(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Exceptionless.Models.Event {
        Count &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
        Date &lt;/span&gt;=&lt;span&gt; DateTime.Now,
        Data &lt;/span&gt;= data, Geo = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;geo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        Message &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        ReferenceId &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;referencelId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        Source &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        Tags &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Exceptionless.Models.TagSet() { &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tags&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; },
        Type &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        Value &lt;/span&gt;= &lt;span&gt;1.2m&lt;/span&gt;&lt;span&gt; });
    ExceptionlessClient.Default.SubmitFeatureUsage(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;feature&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    ExceptionlessClient.Default.SubmitNotFound(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;404 not found&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    ExceptionlessClient.Default.SubmitException(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Exception(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;自定义异常&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));

    &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; DivideByZeroException(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;throw DivideByZeroException的异常：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; DateTime.Now);
}
&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception exc)
{
    exc.ToExceptionless().Submit();
}
&lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;6.5、本地部署&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/exceptionless/Exceptionless/wiki/Self-Hosting&quot; target=&quot;_blank&quot;&gt;本地部署官方wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载&lt;a href=&quot;https://github.com/exceptionless/Exceptionless/releases/download/v4.1.0/Exceptionless.4.1.2861.zip&quot; target=&quot;_blank&quot;&gt;Windows版本安装包&lt;/a&gt;，并进行解压，然后双击运行Start.bat即可&lt;/p&gt;
&lt;p&gt;需要环境：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;.NET 4.6&lt;/li&gt;
&lt;li&gt;Java 1.8+ (The JAVA_HOME environment variable must also be configured when using Windows.)&lt;/li&gt;
&lt;li&gt;IIS Express 8+&lt;/li&gt;
&lt;li&gt;PowerShell 3+&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408005959475-301678242.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;6.6、项目集成&lt;/h3&gt;
&lt;p&gt;注意：本地化不能再使用 &lt;span class=&quot;cnblogs_code&quot;&gt;app.UseExceptionless(apiKey: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tJxBWkCbgDLCMoKKqWII3Eyw4aJOsyOCgX26Yurm&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;/span&gt; 形式来上传日志数据，应采用另外的方式：配置文件方式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Exceptionless&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ApiKey&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tJxBWkCbgDLCMoKKqWII3Eyw4aJOsyOCgX26Yurm&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ServerUrl&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://localhost:50000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DefaultData&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
  },
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DefaultTags&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;xplat&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ],
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Settings&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;FeatureXYZEnabled&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后修改 &lt;span class=&quot;cnblogs_code&quot;&gt;Startup.cs&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Configure(IApplicationBuilder app, IHostingEnvironment env)
{
    ...
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;app.UseExceptionless(apiKey: &quot;tJxBWkCbgDLCMoKKqWII3Eyw4aJOsyOCgX26Yurm&quot;);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;上方的方法本地化不适用&lt;/span&gt;
&lt;span&gt;    app.UseExceptionless(Configuration);
    ...
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;搞定&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408011048372-1289756004.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;6.7、查询语法&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408011210325-1643925285.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408011304850-2139966505.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;6.8、常见问题&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408004614966-1563274955.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Invoke-WebRequest : 请求被中止: 未能创建 SSL/TLS 安全通道。&lt;/p&gt;
&lt;p&gt;elasticsearch-XXX”，因为该路径不存在。&lt;/p&gt;
&lt;p&gt;解决方案：编辑Start-ElasticSearch.ps1，将所需的文件全部下载下来，然后解压进行拷贝，如下图，然后在双击运行Start.bat即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408004748705-118175774.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;帮助类：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('1e657255-c762-4929-89f1-731f5be44d66')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_1e657255-c762-4929-89f1-731f5be44d66&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1e657255-c762-4929-89f1-731f5be44d66&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('1e657255-c762-4929-89f1-731f5be44d66',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1e657255-c762-4929-89f1-731f5be44d66&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;///&lt;/span&gt; 
&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ExceptionLessLog
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; IsInit = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt; ExceptionLessLog()
    {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;IsInit)
        {
            &lt;/span&gt;&lt;span&gt;#region&lt;/span&gt; Exceptionless配置&lt;span&gt;
            ExceptionlessClient.Default.Configuration.ApiKey &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;KwqNUJ5njrnOehQTSYY6yXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            ExceptionlessClient.Default.Configuration.ServerUrl &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://XXX.XXX.XXX.XXX:50000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            ExceptionlessClient.Default.Startup();
            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;&lt;span&gt;
        }
    }

    &lt;/span&gt;&lt;span&gt;#region&lt;/span&gt; 日志功能
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 跟踪
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Trace(&lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] tags)
    {
        ExceptionlessClient.Default.CreateLog(message, LogLevel.Trace).AddTags(tags).Submit();
    }

    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] tags)
    {
        ExceptionlessClient.Default.CreateLog(message, LogLevel.Debug).AddTags(tags).Submit();
    }

    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 信息
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Info(&lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] tags)
    {
        ExceptionlessClient.Default.CreateLog(message, LogLevel.Info).AddTags(tags).Submit();
    }

    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Warn(&lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] tags)
    {
        ExceptionlessClient.Default.CreateLog(message, LogLevel.Warn).AddTags(tags).Submit();
    }

    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Error(&lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] tags)
    {
        ExceptionlessClient.Default.CreateLog(message, LogLevel.Error).AddTags(tags).Submit();
    }
    &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;

    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 异常捕获提交
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;pluginContextData&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;client&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Submit(&lt;span&gt;this&lt;/span&gt; Exception exception, ContextData pluginContextData = &lt;span&gt;null&lt;/span&gt;, ExceptionlessClient client = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
    {
        exception.ToExceptionless().Submit();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h2&gt;7、数据一致性&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408011528008-666282001.png&quot; alt=&quot;&quot; width=&quot;213&quot; height=&quot;204&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ｃ：数据一致性(consistency)：如果系统对一个写操作返回成功，那么之后的读请求都必须读到这个新数据；如果返回失败，那么所有读操作都不能读到这个数据，对调用者而言数据具有强一致性(strong consistency) (又叫原子性 atomic、线性一致性 linearizable consistency)&lt;/li&gt;
&lt;li&gt;A：服务可用性(availability)：所有读写请求在一定时间内得到响应，可终止、不会一直等待&lt;/li&gt;
&lt;li&gt;P：分区容错性(partition-tolerance)：在网络分区的情况下，被分隔的节点仍能正常对外服务&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;7.1、最终一致性&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;可用性，可靠性，&lt;/li&gt;
&lt;li&gt;最终一致性：在微服务之间使用事件驱动通信和发布订阅系统实现最终一致性&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408012540894-5823289.png&quot; alt=&quot;&quot; width=&quot;694&quot; height=&quot;243&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;强一致性&lt;/strong&gt;：当更新操作完成之后，任何多个后续进程或者线程的访问都会返回最新的更新过的值。这种是对用户最友好的，就是用户上一次写什么，下一次就保证能读到什么。根据 CAP 理论，这种实现需要牺牲可用性。=&amp;gt; 在传统单体式应用中，大部分都是强一致性的应用，想想我们写过多少工作单元模式的Code？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;弱一致性&lt;/strong&gt;：系统并不保证续进程或者线程的访问都会返回最新的更新过的值。系统在数据写入成功之后，不承诺立即可以读到最新写入的值，也不会具体的承诺多久之后可以读到。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最终一致性&lt;/strong&gt;：弱一致性的特定形式。系统保证在没有后续更新的前提下，系统&lt;strong&gt;最终&lt;/strong&gt;返回上一次更新操作的值。在没有故障发生的前提下，不一致窗口的时间主要受通信延迟，系统负载和复制副本的个数影响。&lt;/li&gt;
&lt;li&gt;为保证可用性，互联网分布式架构中经常将&lt;strong&gt;强一致性需求&lt;/strong&gt;转换成&lt;strong&gt;最终一致性&lt;/strong&gt;的需求，并通过系统执行&lt;strong&gt;幂等性&lt;/strong&gt;的保证，保证数据的&lt;strong&gt;最终一致性&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　在微服务架构中，各个微服务之间通常会使用事件驱动通信和发布订阅系统实现最终一致性。&lt;/p&gt;
&lt;h3&gt;7.2、最终一致性-补偿机制&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Polly：实现重试，熔断机制&lt;/li&gt;
&lt;li&gt;或提供后台任务调度实现补偿&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190408012651593-790150137.png&quot; alt=&quot;&quot; width=&quot;728&quot; height=&quot;216&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;7.3、幂等和防重&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;其任意多次执行对资源本身所产生的影响均与一次执行的影响相同。&lt;/li&gt;
&lt;li&gt;对重复删除或返回成功结果；防重可以在数据库级别处理也以以在MQ级别&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;7.4、MassTransit&lt;/h3&gt;
&lt;p&gt;MassTransit 是一个自由、开源、轻量级的消息总线, 用于使用. NET 框架创建分布式应用程序。MassTransit 在现有消息传输上提供了一组广泛的功能, 从而使开发人员能够友好地使用基于消息的会话模式异步连接服务。基于消息的通信是实现面向服务的体系结构的可靠和可扩展的方式。&lt;/p&gt;
&lt;p&gt;　　官网地址：&lt;a title=&quot;http://masstransit-project.com/&quot; href=&quot;http://masstransit-project.com/&quot; target=&quot;_blank&quot;&gt;http://masstransit-project.com/&lt;/a&gt;，GitHub地址：&lt;a href=&quot;https://github.com/MassTransit/MassTransit&quot; target=&quot;_blank&quot;&gt;https://github.com/MassTransit/MassTransit&lt;/a&gt; （目前：1590Star，719Fork）&lt;/p&gt;
&lt;p&gt;　　类似的国外开源组件还有&lt;a href=&quot;http://particular.net/&quot; target=&quot;_blank&quot;&gt;NServiceBus&lt;/a&gt;，没有用过，据说MassTransit比NServiceBus更加轻量级，并且在开发之初就选用了RabbitMQ作为消息传输组件，当然MassTransit还支持Azure Service Bus。类似的国内开源组件则有园友savorboard（杨晓东）的&lt;a href=&quot;https://www.cnblogs.com/savorboard/p/cap.html&quot; target=&quot;_blank&quot;&gt;CAP&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;7.5、最简单的发送/接收实例&lt;/h3&gt;
&lt;p&gt;这里以MassTransit + RabbitMQ为例子，首先请确保安装了RabbitMQ，如果没有安装，可以阅读我的&lt;a id=&quot;cb_post_title_url&quot; href=&quot;https://www.cnblogs.com/wyt007/p/9054608.html&quot;&gt;RabbitMQ在Windows环境下的安装与使用&lt;/a&gt;去把RabbitMQ先安装到你的电脑上。另外，RabbitMQ的背景知识也有一堆，有机会也还是要了解下Exchange，Channel、Queue等内容。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190409000439976-316452160.png&quot; alt=&quot;&quot; width=&quot;476&quot; height=&quot;264&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;7.6、一对一的发布/订阅实例（类似于RabbitMQ的工作模式）&lt;/h3&gt;
&lt;p&gt;除了简单的发送/接收模式外，我们用的更多的是发布/订阅这种模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：发布方如果发布时没有订阅方，发布的数据将会丢失&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;7.6、一对多的发布/订阅实例（队列名不同即可）&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190409013202053-1315548363.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li readability=&quot;-1&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;PSDemo_Entity&lt;/span&gt; 类库：准备需要传输的实体类信息&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; EntityA
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; DateTime Time { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; EntityB
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; DateTime Time { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Age { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;PSDemo_Publisher&lt;/span&gt; ：发布消息&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
    {
       &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus= Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
            {
                hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });               
        });
        &lt;/span&gt;&lt;span&gt;do&lt;/span&gt;&lt;span&gt;
        {
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请出请按q,否则请按其他键！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; value =&lt;span&gt; Console.ReadLine();
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value.ToLower() == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            }

            bus.Publish(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; PSDemo_Entity.&lt;strong&gt;EntityA&lt;/strong&gt;() { Name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;张三&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Time =&lt;span&gt; DateTime.Now });
            bus.Publish(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; PSDemo_Entity.&lt;strong&gt;EntityB&lt;/strong&gt;() { Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;李四&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Time = DateTime.Now,Age=&lt;span&gt;22&lt;/span&gt;&lt;span&gt; });
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);        

        bus.Stop();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;PSDemo_SubscriberA&lt;/span&gt; ：订阅EntityA和EntityB&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
    {
        Console.Title&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;订阅者A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus= Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
            {
                hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });

            cfg.ReceiveEndpoint(host, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wytPSA&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, e =&amp;gt;&lt;span&gt;
            {
                e.Consumer&lt;/span&gt;&amp;lt;&lt;span&gt;ConsumerA&lt;/span&gt;&amp;gt;&lt;span&gt;();
                e.Consumer&lt;/span&gt;&amp;lt;&lt;span&gt;ConsumerB&lt;/span&gt;&amp;gt;&lt;span&gt;();
            });
        });        

        bus.Start();        
        Console.ReadLine();
        bus.Stop();
    }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConsumerA : IConsumer&amp;lt;PSDemo_Entity.EntityA&amp;gt;&lt;span&gt;
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task Consume(ConsumeContext&amp;lt;PSDemo_Entity.EntityA&amp;gt;&lt;span&gt; context)
    {
        &lt;/span&gt;&lt;span&gt;await&lt;/span&gt; Console.Out.WriteLineAsync($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;订阅者A  ConsumerA收到信息: {context.Message.Name}  {context.Message.Time} 类型：{context.Message.GetType()}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConsumerB : IConsumer&amp;lt;PSDemo_Entity.EntityB&amp;gt;&lt;span&gt;
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task Consume(ConsumeContext&amp;lt;PSDemo_Entity.EntityB&amp;gt;&lt;span&gt; context)
    {
        &lt;/span&gt;&lt;span&gt;await&lt;/span&gt; Console.Out.WriteLineAsync($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;订阅者A  ConsumerB收到信息: {context.Message.Name}  {context.Message.Time} 类型：{context.Message.GetType()}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;PSDemo_SubscriberB&lt;/span&gt; ：订阅EntityA&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
    {
        Console.Title&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;订阅者B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus = Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
            {
                hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });

            cfg.ReceiveEndpoint(host, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wytPSB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, e =&amp;gt;&lt;span&gt;
            {
                e.Consumer&lt;/span&gt;&amp;lt;&lt;span&gt;ConsumerA&lt;/span&gt;&amp;gt;&lt;span&gt;();
            });
        });

        bus.Start();     
        Console.ReadLine();
        bus.Stop();
    }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConsumerA : IConsumer&amp;lt;PSDemo_Entity.EntityA&amp;gt;&lt;span&gt;
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task Consume(ConsumeContext&amp;lt;PSDemo_Entity.EntityA&amp;gt;&lt;span&gt; context)
    {
        &lt;/span&gt;&lt;span&gt;await&lt;/span&gt; Console.Out.WriteLineAsync($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;订阅者B  ConsumerA收到信息:  {context.Message.Name}  {context.Message.Time}  类型：{context.Message.GetType()}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;测试一下：启动PSDemo_SubscriberA和PSDemo_SubscriberB，一个PSDemo_Publisher&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201904/991704-20190409013808759-1749814257.png&quot; alt=&quot;&quot;/&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;7.7、带返回状态消息的示例&lt;/h3&gt;
&lt;p&gt;之前的例子都是发布之后，不管订阅者有没有收到以及收到后有没有处理成功（即有没有返回消息，类似于HTTP请求和响应），在MassTransit中提供了这样的一种模式，并且还可以结合GreenPipes的一些扩展方法实现重试、限流以及熔断机制。这一部分详见官方文档：&lt;a href=&quot;http://masstransit-project.com/MassTransit/usage/request-response.html&quot; target=&quot;_blank&quot;&gt;http://masstransit-project.com/MassTransit/usage/request-response.html&lt;/a&gt;&lt;/p&gt;
&lt;ol readability=&quot;-2&quot;&gt;&lt;li&gt;准备下图所示的三个项目：通过NuGet安装MassTransit以及MassTransit.RabbitMQ&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190501131654874-1966926968.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.5&quot;&gt;  &lt;span class=&quot;cnblogs_code&quot;&gt;RRDemo_Entity.Entity&lt;/span&gt; ：准备请求和响应的消息传输类型&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IRequestEntity
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; ID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RequestEntity : IRequestEntity
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; ID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IResponseEntity
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; ID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; RequestID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ResponseEntity : IResponseEntity
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; ID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; RequestID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;RRDemo_Server.Program&lt;/span&gt; 请求接收端&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
    {
        Console.Title &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;应答方&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus = Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
            {
                hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });
            cfg.ReceiveEndpoint(host, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;request_response_wyt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, e =&amp;gt;&lt;span&gt;
            {
                e.Consumer&lt;/span&gt;&amp;lt;RequestConsumer&amp;gt;&lt;span&gt;();
            });
        });
        bus.Start();     
        Console.ReadLine();
        bus.Stop();
    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; RequestConsumer : IConsumer&amp;lt;IRequestEntity&amp;gt;&lt;span&gt;
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task Consume(ConsumeContext&amp;lt;IRequestEntity&amp;gt;&lt;span&gt; context)
    {
        Console.ForegroundColor &lt;/span&gt;=&lt;span&gt; ConsoleColor.Red;
        &lt;/span&gt;&lt;span&gt;await&lt;/span&gt; Console.Out.WriteLineAsync($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;收到请求id={context.Message.ID} name={context.Message.Name}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.ResetColor();
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; response = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ResponseEntity
        {
            ID &lt;/span&gt;= &lt;span&gt;22&lt;/span&gt;&lt;span&gt;,
            Name &lt;/span&gt;= $&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;李四&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            RequestID &lt;/span&gt;=&lt;span&gt; context.Message.ID
        };
        Console.ForegroundColor &lt;/span&gt;=&lt;span&gt; ConsoleColor.Green;
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;应答ID={response.ID},Name={response.Name},RequestID={response.RequestID}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.ResetColor();
        context.Respond(response);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;4.5&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;RRDemo_Client.Program&lt;/span&gt; 请求发送端&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
{
    Console.Title &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请求方&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus = Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
    {
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
        {
            hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        });
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;重试&lt;/span&gt;
        cfg.UseRetry(ret =&amp;gt;&lt;span&gt;
        {
            ret.Interval(&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 消费失败后重试3次，每次间隔10s&lt;/span&gt;
&lt;span&gt;        });
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;限流&lt;/span&gt;
        cfg.UseRateLimit(&lt;span&gt;1000&lt;/span&gt;, TimeSpan.FromSeconds(&lt;span&gt;100&lt;/span&gt;));&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 1分钟以内最多1000次调用访问
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;熔断&lt;/span&gt;
        cfg.UseCircuitBreaker(cb =&amp;gt;&lt;span&gt;
        {
            cb.TrackingPeriod &lt;/span&gt;= TimeSpan.FromSeconds(&lt;span&gt;60&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;1分钟&lt;/span&gt;
            cb.TripThreshold = &lt;span&gt;15&lt;/span&gt;;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当失败的比例至少达到15%才会启动熔断&lt;/span&gt;
            cb.ActiveThreshold = &lt;span&gt;10&lt;/span&gt;;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当失败次数至少达到10次才会启动熔断&lt;/span&gt;
            cb.ResetInterval = TimeSpan.FromMinutes(&lt;span&gt;5&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当在1分钟内消费失败率达到15%或调用了10次还是失败时，暂停5分钟的服务访问&lt;/span&gt;
&lt;span&gt;
        });
    });
    bus.Start();

    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; serviceAddress = &lt;span&gt;new&lt;/span&gt; Uri($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/request_response_wyt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; client = bus.CreateRequestClient&amp;lt;IRequestEntity, IResponseEntity&amp;gt;(serviceAddress, TimeSpan.FromHours(&lt;span&gt;10&lt;/span&gt;&lt;span&gt;));
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建请求客户端，10H之内木有回馈则认为是超时(Timeout)&lt;/span&gt;

    &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请出请按q,否则请按其他键！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; value =&lt;span&gt; Console.ReadLine();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value.ToLower() == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        {
            &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
        }

        Task.Run(&lt;/span&gt;&lt;span&gt;async&lt;/span&gt; () =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; request = &lt;span&gt;new&lt;/span&gt; RequestEntity() { ID = &lt;span&gt;1&lt;/span&gt;, Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;张三&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; };
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; response = &lt;span&gt;await&lt;/span&gt;&lt;span&gt; client.Request(request);

            Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请求ID={request.ID},Name={request.Name}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;应签ID={response.ID},Name={response.Name},RequestID={response.RequestID}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }).Wait();
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;效果展示&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190501133231897-1780492713.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这里的请求方关闭后应答方则无法将应答再回复给请求方，会丢失&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;7.8、带Observer模式的发布/订阅示例&lt;/h3&gt;
&lt;p&gt;在某些场景中，我们需要针对一个消息进行类似于AoP（面向切面编程）或者监控的操作，比如在发送消息之前和结束后记日志等操作，我们可以借助MassTransit中的Observer模式来实现。（在MassTransit的消息接收中，可以通过两种模式来实现：一种是基于实现IConsumer接口，另一种就是基于实现IObserver接口）关于这一部分，详见官方文档：&lt;a href=&quot;http://masstransit-project.com/MassTransit/usage/observers.html&quot; target=&quot;_blank&quot;&gt;http://masstransit-project.com/MassTransit/usage/observers.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;准备以下图所示的项目：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502121321435-190168354.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;ObserverSubscriber&lt;/span&gt; &lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
    {
        Console.Title &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;订阅方&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus = Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
            {
                hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });
            cfg.ReceiveEndpoint(host, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ObserverTest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, e =&amp;gt;&lt;span&gt;
            {
                e.Consumer&lt;/span&gt;&amp;lt;EntityConsumer&amp;gt;&lt;span&gt;();
            });
        });
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; observer = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ReceiveObserver();
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; handle =&lt;span&gt; bus.ConnectReceiveObserver(observer);
        bus.Start();
        Console.ReadLine();
        bus.Stop();
    }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ReceiveObserver : IReceiveObserver
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Task PreReceive(ReceiveContext context)
    {

        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PreReceive--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(Encoding.Default.GetString(context.GetBody()));
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Task PostReceive(ReceiveContext context)
    {
    
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------PostReceive---------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(Encoding.Default.GetString(context.GetBody()));
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task PostConsume&amp;lt;T&amp;gt;(ConsumeContext&amp;lt;T&amp;gt; context, TimeSpan duration, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; consumerType)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
   
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PostConsume--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task ConsumeFault&amp;lt;T&amp;gt;(ConsumeContext&amp;lt;T&amp;gt; context, TimeSpan elapsed, &lt;span&gt;string&lt;/span&gt; consumerType, Exception exception) &lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
     
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------ConsumeFault---------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Task ReceiveFault(ReceiveContext context, Exception exception)
    {            
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;----------------ReceiveFault----------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(Encoding.Default.GetString(context.GetBody()));
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }
}


&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; EntityConsumer : IConsumer&amp;lt;Entity&amp;gt;&lt;span&gt;
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task Consume(ConsumeContext&amp;lt;Entity&amp;gt;&lt;span&gt; context)
    {
        &lt;/span&gt;&lt;span&gt;await&lt;/span&gt; Console.Out.WriteLineAsync($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IEntityConsumer 类型 {context.Message.GetType()} {context.Message.ID} {context.Message.Age} {context.Message.Name} {context.Message.Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Entity
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; ID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Age { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; DateTime Time { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;ObserverPublish&lt;/span&gt; &lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
{
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
    {
        Console.Title &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;发布方&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bus = Bus.Factory.CreateUsingRabbitMq(cfg =&amp;gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; host = cfg.Host(&lt;span&gt;new&lt;/span&gt; Uri(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), hst =&amp;gt;&lt;span&gt;
            {
                hst.Username(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                hst.Password(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;guest&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });

        });
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; observer = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SendObserver();
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; handle =&lt;span&gt; bus.ConnectSendObserver(observer);

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; observer1 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PublishObserver();
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; handle1 =&lt;span&gt; bus.ConnectPublishObserver(observer1);
        bus.Start();
        &lt;/span&gt;&lt;span&gt;do&lt;/span&gt;&lt;span&gt;
        {
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请出请按q,否则请按其他键！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; value =&lt;span&gt; Console.ReadLine();

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (value.ToLower() == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            }

            bus.Publish(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Entity() { ID = &lt;span&gt;1&lt;/span&gt;, Age = &lt;span&gt;10&lt;/span&gt;, Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;张三&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Time =&lt;span&gt; DateTime.Now });
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);

        bus.Stop();
    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PublishObserver : IPublishObserver
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task PrePublish&amp;lt;T&amp;gt;(PublishContext&amp;lt;T&amp;gt;&lt;span&gt; context)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PrePublish--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task PostPublish&amp;lt;T&amp;gt;(PublishContext&amp;lt;T&amp;gt;&lt;span&gt; context)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PostPublish--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task PublishFault&amp;lt;T&amp;gt;(PublishContext&amp;lt;T&amp;gt;&lt;span&gt; context, Exception exception)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PublishFault--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; SendObserver : ISendObserver
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task PreSend&amp;lt;T&amp;gt;(SendContext&amp;lt;T&amp;gt;&lt;span&gt; context)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PreSend--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task PostSend&amp;lt;T&amp;gt;(SendContext&amp;lt;T&amp;gt;&lt;span&gt; context)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------PostSend--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Task SendFault&amp;lt;T&amp;gt;(SendContext&amp;lt;T&amp;gt;&lt;span&gt; context, Exception exception)
        &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; T : &lt;span&gt;class&lt;/span&gt;&lt;span&gt;
    {
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;------------------SendFault--------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ID={ (context.Message as Entity).ID},Name={(context.Message as Entity).Name},Time={(context.Message as Entity).Time}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;效果展示&lt;br/&gt;Publish:&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('9c4dfe94-168b-48c5-9c19-d909f2923a79')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_9c4dfe94-168b-48c5-9c19-d909f2923a79&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_9c4dfe94-168b-48c5-9c19-d909f2923a79&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('9c4dfe94-168b-48c5-9c19-d909f2923a79',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_9c4dfe94-168b-48c5-9c19-d909f2923a79&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;请出请按q,否则请按其他键！
&lt;/span&gt;&lt;span&gt;111111&lt;/span&gt;&lt;span&gt;
请出请按q,否则请按其他键！
&lt;/span&gt;------------------PrePublish--------------------&lt;span&gt;
ID&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,Name=张三,Time=&lt;span&gt;2019&lt;/span&gt;/&lt;span&gt;5&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;
--------------------------------------
------------------PreSend--------------------&lt;span&gt;
ID&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,Name=张三,Time=&lt;span&gt;2019&lt;/span&gt;/&lt;span&gt;5&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;
--------------------------------------
------------------PostSend--------------------&lt;span&gt;
ID&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,Name=张三,Time=&lt;span&gt;2019&lt;/span&gt;/&lt;span&gt;5&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;
--------------------------------------
------------------PostPublish--------------------&lt;span&gt;
ID&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,Name=张三,Time=&lt;span&gt;2019&lt;/span&gt;/&lt;span&gt;5&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;
--------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
Subscribe:&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('32ba736c-3126-43e4-ae3f-ea63ab5a83ab')&quot; readability=&quot;51.5&quot;&gt;&lt;img id=&quot;code_img_closed_32ba736c-3126-43e4-ae3f-ea63ab5a83ab&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_32ba736c-3126-43e4-ae3f-ea63ab5a83ab&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('32ba736c-3126-43e4-ae3f-ea63ab5a83ab',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_32ba736c-3126-43e4-ae3f-ea63ab5a83ab&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;98&quot;&gt;
&lt;pre&gt;
------------------PreReceive--------------------&lt;span&gt;
{
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;messageId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;36500000-a632-9828-3029-08d6ceb5ea32&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;conversationId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;36500000-a632-9828-ef7f-08d6ceb5ea37&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sourceAddress&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/bus-DESKTOP-PUOA6D7-dotnet-g3eyyyfggkcnt4wdbdmc7pxgn4?durable=false&amp;amp;autodelete=true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;destinationAddress&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/ObserverSubscriber:Entity&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;messageType&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;urn:message:ObserverSubscriber:Entity&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  ],
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;张三&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;time&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2019-05-02T12:23:23.2223222+08:00&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  },
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sentTime&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2019-05-02T04:23:23.3522586Z&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;headers&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {},
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;machineName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DESKTOP-PUOA6D7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;processName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dotnet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;processId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;25668&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;assembly&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ObserverPublish&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;assemblyVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.0.0.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;frameworkVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;4.0.30319.42000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;massTransitVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;4.1.0.1470&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;operatingSystemVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Microsoft Windows NT 6.2.9200.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  }
}
&lt;/span&gt;--------------------------------------&lt;span&gt;
IEntityConsumer 类型 ObserverSubscriber.Entity &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;10&lt;/span&gt; 张三 &lt;span&gt;2019&lt;/span&gt;/&lt;span&gt;5&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;
------------------PostConsume--------------------&lt;span&gt;
ID&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,Name=张三,Time=&lt;span&gt;2019&lt;/span&gt;/&lt;span&gt;5&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;:&lt;span&gt;23&lt;/span&gt;
--------------------------------------
-----------------PostReceive---------------------&lt;span&gt;
{
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;messageId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;36500000-a632-9828-3029-08d6ceb5ea32&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;conversationId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;36500000-a632-9828-ef7f-08d6ceb5ea37&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sourceAddress&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/bus-DESKTOP-PUOA6D7-dotnet-g3eyyyfggkcnt4wdbdmc7pxgn4?durable=false&amp;amp;autodelete=true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;destinationAddress&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rabbitmq://localhost/ObserverSubscriber:Entity&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;messageType&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;urn:message:ObserverSubscriber:Entity&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  ],
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;张三&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;time&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2019-05-02T12:23:23.2223222+08:00&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  },
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sentTime&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2019-05-02T04:23:23.3522586Z&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;headers&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {},
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;machineName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DESKTOP-PUOA6D7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;processName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dotnet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;processId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;25668&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;assembly&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ObserverPublish&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;assemblyVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.0.0.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;frameworkVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;4.0.30319.42000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;massTransitVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;4.1.0.1470&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;operatingSystemVersion&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Microsoft Windows NT 6.2.9200.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  }
}
&lt;/span&gt;--------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;7.9、数据一致性示例&lt;/h3&gt;
&lt;p&gt;详见：&lt;a href=&quot;https://github.com/786744873/DataConsistentSample&quot; target=&quot;_blank&quot;&gt;https://github.com/786744873/DataConsistentSample&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502150820093-1882337153.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;8、Jenkins&lt;/h2&gt;
&lt;p&gt;官方地址：&lt;a href=&quot;https://jenkins.io/&quot; target=&quot;_blank&quot;&gt;https://jenkins.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jenkins 是一款流行的开源持续集成（CI）与持续部署（CD）工具，广泛用于项目开发，具有自动化构建、测试和部署等功能。&lt;/p&gt;
&lt;p&gt;　　使用Jenkins的目的在于：&lt;/p&gt;
&lt;p&gt;　　（1）持续、自动地构建/测试软件项目。 &lt;br/&gt;　　（2）监控软件开放流程，快速问题定位及处理，提升开发效率。&lt;/p&gt;
&lt;h3&gt;8.1、Jenkins下载与安装&lt;/h3&gt;
&lt;p&gt;这里我们下载Windows版本的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502144039416-1787127423.png&quot; alt=&quot;&quot; width=&quot;279&quot; height=&quot;348&quot;/&gt;&lt;/p&gt;
&lt;p&gt;安装完成后会提示我们解锁 Jenkins&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502144129350-812381050.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;227&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里选择&lt;strong&gt;安装推荐的插件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502144630958-1135438208.png&quot; alt=&quot;&quot; width=&quot;623&quot; height=&quot;347&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建管理账户 =&amp;gt; 也可以直接使用admin账户继续&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502144924052-807312107.png&quot; alt=&quot;&quot; width=&quot;477&quot; height=&quot;261&quot;/&gt;&lt;/p&gt;
&lt;p&gt;配置Jenkins端口，默认8080，最好不要使用8080端口&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502145056594-1826837638.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;修改Jenkins服务端口，改为8080--&amp;gt;8081&lt;/p&gt;
&lt;p&gt;修改安装目录下 &lt;span class=&quot;cnblogs_code&quot;&gt;jenkins.xml&lt;/span&gt; 文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502150113989-1735383372.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后重启Jenkins服务&lt;/p&gt;
&lt;h3&gt;8.2、持续集成Asp.Net Core项目&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;我们以Github上面的项目为例，github项目地址：&lt;a href=&quot;https://github.com/786744873/first.git&quot; target=&quot;_blank&quot;&gt;https://github.com/786744873/first.git&lt;br/&gt;&lt;/a&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502150348868-767818407.png&quot; alt=&quot;&quot; width=&quot;672&quot; height=&quot;629&quot;/&gt;&lt;/li&gt;
&lt;li&gt;配置源代码&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502151219544-1190187689.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;构建触发器（这里每半小时轮询一次）&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502151319994-2032373751.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;构建&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502151408267-770870170.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502151819149-1933047932.png&quot; alt=&quot;&quot;/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;cd CITest
cd CITest
dotnet restore
dotnet build
dotnet publish &lt;/span&gt;-o &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;bin\Debug\netcoreapp2.0\publish&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
cd bin\Debug\netcoreapp2.&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;\publish
docker rm clitest &lt;/span&gt;-&lt;span&gt;f
docker rmi clitest &lt;/span&gt;-&lt;span&gt;f
docker build &lt;/span&gt;-&lt;span&gt;t clitest:latest .
docker run &lt;/span&gt;-p &lt;span&gt;4555&lt;/span&gt;:&lt;span&gt;4555&lt;/span&gt; -d --name clitest clitest:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;保存，然后去配置构建邮件发送&lt;br/&gt;Jenkins-&amp;gt;系统管理-&amp;gt;系统设置&lt;br/&gt;设置系统管理员收件地址(实际上这边配置的是发件人的邮箱地址)：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502201459459-2052889206.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502201613057-1867497362.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;继续进行项目配置&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502202158887-1381426956.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502202234050-1793733017.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;构建项目&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502204128092-427450230.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991704/201905/991704-20190502204354741-604278101.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;/li&gt;
&lt;/ol&gt;
</description>
<pubDate>Thu, 02 May 2019 13:02:00 +0000</pubDate>
<dc:creator>进击的辣条</dc:creator>
<og:description>1、微服务简介 一种架构模式，提倡将单一应用程序划分成一组小的服务，服务之间互相协调、互相配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务与服务间采用轻量级的通信机制互相沟通（RESTfu</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wyt007/p/10631109.html</dc:identifier>
</item>
</channel>
</rss>