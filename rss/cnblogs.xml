<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>[ffmpeg] h.264解码所用的主要缓冲区介绍 - TaigaComplex</title>
<link>http://www.cnblogs.com/TaigaCon/p/10312476.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/TaigaCon/p/10312476.html</guid>
<description>&lt;p&gt;在进行h264解码过程中，有两个最重要的结构体，分别为H264Picture、H264SliceContext。&lt;/p&gt;


&lt;p&gt;H264Picture用于维护一帧图像以及与该图像相关的语法元素。其中占用大片内存的结构体成员有以下几个：&lt;/p&gt;
&lt;pre class=&quot;brush: cpp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;&quot;&gt;
typedef struct H264Picture {
    AVFrame *f;
    int8_t *qscale_table; 
    int16_t (*motion_val[2])[2]; 
    uint32_t *mb_type; 
    int8_t *ref_index[2]; 
} H264Picture;
&lt;/pre&gt;



&lt;p&gt;h.264解码时，各个slice之间相对来说较为独立，因此对于从一个slice解码出来的各个语法元素，会用一个结构体来进行维护，这个结构体就是H264SliceContext。在对slice解码过程中涉及到的大多数据的存取都是通过该结构体来完成。其中占用较大内存，并且会被频繁使用的语法元素相关的结构体成员有以下几个：&lt;/p&gt;
&lt;pre class=&quot;brush: cpp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;&quot;&gt;
typedef struct H264SliceContext {
    int8_t intra4x4_pred_mode_cache[5 * 8];
    int8_t(*intra4x4_pred_mode);
    DECLARE_ALIGNED(8, uint8_t, non_zero_count_cache)[15 * 8];
    DECLARE_ALIGNED(16, int16_t, mv_cache)[2][5 * 8][2];
    DECLARE_ALIGNED(8,  int8_t, ref_cache)[2][5 * 8];
    DECLARE_ALIGNED(16, uint8_t, mvd_cache)[2][5 * 8][2];
    uint8_t direct_cache[5 * 8];
    ///&amp;lt; as a DCT coefficient is int32_t in high depth, we need to reserve twice the space.
    DECLARE_ALIGNED(16, int16_t, mb)[16 * 48 * 2];
    DECLARE_ALIGNED(16, int16_t, mb_luma_dc)[3][16 * 2];
    uint8_t (*mvd_table[2])[2];
}
&lt;/pre&gt;
&lt;p&gt;其中名称中含有“cache”这一名称的结构体成员都需要当前宏块的周边块的信息，这些信息都是在&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mvpred_8h_source.html#l00445&quot;&gt;fill_decode_cache&lt;/a&gt;中写入到成员的数组中的，而当前宏块中的信息则是在熵解码后直接或者间接存储到cache结构体成员中。&lt;/p&gt;
&lt;p&gt;这些包含cache字段的成员中基本都有DECLARE_ALIGNED修饰，这个宏主要用于向编译器声明这些成员为8或者16byte对齐。原因是为了提升处理速度，这些成员大多需要用SIMD指令进行处理，而SIMD指令在执行时，如果内存操作数不是对齐的，则有可能会出现性能下降&lt;sup&gt;&lt;a href=&quot;http://www.cnblogs.com/TaigaCon/p/10312476.html#ref18&quot;&gt;[18]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;这些结构体成员被命名为cache也是有原因的。在计算机原理中，当进行内存访问时，为了提高数据访问速度，一般都会对所访问的内存及其周边内存区域（即一个cache line）一同取入cache当中，如果某个代码段会频繁访问数据，并且大部分数据都在cache当中，即cache命中率高，那么这个代码段的执行效率就会得到很好的提升；如果大部分数据不在cache中，即cache命中率低，就会在数据访问上浪费大量时间。一般的处理器的L1 cache仅几十k字节的容量，因此在执行数据处理的时候，如果不是频繁访问的内存区域，有可能很快就会被从cache中清除。基于这些理论，现在返回来观察h264频繁访问的数据，可以发现：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;这些以cache命名的结构体成员除了包含当前宏块的数据之外，还包含其周边块的数据，特别是上一行的数据。在实际进行数据的排列的时候，是以宏块行为单位从左到右进行排列的，因此即使宏块在空间位置上是上下相邻，但是在内存中也会间隔较远，很有可能不在同一cache line中。&lt;/li&gt;
&lt;li&gt;解码一个宏块所需要访问的数据繁多，解码器为每一帧的每种数据都分配了各自的内存块，这些内存块都占用相当大的内存空间，因此不同的数据不可能在同一cache line中。&lt;/li&gt;
&lt;li&gt;解码一个宏块需要多次访问各个内存块中的不同数据，并且访问的代码段较为分散。由于cache空间有限，如果直接处理内存块内的数据，就有可能会导致cache line被频繁替换，使得在进行数据访问的时候cache命中率较低，从而在数据访问上耗费较多时间。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;为了针对上述问题进行优化，ffmpeg把在进行宏块解码时频繁访问到的数据集中到了H264SliceContext结构体中，并且用名称包含cache字段的成员存储宏块及其周边的数据。如此一来，就使得宏块解码过程中的数据访问的内存范围大大缩小，只有在开头的填充这些成员以及末尾的数据写回的时候才会访问到各个分散的内存块，以此来提升内存的cache命中率。&lt;/p&gt;


&lt;p&gt;还有一些未被介绍的缓冲区，指向这些缓冲区的指针是H264Context结构体的成员，主要在&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/libavcodec_2h264dec_8c_source.html#l00182&quot;&gt;ff_h264_alloc_tables&lt;/a&gt;中进行内存分配。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a id=&quot;ref1&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/libavcodec_2utils_8c_source.html#l00511&quot;&gt;update_frame_pool&lt;/a&gt;, &lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/libavcodec_2utils_8c_source.html#l00658&quot;&gt;video_get_buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;ref2&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__slice_8c_source.html#l00188&quot;&gt;alloc_picture&lt;/a&gt;, &lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__slice_8c_source.html#l00161&quot;&gt;init_table_pools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;ref3&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mvpred_8h_source.html#l00445&quot;&gt;fill_decode_cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;ref4&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264dec_8h_source.html#l00699&quot;&gt;write_back_intra_pred_mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;ref5&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264dec_8h_source.html#l00735&quot;&gt;write_back_motion_list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8.3.1.1 Derivation process for Intra4x4PredMode/ &lt;a id=&quot;ref6&quot; href=&quot;https://www.cnblogs.com/TaigaCon/p/4190806.html&quot;&gt;Intra Luma Prediction&lt;/a&gt; (&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264dec_8h_source.html#l00683&quot;&gt;pred_intra_mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.3.1.2 Intra_4x4 sample prediction / &lt;a id=&quot;ref7&quot; href=&quot;https://www.cnblogs.com/TaigaCon/p/4190806.html&quot;&gt;Intra Luma Prediction&lt;/a&gt; (&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mb_8c_source.html#l00613&quot;&gt;hl_decode_mb_predict_luma&lt;/a&gt;, &lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mb_8c_source.html#l00692&quot;&gt;pred4x4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.4.1 Derivation process for motion vector components and reference indices (&lt;a id=&quot;ref8&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__cabac_8c_source.html#l01535&quot;&gt;DECODE_CABAC_MB_MVD&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.4.1.2.2 Derivation process for spatial direct luma motion vector and reference index prediction mode &lt;a id=&quot;ref9&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__direct_8c_source.html#l00200&quot;&gt;(pred_spatial_direct_motion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.4.1.3 Derivation process for luma motion vector prediction / &lt;a id=&quot;ref10&quot; href=&quot;https://www.cnblogs.com/TaigaCon/p/3773747.html&quot;&gt;h.264 mvp求解过程&lt;/a&gt; (&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mvpred_8h_source.html#l00095&quot;&gt;pred_motion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.4.2.2 Fractional sample interpolation process (&lt;a id=&quot;ref11&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mb_8c_source.html#l00321&quot;&gt;mc_part_std&lt;/a&gt;,&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mb_8c_source.html#l00205&quot;&gt;mc_dir_part&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.5.2 Specification of transform decoding process for luma samples of Intra_16x16 macroblock prediction&lt;br/&gt;mode (&lt;a id=&quot;ref12&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__cabac_8c_source.html#l01862&quot;&gt;decode_cabac_luma_residual&lt;/a&gt;, &lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__mb_8c_source.html#l00613&quot;&gt;hl_decode_mb_predict_luma&lt;/a&gt;, &lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264dsp_8h_source.html#l00102&quot;&gt;h264_luma_dc_dequant_idct&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;8.7.2.1 Derivation process for the luma content dependent boundary filtering strength / &lt;a id=&quot;ref13&quot; href=&quot;https://www.cnblogs.com/TaigaCon/p/5500110.html#EstimateEdgeStrength&quot;&gt;估算边界强度&lt;/a&gt; (&lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__loopfilter_8c_source.html#l00440&quot;&gt;check_mv&lt;/a&gt;, &lt;a href=&quot;https://ffmpeg.org/doxygen/3.3/h264__loopfilter_8c_source.html#l00470&quot;&gt;filter_mb_dir&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;9.3.3.1.1.6 Derivation process of ctxIdxInc for the syntax elements ref_idx_l0 and ref_idx_l1 (&lt;a id=&quot;ref14&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__cabac_8c_source.html#l01469&quot;&gt;decode_cabac_mb_ref&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;9.3.3.1.1.7 Derivation process of ctxIdxInc for the syntax elements mvd_l0 and mvd_l1 (&lt;a id=&quot;ref15&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__cabac_8c_source.html#l01535&quot;&gt;DECODE_CABAC_MB_MVD&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;9.3.3.1.1.9 Derivation process of ctxIdxInc for the syntax element coded_block_flag (&lt;a id=&quot;ref16&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/h264__cabac_8c_source.html#l01550&quot;&gt;get_cabac_cbf_ctx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;ref17&quot; href=&quot;https://ffmpeg.org/doxygen/3.3/libavcodec_2h264dec_8c_source.html#l00182&quot;&gt;ff_h264_alloc_tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;ref18&quot; href=&quot;https://www.intel.com/content/www/us/en/architecture-and-technology/64-ia-32-architectures-optimization-manual.html&quot;&gt;Intel® 64 and IA-32 Architectures Optimization Reference Manual&lt;/a&gt; 4.4 STACK AND DATA ALIGNMENT&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Wed, 23 Jan 2019 21:24:00 +0000</pubDate>
<dc:creator>TaigaComplex</dc:creator>
<og:description>在进行h264解码过程中，有两个最重要的结构体，分别为H264Picture、H264SliceContext。 H264Picture H264Picture用于维护一帧图像以及与该图像相关的语法元</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/TaigaCon/p/10312476.html</dc:identifier>
</item>
<item>
<title>GDAL——命令使用专题——ogrinfo命令 - eshine</title>
<link>http://www.cnblogs.com/eshinex/p/10301738.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/eshinex/p/10301738.html</guid>
<description>&lt;p&gt;&lt;strong&gt;GDAL——命令使用专题——&lt;/strong&gt;ogrinfo命令&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　GDAL(Geospatial Data Abstraction Library)是一个在X/MIT许可协议下的开源栅格空间数据转换库。它利用抽象数据模型来表达所支持的各种文件格式。它还有一系列命令行工具来进行数据转换和处理。&lt;/p&gt;
&lt;p&gt;　　OGR是GDAL项目的一个分支，功能与GDAL类似，只不过它提供对矢量数据的支持。&lt;/p&gt;
&lt;p&gt;　　这一篇就讲讲常见的CDAL相关命令操作，使用好GDAL的相关命令，能够让你事半功倍。有人会说，现在都可视化操作了，还用啥命令。但是当你的机器性能比较低，或者说你在无界面华的操作系统下工作，那么命令就非常有用了，如：Linux等。&lt;/p&gt;
&lt;p&gt;　　主要针对：&lt;strong&gt;ogrinfo&lt;/strong&gt;命令&lt;strong&gt;、&lt;/strong&gt;gdalinfo命令&lt;strong&gt;&lt;strong&gt;、&lt;/strong&gt;gdalsrsinfo&lt;/strong&gt;命令&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;、&lt;/strong&gt;gdallocationinfo&lt;/strong&gt;&lt;/strong&gt;命令&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;、&lt;/strong&gt;gdal_translate&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;命令&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;、&lt;/strong&gt;gdaltransform&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;命令&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;等。这一节讨论&lt;strong&gt;&lt;strong&gt;ogrinfo&lt;/strong&gt;&lt;/strong&gt;命令。&lt;/p&gt;
&lt;p&gt;　　软件环境：在上次安装MapServer中，定义环境变量安装。详见《&lt;a href=&quot;https://www.cnblogs.com/eshinex/p/10272104.html&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;MapServer Configuring with IIS&lt;/strong&gt;&lt;/a&gt;》。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GDAL通用、常规、多用途命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在cmd中输入：ogrinfo --help-general 或者 gdalinfo --help-general&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
Generic GDAL utility command options:
  --version: report version of GDAL in use.
  --license: report GDAL license info.
  --formats: report all configured format drivers.
  --format [format]: details of one format.
  --optfile filename: expand an option file into the argument list.
  --config key value: set system configuration option.
  --debug [on/off/value]: set debug level.
  --pause: wait for user input, time to attach debugger
  --locale [locale]: install locale for debugging (i.e. en_US.UTF-8)
  --help-general: report detailed help on general options.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;以上列表中的相关命令为通用命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;通用命令的部分详细使用见&lt;strong&gt;ogrinfo命令&lt;/strong&gt;中的相关部分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ogrinfo命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;用途：列出OGR所支持的数据信息。&lt;/p&gt;
&lt;p&gt;　　官网：&lt;a href=&quot;https://gdal.org/ogrinfo.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/ogrinfo.html&lt;/a&gt;　　&lt;/p&gt;
&lt;p&gt;　　数据类型：OGR支持的数据类型&lt;/p&gt;
&lt;p&gt;　　在cmd中输入：ogrinfo --formats&lt;/p&gt;
&lt;div&gt;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;29&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;数据应用类型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;操作权限&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; netCDF&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rw+s)&lt;/td&gt;
&lt;td&gt; Network Common Data Format&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; AmigoCloud&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; AmigoCloud&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; OCI&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Oracle Spatial&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; PCIDSK&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; PCIDSK Database File&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; JP2OpenJPEG&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rwv)&lt;/td&gt;
&lt;td&gt; JPEG-2000 driver based on OpenJPEG library&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; PDF&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rw+vs)&lt;/td&gt;
&lt;td&gt; Geospatial PDF&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; MBTiles&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; MBTiles&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; DB2ODBC&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; IBM DB2 Spatial Database&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ESRI Shapefile&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; ESRI Shapefile&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; MapInfo File&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; MapInfo File&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; UK .NTF&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; UK .NTF&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; OGR_SDTS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; SDTS&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; S57&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; IHO S-57 (ENC)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; DGN&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Microstation DGN&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; OGR_VRT&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; VRT - Virtual Datasource&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; REC&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; EPIInfo .REC&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Memory&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Memory&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; BNA&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Atlas BNA&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; CSV&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Comma Separated Value (.csv)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; NAS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; NAS-ALKIS&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; GML&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Geography Markup Language (GML)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GPX&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; GPX&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; LIBKML&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Keyhole Markup Language (LIBKML)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; KML&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Keyhole Markup Language (KML)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GeoJSON&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; GeoJSON&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ESRIJSON&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; ESRIJSON&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; TopoJSON&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; TopoJSON&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Interlis 1&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Interlis 1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Interlis 2&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Interlis 2&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; OGR_GMT&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; GMT ASCII Vectors (.gmt)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GPKG&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rw+vs)&lt;/td&gt;
&lt;td&gt; GeoPackage&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; SQLite&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; SQLite / Spatialite&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ODBC&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; ODBC&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; WAsP&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; WAsP .map format&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; PGeo&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; ESRI Personal GeoDatabase&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; MSSQLSpatial&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Microsoft SQL Server Spatial Database&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; PostgreSQL&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; PostgreSQL/PostGIS&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; MySQL&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; MySQL&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; OpenFileGDB&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; ESRI FileGDB&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; XPlane&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; X-Plane/Flightgear aeronautical data&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; DXF&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; AutoCAD DXF&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; CAD&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(rovs)&lt;/td&gt;
&lt;td&gt; AutoCAD Driver&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Geoconcept&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Geoconcept&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GeoRSS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; GeoRSS&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GPSTrackMaker&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; GPSTrackMaker&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; VFK&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; Czech Cadastral Exchange Data Format&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; PGDUMP&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(w+v)&lt;/td&gt;
&lt;td&gt; PostgreSQL SQL dump&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; OSM&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; OpenStreetMap XML and PBF&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GPSBabel&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; GPSBabel&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; SUA&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Tim Newport-Peace's Special Use Airspace Format&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; OpenAir&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; OpenAir&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; OGR_PDS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Planetary Data Systems TABLE&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; WFS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; OGC WFS (Web Feature Service)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; WFS3&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; OGC WFS 3 client (Web Feature Service)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; HTF&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Hydrographic Transfer Vector&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; AeronavFAA&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Aeronav FAA&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Geomedia&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; Geomedia .mdb&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; EDIGEO&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; French EDIGEO exchange format&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; GFT&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Google Fusion Tables&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; SVG&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Scalable Vector Graphics&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; CouchDB&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; CouchDB / GeoCouch&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Cloudant&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Cloudant / CouchDB&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Idrisi&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Idrisi Vector (.vct)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ARCGEN&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Arc/Info Generate&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; SEGUKOOA&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; SEG-P1 / UKOOA P1/90&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; SEGY&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; SEG-Y&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; ODS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Open Document/ LibreOffice / OpenOffice Spreadsheet&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; XLSX&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; MS Office Open XML spreadsheet&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ElasticSearch&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Elastic Search&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Walk&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; Walk&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Carto&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+)&lt;/td&gt;
&lt;td&gt; Carto&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; SXF&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Storage and eXchange Format&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; Selafin&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Selafin&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; JML&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; OpenJUMP JML&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; PLSCENES&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; Planet Labs Scenes API&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; CSW&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; OGC CSW (Catalog - Service for the Web)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; VDV&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; VDV-451/VDV-452/INTREST Data Format&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; GMLAS&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rwv)&lt;/td&gt;
&lt;td&gt; Geography Markup Language (GML) driven by application schemas&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; MVT&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; Mapbox Vector Tiles&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; TIGER&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rw+v)&lt;/td&gt;
&lt;td&gt; U.S. Census TIGER/Line&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; AVCBin&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Arc/Info Binary Coverage&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; AVCE00&lt;/td&gt;
&lt;td&gt;-vector-&lt;/td&gt;
&lt;td&gt;(rov)&lt;/td&gt;
&lt;td&gt; Arc/Info E00 (ASCII) Coverage&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; HTTP&lt;/td&gt;
&lt;td&gt;-raster,vector-&lt;/td&gt;
&lt;td&gt;(ro)&lt;/td&gt;
&lt;td&gt; HTTP Fetching Wrapper&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;ul&gt;&lt;li&gt;raster：表示栅格数据&lt;/li&gt;
&lt;li&gt;vector：表示矢量数据&lt;/li&gt;
&lt;li&gt;ro：表示只读（'ro' is read-only driver）&lt;/li&gt;
&lt;li&gt;rw：读、写以及复制（read or write (i.e. supports CreateCopy)）&lt;/li&gt;
&lt;li&gt;rw+：读、写以及更新（read, write and update (i.e. supports Create)read, write and update (i.e. supports Create)）&lt;/li&gt;
&lt;li&gt;v：虚拟读写（appended for formats supporting virtual IO (/vsimem, /vsigzip, /vsizip, etc)）&lt;/li&gt;
&lt;li&gt;s：数据子集（appended for formats supporting subdatasets）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　&lt;strong&gt;用法：&lt;/strong&gt;　　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
ogrinfo [--help-general] [-ro] [-q] [-where restricted_where|\@&lt;span&gt;filename]
        [&lt;/span&gt;-spat xmin ymin xmax ymax] [-geomfield field] [-&lt;span&gt;fid fid]
        [&lt;/span&gt;-sql statement|\@filename] [-dialect dialect] [-al] [-rl] [-so] [-fields={YES/&lt;span&gt;NO}]
        [&lt;/span&gt;-geom={YES/NO/SUMMARY/WKT/ISO_WKT}] [--formats] [[-oo NAME=&lt;span&gt;VALUE] ...]
        [&lt;/span&gt;-nomd] [-listmdd] [-mdd domain|`all`]*&lt;span&gt;
        [&lt;/span&gt;-nocount] [-&lt;span&gt;noextent]
        datasource_name [layer [layer ...]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;ogrinfo --help-general&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　cmd输入：ogrinfo --help-general&lt;/p&gt;
&lt;p&gt;　　用于获取CDAL相关命令的通用支持&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35.245235069886&quot;&gt;
&lt;pre&gt;
C:\WINDOWS\system32&amp;gt;ogrinfo --help-general　　　　　　　　　　　　　　　　　　　　 #CDAL多用途命令，通用命令　　
Generic GDAL utility command options:
  --version: report version of GDAL in use.　　　　　　　　　　　　　　　　　 　　#查看版本信息
  --license: report GDAL license info.　　　　　　　　　　　　　　　　　　　　　　 #查看许可信息
  --formats: report all configured format drivers.　　　　　　　　　　　　　　  #查看支持的驱动应用，详情可查看：&lt;a href=&quot;https://gdal.org/ogr_formats.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/ogr_formats.html&lt;/a&gt;
  --format [format]: details of one format.　　　　　　　　　　　　　　　　　　　 #查看某一格式支持的详细信息 ，如：ogrinfo --format &quot;ESRI Shapefile&quot;。注意，在ogrinfo --formats列表中的文件名称，如果名称含空格，则必须用双引号查询 。
  --optfile filename: expand an option file into the argument list.　　　　　#执行操作文件中的命令，想见：--optfile
  --config key value: set system configuration option.　　　　　　　　　　　　　#全局变量配置
  --debug [on/off/value]: set debug level.　　　　　　　　　　　　　　　　　　　　#设置代开，关闭DEBUG，或者DEBUG的级别
  --pause: wait for user input, time to attach debugger　　　　　　　　　　　　 #在进行调试的时候，等待用户输入
  --locale [locale]: install locale for debugging (i.e. en_US.UTF-8)        #调试本地化安装
  --help-general: report detailed help on general options.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;ogrinfo --optfile操作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;在你的shape文件所在文件夹下面新建“states_ugl.opt（名字可以任意取，后缀名也可以是txt）”文件。&lt;/p&gt;
&lt;p&gt;　　states_ugl.opt文件中的内容为：-ro -al -so -rl&lt;/p&gt;
&lt;p&gt;　　在cmd中输入：cd /d &lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\Example1.1\data&lt;/span&gt; 定位到你的shape文件实际路径。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190123215257730-730055019.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　在cmd中输入：ogrinfo --optfile states_ugl.opt states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190123215550664-1927627229.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　通常这样做事为了执行一些比较连贯和复杂的操作。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;--config&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　GDAL的运行时配置选项，与构建时配置脚本的选项不同。运行时配置选项适用于所有平台，并在运行时进行评估。它们可以通过编程、命令行开关或用户在环境中设置。&lt;/p&gt;
&lt;p&gt;　　配置选项通常用于更改gdal和ogr驱动程序的默认行为，在某些情况下还用于更改gdal和ogr核心。它们本质上是用户可以设置的全局变量。&lt;/p&gt;
&lt;p&gt;　　--config命令格式为： --config key value 来设置的。详见：&lt;a href=&quot;https://trac.osgeo.org/gdal/wiki/ConfigOptions&quot; target=&quot;_blank&quot;&gt;https://trac.osgeo.org/gdal/wiki/ConfigOptions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　下面以SHAPE_RESTORE_SHX来讲解如何使用。&lt;/p&gt;
&lt;p&gt;　　首先打开你存放shape文件目录，把shx文件删除掉，如下图：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190123224737948-1170858614.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　然后再cmd中输入：cd /d E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\Example1.1\data&lt;/p&gt;
&lt;p&gt;　　在cmd中输入：ogrinfo --config SHAPE_RESTORE_SHX YES states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190123225025282-1930806610.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　文件创建成功。&lt;/p&gt;
&lt;p&gt;　　ogrinfo --config SHAPE_RESTORE_SHX YES states_ugl.shp 表示：在打开shp文件时，如果没有shx文件，则尝试创建。&lt;/p&gt;
&lt;p&gt;　　其他操作不一一讨论，明白格式以及在实际需求中会使用就好。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;--debug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　设置debug级别，值为on、off、0或1&lt;/p&gt;
&lt;p&gt;　　如：ogrinfo db.sqlite --debug on&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;--pause&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在进行调试的时候，等待用户输入。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;--locale&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　调试本地化安装，如：en_US.UTF-8&lt;/p&gt;
&lt;p&gt;　　以上是GDAL的一些通用命令使用方法，下面针对ogrinfo特有命令做相关介绍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ogrinfo常用命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-ro：&lt;/strong&gt;read only，以只读形式打开文件&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-al：&lt;/strong&gt;all layer，获取所有layer的特征信息。如在cmd中输入：&lt;span&gt;ogrinfo -ro -al states_ugl.shp&lt;/span&gt;，可看到下图：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190123233632982-80331092.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　其所有特征字段信息数据均会展现出来。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-rl：&lt;/strong&gt;random layer，在GDAL2.2版本开始使用，表示启用随机读取模式，即按在数据集中找到的顺序迭代特性，而不是按每层迭代特性。对于像OSM、GMLAS等格式文件读取速度回快很多。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-so：&lt;/strong&gt;summary only，仅显示摘要信息：显示部分字段类型信息，仅显示投影、架构、功能计数和范围等摘要信息。如在cmd中输入：&lt;span&gt;ogrinfo -ro -al -so states_ugl.shp&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190123234527265-787310284.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-q：&lt;/strong&gt;quite，显示主要信息，包括坐标系、层模式、范围和功能计数（但是个人觉得没这么多，只有：图层数量，名称，层模式，可能是我的shp文件问题）。在cmd中输入：ogrinfo -q states_ugl.shp　　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
#输入&lt;br/&gt;ogrinfo -ro  -q states_ugl.shp&lt;br/&gt;#输出
1: states_ugl (Polygon)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　-where：&lt;/strong&gt;类似sql语句查询，只对shape文件的属性进行匹配查询。如在cmd中输入：ogrinfo -ro -al -so -where CLASS='land' states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124005206253-134808501.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　或者通过导入文件的方式执行where查询（GDAL2.1版本以后才支持）&lt;/p&gt;
&lt;p&gt;　　在数据源文件夹中创建一个where.txt文件，内容为CLASS='water'，然后在cmd中运行：ogrinfo -ro -al -so -where @where.txt shates_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124010446552-1001859242.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-sql：&lt;/strong&gt;类似sql语句查询，同时支持单独指定sql文件（.txt、.sql都可以）。&lt;/p&gt;
&lt;p&gt;　　如在cmd中输入：ogrinfo -ro -al -so -sql &quot;SELECT CLASS,STATE FROM states_ugl&quot;  E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\tutorial\data&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124012324964-924963468.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　或者在cmd中输入：ogrinfo -ro -al -where @E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\Example1.1\data\where.txt -sql @E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\Example1.1\data\sql.txt E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\tutorial\data&lt;/p&gt;
&lt;p&gt;　　这个语句有上面的基础很好理解。文件路径是绝对路径，除非你的cmd命令定位的数据源文件夹中存在sql过滤文件和where过滤文件。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124012102011-2137305302.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124012856232-393907583.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;　　&lt;strong&gt;-dialect：&lt;/strong&gt;ogr版本sql语句。不大了解，标准sql语句也能使用，而且官网说性能地下。同时，sqlite支持的sql语句都能使用，所以使用通用sql语句就好，不做进一步的尝试与讲解。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-spat xmin ymin xmax ymax：&lt;/strong&gt;根据数据范围过滤。&lt;/p&gt;
&lt;p&gt;　　　　在cmd中输入：ogrinfo -ro -al -so states_ugl.shp 可以查看其数据范围为“ (-97.238976, 41.619778) - (-82.122902, 49.385620) ” ，上图有。&lt;/p&gt;
&lt;p&gt;　　　　在cmd中输入：ogrinfo -ro -al -so -spat -90 42 -82 45 states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124013958713-230408715.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　-geomfield field：&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-fid：&lt;/strong&gt;OGR支持的一个特殊过滤字段，fid。可以在 -where 中使用，如： -where &quot;fid in (200,201,202)&quot;&lt;/p&gt;
&lt;p&gt;　　　　在cmd中输入：ogrinfo -ro -al -where &quot;fid in (200,201,202)&quot; states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124015852983-1590942298.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;-fields={YES/NO}：&lt;/strong&gt;设置是否显示字段数据，如果是YES，显示字段数据信息，如果为NO，不显示。默认YES。&lt;/p&gt;
&lt;p&gt;　　　　在cmd中输入：ogrinfo -ro -al -fields=NO states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124015131199-552416134.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;-geom={YES/NO/SUMMARY/WKT/ISO_WKT}：&lt;/strong&gt;用于控制字段数据、几何图形的&lt;strong&gt;&lt;span&gt;POLYGON&lt;/span&gt;&lt;/strong&gt;数据显示以及输出（GDAL2.1版本的默认格式ISO_WKT）。&lt;/p&gt;
&lt;p&gt;　　　　YES：默认值，全部显示，显示格式为OGC WKT格式输出。　　　　&lt;/p&gt;
&lt;p&gt;　　　　NO：不显示&lt;span&gt;&lt;strong&gt;POLYGON&lt;/strong&gt;&lt;/span&gt;数据　　　　&lt;/p&gt;
&lt;p&gt;　　　　如在cmd中输入：ogrinfo -ro -al -gemo=NO states_ugl.shp&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124020355007-65488520.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　SUMMARY：显示简要数据，但是多了点的个数&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124020620751-225650446.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　设置为WKT、ISO_WKT效果通YES。WKT处其实显示的是坐标信息。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-oo NAME=VALUE：&lt;/strong&gt;数据集打开操作项。&lt;/p&gt;
&lt;p&gt;　　　　有点类似 --config KEY VALUE。只是-00 NAME=VALUE 是 名称=值。表达方式不一样。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#data.json的定义&lt;br/&gt;{
  &lt;/span&gt;&quot;type&quot;: &quot;FeatureCollection&quot;&lt;span&gt;,
  &lt;/span&gt;&quot;features&quot;&lt;span&gt;:
  [
    {
      &lt;/span&gt;&quot;type&quot;: &quot;Feature&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;geometry&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;type&quot;: &quot;Point&quot;&lt;span&gt;,
        &lt;/span&gt;&quot;coordinates&quot;: [ 2, 49&lt;span&gt; ]
      },
      &lt;/span&gt;&quot;properties&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;a_property&quot;: &quot;foo&quot;&lt;span&gt;,
        &lt;/span&gt;&quot;some_object&quot;&lt;span&gt;: {
          &lt;/span&gt;&quot;a_property&quot;: 1&lt;span&gt;,
          &lt;/span&gt;&quot;another_property&quot;: 2&lt;span&gt;
        }
      }
    }
  ]
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后在cmd中输入：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ogrinfo data.json -al -oo FLATTEN_NESTED_ATTRIBUTES=yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　可以看到如下转换：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
INFO: Open of `data.json'&lt;span&gt;
      using driver `GeoJSON&lt;/span&gt;'&lt;span&gt; successful.

Layer name: data
Geometry: Point
Feature Count: &lt;/span&gt;1&lt;span&gt;
Extent: (&lt;/span&gt;2.000000, 49.000000) - (2.000000, 49.000000&lt;span&gt;)
Layer SRS WKT:
GEOGCS[&lt;/span&gt;&quot;WGS 84&quot;&lt;span&gt;,
    DATUM[&lt;/span&gt;&quot;WGS_1984&quot;&lt;span&gt;,
        SPHEROID[&lt;/span&gt;&quot;WGS 84&quot;,6378137,298.257223563&lt;span&gt;,
            AUTHORITY[&lt;/span&gt;&quot;EPSG&quot;,&quot;7030&quot;&lt;span&gt;]],
        AUTHORITY[&lt;/span&gt;&quot;EPSG&quot;,&quot;6326&quot;&lt;span&gt;]],
    PRIMEM[&lt;/span&gt;&quot;Greenwich&quot;,0&lt;span&gt;,
        AUTHORITY[&lt;/span&gt;&quot;EPSG&quot;,&quot;8901&quot;&lt;span&gt;]],
    UNIT[&lt;/span&gt;&quot;degree&quot;,0.0174532925199433&lt;span&gt;,
        AUTHORITY[&lt;/span&gt;&quot;EPSG&quot;,&quot;9122&quot;&lt;span&gt;]],
    AUTHORITY[&lt;/span&gt;&quot;EPSG&quot;,&quot;4326&quot;&lt;span&gt;]]
a_property: String (&lt;/span&gt;0.0&lt;span&gt;)
some_object_a_property: Integer (&lt;/span&gt;0.0&lt;span&gt;)
some_object_another_property: Integer (&lt;/span&gt;0.0&lt;span&gt;)
OGRFeature(data):&lt;/span&gt;0&lt;span&gt;
  a_property (String) &lt;/span&gt;=&lt;span&gt; foo
  some_object_a_property (Integer) &lt;/span&gt;= 1&lt;span&gt;
  some_object_another_property (Integer) &lt;/span&gt;= 2&lt;span&gt;
  POINT (&lt;/span&gt;2 49)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　&lt;strong&gt;-nomd：&lt;/strong&gt;阻止元数据打印。有些数据集可能包含许多元数据字符串。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-listmdd：&lt;/strong&gt;列出所有的元数据。&lt;/p&gt;
&lt;p&gt;　　　　-nomd 和 -listmdd 都是针对元数据的。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35.5&quot;&gt;
&lt;pre readability=&quot;6&quot;&gt;
#metadata 元数据&lt;br/&gt;Metadata:
  DBF_DATE_LAST_UPDATE=2002-03-07&lt;p&gt;#在states_ugl.shp 文件查看的时候，你们会发现有这了数据。&lt;br/&gt;#-nomd不显示这条&lt;br/&gt;#默认显示， -listmdd显示有所的。
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;-mdd domain：&lt;/strong&gt;从指定的域显示元数据。all可以显示所有域的元数据。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-nocount：&lt;/strong&gt;没有Feature数量，即图形数量&lt;strong&gt;&lt;span&gt;Feature Count: 204&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;-noextent：&lt;/strong&gt;不输出空间范围。即没有 &lt;strong&gt;&lt;span&gt;Extent: (-97.238976, 41.619778) - (-82.122902, 49.385620)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;--formats：&lt;/strong&gt;列出OGR支持的数据格式。上面讲过。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;datasource_name：&lt;/strong&gt;表示数据源、或者多个数据源文件所在目录、或者其他定义的全局虚拟名称。查看：&lt;a href=&quot;https://gdal.org/ogr_formats.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/ogr_formats.html&lt;/a&gt; 此网页，了解OGR支持的数据格式。&lt;/p&gt;
&lt;p&gt;　　　　如：在cmd中知己输入（不定位到数据所在文件夹）：ogrinfo -ro -al -so E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\tutorial\data&lt;/p&gt;
&lt;p&gt;　　　　会罗列出当前文件下下面所有可以打开的数据文件的信息。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124004331284-1493097225.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;layer：&lt;/strong&gt;获取请求图层数据信息。&lt;/p&gt;
&lt;p&gt;　　　　如在cmd中输入：ogrinfo -ro -al -so E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\tutorial\data  roads_ugl&lt;/p&gt;
&lt;p&gt;　　　　则是显示图层名称为roads_ugl的数据信息&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124004530584-1103859922.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　或者输入：ogrinfo -ro -al -so E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\tutorial\data  roads_ugl states_ugl&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190124004752178-303978828.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他命令官网&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;如果想学习而不等待博客更新，可以先上官网看看。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　gdalinfo命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　官网：&lt;a href=&quot;https://gdal.org/gdalinfo.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/gdalinfo.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　dalsrsinfo命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　官网：&lt;a href=&quot;https://gdal.org/gdalsrsinfo.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/gdalsrsinfo.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　gdallocationinfo命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　官网：&lt;a href=&quot;https://gdal.org/gdallocationinfo.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/gdallocationinfo.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　gdal_translate命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　官网：&lt;a href=&quot;https://gdal.org/gdal_translate.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/gdal_translate.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　gdaltransform命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　官网：&lt;a href=&quot;https://gdal.org/gdaltransform.html&quot; target=&quot;_blank&quot;&gt;https://gdal.org/gdaltransform.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 后记&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　写得很累，每个命令的作用，效果，一步一步的操作基本都写得非常详细。但是这是个学习的过程。行者无疆，让前面的人累点吧！毕竟也没人指导，百度下的资料也是很稀缺的。要么就是个大纲一样。要么就是让人不知所云。&lt;/p&gt;
&lt;p&gt;　　加油各位。&lt;/p&gt;
</description>
<pubDate>Wed, 23 Jan 2019 19:29:00 +0000</pubDate>
<dc:creator>eshine</dc:creator>
<og:description>GDAL——命令使用专题——ogrinfo命令 前言 GDAL(Geospatial Data Abstraction Library)是一个在X/MIT许可协议下的开源栅格空间数据转换库。它利用抽象</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/eshinex/p/10301738.html</dc:identifier>
</item>
<item>
<title>jquery基本操作 - 1234wu</title>
<link>http://www.cnblogs.com/1234wu/p/10268903.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/1234wu/p/10268903.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.jQuery的基本操作;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1) innerhtml和innertext&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　修改:innerhtml可以放html片段，并且可以解析;&lt;/p&gt;
&lt;p&gt;　　　　　　 innertext可以放html片段,但是不会解析;&lt;/p&gt;
&lt;p&gt;　　　　访问:innerhtml是访问一串html代码;&lt;/p&gt;
&lt;p&gt;　　　　　　 innertext是访问标签中的内容;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;lt;script&amp;gt;
&lt;span&gt;var&lt;/span&gt; city = document.getElementById(&quot;city&quot;&lt;span&gt;);
    console.log(city.innerHTML);
    console.log(city.innerText);
    city.innerText &lt;/span&gt;= &quot;&amp;lt;li&amp;gt;你好&amp;lt;/li&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;2) val()   &lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;　　　　 封裝原生的value屬性      主要是用於表單元素&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;3) attr()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　 可以设置一个属性，也可以设置多个属性　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
$(&quot;#city&quot;).attr(&quot;class&quot;,&quot;d1&quot;)   　　&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置一个&lt;/span&gt;
$(&quot;#city&quot;).attr({     　　　　　　　　&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置多个&lt;/span&gt;
        &quot;name&quot; : &quot;zhangsan&quot;&lt;span&gt;,
        &lt;/span&gt;&quot;age&quot; : &quot;30&quot;&lt;span&gt;
 　　 })&lt;br/&gt;console.log($(&quot;#city&quot;).attr(&quot;class&quot;))   //不传递参数就是访问&lt;br/&gt;$(&quot;#city&quot;).removeAttr(&quot;class&quot;)    //删除指定的属性&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.样式操作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1) attr()方法&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
//   &amp;lt;button id=&quot;btn1&quot;&amp;gt;attr()方法&amp;lt;/button&amp;gt;&lt;br/&gt;$(&quot;#btn1&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){&lt;/span&gt;
      $(&quot;#div1&quot;&lt;span&gt;).attr({
          class : &lt;/span&gt;&quot;one&quot;&lt;span&gt;
       })
 })&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;2) 追加样式: addClass(&quot; &quot;)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&amp;lt;button id=&quot;btn2&quot;&amp;gt;追加样式&amp;lt;/button&amp;gt;&lt;/span&gt;
    $(&quot;#btn2&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
         $(&lt;/span&gt;&quot;#div1&quot;).addClass(&quot;two&quot;&lt;span&gt;)
    })&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;3) 删除样式:removeClass()&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&amp;lt;button id=&quot;btn3&quot;&amp;gt;删除样式&amp;lt;/button&amp;gt;&lt;/span&gt;
    $(&quot;#btn3&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
            $(&lt;/span&gt;&quot;#div1&quot;).removeClass()    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果不传递参数就是删除所有，    &lt;/span&gt;
            $(&quot;#div1&quot;).removeClass(&quot;two&quot;)     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;传递参数就是删除某个&lt;/span&gt;
     })                
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　&lt;strong&gt;　&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　4) 切换样式: toggleClass(&quot; &quot;) &lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&amp;lt;button id=&quot;btn4&quot;&amp;gt;切换样式&amp;lt;/button&amp;gt;&lt;/span&gt;
    $(&quot;#btn4&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果有这个样式就删除,如果没有就增加&lt;/span&gt;
        $(&quot;#div1&quot;).toggleClass(&quot;two&quot;&lt;span&gt;)  
    })        &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;5) 判断样式: hasClass(&quot; &quot;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;lt;button id=&quot;btn5&quot;&amp;gt;判断样式&amp;lt;/button&amp;gt;&lt;/span&gt;
    $(&quot;#btn5&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
            console.log($(&lt;/span&gt;&quot;#div1&quot;).hasClass(&quot;two&quot;))   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断这个样式是否存在在这个dom上面&lt;/span&gt;
    })
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;6) css( ) 方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;取得第一个段落的color样式属性的值。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;p&quot;).css(&quot;color&quot;);　　　　
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　将所有段落的字体颜色设为红色并且背景为蓝色。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
$(&quot;p&quot;).css({ &quot;color&quot;: &quot;#ff0011&quot;, &quot;background&quot;: &quot;blue&quot; });　　　
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　将所有段落字体设为红色&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
$(&quot;p&quot;).css(&quot;color&quot;,&quot;red&quot;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　逐渐增加div的大小&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
$(&quot;div&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    $(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;).css({
      width: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(index, value) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; parseFloat(value) * 1.2&lt;span&gt;;
      }, 
      height: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(index, value) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; parseFloat(value) * 1.2&lt;span&gt;;
      }
    });
  });&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.创建节点　&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;北京&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;天津&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;南京&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;            原生的dom&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;            创建一个武汉节点,加入到ul中&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; $li &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;            $li.text(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;武汉&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            $li.attr(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wuhan&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;            2.添加到ul中&lt;/span&gt;
&lt;span&gt;            $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).append($li)   //内部插入    
        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.遍历节点&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;city&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;城市列表&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;北京
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;海淀区&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;朝阳区&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;天津&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;上海&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;重庆&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;南京&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;　　1) 所有子元素:children()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;获取第一个ul元素中所有子元素的个数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
console.log($(&quot;ul:first&quot;).children().length)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　&lt;strong&gt;　&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　2)&lt;/strong&gt; &lt;strong&gt;获取第N个元素:get([index])&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;获取ul元素中的第三个子元素的文本&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
console.log($(&quot;ul:first&quot;).children(&quot;:eq(2)&quot;&lt;span&gt;).text())
console.log($(&lt;/span&gt;&quot;ul:first&quot;).children().get(2&lt;span&gt;).innerText)
console.log($(&lt;/span&gt;&quot;ul:first&quot;).children()[2&lt;span&gt;].innerText)
console.log($($(&lt;/span&gt;&quot;ul:first&quot;).children().get(2)).text())
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;3) 父元素:parent()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　获取上海这个元素的父元素的name属性&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
console.log($($(&quot;ul:first&quot;).children().get(2)).parent().attr(&quot;name&quot;))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　4) 兄弟元素:prev(),next()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;获取上海这个元素的上一个兄弟元素和下一个兄弟元素&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
console.log($(&quot;ul:first&quot;).children(&quot;:eq(2)&quot;&lt;span&gt;).prev().text())
console.log($(&lt;/span&gt;&quot;ul:first&quot;).children(&quot;:eq(2)&quot;).next().text())
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;5)同辈元素:siblings()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　获取上海这个元素的兄弟元素的所有个数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
console.log($(&quot;ul:first&quot;).children(&quot;:eq(2)&quot;).siblings().length)　　　　
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　找到每个div的所有同辈元素中带有类名为selected的元素。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre readability=&quot;5&quot;&gt;
&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;Hello&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;br/&gt;&amp;lt;p class=&quot;selected&quot;&amp;gt;Hello Again&amp;lt;/p&amp;gt;&lt;br/&gt;&amp;lt;p&amp;gt;And Again&amp;lt;/p&amp;gt;&lt;p&gt;&lt;span&gt;
$(&lt;/span&gt;&quot;div&quot;).siblings(&quot;.selected&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;lt;p class=&quot;selected&quot;&amp;gt;Hello Again&amp;lt;/p&amp;gt; &lt;/span&gt;
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;6)所有与指定表达式匹配的元素:find()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　　　获取ul中所有的li的个数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
console.log($(&quot;ul li&quot;&lt;span&gt;).length)
console.log($(&lt;/span&gt;&quot;ul&quot;).find(&quot;li&quot;).length)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;5.内部插入&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1) append(content|fn) &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;把后面的东西插入到了前面的子节点中（追加）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).append($(&quot;#xj&quot;))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;2)appendTo(content)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;把前面的东西插入到了后面的子节点中（追加）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).appendTo($(&quot;#xj&quot;)) 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;3) prepend(content|fn) &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　把后面的东西插入到了前面的子节点中（前面插入）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).prepend($(&quot;#xj&quot;))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;4)prependTo(content)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　把前面的东西插入到了后面的子节点中（前面插入）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).prependTo($(&quot;#xj&quot;)) 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;6.外部插入&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1) after(content|fn) &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　把后面的插入到了前面的下一个兄弟的位置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).after($(&quot;#xj&quot;))  
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;2) before(content|fn) &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;把后面的插入到了前面的上一个兄弟的位置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).before($(&quot;#xj&quot;))   
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;3) insertAfter(content) &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　把前面的插入到了后面的下一个兄弟&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).insertAfter($(&quot;#xj&quot;))  
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;4) insertBefore(content) &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;把前面的插入到了后面的上一个兄弟的位置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$(&quot;#tj&quot;).insertBefore($(&quot;#xj&quot;))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;7.删除节点&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;empty()　谋杀式的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　remove([expr])   自杀式&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;city&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;bj&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;北京&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;tj&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;天津&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;sh&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;上海&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;            var sh = document.getElementById(&quot;sh&quot;);&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;            console.log(sh.remove())    //这个是没有返回值的     自杀式&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;            var city = document.getElementById(&quot;city&quot;);&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;            console.log(city.removeChild(sh))    //这个是相当于剪贴操作     谋杀式&lt;/span&gt;
&lt;span&gt;            
            
　　　　　　empty()      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;谋杀式的&lt;/span&gt;
&lt;span&gt;        　　$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#sh&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).empty()
            
            
　　　　　　remove([expr])    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;自杀式&lt;/span&gt;
&lt;span&gt;            $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#sh&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).remove();

        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;8.替换节点&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　replaceWith(content|fn): 将所有匹配的元素替换成指定的HTML或DOM元素&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;　　replaceAll(selector):用匹配的元素替换掉所有 selector匹配到的元素&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
$(&quot;p&quot;).replaceWith($(&quot;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;按钮&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;))  //把p换成按钮

$(&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;这是一个段落.&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&quot;).replaceAll($(&quot;button&quot;))    //把所有的按钮换成p
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;9.复制节点&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;clone([Even[,deepEven]])&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;克隆匹配的DOM元素并且选中这些克隆的副本&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;按钮&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;这是一个段落.&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).click(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                console.log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hello world&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
            })
            
            $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).clone(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;).appendTo($(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注意true的作用，表示事件是否会被克隆&lt;/span&gt;
            
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Wed, 23 Jan 2019 16:30:00 +0000</pubDate>
<dc:creator>1234wu</dc:creator>
<og:description>1.jQuery的基本操作; 1) innerhtml和innertext 修改:innerhtml可以放html片段，并且可以解析; innertext可以放html片段,但是不会解析; 访问:in</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/1234wu/p/10268903.html</dc:identifier>
</item>
<item>
<title>Mybatis根据数据库中的表自动生成Bean对象与Mapper文件 (小白式教程) - 粥里有勺糖</title>
<link>http://www.cnblogs.com/roseAT/p/10311999.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/roseAT/p/10311999.html</guid>
<description>&lt;p&gt;示例IDE采用 IDEA&lt;/p&gt;
&lt;p&gt;//**********************华丽的分割线****************//&lt;/p&gt;
&lt;p&gt;1.新建一个java项目--&amp;gt;在Src目录下创建3个包(Package)与一个文件夹(Directory)&lt;/p&gt;
&lt;p&gt;Package(包)-&lt;/p&gt;
&lt;p&gt;①bean:存放自动生成的Java Bean&lt;/p&gt;
&lt;p&gt;②mapper:存放自动生成的mapper接口与对应的.xml文件&lt;/p&gt;
&lt;p&gt;③test:存放一个main方法用于执行自动生成操作&lt;/p&gt;
&lt;p&gt;Directory(目录)::&lt;/p&gt;
&lt;p&gt;lib:存放项目所需要导入的包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190123224259683-328565706.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2.向lib导入所需的包(记得让项目关联上这4个包,教程结束处附上资源链接)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190123225259500-1004543486.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3.右击Src目录--&amp;gt;new--&amp;gt;File (新建两个配置文件db.properties与config.xml)&lt;/p&gt;
&lt;p&gt;db.properties:用于存放链接数据库的基本配置信息&lt;/p&gt;
&lt;p&gt;config.xml:存放Mybatis相关配置信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190123225742859-528590257.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190123225958793-1912288168.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;配置文件代码:&lt;/p&gt;
&lt;p&gt;db.properties:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
jdbc.driver=&lt;span&gt;com.mysql.jdbc.Driver
jdbc.url&lt;/span&gt;=jdbc:mysql:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;localhost:3306/ssm_mybatis&lt;/span&gt;
jdbc.username=&lt;span&gt;root
jdbc.password&lt;/span&gt;=a123456
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注:如果使用的为MySQL8.0相应的url需在后面加上allowPublicKeyRetrieval=true&lt;/p&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/ssm_mybatis?allowPublicKeyRetrieval=true
jdbc.username=root
jdbc.password=a123456
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;config.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE generatorConfiguration
        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;
        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;generatorConfiguration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;读取数据库配置文件&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties &lt;/span&gt;&lt;span&gt;resource&lt;/span&gt;&lt;span&gt;=&quot;db.properties&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;


    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;Mygenerator&quot;&lt;/span&gt;&lt;span&gt; targetRuntime&lt;/span&gt;&lt;span&gt;=&quot;MyBatis3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 通过这个属性去掉自动生成的时候跟随生成的一些注释 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;commentGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;非必要部分&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 去掉注释 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suppressAllComments&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;去掉时间戳 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suppressDate&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;commentGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置数据库链接&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jdbcConnection &lt;/span&gt;&lt;span&gt;driverClass&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.driver}&quot;&lt;/span&gt;&lt;span&gt;
                        connectionURL&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.url}&quot;&lt;/span&gt;&lt;span&gt;
                        userId&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.username}&quot;&lt;/span&gt;&lt;span&gt;
                        password&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.password}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jdbcConnection&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; java与jdbc数据转换 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;javaTypeResolver &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;forceBigDecimals&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;javaTypeResolver&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
        javaModelGenerator java bean配置
        targetpackage  输出路径
        targetProject 输出项目位置
          &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;javaModelGenerator &lt;/span&gt;&lt;span&gt;targetPackage&lt;/span&gt;&lt;span&gt;=&quot;com.ATrose.bean&quot;&lt;/span&gt;&lt;span&gt; targetProject&lt;/span&gt;&lt;span&gt;=&quot;src&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;enableSubPackages是否开启子包名,是否在名称后面加上scheme&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;enableSubPackages&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;在set中去掉空格 (trim)&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;trimStrings&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;javaModelGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 生成的mapper.xml &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sqlMapGenerator &lt;/span&gt;&lt;span&gt;targetPackage&lt;/span&gt;&lt;span&gt;=&quot;com.ATrose.mapper&quot;&lt;/span&gt;&lt;span&gt;  targetProject&lt;/span&gt;&lt;span&gt;=&quot;src&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;enableSubPackages&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sqlMapGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 生成的java接口的配置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;javaClientGenerator &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;XMLMAPPER&quot;&lt;/span&gt;&lt;span&gt; targetPackage&lt;/span&gt;&lt;span&gt;=&quot;com.ATrose.mapper&quot;&lt;/span&gt;&lt;span&gt;  targetProject&lt;/span&gt;&lt;span&gt;=&quot;src&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;enableSubPackages&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;javaClientGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;需要自动生成的表的表名&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;tableName&lt;/span&gt;&lt;span&gt;=&quot;user&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;tableName&lt;/span&gt;&lt;span&gt;=&quot;country&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;generatorConfiguration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4.在test包中新建一个java类&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190123235209506-896793286.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在新建的java类中创建一个main方法 输入一下代码(或者直接全部copy)&lt;/p&gt;
&lt;p&gt;generator.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.ATrose.test;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.MyBatisGenerator;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.config.Configuration;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.config.xml.ConfigurationParser;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.internal.DefaultShellCallback;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.File;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; generator {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
        List&lt;/span&gt;&amp;lt;String&amp;gt; warnings = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;&lt;span&gt;();
        &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt; overwrite = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        File configFile &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; File(&quot;src/config.xml&quot;&lt;span&gt;);
        ConfigurationParser cp &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConfigurationParser(warnings);
        Configuration config &lt;/span&gt;=&lt;span&gt; cp.parseConfiguration(configFile);
        DefaultShellCallback callback &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DefaultShellCallback(overwrite);
        MyBatisGenerator myBatisGenerator &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MyBatisGenerator(config, callback, warnings);
        myBatisGenerator.generate(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5.执行main方法即可生成我们所需要的内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190123235858324-1975599625.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;//自动生成的mapper.xml&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1504886/201901/1504886-20190124000449184-1920016499.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;教程到此结束&lt;/p&gt;
&lt;p&gt;//*******************华丽的分割线*********************//&lt;/p&gt;
&lt;p&gt;所需导入的包:&lt;/p&gt;
&lt;p&gt;链接: https://pan.baidu.com/s/1sscqW9fGllOs5jqRVyGbbg 提取码: 1zfz &lt;/p&gt;
</description>
<pubDate>Wed, 23 Jan 2019 16:12:00 +0000</pubDate>
<dc:creator>粥里有勺糖</dc:creator>
<og:description>示例IDE采用 IDEA //**********************华丽的分割线****************// 1.新建一个java项目--&gt;在Src目录下创建3个包(Package</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/roseAT/p/10311999.html</dc:identifier>
</item>
<item>
<title>Python vtk学习(1) - 范中豪</title>
<link>http://www.cnblogs.com/zhhfan/p/10312170.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhhfan/p/10312170.html</guid>
<description>&lt;p&gt;Vtk，（visualization toolkit）是一个开源的免费软件系统，主要用于三维计算机图形学、图像处理和可视化。Vtk是在面向对象原理的基础上设计和实现的，它的内核是用C++构建的，包含有大约250,000行代码，2000多个类，还包含有几个转换界面，因此也可以自由的通过Java，Tcl/Tk和Python各种语言使用vtk。以下介绍VTK对于STL图像的基本操作&lt;/p&gt;
&lt;h2 id=&quot;stl图像加载缩放旋转&quot;&gt;STL图像加载、缩放、旋转&lt;/h2&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import os

import vtk


base_file = &quot;E:\\study\\company\\model&quot;
test_file = &quot;dongmai.stl&quot;
actor = vtk.vtkActor()


def show(file_name):
    # load stl file
    reader = vtk.vtkSTLReader()
    reader.SetFileName(file_name)

    mapper = vtk.vtkPolyDataMapper()
    mapper.SetInputConnection(reader.GetOutputPort())

    actor.SetMapper(mapper)
    # actor.RotateY(45)

    # Create a rendering window and renderer
    ren = vtk.vtkRenderer()
    renWin = vtk.vtkRenderWindow()
    renWin.AddRenderer(ren)

    # Create a renderwindowinteractor
    iren = vtk.vtkRenderWindowInteractor()
    iren.SetRenderWindow(renWin)

    # Assign actor to the renderer
    ren.AddActor(actor)

    # Enable user interface interactor
    iren.Initialize()
    renWin.Render()
    iren.Start()
    return iren


# 绕x轴旋转
def rotate_x(num):
    actor.RotateX(num)


def rotate_y(num):
    actor.RotateY(num)


def rotate_z(num):
    actor.RotateZ(num)


# 设置方向
def set_origin(x, y, z):
    actor.SetOrientation(x, y, z)


def get_origin():
    return actor.GetOrientation()


# 缩放
def set_scale(x, y, z):
    actor.SetScale(x, y, z)


def main():
    show(os.path.join(base_file, test_file))


if __name__ == '__main__':
    main()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;显示结果&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1503464/201901/1503464-20190124000702002-1603447480.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;鼠标事件监听&quot;&gt;鼠标事件监听&lt;/h2&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 监听事件
class MyEvent(vtk.vtkInteractorStyleTrackballCamera):

    def __init__(self, parent=None):
        # 鼠标中键
        self.AddObserver(&quot;MiddleButtonPressEvent&quot;, self.middle_button_press_event)
        self.AddObserver(&quot;MiddleButtonReleaseEvent&quot;, self.middle_button_release_event)
        # 鼠标左键
        self.AddObserver(&quot;LeftButtonPressEvent&quot;, self.left_button_press_event)
        self.AddObserver(&quot;LeftButtonReleaseEvent&quot;, self.left_button_release_event)
        # 鼠标右键
        self.AddObserver(&quot;RightButtonPressEvent&quot;, self.right_button_press_event)
        self.AddObserver(&quot;RightButtonReleaseEvent&quot;, self.right_button_release_event)

    def middle_button_press_event(self, obj, event):
        print(&quot;Middle Button pressed&quot;)
        self.OnMiddleButtonDown()
        return

    def middle_button_release_event(self, obj, event):
        print(&quot;Middle Button released&quot;)
        self.OnMiddleButtonUp()
        return

    def left_button_press_event(self, obj, event):
        print(&quot;Left Button pressed&quot;)
        self.OnLeftButtonDown()
        return

    def left_button_release_event(self, obj, event):
        print(&quot;Left Button released&quot;)
        self.OnLeftButtonUp()
        return

    def right_button_press_event(self, obj, event):
        print(&quot;right Button pressed&quot;)
        self.OnRightButtonDown()
        return

    def right_button_release_event(self, obj, event):
        print(&quot;right Button released&quot;)
        self.OnLeftButtonUp()
        return

# 引入上一段代码调用
iren.SetInteractorStyle(MyEvent())&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1503464/201901/1503464-20190124000708433-1790335714.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文档&quot;&gt;参考文档&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://lorensen.github.io/VTKExamples/site/Python/&quot;&gt;Python VTK Example&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://blog.csdn.net/minmindianzi/article/details/84279434&quot;&gt;VTK笔记——模型的空间变换(Transform).平移、旋转和缩放&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 23 Jan 2019 16:09:00 +0000</pubDate>
<dc:creator>范中豪</dc:creator>
<og:description>python vtk 关于STL图像的旋转与缩放及事件监听</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhhfan/p/10312170.html</dc:identifier>
</item>
<item>
<title>写给程序员的裁员防身指南 - 陈树义</title>
<link>http://www.cnblogs.com/chanshuyi/p/how_to_combat_with_evil_boss.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chanshuyi/p/how_to_combat_with_evil_boss.html</guid>
<description>&lt;p&gt;大家都知道 18 年底许多大公司都开始了「人员优化」动作，不仅仅美团等大厂有所行动，就连一些平时求贤若渴的小公司也有所动作。&lt;/p&gt;
&lt;p&gt;本来我以为关于劳动法的事情，许多人应该多多少少都应该了解。但最近在一些技术群众看到了不少被裁的同学，他们的第一反应是害怕、忧虑，但是就是不知道该怎么办。&lt;/p&gt;
&lt;p&gt;忽然间我意识到有必要写一篇文章，让朋友知道当我们遇到类似的事情的时候，我们应该怎么办？&lt;/p&gt;
&lt;h2 id=&quot;法律条文&quot;&gt;法律条文&lt;/h2&gt;
&lt;p&gt;下面我整理了许多常见的问题，通过问答的方式为大家答疑。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、老板今天找我约谈，让我主动离职协议，我该怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不要主动离职，更不要签离职协议。只要你不签离职协议，那么老板是不能主动开除你的，除非赔付赔偿金。&lt;/p&gt;
&lt;p&gt;在《中华人民共和国劳动法》（下称《劳动法》）中与辞退员工相关的法律法规有：&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;第二十四条&lt;/strong&gt; 经劳动合同当事人协商一致，劳动合同可以解除。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你们商量着来，协商一致签个解除劳动合同的协议就可以。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;第二十五条&lt;/strong&gt; 劳动者有下列情形之一的，用人单位可以解除劳动合同：&lt;br/&gt;（一）在试用期间被证明不符合录用条件的；&lt;br/&gt;（二）严重违反劳动纪律或者用人单位规章制度的；&lt;br/&gt;（三）严重失职，营私舞弊，对用人单位利益造成重大损害的；&lt;br/&gt;（四）被依法追究刑事责任的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;针对第二十五条，只要你不杀人放火违法乱纪，就不会有事情。即使是用人单位证明你不符合录用条件，也是需要列举证据的，不能只凭一句话，必须说出具体原因，并且要有证明（法律是严谨的）。即使说你严重违法劳动纪律和规章制度也是如此，必须列举证据。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;第二十六条&lt;/strong&gt; 有下列情形之一的，用人单位可以解除劳动合同，但是应当提前三十日以书面形式通知劳动者本人：&lt;br/&gt;（一）劳动者患病或者非因工负伤，医疗期满后，不能从事原工作也不能从事由用人单位另行安排的工作的；&lt;br/&gt;（二）劳动者不能胜任工作，经过培训或者调整工作岗位，仍不能胜任工作的；&lt;br/&gt;（三）劳动合同订立时所依据的客观情况发生重大变化，致使原劳动合同无法履行，经当事人协商不能就变更劳动合同达成协议的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果用人单位觉得你能力不够，那么必须进行培训或转岗，再无法胜任工作，才能辞退。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;第二十七条&lt;/strong&gt; 用人单位濒临破产进行法定整顿期间或者生产经营状况发生严重困难，确需裁减人员的，应当提前三十日向工会或者全体职工说明情况，听取工会或者职工的意见，经向劳动行政部门报告后，可以裁减人员。&lt;br/&gt;用人单位依据本条规定裁减人员，在六个月内录用人员的，应当优先录用被裁减的人员。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;第二十八条&lt;/strong&gt; 用人单位依据本法第二十四条、第二十六条、第二十七条的规定解除劳动合同的，应当依照国家有关规定给予经济补偿。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这条明确规定了，如果因为第二十四条、第二十六条、第二十七条辞退员工，那么必须根据规定给予经济补偿。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、我可以要多少补偿呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据《中华人民共和国劳动合同法》第四十七条和第四十条的规定：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;第四十条&lt;/strong&gt; 有下列情形之一的，用人单位提前三十日以书面形式通知劳动者本人或者额外支付劳动者一个月工资后，可以解除劳动合同：&lt;br/&gt;(一)劳动者患病或者非因工负伤，在规定的医疗期满后不能从事原工作，也不能从事由用人单位另行安排的工作的；&lt;br/&gt;(二)劳动者不能胜任工作，经过培训或者调整工作岗位，仍不能胜任工作的；&lt;br/&gt;(三)劳动合同订立时所依据的客观情况发生重大变化，致使劳动合同无法履行，经用人单位与劳动者协商，未能就变更劳动合同内容达成协议的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;第四十七条&lt;/strong&gt; 经济补偿按劳动者在本单位工作的年限，每满一年支付一个月工资的标准向劳动者支付。六个月以上不满一年的，按一年计算；不满六个月的，向劳动者支付半个月工资的经济补偿。&lt;br/&gt;　　劳动者月工资高于用人单位所在直辖市、设区的市级人民政府公布的本地区上年度职工月平均工资三倍的，向其支付经济补偿的标准按职工月平均工资三倍的数额支付，向其支付经济补偿的年限最高不超过十二年。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单地说，如果不是自己的原因导致的解除劳动合同，那么公司应该赔付 N+1 个月的工资，这部分工资无须扣税。&lt;/p&gt;
&lt;p&gt;这里的 N 与你的工作年限相关。不够半年补半个月工资，超过半年按照一个月工资进行补偿。&lt;/p&gt;
&lt;p&gt;这里的 1 是代通知金指的是立刻让你走人。有些单位不愿意支付多这一个月的工资，那么就给你 N 个月的赔偿，但你可以在这单位多待 1 个月的事件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、如果老板强制解除劳动合同，也不给赔偿怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据《劳动合同法》第八十七条：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;第八十七条 用人单位违反本法规定解除或者终止劳动合同的，应当依照本法第四十七条规定的经济补偿标准的二倍向劳动者支付赔偿金。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;意思是说，老板不和你协商，也不给你赔偿，直接辞退你，他要赔你双倍的赔偿金。你要做的就是去所在区的劳动监察大队提交申请，等着仲裁和上庭。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、请律师很贵啊，这样会不会很不划算，赔的钱都不够律师费？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;劳动纠纷是最最常见的法律纠纷，基本上劳动局都有免费的法律援助，不用钱。你要做的就是去劳动局监察大队提交申请，接下来有人帮你。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、虽然法律这么写，但我还是没底，要是打输了怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据经验，只要是明确违反了《劳动法》、《劳动合同法》中规定的情形的，用人单位百分之百都会败诉。更多情况下是用人单位拖时间，但基本上在开庭前都会求着你和解（因为开庭宣判了，赔偿金直接翻倍）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6、老板说如果要赔偿就不给离职证明，怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据《劳动合同法》第五十条规定：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;第五十条 用人单位应当在解除或者终止劳动合同时出具解除或者终止劳动合同的证明，并在十五日内为劳动者办理档案和社会保险关系转移手续。&lt;br/&gt;　　劳动者应当按照双方约定，办理工作交接。用人单位依照本法有关规定应当向劳动者支付经济补偿的，在办结工作交接时支付。&lt;br/&gt;　　用人单位对已经解除或者终止的劳动合同的文本，至少保存二年备查。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单地说，老板必须在 15 天之内给你离职证明，没得商量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7、老板说如果要赔偿，那就在离职证明上写「因能力不足被辞退」，怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据《劳动合同法实施条例》第二十四条：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;第二十四条　用人单位出具的解除、终止劳动合同的证明，应当写明劳动合同期限、解除或者终止劳动合同的日期、工作岗位、在本单位的工作年限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即使离职证明上陈述的内容是客观事实，但是根据《劳动合同法实施条例》，已限制了用人单位出具解除或终止劳动合同时所应记载内容的范围，也就是说离职证明里面是没有要求需要写明离职原因的，更不允许对劳动者的道德品行以及在公司的工作进行评价。&lt;/p&gt;
&lt;p&gt;此外，从保护劳动者权益角度出发，用人单位出具的离职证明不应当记载对劳动者不利的事项，根据我国《就业促进法》第三条，劳动者依法享有平等就业和自主择业的权利。如果解除、终止劳动合同的证明中记载有劳动者的负面信息，那么就会违反求职平等原则，致使劳动者减少或者丧失就业机会。&lt;/p&gt;
&lt;p&gt;即使离职证明上对离职员工再就业不利的解聘原因是真实的，离职员工也可以拒绝接受这样的离职证明，要求单位重新开具没有相关内容的离职证明。如果单位拒绝，就属于违约。因为，按照《劳动法》和《劳动合同法》的相关规定，为离职员工开具终止劳动关系的证明，是用人单位的附随义务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8、我怀孕了，但公司让我离职，怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据《劳动法》第二十九条规定：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;第二十九条 劳动者有下列情形之一的，用人单位不得依据本法第二十六条、第二十七条的规定解除劳动合同：&lt;br/&gt;（一）患职业病或者因工负伤并被确认丧失或者部分丧失劳动能力的；&lt;br/&gt;（二）患病或者负伤，在规定的医疗期内的；&lt;br/&gt;（三）女职工在孕期、产期、哺乳期内的；&lt;br/&gt;（四）法律、行政法规规定的其他情形。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了孩子，用人单位不能裁你，放心。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9、我现在还是在试用期，领导说我能力不足辞退我，我有赔偿金吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据《劳动法》第二十五条：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;第二十五条&lt;/strong&gt; 劳动者有下列情形之一的，用人单位可以解除劳动合同：&lt;br/&gt;（一）在试用期间被证明不符合录用条件的；&lt;br/&gt;（二）严重违反劳动纪律或者用人单位规章制度的；&lt;br/&gt;（三）严重失职，营私舞弊，对用人单位利益造成重大损害的；&lt;br/&gt;（四）被依法追究刑事责任的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;您在「试用期」内被用人单位解雇的，如果用人单位能够充分证明您不符合录用条件，用人单位就无需向您补偿或者赔偿。&lt;/p&gt;
&lt;p&gt;如果用人单位不能充分证明，那么用人单位就必须向您支付2倍经济补偿金。当然，如果领导和您谈话后，双方协商一致解除合同的话，你就只能主张经济补偿金（N+1）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10、谈话之后，老板还是不愿意给补偿，我应该怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于老板拒不协商的，你能做的就是走法律途径了。基本的流程是这样的：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;与用人单位协商解决&lt;/li&gt;
&lt;li&gt;请监察大队调解&lt;/li&gt;
&lt;li&gt;向劳动局申请仲裁&lt;/li&gt;
&lt;li&gt;向人民法院发起诉讼&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;基本上99%的劳动纠纷会在诉讼之前解决。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11、要是诉讼之后，老板还不愿意赔钱，怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;诉讼之后用人单位败诉，那么必须是在规定时间内赔偿。如果不执行，那么法院会强制执行。&lt;/p&gt;
&lt;h2 id=&quot;回归现实&quot;&gt;回归现实&lt;/h2&gt;
&lt;p&gt;说了这么多，可能有些朋友会说，法律是法律，事实上哪能执行到这么全面呢。确实，这位朋友说到了一个很重要的点——理论与现实的差距。&lt;/p&gt;
&lt;p&gt;就像前几年的快播倒闭，到最后是到了强制执行的阶段，但是快播可能确实也没钱，最后貌似不了了之了。所以说在劳动市场，劳动者是最弱势的，所以法律条文和庭审都比较偏向于劳动者。如果是明显违反法律条文的，那么胜诉是百分之百的。&lt;/p&gt;
&lt;p&gt;对于绝大多数劳动者而言，最好的情况就是和用人单位达成和解，拿到N+1的赔偿。虽然说你也可以争取公司的2N赔偿，但是个人始终无法和一个组织斗争。你提交仲裁申请、发起诉讼、列举证据、查找资料都需要时间，但是公司有专门的法务跟你耗时间。&lt;/p&gt;
&lt;p&gt;但我也想提醒一点，法律毕竟是法律，虽然与现实有差距，但它是一条准绳。现实生活中，我们确实没有办法做到完全按照法律去执行，但是做到大部分是没问题的。&lt;/p&gt;
&lt;p&gt;但对于劳动者而言，应该属于自己的权益，自己要站起来捍卫，不要一味忍受。固然我们需要接受一些妥协，但属于自己的权益不要一退再退。&lt;/p&gt;
&lt;p&gt;最后把这篇文章发给更多需要的朋友吧，虽然希望永远都用不上，但是了解多一点总是没错的。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
</description>
<pubDate>Wed, 23 Jan 2019 16:04:00 +0000</pubDate>
<dc:creator>陈树义</dc:creator>
<og:description>大家都知道 18 年底许多大公司都开始了「人员优化」动作，不仅仅美团等大厂有所行动，就连一些平时求贤若渴的小公司也有所动作。 本来我以为关于劳动法的事情，许多人应该多多少少都应该了解。但最近在一些技术</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chanshuyi/p/how_to_combat_with_evil_boss.html</dc:identifier>
</item>
<item>
<title>微软跨平台ORM框架之EFCore - 千金不如一默</title>
<link>http://www.cnblogs.com/jixiaosa/p/10312143.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jixiaosa/p/10312143.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;EFCore是微软推出的跨平台ORM框架，想较于EF6.X版本，更加轻量级。EFCore目前已经更新到2.x。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;接下来用CodeFirst的方式来使用EFCore.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.创建控制台程序&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1237235/201901/1237235-20190123230702703-189139385.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.引入EFCore的Nuget包和Sqlserver的扩展（因为我这里用的Sqlserver数据库，若是别的数据库如Mysql引入相应的包即可）。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1237235/201901/1237235-20190123230901772-281771537.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1237235/201901/1237235-20190123231422308-22869021.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.创建继承成自DbContext上下文，并重载OnConfiguring方法来构建数据库连接字符串&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CoreDbContext : DbContext
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 重载OnConfiguring构建数据库连接字符串
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;optionsBuilder&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这里直接写的字符串，实际项目中写在配置文件中，然后读取。这里的EFCoreDB就是生成的数据库名&lt;/span&gt;
            &lt;span&gt;string&lt;/span&gt; connectionString = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;server=127.0.0.1;uid=sa;pwd=sa123;database=EFCoreDB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            optionsBuilder.UseSqlServer(connectionString);
        }
      
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.创建Person实体类，通过EFCore映射成数据库中的表。并在上下文中注册&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Person
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; ID { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Age { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; Status { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; DateTime CreateTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CoreDbContext : DbContext
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 重载OnConfiguring构建数据库连接字符串
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;optionsBuilder&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这里直接写的字符串，实际项目中写在配置文件中，然后读取&lt;/span&gt;
            &lt;span&gt;string&lt;/span&gt; connectionString = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;server=127.0.0.1;uid=sa;pwd=sasa;database=EFCoreDB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            optionsBuilder.UseSqlServer(connectionString);
        }
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 注册实体&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;Person&amp;gt; Person { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.在Program文件中初始化数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; context = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; CoreDbContext();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 告诉EFCore我们要创建数据库&lt;/span&gt;
&lt;span&gt;            context.Database.EnsureCreated();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Console.WriteLine(&quot;Hello World!&quot;);&lt;/span&gt;
&lt;span&gt;        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;6.启动程序，查看效果&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;数据库和Person表已生成&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1237235/201901/1237235-20190123233439641-1631728934.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 生成的表结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1237235/201901/1237235-20190123233957255-1513288728.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt; 这里解释一下，在实体中如果有名为ID的字段，或者实体名+ID的字段如：PersonID，那么EFCore生成的表会自动标识为主键。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;备注：上边用来创建的数据库的方法 context.Database.EnsureCreated(); 如果存在当前数据库则不会创建。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;那么增加了实体，该如何更新数据库呢？  context.Database.EnsureDeleted(); 这个方法顾名思义是用来删除数据库。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;先调用&lt;/strong&gt;EnsureDeleted 在调用 &lt;strong&gt;EnsureCreated 实现更新数据库的操作。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; context = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; CoreDbContext();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 删除数据库&lt;/span&gt;
&lt;span&gt;            context.Database.EnsureDeleted();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 告诉EFCore我们要创建数据库&lt;/span&gt;
&lt;span&gt;            context.Database.EnsureCreated();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Console.WriteLine(&quot;Hello World!&quot;);&lt;/span&gt;
&lt;span&gt;        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;好嘞！ 使用EFCore生成数据库和表就完成了。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 23 Jan 2019 15:55:00 +0000</pubDate>
<dc:creator>千金不如一默</dc:creator>
<og:description>EFCore是微软推出的跨平台ORM框架，想较于EF6.X版本，更加轻量级。EFCore目前已经更新到2.x。 接下来用CodeFirst的方式来使用EFCore. 1.创建控制台程序 2.引入EFC</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jixiaosa/p/10312143.html</dc:identifier>
</item>
<item>
<title>机器学习笔记  逻辑回归 - sdu20112013</title>
<link>http://www.cnblogs.com/sdu20112013/p/10196444.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sdu20112013/p/10196444.html</guid>
<description>&lt;h3&gt;逻辑回归&lt;/h3&gt;
&lt;p&gt;逻辑回归和线性回归其实有不少类似的地方,不同的是逻辑回归的$\hat y$是离散的.线性回归的$\hat y$是连续的.&lt;/p&gt;
&lt;p&gt;逻辑回归：拟合样本数据发生的概率,根据概率进行分类处理.&lt;/p&gt;
&lt;p&gt;逻辑回归,拟合样本发生的概率.&lt;br/&gt;$\hat p = f(x)$,之后根据概率的大小对样本做分类.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190122164212315-1064076469.png&quot; alt=&quot;&quot; width=&quot;162&quot; height=&quot;88&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通常,将逻辑回归用来解决分类问题.作为分类算法时,解决的是二分类问题.&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://www.cnblogs.com/sdu20112013/p/10186516.html&quot; target=&quot;_blank&quot;&gt;线性回归&lt;/a&gt;一文中,我们知道$\hat y = \theta ^T X_b$,但是这个值的取值范围是负无穷到正无穷,如果我们想要表达概率的话,希望找到一个函数,取值范围在0-1.&lt;/p&gt;
&lt;h4 id=&quot;Sigmoid_u51FD_u6570&quot;&gt;Sigmoid函数&lt;/h4&gt;
&lt;p&gt;在&lt;a href=&quot;https://www.cnblogs.com/sdu20112013/p/10266382.html&quot; target=&quot;_blank&quot;&gt;一文读懂svm&lt;/a&gt;中,我们也提到过这个函数,是常见核函数的一种.以后在讲神经网络的时候也会再看到它.&lt;/p&gt;
&lt;p&gt;$\hat p = \sigma(X_b \theta) =\frac 1 {1+e^{-X_b \theta}}$&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190110192356355-380693094.png&quot; alt=&quot;&quot; width=&quot;305&quot; height=&quot;85&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个函数,我想不用多解释了,学过高中数学的应该都能明白其取值在0-1之间.&lt;/p&gt;
&lt;p&gt;通过这个函数,我们可以把一个预测值转化为概率值,所以逻辑回归的概率模型可以表达为$$\hat p = \frac 1 {1+e^{-\theta ^T X_b}}$$.&lt;/p&gt;
&lt;p&gt;我们做这样一个假设.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123095646191-1240722019.png&quot; alt=&quot;&quot; width=&quot;116&quot; height=&quot;55&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样当有一个样本x过来,我们可以先计算出$\hat p$，再进而得到一个$\hat y$。&lt;/p&gt;
&lt;p&gt;那么此时我们的问题转变为：怎样求得这样的$\theta$，使得我们预测的$\hat y$与真实的y之间误差最小？&lt;/p&gt;

&lt;h4&gt;损失函数&lt;/h4&gt;
&lt;p&gt;由于我们的$\hat y$有两种情况,是二元的,离散的.所以我们的损失函数也分两种情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123110534206-2105213586.png&quot; alt=&quot;&quot; width=&quot;234&quot; height=&quot;72&quot;/&gt;&lt;/p&gt;
&lt;p&gt;怎么理解？当y=1时,p越小,我们越倾向于把$\hat y$归为0. 这时候错的越离谱.   当y=0时,p越大,我们越认为$\hat y$归为1.&lt;/p&gt;

&lt;p&gt;符合上述描述的损失函数可以表达如下：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123105218178-914524811.png&quot; alt=&quot;&quot; width=&quot;237&quot; height=&quot;63&quot;/&gt;&lt;/p&gt;
&lt;p&gt;转换为统一的表达形式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123105229755-570311054.png&quot; alt=&quot;&quot; width=&quot;209&quot; height=&quot;28&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面是单个样本的cost，这样对一个有着m个样本的系统来说,损失函数可以表达为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123105402215-1071568009.png&quot; alt=&quot;&quot; width=&quot;254&quot; height=&quot;35&quot;/&gt;&lt;/p&gt;
&lt;p&gt;即：&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123105527979-1918562808.png&quot; alt=&quot;&quot; width=&quot;299&quot; height=&quot;44&quot;/&gt;&lt;/p&gt;

&lt;h4&gt;求损失函数的梯度&lt;/h4&gt;
&lt;p&gt;推导不困难,但是有点复杂.......&lt;/p&gt;
&lt;h4&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123154103522-807776534.png&quot; alt=&quot;&quot; width=&quot;223&quot; height=&quot;172&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123154120086-1680917499.png&quot; alt=&quot;&quot; width=&quot;228&quot; height=&quot;157&quot;/&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123154219248-2054151449.png&quot; alt=&quot;&quot; width=&quot;406&quot; height=&quot;189&quot;/&gt;&lt;/p&gt;
&lt;p&gt;即&lt;img src=&quot;https://img2018.cnblogs.com/blog/583030/201901/583030-20190123154337831-768536463.png&quot; alt=&quot;&quot; width=&quot;249&quot; height=&quot;135&quot;/&gt;，和我们在线性回归中算出的梯度形式很像.&lt;/p&gt;

&lt;p&gt;有了梯度,就可以用梯度下降法求出使得$J(\theta)$最小的$\theta$。&lt;/p&gt;

</description>
<pubDate>Wed, 23 Jan 2019 15:51:00 +0000</pubDate>
<dc:creator>sdu20112013</dc:creator>
<og:description>逻辑回归 逻辑回归和线性回归其实有不少类似的地方,不同的是逻辑回归的$\hat y$是离散的.线性回归的$\hat y$是连续的. 逻辑回归：拟合样本数据发生的概率,根据概率进行分类处理. 逻辑回归,</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sdu20112013/p/10196444.html</dc:identifier>
</item>
<item>
<title>寒冬储粮 - LieBrother</title>
<link>http://www.cnblogs.com/liebrother/p/10312113.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liebrother/p/10312113.html</guid>
<description>&lt;p&gt;个人博客原文：&lt;br/&gt;&lt;a href=&quot;http://www.liebrother.com/share-mind-map&quot;&gt;寒冬储粮&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.liebrother.com/upload/852d9920ae5e42dd9be8dcdf6533439d_0046_01.jpg&quot; alt=&quot;鸟儿&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上次发了这篇文章 &lt;a href=&quot;https://mp.weixin.qq.com/s/h2-qaF3HVwUe0vbo57ldRw&quot;&gt;跳槽 &amp;amp; 思维导图&lt;/a&gt;，里面只是贴了一个图，也不是很清晰，主要是想给大家看一下思维导图记录知识点，供大家参考一下，后面有小伙伴在咨询能否把思维导图原件分享出来，分享出来肯定是可以的，这些都不是我的知识，都是网上的资料，我只是把它们记录在思维导图。&lt;/p&gt;
&lt;p&gt;今天把这些资料整理了，有的其实还没记录到位，还有很多遗漏的知识点，用我个人力量也很难把这些知识点都总结起来。因此，在把资料上传到百度网盘和 github 之间，我选择了后者，因为大家可以把自己觉得有用的知识点也提交上来，或者在已经存在的思维导图基础上补充进去，让大家都能学习到，也可以多多交流。&lt;/p&gt;
&lt;p&gt;有一点想强调的：&lt;strong&gt;思维导图就跟人的思维一样，每个人的思维都是不一样的，所以其他人记录下来的东西不一定适合你，最好大家自己都能养成把知识点用思维导图记录的习惯，自己记录下的东西才真正属于你的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;年底了，希望大家过个好年，猪年一起牛逼。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/1CSH1/liebrother/tree/master/interview&quot;&gt;粮食链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目录如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.liebrother.com/upload/19baaeb98ecb4f9aaa9f33b171154a9d_share.jpg&quot; alt=&quot;share&quot;/&gt;&lt;/p&gt;
&lt;p&gt;推荐阅读：&lt;br/&gt;&lt;a href=&quot;https://mp.weixin.qq.com/mp/homepage?__biz=MzIxMzgwMTAyMg==&amp;amp;hid=2&amp;amp;sn=c97b64288d92312f57d3c8298f8d8888&quot;&gt;公众号之设计模式系列文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.liebrother.com/upload/df81ac224abe46b38131a0e78f4dcf9c_wechat.jpg&quot; alt=&quot;公众号&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 23 Jan 2019 15:42:00 +0000</pubDate>
<dc:creator>LieBrother</dc:creator>
<og:description>猪年一起牛逼。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liebrother/p/10312113.html</dc:identifier>
</item>
<item>
<title>css之标签选择器 - cherry小樱桃</title>
<link>http://www.cnblogs.com/surewing/p/10312111.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/surewing/p/10312111.html</guid>
<description>&lt;p&gt;标签（空格分隔）： 标签选择器&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;选择器定义&quot;&gt;选择器定义：&lt;/h2&gt;
&lt;p&gt;在一个HTML页面中会有很多很多的元素，不同的元素可能会有不同的样式，某些元素又需要设置相同的样式，选择器就是用来从HTML页面中查找特定元素的，找到元素之后就可以为它们设置样式了。选择器为样式规则指定一个作用范围。&lt;/p&gt;
&lt;h2 id=&quot;基础选择器包含&quot;&gt;基础选择器包含：&lt;/h2&gt;
&lt;p&gt;1.标签选择器&lt;br/&gt;2.类选择器&lt;br/&gt;3.ID选择器&lt;br/&gt;4.通用选择器&lt;/p&gt;
&lt;h2 id=&quot;标签选择器&quot;&gt;标签选择器：&lt;/h2&gt;
&lt;p&gt;顾名思义通过标签名来选择元素；&lt;br/&gt;例如：&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;p {
  color: red;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将所有的p标签设置字体颜色为红色。&lt;br/&gt;如下代码：&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;css的选择器&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        /*标签选择器*/
        /*p{*/
            /*color:red;*/
            /*font-size:20px;*/
        
        /*}*/
        /*span{*/
            /*color:yellow;*/
            /*font-size:20px;*/
        
        /*}*/
        body{
            color: gray;
            font-size: 12px;

        }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;!--
css选择器
1.标签选择器：
        标签选择器，可以选中所有的标签，比如div,ul,li,p等等；
        不管标签的藏得多深，都能选中；
        选中的是所有的，不是某一个，所以说这个标签选择器选中的是&quot;共性&quot;的属性，而不是&quot;特性&quot;


--&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;我是一个段落&amp;lt;/p&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;span&amp;gt;
                    想想吧！！！
                &amp;lt;/span&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;

    &amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;p&amp;gt;
                        藏得深的段落
                    &amp;lt;/p&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;id选择器&quot;&gt;id选择器：&lt;/h2&gt;
&lt;p&gt;通过元素的ID值选择元素：&lt;br/&gt;例如：&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;#i1 {
  color: red;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将id值为i1的元素字体颜色设置为红色。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;css的选择器&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        /*id选择器*/
        #box{
            color: green;
        }
        #s1{
            color: red;
        }
        #s2{
            color: red;
            font-size:16px;
        }

    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;!--
css选择器
1.标签选择器：
        标签选择器，可以选中所有的标签，比如div,ul,li,p等等；
        不管标签的藏得多深，都能选中；
        选中的是所有的，不是某一个，所以说这个标签选择器选中的是&quot;共性&quot;的属性，而不是&quot;特性&quot;
2.id 选择器：
    #选中id
    同一个页面中id不能重复，
    是不是所有的标签都可以加标签呢？任何的标签都可以设置ID，但是ID的命名一定要规范，字母开头后边可以数字，下划线等等；



--&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;我是一个段落&amp;lt;/p&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;span&amp;gt;
                    想想吧！！！
                &amp;lt;/span&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;

    &amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;p&amp;gt;
                        藏得深的段落
                    &amp;lt;/p&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div id=&quot;box&quot;&amp;gt;
        &amp;lt;span id=&quot;s1&quot;&amp;gt;123&amp;lt;/span&amp;gt;
        &amp;lt;span id=&quot;s2&quot;&amp;gt;234&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;类选择器&quot;&gt;类选择器：&lt;/h2&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;css的选择器&amp;lt;/title&amp;gt;
    &amp;lt;style type=&quot;text/css&quot;&amp;gt;
        /*id选择器*/
        #box{
            color: green;
        }
        #s1{
            color: red;
        }
        #s2{
            color: red;
            font-size:16px;
        }
        .titile{
            color: yellowgreen;
            font-size: 12px;
        }
        .aaaa{
            color: red;
        }

    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;!--
css选择器
1.标签选择器：
        标签选择器，可以选中所有的标签，比如div,ul,li,p等等；
        不管标签的藏得多深，都能选中；
        选中的是所有的，不是某一个，所以说这个标签选择器选中的是&quot;共性&quot;的属性，而不是&quot;特性&quot;
2.id 选择器：
    #选中id
    同一个页面中id不能重复，
    是不是所有的标签都可以加标签呢？任何的标签都可以设置ID，但是ID的命名一定要规范，字母开头后边可以数字，下划线等等；
3.类选择器：
    所谓类：.，class 与id非常的相似，可以作用任何标签，
    但是id特性是唯一，但是类是可以重复的，叫做归类；
    同一个标签中可以携带多个类；多个类之间用空格隔开；

--&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;我是一个段落&amp;lt;/p&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;
                &amp;lt;span&amp;gt;
                    想想吧！！！
                &amp;lt;/span&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;

    &amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;p&amp;gt;
                        藏得深的段落
                    &amp;lt;/p&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div id=&quot;box&quot;&amp;gt;
        &amp;lt;span id=&quot;s1&quot;&amp;gt;123&amp;lt;/span&amp;gt;
        &amp;lt;span id=&quot;s2&quot;&amp;gt;234&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;h3 id=&quot;h&quot; class=&quot;titile xiaoma egon aaaa&quot;&amp;gt;woshi yige sanji bieti &amp;lt;/h3&amp;gt;
        &amp;lt;h3 class=&quot;titile&quot;&amp;gt;woshi yige sanji bieti &amp;lt;/h3&amp;gt;
        &amp;lt;h3 class=&quot;titile&quot;&amp;gt;woshi yige sanji bieti &amp;lt;/h3&amp;gt;
        &amp;lt;h3&amp;gt;woshi yige sanji bieti &amp;lt;/h3&amp;gt;
        &amp;lt;h3&amp;gt;woshi yige sanji bieti &amp;lt;/h3&amp;gt;
        &amp;lt;h3&amp;gt;woshi yige sanji bieti &amp;lt;/h3&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;类选择器：具体的可以查看代码注释里面；&lt;/p&gt;
&lt;h2 id=&quot;如何正确的使用类选择器及总结&quot;&gt;如何正确的使用类选择器及总结：&lt;/h2&gt;
&lt;p&gt;需求：&lt;br/&gt;段落1：40px,绿色&lt;br/&gt;段落2：绿色，下划线&lt;br/&gt;段落3：下划线，40px&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;练习&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        .lv{
            color: green;
            font-size: 40px
        ;
        }
        .l2{
            text-decoration: underline;
            color: green;
        }
        .l3{
            font-size: 40px;
            text-decoration: underline;
            

        }
    &amp;lt;/style&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p class=&quot;lv&quot;&amp;gt;段落1&amp;lt;/p&amp;gt;
        &amp;lt;p class=&quot;l2&quot;&amp;gt;段落2&amp;lt;/p&amp;gt;
        &amp;lt;p class=&quot;l3&quot;&amp;gt;段落3&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;方案2：&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;练习&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        .lv{
            color: green;
        }
        .un{
            text-decoration: underline;
        }
        .big{
            font-size: 40px;

        }
    &amp;lt;/style&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p class=&quot;lv big&quot;&amp;gt;段落1&amp;lt;/p&amp;gt;
        &amp;lt;p class=&quot;lv un&quot;&amp;gt;段落2&amp;lt;/p&amp;gt;
        &amp;lt;p class=&quot;un big&quot;&amp;gt;段落3&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;总结：不要试图，用一个类的页面写完，这个标签要携带多个类共同设置样式，&lt;br/&gt;2.每个类要尽可能的小，有公共的概念，能够让更多的标签使用&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;总结：&lt;br/&gt;到底是用id修改样式还是用class呢？&lt;br/&gt;答案：尽可能的使用class，除非特殊的原因，ID是用来js，也就是说js是通过ID来获取到标签的，后边我们还会说的这个内容；在css中尽量不要用id，（一般的来说，css用class,js用ID，更像是一种约定）&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
</description>
<pubDate>Wed, 23 Jan 2019 15:41:00 +0000</pubDate>
<dc:creator>cherry小樱桃</dc:creator>
<og:description>标签（空格分隔）： 标签选择器 选择器定义： 在一个HTML页面中会有很多很多的元素，不同的元素可能会有不同的样式，某些元素又需要设置相同的样式，选择器就是用来从HTML页面中查找特定元素的，找到元素</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/surewing/p/10312111.html</dc:identifier>
</item>
</channel>
</rss>