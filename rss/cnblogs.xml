<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Elasticsearch系列---深入全文搜索 - 清茶豆奶</title>
<link>http://www.cnblogs.com/huangying2124/p/12400345.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huangying2124/p/12400345.html</guid>
<description>&lt;h3 id=&quot;概要&quot;&gt;概要&lt;/h3&gt;
&lt;p&gt;本篇介绍怎样在全文字段中搜索到最相关的文档，包含手动控制搜索的精准度，搜索条件权重控制。&lt;/p&gt;
&lt;h3 id=&quot;手动控制搜索的精准度&quot;&gt;手动控制搜索的精准度&lt;/h3&gt;
&lt;p&gt;搜索的两个重要维度：相关性(Relevance)和分析(Analysis)。&lt;/p&gt;
&lt;p&gt;相关性是评价查询条件与结果的相关程度，并对相关程度进行排序，一般使用TF/IDF方法。&lt;/p&gt;
&lt;p&gt;分析是指将索引文档与查询条件规范化的一个过程，目的是建立倒排索引时，尽可能地提升召回率。&lt;/p&gt;
&lt;h4 id=&quot;match查询原理&quot;&gt;match查询原理&lt;/h4&gt;
&lt;p&gt;匹配查询match是核心查询语法，它的主要应用场景就是全文搜索，我们举一个示例：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: &quot;wake&quot;
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Elasticsearch执行的步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;检索字段类型：match的字段name为text类型，是一个analyzed的字段，那么查询条件的字符串也应该被analyzed。&lt;/li&gt;
&lt;li&gt;分析查询字符串：将查询字符串&quot;wake&quot;传入分词器中（与mapping的分词器一致），因为只有一个单词，所以match最终执行的是单个底层的term查询。&lt;/li&gt;
&lt;li&gt;查找匹配文档：用term倒排索引中查找wake然后获取一组包含该词的文档。&lt;/li&gt;
&lt;li&gt;为每个文档评分：用term查询计算每个文档相关度评分，即TF、IDF、length norm算法。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;得到的结果如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;{
  &quot;took&quot;: 1,
  &quot;timed_out&quot;: false,
  &quot;_shards&quot;: {
    &quot;total&quot;: 5,
    &quot;successful&quot;: 5,
    &quot;skipped&quot;: 0,
    &quot;failed&quot;: 0
  },
  &quot;hits&quot;: {
    &quot;total&quot;: 1,
    &quot;max_score&quot;: 0.2876821,
    &quot;hits&quot;: [
      {
        &quot;_index&quot;: &quot;music&quot;,
        &quot;_type&quot;: &quot;children&quot;,
        &quot;_id&quot;: &quot;2&quot;,
        &quot;_score&quot;: 0.2876821,
        &quot;_source&quot;: {
          &quot;id&quot;: &quot;a810fad4-54cb-59a1-9b7a-82adb46fa58d&quot;,
          &quot;author&quot;: &quot;John Smith&quot;,
          &quot;name&quot;: &quot;wake me, shark me&quot;,
          &quot;content&quot;: &quot;don't let me sleep too late, gonna get up brightly early in the morning&quot;,
          &quot;language&quot;: &quot;english&quot;,
          &quot;tags&quot;: &quot;enlighten&quot;,
          &quot;length&quot;: 55,
          &quot;isRelease&quot;: true,
          &quot;releaseDate&quot;: &quot;2019-12-21&quot;
        }
      }
    ]
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;因为样本数据的问题，暂时只有一条文档匹配。&lt;/p&gt;
&lt;h4 id=&quot;搜索name中包含you或sunshine的文档&quot;&gt;搜索name中包含&quot;you&quot;或&quot;sunshine&quot;的文档&lt;/h4&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: &quot;you sunshine&quot;
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;搜索name中包含you和sunshine的文档&quot;&gt;搜索name中包含&quot;you&quot;和&quot;sunshine&quot;的文档&lt;/h4&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: {
        &quot;query&quot;: &quot;you sunshine&quot;,
        &quot;operator&quot;: &quot;and&quot;
      }
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;搜索精准度控制的第一步：使用and关键字。如果希望所有搜索关键字都要匹配，可以用and来实现。&lt;/p&gt;
&lt;h4 id=&quot;搜索youmysunshineteeth-4个关键字中至少包含3个的文档&quot;&gt;搜索&quot;you&quot;、&quot;my&quot;、&quot;sunshine&quot;、&quot;teeth&quot; 4个关键字中，至少包含3个的文档&lt;/h4&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: {
        &quot;query&quot;: &quot;you my sunshine teeth&quot;,
        &quot;minimum_should_match&quot;: &quot;75%&quot;
      }
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;搜索精准度控制的第二步：指定至少匹配其中的多少个关键字，才能作为结果返回&lt;/p&gt;
&lt;h4 id=&quot;bool组合多个搜索条件&quot;&gt;bool组合多个搜索条件&lt;/h4&gt;
&lt;p&gt;用bool组合，可以完成更加个性化的搜索需求，例如我们查找名称包含&quot;sunshine&quot;，但不包含&quot;teeth&quot;，允许出现&quot;you&quot;、&quot;my&quot;关键字，示例如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;must&quot;:     { &quot;match&quot;: { &quot;name&quot;: &quot;sunshine&quot; }},
      &quot;must_not&quot;: { &quot;match&quot;: { &quot;name&quot;: &quot;teeth&quot;  }},
      &quot;should&quot;: [
                  { &quot;match&quot;: { &quot;name&quot;: &quot;my&quot; }},
                  { &quot;match&quot;: { &quot;name&quot;: &quot;you&quot;   }}
      ]
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;should对相关度评分计算的影响&quot;&gt;should对相关度评分计算的影响&lt;/h4&gt;
&lt;p&gt;以上面的bool为例子，我们只讨论匹配的文档，按自己的理解，对文档进行粗略排名：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;最符合搜索条件的&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;文档中同时包含should中的&quot;my&quot;、&quot;you&quot;两个关键字。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;很符合搜索条件的&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;文档中包含should中的&quot;my&quot;或&quot;you&quot;两个关键字的其中一个。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;符合搜索条件的&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;文档中不包含should中的&quot;my&quot;和&quot;you&quot;。&lt;/p&gt;
&lt;p&gt;像must not这种硬性条件，不匹配都不会出现在结果集里，主要起到排除文档作用，不参与评分计算。但should也能影响相关度评分，匹配得越多，评分就越高。&lt;/p&gt;
&lt;p&gt;bool查询会为每个文档计算相关度评分_score ，再将所有匹配的 must 和 should 语句的分数 _score 求和，最后除以 must 和 should 语句的总数。&lt;/p&gt;
&lt;p&gt;这里不详细讲解评分计算的具体细节和分数，了解should对其有影响即可。&lt;/p&gt;
&lt;h4 id=&quot;should匹配原则&quot;&gt;should匹配原则&lt;/h4&gt;
&lt;p&gt;如果查询条件中有must存在，那么should匹配的数量不作要求；如果没有must，则should必须要匹配一个，要不然全是should条件的，所有文档都能匹配，就失去了搜索的意义。&lt;/p&gt;
&lt;p&gt;如果带上minimum_should_match，那么就能做更精细的控制，可以指定必须要匹配几个should，才能返回结果集，如下两个示例是等同的：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: {
        &quot;query&quot;: &quot;you my sunshine teeth&quot;,
        &quot;minimum_should_match&quot;: &quot;75%&quot;
      }
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;should&quot;: [
        { &quot;match&quot;: { &quot;name&quot;: &quot;you&quot; }},
        { &quot;match&quot;: { &quot;name&quot;: &quot;my&quot;   }},
        { &quot;match&quot;: { &quot;name&quot;: &quot;sunshine&quot;   }},
        { &quot;match&quot;: { &quot;name&quot;: &quot;teeth&quot;   }}
      ],
      &quot;minimum_should_match&quot;: 3 
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;多词查询的底层原理&quot;&gt;多词查询的底层原理&lt;/h3&gt;
&lt;p&gt;上一节当中我们提到的多词match的查询，Elasticsearch会将多词的term查询转换为bool查询，or查询使用should替代， and查询使用must，我们回顾一下上一节的示例：&lt;/p&gt;
&lt;h4 id=&quot;or查询&quot;&gt;or查询&lt;/h4&gt;
&lt;p&gt;下面两个查询是等价的&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: &quot;you sunshine&quot;
    }
  }
}

GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;should&quot;: [
        {&quot;term&quot;: {&quot;name&quot;: &quot;you&quot;}},
        {&quot;term&quot;: {&quot;name&quot;: &quot;sunshine&quot;}}
      ]
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;and查询&quot;&gt;and查询&lt;/h4&gt;
&lt;p&gt;下面两个查询也是等价的&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: {
        &quot;query&quot;: &quot;you sunshine&quot;,
        &quot;operator&quot;: &quot;and&quot;
      }
    }
  }
}

GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;must&quot;: [
        {&quot;term&quot;: {&quot;name&quot;: &quot;you&quot;}},
        {&quot;term&quot;: {&quot;name&quot;: &quot;sunshine&quot;}}
      ]
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;minimum_should_match语法&quot;&gt;minimum_should_match语法&lt;/h4&gt;
&lt;p&gt;下面两个查询仍然是等价的&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;match&quot;: {
      &quot;name&quot;: {
        &quot;query&quot;: &quot;you my sunshine teeth&quot;,
        &quot;minimum_should_match&quot;: &quot;75%&quot;
      }
    }
  }
}

GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;should&quot;: [
        { &quot;match&quot;: { &quot;name&quot;: &quot;you&quot; }},
        { &quot;match&quot;: { &quot;name&quot;: &quot;my&quot;   }},
        { &quot;match&quot;: { &quot;name&quot;: &quot;sunshine&quot;   }},
        { &quot;match&quot;: { &quot;name&quot;: &quot;teeth&quot;   }}
      ],
      &quot;minimum_should_match&quot;: 3 
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;minimum_should_match的值可以改，也会根据实际的条件来换算，比如我写个75%，但实际的搜索词条就只有3个，那么minimum_should_match的值就会变成66.6%，即至少需要匹配2条。&lt;/p&gt;
&lt;h3 id=&quot;查询语句权重控制&quot;&gt;查询语句权重控制&lt;/h3&gt;
&lt;p&gt;bool查询里的多条件并列，默认权重是一样的，但实际的搜索当中，我们可能会特别某一些关键词给予特殊的关注，希望匹配关注度高的文档排序能靠前一些，boost语法可以帮助我们实现这一需求。&lt;/p&gt;
&lt;p&gt;boost默认是1，可以在查询语句中自行设置，如下示例，我希望sunshine的权重要大一些：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;GET /music/children/_search
{
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;must&quot;: {
        &quot;match&quot;: {
          &quot;name&quot;: {
            &quot;query&quot;: &quot;sunshine&quot;,
            &quot;boost&quot;: 2
          }
        }
      },
      &quot;should&quot;: [
        {
          &quot;match&quot;: {
            &quot;name&quot;: &quot;my&quot;
          }
        },
        {
          &quot;match&quot;: {
            &quot;name&quot;: &quot;you&quot;
          }
        }
      ]
    }
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在查询结果里可以看到，符合条件的文档的_score值变得更高一些。boost值的设置不是简单的线性增长，boost设置为2不表示_score也会简单的翻一倍，boost值在计算时有归一化处理，但具体的计算数值及过程不在此篇作详细的解释。&lt;/p&gt;
&lt;h3 id=&quot;评分计算的小问题&quot;&gt;评分计算的小问题&lt;/h3&gt;
&lt;p&gt;我们的演示环境是单node多shard模式的，有些示例发现评分会出现特别高的现象，给人感觉不是很准确，这是为什么呢？&lt;/p&gt;
&lt;h4 id=&quot;不准确的原因&quot;&gt;不准确的原因&lt;/h4&gt;
&lt;p&gt;我们简单回顾一下评分计算的几个算法：TF、IDF、Length Norm，其中IDF本意上是在所有的document中，搜索关键词的出现次数，实际上IDF默认在本地shard执行的次数统计，一个shard只包含部分数据，不能代表所有数据，这样做比较高效，但会带来误差，也是造成结果不准确的原因。&lt;/p&gt;
&lt;p&gt;演示环境中出现较大偏差，还有一个原因是演示数据相对较少，如果只有一个document，并且该document符合查询条件，那么IDF的分数就会变得很高。&lt;/p&gt;
&lt;h4 id=&quot;解决办法&quot;&gt;解决办法&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;生产环境数据量相对较大，默认使用_id进行路由，在概率分布下，其实每个shard的数据基本上比较均匀，不用太担心演示环境的这种情况。&lt;/li&gt;
&lt;li&gt;演示环境可以将primary shard设置为1，只有一个shard，那IDF的值肯定是对的。&lt;/li&gt;
&lt;li&gt;演示环境进行搜索时，带上search_type=dfs_query_then_fetch参数，会将local IDF取出来计算global IDF。注意性能问题，生产上禁用。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;
&lt;p&gt;本篇主要介绍了全文搜索几种手动控制精度的方式：逻辑操作符变换、should命中率设置、权重调整等手段，最后对评分计算的小问题进行的简单描述，谢谢。&lt;/p&gt;
&lt;p&gt;专注Java高并发、分布式架构，更多技术干货分享与心得，请关注公众号：Java架构社区&lt;br/&gt;可以扫左边二维码添加好友，邀请你加入Java架构社区微信群共同探讨技术&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1834889/202003/1834889-20200303074927076-1724862603.jpg&quot; alt=&quot;Java架构社区&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Mar 2020 23:49:00 +0000</pubDate>
<dc:creator>清茶豆奶</dc:creator>
<og:description>概要 本篇介绍怎样在全文字段中搜索到最相关的文档，包含手动控制搜索的精准度，搜索条件权重控制。 手动控制搜索的精准度 搜索的两个重要维度：相关性(Relevance)和分析(Analysis)。 相关</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/huangying2124/p/12400345.html</dc:identifier>
</item>
<item>
<title>percona-toolkit 之 【pt-query-digest】使用 - jyzhou</title>
<link>http://www.cnblogs.com/zhoujinyi/p/12392692.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhoujinyi/p/12392692.html</guid>
<description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;关于&lt;a href=&quot;https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html&quot; target=&quot;_blank&quot;&gt;pt-query-digest&lt;/a&gt;的使用场景和方法在&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/zhoujinyi/p/12374565.html&quot;&gt;percona-toolkit 之 【pt-query-digest】介绍&lt;/a&gt;文章里已经做了详细说明，现在开始介绍下如何使用，以及常用的命令。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;使用场景 &lt;/h2&gt;
&lt;p&gt;&lt;span&gt;在上一篇&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/zhoujinyi/p/12374565.html&quot;&gt;percona-toolkit 之 【pt-query-digest】介绍&lt;/a&gt;文章里已经介绍了，&lt;a href=&quot;https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html&quot; target=&quot;_blank&quot;&gt;pt-query-digest&lt;/a&gt;可以从logs、processlist、和tcpdump 来分析MySQL的状况，logs包括slow log、general log、binlog。也可以把分析结果输出到文件中，或则把文件写到表中。使用方法：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;[&lt;/span&gt;&lt;span&gt;OPTIONS&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;FILES&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;DSN&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;下面我们开始说明日常的一些操作方法。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;一 日志类型方面&lt;/h3&gt;
&lt;h3&gt;1. slow log：--type=slowlog&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;属性&lt;/strong&gt;：属性=values&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
$VAR1 &lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
  Lock_time &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0.000122&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  Query_time &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;6.405714&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  Rows_examined &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  Rows_sent &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  Thread_id &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;165&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  arg &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;select user,host,sleep(0.8) from user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  bytes &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;37&lt;/span&gt;&lt;span&gt;,
  cmd &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Query&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  db &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  fingerprint &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;select user,host,sleep(?) from user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  host &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;192.168.100.222&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  ip &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;192.168.163.132&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  pos_in_log &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;4779&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;timestamp&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1583111641&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  ts &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;2020-03-02T01:14:01&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;user&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;zjy&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;分析报告分为二部分说明：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一部分：总体概况说明&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析消耗的用户CPU时间，系统CPU时间，物理内存占用大小，虚拟内存占用大小&lt;/span&gt;
# 190ms &lt;span&gt;user&lt;/span&gt; time, 10ms system time, &lt;span&gt;34&lt;/span&gt;.25M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.80M vsz
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析的当前日期&lt;/span&gt;
# &lt;span&gt;Current&lt;/span&gt; date: Sun Mar  &lt;span&gt;1&lt;/span&gt; &lt;span&gt;23&lt;/span&gt;:&lt;span&gt;55&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析的主机名&lt;/span&gt;
&lt;span&gt;# Hostname: test2
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析的文件名&lt;/span&gt;
# Files: test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析的整体情况：语句总数量，唯一语句数量，QPS和并发数&lt;/span&gt;
# Overall: &lt;span&gt;8&lt;/span&gt; total, &lt;span&gt;4&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.03&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.08x concurrency ________________
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析日志的时间范围&lt;/span&gt;
# Time range: &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;47&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;54&lt;/span&gt;:&lt;span&gt;16&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt;属性 　　　　　　　　　总计      最小     最大     平均    95%  　标准    中等&lt;/span&gt;
# Attribute          total     &lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 执行时间&lt;/span&gt;
# &lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time            21s      2s      5s      3s      5s   986ms      2s
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 锁时间&lt;/span&gt;
&lt;span&gt;# Lock time           16ms   190us     6ms     2ms     6ms     2ms     2ms
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 发送到客户端的行数&lt;/span&gt;
# Rows sent             &lt;span&gt;36&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;    &lt;span&gt;4.50&lt;/span&gt;    &lt;span&gt;9.83&lt;/span&gt;    &lt;span&gt;2.10&lt;/span&gt;    &lt;span&gt;3.89&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 扫描行数&lt;/span&gt;
# Rows examine          &lt;span&gt;36&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;    &lt;span&gt;4.50&lt;/span&gt;    &lt;span&gt;9.83&lt;/span&gt;    &lt;span&gt;2.10&lt;/span&gt;    &lt;span&gt;3.89&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询的字节数&lt;/span&gt;
# Query size           &lt;span&gt;451&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;   &lt;span&gt;56.38&lt;/span&gt;   &lt;span&gt;62.76&lt;/span&gt;   &lt;span&gt;13.61&lt;/span&gt;   &lt;span&gt;62.76&lt;/span&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;如果在此地方想新增一些属性，可以用--filter来进行设置 比如：--filter '($event-&amp;gt;{Row_ratio} = $event-&amp;gt;{Rows_sent}/($event-&amp;gt;{Rows_examined}))' ，会新增Row ratio属性&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 概况统计&lt;/span&gt;
&lt;span&gt;# Profile 
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 排名，查询指纹，总响应时间及百分比，执行次数，执行平均响应时间，响应时间Variance-to-mean的比率，查询对象&lt;/span&gt;
# Rank Query ID                           Response time Calls R&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x5C3D88030F0258F752A830BD792DF4BA&lt;/span&gt; &lt;span&gt;10.0392&lt;/span&gt; &lt;span&gt;47.7&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;5&lt;/span&gt; &lt;span&gt;2.0078&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; host
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x02DFE94A93ADC62623BF2E1E98C17EC3&lt;/span&gt;  &lt;span&gt;5.0108&lt;/span&gt; &lt;span&gt;23.8&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;5.0108&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; host
#    &lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;0x6D482C964694712F6B3445151D7A429C&lt;/span&gt;  &lt;span&gt;3.0108&lt;/span&gt; &lt;span&gt;14.3&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;3.0108&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; x
#    &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;0x8430AB741BBC096B102EDAA5ACD08366&lt;/span&gt;  &lt;span&gt;3.0033&lt;/span&gt; &lt;span&gt;14.3&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;3.0033&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; x&lt;br/&gt;# &lt;span&gt;&lt;strong&gt;MISC&lt;/strong&gt; &lt;strong&gt;0xMISC　　　　　　　　　　　　　　　　　　2.0002 3.3%　　　 1 2.9911  0.00 &amp;lt;35 ITEMS&amp;gt;    #剩余查询的显示&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;第二部分：查询SQL概况说明&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询的顺序号（和第一部分的Rank对应），QPS，并发，查询指纹，&lt;/span&gt;
# Query &lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0.08&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.16x concurrency, ID &lt;span&gt;0x5C3D88030F0258F752A830BD792DF4BA&lt;/span&gt; at byte &lt;span&gt;739&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;&lt;span&gt;
--&lt;/span&gt;&lt;span&gt; 响应比率&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 分析查询的时间范围&lt;/span&gt;
# Time range: &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;53&lt;/span&gt;:&lt;span&gt;12&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;54&lt;/span&gt;:&lt;span&gt;16&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 属性，百分比，总数，最小，最大，95%，标准，中等&lt;/span&gt;
# Attribute    pct   total     &lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 次数&lt;/span&gt;
# &lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;55&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 执行时间&lt;/span&gt;
# &lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;38&lt;/span&gt;     10s      2s      2s      2s      2s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      2s
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 锁时间&lt;/span&gt;
# Lock time     &lt;span&gt;38&lt;/span&gt;&lt;span&gt;     7ms   209us     6ms     1ms     6ms     2ms   273us
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 发送到客户端的行数&lt;/span&gt;
# Rows sent     &lt;span&gt;43&lt;/span&gt;      &lt;span&gt;20&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 扫描行数&lt;/span&gt;
# Rows examine  &lt;span&gt;43&lt;/span&gt;      &lt;span&gt;20&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询的字节数&lt;/span&gt;
# Query size    &lt;span&gt;63&lt;/span&gt;     &lt;span&gt;325&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 发送和扫描行数比值，用第一部分提到的--filter来进行设置&lt;/span&gt;
# Row ratio     &lt;span&gt;55&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# String:
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 数据库&lt;/span&gt;
&lt;span&gt;# Databases    test
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 主机&lt;/span&gt;
&lt;span&gt;# Hosts        test2
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询用户&lt;/span&gt;
&lt;span&gt;# Users        root
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询执行时间分布的直方图：1微妙、10微妙、100微妙、10毫秒、100毫秒，1秒，10秒以上查询的分布情况&lt;/span&gt;
&lt;span&gt;# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 表信息&lt;/span&gt;
&lt;span&gt;# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`host`\G
&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 执行计划信息&lt;/span&gt;
# EXPLAIN &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询SQL&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,hostname,agent_version,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; host &lt;span&gt;where&lt;/span&gt; id &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;\G    &lt;strong&gt;#如果是非select查询：insert，delete，update，则会转换成select进行explain&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;使用场景：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;①：分析所有的慢查询：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;strong&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('65d824e4-a58f-47fd-bd6c-e1e191bb3ea8')&quot; readability=&quot;45&quot;&gt;&lt;img id=&quot;code_img_closed_65d824e4-a58f-47fd-bd6c-e1e191bb3ea8&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_65d824e4-a58f-47fd-bd6c-e1e191bb3ea8&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('65d824e4-a58f-47fd-bd6c-e1e191bb3ea8',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_65d824e4-a58f-47fd-bd6c-e1e191bb3ea8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;85&quot;&gt;
&lt;pre&gt;
# 180ms &lt;span&gt;user&lt;/span&gt; time, 10ms system time, &lt;span&gt;34&lt;/span&gt;.17M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.79M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;50&lt;/span&gt;:&lt;span&gt;10&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;15&lt;/span&gt; total, &lt;span&gt;4&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.01&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.02x concurrency _______________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;47&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T16:&lt;span&gt;32&lt;/span&gt;:&lt;span&gt;44&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time            55s      2s      6s      4s      5s      1s      3s
# Lock time           20ms   126us     6ms     1ms     6ms     2ms   273us
# Rows sent             &lt;/span&gt;&lt;span&gt;99&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;    &lt;span&gt;6.60&lt;/span&gt;    &lt;span&gt;9.83&lt;/span&gt;    &lt;span&gt;3.17&lt;/span&gt;    &lt;span&gt;3.89&lt;/span&gt;&lt;span&gt;
# Rows examine          &lt;/span&gt;&lt;span&gt;99&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;    &lt;span&gt;6.60&lt;/span&gt;    &lt;span&gt;9.83&lt;/span&gt;    &lt;span&gt;3.17&lt;/span&gt;    &lt;span&gt;3.89&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;853&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;   &lt;span&gt;56.87&lt;/span&gt;   &lt;span&gt;62.76&lt;/span&gt;   &lt;span&gt;12.41&lt;/span&gt;   &lt;span&gt;59.77&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x02DFE94A93ADC62623BF2E1E98C17EC3&lt;/span&gt; &lt;span&gt;35.6617&lt;/span&gt; &lt;span&gt;65.2&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;7&lt;/span&gt; &lt;span&gt;5.0945&lt;/span&gt;  &lt;span&gt;0.01&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; host
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x5C3D88030F0258F752A830BD792DF4BA&lt;/span&gt; &lt;span&gt;10.0392&lt;/span&gt; &lt;span&gt;18.3&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;5&lt;/span&gt; &lt;span&gt;2.0078&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; host
#    &lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;0x6D482C964694712F6B3445151D7A429C&lt;/span&gt;  &lt;span&gt;6.0137&lt;/span&gt; &lt;span&gt;11.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;2&lt;/span&gt; &lt;span&gt;3.0069&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; x
#    &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;0x8430AB741BBC096B102EDAA5ACD08366&lt;/span&gt;  &lt;span&gt;3.0033&lt;/span&gt;  &lt;span&gt;5.5&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;3.0033&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; x

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0.00&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.02x concurrency, ID &lt;span&gt;0x02DFE94A93ADC62623BF2E1E98C17EC3&lt;/span&gt; at byte &lt;span&gt;3120&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.01&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;52&lt;/span&gt;:&lt;span&gt;55&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T16:&lt;span&gt;31&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;46&lt;/span&gt;       &lt;span&gt;7&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;65&lt;/span&gt;&lt;span&gt;     36s      5s      6s      5s      5s   178ms      5s
# Lock time     &lt;/span&gt;&lt;span&gt;30&lt;/span&gt;&lt;span&gt;     6ms   126us     3ms   863us     2ms     1ms   214us
# Rows sent     &lt;/span&gt;&lt;span&gt;70&lt;/span&gt;      &lt;span&gt;70&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;&lt;span&gt;
# Rows examine  &lt;/span&gt;&lt;span&gt;70&lt;/span&gt;      &lt;span&gt;70&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;     &lt;span&gt;434&lt;/span&gt;      &lt;span&gt;62&lt;/span&gt;      &lt;span&gt;62&lt;/span&gt;      &lt;span&gt;62&lt;/span&gt;      &lt;span&gt;62&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;62&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`host`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,hostname,agent_version,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; host limit &lt;span&gt;10&lt;/span&gt;&lt;span&gt;\G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0.08&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.16x concurrency, ID &lt;span&gt;0x5C3D88030F0258F752A830BD792DF4BA&lt;/span&gt; at byte &lt;span&gt;739&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;53&lt;/span&gt;:&lt;span&gt;12&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;54&lt;/span&gt;:&lt;span&gt;16&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;18&lt;/span&gt;     10s      2s      2s      2s      2s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      2s
# Lock time     &lt;/span&gt;&lt;span&gt;36&lt;/span&gt;&lt;span&gt;     7ms   209us     6ms     1ms     6ms     2ms   273us
# Rows sent     &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;      &lt;span&gt;20&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;&lt;span&gt;
# Rows examine  &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;      &lt;span&gt;20&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;325&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;65&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`host`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,hostname,agent_version,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; host &lt;span&gt;where&lt;/span&gt; id &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;\G

# Query &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;: &lt;span&gt;0.00&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.00x concurrency, ID &lt;span&gt;0x6D482C964694712F6B3445151D7A429C&lt;/span&gt; at byte &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;47&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T16:&lt;span&gt;32&lt;/span&gt;:&lt;span&gt;44&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;13&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;10&lt;/span&gt;&lt;span&gt;      6s      3s      3s      3s      3s     6ms      3s
# Lock time     &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;&lt;span&gt;     6ms   301us     6ms     3ms     6ms     4ms     3ms
# Rows sent      &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;       &lt;span&gt;6&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Rows examine   &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;       &lt;span&gt;6&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Query size     &lt;/span&gt;&lt;span&gt;7&lt;/span&gt;      &lt;span&gt;60&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`x`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,name,sleep(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; x\G

# Query &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x8430AB741BBC096B102EDAA5ACD08366&lt;/span&gt; at byte &lt;span&gt;241&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;50&lt;/span&gt;:&lt;span&gt;02&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;          &lt;span&gt;6&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;5&lt;/span&gt;      3s      3s      3s      3s      3s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      3s
# Lock time      &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   190us   190us   190us   190us   190us       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   190us
# Rows sent      &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Rows examine   &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Query size     &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`x`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,name,age,sleep(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; x\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;②：分析指定数据库的慢查询：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog &lt;strong&gt;--filter '($event-&amp;gt;{db} || &quot;&quot;) =~ m/^mysql/i'&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('8db74dab-f2c0-4e37-8663-e74f2b76a337')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_8db74dab-f2c0-4e37-8663-e74f2b76a337&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_8db74dab-f2c0-4e37-8663-e74f2b76a337&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('8db74dab-f2c0-4e37-8663-e74f2b76a337',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_8db74dab-f2c0-4e37-8663-e74f2b76a337&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
# 170ms &lt;span&gt;user&lt;/span&gt; time, 20ms system time, &lt;span&gt;34&lt;/span&gt;.21M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.80M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;:&lt;span&gt;17&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; total, &lt;span&gt;1&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.07&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.34x concurrency ________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time            18s      4s      6s      5s      6s      1s      4s
# Lock time            3ms   122us     3ms   871us     3ms     1ms     2ms
# Rows sent             &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine          &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;148&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time  Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M 
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;==============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; &lt;span&gt;18.4270&lt;/span&gt; &lt;span&gt;100.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;4&lt;/span&gt; &lt;span&gt;4.6067&lt;/span&gt;  &lt;span&gt;0.24&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0.07&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.34x concurrency, ID &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; at byte &lt;span&gt;4782&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.24&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;        &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time    &lt;span&gt;100&lt;/span&gt;&lt;span&gt;     18s      4s      6s      5s      6s      1s      4s
# Lock time    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;&lt;span&gt;     3ms   122us     3ms   871us     3ms     1ms     2ms
# Rows sent    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size   &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;148&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; `mysql`.`&lt;span&gt;user&lt;/span&gt;&lt;span&gt;`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;,host,sleep(&lt;span&gt;0.8&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;③：分析指定用户的慢查询：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog &lt;strong&gt;--filter '($event-&amp;gt;{user} || &quot;&quot;) =~ m/^zjy/i'&lt;/strong&gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3c198794-7b44-4a86-8125-db4e1cc3de45')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_3c198794-7b44-4a86-8125-db4e1cc3de45&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3c198794-7b44-4a86-8125-db4e1cc3de45&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3c198794-7b44-4a86-8125-db4e1cc3de45',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3c198794-7b44-4a86-8125-db4e1cc3de45&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
# 180ms &lt;span&gt;user&lt;/span&gt; time, &lt;span&gt;0&lt;/span&gt; system time, &lt;span&gt;34&lt;/span&gt;.13M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.80M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; total, &lt;span&gt;1&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.07&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.34x concurrency ________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time            18s      4s      6s      5s      6s      1s      4s
# Lock time            3ms   122us     3ms   871us     3ms     1ms     2ms
# Rows sent             &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine          &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;148&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time  Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M 
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;==============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; &lt;span&gt;18.4270&lt;/span&gt; &lt;span&gt;100.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;4&lt;/span&gt; &lt;span&gt;4.6067&lt;/span&gt;  &lt;span&gt;0.24&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0.07&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.34x concurrency, ID &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; at byte &lt;span&gt;4779&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.24&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;        &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time    &lt;span&gt;100&lt;/span&gt;&lt;span&gt;     18s      4s      6s      5s      6s      1s      4s
# Lock time    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;&lt;span&gt;     3ms   122us     3ms   871us     3ms     1ms     2ms
# Rows sent    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size   &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;148&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Hosts        test2
# Users        zjy
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; `mysql`.`&lt;span&gt;user&lt;/span&gt;&lt;span&gt;`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;,host,sleep(&lt;span&gt;0.8&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;④：分析指定IP的慢查询：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog &lt;strong&gt;--filter '($event-&amp;gt;{host} || $event-&amp;gt;{ip} || &quot;&quot;) =~ m/^192.168.100.*/i'&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ed2b6cb0-f70a-4a7f-b584-fd38c874238b')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_ed2b6cb0-f70a-4a7f-b584-fd38c874238b&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ed2b6cb0-f70a-4a7f-b584-fd38c874238b&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ed2b6cb0-f70a-4a7f-b584-fd38c874238b',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ed2b6cb0-f70a-4a7f-b584-fd38c874238b&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
# 170ms &lt;span&gt;user&lt;/span&gt; time, 20ms system time, &lt;span&gt;33&lt;/span&gt;.98M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.67M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;09&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;51&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; total, &lt;span&gt;1&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ______________________
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time             6s      6s      6s      6s      6s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      6s
# Lock time          122us   122us   122us   122us   122us       &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;   122us
# Rows sent              &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine           &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size            &lt;/span&gt;&lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; &lt;span&gt;6.4057&lt;/span&gt; &lt;span&gt;100.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;6.4057&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; at byte &lt;span&gt;4779&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;        &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time    &lt;span&gt;100&lt;/span&gt;      6s      6s      6s      6s      6s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      6s
# Lock time    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;   122us   122us   122us   122us   122us       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   122us
# Rows sent    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size   &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Hosts        &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;100.222&lt;/span&gt;&lt;span&gt;
# Users        zjy
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; `mysql`.`&lt;span&gt;user&lt;/span&gt;&lt;span&gt;`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;,host,sleep(&lt;span&gt;0.8&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑤：分析指定时间范围的慢查询：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog --since='2020-03-01 15:49:47' --until='2020-03-01 15:52:55'&lt;/span&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog --since='1583048987' --until='1583049175'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f9dc6830-4899-4b59-bbcc-e45344d308a3')&quot; readability=&quot;40&quot;&gt;&lt;img id=&quot;code_img_closed_f9dc6830-4899-4b59-bbcc-e45344d308a3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f9dc6830-4899-4b59-bbcc-e45344d308a3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f9dc6830-4899-4b59-bbcc-e45344d308a3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f9dc6830-4899-4b59-bbcc-e45344d308a3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;75&quot;&gt;
&lt;pre&gt;
# 170ms &lt;span&gt;user&lt;/span&gt; time, 20ms system time, &lt;span&gt;34&lt;/span&gt;.03M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.80M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;:&lt;span&gt;05&lt;/span&gt;:&lt;span&gt;52&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; total, &lt;span&gt;2&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.13&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.40x concurrency ________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;47&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;50&lt;/span&gt;:&lt;span&gt;02&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time             6s      3s      3s      3s      3s     5ms      3s
# Lock time            6ms   190us     6ms     3ms     6ms     4ms     3ms
# Rows sent              &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Rows examine           &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Query size            &lt;/span&gt;&lt;span&gt;64&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;    &lt;span&gt;2.83&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x6D482C964694712F6B3445151D7A429C&lt;/span&gt;  &lt;span&gt;3.0108&lt;/span&gt; &lt;span&gt;50.1&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;3.0108&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; x
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x8430AB741BBC096B102EDAA5ACD08366&lt;/span&gt;  &lt;span&gt;3.0033&lt;/span&gt; &lt;span&gt;49.9&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;3.0033&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; x

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x6D482C964694712F6B3445151D7A429C&lt;/span&gt; at byte &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;47&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;50&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;50&lt;/span&gt;      3s      3s      3s      3s      3s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      3s
# Lock time     &lt;/span&gt;&lt;span&gt;96&lt;/span&gt;     6ms     6ms     6ms     6ms     6ms       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;     6ms
# Rows sent     &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Rows examine  &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;46&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`x`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,name,sleep(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; x\G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x8430AB741BBC096B102EDAA5ACD08366&lt;/span&gt; at byte &lt;span&gt;241&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;50&lt;/span&gt;:&lt;span&gt;02&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;50&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;49&lt;/span&gt;      3s      3s      3s      3s      3s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      3s
# Lock time      &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;   190us   190us   190us   190us   190us       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   190us
# Rows sent     &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Rows examine  &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;3&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;53&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;34&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`x`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; id,name,age,sleep(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; x\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑥：分析最近时间的慢查询（最近10h，单位可以为s、和m）：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog --since='10h'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('92503e45-db16-4942-a2e7-375cf6f8ce0e')&quot; readability=&quot;38&quot;&gt;&lt;img id=&quot;code_img_closed_92503e45-db16-4942-a2e7-375cf6f8ce0e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_92503e45-db16-4942-a2e7-375cf6f8ce0e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('92503e45-db16-4942-a2e7-375cf6f8ce0e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_92503e45-db16-4942-a2e7-375cf6f8ce0e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;71&quot;&gt;
&lt;pre&gt;
# 150ms &lt;span&gt;user&lt;/span&gt; time, 20ms system time, &lt;span&gt;34&lt;/span&gt;.22M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.80M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;55&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;slow.&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; total, &lt;span&gt;1&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.07&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.34x concurrency ________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time            18s      4s      6s      5s      6s      1s      4s
# Lock time            3ms   122us     3ms   871us     3ms     1ms     2ms
# Rows sent             &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine          &lt;/span&gt;&lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;148&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time  Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M 
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;==============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; &lt;span&gt;18.4270&lt;/span&gt; &lt;span&gt;100.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;4&lt;/span&gt; &lt;span&gt;4.6067&lt;/span&gt;  &lt;span&gt;0.24&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0.07&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;.34x concurrency, ID &lt;span&gt;0x1AD46E75EF3D662BDE818F1F36DC02DD&lt;/span&gt; at byte &lt;span&gt;4779&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.24&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;13&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T01:&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;        &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;4&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time    &lt;span&gt;100&lt;/span&gt;&lt;span&gt;     18s      4s      6s      5s      6s      1s      4s
# Lock time    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;&lt;span&gt;     3ms   122us     3ms   871us     3ms     1ms     2ms
# Rows sent    &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size   &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;148&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;37&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Hosts        test2 (&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;), &lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;100.222&lt;/span&gt; (&lt;span&gt;1&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;)
# Users        zjy
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; `mysql`.`&lt;span&gt;user&lt;/span&gt;&lt;span&gt;`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;,host,sleep(&lt;span&gt;0.8&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑦：分析指定查询类型的慢查询：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2&lt;span&gt;-&lt;/span&gt;slow.log_bak &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=slowlog --filter '$event-&amp;gt;{arg} =~ m/^update/i'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('87ac3734-3781-4c98-a29d-3376eb81b892')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_87ac3734-3781-4c98-a29d-3376eb81b892&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_87ac3734-3781-4c98-a29d-3376eb81b892&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('87ac3734-3781-4c98-a29d-3376eb81b892',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_87ac3734-3781-4c98-a29d-3376eb81b892&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
# 160ms &lt;span&gt;user&lt;/span&gt; time, &lt;span&gt;0&lt;/span&gt; system time, &lt;span&gt;33&lt;/span&gt;.95M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.80M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;:&lt;span&gt;54&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;slow.log_bak
# Overall: &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; total, &lt;span&gt;2&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.00&lt;/span&gt; QPS, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.00x concurrency ________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;28T10:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;02&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;28T12:&lt;span&gt;59&lt;/span&gt;:&lt;span&gt;04&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt;&lt;span&gt; time            14s      6s      8s      7s      8s      1s      7s
# Lock time            6ms     2ms     4ms     3ms     4ms     1ms     3ms
# Rows sent             &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;    &lt;span&gt;4.24&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;&lt;span&gt;
# Rows examine          &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;    &lt;span&gt;4.24&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;&lt;span&gt;
# Query size            &lt;/span&gt;&lt;span&gt;89&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;   &lt;span&gt;44.50&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;   &lt;span&gt;12.02&lt;/span&gt;   &lt;span&gt;44.50&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x85DD43B595DF4DE2480E3EA0F1B26C9F&lt;/span&gt;  &lt;span&gt;8.0111&lt;/span&gt; &lt;span&gt;57.2&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;8.0111&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; sleep mysql.&lt;span&gt;user&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x836D2825542008408981DFD394A2EB60&lt;/span&gt;  &lt;span&gt;6.0065&lt;/span&gt; &lt;span&gt;42.8&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;6.0065&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; cluster_name sleep cluster_domain_name

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x85DD43B595DF4DE2480E3EA0F1B26C9F&lt;/span&gt; at byte &lt;span&gt;1614&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;28T12:&lt;span&gt;59&lt;/span&gt;:&lt;span&gt;04&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;50&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;57&lt;/span&gt;      8s      8s      8s      8s      8s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      8s
# Lock time     &lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     2ms     2ms     2ms     2ms     2ms       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;     2ms
# Rows sent     &lt;/span&gt;&lt;span&gt;80&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Rows examine  &lt;/span&gt;&lt;span&gt;80&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;40&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;36&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Hosts        test2
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; `mysql`.`&lt;span&gt;user&lt;/span&gt;&lt;span&gt;`\G
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;sleep&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `mysql`.`sleep`\G
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `mysql` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; `mysql`.`&lt;span&gt;user&lt;/span&gt;&lt;span&gt;`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;,sleep(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; mysql.&lt;span&gt;user&lt;/span&gt;&lt;span&gt;\G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x836D2825542008408981DFD394A2EB60&lt;/span&gt; at byte &lt;span&gt;1118&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;28T10:&lt;span&gt;49&lt;/span&gt;:&lt;span&gt;02&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;50&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time     &lt;span&gt;42&lt;/span&gt;      6s      6s      6s      6s      6s       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;      6s
# Lock time     &lt;/span&gt;&lt;span&gt;62&lt;/span&gt;     4ms     4ms     4ms     4ms     4ms       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;     4ms
# Rows sent     &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
# Rows examine  &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;59&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;53&lt;/span&gt;&lt;span&gt;
# String:
# Databases    orchestrator
# Hosts        &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;163.111&lt;/span&gt;&lt;span&gt;
# Users        root
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s  ################################################################
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `orchestrator` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;cluster_name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `orchestrator`.`cluster_name`\G
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `orchestrator` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;sleep&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `orchestrator`.`sleep`\G
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `orchestrator` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;cluster_domain_name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `orchestrator`.`cluster_domain_name`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; cluster_name,sleep(&lt;span&gt;3&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; cluster_domain_name\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;⑧：后续补充中...&lt;/p&gt;
&lt;h3&gt;2. general log：--type=genlog&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;属性：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
$VAR1 &lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
  Query_time &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,
  Thread_id &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  arg &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;SHOW FULL PROCESSLIST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  bytes &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;21&lt;/span&gt;&lt;span&gt;,
  cmd &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Query&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  db &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  fingerprint &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;show full processlist&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  pos_in_log &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;191402&lt;/span&gt;&lt;span&gt;,
  ts &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;2020-02-29T12:21:53.692656Z&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;general log 和 slow log的最大区别是--order-by默认从Query_time:sum改成了Query_time:cnt。general log没有执行时间。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;分析报告分为二部分说明：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一部分：总体概况说明，同上面的slow log。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第二部分：查询SQL概况说明。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
# Query &lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x0BBD8F114BF69E6F45609ADE347419D3&lt;/span&gt; at byte &lt;span&gt;1075144&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T09:&lt;span&gt;38&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;.431645Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T17:&lt;span&gt;03&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt;&lt;span&gt;.210317Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 次数&lt;/span&gt;
# &lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;96&lt;/span&gt;   &lt;span&gt;16463&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 执行时间&lt;/span&gt;
# &lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 查询字节数&lt;/span&gt;
# Query size    &lt;span&gt;90&lt;/span&gt; &lt;span&gt;337&lt;/span&gt;.62k      &lt;span&gt;21&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
SHOW &lt;/span&gt;&lt;span&gt;FULL&lt;/span&gt; PROCESSLIST\G
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;①：分析所有general log：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2.&lt;span&gt;log&lt;/span&gt; &lt;strong&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=genlog&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('aae2c2d8-c2fc-4139-a40a-c13336d69ac5')&quot; readability=&quot;39.5&quot;&gt;&lt;img id=&quot;code_img_closed_aae2c2d8-c2fc-4139-a40a-c13336d69ac5&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_aae2c2d8-c2fc-4139-a40a-c13336d69ac5&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('aae2c2d8-c2fc-4139-a40a-c13336d69ac5',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_aae2c2d8-c2fc-4139-a40a-c13336d69ac5&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;74&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;1&lt;/span&gt;.1s &lt;span&gt;user&lt;/span&gt; time, 10ms system time, &lt;span&gt;37&lt;/span&gt;.23M rss, &lt;span&gt;101&lt;/span&gt;&lt;span&gt;.77M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;54&lt;/span&gt;:&lt;span&gt;58&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;17&lt;/span&gt;.15k total, &lt;span&gt;36&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T08:&lt;span&gt;16&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;.412968Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T02:&lt;span&gt;47&lt;/span&gt;:&lt;span&gt;33&lt;/span&gt;&lt;span&gt;.305124Z
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size       &lt;/span&gt;&lt;span&gt;371&lt;/span&gt;.27k       &lt;span&gt;9&lt;/span&gt;     &lt;span&gt;215&lt;/span&gt;   &lt;span&gt;22.17&lt;/span&gt;   &lt;span&gt;20.43&lt;/span&gt;   &lt;span&gt;11.62&lt;/span&gt;   &lt;span&gt;20.43&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                      Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M   Item
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;=============================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x0BBD8F114BF69E6F45609ADE&lt;/span&gt;...  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt; &lt;span&gt;16463&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt; SHOW PROCESSLIST
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x7417646A9FE969365D51E5F0&lt;/span&gt;...  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;   &lt;span&gt;150&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt; ADMIN CONNECT
# MISC 0xMISC                         &lt;/span&gt;&lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;   &lt;span&gt;533&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;   &lt;span&gt;0.0&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; ITEMS&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x0BBD8F114BF69E6F45609ADE347419D3&lt;/span&gt; at byte &lt;span&gt;1075144&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T09:&lt;span&gt;38&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;.431645Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T17:&lt;span&gt;03&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt;&lt;span&gt;.210317Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;96&lt;/span&gt;   &lt;span&gt;16463&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;90&lt;/span&gt; &lt;span&gt;337&lt;/span&gt;.62k      &lt;span&gt;21&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;21&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
SHOW &lt;/span&gt;&lt;span&gt;FULL&lt;/span&gt;&lt;span&gt; PROCESSLIST\G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x7417646A9FE969365D51E5F01B88B79E&lt;/span&gt; at byte &lt;span&gt;1079129&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T08:&lt;span&gt;16&lt;/span&gt;:&lt;span&gt;42&lt;/span&gt;.510608Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T02:&lt;span&gt;47&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt;&lt;span&gt;.977613Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;          &lt;span&gt;0&lt;/span&gt;     &lt;span&gt;150&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size     &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;   &lt;span&gt;4&lt;/span&gt;.39k      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;
# String:
# Databases    mysql (&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;97&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;), test (&lt;span&gt;3&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;), xyz (&lt;span&gt;1&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;)
# Hosts        test2 (&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;98&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;), localhost (&lt;span&gt;2&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;)
# Users        root (&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;98&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;), debian&lt;span&gt;-&lt;/span&gt;sys... (&lt;span&gt;2&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;)
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
administrator command: Connect\G&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;②：分析指定数据库的general log：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=genlog &lt;strong&gt;--filter '($event-&amp;gt;{db} || &quot;&quot;) =~ m/^xyz/i'&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3b6763bd-034a-497c-bfdf-4e41a4a0b6f0')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_3b6763bd-034a-497c-bfdf-4e41a4a0b6f0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3b6763bd-034a-497c-bfdf-4e41a4a0b6f0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3b6763bd-034a-497c-bfdf-4e41a4a0b6f0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3b6763bd-034a-497c-bfdf-4e41a4a0b6f0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
# 760ms &lt;span&gt;user&lt;/span&gt; time, &lt;span&gt;0&lt;/span&gt; system time, &lt;span&gt;33&lt;/span&gt;.97M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.79M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;58&lt;/span&gt;:&lt;span&gt;25&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;19&lt;/span&gt; total, &lt;span&gt;7&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency _____________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T08:&lt;span&gt;16&lt;/span&gt;:&lt;span&gt;42&lt;/span&gt;.510608Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T03:&lt;span&gt;57&lt;/span&gt;:&lt;span&gt;21&lt;/span&gt;&lt;span&gt;.856375Z
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;374&lt;/span&gt;      &lt;span&gt;11&lt;/span&gt;      &lt;span&gt;32&lt;/span&gt;   &lt;span&gt;19.68&lt;/span&gt;   &lt;span&gt;28.75&lt;/span&gt;    &lt;span&gt;5.67&lt;/span&gt;   &lt;span&gt;16.81&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                          Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M   
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;=================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt; 
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x13CE8196A68B6EDD5056FEA7A295&lt;/span&gt;...  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;    &lt;span&gt;11&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt; opa
# MISC 0xMISC                             &lt;/span&gt;&lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;8&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;   &lt;span&gt;0.0&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; ITEMS&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x13CE8196A68B6EDD5056FEA7A29521B5&lt;/span&gt; at byte &lt;span&gt;1079780&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;29T08:&lt;span&gt;16&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt;.573687Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T03:&lt;span&gt;56&lt;/span&gt;:&lt;span&gt;54&lt;/span&gt;&lt;span&gt;.493066Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;57&lt;/span&gt;      &lt;span&gt;11&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;     &lt;span&gt;187&lt;/span&gt;      &lt;span&gt;17&lt;/span&gt;      &lt;span&gt;17&lt;/span&gt;      &lt;span&gt;17&lt;/span&gt;      &lt;span&gt;17&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;17&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `xyz` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;opa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `xyz`.`opa`\G
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; opa\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;③：分析指定用户的general log：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=genlog &lt;strong&gt;--filter '($event-&amp;gt;{user} || &quot;&quot;) =~ m/^rep/i'&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('47a1255e-17d9-420b-8b35-b0feaf78963b')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_47a1255e-17d9-420b-8b35-b0feaf78963b&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_47a1255e-17d9-420b-8b35-b0feaf78963b&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('47a1255e-17d9-420b-8b35-b0feaf78963b',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_47a1255e-17d9-420b-8b35-b0feaf78963b&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
# 760ms &lt;span&gt;user&lt;/span&gt; time, 40ms system time, &lt;span&gt;34&lt;/span&gt;.09M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.66M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;:&lt;span&gt;37&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; total, &lt;span&gt;1&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ______________________
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T04:&lt;span&gt;01&lt;/span&gt;:&lt;span&gt;10&lt;/span&gt;&lt;span&gt;.355849Z
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size            &lt;/span&gt;&lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x7417646A9FE969365D51E5F01B88B79E&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt; ADMIN CONNECT

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x7417646A9FE969365D51E5F01B88B79E&lt;/span&gt; at byte &lt;span&gt;1080607&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T04:&lt;span&gt;01&lt;/span&gt;:&lt;span&gt;10&lt;/span&gt;&lt;span&gt;.355849Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;        &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size   &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Hosts        test2
# Users        rep
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
administrator command: Connect\G&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;④：分析指定IP的general log：只能查询有连接信息的一行&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=genlog &lt;strong&gt;--filter '($event-&amp;gt;{host} || $event-&amp;gt;{ip} || &quot;&quot;) =~ m/^192.168.163.1/i'&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('0d63848a-3149-4ea3-ad99-da5841c4e397')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_0d63848a-3149-4ea3-ad99-da5841c4e397&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_0d63848a-3149-4ea3-ad99-da5841c4e397&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('0d63848a-3149-4ea3-ad99-da5841c4e397',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_0d63848a-3149-4ea3-ad99-da5841c4e397&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
# 680ms &lt;span&gt;user&lt;/span&gt; time, 10ms system time, &lt;span&gt;34&lt;/span&gt;.10M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.67M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;37&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; total, &lt;span&gt;1&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ______________________
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T04:&lt;span&gt;04&lt;/span&gt;:&lt;span&gt;44&lt;/span&gt;&lt;span&gt;.525323Z
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size            &lt;/span&gt;&lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x7417646A9FE969365D51E5F01B88B79E&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt; ADMIN CONNECT

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x7417646A9FE969365D51E5F01B88B79E&lt;/span&gt; at byte &lt;span&gt;1080854&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T04:&lt;span&gt;04&lt;/span&gt;:&lt;span&gt;44&lt;/span&gt;&lt;span&gt;.525323Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;        &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size   &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;30&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Hosts        &lt;/span&gt;&lt;span&gt;192.168&lt;/span&gt;.&lt;span&gt;163.1&lt;/span&gt;&lt;span&gt;
# Users        rep
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
administrator command: Connect\G&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑤：分析指定时间范围的general log：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为since、until是和属性ts进行比较的，而ts表示慢查询的timestamp，general log的ts格式不支持。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
Argument &quot;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;02T03:&lt;span&gt;56&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;.729571Z&quot; isn&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t numeric in numeric ge (&amp;gt;=) at /usr/bin/pt-query-digest line 13828&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑥：&lt;/span&gt;&lt;span&gt;分析指定查询类型的general log：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest test2.&lt;span&gt;log&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=genlog --filter '$event-&amp;gt;{arg} =~ m/^update/i'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d69c6386-c908-4f2d-a809-c7cd0461923a')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_d69c6386-c908-4f2d-a809-c7cd0461923a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d69c6386-c908-4f2d-a809-c7cd0461923a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d69c6386-c908-4f2d-a809-c7cd0461923a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d69c6386-c908-4f2d-a809-c7cd0461923a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
# 800ms &lt;span&gt;user&lt;/span&gt; time, 20ms system time, &lt;span&gt;34&lt;/span&gt;.14M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.66M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: test2.&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;
# Overall: &lt;/span&gt;&lt;span&gt;3&lt;/span&gt; total, &lt;span&gt;2&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ______________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;51&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;.127775Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;51&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;&lt;span&gt;.615228Z
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;117&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;      &lt;span&gt;44&lt;/span&gt;      &lt;span&gt;39&lt;/span&gt;   &lt;span&gt;42.48&lt;/span&gt;    &lt;span&gt;6.47&lt;/span&gt;   &lt;span&gt;42.48&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x80ADD689782BEAD7D70ED30064A844AE&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;2&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; host
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0xD2D49F3A84020704D76F13F185D17AF0&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; host

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x80ADD689782BEAD7D70ED30064A844AE&lt;/span&gt; at byte &lt;span&gt;1076295&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;51&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;.127775Z &lt;span&gt;to&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;51&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;&lt;span&gt;.615228Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;66&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;75&lt;/span&gt;      &lt;span&gt;88&lt;/span&gt;      &lt;span&gt;44&lt;/span&gt;      &lt;span&gt;44&lt;/span&gt;      &lt;span&gt;44&lt;/span&gt;      &lt;span&gt;44&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;44&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`host`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; host &lt;span&gt;set&lt;/span&gt; hostname &lt;span&gt;=&lt;/span&gt; concat(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,id)\G
# Converted &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; EXPLAIN
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt;  hostname &lt;span&gt;=&lt;/span&gt; concat(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,id) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; host \G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0xD2D49F3A84020704D76F13F185D17AF0&lt;/span&gt; at byte &lt;span&gt;1076124&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;01T15:&lt;span&gt;51&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;&lt;span&gt;.804090Z
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;24&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;29&lt;/span&gt;&lt;span&gt;
# String:
# Databases    test
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `test` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `test`.`host`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; host &lt;span&gt;set&lt;/span&gt; hostname &lt;span&gt;=&lt;/span&gt; &lt;span&gt;''&lt;/span&gt;&lt;span&gt;\G
# Converted &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; EXPLAIN
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt;  hostname &lt;span&gt;=&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; host \G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑦：后续补充中...&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3. binlog：--type=binlog&lt;/h3&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;属性：&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
$VAR1 &lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
  Query_time &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  Thread_id &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;176&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  arg &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'...&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  bytes &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;40&lt;/span&gt;&lt;span&gt;,
  cmd &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Query&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  db &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;xyz&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  end_log_pos &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;695&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  error_code &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  fingerprint &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;...&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  offset &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;583&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  pos_in_log &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;1942&lt;/span&gt;&lt;span&gt;,
  server_id &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;timestamp&lt;/span&gt; &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1583133657&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  ts &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;200302 15:20:57&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
};&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;注意：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 在测试的时候发现，binlog如果是ROW模式，则分析不出SQL信息？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为没有用户（user）、IP属性，所以不能通过它们分析。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;预备：&lt;/span&gt;&lt;span&gt;在分析binlog之前，需要先把binlog转换成文本：&lt;/span&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 mysqlbinlog &lt;span&gt;--&lt;/span&gt;&lt;span&gt;no-defaults -vv --base64-output=DECODE-ROWS mysql-bin.000053 &amp;gt;mysql-bin.000053.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;① 分析所有binlog：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;.txt &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=binlog&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('34e0d3c4-bfbd-4686-9253-eab6d640ced8')&quot; readability=&quot;42.5&quot;&gt;&lt;img id=&quot;code_img_closed_34e0d3c4-bfbd-4686-9253-eab6d640ced8&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_34e0d3c4-bfbd-4686-9253-eab6d640ced8&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('34e0d3c4-bfbd-4686-9253-eab6d640ced8',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_34e0d3c4-bfbd-4686-9253-eab6d640ced8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;80&quot;&gt;
&lt;pre&gt;
# 150ms &lt;span&gt;user&lt;/span&gt; time, 30ms system time, &lt;span&gt;34&lt;/span&gt;.53M rss, &lt;span&gt;99&lt;/span&gt;&lt;span&gt;.06M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;43&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: &lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;&lt;span&gt;.txt
# Overall: &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; total, &lt;span&gt;6&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.03&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ___________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;213&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;      &lt;span&gt;71&lt;/span&gt;   &lt;span&gt;30.43&lt;/span&gt;   &lt;span&gt;69.19&lt;/span&gt;   &lt;span&gt;23.03&lt;/span&gt;   &lt;span&gt;38.53&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ch          &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co          &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co           &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.fo           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.lc           &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ps         &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq           &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq       &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G       &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.34G
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.un           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# error code             &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x82CE37495437A097404F41D8B9BC40F5&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; opa
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x8D589AFA4DFAEEED85FFF5AA78E5FF6A&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;2&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;BEGIN&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;0x22F19246E8077C1AD6C6EBCA2A2AA193&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; opa

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x82CE37495437A097404F41D8B9BC40F5&lt;/span&gt; at byte &lt;span&gt;1942&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;25&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;18&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;&lt;span&gt;
# error code     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `xyz` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;opa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `xyz`.`opa`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; opa &lt;span&gt;set&lt;/span&gt; name &lt;span&gt;=&lt;/span&gt;&lt;span&gt; concat(id,name,id)\G
# Converted &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; EXPLAIN
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt;  name &lt;span&gt;=&lt;/span&gt; concat(id,name,id) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; opa \G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0.01&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x8D589AFA4DFAEEED85FFF5AA78E5FF6A&lt;/span&gt; at byte &lt;span&gt;1780&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;50&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size     &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ch &lt;span&gt;100&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co &lt;span&gt;100&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.fo &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.lc   &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ps &lt;span&gt;100&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq   &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq &lt;span&gt;100&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G       &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.34G
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.un &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# error code     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# String:
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co &lt;span&gt;default&lt;/span&gt;&lt;span&gt;
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;BEGIN&lt;/span&gt;&lt;span&gt;\G

# Query &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x22F19246E8077C1AD6C6EBCA2A2AA193&lt;/span&gt; at byte &lt;span&gt;1289&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;25&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;19&lt;/span&gt;      &lt;span&gt;42&lt;/span&gt;      &lt;span&gt;42&lt;/span&gt;      &lt;span&gt;42&lt;/span&gt;      &lt;span&gt;42&lt;/span&gt;      &lt;span&gt;42&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;42&lt;/span&gt;&lt;span&gt;
# error code     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `xyz` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;opa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `xyz`.`opa`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; opa &lt;span&gt;set&lt;/span&gt; name &lt;span&gt;=&lt;/span&gt;&lt;span&gt; concat(name,id,name)\G
# Converted &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; EXPLAIN
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt;  name &lt;span&gt;=&lt;/span&gt; concat(name,id,name) &lt;span&gt;from&lt;/span&gt; opa \G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;②：分析指定数据库的bin log：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;.txt &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=binlog --filter '($event-&amp;gt;{db} || &quot;&quot;) =~ m/^xyz/i'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('8d0f6665-2b7b-4224-998d-7ffc5674a1cb')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_8d0f6665-2b7b-4224-998d-7ffc5674a1cb&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_8d0f6665-2b7b-4224-998d-7ffc5674a1cb&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('8d0f6665-2b7b-4224-998d-7ffc5674a1cb',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_8d0f6665-2b7b-4224-998d-7ffc5674a1cb&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
# 160ms &lt;span&gt;user&lt;/span&gt; time, 20ms system time, &lt;span&gt;33&lt;/span&gt;.99M rss, &lt;span&gt;98&lt;/span&gt;&lt;span&gt;.66M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;45&lt;/span&gt;:&lt;span&gt;49&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: &lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;&lt;span&gt;.txt
# Overall: &lt;/span&gt;&lt;span&gt;3&lt;/span&gt; total, &lt;span&gt;6&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.02&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ___________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;208&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;      &lt;span&gt;71&lt;/span&gt;   &lt;span&gt;34.67&lt;/span&gt;   &lt;span&gt;69.19&lt;/span&gt;   &lt;span&gt;22.41&lt;/span&gt;   &lt;span&gt;41.47&lt;/span&gt;&lt;span&gt;
# error code             &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x82CE37495437A097404F41D8B9BC40F5&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; opa
# MISC 0xMISC                              &lt;/span&gt;&lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;2&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;   &lt;span&gt;0.0&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; ITEMS&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x82CE37495437A097404F41D8B9BC40F5&lt;/span&gt; at byte &lt;span&gt;1942&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;19&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;&lt;span&gt;
# error code     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `xyz` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;opa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `xyz`.`opa`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; opa &lt;span&gt;set&lt;/span&gt; name &lt;span&gt;=&lt;/span&gt;&lt;span&gt; concat(id,name,id)\G
# Converted &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; EXPLAIN
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt;  name &lt;span&gt;=&lt;/span&gt; concat(id,name,id) &lt;span&gt;from&lt;/span&gt; opa \G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;③：分析指定时间范围的binlog&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;.txt &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=binlog --since='2020-03-01 15:49:47' --until='2020-03-05 15:52:55'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('2009508a-eaa5-4f92-8164-b99328f1616c')&quot; readability=&quot;39.5&quot;&gt;&lt;img id=&quot;code_img_closed_2009508a-eaa5-4f92-8164-b99328f1616c&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2009508a-eaa5-4f92-8164-b99328f1616c&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('2009508a-eaa5-4f92-8164-b99328f1616c',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2009508a-eaa5-4f92-8164-b99328f1616c&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;74&quot;&gt;
&lt;pre&gt;
# 170ms &lt;span&gt;user&lt;/span&gt; time, 10ms system time, &lt;span&gt;34&lt;/span&gt;.39M rss, &lt;span&gt;99&lt;/span&gt;&lt;span&gt;.05M vsz
# &lt;/span&gt;&lt;span&gt;Current&lt;/span&gt; date: Mon Mar  &lt;span&gt;2&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;25&lt;/span&gt; &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;
# Hostname: test2
# Files: &lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;&lt;span&gt;.txt
# Overall: &lt;/span&gt;&lt;span&gt;4&lt;/span&gt; total, &lt;span&gt;6&lt;/span&gt; &lt;span&gt;unique&lt;/span&gt;, &lt;span&gt;0.03&lt;/span&gt;&lt;span&gt; QPS, 0x concurrency ___________________
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute          total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt;     &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time              &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size           &lt;/span&gt;&lt;span&gt;213&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;      &lt;span&gt;71&lt;/span&gt;   &lt;span&gt;30.43&lt;/span&gt;   &lt;span&gt;69.19&lt;/span&gt;   &lt;span&gt;23.03&lt;/span&gt;   &lt;span&gt;38.53&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ch          &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co          &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co           &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.fo           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.lc           &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ps         &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq           &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq       &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G       &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.34G
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.un           &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# error code             &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;

# Profile
# Rank Query ID                           Response time Calls R&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;Call V&lt;span&gt;/&lt;/span&gt;&lt;span&gt;M  
# &lt;/span&gt;&lt;span&gt;====&lt;/span&gt; &lt;span&gt;==================================&lt;/span&gt; &lt;span&gt;=============&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt; &lt;span&gt;======&lt;/span&gt; &lt;span&gt;=====&lt;/span&gt;&lt;span&gt;
#    &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;0x82CE37495437A097404F41D8B9BC40F5&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt;&lt;span&gt; opa
#    &lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;0x8D589AFA4DFAEEED85FFF5AA78E5FF6A&lt;/span&gt;  &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;2&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.00&lt;/span&gt; &lt;span&gt;BEGIN&lt;/span&gt;&lt;span&gt;
# MISC 0xMISC                              &lt;/span&gt;&lt;span&gt;0.0000&lt;/span&gt;  &lt;span&gt;0.0&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;     &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0.0000&lt;/span&gt;   &lt;span&gt;0.0&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt; ITEMS&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

# Query &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x82CE37495437A097404F41D8B9BC40F5&lt;/span&gt; at byte &lt;span&gt;1942&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;all&lt;/span&gt; events occurred at &lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;25&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size    &lt;/span&gt;&lt;span&gt;18&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;40&lt;/span&gt;&lt;span&gt;
# error code     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# String:
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;
# Tables
#    SHOW &lt;/span&gt;&lt;span&gt;TABLE&lt;/span&gt; STATUS &lt;span&gt;FROM&lt;/span&gt; `xyz` &lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;opa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\G
#    SHOW &lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `xyz`.`opa`\G
&lt;/span&gt;&lt;span&gt;update&lt;/span&gt; opa &lt;span&gt;set&lt;/span&gt; name &lt;span&gt;=&lt;/span&gt;&lt;span&gt; concat(id,name,id)\G
# Converted &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; EXPLAIN
# EXPLAIN &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;!50100 PARTITIONS&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;select&lt;/span&gt;  name &lt;span&gt;=&lt;/span&gt; concat(id,name,id) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; opa \G

# Query &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;: &lt;span&gt;0.01&lt;/span&gt; QPS, 0x concurrency, ID &lt;span&gt;0x8D589AFA4DFAEEED85FFF5AA78E5FF6A&lt;/span&gt; at byte &lt;span&gt;1780&lt;/span&gt;&lt;span&gt;
# This item &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; included &lt;span&gt;in&lt;/span&gt; the report because it matches &lt;span&gt;--&lt;/span&gt;&lt;span&gt;limit.&lt;/span&gt;
# Scores: V&lt;span&gt;/&lt;/span&gt;M &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;
# Time range: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;02&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;57&lt;/span&gt;&lt;span&gt;
# Attribute    pct   total     &lt;/span&gt;&lt;span&gt;min&lt;/span&gt;     &lt;span&gt;max&lt;/span&gt;     &lt;span&gt;avg&lt;/span&gt;     &lt;span&gt;95&lt;/span&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt;  stddev  median
# &lt;/span&gt;&lt;span&gt;============&lt;/span&gt; &lt;span&gt;===&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt; &lt;span&gt;=======&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Count&lt;/span&gt;         &lt;span&gt;50&lt;/span&gt;       &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;Exec&lt;/span&gt; time      &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# Query size     &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;      &lt;span&gt;10&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;5&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.au &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ch &lt;span&gt;100&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co &lt;span&gt;100&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;      &lt;span&gt;33&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.fo &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.lc   &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.ps &lt;span&gt;100&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;     &lt;span&gt;176&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq   &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.sq &lt;span&gt;100&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G   &lt;span&gt;1&lt;/span&gt;.34G       &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.34G
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.un &lt;span&gt;100&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
# error code     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;       &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
# String:
# &lt;/span&gt;&lt;span&gt;@@session&lt;/span&gt;.co &lt;span&gt;default&lt;/span&gt;&lt;span&gt;
# Databases    xyz
# Query_time distribution
#   1us
#  10us
# 100us
#   1ms
#  10ms
# 100ms
#    1s
#  10s&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;BEGIN&lt;/span&gt;\G
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;④：分析最近时间的binlog&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;.txt &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=binlog --since='60m'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑤：分析指定类型的binlog&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;/&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;-&lt;/span&gt;bin.&lt;span&gt;000053&lt;/span&gt;.txt &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type=binlog  --filter '$event-&amp;gt;{arg} =~ m/^update/i'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑥：&lt;/span&gt;&lt;span&gt;后续补充中...&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;4. processlist&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;①：抓取show processlist的慢查，转存到指定文件：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 间隔1s执行show full processlist 拉取processlist中订阅到的慢查询转存到指定的文件。&lt;/span&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;strong&gt;&lt;span&gt;--&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;processlist&lt;/strong&gt; h=192.168.163.132,u=root,p=root --&lt;strong&gt;interval&lt;/strong&gt;=1  &lt;strong&gt;--output=slowlog&lt;/strong&gt; &amp;gt; /tmp/process.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：比较适用于一些云数据库没有看慢查文件的权限。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;②：分析show processlist的慢查：配合--run-time使用，可以限制执行时间，到时间（--iterations=1）之后退出并且打印分析。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;--&lt;/span&gt;&lt;span&gt; 间隔1s执行show full processlist，永远运行，每30秒生成一次报告&lt;/span&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;strong&gt;&lt;span&gt;--&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;processlist&lt;/strong&gt; h=192.168.163.132,u=root,p=root --&lt;strong&gt;interval&lt;/strong&gt;=1  --run-time-mode=clock --run-time=30s --&lt;strong&gt;iterations&lt;/strong&gt;=0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：比较适用于一些问题排查方面的工作。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;5. tcpdump&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;先抓包：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
tcpdump &lt;span&gt;-&lt;/span&gt;s &lt;span&gt;65535&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;x &lt;span&gt;-&lt;/span&gt;nn &lt;span&gt;-&lt;/span&gt;q &lt;span&gt;-&lt;/span&gt;tttt &lt;span&gt;-&lt;/span&gt;i &lt;span&gt;any&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;c &lt;span&gt;1000&lt;/span&gt; port &lt;span&gt;3306&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt; mysql.tcp.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;再分析：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;--&lt;/span&gt;&lt;span&gt;type tcpdump mysql.tcp.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;二 分析转存方面：将查询数据从slow.log保存到MySQL&lt;/h3&gt;
&lt;h3&gt;1，查询&amp;amp;审计转存到表&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;strong&gt;&lt;span&gt;--&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;review&lt;/strong&gt; u=root,p=root,h=192.168.163.132,P=3306,D=xyz,t=query_review --create-review-table test2-slow.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：把慢查询记录到数据库xyz的query_review表中：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b5222563-0de7-4180-b10e-67bc1b93bbc6')&quot; readability=&quot;41.5&quot;&gt;&lt;img id=&quot;code_img_closed_b5222563-0de7-4180-b10e-67bc1b93bbc6&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b5222563-0de7-4180-b10e-67bc1b93bbc6&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b5222563-0de7-4180-b10e-67bc1b93bbc6',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b5222563-0de7-4180-b10e-67bc1b93bbc6&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;78&quot;&gt;
&lt;pre&gt;
mysql&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;select&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;from&lt;/span&gt;&lt;span&gt; query_review\G
&lt;/span&gt;&lt;span&gt;***************************&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;. row &lt;span&gt;***************************&lt;/span&gt;&lt;span&gt;
   checksum: 02DFE94A93ADC62623BF2E1E98C17EC3
fingerprint: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,hostname,agent_version,sleep(?) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; host limit ?
     sample: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,hostname,agent_version,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; host limit &lt;span&gt;10&lt;/span&gt;&lt;span&gt;
 first_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;55&lt;/span&gt;&lt;span&gt;
  last_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
reviewed_by: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
reviewed_on: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
   comments: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;
&lt;span&gt;***************************&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;. row &lt;span&gt;***************************&lt;/span&gt;&lt;span&gt;
   checksum: 37FD1F8E9516984F7D77EB5364A382DD
fingerprint: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,name,sleep(?) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; opa
     sample: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,name,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; opa
 first_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;06&lt;/span&gt;:&lt;span&gt;50&lt;/span&gt;&lt;span&gt;
  last_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;04&lt;/span&gt;&lt;span&gt;
reviewed_by: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
reviewed_on: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
   comments: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;
&lt;span&gt;***************************&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;. row &lt;span&gt;***************************&lt;/span&gt;&lt;span&gt;
   checksum: 8430AB741BBC096B102EDAA5ACD08366
fingerprint: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,name,age,sleep(?) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; x
     sample: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,name,age,sleep(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; x
 first_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;&lt;span&gt;
  last_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt;&lt;span&gt;
reviewed_by: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
reviewed_on: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
   comments: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;
&lt;span&gt;***************************&lt;/span&gt; &lt;span&gt;4&lt;/span&gt;. row &lt;span&gt;***************************&lt;/span&gt;&lt;span&gt;
   checksum: D4B20686AF10136F85E9FAE50E04AE92
fingerprint: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; name,sleep(?) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; opa
     sample: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; name,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt;&lt;span&gt; opa
 first_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;&lt;span&gt;
  last_seen: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;26&lt;/span&gt;&lt;span&gt;
reviewed_by: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
reviewed_on: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
   comments: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;表列说明：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;COLUMN&lt;/span&gt;&lt;span&gt;       MEANING
&lt;/span&gt;&lt;span&gt;===========&lt;/span&gt;  &lt;span&gt;====================================================&lt;/span&gt;&lt;span&gt;
checksum     查询指纹的64位校验和
fingerprint  查询的抽象版本；它的主键
sample       查询样本的文本
first_seen   此类查询的最早时间戳
last_seen    此类查询的最近时间戳
reviewed_by  如果设置，此后将跳过查询
reviewed_on  没有赋予任何特殊含义
comments     没有赋予任何特殊含义&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果表中的记录reviewed_by被设了值，则下次运行pt-query-digest --review不会显示该query。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2，查询分析指标转存到表&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
pt&lt;span&gt;-&lt;/span&gt;query&lt;span&gt;-&lt;/span&gt;digest &lt;span&gt;--&lt;/span&gt;&lt;span&gt;history u=root,p=root,h=192.168.163.132,P=3306,D=xyz,t=query_review_history --create-review-table test2-slow.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：把慢查询记录的分析指标转存到数据库xyz的query_review_history表中：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('8f8d7bd3-84b7-4e58-932b-b3a2af75d3a5')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_8f8d7bd3-84b7-4e58-932b-b3a2af75d3a5&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_8f8d7bd3-84b7-4e58-932b-b3a2af75d3a5&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('8f8d7bd3-84b7-4e58-932b-b3a2af75d3a5',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_8f8d7bd3-84b7-4e58-932b-b3a2af75d3a5&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
mysql&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;select&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;from&lt;/span&gt;&lt;span&gt; query_review_history\G
&lt;/span&gt;&lt;span&gt;***************************&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;. row &lt;span&gt;***************************&lt;/span&gt;&lt;span&gt;
                    checksum: 02DFE94A93ADC62623BF2E1E98C17EC3
                      sample: &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; id,hostname,agent_version,sleep(&lt;span&gt;0.5&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; host limit &lt;span&gt;10&lt;/span&gt;&lt;span&gt;
                      ts_min: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;55&lt;/span&gt;&lt;span&gt;
                      ts_max: &lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;03&lt;/span&gt; &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;&lt;span&gt;
                      ts_cnt: &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
              Query_time_sum: &lt;/span&gt;&lt;span&gt;10.0236&lt;/span&gt;&lt;span&gt;
              Query_time_min: &lt;/span&gt;&lt;span&gt;5.00726&lt;/span&gt;&lt;span&gt;
              Query_time_max: &lt;/span&gt;&lt;span&gt;5.01629&lt;/span&gt;&lt;span&gt;
           Query_time_pct_95: &lt;/span&gt;&lt;span&gt;5.01629&lt;/span&gt;&lt;span&gt;
           Query_time_stddev: &lt;/span&gt;&lt;span&gt;0.00638659&lt;/span&gt;&lt;span&gt;
           Query_time_median: &lt;/span&gt;&lt;span&gt;5.01178&lt;/span&gt;&lt;span&gt;
               Lock_time_sum: &lt;/span&gt;&lt;span&gt;0.004069&lt;/span&gt;&lt;span&gt;
               Lock_time_min: &lt;/span&gt;&lt;span&gt;0.000299&lt;/span&gt;&lt;span&gt;
               Lock_time_max: &lt;/span&gt;&lt;span&gt;0.00377&lt;/span&gt;&lt;span&gt;
            Lock_time_pct_95: &lt;/span&gt;&lt;span&gt;0.00377&lt;/span&gt;&lt;span&gt;
            Lock_time_stddev: &lt;/span&gt;&lt;span&gt;0.00245437&lt;/span&gt;&lt;span&gt;
            Lock_time_median: &lt;/span&gt;&lt;span&gt;0.0020345&lt;/span&gt;&lt;span&gt;
               Rows_sent_sum: &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;
               Rows_sent_min: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
               Rows_sent_max: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
            Rows_sent_pct_95: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
            Rows_sent_stddev: &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
            Rows_sent_median: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
           Rows_examined_sum: &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;
           Rows_examined_min: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
           Rows_examined_max: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
        Rows_examined_pct_95: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
        Rows_examined_stddev: &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
        Rows_examined_median: &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
           Rows_affected_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
           Rows_affected_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
           Rows_affected_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        Rows_affected_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        Rows_affected_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        Rows_affected_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Rows_read_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Rows_read_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Rows_read_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
            Rows_read_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
            Rows_read_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
            Rows_read_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
            Merge_passes_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
            Merge_passes_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
            Merge_passes_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
         Merge_passes_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
         Merge_passes_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
         Merge_passes_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
         InnoDB_IO_r_ops_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
         InnoDB_IO_r_ops_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
      InnoDB_IO_r_ops_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
      InnoDB_IO_r_ops_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
      InnoDB_IO_r_ops_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
       InnoDB_IO_r_bytes_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
       InnoDB_IO_r_bytes_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_IO_r_bytes_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_IO_r_bytes_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_IO_r_bytes_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        InnoDB_IO_r_wait_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        InnoDB_IO_r_wait_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
     InnoDB_IO_r_wait_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
     InnoDB_IO_r_wait_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
     InnoDB_IO_r_wait_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_rec_lock_wait_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_rec_lock_wait_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
 InnoDB_rec_lock_wait_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
 InnoDB_rec_lock_wait_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
 InnoDB_rec_lock_wait_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
       InnoDB_queue_wait_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
       InnoDB_queue_wait_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_queue_wait_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_queue_wait_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
    InnoDB_queue_wait_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
   InnoDB_pages_distinct_min: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
   InnoDB_pages_distinct_max: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
InnoDB_pages_distinct_pct_95: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
InnoDB_pages_distinct_stddev: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
InnoDB_pages_distinct_median: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
                  QC_Hit_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
                  QC_Hit_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Full_scan_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Full_scan_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Full_join_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Full_join_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Tmp_table_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
               Tmp_table_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
       Tmp_table_on_disk_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
       Tmp_table_on_disk_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
                Filesort_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
                Filesort_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        Filesort_on_disk_cnt: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;
        Filesort_on_disk_sum: &lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;通过report打印出来的信息转存到表中。&lt;strong&gt;针对&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;1，2生成的表可以进行关联，来找出那些没有被审计的SQL。&lt;/strong&gt;通过这2个参数，可以做成一个MySQL的慢查询审计平台，如&lt;strong&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/box/Anemometer&quot; data-pjax=&quot;#js-repo-pjax-container&quot;&gt;Anemometer&lt;/a&gt;&lt;/strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;三 总结：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;      本文大致说明了&lt;a href=&quot;https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html&quot; target=&quot;_blank&quot;&gt;pt-query-digest&lt;/a&gt;的使用方法，其参数的介绍说明可以看&lt;/span&gt;&lt;span&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/zhoujinyi/p/12374565.html&quot;&gt;percona-toolkit 之 【pt-query-digest】介绍&lt;/a&gt;，&lt;/span&gt;&lt;span&gt;也可以直接去官网看文档。要是有更多的比较常用的方法，会不定期的更新该文章。&lt;/span&gt;&lt;/p&gt;


</description>
<pubDate>Mon, 02 Mar 2020 16:55:00 +0000</pubDate>
<dc:creator>jyzhou</dc:creator>
<og:description>背景 关于pt-query-digest的使用场景和方法在percona-toolkit 之 【pt-query-digest】介绍文章里已经做了详细说明，现在开始介绍下如何使用，以及常用的命令。 使</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zhoujinyi/p/12392692.html</dc:identifier>
</item>
<item>
<title>从有序集合随机取一个值，应该用什么方案？ - 鹿呦呦</title>
<link>http://www.cnblogs.com/sunshineliulu/p/12399213.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sunshineliulu/p/12399213.html</guid>
<description>&lt;p&gt;今天做了一个小实验，起因如下：&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/953680/202003/953680-20200303003552762-2125838316.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;先在redis里构造了测试数据，如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; zadd my_zset_999 1 35570
(integer) 1
&amp;gt; zadd my_zset_999 2 40617
(integer) 1
&amp;gt; zadd my_zset_999 3 40956
(integer) 1
&amp;gt; zadd my_zset_999 4 41151
(integer) 1
&amp;gt;
&amp;gt; zrange my_zset_999 0 -1 WITHSCORES
1) &quot;35570&quot;
2) &quot;1&quot;
3) &quot;40617&quot;
4) &quot;2&quot;
5) &quot;40956&quot;
6) &quot;3&quot;
7) &quot;41151&quot;
8) &quot;4&quot;
&amp;gt;
&amp;gt; zrange my_zset_999 0 -1
1) &quot;35570&quot;
2) &quot;40617&quot;
3) &quot;40956&quot;
4) &quot;41151&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;测试方法就是很简单的&lt;strong&gt;计算程序运行时间&lt;/strong&gt;。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$t1 = microtime(true);
// 代码片段
$t2 = microtime(true);
$t = $t2 - $t1;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;方法1&lt;/strong&gt;&lt;br/&gt;&lt;code&gt;zrange&lt;/code&gt; key 0 -1 取出所有的值&lt;br/&gt;array_rand() 从数组中随机取出一个值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法2&lt;/strong&gt;&lt;br/&gt;&lt;code&gt;zcount&lt;/code&gt; key -inf +inf 计算该集合有多少个元素（cnt）&lt;br/&gt;rand(1, cnt) 生成一个随机数（random）&lt;br/&gt;&lt;code&gt;zrangebyscore&lt;/code&gt; key random random&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法3&lt;/strong&gt;：对方法2的改造&lt;br/&gt;&lt;code&gt;zcard&lt;/code&gt; key 计算该集合有多少个元素（cnt）&lt;br/&gt;rand(1, cnt) 生成一个随机数（random）&lt;br/&gt;&lt;code&gt;zrangebyscore&lt;/code&gt; key random random&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法4&lt;/strong&gt;：对方法1的改造&lt;br/&gt;&lt;code&gt;zrangebyscore&lt;/code&gt; key -inf +inf&lt;br/&gt;array_rand() 从数组中随机取出一个值&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;方法 1 和方法 4 都是先取出有序集合的所有值，再随机取出一个值；&lt;br/&gt;方法 2 和方法 3 则是随机从有序集合中取出一个值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;下面是各方法的运行时间对比。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法 2 和方法 3，即 &lt;code&gt;zcount&lt;/code&gt; 和 &lt;code&gt;zcard&lt;/code&gt; 的运行时间对比：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第1次&lt;/td&gt;
&lt;td&gt;0.0072240829467773&lt;/td&gt;
&lt;td&gt;0.007314920425415&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第2次&lt;/td&gt;
&lt;td&gt;0.0057311058044434&lt;/td&gt;
&lt;td&gt;0.0071389675140381&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第3次&lt;/td&gt;
&lt;td&gt;0.0065360069274902&lt;/td&gt;
&lt;td&gt;0.0071680545806885&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第4次&lt;/td&gt;
&lt;td&gt;0.0047309398651123&lt;/td&gt;
&lt;td&gt;0.0075440406799316&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第5次&lt;/td&gt;
&lt;td&gt;0.0058040618896484&lt;/td&gt;
&lt;td&gt;0.0068428516387939&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第6次&lt;/td&gt;
&lt;td&gt;0.0068061351776123&lt;/td&gt;
&lt;td&gt;0.0073769092559814&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第7次&lt;/td&gt;
&lt;td&gt;0.0070509910583496&lt;/td&gt;
&lt;td&gt;0.0070638656616211&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第8次&lt;/td&gt;
&lt;td&gt;0.008112907409668&lt;/td&gt;
&lt;td&gt;0.0076460838317871&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第9次&lt;/td&gt;
&lt;td&gt;0.0070209503173828&lt;/td&gt;
&lt;td&gt;0.0067050457000732&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第10次&lt;/td&gt;
&lt;td&gt;0.0069761276245117&lt;/td&gt;
&lt;td&gt;0.0073142051696777&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可以看出 &lt;code&gt;zcount&lt;/code&gt; 比 &lt;code&gt;zcard&lt;/code&gt; 的波动大，且用时长，所以淘汰方法2，这是因为 &lt;code&gt;zcard&lt;/code&gt; 的时间复杂度是 &lt;code&gt;O(1)&lt;/code&gt;，而 &lt;code&gt;zcount&lt;/code&gt; 的时间复杂度是 &lt;code&gt;O(log(N))&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;方法 1 和方法 3，即 &lt;code&gt;zrange&lt;/code&gt; 和 &lt;code&gt;zrangebyscore&lt;/code&gt; 的运行时间对比：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第1次&lt;/td&gt;
&lt;td&gt;0.0076210498809814&lt;/td&gt;
&lt;td&gt;0.0040271282196045&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第2次&lt;/td&gt;
&lt;td&gt;0.0066070556640625&lt;/td&gt;
&lt;td&gt;0.0056281089782715&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第3次&lt;/td&gt;
&lt;td&gt;0.0062861442565918&lt;/td&gt;
&lt;td&gt;0.0061671733856201&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第4次&lt;/td&gt;
&lt;td&gt;0.0070350170135498&lt;/td&gt;
&lt;td&gt;0.0064809322357178&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第5次&lt;/td&gt;
&lt;td&gt;0.0070219039916992&lt;/td&gt;
&lt;td&gt;0.0068569183349609&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可以看出方法 2 比方法 1 要快一些。那如果把方法 1 改成用 &lt;code&gt;zrangebyscore&lt;/code&gt; 取出所有值，再随机取元素呢，也就是方法 4，再比较方法 4 和方法 3 的运行时间：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第1次&lt;/td&gt;
&lt;td&gt;0.0068261623382568&lt;/td&gt;
&lt;td&gt;0.0075819492340088&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第2次&lt;/td&gt;
&lt;td&gt;0.0072751045227051&lt;/td&gt;
&lt;td&gt;0.0073590278625488&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第3次&lt;/td&gt;
&lt;td&gt;0.0055849552154541&lt;/td&gt;
&lt;td&gt;0.0072290897369385&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第4次&lt;/td&gt;
&lt;td&gt;0.0048110485076904&lt;/td&gt;
&lt;td&gt;0.0075399875640869&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第5次&lt;/td&gt;
&lt;td&gt;0.0073840618133545&lt;/td&gt;
&lt;td&gt;0.0075678825378418&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第6次&lt;/td&gt;
&lt;td&gt;0.0072331428527832&lt;/td&gt;
&lt;td&gt;0.0072460174560547&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第7次&lt;/td&gt;
&lt;td&gt;0.007411003112793&lt;/td&gt;
&lt;td&gt;0.0074880123138428&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第8次&lt;/td&gt;
&lt;td&gt;0.0062360763549805&lt;/td&gt;
&lt;td&gt;0.007282018661499&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;第9次&lt;/td&gt;
&lt;td&gt;0.0077290534973145&lt;/td&gt;
&lt;td&gt;0.0074591636657715&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;第10次&lt;/td&gt;
&lt;td&gt;0.0068199634552002&lt;/td&gt;
&lt;td&gt;0.0074419975280762&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;可以看到方法 4 比方法 3 快一些，再用 &lt;code&gt;ab&lt;/code&gt; 测试工具测一下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# 模拟100个并发用户，对一个资源发送100个请求。
ab -c 100 -n 100 url&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;方法 4 的测试结果如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Server Software:        nginx/1.15.11
Server Hostname:        127.0.0.1
Server Port:            80

Document Path:          test1.php
Document Length:        38 bytes

Concurrency Level:      100
Time taken for tests:   0.520 seconds
Complete requests:      100
Failed requests:        0
Non-2xx responses:      100
Total transferred:      23400 bytes
HTML transferred:       3800 bytes
Requests per second:    192.25 [#/sec] (mean)
Time per request:       520.161 [ms] (mean)
Time per request:       5.202 [ms] (mean, across all concurrent requests)
Transfer rate:          43.93 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:       18   25   5.6     26      35
Processing:    41  219  87.1    219     359
Waiting:       41  219  87.4    219     359
Total:         60  245  92.3    246     393

Percentage of the requests served within a certain time (ms)
  50%    246
  66%    296
  75%    326
  80%    340
  90%    372
  95%    392
  98%    392
  99%    393
 100%    393 (longest request)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;方法 3 的测试结果如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Server Software:        nginx/1.15.11
Server Hostname:        127.0.0.1
Server Port:            80

Document Path:          /test2.php
Document Length:        38 bytes

Concurrency Level:      100
Time taken for tests:   0.526 seconds
Complete requests:      100
Failed requests:        0
Non-2xx responses:      100
Total transferred:      23400 bytes
HTML transferred:       3800 bytes
Requests per second:    189.97 [#/sec] (mean)
Time per request:       526.390 [ms] (mean)
Time per request:       5.264 [ms] (mean, across all concurrent requests)
Transfer rate:          43.41 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:       16   23   3.8     25      31
Processing:    36  216  89.5    220     372
Waiting:       36  216  89.2    220     372
Total:         54  239  92.9    245     403

Percentage of the requests served within a certain time (ms)
  50%    245
  66%    295
  75%    316
  80%    333
  90%    362
  95%    374
  98%    402
  99%    403
 100%    403 (longest request)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;通过 &lt;code&gt;Time taken for tests&lt;/code&gt;、&lt;code&gt;Requests per second&lt;/code&gt; 等结果，可以看出方法 4 比方法 3 的性能更高一些。&lt;/p&gt;
&lt;p&gt;也就是先取出所有元素，再随机取出一个值 和 构造一个随机数取出一个元素 这两种方案，前者更好一些。&lt;/p&gt;
&lt;p&gt;到这里就结束了吗？并没有~&lt;/p&gt;
&lt;p&gt;最终结果就是不采用&lt;strong&gt;有序集合&lt;/strong&gt;这种数据结构了，用&lt;strong&gt;列表&lt;/strong&gt;或&lt;strong&gt;集合&lt;/strong&gt;这种数据结构即可。因为有序集合 &lt;code&gt;zset&lt;/code&gt; 还要构造 &lt;code&gt;score&lt;/code&gt; 值，比如插入元素，要查出最大的score值，再加 1。&lt;br/&gt;既然需求只是从一堆元素中随机取一个值，用&lt;strong&gt;列表&lt;/strong&gt;或&lt;strong&gt;集合&lt;/strong&gt;这种数据结构就能满足所需了。&lt;/p&gt;
</description>
<pubDate>Mon, 02 Mar 2020 16:38:00 +0000</pubDate>
<dc:creator>鹿呦呦</dc:creator>
<og:description>这是一篇工作随手记。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/sunshineliulu/p/12399213.html</dc:identifier>
</item>
<item>
<title>彻底消灭if-else嵌套 - 风尘博客</title>
<link>http://www.cnblogs.com/vandusty/p/12375475.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/vandusty/p/12375475.html</guid>
<description>&lt;p&gt;if-else 作为每种编程语言都不可或缺的条件语句，我们在编程时会大量的用到。但if-else 一般不建议嵌套超过三层，如果一段代码存在过多的 if-else 嵌套，代码的可读性就会急速下降，后期维护难度也大大提高。&lt;/p&gt;&lt;div id=&quot;cnblogs_post_body&quot; readability=&quot;229.5189064305&quot;&gt;
&lt;h2 id=&quot;一背景&quot;&gt;一、背景&lt;/h2&gt;
&lt;h3 id=&quot;反面教材&quot;&gt;1.1 反面教材&lt;/h3&gt;
&lt;p&gt;不知大家有没遇到过像&lt;strong&gt;横放着的金字塔&lt;/strong&gt;一样的&lt;code&gt;if-else&lt;/code&gt;嵌套：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;if (true) {
    if (true) {
        if (true) {
            if (true) {
                if (true) {
                    if (true) {
                        
                    }
                }
            }
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;if-else&lt;/code&gt;作为每种编程语言都不可或缺的条件语句，我们在编程时会大量的用到。&lt;/p&gt;
&lt;p&gt;但&lt;code&gt;if-else&lt;/code&gt;一般不建议嵌套超过三层，如果一段代码存在过多的&lt;code&gt;if-else&lt;/code&gt;嵌套，代码的可读性就会急速下降，后期维护难度也大大提高。&lt;/p&gt;
&lt;h3 id=&quot;亲历的重构&quot;&gt;2.2 亲历的重构&lt;/h3&gt;
&lt;p&gt;前阵子重构了&lt;strong&gt;服务费收费规则&lt;/strong&gt;，重构前的&lt;code&gt;if-else&lt;/code&gt;嵌套如下。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public Double commonMethod(Integer type, Double amount) {
    if (3 == type) {
        // 计算费用
        if (true) {
            // 此处省略200行代码，包含n个if-else，下同。。。
        }
        return 0.00;
    } else if (2 == type) {
        // 计算费用
        return 6.66;
    }else if (1 == type) {
        // 计算费用
        return 8.88;
    }else if (0 == type){
        return 9.99;
    }
    throw new IllegalArgumentException(&quot;please input right value&quot;);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们都写过类似的代码，回想起被 &lt;code&gt;if-else&lt;/code&gt; 支配的恐惧，如果有新需求：新增计费规则或者修改既定计费规则，无所下手。&lt;/p&gt;
&lt;h3 id=&quot;追根溯源&quot;&gt;2.3 追根溯源&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;我们来分析下代码多分支的原因&lt;/li&gt;
&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;业务判断&lt;/li&gt;
&lt;li&gt;空值判断&lt;/li&gt;
&lt;li&gt;状态判断&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;如何处理呢？&lt;/li&gt;
&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;在有多种算法相似的情况下，利用策略模式，把业务判断消除，各子类实现同一个接口，只关注自己的实现（&lt;strong&gt;本文核心&lt;/strong&gt;）；&lt;/li&gt;
&lt;li&gt;尽量把所有空值判断放在外部完成，内部传入的变量由外部接口保证不为空，从而减少空值判断(可参考&lt;a href=&quot;https://juejin.im/post/5d79201c6fb9a06b084d216d&quot;&gt;如何从 if-else 的参数校验中解放出来？&lt;/a&gt;)；&lt;/li&gt;
&lt;li&gt;把分支状态信息预先缓存在&lt;code&gt;Map&lt;/code&gt;里，直接&lt;code&gt;get&lt;/code&gt;获取具体值，消除分支（本文也有体现）。&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;来看看简化后的业务调用&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;CalculationUtil.getFee(type, amount)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;serviceFeeHolder.getFee(type, amount)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;是不是超级简单，下面介绍两种实现方式（文末附示例代码）。&lt;/p&gt;
&lt;h2 id=&quot;二通用部分&quot;&gt;二、通用部分&lt;/h2&gt;
&lt;h3 id=&quot;需求概括&quot;&gt;2.1 需求概括&lt;/h3&gt;
&lt;p&gt;我们拥有很多公司会员，暂且分为普通会员、初级会员、中级会员和高级会员，会员级别不同计费规则不同。该模块负责计算会员所需的缴纳的服务费。&lt;/p&gt;
&lt;h3 id=&quot;会员枚举&quot;&gt;2.2 会员枚举&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;用于维护会员类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public enum MemberEnum {

    ORDINARY_MEMBER(0, &quot;普通会员&quot;),
    JUNIOR_MEMBER(1, &quot;初级会员&quot;),
    INTERMEDIATE_MEMBER(2, &quot;中级会员&quot;),
    SENIOR_MEMBER(3, &quot;高级会员&quot;),

    ;

    int code;
    String desc;

    MemberEnum(int code, String desc) {
        this.code = code;
        this.desc = desc;
    }


    public int getCode() {
        return code;
    }

    public void setDesc(int code) {
        this.code = code;
    }

    public String getDesc() {
        return desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;定义一个策略接口&quot;&gt;2.3 定义一个策略接口&lt;/h3&gt;
&lt;p&gt;该接口包含两个方法：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;compute(Double amount)&lt;/code&gt;：各计费规则的抽象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getType()&lt;/code&gt;：获取枚举中维护的会员级别&lt;/li&gt;
&lt;/ol&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public interface FeeService {

    /**
     * 计费规则
     * @param amount 会员的交易金额
     * @return
     */
    Double compute(Double amount);

    /**
     * 获取会员级别
     * @return
     */
    Integer getType();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;三非框架实现&quot;&gt;三、非框架实现&lt;/h2&gt;
&lt;h3 id=&quot;项目依赖&quot;&gt;3.1 项目依赖&lt;/h3&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;4.12&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;不同计费规则的实现&quot;&gt;3.2 不同计费规则的实现&lt;/h3&gt;
&lt;p&gt;这里四个子类实现了策略接口，其中 &lt;code&gt;compute()&lt;/code&gt;方法实现各个级别会员的计费逻辑，&lt;code&gt;getType()&lt;/code&gt;指定了该类所属的会员级别。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;普通会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class OrdinaryMember implements FeeService {

    /**
     * 计算普通会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 9.99;
    }

    @Override
    public Integer getType() {
        return MemberEnum.ORDINARY_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;初级会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class JuniorMember implements FeeService {

    /**
     * 计算初级会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 8.88;
    }

    @Override
    public Integer getType() {
        return MemberEnum.JUNIOR_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;中级会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class IntermediateMember implements FeeService {

    /**
     * 计算中级会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 6.66;
    }

    @Override
    public Integer getType() {
        return MemberEnum.INTERMEDIATE_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;高级会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class SeniorMember implements FeeService {

    /**
     * 计算高级会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 0.01;
    }

    @Override
    public Integer getType() {
        return MemberEnum.SENIOR_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;核心工厂&quot;&gt;3.3 核心工厂&lt;/h3&gt;
&lt;p&gt;创建一个工厂类&lt;code&gt;ServiceFeeFactory.java&lt;/code&gt;，该工厂类管理所有的策略接口实现类。具体见代码注释。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class ServiceFeeFactory {

    private Map&amp;lt;Integer, FeeService&amp;gt; map;

    public ServiceFeeFactory() {

        // 该工厂管理所有的策略接口实现类
        List&amp;lt;FeeService&amp;gt; feeServices = new ArrayList&amp;lt;&amp;gt;();

        feeServices.add(new OrdinaryMember());
        feeServices.add(new JuniorMember());
        feeServices.add(new IntermediateMember());
        feeServices.add(new SeniorMember());

        // 把所有策略实现的集合List转为Map
        map = new ConcurrentHashMap&amp;lt;&amp;gt;();
        for (FeeService feeService : feeServices) {
            map.put(feeService.getType(), feeService);
        }
    }

    /**
     * 静态内部类单例
     */
    public static class Holder {
        public static ServiceFeeFactory instance = new ServiceFeeFactory();
    }

    /**
     * 在构造方法的时候，初始化好 需要的 ServiceFeeFactory
     * @return
     */
    public static ServiceFeeFactory getInstance() {
        return Holder.instance;
    }

    /**
     * 根据会员的级别type 从map获取相应的策略实现类
     * @param type
     * @return
     */
    public FeeService get(Integer type) {
        return map.get(type);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;工具类&quot;&gt;3.4 工具类&lt;/h3&gt;
&lt;p&gt;新建通过一个工具类管理计费规则的调用，并对不符合规则的公司级别输入抛&lt;code&gt;IllegalArgumentException&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class CalculationUtil {

    /**
     * 暴露给用户的的计算方法
     * @param type 会员级别标示（参见 MemberEnum）
     * @param money 当前交易金额
     * @return 该级别会员所需缴纳的费用
     * @throws IllegalArgumentException 会员级别输入错误
     */
    public static Double getFee(int type, Double money) {
        FeeService strategy = ServiceFeeFactory.getInstance().get(type);
        if (strategy == null) {
            throw new IllegalArgumentException(&quot;please input right value&quot;);
        }
        return strategy.compute(money);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;核心是&lt;strong&gt;通过&lt;code&gt;Map&lt;/code&gt;的&lt;code&gt;get()&lt;/code&gt;方法，根据传入 &lt;code&gt;type&lt;/code&gt;，即可获取到对应会员类型计费规则的实现，从而减少了&lt;code&gt;if-else&lt;/code&gt;的业务判断。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;测试&quot;&gt;3.5 测试&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class DemoTest {

    @Test
    public void test() {
        Double fees = upMethod(1,20000.00);
        System.out.println(fees);
        // 会员级别超范围，抛 IllegalArgumentException
        Double feee = upMethod(5, 20000.00);
    }

    public Double upMethod(Integer type, Double amount) {
        // getFee（）是暴露给用户的的计算方法
        return CalculationUtil.getFee(type, amount);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;执行结果&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;8.88
java.lang.IllegalArgumentException: please input right value&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;四spring-boot-实现&quot;&gt;四、&lt;code&gt;Spring Boot&lt;/code&gt; 实现&lt;/h3&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;上述方法无非是借助策略模式+工厂模式+单例模式实现，但是实际场景中，我们都已经集成了&lt;code&gt;Spring Boot&lt;/code&gt;，这一段就看一下如何借助&lt;code&gt;Spring Boot&lt;/code&gt;更简单实现本次的优化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;项目依赖-1&quot;&gt;4.1 项目依赖&lt;/h3&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-configuration-processor&amp;lt;/artifactId&amp;gt;
        &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;
    &amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;不同计费规则的实现-1&quot;&gt;4.2 不同计费规则的实现&lt;/h3&gt;
&lt;p&gt;这部分是与上面区别在于：&lt;strong&gt;把策略的实现类得是交给Spring 容器管理&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;普通会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Component
public class OrdinaryMember implements FeeService {

    /**
     * 计算普通会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 9.99;
    }

    @Override
    public Integer getType() {
        return MemberEnum.ORDINARY_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;初级会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Component
public class JuniorMember implements FeeService {

    /**
     * 计算初级会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 8.88;
    }

    @Override
    public Integer getType() {
        return MemberEnum.JUNIOR_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;中级会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Component
public class IntermediateMember implements FeeService {

    /**
     * 计算中级会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 6.66;
    }

    @Override
    public Integer getType() {
        return MemberEnum.INTERMEDIATE_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;高级会员计费规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Component
public class SeniorMember implements FeeService {

    /**
     * 计算高级会员所需缴费的金额
     * @param amount 会员的交易金额
     * @return
     */
    @Override
    public Double compute(Double amount) {
        // 具体的实现根据业务需求修改
        return 0.01;
    }

    @Override
    public Integer getType() {
        return MemberEnum.SENIOR_MEMBER.getCode();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;别名转换&quot;&gt;4.3 别名转换&lt;/h3&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;思考：程序如何通过一个标识，怎么识别解析这个标识，找到对应的策略实现类？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的方案是：在配置文件中制定，便于维护。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;application.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;alias:
  aliasMap:
    first: ordinaryMember
    second: juniorMember
    third: intermediateMember
    fourth: seniorMember&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;AliasEntity.java&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Component
@EnableConfigurationProperties
@ConfigurationProperties(prefix = &quot;alias&quot;)
public class AliasEntity {

    private HashMap&amp;lt;String, String&amp;gt; aliasMap;

    public HashMap&amp;lt;String, String&amp;gt; getAliasMap() {
        return aliasMap;
    }

    public void setAliasMap(HashMap&amp;lt;String, String&amp;gt; aliasMap) {
        this.aliasMap = aliasMap;
    }

    /**
     * 根据描述获取该会员对应的别名
     * @param desc
     * @return
     */
    public String getEntity(String desc) {
        return aliasMap.get(desc);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;该类为了便于读取配置，因为存入的是&lt;code&gt;Map&lt;/code&gt;的&lt;code&gt;key-value&lt;/code&gt;值，&lt;code&gt;key&lt;/code&gt;存的是描述，&lt;code&gt;value&lt;/code&gt;是各级别会员&lt;code&gt;Bean&lt;/code&gt;的别名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;策略工厂&quot;&gt;4.4 策略工厂&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Component
public class ServiceFeeHolder {

    /**
     * 将 Spring 中所有实现 ServiceFee 的接口类注入到这个Map中
     */
    @Resource
    private Map&amp;lt;String, FeeService&amp;gt; serviceFeeMap;

    @Resource
    private AliasEntity aliasEntity;

    /**
     * 获取该会员应当缴纳的费用
     * @param desc 会员标志
     * @param money 交易金额
     * @return
     * @throws IllegalArgumentException 会员级别输入错误
     */
    public Double getFee(String desc, Double money) {
        return getBean(desc).compute(money);
    }

    /**
     * 获取会员标志（枚举中的数字）
     * @param desc 会员标志
     * @return
     * @throws IllegalArgumentException 会员级别输入错误
     */
    public Integer getType(String desc) {
        return getBean(desc).getType();
    }

    private FeeService getBean(String type) {
        // 根据配置中的别名获取该策略的实现类
        FeeService entStrategy = serviceFeeMap.get(aliasEntity.getEntity(type));
        if (entStrategy == null) {
            // 找不到对应的策略的实现类，抛出异常
            throw new IllegalArgumentException(&quot;please input right value&quot;);
        }
        return entStrategy;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;亮点&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;将 &lt;code&gt;Spring&lt;/code&gt;中所有 &lt;code&gt;ServiceFee.java&lt;/code&gt; 的实现类注入到&lt;code&gt;Map&lt;/code&gt;中，不同策略通过其不同的&lt;code&gt;key&lt;/code&gt;获取其实现类；&lt;/li&gt;
&lt;li&gt;找不到对应的策略的实现类，抛出&lt;code&gt;IllegalArgumentException&lt;/code&gt;异常。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;测试-1&quot;&gt;4.5 测试&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@SpringBootTest
@RunWith(SpringRunner.class)
public class DemoTest {

    @Resource
    ServiceFeeHolder serviceFeeHolder;

    @Test
    public void test() {
         // 计算应缴纳费用
        System.out.println(serviceFeeHolder.getFee(&quot;second&quot;, 1.333));
        // 获取会员标志
        System.out.println(serviceFeeHolder.getType(&quot;second&quot;));
        // 会员描述错误，抛 IllegalArgumentException
        System.out.println(serviceFeeHolder.getType(&quot;zero&quot;));
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;执行结果&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;8.88
1
java.lang.IllegalArgumentException: please input right value&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;五总结&quot;&gt;五、总结&lt;/h2&gt;
&lt;p&gt;两种方案主要参考了设计模式中的&lt;strong&gt;策略模式&lt;/strong&gt;，因为策略模式刚好符合本场景：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;系统中有很多类，而他们的区别仅仅在于他们的行为不同。&lt;/li&gt;
&lt;li&gt;一个系统需要动态地在几种算法中选择一种。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;策略模式角色&quot;&gt;5.1 策略模式角色&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/28/170878d0ec4647c0?w=764&amp;amp;h=329&amp;amp;f=jpeg&amp;amp;s=27512&quot; alt=&quot;风尘博客&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Context&lt;/code&gt;: 环境类&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;code&gt;Context&lt;/code&gt;叫做上下文角色，起承上启下封装作用，屏蔽高层模块对策略、算法的直接访问，封装可能存在的变化，对应本文的&lt;code&gt;ServiceFeeFactory.java&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Strategy&lt;/code&gt;: 抽象策略类&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;定义算法的接口，对应本文的&lt;code&gt;FeeService.java&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;ConcreteStrategy&lt;/code&gt;: 具体策略类&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;实现具体策略的接口，对应本文的&lt;code&gt;OrdinaryMember.java&lt;/code&gt;/&lt;code&gt;JuniorMember.java&lt;/code&gt;/&lt;code&gt;IntermediateMember.java&lt;/code&gt;/&lt;code&gt;SeniorMember.java&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;示例代码及参考文章&quot;&gt;5.2 示例代码及参考文章&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/vanDusty/Design-Patterns/tree/master/strategy-factory-single-demo&quot;&gt;非框架版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vanDusty/Design-Patterns/tree/master/strategy-spring&quot;&gt;Spring Boot 框架版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5d79201c6fb9a06b084d216d&quot;&gt;如何从 if-else 的参数校验中解放出来？&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;技术交流&quot;&gt;5.3 技术交流&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.dustyblog.cn&quot;&gt;风尘博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.im/user/5d5ea68e6fb9a06afa328f56/posts&quot;&gt;风尘博客-掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/vandusty/&quot;&gt;风尘博客-博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vanDusty&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</description>
<pubDate>Mon, 02 Mar 2020 16:15:00 +0000</pubDate>
<dc:creator>风尘博客</dc:creator>
<og:description>if-else 作为每种编程语言都不可或缺的条件语句，我们在编程时会大量的用到。但if-else 一般不建议嵌套超过三层，如果一段代码存在过多的 if-else 嵌套，代码的可读性就会急速下降，后期维</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/vandusty/p/12375475.html</dc:identifier>
</item>
<item>
<title>记一次手机与PC同步开发Android项目 - zzerx</title>
<link>http://www.cnblogs.com/zzerx/p/12399094.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zzerx/p/12399094.html</guid>
<description>&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;
&lt;p&gt;能力不足时曲线救国 &amp;gt;&lt;/p&gt;
&lt;p&gt;其他的曲线救国 &amp;gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;当今移动设备飞速发展，各种软件也层出不穷，大大的改变了人类现有的生活和工作方式。&lt;br/&gt;突然有一天，出门在外，想到一个主意，需要马上编写，奈何却没有电脑 没有开发环境。事后研究了一下手机端进行Android开发的方式：&lt;/p&gt;
&lt;p&gt;其实手机上已经出现很多优秀的Android开发app，AIDE,Androlua，JavaN-IDE等，最接近AS的就是AIDE了，有自己的gradle和git ，从AS下载的项目经过简单的修改就可以运行，且可以通过github实现共享达成双端同步开发的便利。&lt;/p&gt;
&lt;p&gt;但是最近一个androidX项目却栽了跟头，大概是AIDE的编译能力不足了，这可怎么办，手机开发旅程刚刚开始怎么能就这样结束？花了几天的事件搜索查找各种办法，终于让我再酷安找到了较为可行的办法，楼主Vcoty提出了利用&lt;a href=&quot;http://www.termux.cn/&quot;&gt;Termux&lt;/a&gt;（一个很强大的终端模拟器）安装linux来编译本地项目！&lt;/p&gt;
&lt;p&gt;我像抓住了救命稻草，赶紧研究了一番，这篇文章记录移动开发过程，和其他的一些想法。&lt;/p&gt;
&lt;h2 id=&quot;流程简介&quot;&gt;流程简介&lt;/h2&gt;
&lt;p&gt;AS创建Android项目并上传github --&amp;gt; AIDE从github克隆项目 --&amp;gt; 进行编写开发 --&amp;gt; Termu&amp;gt;Arch编译AIDE目录下的项目--&amp;gt; 继而完成安装测试&lt;br/&gt;（此时AIDE只充当编辑器的角色了）&lt;/p&gt;
&lt;h2 id=&quot;as创建项目并上传github&quot;&gt;AS创建项目并上传GitHub&lt;/h2&gt;
&lt;p&gt;考虑篇幅和重点，这步推个文【&lt;a href=&quot;https://www.jianshu.com/p/77ef6cdff937&quot;&gt;提交AS项目到GitHub&lt;/a&gt;】，或者自行搜索其他教程，应该不难。&lt;/p&gt;
&lt;h2 id=&quot;aide克隆github项目&quot;&gt;AIDE克隆GitHub项目&lt;/h2&gt;
&lt;p&gt;也很简单：点击右下角蓝色按钮出来文件管理界面，进入到AppProjects目录点击Clone Git repository &amp;gt; 输入git（https）链接 &amp;gt; 点击CLONE,就用前面一篇文章的liswView项目吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233005237-952448853.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;termux编译aide目录下的项目文件&quot;&gt;termux编译AIDE目录下的项目文件&lt;/h2&gt;
&lt;p&gt;这个的第一次配置过程就很繁琐，源教程来自于Github项目【&lt;a href=&quot;https://github.com/VcotyQin/TermuxWithGradle&quot;&gt;TermuxWithGradle&lt;/a&gt;】，可以边看Github的教程边看文章。&lt;/p&gt;
&lt;h3 id=&quot;termux安装archunbantu&quot;&gt;Termux安装Arch/unbantu&lt;/h3&gt;
&lt;p&gt;首先下载Termux，各大app平台均有下载，但是只有FD上的是&lt;a href=&quot;https://f-droid.org/en/packages/com.termux/&quot;&gt;完整包&lt;/a&gt;（其他平台安装后需要梯子下载Termux的资源文件才可运行）&lt;br/&gt;Termux安装好了，开始安装Arch吧！先别急基础包还没下呢：&lt;br/&gt;Termux运行&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;pkg install proot wget curl
##需要的话还建议下vim编辑器
pkg install vim&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;下载Arch并安装两个方式，其实两个系统我都试过了，这里主要说Arch。ubuntu也大同小异。&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;##原教程
wget https://github.com/SDRausty/TermuxArch/raw/master/setupTermuxArch.bash &amp;amp;&amp;amp; bash setupTermuxArch.bash
##anlinux仪表盘教程
##arch系统
pkg install wget openssl-tool proot tar -y &amp;amp;&amp;amp; hash -r &amp;amp;&amp;amp; wget https://raw.githubusercontent.com/EXALAB/AnLinux-Resources/master/Scripts/Installer/Arch/armhf/arch.sh &amp;amp;&amp;amp; bash arch.sh
##ubuntu系统
pkg install wget openssl-tool proot -y &amp;amp;&amp;amp; hash -r &amp;amp;&amp;amp; wget https://raw.githubusercontent.com/EXALAB/AnLinux-Resources/master/Scripts/Installer/Ubuntu/ubuntu.sh &amp;amp;&amp;amp; bash ubuntu.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;安装完毕后ls会出现这样几个文件&lt;strong&gt;arch-binds 丶arch-fs(系统文件) 丶 arsh.sh 丶 start-arch.sh(启动系统脚本)&lt;/strong&gt;&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233107709-876642980.jpg&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;arch无法访问网络&quot;&gt;Arch无法访问网络&lt;/h4&gt;
&lt;p&gt;Termux输入 &lt;strong&gt;./start-arch.sh&lt;/strong&gt; 启动系统，可以发现命令输入已经变成了 &lt;strong&gt;[root@localhost ~]&lt;/strong&gt; 了，如果你细心的话还会发现欢迎页写着这么一句话：&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233241285-1596207036.jpg&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233330009-381318176.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;意思是让你运行目录下的additional.sh脚本来修复网络功能，修呗。&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;  ##先给脚本文件权限，再运行
  chmod 755 additional.sh
  sh additional.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;arch-pacman安装软件包失败&quot;&gt;Arch-pacman安装软件包失败&lt;/h4&gt;
&lt;p&gt;接下来开始用arch配置构建环境，要装SDKman之前，还是得先安装基础包（什么？之前我不是装过了吗？那是Tremux，现在是Arch所以需要）&lt;br/&gt;arch用的软件包管理是pacman&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;##unzip和zip软件包是安装SDKman的依赖包
pacman -S wget curl unzip zip&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;你会发现，安装失败！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233417094-1917346430.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;原因是软件的签名有问题，嗯呵，一番查找解决办法：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;pacman-key --init
pacman-key --populate&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;ok重新装下软件包，然后下一步&amp;gt;&lt;/p&gt;
&lt;h3 id=&quot;arch安装sdkman&quot;&gt;Arch安装SDKman&lt;/h3&gt;
&lt;p&gt;可直接移步至&lt;a href=&quot;https://sdkman.io/&quot;&gt;SDKman&lt;/a&gt;官网&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;##安装，完毕之后建议打开新的bash
curl -s &quot;https://get.sdkman.io&quot; | bash
##source更新（关闭Arshshixiao）
 source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233530711-439692211.jpg&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;sdk安装gradle&quot;&gt;sdk安装gradle&lt;/h4&gt;
&lt;p&gt;安装SDKman之后这步没有难度&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;sdk install gradle 6.1.1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302233548111-537870000.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;arch安装jdk&quot;&gt;Arch安装JDK&lt;/h3&gt;
&lt;p&gt;安装JDK配置环境我想你已经不是第一次了&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;##原教程方法下载解压至/root 一步到位
wget https://github.com/VcotyQin/TermuxWithGradle/raw/master/jdk8_arm64/jdk-8u221-linux-arm64-vfp-hflt.tar.gz &amp;amp;&amp;amp; tar xzvf jdk-8u221-linux-arm64-vfp-hflt.tar.gz&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;arch安装androidsdk&quot;&gt;Arch安装AndroidSDK&lt;/h3&gt;
&lt;p&gt;和JDK一样没什么好说的&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;##创建一个android_sdk目录并进入到它
mkdir android_sdk &amp;amp;&amp;amp; cd android_sdk
##安装Android SDK Tools
wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip &amp;amp;&amp;amp; unzip sdk-tools-linux-4333796.zip &lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;配置环境&quot;&gt;配置环境&lt;/h3&gt;
&lt;p&gt;下载解压完了再一起配置环境把&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt; #现在我们的arch的/root/目录下就有android_sdk 和 jdk_8u221xxx 文件夹了
 cd  ls ##查看
 ##配置环境
 vim /etc/profile 
 ##最后面输入
 export JAVA_HOME=/root/jdk1.8.0_221 #此处为jdk路径
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib/tools.jar:${JRE_HOME}/lib/dt.jar
export PATH=${JAVA_HOME}/bin:${JAVA_HOME}/jre/bin:$PATH

export ANDROID_HOME=/root/android_sdk #此处写android_sdk的路径
export PATH=$ANDROID_HOME/tools:$PATH
export PATH=$ANDROID_HOME/tools/bin:$PATH
export PATH=$ANDROID_HOME/platform-tools:$PATH
## wq保存文件之后更新
source /etc/profile
## 校验配置是否正确
echo $JAVA_HOME $ANDROID_HOME
## 输出/root/jdk_8u221 /root/android_sdk 代表成功&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302234104370-1138134644.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;噗嗤，前面是不是忘记安装vim编辑器了 &lt;strong&gt;pacman -S vim&lt;/strong&gt; 不谢，vim编辑器i进入编辑模式，按ESC和：输入wq代表进入命令模式保存修改并退出vim。&lt;/p&gt;
&lt;h3 id=&quot;sdkmanager安装build-tools等&quot;&gt;sdkmanager安装build-tools等&lt;/h3&gt;
&lt;p&gt;这个sdkmanager可不是刚刚安装的SDKman，他是位于你android_sdk/tools/bin/下的，所以&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt; ##如果你现在位于root/目录下
 cd android_sdk/tools/bin
sh sdkmanager &quot;platform-tools&quot; &quot;build-tools;29.0.3&quot; &quot;platforms;android-29&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这一步也不会有社么问题，安装完成&lt;/p&gt;
&lt;h3 id=&quot;arch适配termux&quot;&gt;Arch适配Termux&lt;/h3&gt;
&lt;p&gt;这是Vcoty为TermuxArch适配写的脚本,目前仅支持arch系统，arm64架构。&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;wget https://raw.githubusercontent.com/VcotyQin/TermuxWithGradle/master/adaptTermuxARM64.sh &amp;amp;&amp;amp; chmod 777 adaptTermuxARM64.sh &amp;amp;&amp;amp; ./adaptTermuxARM64.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;漫长的下载。。。&lt;br/&gt;如果下载完毕运行adaptTermuxARM64.sh出现错误，则应该是文件的权限问题，可以分开运行&lt;br/&gt;&lt;strong&gt;chmod 777 adaptTermuxARM64.sh&lt;/strong&gt; 和 &lt;strong&gt;./adaptTermuxARM64.sh&lt;/strong&gt; 注意看报错信息&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302234225431-627026062.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果cpu架构不同则需要替换android_sdk/build-tools/版本号/下的aapt aapt2&lt;br/&gt;替换方法(前面安装的build-tools是29.0.3版本)&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;## 下载aapt aapt2
wegt
https://raw.githubusercontent.com/VcotyQin/TermuxWithGradle/master/aapt/arm64/aapt
 https://raw.githubusercontent.com/VcotyQin/TermuxWithGradle/master/aapt/arm64/aapt2

ls -l #查看文件权限，大小，创建日期等详细信息
## 给予文件相关权限
chmod 755 aapt 
chmod 755 aapt2
##复制文件到android_sdk/build-tools/29.0.3/
cp aapt android_sdk/build-tools/29.0.3/
cp aapt2 android_sdk/build-tools/29.0.3/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;完成后可以进入里面ls -l查看权限是否正确&lt;/p&gt;
&lt;h3 id=&quot;arch安装glibc&quot;&gt;Arch安装glibc&lt;/h3&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;pacman -S glibc&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;编译项目&quot;&gt;编译项目&lt;/h3&gt;
&lt;p&gt;啊啊啊，终于到这一步了，激动万分的 &lt;strong&gt;cd /mnt/sdcard/&lt;/strong&gt; 却发现找不到目录？&lt;/p&gt;
&lt;h4 id=&quot;找不到sdcard&quot;&gt;找不到sdcard&lt;/h4&gt;
&lt;p&gt;像一盘冷水差点就浇灭了我的激情，但是箭在弦上，岂能不发，我还是找到了解决办法：&lt;br/&gt;首先exit退出Arch，还记得我们启动Arch的脚本文件star-arsh.sh吗?找到它！&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;vim star-arsh.sh #你是不是又没装vim (:&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;大概再二十几行处注意看注释（vim ESC:set number开启行号）&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;## uncomment the following line to mount /sdcard directly to /
#command+=&quot; -b /sdcard&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;把 &lt;strong&gt;#command+=&quot; -b /sdcard&quot;&lt;/strong&gt;注释#给取消掉， &lt;strong&gt;wq&lt;/strong&gt;保存修改， &lt;strong&gt;./star-arsh.sh&lt;/strong&gt;进入Arch。sdcard被“挂载”到了/下。&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302234412589-1814139963.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;进入我们的AIDE项目目录&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;cd /sdcard/AppProjcet/你的项目名/app
ls #gradle.build文件所在&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;先不要着急 &lt;strong&gt;gradle build&lt;/strong&gt;，前面说过&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt; source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;是临时配置，关机失效，我们刚刚关闭了，所以还要重新运行&lt;br/&gt;然后可以开心的编译，然后去项目bliud/outputs/apk/debug/下安装apk测试了&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;gradle build&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302234454901-677035564.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里Vcoty说了几点需要注意的：&lt;/p&gt;
&lt;p&gt;classpath 'com.android.tools.build:gradle:3.0.0'中的版本号为Android Gradle插件的版本，而非Gradle的版本，官方有一个两者的对应关系。两者版本一定要对应上，否则会报错&lt;br/&gt;目前com.android.tools.build:gradle的版本最好低于3.1.0，因为在3.1.0之上启用aapt2打包资源之后会出问题&lt;br/&gt;每一个版本的build-tools中的aapt都需替换为对应cpu架构的版本&lt;/p&gt;
&lt;p&gt;祝你BUILD SUCCESS!&lt;/p&gt;
&lt;h2 id=&quot;利用服务器编译&quot;&gt;利用服务器编译&lt;/h2&gt;
&lt;p&gt;虽然千辛万苦的实现了手机上编译gradle，但是还是存在限制，或者其他未被发掘的问题，我想到了我空闲的Ubuntu云服务器，用云服务器编译项目，编译环境完美，再通过ftp或者git拿到apk文件不就行了？开搞！&lt;br/&gt;服务器是Ubuntu就不用装啥Arch了，接下来希望你已经熟悉linux基础和gradle的安装配置：&lt;br/&gt;手机可用Termux通过ssh连接服务器，&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;apt install git unzip zip vim curl vsftpd #你懂的
curl -s &quot;https://get.sdkman.io&quot; | bash #sdkman
source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot; 
##jdk和sdk安装方法一样，省略，安装biuldtools工具也都一样
##不同的是不用执行Termux适配脚本了，复制aapt也无需，直接安装glibc
apt install glibc 
git clone 项目链接 #把项目克隆到服务器，git配置请看百度。。。太长了
cd 项目app目录
gralde bulid #完成
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;服务器编译成功：&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302235405900-1414111198.png&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302235833794-1884353263.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;手机安装apk正常&lt;/p&gt;
&lt;h4 id=&quot;可能引发的错误&quot;&gt;可能引发的错误&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;local.properties&lt;/strong&gt;文件的配置默认sdk文件需要修改成当前android_sdk路径，否则会编译错误&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂时没遇到&lt;/p&gt;
&lt;h3 id=&quot;ftp传输编译后的apk文件&quot;&gt;ftp传输编译后的apk文件&lt;/h3&gt;
&lt;p&gt;相关文章：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;【&lt;a href=&quot;https://blog.csdn.net/angus_01/article/details/80118088&quot;&gt;如何在linux下开启FTP服务&lt;/a&gt;】&lt;/p&gt;
&lt;p&gt;【&lt;a href=&quot;https://www.cnblogs.com/cqlb/p/9510214.html&quot;&gt;Linux 下建立 Git 与 GitHub 的连接并克隆到本地&lt;/a&gt;】&lt;/p&gt;
&lt;p&gt;PS:root用户默认是无法开启ftp的，如果新建用户，要考虑编译环境是否也在新用户搭建&lt;/p&gt;
&lt;p&gt;手机上ftp连接我建议用MT浏览器；&lt;/p&gt;
&lt;h3 id=&quot;修改.gitgnore使apk随git上传&quot;&gt;修改.gitgnore使apk随git上传&lt;/h3&gt;
&lt;p&gt;还有一种方式可以不使用ftp即可传输编译后的apk，那就是直接用git，首先要修改项目的app下的 &lt;strong&gt;.gitignore&lt;/strong&gt;文件，默认是只忽略/build文件夹，但是我们需要的apk在里面，所以可以改成&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;/build/generated
/build/intermediates
/build/tmp&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样在push提交推送的时候可以连apk一起上传，手机上直接使用AIDE的Git拉取即可&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1872703/202003/1872703-20200302234808817-1772715191.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;其他想说结语&quot;&gt;其他想说&amp;amp;结语&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Termux》arch安装sdk和jdk下载时太慢可以先在手机上下载，再用MT文件管理器复制到/data/data/com.termux/files/home:/root 然后更改权限即可（需要root）&lt;/li&gt;
&lt;li&gt;之后遇到的问题会在这篇文章继续更新（也可能另开）&lt;/li&gt;
&lt;li&gt;第一次写这么长的文章，感觉收获满满。&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Mon, 02 Mar 2020 15:59:00 +0000</pubDate>
<dc:creator>zzerx</dc:creator>
<og:description>目录 1 &amp;quot;前言&amp;quot; 0.0 &amp;quot;流程简介&amp;quot; 1.0 &amp;quot;AS创建项目并上传GitHub&amp;quot; 2.0 &amp;quot;AIDE克隆GitHub项目&amp;qu</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zzerx/p/12399094.html</dc:identifier>
</item>
<item>
<title>何用Java8 Stream API进行数据抽取与收集 - 逃离沙漠</title>
<link>http://www.cnblogs.com/demingblog/p/12399043.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/demingblog/p/12399043.html</guid>
<description>&lt;p&gt;上一篇中我们通过一个实例看到了Java8 Stream API 相较于传统的的Java 集合操作的简洁与优势，本篇我们依然借助于一个实际的例子来看看Java8 Stream API 如何抽取及收集数据。&lt;br/&gt;备注：上一篇内容：&lt;a href=&quot;https://www.cnblogs.com/demingblog/p/12375663.html&quot;&gt;如何用Java8 Stream API找到心仪的女朋友&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;## 目标&amp;amp;背景&lt;br/&gt;我们以“处理订单数据”为例，假设我们的应用是一个分布式应用，有&quot;订单应用&quot;，&quot;物流应用&quot;，&quot;商品应用”等都是独立的服务。本次我们的目的需要展示订单列表完整数据：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;1.查询订单列表。&lt;/li&gt;
&lt;li&gt;2.批量查询物流信息。&lt;/li&gt;
&lt;li&gt;3.将物流信息填充到订单主信息中。&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;假设我们定义了一个订单类，具有几个关键的属性：订单号，状态，订单价，快递信息。如下所示：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;class Order{
    String orderSeq;
    String status;
    double totalPrice;
    String expressInfo;
    // 省略get,set及hashCode等方法
}    &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们定义了一个快递信息类，几个关键的属性：订单号，物流公司，物流单号，物流状态。如下所示：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;class ExpressInfo{
    String orderSeq;
    String expressName;
    String expressNo;
    String createTime;
    String statusInfo;
    // 省略get,set及hashCode等方法
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;java7-实现&quot;&gt;Java7 实现&lt;/h2&gt;
&lt;h3 id=&quot;获取订单列表-抽取订单号&quot;&gt;获取订单列表 &amp;amp; 抽取订单号&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;   List&amp;lt;Order&amp;gt; orderList = getOrderList();
    // 抽取 订单号
    List&amp;lt;String&amp;gt; orderSeqList = new ArrayList&amp;lt;&amp;gt;();
    for (Order order : orderList) {
        orderSeqList.add(order.getOrderSeq());
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里我们获取了订单列表&lt;code&gt;orderList&lt;/code&gt;,此时&lt;code&gt;expressInfo&lt;/code&gt;里边是没有数据的。这里抽取单号依然是Java传统的写法。&lt;/p&gt;
&lt;h3 id=&quot;批量查询快递信息-组装-订单-快递信息-map&quot;&gt;批量查询快递信息 &amp;amp; 组装 订单-快递信息 map&lt;/h3&gt;
&lt;p&gt;由于我们是通过调用远程服务来获取快递信息，为了减少网络通信次数，我们采取批量查询的方式。这也是为什么，上一步中我们要抽取订单号&lt;br/&gt;下面我们来获取快递信息&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;// 调用远程服务，
List&amp;lt;ExpressInfo&amp;gt; expressInfos = RpcGetExpressInfoBatch(orderSeqList);
// 组装 订单-快递 关系map
Map&amp;lt;String,String&amp;gt; orderExpressMap = new HashMap&amp;lt;&amp;gt;();
for(ExpressInfo e: expressInfos){
    orderExpressMap.put(e.getOrderSeq(),e.getStatusInfo());
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里组装map，也依然是Java7常用的写法。&lt;/p&gt;
&lt;h3 id=&quot;组合数据将快递信息填充进订单&quot;&gt;组合数据,将快递信息填充进订单&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;for(Order order:orderList){
    String expressInfo = orderExpressMap.get(order.getOrderSeq());
    order.setExpressInfo(expressInfo);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;至此，我们使用Java7 的写法，完成了开篇设定的目标。下面我们看Java8的写法&lt;/p&gt;
&lt;h2 id=&quot;java8-实现&quot;&gt;Java8 实现&lt;/h2&gt;
&lt;h3 id=&quot;获取订单列表-抽取订单号-1&quot;&gt;获取订单列表 &amp;amp; 抽取订单号&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;// 获取列表
List&amp;lt;Order&amp;gt; orderList = getOrderList();
// 抽取单号
List&amp;lt;String&amp;gt; orderSeqs = orderList.stream()
        .map(Order::getOrderSeq)
        .collect(Collectors.toList());&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里我们使用了&lt;code&gt;stream.map&lt;/code&gt;,在&lt;code&gt;map()&lt;/code&gt;中，我们的写法是&lt;code&gt;Order::getOrderSeq&lt;/code&gt;表示调用&lt;code&gt;Order&lt;/code&gt;对象的&lt;code&gt;getOrderSeq()&lt;/code&gt;方法来抽取订单号。&lt;br/&gt;这里的&lt;code&gt;::&lt;/code&gt;叫“方法应用”，是Java8中的新写法。&lt;br/&gt;在&lt;code&gt;map()&lt;/code&gt;后面紧跟的是&lt;code&gt;collect&lt;/code&gt;收集器，他将抽取的数据&lt;code&gt;toList()&lt;/code&gt;,于是我们得到了最终的List。&lt;/p&gt;
&lt;h3 id=&quot;批量查询快递信息-组装-订单-快递信息-map-1&quot;&gt;批量查询快递信息 &amp;amp; 组装 订单-快递信息 map&lt;/h3&gt;
&lt;p&gt;下面我们仍然是通过远程调用来获取快递信息，然后使用Java8的语法建立一个 订单-快递 关联信息的map。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;List&amp;lt;ExpressInfo&amp;gt; expressInfos = RpcGetExpressInfoBatch(orderSeqList);
Map&amp;lt;String,String&amp;gt; orderExpressMap =expressInfos.stream()
        .collect(Collectors.toMap(ExpressInfo::getOrderSeq,ExpressInfo::getStatusInfo));&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里代码比Java7的要少吧，且一目了然，这里用&lt;code&gt;strean().collect&lt;/code&gt;来收集数据，收集成什么形式呢？看名知意，&lt;code&gt;Collectors.toMap&lt;/code&gt;收集成Map,收集什么数据呢？&lt;code&gt;toMap()&lt;/code&gt;中，写了&lt;code&gt;ExpressInfo::getOrderSeq&lt;/code&gt;及&lt;code&gt;ExpressInfo::getStatusInfo&lt;/code&gt;，即：抽取&lt;code&gt;orderSeq&lt;/code&gt;作为key，&lt;code&gt;statusInfo&lt;/code&gt;作为value。&lt;/p&gt;
&lt;p&gt;至此，订单数据，订单-物流关系数据&lt;code&gt;map&lt;/code&gt;都得到了，下面我们来组合数据。&lt;/p&gt;
&lt;h3 id=&quot;组合数据将快递信息填充进订单-1&quot;&gt;组合数据,将快递信息填充进订单&lt;/h3&gt;
&lt;p&gt;经过上面啰嗦的两步，我们得到了符合我们要求的数据，现在我们需要根据颜值高低进行排名，代码如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;orderList.stream().forEach(o -&amp;gt; o.setExpressInfo(orderExpressMap.get(o.getOrderSeq())));&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;你没看错，就只有这么一行。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;本节，我们使用Java8 Stream API，完成了数据的抽取和收集，使用了&lt;code&gt;map()&lt;/code&gt;,和&lt;code&gt;collect()&lt;/code&gt;来完成数据的抽取和收集，并了解了两种收取方式&lt;code&gt;toList&lt;/code&gt;和&lt;code&gt;toMap&lt;/code&gt;。所以，以后如果有人问你&quot;Java8 stream 如何获取对象的某个属性list啊？&quot;，“java8 stream 如何获取指定数据组装成map啊？”，你就可以把本文中的方法告诉他了。&lt;/p&gt;
&lt;p&gt;除此之外，Java8 Streap API 还有&lt;strong&gt;分组&lt;/strong&gt; 等功能，后面再说。你也可以关注我的公众号，第一时间收到推送。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/demingblog/1407293/o_taolishamo.jpg&quot; alt=&quot;alt 逃离沙漠公众号&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Mar 2020 15:47:00 +0000</pubDate>
<dc:creator>逃离沙漠</dc:creator>
<og:description>上一篇中我们通过一个实例看到了Java8 Stream API 相较于传统的的Java 集合操作的简洁与优势，本篇我们依然借助于一个实际的例子来看看Java8 Stream API 如何抽取及收集数据</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/demingblog/p/12399043.html</dc:identifier>
</item>
<item>
<title>Docker实战之Consul集群 - 当我遇上你csy</title>
<link>http://www.cnblogs.com/idea360/p/12398934.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/idea360/p/12398934.html</guid>
<description>&lt;p&gt;最近参加了几场 Java 面试，发现大多数的微服务实践还是 Eureka 偏多，鉴于笔者的单位选型 Consul，这里对 Consul 做简单总结。&lt;/p&gt;
&lt;p&gt;该篇是 Docker 实战系列的第三篇。传送门:&lt;/p&gt;

&lt;p&gt;首先 Consul 有以下几个关键特性:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;服务发现：支持服务发现。你可以通过 DNS 或 HTTP 的方式获取服务信息。&lt;/li&gt;
&lt;li&gt;健康检查：支持健康检查。可以提供与给定服务相关联的任何数量的健康检查（如 web 状态码或 cpu 使用率）。&lt;/li&gt;
&lt;li&gt;K/V 存储：键/值对存储。你可用通过 consul 存储如动态配置之类的相关信息。&lt;/li&gt;
&lt;li&gt;多数据中心：支持多数据中心，开箱即用。&lt;/li&gt;
&lt;li&gt;WEB-UI：支持 WEB-UI。点点点，你就能够了解你的服务现在的运行情况，一目了然，对开发运维是非常友好的。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;作为高频的提问方式，面试官永远从十万个为什么开始。但是最为程序员，还是需要&lt;code&gt;知其然，知其所以然&lt;/code&gt;。以下是几个常用的服务发现组件的对比。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1683301/202003/1683301-20200302232359544-759431932.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;服务发现组件的选型主要从以下几个方面进行。CAP 理论、一致性算法、多数据中心、健康检查、是否支持 k8s 等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. CAP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一致性的强制数据统一要求，必然会导致在更新数据时部分节点处于被锁定状态，此时不可对外提供服务，影响了服务的可用性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 一致性算法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Raft&lt;/code&gt;算法将 Server 分为三种类型：Leader、Follower 和 Candidate。Leader 处理所有的查询和事务，并向 Follower 同步事务。Follower 会将所有的 RPC 查询和事务转发给 Leader 处理，它仅从 Leader 接受事务的同步。数据的一致性以 Leader 中的数据为准实现。&lt;/p&gt;
&lt;p&gt;以下是几种常见的一致性算法&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1683301/202003/1683301-20200302232359877-1924518192.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 多数据中心&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Consul 通过 WAN 的 Gossip 协议，完成跨数据中心的同步；而其他的产品则需要额外的开发工作来实现；&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注意多数据中心和多节点是 2 个概念&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gossip 协议是 P2P 网络中比较成熟的协议。Gossip 协议的最大的好处是，即使集群节点的数量增加，每个节点的负载也不会增加很多，几乎是恒定的。这就允许 Consul 管理的集群规模能横向扩展到数千个节点。&lt;/p&gt;
&lt;p&gt;Consul 的每个 Agent 会利用 Gossip 协议互相检查在线状态，本质上是节点之间互 Ping，分担了服务器节点的心跳压力。如果有节点掉线，不用服务器节点检查，其他普通节点会发现，然后用 Gossip 广播给整个集群。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1683301/202003/1683301-20200302232400294-1488210121.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;consul 的架构是什么，官方给出了一个很直观的图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1683301/202003/1683301-20200302232400589-155044187.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;单独看数据中心 1，可以看出 consul 的集群是由 N 个 SERVER，加上 M 个 CLIENT 组成的。而不管是 SERVER 还是 CLIENT，都是 consul 的一个节点，所有的服务都可以注册到这些节点上，正是通过这些节点实现服务注册信息的共享。除了这两个，还有一些小细节，一一简单介绍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CLIENT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CLIENT 表示 consul 的 client 模式，就是客户端模式。是 consul 节点的一种模式，这种模式下，所有注册到当前节点的服务会被转发到 SERVER，本身是不持久化这些信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SERVER&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SERVER 表示 consul 的 server 模式，表明这个 consul 是个 server，这种模式下，功能和 CLIENT 都一样，唯一不同的是，它会把所有的信息持久化的本地，这样遇到故障，信息是可以被保留的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SERVER-LEADER&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;中间那个 SERVER 下面有 LEADER 的字眼，表明这个 SERVER 是它们的老大，它和其它 SERVER 不一样的一点是，它需要负责同步注册的信息给其它的 SERVER，同时也要负责各个节点的健康监测。&lt;/p&gt;

&lt;p&gt;docker-compose-consul-cluster.yml&lt;/p&gt;
&lt;pre class=&quot;yaml&quot;&gt;
&lt;code&gt;version: '3'
services:
  consul-server1:
    image: consul:latest
    hostname: &quot;consul-server1&quot;
    ports:
      - &quot;8500:8500&quot;
      - &quot;53&quot;
    volumes:
      - ./consul/data1:/consul/data
    command: &quot;agent -server -bootstrap-expect 3 -ui -disable-host-node-id -client 0.0.0.0&quot;
  consul-server2:
    image: consul:latest
    hostname: &quot;consul-server2&quot;
    ports:
      - &quot;8501:8500&quot;
      - &quot;53&quot;
    volumes:
      - ./consul/data2:/consul/data
    command: &quot;agent -server -ui -join consul-server1 -disable-host-node-id -client 0.0.0.0&quot;
    depends_on:
      - consul-server1
  consul-server3:
    image: consul:latest
    hostname: &quot;consul-server3&quot;
    ports:
      - &quot;8502:8500&quot;
      - &quot;53&quot;
    volumes:
      - ./consul/data3:/consul/data
    command: &quot;agent -server -ui -join consul-server1 -disable-host-node-id -client 0.0.0.0&quot;
    depends_on:
      - consul-server1
  consul-node1:
    image: consul:latest
    hostname: &quot;consul-node1&quot;
    command: &quot;agent -join consul-server1 -disable-host-node-id&quot;
    depends_on:
      - consul-server1
  consul-node2:
    image: consul:latest
    hostname: &quot;consul-node2&quot;
    command: &quot;agent -join consul-server1 -disable-host-node-id&quot;
    depends_on:
      - consul-server1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;执行 &lt;code&gt;docker-compose -f docker-compose-consul-cluster.yml up -d&lt;/code&gt; 启动，然后访问&lt;br/&gt;&lt;a href=&quot;http://localhost:8500&quot; class=&quot;uri&quot;&gt;http://localhost:8500&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看到下图即启动成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1683301/202003/1683301-20200302232401646-1835583043.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Docker 实战系列皆以快速搭建学习环境为主，Consul 的特性学习及生产环境配置还任重道远。阅读过程中如有疑问或错误，还望多多指正。&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;公众号 【当我遇上你】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1683301/202003/1683301-20200302232402052-1031670948.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Mar 2020 15:24:00 +0000</pubDate>
<dc:creator>当我遇上你csy</dc:creator>
<og:description>前言 最近参加了几场 Java 面试，发现大多数的微服务实践还是 Eureka 偏多，鉴于笔者的单位选型 Consul，这里对 Consul 做简单总结。 该篇是 Docker 实战系列的第三篇。传送</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/idea360/p/12398934.html</dc:identifier>
</item>
<item>
<title>一文看懂Java序列化 - 段小辉</title>
<link>http://www.cnblogs.com/xiaohuiduan/p/12398775.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaohuiduan/p/12398775.html</guid>
<description>&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;一文看懂Java序列化&lt;/span&gt;&lt;/h2&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;简介&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;首先我们看一下&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%BA%8F%E5%88%97%E5%8C%96&quot; class=&quot;xsj_link xsj_manu_link&quot; target=&quot;_blank&quot;&gt;wiki&lt;/a&gt;上面对于序列化的解释。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_1&quot;&gt;&lt;strong&gt;序列化&lt;/strong&gt;（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换成可取用格式（例如存成文件，存于缓冲，或经由网络中发送），以留待后续在相同或另一台计算机环境中，能恢复原先状态的过程。依照序列化格式重新获取字节的结果时，可以利用它来产生与原始对象相同语义的副本。对于许多对象，像是使用大量引用的复杂对象，这种序列化重建的过程并不容易。面向对象中的对象序列化，并不概括之前原始对象所关系的函数。这种过程也称为对象编组（marshalling）。从一系列字节提取数据结构的反向操作，是反序列化（也称为解编组、deserialization、unmarshalling）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;以最简单的方式来说，&lt;strong&gt;序列化&lt;/strong&gt;就是将内存中的对象变成网络或则磁盘中的文件。而反序列化就是将文件变成内存中的对象。（emm，序列化就是将脑海中的“老婆”变成纸片人？反序列化就是将纸片人变成脑海中的“老婆”？当我没说）如果说的代码中具体一点，序列化就是将对象变成字节，而反序列化就是将字节恢复成对象。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;当然，你在一个平台进行序列化，在另外一个平台也可以进行反序列化。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;对象的序列化主要有两种用途：&lt;br/&gt;　　1. 把对象的字节序列永久地保存到硬盘上，通常存放在一个文件中；（比如说服务器上用户的session对象）&lt;br/&gt;　　2. 在网络上传送对象的字节序列。（比如说进行网络通信，消息（可以是文件）肯定要变成二进制序列才能在网络上面进行传输）&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;OK，既然我们已经了解到什么是（反）序列化了，那么多说无益，让我们来好好的看一看Java是怎么实现的吧。&lt;/p&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;Java实现&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;对于Java这把轻机枪来说，既然序列化是一个很重要的部分，那么它肯定自身提供了序列化的方案。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;在Java中，只有实现了Serializable和Externalizable接口的类的对象才能够进行序列化。在下面将分别对两者进行介绍。&lt;/p&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;Serializable&lt;/span&gt;&lt;/h3&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;最基本情况&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;Serializable可以说是最简单的序列化实现方案了。它就是一个接口，里面没有任何的属性和方法。一个类通过implements Serializable标示着这个类是可序列化的。下面将举一个简单的例子：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.name = name;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;
    }

    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;People{&quot;&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;name='&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;'\''&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;, age=&quot;&lt;/span&gt; + age +
                &lt;span class=&quot;hljs-string&quot;&gt;'}'&lt;/span&gt;;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;People类显而易见，是可序列化的。那么我们如何来实现可序列化呢？在序列化的过程中，有两个步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;序列化&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;创建一个ObjectOutputStream输出流。&lt;/li&gt;
&lt;li&gt;调用ObjectOutputStream的writeObject函数输出可序列化的对象。&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{
        ObjectOutputStream oos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;);
        oos.writeObject(people);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;ObjectOutputStream对象中需要一个输出流，这里使用的是文件输出流（也可以是用其他输出流，例如System.out，输出到控制台）。然后我们通过调用writeObject就可以讲people对象写入到“&lt;code&gt;object.txt&lt;/code&gt;”了。&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;&lt;li&gt;反序列化&lt;br/&gt;我们重新编辑People的构造方法，在里面添加一个输出来查看反序列化是否会进行调用构造函数。&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{
        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;是否调用序列化？&quot;&lt;/span&gt;);
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.name = name;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;
    }

    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;People{&quot;&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;name='&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;'\''&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;, age=&quot;&lt;/span&gt; + age +
                &lt;span class=&quot;hljs-string&quot;&gt;'}'&lt;/span&gt;;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;反序列化和序列化一样，也分为2个步骤：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;创建一个ObjectInputStream输入流&lt;/li&gt;
&lt;li&gt;调用ObjectInputStream中的readObject函数得到序列化的对象&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        ObjectInputStream ois = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people = (People) ois.readObject();
        System.out.println(people);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;下面是程序运行之后的控制台的图片。&lt;/p&gt;

&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1439869/202003/1439869-20200302230225685-377640018.png&quot; alt=&quot;image-20200302102728666&quot; title=&quot;image-20200302102728666&quot; name=&quot;imgs/image-20200302102728666.png&quot; data-src=&quot;imgs/image-20200302102728666.png&quot;/&gt;&lt;p&gt;image-20200302102728666&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;可以很明显的看见，反序列化的时候，并没有调用People的构造方法。反序列化的对象是由JVM自己生成的对象，而不是通过构造方法生成。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;Ok，通过上面我们简单的学会了序列化的使用，那么，我们会有一个问题，一个对象在序列化的过程中，有哪一些属性是可是序列化的，哪一些是不可序列化的呢？&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;通过查看源代码，我们可以知道：&lt;/p&gt;

&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1439869/202003/1439869-20200302230226222-841374646.png&quot; alt=&quot;image-20200302104032269&quot; title=&quot;image-20200302104032269&quot; name=&quot;imgs/image-20200302104032269.png&quot; data-src=&quot;imgs/image-20200302104032269.png&quot;/&gt;&lt;p&gt;image-20200302104032269&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;对象的类，签名和非transient和非static变量会写入到类中。&lt;/p&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;类的成员为引用&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;看到很多博客都是这样说的：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_1&quot;&gt;&lt;em&gt;如果一个可序列化的类的成员不是基本类型，也不是String类型，那这个引用类型也必须是可序列化的；否则，会导致此类不能序列化。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;其实这样说不是很准确，因为即使是String类型，里面也实现了Serializable这个接口。&lt;/p&gt;

&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1439869/202003/1439869-20200302230226417-929039391.png&quot; alt=&quot;image-20200302105202719&quot; title=&quot;image-20200302105202719&quot; name=&quot;imgs/image-20200302105202719.png&quot; data-src=&quot;imgs/image-20200302105202719.png&quot;/&gt;&lt;p&gt;image-20200302105202719&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;我们新建一个Man类，但是它并没有实现Serializable方法。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Man&lt;/span&gt;&lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String sex;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Man&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String sex)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.sex = sex;
    }

    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Man{&quot;&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;sex='&quot;&lt;/span&gt; + sex + &lt;span class=&quot;hljs-string&quot;&gt;'\''&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;'}'&lt;/span&gt;;
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;然后在People类中进行引用。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Man man;

    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;People{&quot;&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;name='&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;'\''&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;, age=&quot;&lt;/span&gt; + age +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;, man=&quot;&lt;/span&gt; + man +
                &lt;span class=&quot;hljs-string&quot;&gt;'}'&lt;/span&gt;;
    }

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age, Man man)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.name = name;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.man = man;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;如果我们进行序列化，会发生以下错误：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;java.io.NotSerializableException: People
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:&lt;span class=&quot;hljs-number&quot;&gt;1184&lt;/span&gt;)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:&lt;span class=&quot;hljs-number&quot;&gt;348&lt;/span&gt;)
    at Main.main(Main.java:&lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;因为Man是不可序列化的，也就导致了People类是不可序列化的。&lt;/p&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;同一对象多次序列化&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;大家看一下下面的这段代码：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        ObjectOutputStream oos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));

        People people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);
        oos.writeObject(people);
        oos.writeObject(people);

        ObjectInputStream ois = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people1 = (People) ois.readObject();
        People people2 = (People) ois.readObject();
        System.out.println(people1 == people2);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;你们觉得会输出啥？&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;&lt;strong&gt;最后的结果会输出&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;然后大家再看一段代码，与上面代码不同的是，People在第二次writeObject的时候，对name进行了重新赋值操作。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        ObjectOutputStream oos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));

        People people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);
        oos.writeObject(people);
        people.setName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);
        oos.writeObject(people);

        ObjectInputStream ois = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people1 = (People) ois.readObject();
        People people2 = (People) ois.readObject();
        System.out.println(people1 == people2);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;结果会输出啥？&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;&lt;strong&gt;结果还是：&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;，同时在people1和people2对象中，name都为“name”，而不是为“hello”。&lt;/p&gt;

&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1439869/202003/1439869-20200302230226644-640103509.jpg&quot; alt=&quot;&quot; title=&quot;&quot; name=&quot;imgs/一头雾水.jpg&quot; data-src=&quot;imgs/%E4%B8%80%E5%A4%B4%E9%9B%BE%E6%B0%B4.jpg&quot;/&gt;&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;why？？为什么会这样？&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;在默认情况下，对于一个实例的多个引用，为了节省空间，只会写入一次。而当写入多次时，只会在后面追加几个字节而已（代表某个实例的引用）。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;但是我们如果向在后面追加实例而不是引用那么我们应该怎么做？使用rest或writeUnshared即可。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        ObjectOutputStream oos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));

        People people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);
        oos.writeObject(people);
        people.setName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);
        oos.reset();
        oos.writeObject(people);

        ObjectInputStream ois = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people1 = (People) ois.readObject();
        People people2 = (People) ois.readObject();
        System.out.println(people1);
        System.out.println(people2);
        System.out.println(people1 == people2);
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        ObjectOutputStream oos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));

        People people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);
        oos.writeObject(people);
        people.setName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);
        oos.writeUnshared(people);

        ObjectInputStream ois = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people1 = (People) ois.readObject();
        People people2 = (People) ois.readObject();
        System.out.println(people1);
        System.out.println(people2);
        System.out.println(people1 == people2);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;子父类引用序列化&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;子类和父类有两种情况：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;子类没有序列化，父类进行了序列化&lt;/li&gt;
&lt;li&gt;子类进行序列化，父类没有进行序列化&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;emm，第一种情况不需要考虑，肯定不会出错。让我们来看一看第二种情况会怎么样！！&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;父类Man类&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-Java hljs&quot; data-info=&quot;Java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Man&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String sex;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Man&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String sex)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.sex = sex;
    }

    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Man{&quot;&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;sex='&quot;&lt;/span&gt; + sex + &lt;span class=&quot;hljs-string&quot;&gt;'\''&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;'}'&lt;/span&gt;;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;子类People类：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;13&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Man&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;{

    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age, String sex)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;(sex);
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.name = name;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;
    }

    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;People{&quot;&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;name='&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;'\''&lt;/span&gt; +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;, age=&quot;&lt;/span&gt; + age +
                &lt;span class=&quot;hljs-string&quot;&gt;&quot;} &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.toString();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;如果这个时候，我们对People进行序列化会怎么样呢？会报错!!&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-verilog hljs&quot; data-info=&quot;verilog&quot;&gt;Exception in thread &lt;span class=&quot;hljs-string&quot;&gt;&quot;main&quot;&lt;/span&gt; java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.InvalidClassException&lt;/span&gt;: People; no valid constructor
    at java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.ObjectStreamClass&lt;/span&gt;$ExceptionInfo&lt;span class=&quot;hljs-variable&quot;&gt;.newInvalidClassException&lt;/span&gt;(ObjectStreamClass&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;169&lt;/span&gt;)
    at java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.ObjectStreamClass&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.checkDeserialize&lt;/span&gt;(ObjectStreamClass&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;874&lt;/span&gt;)
    at java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.ObjectInputStream&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.readOrdinaryObject&lt;/span&gt;(ObjectInputStream&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2098&lt;/span&gt;)
    at java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.ObjectInputStream&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.readObject0&lt;/span&gt;(ObjectInputStream&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1625&lt;/span&gt;)
    at java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.ObjectInputStream&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.readObject&lt;/span&gt;(ObjectInputStream&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;465&lt;/span&gt;)
    at java&lt;span class=&quot;hljs-variable&quot;&gt;.io&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.ObjectInputStream&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.readObject&lt;/span&gt;(ObjectInputStream&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;423&lt;/span&gt;)
    at Main&lt;span class=&quot;hljs-variable&quot;&gt;.main&lt;/span&gt;(Main&lt;span class=&quot;hljs-variable&quot;&gt;.java&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;如何解决，我们可以在Man中，添加一个无参构造器即可。这是因为当父类不可序列化的时候，需要调用默认无参构造器初始化属性的值。&lt;/p&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;可自定义的可序列化&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;我们会有一个疑问，序列化可以将对象保存在磁盘或者网络中，but，我们如何能够保证这个序列化的文件的不会被被人查看到里面的内容。假如我们在进行序列化的时候就像这些属性进行加密不就Ok了吗？（这个仅仅是举一个例子）&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;可自定义的可序列化有两种情况：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;某些变量不进行序列化&lt;/li&gt;
&lt;li&gt;在序列化的时候改变某些变量&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;在上面我们知道&lt;strong&gt;transient&lt;/strong&gt;和&lt;strong&gt;static&lt;/strong&gt;的变量不会进行序列化，因此我们可以使用&lt;strong&gt;transient&lt;/strong&gt;来标记某一个变量来限制它的序列化。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;在第二中情况我们可以通过重写writeObject与readObject方法来选择对属性的操作。（还有&lt;strong&gt;writeReplace&lt;/strong&gt;和&lt;strong&gt;readResolve&lt;/strong&gt;）&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;在下面的代码中，通过&lt;strong&gt;transient&lt;/strong&gt;来限制name写入，通过writeObject和readObject来对写入的age进行修改。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;{

    &lt;span class=&quot;hljs-keyword&quot;&gt;transient&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.name = name;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;
    }
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;writeObject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ObjectOutputStream out)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{
        out.writeInt(age + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);
    }

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;readObject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ObjectInputStream in)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = in.readInt() -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ;
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;至于main函数怎么调用？还是正常的调用：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        ObjectOutputStream oos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);
        oos.writeObject(people);
        ObjectInputStream ois = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object.txt&quot;&lt;/span&gt;));
        People people1 = (People) ois.readObject();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;Externalizable：强制自定义序列化&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;这个，emm，“强制”两个字都懂吧。让我们来看一看这个接口的源代码：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Externalizable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;java&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;io&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;writeExternal&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ObjectOutput out)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;;
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;readExternal&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ObjectInput in)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException&lt;/span&gt;;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;简单点来说，就是类通过implements这个接口，实现这两个方法来进行序列化的自定义。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Externalizable&lt;/span&gt; &lt;/span&gt;{

    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.name = name;
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;
    }
    
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
    }


    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;writeExternal&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ObjectOutput out)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{
        out.writeInt(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);
    }

    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;readExternal&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ObjectInput in)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{
        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age  = in.readInt() - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;
    }
    
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;两者之间的差异&lt;/p&gt;
&lt;table class=&quot;table table-striped table-celled&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;方案&lt;/th&gt;
&lt;th&gt;实现Serializable接口&lt;/th&gt;
&lt;th&gt;实现Externalizable接口&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;方式&lt;/td&gt;
&lt;td&gt;系统默认决定储存信息&lt;/td&gt;
&lt;td&gt;程序员决定存储哪些信息&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;使用简单，implements即可&lt;/td&gt;
&lt;td&gt;必须实现接口内的两个方法&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;性能&lt;/td&gt;
&lt;td&gt;性能略差&lt;/td&gt;
&lt;td&gt;性能略好&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;序列化版本号serialVersionUID&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;我相信很多人都看到过serialVersionUID，随便打开一个类（这里是String类），我么可以看到：&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java hljs&quot; data-info=&quot;java&quot;&gt;    
    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;long&lt;/span&gt; serialVersionUID = -&lt;span class=&quot;hljs-number&quot;&gt;6849794470754667710L&lt;/span&gt;;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_1&quot;&gt;使用来自JDK 1.0.2 的serialVersionUID用来保持连贯性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;这个serialVersionUID的作用很简单，就是代表一个版本。当进行反序列化的时候，如果class的版本号与序列化的时候不同，则会出现&lt;code&gt;InvalidClassException&lt;/code&gt;异常。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;版本好可以只有指定，但是有一个点要值得注意，JVM会根据类的信息自动算出一个版本号，如果你更改了类（比如说添加/修改了属性或者方法），则计算出来的版本号就发生了改变。这样也就代表这你无法反序列化你以前的东西。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;什么情况下需要修改serialVersionUID呢？分三种情况。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;修改了方法，这个当然版本好不需要改变&lt;/li&gt;
&lt;li&gt;修改了静态变量或者transient关键之修饰的变量，同样不需要修改。&lt;/li&gt;
&lt;li&gt;新增了变量或者删除了变量也不需要修改。如果是新增了变量，则进行反序列化的时候会给新增的变量赋一个默认值。如果是修改了变量，则进行反序列化的时候无需理会被删除的值。&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;讲完了讲完了，序列化实际上还是挺简单。不过需要注意使用的时候遇到的坑。～～&lt;/p&gt;
</description>
<pubDate>Mon, 02 Mar 2020 15:03:00 +0000</pubDate>
<dc:creator>段小辉</dc:creator>
<og:description>一文看懂Java序列化简介Java实现Serializable最基本情况类的成员为引用同一对象多次序列化子父类引用序列化可自定义的可序列化Externalizable：强制自定义序列化序列化版本号se</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/xiaohuiduan/p/12398775.html</dc:identifier>
</item>
<item>
<title>ZYNQ自定义AXI总线IP应用——PWM实现呼吸灯效果 - 没落骑士</title>
<link>http://www.cnblogs.com/moluoqishi/p/12390970.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/moluoqishi/p/12390970.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、前言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;在实时性要求较高的场合中，CPU软件执行的方式显然不能满足需求，这时需要硬件逻辑实现部分功能。要想使自定义IP核被CPU访问，就必须带有总线接口。ZYNQ采用AXI BUS实现PS和PL之间的数据交互。本文以PWM为例设计了自定义AXI总线IP，来演示如何灵活运用ARM+FPGA的架构。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;功能定义：在上一篇ZYNQ入门实例博文讲解的系统中添加自定义IP核，其输出驱动LED等实现呼吸灯效果。并且软件通过配置寄存器方式对其进行使能、打开/关闭配置以及选择占空比变化步长。另外，可以按键操作完成占空比变化步长的增减。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;平台：米联客 MIZ702N （ZYNQ-7020）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;软件：VIVADO+SDK 2017&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;注：自定义IP逻辑设计采用明德扬至简设计法&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、PWM IP设计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　PWM无非就是通过控制周期脉冲信号的占空比，也就是改变高电平在一段固定周期内的持续时间来达到控制目的。脉冲周期需要一个计数器来定时，占空比由低变高和由高变低两种模式同样需要一个计数器来指示，因此这里使用两个嵌套的计数器cnt_cyc和cnt_mode。cnt_mode的加一条件除了要等待cnt_cyc计数完成，还要考虑占空比的变化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我们可以使用下降沿位置表示占空比，位置越靠近周期值占空比越高。在模式0中下降沿位置按照步长增大直至大于等于周期值，模式1中下降沿位置则按照步长递减直到小于步长。使用两个信号up_stage和down_stage分别指示模式0和模式1。至于步长值，在配置有效时被更新，否则使用默认值。模块最终的输出信号在周期计数器小于下降沿位置为1，反之为零。设计完毕，上代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d077c839-3243-4d12-ace3-48579f681d62')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_d077c839-3243-4d12-ace3-48579f681d62&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d077c839-3243-4d12-ace3-48579f681d62&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d077c839-3243-4d12-ace3-48579f681d62',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d077c839-3243-4d12-ace3-48579f681d62&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; `timescale 1ns /&lt;span&gt; 1ps
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;/////////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Company: 
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Engineer: 
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Create Date: 2020/03/01 18:14:44
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Design Name: 
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Module Name: pwm
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Project Name: 
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Target Devices: 
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Tool Versions: 
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Description: 
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Dependencies: 
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Revision:
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Revision 0.01 - File Created
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Additional Comments:
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;/////////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; 
&lt;span&gt; 22&lt;/span&gt; 
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;module&lt;/span&gt;&lt;span&gt; pwm(
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;input&lt;/span&gt;                       clk,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;频率100MHz 10ns&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;input&lt;/span&gt;&lt;span&gt;                       rst_n,
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;input&lt;/span&gt;                       sw_en,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;输出使能&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;input&lt;/span&gt;                       sw_set_en,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;步长设定使能&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;input&lt;/span&gt;       [&lt;span&gt;10&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;]        sw_freq_step,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;步长数值&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;output&lt;/span&gt; &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;                  led
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;    );
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; 
&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;parameter&lt;/span&gt; FREQ_STEP = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;d100;&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; 
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;parameter&lt;/span&gt; CNT_CYC_MAX = &lt;span&gt;50000&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; 
&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; clogb2 (&lt;span&gt;input&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt;&lt;span&gt; bit_depth);
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(clogb2=&lt;span&gt;0&lt;/span&gt;;bit_depth&amp;gt;&lt;span&gt;0&lt;/span&gt;;clogb2=clogb2+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;             bit_depth = bit_depth &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;endfunction&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;localparam&lt;/span&gt; CNT_CYC_WIDTH = clogb2(CNT_CYC_MAX-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;            
&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;reg&lt;/span&gt; [CNT_CYC_WIDTH-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;] cnt_cyc=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt; add_cnt_cyc,end_cnt_cyc;
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;reg&lt;/span&gt; [&lt;span&gt;2&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;] cnt_mode=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt; add_cnt_mode,end_cnt_mode;
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt; up_stage,down_stage;
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;reg&lt;/span&gt; [CNT_CYC_WIDTH+&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;] neg_loc=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; &lt;span&gt;reg&lt;/span&gt; [&lt;span&gt;10&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;] freq_step=&lt;span&gt;FREQ_STEP;
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt; 
&lt;span&gt; 54&lt;/span&gt; 
&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;周期计数器 计数50ms=50*1000ns = 50000_0ns&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;always&lt;/span&gt;@(&lt;span&gt;posedge&lt;/span&gt; clk)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(~rst_n)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt;         cnt_cyc &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(add_cnt_cyc)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(end_cnt_cyc)
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;             cnt_cyc &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt;             cnt_cyc &amp;lt;= cnt_cyc + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt; 
&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;assign&lt;/span&gt; add_cnt_cyc = sw_en == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;assign&lt;/span&gt; end_cnt_cyc = add_cnt_cyc &amp;amp;&amp;amp; cnt_cyc == CNT_CYC_MAX- &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; 
&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;模式计数器 0-占空比递增 1-占空比递减&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;always&lt;/span&gt;@(&lt;span&gt;posedge&lt;/span&gt; clk)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(~rst_n)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;         cnt_mode &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(add_cnt_mode)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(end_cnt_mode)
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;             cnt_mode &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;             cnt_mode &amp;lt;= cnt_mode + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt; 
&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;assign&lt;/span&gt; add_cnt_mode = end_cnt_cyc &amp;amp;&amp;amp; ((up_stage &amp;amp;&amp;amp; neg_loc &amp;gt;= CNT_CYC_MAX) || (down_stage &amp;amp;&amp;amp; neg_loc == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;assign&lt;/span&gt; end_cnt_mode = add_cnt_mode &amp;amp;&amp;amp; cnt_mode == &lt;span&gt;2&lt;/span&gt; - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt; 
&lt;span&gt; 87&lt;/span&gt; 
&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;变化步长设定&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;always&lt;/span&gt;@(&lt;span&gt;posedge&lt;/span&gt; clk)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(~rst_n)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt;         freq_step &amp;lt;=&lt;span&gt; FREQ_STEP;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(sw_set_en)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(sw_freq_step &amp;gt;= &lt;span&gt;1&lt;/span&gt; &amp;amp;&amp;amp; sw_freq_step &amp;lt; &lt;span&gt;2000&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;             freq_step &amp;lt;=&lt;span&gt; sw_freq_step;
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 97&lt;/span&gt;             freq_step &amp;lt;=&lt;span&gt; FREQ_STEP;
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt; 
&lt;span&gt;101&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;脉冲下降沿对应周期计数器数值&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt; &lt;span&gt;always&lt;/span&gt;@(&lt;span&gt;posedge&lt;/span&gt; clk)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(~rst_n)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt;         neg_loc &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;; 
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(end_cnt_cyc)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(up_stage )&lt;span&gt;begin&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;占空比递增阶段&lt;/span&gt;
&lt;span&gt;108&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(neg_loc &amp;lt;&lt;span&gt; CNT_CYC_MAX)
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;                 neg_loc &amp;lt;= neg_loc +&lt;span&gt; freq_step;
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;111&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(down_stage )&lt;span&gt;begin&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;占空比递减阶段&lt;/span&gt;
&lt;span&gt;112&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(neg_loc &amp;lt;&lt;span&gt; freq_step)
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;                 neg_loc &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;115&lt;/span&gt;                 neg_loc &amp;lt;= neg_loc -&lt;span&gt; freq_step;
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;118&lt;/span&gt; 
&lt;span&gt;119&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;120&lt;/span&gt; 
&lt;span&gt;121&lt;/span&gt; &lt;span&gt;assign&lt;/span&gt; up_stage = add_cnt_cyc &amp;amp;&amp;amp; cnt_mode == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; &lt;span&gt;assign&lt;/span&gt; down_stage = add_cnt_cyc &amp;amp;&amp;amp; cnt_mode == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; 
&lt;span&gt;124&lt;/span&gt; 
&lt;span&gt;125&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;输出&lt;/span&gt;
&lt;span&gt;126&lt;/span&gt; &lt;span&gt;always&lt;/span&gt;@(&lt;span&gt;posedge&lt;/span&gt; clk)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;127&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(~rst_n)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;128&lt;/span&gt;         led &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;//高电平点亮&lt;/span&gt;
&lt;span&gt;129&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;130&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(add_cnt_cyc &amp;amp;&amp;amp; cnt_cyc &amp;lt; neg_loc)&lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;131&lt;/span&gt;         led &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;132&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;133&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt;         led &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt; 
&lt;span&gt;137&lt;/span&gt; 
&lt;span&gt;138&lt;/span&gt; 
&lt;span&gt;139&lt;/span&gt; &lt;span&gt;endmodule&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;pwm.v&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;VIVADO综合、布局布线比较慢，且软硬件级联调试费时费力，所以仿真是极其重要的。编写一个简单的testbench，定义update_freq_step task更新步长。这里使用System Verilog语法有一定的好处。首先单驱动信号可以统一定义为logic变量类型，其次等待时长能指定单位。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('510b5349-de5a-4dd5-861f-687d4ee45947')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_510b5349-de5a-4dd5-861f-687d4ee45947&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_510b5349-de5a-4dd5-861f-687d4ee45947&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('510b5349-de5a-4dd5-861f-687d4ee45947',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_510b5349-de5a-4dd5-861f-687d4ee45947&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; `timescale 1ns /&lt;span&gt; 1ps
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/////////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Company: 
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Engineer: 
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Create Date: 2020/03/01 20:49:25
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Design Name: 
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Module Name: testbench
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Project Name: 
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Target Devices: 
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Tool Versions: 
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Description: 
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Dependencies: 
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Revision:
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Revision 0.01 - File Created
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Additional Comments:
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;//&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;/////////////////////////////////////////////////////////////////////////////////&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;module&lt;/span&gt;&lt;span&gt; testbench();
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;logic clk,rst_n;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;logic sw_en,sw_set_en;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; logic [&lt;span&gt;10&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]sw_freq_step;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;logic led;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt; &lt;span&gt;parameter&lt;/span&gt; CYC = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;           RST_TIM = &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;defparam&lt;/span&gt; dut.CNT_CYC_MAX = &lt;span&gt;2000&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt;  pwm#(.FREQ_STEP(&lt;span&gt;100&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt; dut(
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; .clk           (clk) ,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;频率100MHz 10ns&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;.rst_n         (rst_n) ,
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; .sw_en         (sw_en) ,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;输出使能&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt; .sw_set_en     (sw_set_en) ,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;步长设定使能&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt; .sw_freq_step  (sw_freq_step) ,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;步长数值&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt; &lt;span&gt;.led           (led)
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    );
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt; &lt;span&gt;initial&lt;/span&gt; &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;     clk = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;     &lt;span&gt;forever&lt;/span&gt; &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;         #(CYC/&lt;span&gt;2.0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         clk=~&lt;span&gt;clk;
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt; &lt;span&gt;initial&lt;/span&gt; &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;     rst_n = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;     #&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     rst_n = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;     #(RST_TIM*CYC) rst_n = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;59&lt;/span&gt; 
&lt;span&gt;60&lt;/span&gt; &lt;span&gt;initial&lt;/span&gt; &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;61&lt;/span&gt;     sw_en = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;     sw_set_en = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;     sw_freq_step = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;d10;&lt;/span&gt;
&lt;span&gt;64&lt;/span&gt;     #&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;     #(RST_TIM*&lt;span&gt;CYC);
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;     #(CYC*&lt;span&gt;10&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;     sw_en = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; 
&lt;span&gt;69&lt;/span&gt; &lt;span&gt;    #600us;
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;     update_freq_step(&lt;span&gt;50&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; &lt;span&gt;    #600us;
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;    $stop;
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; 
&lt;span&gt;74&lt;/span&gt; &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;75&lt;/span&gt; 
&lt;span&gt;76&lt;/span&gt; &lt;span&gt;task&lt;/span&gt; update_freq_step([&lt;span&gt;10&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;] freq_step);
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt;     sw_set_en = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt;     sw_freq_step =&lt;span&gt; freq_step;
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt;     #(&lt;span&gt;1&lt;/span&gt;*&lt;span&gt;CYC);
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;     sw_set_en = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt; &lt;span&gt;endtask
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt; 
&lt;span&gt;83&lt;/span&gt; &lt;span&gt;endmodule&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;testbench.sv&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;设计较简单，直接使用VIVADO仿真器观察波形即可：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302214627243-376046328.png&quot; alt=&quot;&quot; width=&quot;1205&quot; height=&quot;257&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;可以看到输出信号led的占空比在不断起伏变化，当更新freq_step为50后变化更为减慢。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302214930097-953323504.png&quot; alt=&quot;&quot; width=&quot;1203&quot; height=&quot;240&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;配置前相邻两个neg_loc数值差与更新后分别是100和50。以上证明逻辑功能无误。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、硬件系统搭建&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;设计完PWM功能模块还没有完，需要再包一层总线Wrapper才能被CPU访问&lt;/span&gt;。&lt;span&gt;创建AXI总线IP&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1201289/202003/1201289-20200301174234959-1996124795.png&quot; alt=&quot;&quot; width=&quot;653&quot; height=&quot;444&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;在封装器中编辑。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1201289/202003/1201289-20200301175449641-2103431486.png&quot; alt=&quot;&quot; width=&quot;443&quot; height=&quot;284&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;最终IP结构如图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302220224082-133975435.png&quot; alt=&quot;&quot; width=&quot;634&quot; height=&quot;390&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 　　具体操作不过多讲述，直接以代码呈现：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('09bf4173-0985-45df-9548-8c0706d6daf8')&quot; readability=&quot;55.5&quot;&gt;&lt;img id=&quot;code_img_closed_09bf4173-0985-45df-9548-8c0706d6daf8&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_09bf4173-0985-45df-9548-8c0706d6daf8&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('09bf4173-0985-45df-9548-8c0706d6daf8',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_09bf4173-0985-45df-9548-8c0706d6daf8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;106&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; `timescale &lt;span&gt;1&lt;/span&gt; ns / &lt;span&gt;1&lt;/span&gt;&lt;span&gt; ps
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;module&lt;/span&gt;&lt;span&gt; pwm_led_ip_v1_0 #
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    (
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Users to add parameters here&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;parameter&lt;/span&gt; FREQ_STEP = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;d100,&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; User parameters ends
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Do not modify the parameters beyond this line
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Parameters of Axi Slave Bus Interface S00_AXI&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;parameter&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; C_S00_AXI_DATA_WIDTH    = &lt;span&gt;32&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;parameter&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; C_S00_AXI_ADDR_WIDTH    = &lt;span&gt;4&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    (
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Users to add ports here&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt;&lt;span&gt; led,
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; User ports ends
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Do not modify the ports beyond this line
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Ports of Axi Slave Bus Interface S00_AXI&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_aclk,
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_aresetn,
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S00_AXI_ADDR_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_awaddr,
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;2&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_awprot,
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_awvalid,
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_awready,
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S00_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_wdata,
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [(C_S00_AXI_DATA_WIDTH/&lt;span&gt;8&lt;/span&gt;)-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_wstrb,
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_wvalid,
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_wready,
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_bresp,
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_bvalid,
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_bready,
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S00_AXI_ADDR_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_araddr,
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;2&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_arprot,
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_arvalid,
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_arready,
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S00_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_rdata,
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] s00_axi_rresp,
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_rvalid,
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  s00_axi_rready
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;    );
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Instantiation of Axi Bus Interface S00_AXI&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt; &lt;span&gt;    pwd_led_ip_v1_0_S00_AXI # ( 
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        .C_S_AXI_DATA_WIDTH(C_S00_AXI_DATA_WIDTH),
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;        .C_S_AXI_ADDR_WIDTH(C_S00_AXI_ADDR_WIDTH),
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;        .FREQ_STEP(FREQ_STEP)
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;    ) pwd_led_ip_v1_0_S00_AXI_inst (
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;        .S_AXI_ACLK(s00_axi_aclk),
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;        .S_AXI_ARESETN(s00_axi_aresetn),
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;        .S_AXI_AWADDR(s00_axi_awaddr),
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;        .S_AXI_AWPROT(s00_axi_awprot),
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;        .S_AXI_AWVALID(s00_axi_awvalid),
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;        .S_AXI_AWREADY(s00_axi_awready),
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;        .S_AXI_WDATA(s00_axi_wdata),
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; &lt;span&gt;        .S_AXI_WSTRB(s00_axi_wstrb),
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;        .S_AXI_WVALID(s00_axi_wvalid),
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;        .S_AXI_WREADY(s00_axi_wready),
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;        .S_AXI_BRESP(s00_axi_bresp),
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;        .S_AXI_BVALID(s00_axi_bvalid),
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;        .S_AXI_BREADY(s00_axi_bready),
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;        .S_AXI_ARADDR(s00_axi_araddr),
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; &lt;span&gt;        .S_AXI_ARPROT(s00_axi_arprot),
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; &lt;span&gt;        .S_AXI_ARVALID(s00_axi_arvalid),
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;        .S_AXI_ARREADY(s00_axi_arready),
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;        .S_AXI_RDATA(s00_axi_rdata),
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;        .S_AXI_RRESP(s00_axi_rresp),
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; &lt;span&gt;        .S_AXI_RVALID(s00_axi_rvalid),
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; &lt;span&gt;        .S_AXI_RREADY(s00_axi_rready),
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; 
&lt;span&gt;73&lt;/span&gt; &lt;span&gt;        .led(led)
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt; &lt;span&gt;    );
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; 
&lt;span&gt;76&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Add user logic here
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt; 
&lt;span&gt;78&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; User logic ends&lt;/span&gt;
&lt;span&gt;79&lt;/span&gt; 
&lt;span&gt;80&lt;/span&gt;     &lt;span&gt;endmodule&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;pwm_led_ip_v1_0.v&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('da35106e-f418-4ae6-8337-b8b3d1dd2aab')&quot; readability=&quot;51.5&quot;&gt;&lt;img id=&quot;code_img_closed_da35106e-f418-4ae6-8337-b8b3d1dd2aab&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_da35106e-f418-4ae6-8337-b8b3d1dd2aab&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('da35106e-f418-4ae6-8337-b8b3d1dd2aab',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_da35106e-f418-4ae6-8337-b8b3d1dd2aab&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;98&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; `timescale &lt;span&gt;1&lt;/span&gt; ns / &lt;span&gt;1&lt;/span&gt;&lt;span&gt; ps
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt;     &lt;span&gt;module&lt;/span&gt;&lt;span&gt; pwm_led_ip_v1_0_S00_AXI #
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;    (
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Users to add parameters here&lt;/span&gt;
&lt;span&gt;  6&lt;/span&gt;         &lt;span&gt;parameter&lt;/span&gt; FREQ_STEP = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;d100,&lt;/span&gt;
&lt;span&gt;  7&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; User parameters ends 
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Do not modify the parameters beyond this line
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; 
&lt;span&gt; 10&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Width of S_AXI data bus&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;         &lt;span&gt;parameter&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; C_S_AXI_DATA_WIDTH    = &lt;span&gt;32&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Width of S_AXI address bus&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt;         &lt;span&gt;parameter&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; C_S_AXI_ADDR_WIDTH    = &lt;span&gt;4&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;    (
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Users to add ports here&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt;&lt;span&gt; led,
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; User ports ends
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Do not modify the ports beyond this line
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; 
&lt;span&gt; 21&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Global Clock Signal&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_ACLK,
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Global Reset Signal. This Signal is Active LOW&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_ARESETN,
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write address (issued by master, acceped by Slave)&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S_AXI_ADDR_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_AWADDR,
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write channel Protection type. This signal indicates the
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; privilege and security level of the transaction, and whether
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; the transaction is a data access or an instruction access.&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;2&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_AWPROT,
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write address valid. This signal indicates that the master signaling
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; valid write address and control information.&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_AWVALID,
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write address ready. This signal indicates that the slave is ready
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; to accept an address and associated control signals.&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_AWREADY,
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write data (issued by master, acceped by Slave) &lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_WDATA,
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write strobes. This signal indicates which byte lanes hold
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; valid data. There is one write strobe bit for each eight
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; bits of the write data bus.    &lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [(C_S_AXI_DATA_WIDTH/&lt;span&gt;8&lt;/span&gt;)-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_WSTRB,
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write valid. This signal indicates that valid write
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; data and strobes are available.&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_WVALID,
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write ready. This signal indicates that the slave
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; can accept the write data.&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_WREADY,
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write response. This signal indicates the status
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; of the write transaction.&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_BRESP,
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write response valid. This signal indicates that the channel
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; is signaling a valid write response.&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_BVALID,
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Response ready. This signal indicates that the master
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; can accept a write response.&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_BREADY,
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read address (issued by master, acceped by Slave)&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S_AXI_ADDR_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_ARADDR,
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Protection type. This signal indicates the privilege
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; and security level of the transaction, and whether the
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; transaction is a data access or an instruction access.&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;2&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_ARPROT,
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read address valid. This signal indicates that the channel
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; is signaling valid read address and control information.&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_ARVALID,
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read address ready. This signal indicates that the slave is
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ready to accept an address and associated control signals.&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_ARREADY,
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read data (issued by slave)&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_RDATA,
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read response. This signal indicates the status of the
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; read transfer.&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt; [&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;] S_AXI_RRESP,
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read valid. This signal indicates that the channel is
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; signaling the required read data.&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;         &lt;span&gt;output&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_RVALID,
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read ready. This signal indicates that the master can
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; accept the read data and response information.&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;         &lt;span&gt;input&lt;/span&gt; &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;  S_AXI_RREADY
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;    );
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt; 
&lt;span&gt; 83&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; AXI4LITE signals&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_ADDR_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;]     axi_awaddr;
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;      axi_awready;
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;      axi_wready;
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;]     axi_bresp;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;      axi_bvalid;
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_ADDR_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;]     axi_araddr;
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;      axi_arready;
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;]     axi_rdata;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [&lt;span&gt;1&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;span&gt;]     axi_rresp;
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;      axi_rvalid;
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; 
&lt;span&gt; 95&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Example-specific design signals
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; local parameter for addressing 32 bit / 64 bit C_S_AXI_DATA_WIDTH
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ADDR_LSB is used for addressing 32/64 bit registers/memories
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ADDR_LSB = 2 for 32 bits (n downto 2)
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ADDR_LSB = 3 for 64 bits (n downto 3)&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;localparam&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; ADDR_LSB = (C_S_AXI_DATA_WIDTH/&lt;span&gt;32&lt;/span&gt;) + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;     &lt;span&gt;localparam&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; OPT_MEM_ADDR_BITS = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;----------------------------------------------
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;-- Signals for user logic register space example
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;------------------------------------------------
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;-- Number of Slave Registers 4&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]    slv_reg0;
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]    slv_reg1;
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]    slv_reg2;
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]    slv_reg3;
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;     &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;     slv_reg_rden;
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;     &lt;span&gt;wire&lt;/span&gt;&lt;span&gt;     slv_reg_wren;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt; [C_S_AXI_DATA_WIDTH-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]     reg_data_out;
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;     &lt;span&gt;integer&lt;/span&gt;&lt;span&gt;     byte_index;
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;     &lt;span&gt;reg&lt;/span&gt;&lt;span&gt;     aw_en;
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; 
&lt;span&gt;116&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; I/O Connections assignments&lt;/span&gt;
&lt;span&gt;117&lt;/span&gt; 
&lt;span&gt;118&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_AWREADY    =&lt;span&gt; axi_awready;
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_WREADY    =&lt;span&gt; axi_wready;
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_BRESP    =&lt;span&gt; axi_bresp;
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_BVALID    =&lt;span&gt; axi_bvalid;
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_ARREADY    =&lt;span&gt; axi_arready;
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_RDATA    =&lt;span&gt; axi_rdata;
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_RRESP    =&lt;span&gt; axi_rresp;
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; S_AXI_RVALID    =&lt;span&gt; axi_rvalid;
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement axi_awready generation
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; axi_awready is asserted for one S_AXI_ACLK clock cycle when both
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; S_AXI_AWVALID and S_AXI_WVALID are asserted. axi_awready is
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; de-asserted when reset is low.&lt;/span&gt;
&lt;span&gt;130&lt;/span&gt; 
&lt;span&gt;131&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;133&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt;           axi_awready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt;           aw_en &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;137&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;138&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;139&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;140&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt; (~axi_awready &amp;amp;&amp;amp; S_AXI_AWVALID &amp;amp;&amp;amp; S_AXI_WVALID &amp;amp;&amp;amp;&lt;span&gt; aw_en)
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;142&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; slave is ready to accept write address when 
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; there is a valid write address and write data
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; on the write address and data bus. This design 
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; expects no outstanding transactions. &lt;/span&gt;
&lt;span&gt;146&lt;/span&gt;               axi_awready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;147&lt;/span&gt;               aw_en &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;148&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;149&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (S_AXI_BREADY &amp;amp;&amp;amp;&lt;span&gt; axi_bvalid)
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;                 &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;151&lt;/span&gt;                   aw_en &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;152&lt;/span&gt;                   axi_awready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;153&lt;/span&gt;                 &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;154&lt;/span&gt;           &lt;span&gt;else&lt;/span&gt;           
&lt;span&gt;155&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;156&lt;/span&gt;               axi_awready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;157&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;158&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;159&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;       
&lt;span&gt;160&lt;/span&gt; 
&lt;span&gt;161&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement axi_awaddr latching
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; This process is used to latch the address when both 
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; S_AXI_AWVALID and S_AXI_WVALID are valid. &lt;/span&gt;
&lt;span&gt;164&lt;/span&gt; 
&lt;span&gt;165&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;167&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;168&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;169&lt;/span&gt;           axi_awaddr &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;171&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;172&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;173&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt; (~axi_awready &amp;amp;&amp;amp; S_AXI_AWVALID &amp;amp;&amp;amp; S_AXI_WVALID &amp;amp;&amp;amp;&lt;span&gt; aw_en)
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;175&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Write Address latching &lt;/span&gt;
&lt;span&gt;176&lt;/span&gt;               axi_awaddr &amp;lt;=&lt;span&gt; S_AXI_AWADDR;
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;178&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;179&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;       
&lt;span&gt;180&lt;/span&gt; 
&lt;span&gt;181&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement axi_wready generation
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; axi_wready is asserted for one S_AXI_ACLK clock cycle when both
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; S_AXI_AWVALID and S_AXI_WVALID are asserted. axi_wready is 
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; de-asserted when reset is low. &lt;/span&gt;
&lt;span&gt;185&lt;/span&gt; 
&lt;span&gt;186&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;188&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;189&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;190&lt;/span&gt;           axi_wready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;191&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;192&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;193&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;194&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt; (~axi_wready &amp;amp;&amp;amp; S_AXI_WVALID &amp;amp;&amp;amp; S_AXI_AWVALID &amp;amp;&amp;amp;&lt;span&gt; aw_en )
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;196&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; slave is ready to accept write data when 
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; there is a valid write address and write data
&lt;/span&gt;&lt;span&gt;198&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; on the write address and data bus. This design 
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; expects no outstanding transactions. &lt;/span&gt;
&lt;span&gt;200&lt;/span&gt;               axi_wready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;201&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;202&lt;/span&gt;           &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;203&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;204&lt;/span&gt;               axi_wready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;205&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;206&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;207&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;       
&lt;span&gt;208&lt;/span&gt; 
&lt;span&gt;209&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement memory mapped register select and write logic generation
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The write data is accepted and written to memory mapped registers when
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; axi_awready, S_AXI_WVALID, axi_wready and S_AXI_WVALID are asserted. Write strobes are used to
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; select byte enables of slave registers while writing.
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; These registers are cleared when reset (active low) is applied.
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Slave register write enable is asserted when valid address and data are available
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; and the slave is ready to accept the write address and write data.&lt;/span&gt;
&lt;span&gt;216&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; slv_reg_wren = axi_wready &amp;amp;&amp;amp; S_AXI_WVALID &amp;amp;&amp;amp; axi_awready &amp;amp;&amp;amp;&lt;span&gt; S_AXI_AWVALID;
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt; 
&lt;span&gt;218&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;220&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;221&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;222&lt;/span&gt;           slv_reg0 &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;223&lt;/span&gt;           slv_reg1 &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;224&lt;/span&gt;           slv_reg2 &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;225&lt;/span&gt;           slv_reg3 &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;227&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt; &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;228&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (slv_reg_wren)
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt;           &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;230&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; ( axi_awaddr[ADDR_LSB+&lt;span&gt;OPT_MEM_ADDR_BITS:ADDR_LSB] )
&lt;/span&gt;&lt;span&gt;231&lt;/span&gt;               &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h0:&lt;/span&gt;
&lt;span&gt;232&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; ( byte_index = &lt;span&gt;0&lt;/span&gt;; byte_index &amp;lt;= (C_S_AXI_DATA_WIDTH/&lt;span&gt;8&lt;/span&gt;)-&lt;span&gt;1&lt;/span&gt;; byte_index = byte_index+&lt;span&gt;1&lt;/span&gt;&lt;span&gt; )
&lt;/span&gt;&lt;span&gt;233&lt;/span&gt;                   &lt;span&gt;if&lt;/span&gt; ( S_AXI_WSTRB[byte_index] == &lt;span&gt;1&lt;/span&gt; ) &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;234&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Respective byte enables are asserted as per write strobes 
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Slave register 0&lt;/span&gt;
&lt;span&gt;236&lt;/span&gt;                     slv_reg0[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;] &amp;lt;= S_AXI_WDATA[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt;                   &lt;span&gt;end&lt;/span&gt;  
&lt;span&gt;238&lt;/span&gt;               &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h1:&lt;/span&gt;
&lt;span&gt;239&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; ( byte_index = &lt;span&gt;0&lt;/span&gt;; byte_index &amp;lt;= (C_S_AXI_DATA_WIDTH/&lt;span&gt;8&lt;/span&gt;)-&lt;span&gt;1&lt;/span&gt;; byte_index = byte_index+&lt;span&gt;1&lt;/span&gt;&lt;span&gt; )
&lt;/span&gt;&lt;span&gt;240&lt;/span&gt;                   &lt;span&gt;if&lt;/span&gt; ( S_AXI_WSTRB[byte_index] == &lt;span&gt;1&lt;/span&gt; ) &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;241&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Respective byte enables are asserted as per write strobes 
&lt;/span&gt;&lt;span&gt;242&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Slave register 1&lt;/span&gt;
&lt;span&gt;243&lt;/span&gt;                     slv_reg1[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;] &amp;lt;= S_AXI_WDATA[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;244&lt;/span&gt;                   &lt;span&gt;end&lt;/span&gt;  
&lt;span&gt;245&lt;/span&gt;               &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h2:&lt;/span&gt;
&lt;span&gt;246&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; ( byte_index = &lt;span&gt;0&lt;/span&gt;; byte_index &amp;lt;= (C_S_AXI_DATA_WIDTH/&lt;span&gt;8&lt;/span&gt;)-&lt;span&gt;1&lt;/span&gt;; byte_index = byte_index+&lt;span&gt;1&lt;/span&gt;&lt;span&gt; )
&lt;/span&gt;&lt;span&gt;247&lt;/span&gt;                   &lt;span&gt;if&lt;/span&gt; ( S_AXI_WSTRB[byte_index] == &lt;span&gt;1&lt;/span&gt; ) &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;248&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Respective byte enables are asserted as per write strobes 
&lt;/span&gt;&lt;span&gt;249&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Slave register 2&lt;/span&gt;
&lt;span&gt;250&lt;/span&gt;                     slv_reg2[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;] &amp;lt;= S_AXI_WDATA[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt;                   &lt;span&gt;end&lt;/span&gt;  
&lt;span&gt;252&lt;/span&gt;               &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h3:&lt;/span&gt;
&lt;span&gt;253&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt; ( byte_index = &lt;span&gt;0&lt;/span&gt;; byte_index &amp;lt;= (C_S_AXI_DATA_WIDTH/&lt;span&gt;8&lt;/span&gt;)-&lt;span&gt;1&lt;/span&gt;; byte_index = byte_index+&lt;span&gt;1&lt;/span&gt;&lt;span&gt; )
&lt;/span&gt;&lt;span&gt;254&lt;/span&gt;                   &lt;span&gt;if&lt;/span&gt; ( S_AXI_WSTRB[byte_index] == &lt;span&gt;1&lt;/span&gt; ) &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;255&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Respective byte enables are asserted as per write strobes 
&lt;/span&gt;&lt;span&gt;256&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Slave register 3&lt;/span&gt;
&lt;span&gt;257&lt;/span&gt;                     slv_reg3[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;] &amp;lt;= S_AXI_WDATA[(byte_index*&lt;span&gt;8&lt;/span&gt;) +: &lt;span&gt;8&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;258&lt;/span&gt;                   &lt;span&gt;end&lt;/span&gt;  
&lt;span&gt;259&lt;/span&gt;               &lt;span&gt;default&lt;/span&gt; : &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;260&lt;/span&gt;                           slv_reg0 &amp;lt;=&lt;span&gt; slv_reg0;
&lt;/span&gt;&lt;span&gt;261&lt;/span&gt;                           slv_reg1 &amp;lt;=&lt;span&gt; slv_reg1;
&lt;/span&gt;&lt;span&gt;262&lt;/span&gt;                           slv_reg2 &amp;lt;=&lt;span&gt; slv_reg2;
&lt;/span&gt;&lt;span&gt;263&lt;/span&gt;                           slv_reg3 &amp;lt;=&lt;span&gt; slv_reg3;
&lt;/span&gt;&lt;span&gt;264&lt;/span&gt;                         &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;265&lt;/span&gt;             &lt;span&gt;endcase&lt;/span&gt;
&lt;span&gt;266&lt;/span&gt;           &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;267&lt;/span&gt;       &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;268&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;    
&lt;span&gt;269&lt;/span&gt; 
&lt;span&gt;270&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement write response logic generation
&lt;/span&gt;&lt;span&gt;271&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The write response and response valid signals are asserted by the slave 
&lt;/span&gt;&lt;span&gt;272&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; when axi_wready, S_AXI_WVALID, axi_wready and S_AXI_WVALID are asserted.  
&lt;/span&gt;&lt;span&gt;273&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; This marks the acceptance of address and indicates the status of 
&lt;/span&gt;&lt;span&gt;274&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; write transaction.&lt;/span&gt;
&lt;span&gt;275&lt;/span&gt; 
&lt;span&gt;276&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;277&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;278&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;279&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;280&lt;/span&gt;           axi_bvalid  &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;281&lt;/span&gt;           axi_bresp   &amp;lt;= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;282&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;283&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;284&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;285&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt; (axi_awready &amp;amp;&amp;amp; S_AXI_AWVALID &amp;amp;&amp;amp; ~axi_bvalid &amp;amp;&amp;amp; axi_wready &amp;amp;&amp;amp;&lt;span&gt; S_AXI_WVALID)
&lt;/span&gt;&lt;span&gt;286&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;287&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; indicates a valid write response is available&lt;/span&gt;
&lt;span&gt;288&lt;/span&gt;               axi_bvalid &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;289&lt;/span&gt;               axi_bresp  &amp;lt;= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0; // &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;OKAY&lt;span&gt;'&lt;/span&gt;&lt;span&gt; response &lt;/span&gt;
&lt;span&gt;290&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;                   &lt;span&gt;//&lt;/span&gt;&lt;span&gt; work error responses in future&lt;/span&gt;
&lt;span&gt;291&lt;/span&gt;           &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;292&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;293&lt;/span&gt;               &lt;span&gt;if&lt;/span&gt; (S_AXI_BREADY &amp;amp;&amp;amp;&lt;span&gt; axi_bvalid) 
&lt;/span&gt;&lt;span&gt;294&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;check if bready is asserted while bvalid is high) 
&lt;/span&gt;&lt;span&gt;295&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;(there is a possibility that bready is always asserted high)   &lt;/span&gt;
&lt;span&gt;296&lt;/span&gt;                 &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;297&lt;/span&gt;                   axi_bvalid &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0; &lt;/span&gt;
&lt;span&gt;298&lt;/span&gt;                 &lt;span&gt;end&lt;/span&gt;  
&lt;span&gt;299&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;300&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;301&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;   
&lt;span&gt;302&lt;/span&gt; 
&lt;span&gt;303&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement axi_arready generation
&lt;/span&gt;&lt;span&gt;304&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; axi_arready is asserted for one S_AXI_ACLK clock cycle when
&lt;/span&gt;&lt;span&gt;305&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; S_AXI_ARVALID is asserted. axi_awready is 
&lt;/span&gt;&lt;span&gt;306&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; de-asserted when reset (active low) is asserted. 
&lt;/span&gt;&lt;span&gt;307&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The read address is also latched when S_AXI_ARVALID is 
&lt;/span&gt;&lt;span&gt;308&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; asserted. axi_araddr is reset to zero on reset assertion.&lt;/span&gt;
&lt;span&gt;309&lt;/span&gt; 
&lt;span&gt;310&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;311&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;312&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;313&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;314&lt;/span&gt;           axi_arready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;315&lt;/span&gt;           axi_araddr  &amp;lt;= &lt;span&gt;32&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;316&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;317&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;318&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;319&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt; (~axi_arready &amp;amp;&amp;amp;&lt;span&gt; S_AXI_ARVALID)
&lt;/span&gt;&lt;span&gt;320&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;321&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; indicates that the slave has acceped the valid read address&lt;/span&gt;
&lt;span&gt;322&lt;/span&gt;               axi_arready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;323&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read address latching&lt;/span&gt;
&lt;span&gt;324&lt;/span&gt;               axi_araddr  &amp;lt;=&lt;span&gt; S_AXI_ARADDR;
&lt;/span&gt;&lt;span&gt;325&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;326&lt;/span&gt;           &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;327&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;328&lt;/span&gt;               axi_arready &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;329&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;330&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;331&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;       
&lt;span&gt;332&lt;/span&gt; 
&lt;span&gt;333&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement axi_arvalid generation
&lt;/span&gt;&lt;span&gt;334&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; axi_rvalid is asserted for one S_AXI_ACLK clock cycle when both 
&lt;/span&gt;&lt;span&gt;335&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; S_AXI_ARVALID and axi_arready are asserted. The slave registers 
&lt;/span&gt;&lt;span&gt;336&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; data are available on the axi_rdata bus at this instance. The 
&lt;/span&gt;&lt;span&gt;337&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; assertion of axi_rvalid marks the validity of read data on the 
&lt;/span&gt;&lt;span&gt;338&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; bus and axi_rresp indicates the status of read transaction.axi_rvalid 
&lt;/span&gt;&lt;span&gt;339&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; is deasserted on reset (active low). axi_rresp and axi_rdata are 
&lt;/span&gt;&lt;span&gt;340&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; cleared to zero on reset (active low).  &lt;/span&gt;
&lt;span&gt;341&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;342&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;343&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;344&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;345&lt;/span&gt;           axi_rvalid &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;346&lt;/span&gt;           axi_rresp  &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;347&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;348&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;349&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;350&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt; (axi_arready &amp;amp;&amp;amp; S_AXI_ARVALID &amp;amp;&amp;amp; ~&lt;span&gt;axi_rvalid)
&lt;/span&gt;&lt;span&gt;351&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;352&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Valid read data is available at the read data bus&lt;/span&gt;
&lt;span&gt;353&lt;/span&gt;               axi_rvalid &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b1;&lt;/span&gt;
&lt;span&gt;354&lt;/span&gt;               axi_rresp  &amp;lt;= &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0; // &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;OKAY&lt;span&gt;'&lt;/span&gt;&lt;span&gt; response&lt;/span&gt;
&lt;span&gt;355&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;   
&lt;span&gt;356&lt;/span&gt;           &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (axi_rvalid &amp;amp;&amp;amp;&lt;span&gt; S_AXI_RREADY)
&lt;/span&gt;&lt;span&gt;357&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;358&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Read data is accepted by the master&lt;/span&gt;
&lt;span&gt;359&lt;/span&gt;               axi_rvalid &amp;lt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0;&lt;/span&gt;
&lt;span&gt;360&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;                
&lt;span&gt;361&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;362&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;    
&lt;span&gt;363&lt;/span&gt; 
&lt;span&gt;364&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Implement memory mapped register select and read logic generation
&lt;/span&gt;&lt;span&gt;365&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Slave register read enable is asserted when valid address is available
&lt;/span&gt;&lt;span&gt;366&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; and the slave is ready to accept the read address.&lt;/span&gt;
&lt;span&gt;367&lt;/span&gt;     &lt;span&gt;assign&lt;/span&gt; slv_reg_rden = axi_arready &amp;amp; S_AXI_ARVALID &amp;amp; ~&lt;span&gt;axi_rvalid;
&lt;/span&gt;&lt;span&gt;368&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @(*&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;369&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;370&lt;/span&gt;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Address decoding for reading registers&lt;/span&gt;
&lt;span&gt;371&lt;/span&gt;           &lt;span&gt;case&lt;/span&gt; ( axi_araddr[ADDR_LSB+&lt;span&gt;OPT_MEM_ADDR_BITS:ADDR_LSB] )
&lt;/span&gt;&lt;span&gt;372&lt;/span&gt;             &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h0   : reg_data_out &amp;lt;= slv_reg0;&lt;/span&gt;
&lt;span&gt;373&lt;/span&gt;             &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h1   : reg_data_out &amp;lt;= slv_reg1;&lt;/span&gt;
&lt;span&gt;374&lt;/span&gt;             &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h2   : reg_data_out &amp;lt;= slv_reg2;&lt;/span&gt;
&lt;span&gt;375&lt;/span&gt;             &lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h3   : reg_data_out &amp;lt;= slv_reg3;&lt;/span&gt;
&lt;span&gt;376&lt;/span&gt;             &lt;span&gt;default&lt;/span&gt; : reg_data_out &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;377&lt;/span&gt;           &lt;span&gt;endcase&lt;/span&gt;
&lt;span&gt;378&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;379&lt;/span&gt; 
&lt;span&gt;380&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Output register or memory read data&lt;/span&gt;
&lt;span&gt;381&lt;/span&gt;     &lt;span&gt;always&lt;/span&gt; @( &lt;span&gt;posedge&lt;/span&gt;&lt;span&gt; S_AXI_ACLK )
&lt;/span&gt;&lt;span&gt;382&lt;/span&gt;     &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;383&lt;/span&gt;       &lt;span&gt;if&lt;/span&gt; ( S_AXI_ARESETN == &lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b0 )&lt;/span&gt;
&lt;span&gt;384&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;385&lt;/span&gt;           axi_rdata  &amp;lt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;386&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt; 
&lt;span&gt;387&lt;/span&gt;       &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;388&lt;/span&gt;         &lt;span&gt;begin&lt;/span&gt;    
&lt;span&gt;389&lt;/span&gt;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt; When there is a valid read address (S_AXI_ARVALID) with 
&lt;/span&gt;&lt;span&gt;390&lt;/span&gt;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt; acceptance of read address by the slave (axi_arready), 
&lt;/span&gt;&lt;span&gt;391&lt;/span&gt;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt; output the read dada &lt;/span&gt;
&lt;span&gt;392&lt;/span&gt;           &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (slv_reg_rden)
&lt;/span&gt;&lt;span&gt;393&lt;/span&gt;             &lt;span&gt;begin&lt;/span&gt;
&lt;span&gt;394&lt;/span&gt;               axi_rdata &amp;lt;= reg_data_out;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; register read data&lt;/span&gt;
&lt;span&gt;395&lt;/span&gt;             &lt;span&gt;end&lt;/span&gt;   
&lt;span&gt;396&lt;/span&gt;         &lt;span&gt;end&lt;/span&gt;
&lt;span&gt;397&lt;/span&gt;     &lt;span&gt;end&lt;/span&gt;    
&lt;span&gt;398&lt;/span&gt; 
&lt;span&gt;399&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Add user logic here&lt;/span&gt;
&lt;span&gt;400&lt;/span&gt; &lt;span&gt;    pwm#(.FREQ_STEP(FREQ_STEP))
&lt;/span&gt;&lt;span&gt;401&lt;/span&gt; &lt;span&gt;    u_pwm(
&lt;/span&gt;&lt;span&gt;402&lt;/span&gt; &lt;span&gt;    .clk            (S_AXI_ACLK),
&lt;/span&gt;&lt;span&gt;403&lt;/span&gt; &lt;span&gt;    .rst_n          (S_AXI_ARESETN),
&lt;/span&gt;&lt;span&gt;404&lt;/span&gt;     .sw_en          (slv_reg0[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]),
&lt;/span&gt;&lt;span&gt;405&lt;/span&gt;     .sw_set_en      (slv_reg1[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]),
&lt;/span&gt;&lt;span&gt;406&lt;/span&gt;     .sw_freq_step   (slv_reg2[&lt;span&gt;10&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]),
&lt;/span&gt;&lt;span&gt;407&lt;/span&gt; &lt;span&gt;    .led            (led)
&lt;/span&gt;&lt;span&gt;408&lt;/span&gt; &lt;span&gt;    );
&lt;/span&gt;&lt;span&gt;409&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; User logic ends&lt;/span&gt;
&lt;span&gt;410&lt;/span&gt; 
&lt;span&gt;411&lt;/span&gt;     &lt;span&gt;endmodule&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;pwm_led_ip_v1_0_S00_AXI.v&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;最后重新封装&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302175913007-1245556054.png&quot; alt=&quot;&quot; width=&quot;732&quot; height=&quot;328&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;接下来搭建硬件IP子系统。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302220633107-925425625.png&quot; alt=&quot;&quot; width=&quot;1183&quot; height=&quot;513&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;和之前相比只是添加了pwm_led_ip_0，并连接在AXI Interconnect的另一个Master接口上。使用SystemILA抓取总线信号以备后续观察。还是同样的操作流程：生成输出文件，生成HDL Wrapper，添加管脚约束文件，综合，实现，生成比特流并导出硬件，启动SDK软件环境。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、软件编程与调试&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;其实CPU控制自定义IP的方式就是读写数据，写就是对指针赋值，读就是返回指针所指向地址中的数据，分别使用Xil_Out32()和Xil_In32()实现。创建pwm_led_ip.h文件，进行地址宏定义并编写配置函数。为了更好地实现软件库的封装和扩展，创建environment.h文件来include不同的库以及宏定义、全局变量定义。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;软件代码如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d6ddb122-8493-43e6-be86-8e0a73e6e1ed')&quot; readability=&quot;49&quot;&gt;&lt;img id=&quot;code_img_closed_d6ddb122-8493-43e6-be86-8e0a73e6e1ed&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d6ddb122-8493-43e6-be86-8e0a73e6e1ed&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d6ddb122-8493-43e6-be86-8e0a73e6e1ed',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d6ddb122-8493-43e6-be86-8e0a73e6e1ed&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;93&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt; * main.c
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt; *  Created on: 2020年2月22日
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt; *      Author: s
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;  7&lt;/span&gt; 
&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;environment.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt; 
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; GpioHandler(&lt;span&gt;void&lt;/span&gt; *&lt;span&gt;CallbackRef);
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; setupIntSystem(XScuGic *IntcInstancePtr,XGpio *&lt;span&gt;gpioInstancePtr
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;        ,u32 IntrId);
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; 
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; Status;
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt;     u8 i=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt;     u32 sys_led_out=&lt;span&gt;0x1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;    u32 data_r;
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;     freq_step_value = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; 
&lt;span&gt; 23&lt;/span&gt;     Status = gpiops_initialize(&amp;amp;&lt;span&gt;GpioPs,GPIOPS_DEVICE_ID);
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (Status !=&lt;span&gt; XST_SUCCESS) {
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_FAILURE;
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; 
&lt;span&gt; 28&lt;/span&gt;     Status = gpio_initialize(&amp;amp;&lt;span&gt;Gpio,GPIO_DEVICE_ID);
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (Status !=&lt;span&gt; XST_SUCCESS) {
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_FAILURE;
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; 
&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;     * Set the direction for the pin to be output and
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;    * Enable the Output enable for the LED Pin.
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt;     gpiops_setOutput(&amp;amp;&lt;span&gt;GpioPs,MIO_OUT_PIN_INDEX);
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; 
&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;LOOP_NUM;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;         gpiops_setOutput(&amp;amp;GpioPs,EMIO_OUT_PIN_BASE_INDEX+&lt;span&gt;i);
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt;     gpio_setDirect(&amp;amp;Gpio, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,GPIO_CHANNEL1);
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; 
&lt;span&gt; 45&lt;/span&gt;     Status = setupIntSystem(&amp;amp;Intc,&amp;amp;&lt;span&gt;Gpio,INTC_GPIO_INTERRUPT_ID);
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (Status !=&lt;span&gt; XST_SUCCESS) {
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_FAILURE;
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; 
&lt;span&gt; 50&lt;/span&gt;     Status =&lt;span&gt; pwm_led_setFreqStep(freq_step_value);
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (Status !=&lt;span&gt; XST_SUCCESS) {
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_FAILURE;
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; 
&lt;span&gt; 55&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Initialization finish.\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; 
&lt;span&gt; 57&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; 
&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;LOOP_NUM;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(int_flag == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;                 gpiops_outputValue(&amp;amp;GpioPs, EMIO_OUT_PIN_BASE_INDEX+i, &lt;span&gt;0x1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;                 usleep(&lt;span&gt;200&lt;/span&gt;*&lt;span&gt;1000&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;                 gpiops_outputValue(&amp;amp;GpioPs, EMIO_OUT_PIN_BASE_INDEX+i, &lt;span&gt;0x0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;                 gpiops_outputValue(&amp;amp;GpioPs, EMIO_OUT_PIN_BASE_INDEX+LOOP_NUM-&lt;span&gt;1&lt;/span&gt;-i, &lt;span&gt;0x1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;                 usleep(&lt;span&gt;200&lt;/span&gt;*&lt;span&gt;1000&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;                 gpiops_outputValue(&amp;amp;GpioPs, EMIO_OUT_PIN_BASE_INDEX+LOOP_NUM-&lt;span&gt;1&lt;/span&gt;-i, &lt;span&gt;0x0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; 
&lt;span&gt; 74&lt;/span&gt;         gpiops_outputValue(&amp;amp;&lt;span&gt;GpioPs, MIO_OUT_PIN_INDEX, sys_led_out);
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         sys_led_out  = sys_led_out == &lt;span&gt;0x0&lt;/span&gt; ? &lt;span&gt;0x1&lt;/span&gt; : &lt;span&gt;0x0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; 
&lt;span&gt; 80&lt;/span&gt; 
&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; setupIntSystem(XScuGic *IntcInstancePtr,XGpio *&lt;span&gt;gpioInstancePtr
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;        ,u32 IntrId)
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; Result;
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;    * Initialize the interrupt controller driver so that it is ready to
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    * use.
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;     &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt; 
&lt;span&gt; 91&lt;/span&gt;     Result = gic_initialize(&amp;amp;&lt;span&gt;Intc,INTC_DEVICE_ID);
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (Result !=&lt;span&gt; XST_SUCCESS) {
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_FAILURE;
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; 
&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;    XScuGic_SetPriorityTriggerType(IntcInstancePtr, IntrId,
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;                         &lt;span&gt;0xA0&lt;/span&gt;, &lt;span&gt;0x3&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; 
&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    * Connect the interrupt handler that will be called when an
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; &lt;span&gt;     * interrupt occurs for the device.
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;     Result =&lt;span&gt; XScuGic_Connect(IntcInstancePtr, IntrId,
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;                (Xil_ExceptionHandler)GpioHandler, gpioInstancePtr);
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (Result !=&lt;span&gt; XST_SUCCESS) {
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Result;
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; 
&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; Enable the interrupt for the GPIO device.&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;110&lt;/span&gt; &lt;span&gt;    XScuGic_Enable(IntcInstancePtr, IntrId);
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; 
&lt;span&gt;112&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt;113&lt;/span&gt; &lt;span&gt;     * Enable the GPIO channel interrupts so that push button can be
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;    * detected and enable interrupts for the GPIO device
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;     &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;116&lt;/span&gt; &lt;span&gt;    XGpio_InterruptEnable(gpioInstancePtr,GPIO_CHANNEL1);
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; &lt;span&gt;    XGpio_InterruptGlobalEnable(gpioInstancePtr);
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; 
&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt;120&lt;/span&gt; &lt;span&gt;    * Initialize the exception table and register the interrupt
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; &lt;span&gt;    * controller handler with the exception table
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt;     &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;123&lt;/span&gt;     exception_enable(&amp;amp;&lt;span&gt;Intc);
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; 
&lt;span&gt;125&lt;/span&gt;     IntrFlag = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt; 
&lt;span&gt;127&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_SUCCESS;
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; 
&lt;span&gt;130&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; GpioHandler(&lt;span&gt;void&lt;/span&gt; *&lt;span&gt;CallbackRef)
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt;     XGpio *GpioPtr = (XGpio *&lt;span&gt;)CallbackRef;
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt; &lt;span&gt;    u32 gpio_inputValue;
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt; 
&lt;span&gt;135&lt;/span&gt; 
&lt;span&gt;136&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; Clear the Interrupt &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;137&lt;/span&gt; &lt;span&gt;    XGpio_InterruptClear(GpioPtr, GPIO_CHANNEL1);
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Input interrupt routine.\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; 
&lt;span&gt;140&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;IntrFlag = 1;&lt;/span&gt;
&lt;span&gt;141&lt;/span&gt;     gpio_inputValue = gpio_readValue(GpioPtr, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;     &lt;span&gt;switch&lt;/span&gt;&lt;span&gt;(gpio_inputValue)
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt;     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;30&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;printf(&quot;button up\n&quot;);&lt;/span&gt;
&lt;span&gt;146&lt;/span&gt;         freq_step_value+=&lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt; &lt;span&gt;        pwm_led_setFreqStep(freq_step_value);
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt;     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;29&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;button center\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt;         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt;     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;27&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;printf(&quot;button left\n&quot;);&lt;/span&gt;
&lt;span&gt;154&lt;/span&gt;         int_flag = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt;         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt;     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;23&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;printf(&quot;button right\n&quot;);&lt;/span&gt;
&lt;span&gt;158&lt;/span&gt;         int_flag = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt;         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt;     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;15&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;print(&quot;button down\n&quot;);&lt;/span&gt;
&lt;span&gt;162&lt;/span&gt;         freq_step_value-=&lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt; &lt;span&gt;        pwm_led_setFreqStep(freq_step_value);
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt;         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; 
&lt;span&gt;167&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;main.c&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ff50f982-2ac0-49b1-856d-2aeb550d2750')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_ff50f982-2ac0-49b1-856d-2aeb550d2750&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ff50f982-2ac0-49b1-856d-2aeb550d2750&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ff50f982-2ac0-49b1-856d-2aeb550d2750',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ff50f982-2ac0-49b1-856d-2aeb550d2750&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt; * environment.h
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; *  Created on: 2020年3月2日
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *      Author: s
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;#ifndef SRC_ENVIRONMENT_H_
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; SRC_ENVIRONMENT_H_
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;xparameters.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; #include &amp;lt;xil_printf.h&amp;gt;
&lt;span&gt;13&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sleep.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;xstatus.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gpiops.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gpio.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pwm_led_ip.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gic.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt; XGpioPs GpioPs;    &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; The driver instance for GPIO Device. &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;XGpio Gpio;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; XScuGic Intc; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; The Instance of the Interrupt Controller Driver &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; printf            xil_printf    /* Smalller foot-print printf */
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; LOOP_NUM 4
&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt; u32 MIO_OUT_PIN_INDEX =&lt;span&gt;7&lt;/span&gt;; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; LED button &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt; u32 EMIO_OUT_PIN_BASE_INDEX = &lt;span&gt;54&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; u32 IntrFlag; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; Interrupt Handler Flag &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt; &lt;span&gt;#endif&lt;/span&gt; /* SRC_ENVIRONMENT_H_ */
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;environment.h&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('6685c3ab-90c2-40a7-a26b-f92b44de7edb')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_6685c3ab-90c2-40a7-a26b-f92b44de7edb&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_6685c3ab-90c2-40a7-a26b-f92b44de7edb&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('6685c3ab-90c2-40a7-a26b-f92b44de7edb',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_6685c3ab-90c2-40a7-a26b-f92b44de7edb&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt; * pwm_led_ip.h
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; *  Created on: 2020年3月2日
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *      Author: s
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;#ifndef SRC_PWM_LED_IP_H_
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; SRC_PWM_LED_IP_H_
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_S00_AXI_SLV_REG0_OFFSET 0
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_S00_AXI_SLV_REG1_OFFSET 4
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_S00_AXI_SLV_REG2_OFFSET 8
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_S00_AXI_SLV_REG3_OFFSET 12
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_BASEADDR XPAR_PWM_LED_IP_0_S00_AXI_BASEADDR
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; FREQ_STEP_SET_VALUE 30
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_REG_EN (PWM_LED_IP_BASEADDR+PWM_LED_IP_S00_AXI_SLV_REG0_OFFSET)
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_REG_SET_EN (PWM_LED_IP_BASEADDR+PWM_LED_IP_S00_AXI_SLV_REG1_OFFSET)
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_REG_FREQ_STEP (PWM_LED_IP_BASEADDR+PWM_LED_IP_S00_AXI_SLV_REG2_OFFSET)
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; PWM_LED_IP_REG_RESERVED (PWM_LED_IP_BASEADDR+PWM_LED_IP_S00_AXI_SLV_REG3_OFFSET)
&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt;&lt;span&gt; u32 freq_step_value;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; pwm_led_setFreqStep(u32 value)
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt; &lt;span&gt;    u32 data_r;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     Xil_Out32(PWM_LED_IP_REG_EN,&lt;span&gt;0x01&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     Xil_Out32(PWM_LED_IP_REG_SET_EN,&lt;span&gt;0x01&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;    Xil_Out32(PWM_LED_IP_REG_FREQ_STEP,value);
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     data_r =&lt;span&gt; Xil_In32(PWM_LED_IP_REG_FREQ_STEP);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     Xil_Out32(PWM_LED_IP_REG_SET_EN,&lt;span&gt;0x00&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(data_r ==&lt;span&gt; value)
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_SUCCESS;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; XST_FAILURE;
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; 
&lt;span&gt;42&lt;/span&gt; &lt;span&gt;#endif&lt;/span&gt; /* SRC_PWM_LED_IP_H_ */
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;pwm_led_ip.h&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;其他文件与上一篇ZYNQ入门实例博文相同。Run程序后多次按下按键，从串口terminal可以看出系统初始化成功，进入按键中断回调函数。开发板上呼吸灯频率也随着按键按下在变化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302222859168-1519647159.png&quot; alt=&quot;&quot; width=&quot;443&quot; height=&quot;231&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;最后打开VIVADO硬件管理器，观察AXI总线波形：&lt;/span&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302224740016-1445690666.png&quot; alt=&quot;&quot; width=&quot;1211&quot; height=&quot;334&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;按下步长值增加按键后，会有四次写数据操作，正好对应pwm_led_setFreqStep function中的四次Xil_Out32调用。每次写后一个时钟周期写响应通道BVALID拉高一个时钟周期证明写正确。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302225114492-1155755575.png&quot; alt=&quot;&quot; width=&quot;439&quot; height=&quot;283&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;再来观察用于确认写入无误的读操作对应总线波形：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/i-beta/1201289/202003/1201289-20200302225447636-1005240676.png&quot; alt=&quot;&quot; width=&quot;1230&quot; height=&quot;262&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;读取数据为40，与写入一致。到此功能定义、设计规划、硬件逻辑设计仿真、IP封装、子系统搭建、软件设计、板级调试的流程全部走完。&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Mar 2020 15:01:00 +0000</pubDate>
<dc:creator>没落骑士</dc:creator>
<og:description>一、前言 在实时性要求较高的场合中，CPU软件执行的方式显然不能满足需求，这时需要硬件逻辑实现部分功能。要想使自定义IP核被CPU访问，就必须带有总线接口。ZYNQ采用AXI BUS实现PS和PL之间</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/moluoqishi/p/12390970.html</dc:identifier>
</item>
<item>
<title>python类变量与构造函数的使用 - Lushun</title>
<link>http://www.cnblogs.com/Xy--1/p/12398718.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Xy--1/p/12398718.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;类变量&lt;/strong&gt;：可在类的所有实例之间共享的变量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;实例类对象&lt;/strong&gt;：类的实例是调用类对象来创建的。如：par = Parent()，par就是类Parent的一个实例类对象。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;实例变量&lt;/strong&gt;（成员变量）：同一个类对象可以创建多个实例类对象，类定义中有self标志的变量就是实例变量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一个例子，下面的代码有问题&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyObject(object):
    x &lt;/span&gt;= 1
    &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self):
        objectNum &lt;/span&gt;= 99
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; changeNum(self, anotherNum):
        self.objectNum &lt;/span&gt;=&lt;span&gt; anotherNum
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; showNum(self):
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;self.num = &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, self.objectNum)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;什么问题呢，看似构造函数__init__中的变量object在实例化对象的时候会自动创建并初始化为99，其实不然，这里用一个小的测试代码就可以发现问题。&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;obj =&lt;span&gt; MyObject()
obj.showNum()
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;class.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 24, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
    obj.showNum()
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;class.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 20, &lt;span&gt;in&lt;/span&gt;&lt;span&gt; showNum
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;self.num = &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, self.objectNum)
AttributeError: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;MyObject&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; object has no attribute &lt;span&gt;'&lt;/span&gt;&lt;span&gt;objectNum&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;报错了,提示实例化对象MyObject并没有objectNum这个普通成员变量,为什么呢?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;问题就在于,在Python中,类的成员变量必须使用self.propertName进行声明,这样才能完成创建,因为self的含义就是代表实例对象；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在这个类中,objectNum和self.objectNum就是两个完全不同的东西:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;定义在__init__函数中的变量objectNum在这里是一个局部变量,不是类变量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;接下来我们可以再写一段代码，调用changNum（）方法，来生成这个成员变量self.objectNum：&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;obj =&lt;span&gt; MyObject()
obj.changeNum(&lt;/span&gt;10&lt;span&gt;)
obj.showNum()
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; self.num =  10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;能看到成功返回结果，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;由于在changeNum()方法中,有self.objectNum = anotherNum的赋值,而__init__中,没有创建类普通成员变量self.objectNum， 而是创建了一个临时变量objectNum,所以在这里,虽然changeNum()没有被自动调用(因为不是__init__()函数),但是其实充当了创建类成员变量和初始化的作用, 但是python并不会在创建新的实例化对象的时候自动调用它。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以通过实验得到3个结论：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.python中的&quot;构造函数&quot;非常的自由,如果不考虑自动调用,任何类方法都可以去创建类成员变量:&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ExampleClass:
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; createObjectProperty(self, value):
self.newObjectProperty &lt;/span&gt;= value&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;如上面的代码,这里声明一个类方法,传入参数self 和 value,调用这个方法,就可以生成一个普通成员变量newObjectProperty,并对其赋初值value&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.如果想要找到真正意义上的成员变量,那么只需要在__init__(self)中声明self.objectProperty即可&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.python中的self不能隐式调用,如果你不想生成一个临时变量而是创建一个类成员变量,那么就应该使用self.variableName&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyObject(object):
    x &lt;/span&gt;= 1
    &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self):
        self.objectNum &lt;/span&gt;= 99
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; changeNum(self, anotherNum):
        self.objectNum &lt;/span&gt;=&lt;span&gt; anotherNum
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; showNum(self):
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;self.num = &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, self.objectNum)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;obj = MyObject()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;# obj.changeNum(10)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;obj.showNum()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;self.num =  99&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;知道了成员变量的问题之后，再来讨论一下类变量&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyObject(object):
    x &lt;/span&gt;= 1
    &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self):
        self.objectNum &lt;/span&gt;= 99
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; changeNum(self, anotherNum):
        self.objectNum &lt;/span&gt;=&lt;span&gt; anotherNum
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; showNum(self):
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;self.num = &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, self.objectNum)
 
 
 
 
obj &lt;/span&gt;=&lt;span&gt; MyObject()
 
 
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(MyObject.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;span&gt;在声明类T的时候,我们在所有的方法之外(但是仍在类的作用域中声明了一个变量classNum)，从命名的角度来看,我们希望这是一个类变量，但我们不希望这次又是一个成员变量，测试发现它确实可以由类名直接访问再试一下能否修改:&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;MyObject.x = 100
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(MyObject.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;发现可以修改&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面我们验证一下其是否能被所有实例化对象访问和修改,并且是否具有全局性。&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;t1 =&lt;span&gt; MyObject()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 1&lt;span&gt;
t2 &lt;/span&gt;=&lt;span&gt; MyObject()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(t2.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 1&lt;span&gt;
MyObject.x &lt;/span&gt;= 1000
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 1000
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(t2.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; 1000&lt;span&gt;
t1.x &lt;/span&gt;= 2000
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(t2.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;1000
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;2000
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(MyObject.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;1000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从以上结果看出类名.类变量名修改其值会导致实例化对象的值全部被改变，但是用实例化对象名.类变量名修改其值，就仅仅改变自己，不会真的改变类变量的数值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们来检查一下内存，看一段代码：&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;t2 =&lt;span&gt; MyObject()
t1 &lt;/span&gt;=&lt;span&gt; MyObject()
 
 
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(MyObject.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;True
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(MyObject.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t2.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;True
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(t2.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;True
&lt;/span&gt;---------------------------------------&lt;span&gt;
t2 &lt;/span&gt;=&lt;span&gt; MyObject()
t1 &lt;/span&gt;=&lt;span&gt; MyObject()
 
t2.x &lt;/span&gt;= 10
&lt;span&gt;print&lt;/span&gt;(MyObject.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;True
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(MyObject.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t2.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;False
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(t2.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;False
&lt;/span&gt;--------------------------------------&lt;span&gt;
t2 &lt;/span&gt;=&lt;span&gt; MyObject()
t1 &lt;/span&gt;=&lt;span&gt; MyObject()
 
MyObject.x &lt;/span&gt;= 100&lt;span&gt;
t2.x &lt;/span&gt;= 10
&lt;span&gt;print&lt;/span&gt;(MyObject.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;True
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(MyObject.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t2.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;False
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(t2.x &lt;span&gt;is&lt;/span&gt;&lt;span&gt; t1.x)
&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;看得出来在最开始的时候MyObject.x和实例化对象t1.x与t2.x内存是同一处的，但当直接修改了实例化对象t2.x的数值后t2.x内存的数值便与其他两个不同，所以直接修改实例化对象的数值会指向新的内存空间，并且不受类变量改变而改变。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;总结：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;一个类&lt;span&gt;&lt;span&gt;=&lt;span&gt;&lt;span&gt;类变量&lt;span&gt;（可以没有）&lt;span&gt;+&lt;span&gt;&lt;span&gt;构造函数&lt;span&gt;（必须有,没有的话默认调用）&lt;span&gt;+&lt;span&gt;&lt;span&gt;成员函数&lt;span&gt;（自己定义，可以没有）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;构造函数中定义了类的成员变量，类的成员变量一定是在构造函数中以self.开头的变量！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;成员函数中可以调用成员变量和类变量！成员函数的形参在类的实例调用该函数时传递，成员函数的局部变量在该成员函数内部定义。调用成员函数和调用普通函数一样，只是成员函数由该函数对应的类调用，即需要写成xxxx.func()而不是直接使用func()!&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 02 Mar 2020 14:53:00 +0000</pubDate>
<dc:creator>Lushun</dc:creator>
<og:description>类变量：可在类的所有实例之间共享的变量 实例类对象：类的实例是调用类对象来创建的。如：par = Parent()，par就是类Parent的一个实例类对象。 实例变量（成员变量）：同一个类对象可以创</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/Xy--1/p/12398718.html</dc:identifier>
</item>
</channel>
</rss>