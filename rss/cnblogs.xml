<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>C#在window服务配置Log4Net.dll - 追逐时光</title>
<link>http://www.cnblogs.com/Can-daydayup/p/10223239.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Can-daydayup/p/10223239.html</guid>
<description>&lt;h2&gt;1.使用背景：&lt;/h2&gt;
&lt;p&gt;　　&lt;span&gt;C#window服务下添加一个日志记录程序集（Log4Net.dll）&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;2.添加和使用步骤如下：&lt;/h2&gt;
&lt;h3&gt;一、下载并引入Log4Net.dll程序集到项目中&lt;/h3&gt;
&lt;p&gt;　　下载地址：&lt;a href=&quot;http://logging.apache.org/log4net/download_log4net.cgi&quot; target=&quot;_blank&quot;&gt;http://logging.apache.org/log4net/download_log4net.cgi&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;二、在App.Config中添加对应的节点&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;!--重点configsections必须是第一个节点1og4net配置--&amp;gt;
&amp;lt;configSections&amp;gt;
    &amp;lt;section name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Config.Log4NetConfigurationSectionHandler, log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;/configSections&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;三、在App.Config中添加Log4Net.dll初始化信息（主要一些按照什么格式存储，存储位置的配置）&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
  &amp;lt;log4net&amp;gt;
  &amp;lt;!-- OFF, FATAL, ERROR, WARN, INFO, DEBUG, ALL --&amp;gt;
  &amp;lt;!-- Set root logger level to ERROR and its appenders --&amp;gt;
  &amp;lt;root&amp;gt;
  &amp;lt;level value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ALL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;appender-&lt;span&gt;ref&lt;/span&gt; &lt;span&gt;ref&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;SysAppender&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;/root&amp;gt;
  &amp;lt;!-- Print only messages of level DEBUG or above &lt;span&gt;in&lt;/span&gt; the packages --&amp;gt;
  &amp;lt;logger name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;WebLogger&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;level value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DEBUG&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;/logger&amp;gt;
  &amp;lt;appender name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;SysAppender&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Appender.RollingFileAppender,log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;!--日志文件夹名称--&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;File&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ProJectsLogs/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AppendToFile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RollingStyle&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Date&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DatePattern&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;amp;quot;Logs_&amp;amp;quot;yyyyMMdd&amp;amp;quot;.txt&amp;amp;quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StaticLogFileName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;layout type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Layout.PatternLayout,log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ConversionPattern&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d [%t] %-5p %c - %m%n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;/layout&amp;gt;
  &amp;lt;/appender&amp;gt;
  &amp;lt;appender name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;consoleApp&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Appender.ConsoleAppender,log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;layout type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Layout.PatternLayout,log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;param name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ConversionPattern&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d [%t] %-5p %c - %m%n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;/layout&amp;gt;
  &amp;lt;/appender&amp;gt;
  &amp;lt;/log4net&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;四、在AssemblyInfo.cs：配置文件中读取配置Log4net.dll&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[assembly: log4net.Config.XmlConfigurator(ConfigFileExtension = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;config&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Watch = &lt;span&gt;true&lt;/span&gt;)]
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;五、使用Log4Net.Dll记录日志&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;首先实例化Log4net&lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; log4net.ILog log =&lt;span&gt; log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;使用记录信息&lt;/span&gt;
log.Debug(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Debug&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Exception(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Debug&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
log.Info(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Info&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Exception(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Info&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
log.Warn(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Warn&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Exception(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Warn&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
log.Error(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Exception(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
log.Fatal(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Fatal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Exception(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Fatal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;));
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em&gt; &lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 04 Jan 2019 19:04:00 +0000</pubDate>
<dc:creator>追逐时光</dc:creator>
<og:description>1.使用背景： C#window服务下添加一个日志记录程序集（Log4Net.dll） 2.添加和使用步骤如下： 一、下载并引入Log4Net.dll程序集到项目中 下载地址：http://loggi</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Can-daydayup/p/10223239.html</dc:identifier>
</item>
<item>
<title>CentOS 7.6 使用kubeadm安装Kubernetes 13 - Javenn</title>
<link>http://www.cnblogs.com/javennie/p/10223225.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/javennie/p/10223225.html</guid>
<description>&lt;p&gt;实验环境：VMware Fusion 11.0.2&lt;/p&gt;
&lt;p&gt;操作系统：CentOS 7.6 &lt;/p&gt;
&lt;table border=&quot;1&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;主机名&lt;/th&gt;
&lt;th&gt;IP地址&lt;/th&gt;
&lt;th&gt;CPU&lt;/th&gt;
&lt;th&gt;内存&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;k8s2m&lt;/td&gt;
&lt;td&gt;172.16.183.151&lt;/td&gt;
&lt;td&gt;2核&lt;/td&gt;
&lt;td&gt;4G&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8s2n&lt;/td&gt;
&lt;td&gt;172.16.183.161&lt;/td&gt;
&lt;td&gt;1核&lt;/td&gt;
&lt;td&gt;1G&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;装系统的时候就已经设置为静态IP了，语言为英语，时区是上海。另外因为kubernetes默认不支持swap分区，所以在硬盘分区的时候直接把swap分区拿掉了。这里可以先忽略这些。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果装系统时分配了 swap 分区，临时关闭 swap 分区可以用：&lt;/span&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;swapoff -a&lt;/span&gt; ，&lt;span&gt;永久关闭可以在&lt;/span&gt;  &lt;span class=&quot;cnblogs_code&quot;&gt;/etc/fstab&lt;/span&gt;  &lt;span&gt;里面注释掉，这段开始忘了写了，用红色写出来吧。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;未声明的话，下列命令在 k8s2m 和 k8s2n 上都能执行。&lt;/p&gt;
&lt;h2&gt;1、配置 SSH 免密登陆&lt;/h2&gt;
&lt;p&gt;在本机的hosts 文件中加入如下内容：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;72.16&lt;/span&gt;.&lt;span&gt;183.151&lt;/span&gt;&lt;span&gt; k8s2m
&lt;/span&gt;&lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;183.161&lt;/span&gt; k8s2n
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后查看本机是否有 id_rsa.pub 文件，如果没有则通过 ssh-keygen 生成&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;if&lt;/span&gt; [ -f &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$HOME/.ssh/id_rsa.pub&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ];&lt;span&gt;then&lt;/span&gt; &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;File exists&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;; &lt;span&gt;else&lt;/span&gt; &lt;span&gt;ssh-keygen&lt;/span&gt;; &lt;span&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将本地公钥安装到虚拟机的root账户下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ssh&lt;/span&gt;-copy-&lt;span&gt;id&lt;/span&gt;&lt;span&gt; root@k8s2m
&lt;/span&gt;&lt;span&gt;ssh&lt;/span&gt;-copy-&lt;span&gt;id&lt;/span&gt; root@k8s2n
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此免密登陆配置完成。&lt;/p&gt;
&lt;h2&gt;2、解决 setLocale 问题&lt;/h2&gt;
&lt;p&gt;接下来开两个终端通过ssh进入系统，在终端得到如下输出：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
-bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在终端直接执行如下命令，然后退出ssh，再次进入，或者直接重启虚拟机&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;cat&lt;/span&gt; &amp;lt;&amp;lt;EOF &amp;gt;  /etc/&lt;span&gt;environment
LANG&lt;/span&gt;=en_US.UTF-&lt;span&gt;8&lt;/span&gt;&lt;span&gt;
LC_ALL&lt;/span&gt;=&lt;span&gt;C
EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3、设置 SELinux 为 permissive 模式 &lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
setenforce &lt;span&gt;0&lt;/span&gt;
&lt;span&gt;sed&lt;/span&gt; -i &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/^SELINUX=enforcing$/SELINUX=permissive/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; /etc/selinux/config
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4、停止并且禁用动态防火墙&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
systemctl disable firewalld &amp;amp;&amp;amp; systemctl stop firewalld
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5、添加 kubernetes.repo 和 docker-ce.repo&lt;/h2&gt;
&lt;p&gt;原本是都用 cat EOF 方式来做的，结果发现在我MAC上SSH连接进去执行后文件内容一致，但即便 yum clean all 后仍然无法生效，这里还是使用 vi，vim等编辑器往里面粘贴算了。&lt;/p&gt;
&lt;p&gt;vi /etc/yum.repos.d/kubernetes.repo&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[kubernetes]
name&lt;/span&gt;=&lt;span&gt;Kubernetes
baseurl&lt;/span&gt;=http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64&lt;/span&gt;
enabled=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
repo_gpgcheck&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg &lt;/span&gt;&lt;span&gt;http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;vi /etc/yum.repos.d/docker-ce.repo&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[docker-ce-&lt;span&gt;stable]
name&lt;/span&gt;=Docker CE Stable -&lt;span&gt; $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/$basearch/stable&lt;/span&gt;
enabled=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-stable-&lt;span&gt;debuginfo]
name&lt;/span&gt;=Docker CE Stable -&lt;span&gt; Debuginfo $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/debug-$basearch/stable&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-stable-&lt;span&gt;source]
name&lt;/span&gt;=Docker CE Stable -&lt;span&gt; Sources
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/source/stable&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-&lt;span&gt;edge]
name&lt;/span&gt;=Docker CE Edge -&lt;span&gt; $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/$basearch/edge&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-edge-&lt;span&gt;debuginfo]
name&lt;/span&gt;=Docker CE Edge -&lt;span&gt; Debuginfo $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/debug-$basearch/edge&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-edge-&lt;span&gt;source]
name&lt;/span&gt;=Docker CE Edge -&lt;span&gt; Sources
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/source/edge&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-&lt;span&gt;test]
name&lt;/span&gt;=Docker CE Test -&lt;span&gt; $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/$basearch/test&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-test-&lt;span&gt;debuginfo]
name&lt;/span&gt;=Docker CE Test -&lt;span&gt; Debuginfo $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/debug-$basearch/test&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-test-&lt;span&gt;source]
name&lt;/span&gt;=Docker CE Test -&lt;span&gt; Sources
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/source/test&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-&lt;span&gt;nightly]
name&lt;/span&gt;=Docker CE Nightly -&lt;span&gt; $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/$basearch/nightly&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-nightly-&lt;span&gt;debuginfo]
name&lt;/span&gt;=Docker CE Nightly -&lt;span&gt; Debuginfo $basearch
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/debug-$basearch/nightly&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;span&gt;
[docker&lt;/span&gt;-ce-nightly-&lt;span&gt;source]
name&lt;/span&gt;=Docker CE Nightly -&lt;span&gt; Sources
baseurl&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/7/source/nightly&lt;/span&gt;
enabled=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
gpgcheck&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
gpgkey&lt;/span&gt;=https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mirrors.aliyun.com/docker-ce/linux/centos/gpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;6、安装 docker-ce&lt;/h2&gt;
&lt;p&gt;这里kubeadm的版本是1.13.1，支持的 docker 版本最高应该是 18.06.x，通过执行  &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;yum&lt;/span&gt; list docker-ce --showduplicates | &lt;span&gt;sort&lt;/span&gt; -r&lt;/span&gt; 得到 docker 各版本的列表：&lt;/p&gt;
&lt;p&gt;这里选 18.06.1.ce-3.el7&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
docker-ce.x86_64            3:18.09.0-3.el7                     docker-ce-stable
docker-ce.x86_64            18.06.1.ce-3.el7                    docker-ce-stable
docker-ce.x86_64            18.06.0.ce-3.el7                    docker-ce-stable
docker-ce.x86_64            18.03.1.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.12.1.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.12.0.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.09.1.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.09.0.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.06.2.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.06.1.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.06.0.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.03.3.ce-1.el7                    docker-ce-stable
docker-ce.x86_64            17.03.2.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.03.1.ce-1.el7.centos             docker-ce-stable
docker-ce.x86_64            17.03.0.ce-1.el7.centos             docker-ce-stable
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装 docker-ce：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yum&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; -y docker-ce-&lt;span&gt;18.06&lt;/span&gt;.&lt;span&gt;1&lt;/span&gt;.ce-&lt;span&gt;3&lt;/span&gt;.el7
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 docker 服务，并将 docker 服务设置为开机启动&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
systemctl enable docker &amp;amp;&amp;amp; systemctl start docker
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;7、安装 kubelet、kubeadm 和 kubectl&lt;/h2&gt;
&lt;p&gt;以下是安装 kubernetes 所需的工具&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yum&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; -y kubelet kubeadm kubectl
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 docker、kubelet 服务，并将 docker、kubelet 服务设置为开机启动&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;systemctl enable kubelet &lt;/span&gt;&amp;amp;&amp;amp; systemctl start kubelet
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;8、安装镜像&lt;/h2&gt;
&lt;p&gt;列出 kubeadm 需要安装的镜像列表，然后使用 sed 修改后执行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
kubeadm config images list |&lt;span&gt;sed&lt;/span&gt; -e &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s#k8s.gcr.io\/coredns#coredns\/coredns#g&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;sed&lt;/span&gt; -e &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/^/docker pull /g&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; -e &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s#k8s.gcr.io#mirrorgooglecontainers#g&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;sh&lt;/span&gt; -x
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;装好的镜像 tag 跟 kubeadm 直接装的是不一样的，这里给予修正：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
docker images |&lt;span&gt;grep&lt;/span&gt; -E &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mirrorgooglecontainers|coredns/coredns&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;awk&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{print &quot;docker tag &quot;,$1&quot;:&quot;$2,$1&quot;:&quot;$2}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;sed&lt;/span&gt; -e &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s#mirrorgooglecontainers#k8s.gcr.io#2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;sed&lt;/span&gt; -e &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s#coredns#k8s.gcr.io#3&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;sh&lt;/span&gt; -x
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后移除掉多余的 tag&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
docker images |&lt;span&gt;grep&lt;/span&gt; -E &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mirrorgooglecontainers|coredns/coredns&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;awk&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{print &quot;docker rmi &quot;,$1&quot;:&quot;$2}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;|&lt;span&gt;sh&lt;/span&gt; -x
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;9、配置 net.bridge.bridge-nf-call-iptables&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;cat&lt;/span&gt; &amp;lt;&amp;lt;EOF &amp;gt;  /etc/sysctl.d/&lt;span&gt;k8s.conf
net.bridge.bridge&lt;/span&gt;-nf-call-ip6tables = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
net.bridge.bridge&lt;/span&gt;-nf-call-iptables = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
EOF
sysctl &lt;/span&gt;--system
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后重启 kubelet&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
systemctl daemon-&lt;span&gt;reload
systemctl restart kubelet&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;10、创建kubernetes master，只需要在 master 节点（k8s2m）上执行&lt;/h2&gt;
&lt;p&gt;在 master 上执行下面命令创建 kubernetes master，为何加 --pod-network-cidr=10.244.0.0/16 看&lt;a href=&quot;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#tabs-pod-install-4&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
kubeadm init --pod-network-cidr=&lt;span&gt;10.244&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;/&lt;span&gt;16&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;命令执行结束后，根据提示执行如下操作，如果本身是 root 用户，第三条其实不用执行的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;mkdir&lt;/span&gt; -p $HOME/&lt;span&gt;.kube
&lt;/span&gt;&lt;span&gt;sudo&lt;/span&gt; &lt;span&gt;cp&lt;/span&gt; -i /etc/kubernetes/admin.conf $HOME/.kube/&lt;span&gt;config
&lt;/span&gt;&lt;span&gt;sudo&lt;/span&gt; &lt;span&gt;chown&lt;/span&gt; $(&lt;span&gt;id&lt;/span&gt; -u):$(&lt;span&gt;id&lt;/span&gt; -g) $HOME/.kube/config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面还有一条如下形式的提示，拷贝出来，在 worker 节点（k8s2n）上需要执行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
kubeadm &lt;span&gt;join&lt;/span&gt; &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;183.151&lt;/span&gt;:&lt;span&gt;6443&lt;/span&gt; --token ############## --discovery-token-ca-cert-hash #############################
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后安装 pod network add-on，这里装 flannel，在安装之前&lt;a href=&quot;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#tabs-pod-install-4&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;有如下说明，也是为何&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;19.822335025381&quot;&gt;
&lt;pre readability=&quot;3.3502538071066&quot;&gt;
链接地址： &lt;a href=&quot;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#tabs-pod-install-4&quot; target=&quot;_blank&quot;&gt;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#tabs-pod-install-4&lt;/a&gt;&lt;p&gt;For flannel to work correctly, you must pass --pod-network-cidr=10.244.0.0/16 to kubeadm init.
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装flannel&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
kubectl apply -f https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果想要查看 pods 或 nodes，分别执行如下命令（另外 pods 就是跑在 docker 上的，也可以通过 docker ps 来查看）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 kubectl get pods --all-namespaces
 kubectl get nodes --all-namespaces
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;想要查看实时状态还可以执行如下命令，-n2也就是2秒刷新一次结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
watch -n2 kubectl get pods --all-&lt;span&gt;namespaces
watch &lt;/span&gt;-n2 kubectl get nodes --all-namespaces
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;11、将 worker 节点（k8s2n） 加入 master 节点（k8s2m）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最后只需要在 worker 节点（k8s2n）上执行如下命令（在 master 节点 init 结束让存下的命令）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
kubeadm &lt;span&gt;join&lt;/span&gt; &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;183.151&lt;/span&gt;:&lt;span&gt;6443&lt;/span&gt; --token ############## --discovery-token-ca-cert-hash #############################
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当在master 节点 （k8s2m) 执行  &lt;span class=&quot;cnblogs_code&quot;&gt;kubectl get nodes&lt;/span&gt; ，能看到两个节点，并且状态都是  &lt;span class=&quot;cnblogs_code&quot;&gt;Ready&lt;/span&gt; 的时候，这里的任务也就暂时完成了。&lt;/p&gt;
</description>
<pubDate>Fri, 04 Jan 2019 17:52:00 +0000</pubDate>
<dc:creator>Javenn</dc:creator>
<og:description>实验环境：VMware Fusion 11.0.2 操作系统：CentOS 7.6 装系统的时候就已经设置为静态IP了，语言为英语，时区是上海。另外因为kubernetes默认不支持swap分区，所以</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/javennie/p/10223225.html</dc:identifier>
</item>
<item>
<title>【Ray Tracing in One Weekend 超详解】 光线追踪1-9 景深 - 林-兮</title>
<link>http://www.cnblogs.com/lv-anchoret/p/10223222.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lv-anchoret/p/10223222.html</guid>
<description>

&lt;p&gt;&lt;span&gt;今天我们来学最后一章&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Chapter11：Defocus Blur&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Preface&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;散焦模糊 也称 景深&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;首先，我们来了解一下散焦模糊，我们在真实相机中散焦模糊的原因是因为它们需要一个大圈（而不仅仅是一个针孔）来聚光。这会使所有东西都散焦，但是如果用小孔的话，那么通过前后调整相机镜头，就会使得一切景色都会聚焦到相机镜头中，也就是会汇聚到那个孔内。物体聚焦的那个平面的距离由镜头和胶片/传感器之间的距离控制。这就是为什么当你改变焦点时可以看到镜头相对于相机移动的原因。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;光圈是一个可以有效控制镜头大小的孔。对于真正的相机，如果你需要更多光线，你可以使光圈更大，同时也会获得更多的散焦模糊。对于我们的虚拟相机，我们也需要一个光圈&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;真正的相机具有复杂的复合镜头。对于我们的代码，我们可以模拟顺序：传感器，然后是镜头，然后是光圈，并找出发送光线的位置并在计算后翻转图像（图像在胶片上倒置投影）。人们通常使用薄透镜模拟近似。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;引用书上一张图（相机聚焦成像）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105001846932-365086985.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们不需要这么复杂，我们通常从镜头表面开始射线，并将它们发送到虚拟胶片平面，方法是找到胶片在焦点平面上的投影（在距离focus_dist处）。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;正文&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;前面说了一大堆，看着比较复杂，其实并没有那么难&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;前言说了三件事情：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一点，生活中的相机成像分为两个部分，inside和outside，涉及3个物：film（胶片）、lens（镜片）、focusPlane（焦点平面），&lt;/span&gt;&lt;span&gt;而我们只需要outside部分&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105005517891-2107468507.png&quot; alt=&quot;&quot; width=&quot;535&quot; height=&quot;410&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其次第二点，我们的眼睛（或者相机）不再是一个点而是眼睛所在的周围圆盘上的随机点，因为实际的相机是有摄像镜头的，摄像镜头是一个大光圈（很大一个镜片），并不是针孔类的东东，所以，我们要模拟镜头，就要随机采针孔周围的光圈点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可能有人不明白这里，可以回去看看&lt;a href=&quot;https://www.cnblogs.com/lv-anchoret/p/10186187.html&quot; target=&quot;_blank&quot;&gt;1-3&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;看一下这张图&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105005933824-1987535260.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是之前我们讲的光线追踪的成像过程，从eye开始发射视线，这个扫描屏幕中的每个点，如果中间被物体遮挡，那么计算，计算之后的像素值为屏幕上该点的像素值，如果没有遮挡，那么屏幕上那个点的像素值就是背景对应的值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们这里只不过是把eye变为周围单位圈内的随机点，仅此模拟实际相机镜头&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第三点，这个应该是上一章节提到的问题:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上一章节我们说了，为了方便，上一章节假定成像平面位于z = -1(或者是-w平面,按w基向量算)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以 tan(theta/2) = (h/2) / dis ,其中dis为1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;而这一章，我们使dis真正变成了一个变量，即：焦距（镜片到成像平面之间的距离）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(图片来自百度百科：&lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105010956491-752749275.png&quot; alt=&quot;&quot; width=&quot;361&quot; height=&quot;60&quot;/&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 随之，我们的成像平面也就到了z = -focus，或者是-focus * w平面(按w基向量算)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;所以，构造函数，我们就需要加两个参数，改两行行即可&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105013109695-1784635206.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;还有就是单位圆盘取随机点函数&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;const&lt;/span&gt; rtvec random_unit_disk()            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;find a random point in unit_disk&lt;/span&gt;
&lt;span&gt;    {
        rtvec p;
        &lt;/span&gt;&lt;span&gt;do&lt;/span&gt;&lt;span&gt;
        {
            p &lt;/span&gt;= &lt;span&gt;2.0&lt;/span&gt;*rtvec(rtrand01(), rtrand01(), rtrand01()) - rtvec(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (dot(p, p) &amp;gt;= &lt;span&gt;1.0&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; p;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;下面是所有的camera类&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('caa80142-8949-4130-b837-f4bf0fc6ad7a')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_caa80142-8949-4130-b837-f4bf0fc6ad7a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_caa80142-8949-4130-b837-f4bf0fc6ad7a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('caa80142-8949-4130-b837-f4bf0fc6ad7a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_caa80142-8949-4130-b837-f4bf0fc6ad7a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt; camera.h&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [begin ]        2019.1
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        the camera-class for the ray-tracing project
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                from the 《ray tracing in one week》
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span&gt;
#ifndef CAMERA_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; CAMERA_H&lt;span&gt;

#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ray.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; rt
{

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; camera
    {
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    camera(rtvec lookfrom, rtvec lookat, rtvec vup, rtvar vfov, rtvar aspect, rtvar aperture, rtvar focus)
        :_eye(lookfrom)
        ,_lens_radius(aperture&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)
    {
        rtvar theta &lt;/span&gt;= vfov * π / &lt;span&gt;180&lt;/span&gt;&lt;span&gt;;
        rtvar half_height &lt;/span&gt;= tan(theta / &lt;span&gt;2&lt;/span&gt;) * focus;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;tan(theta/2) = (height/2) / 焦距&lt;/span&gt;
        rtvar half_width = aspect *&lt;span&gt; half_height;
        _w &lt;/span&gt;= (lookfrom -&lt;span&gt; lookat).ret_unitization();
        _u &lt;/span&gt;=&lt;span&gt; cross(vup, _w).ret_unitization();
        _v &lt;/span&gt;=&lt;span&gt; cross(_w, _u);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;向量运算&lt;/span&gt;
        _start = _eye - half_width * _u - half_height * _v - focus * _w;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;高和宽都乘了焦距，w也要乘，不然公式是错的&lt;/span&gt;
        _horizontal = &lt;span&gt;2&lt;/span&gt; * half_width *&lt;span&gt; _u;
        _vertical &lt;/span&gt;= &lt;span&gt;2&lt;/span&gt; * half_height *&lt;span&gt; _v;
    }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; ray get_ray(&lt;span&gt;const&lt;/span&gt; rtvar u,&lt;span&gt;const&lt;/span&gt; rtvar v)&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
        {
            rtvec rd &lt;/span&gt;= _lens_radius *&lt;span&gt; random_unit_disk();
            rtvec offset &lt;/span&gt;= _u * rd.x() + _v *&lt;span&gt; rd.y();
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; ray{ _eye * offset, _start + u*_horizontal + v*_vertical - _eye -&lt;span&gt; offset };
        }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; ray get_ray(&lt;span&gt;const&lt;/span&gt; lvgm::vec2&amp;lt;rtvar&amp;gt;&amp;amp; para)&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
        {    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; get_ray(para.u(), para.v());    }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; eye()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _eye; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; start()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _start; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; horizontal()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _horizontal; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; vertical()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _vertical; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; u()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _u; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; v()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _v; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvec&amp;amp; w()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _w; }

    inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; rtvar lens_r()&lt;span&gt;const&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _lens_radius; }

&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
    rtvec _u;

    rtvec _v;

    rtvec _w;

    rtvec _eye;

    rtvec _start;        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;left-bottom&lt;/span&gt;
&lt;span&gt;
    rtvec _horizontal;

    rtvec _vertical;

    rtvar _lens_radius;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the radius of lens&lt;/span&gt;
&lt;span&gt;
    };

}

&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;camera.h&lt;/span&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;所以，我们用上一章的球体设置，把相机改一下，渲染一把&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105014017029-319140711.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;渲染是真的慢。。。渲染完这张图就睡了，玩不起&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 算了，睡了，明早再挂图&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1316111/201901/1316111-20190105014827394-947124970.png&quot; alt=&quot;&quot; width=&quot;882&quot; height=&quot;496&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; 晚安&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 04 Jan 2019 17:49:00 +0000</pubDate>
<dc:creator>林-兮</dc:creator>
<og:description>散焦模糊 景深</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lv-anchoret/p/10223222.html</dc:identifier>
</item>
<item>
<title>Java线程入门第三篇 - 布尔bl</title>
<link>http://www.cnblogs.com/chenzhuantou/p/10223161.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenzhuantou/p/10223161.html</guid>
<description>[unable to retrieve full-text content]Java内存模型（jmm） Why：保证多线程正确协同工作 看图说明: 文字解释:线程a和线程b通信过程，首先线程a把本地内存的共享变量更新到主内存中，然后线程b去读取主内存的共享变量，最后更新到自己的本地内存中 JMM涉及的特性以及规则 特性 1.原子性：操作不可中断，即一个线程操作不会被另一个线</description>
<pubDate>Fri, 04 Jan 2019 16:32:00 +0000</pubDate>
<dc:creator>布尔bl</dc:creator>
<og:description>Java内存模型（jmm） Why：保证多线程正确协同工作 看图说明: 文字解释:线程a和线程b通信过程，首先线程a把本地内存的共享变量更新到主内存中，然后线程b去读取主内存的共享变量，最后更新到自己</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenzhuantou/p/10223161.html</dc:identifier>
</item>
<item>
<title>解决easyui combobox赋值boolean类型的值时，经常出现的内容显示的value而不是text的bug - 五毛程序员</title>
<link>http://www.cnblogs.com/rainmer/p/10223119.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rainmer/p/10223119.html</guid>
<description>&lt;p&gt;&lt;strong&gt;版本：EasyUI 1.7.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在用easyui写项目时，碰到一个combobox的奇葩bug。代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;select class=&quot;easyui-combobox&quot; id=&quot;edit_sex&quot; name=&quot;sex&quot; data-options=&quot;label:'性别:', width:300, required:true&quot;&amp;gt;
        &amp;lt;option value=&quot;true&quot;&amp;gt;男&amp;lt;/option&amp;gt;
        &amp;lt;option value=&quot;false&quot;&amp;gt;女&amp;lt;/option&amp;gt;
    &amp;lt;/select&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;赋值语句如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$('#edit_sex').combobox('setValue', row.sex);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;本来这是一个很简单的combobox赋值，但是当我真正赋值时却出现了问题，经常出现一个bug，就是赋值完，combobox显示的内容是true或者false，而不是男或女，而且重现率极高。&lt;br/&gt;我在测试了其他赋值情况后，发现是row.sex的值存在问题。该值是boolean类型，combobox赋值boolean类型的值的时候，会经常出现显示内容为value而不是text的bug。&lt;br/&gt;那么问题解决起来就简单了，把boolean类型改为字符串。修改后的赋值语句如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$('#edit_sex').combobox('setValue', String(row.sex));&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;暂时不得而知bug原因。如果有人知道麻烦解答，谢谢。&lt;/p&gt;
</description>
<pubDate>Fri, 04 Jan 2019 16:06:00 +0000</pubDate>
<dc:creator>五毛程序员</dc:creator>
<og:description>版本：EasyUI 1.7.0 在用easyui写项目时，碰到一个combobox的奇葩bug。代码如下： 赋值语句如下： 本来这是一个很简单的combobox赋值，但是当我真正赋值时却出现了问题，经</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/rainmer/p/10223119.html</dc:identifier>
</item>
<item>
<title>小议堆栈 - 许七安</title>
<link>http://www.cnblogs.com/xuazi-7an/p/10223107.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuazi-7an/p/10223107.html</guid>
<description>&lt;p&gt;  今天是第一篇博客嗷 以后主要分享 对于前端知识的自我认知，会经常分享我得人生感悟 突然感觉好高大上 哈哈哈&lt;/p&gt;
&lt;p&gt;今天主要是说对于堆栈的了解 因为是了解嘛 所以都是个人观点 如果有什么说的不对的 欢迎大家来找我指正 大家互相帮助才可以成长嘛 好了 言归正传，&lt;/p&gt;
&lt;p&gt;内存呢 主要分为堆和栈&lt;/p&gt;
&lt;p&gt;栈呢  主要是存一些变量 一些基本数据类型 &lt;/p&gt;
&lt;p&gt;堆呢 主要是存一些引用数据类型&lt;/p&gt;
&lt;p&gt;前端的堆栈和数据结构还有操作系统里的堆栈我觉得好像差不多 &lt;/p&gt;
&lt;p&gt;可能有区别 不过我还没有发现 现在主要是存的东西不一样吧&lt;/p&gt;
&lt;p&gt;然后记住栈存东西 就如同给弹夹压子弹 然后打出来 先压进去的子弹后打出来 这就是入栈和弹栈&lt;/p&gt;
&lt;p&gt;堆呢 存东西如同去食堂排队打饭 先排队的先打饭 后来的只能在队尾 后打饭 这就是先进先出&lt;/p&gt;
&lt;p&gt;对于堆栈记住这两个例子 我觉得就差不多可以记住它们的区别和特点啦&lt;/p&gt;
</description>
<pubDate>Fri, 04 Jan 2019 15:59:00 +0000</pubDate>
<dc:creator>许七安</dc:creator>
<og:description>今天是第一篇博客嗷 以后主要分享 对于前端知识的自我认知，会经常分享我得人生感悟 突然感觉好高大上 哈哈哈 今天主要是说对于堆栈的了解 因为是了解嘛 所以都是个人观点 如果有什么说的不对的 欢迎大家来</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuazi-7an/p/10223107.html</dc:identifier>
</item>
<item>
<title>Spring 笔记 -06- 从 MySQL 建库到 登录验证数据库信息（maven） - 肖朋伟</title>
<link>http://www.cnblogs.com/xpwi/p/10223054.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xpwi/p/10223054.html</guid>
<description>&lt;h3 id=&quot;spring-笔记--06--从-mysql-建库到-登录验证数据库信息maven&quot;&gt;Spring 笔记 -06- 从 MySQL 建库到 登录验证数据库信息（maven）&lt;/h3&gt;
&lt;p&gt;本篇和 Spring 没有什么关系，只是学习 Spring，必备一些知识，所以放在这里了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本篇内容：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）MySQL 命令行，建立用户信息数据库，密码用 md5 加密&lt;br/&gt;（2）jdbc 链接 MySQL 8.0&lt;br/&gt;（3）Maven 管理 servlet，jsp 依赖&lt;br/&gt;（4）单元测试&lt;br/&gt;（5）难点在 DBUtils.java 文件！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;动态截图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104230953722.gif&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;一建立用户信息-mysql-数据库&quot;&gt;一、建立用户信息 MySQL 数据库&lt;/h3&gt;
&lt;p&gt;（建议名称一致）&lt;/p&gt;
&lt;p&gt;（1）安装 MySQL 请百度或参考：&lt;a href=&quot;https://blog.csdn.net/qq_40147863/article/details/85685987&quot;&gt;MySQL 安装 + 入门大全 + 常用命令合集&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（2）打开 cmd ，登录 mysql 的 root 用户，创建 studb 数据库，创建表 tb_user ：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104222913608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTQ3ODYz,size_16,color_FFFFFF,t_70&quot; width=&quot;90%&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）显示表结构，插入 3 条用户数据：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104223120912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTQ3ODYz,size_16,color_FFFFFF,t_70&quot; width=&quot;90%&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（4）数据库 studb，表 tb_user 创建好了。&lt;/p&gt;
&lt;h3 id=&quot;二创建-maven-web-项目配置&quot;&gt;二、创建 Maven Web 项目，配置&lt;/h3&gt;
&lt;p&gt;（1）创建项目和修改目录结构，因为常用，所以写在了单独的一篇文章，请查看：&lt;a href=&quot;https://blog.csdn.net/qq_40147863/article/details/85771619&quot;&gt;Spring 笔记 -05- 创建 Maven Web 项目 + Tomcat 及目录结构配置&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;（2）上面一篇文章，全部需要！&lt;/p&gt;
&lt;p&gt;（3）配置 Maven 的配置文件 pom.xml 文件，位置在下面有提示：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;&amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;4.11&amp;lt;/version&amp;gt;
      &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;4.0.1&amp;lt;/version&amp;gt;
      &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;

    &amp;lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;javax.servlet.jsp&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;javax.servlet.jsp-api&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;2.3.3&amp;lt;/version&amp;gt;
      &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;

    &amp;lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;8.0.13&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;


  &amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104223948172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTQ3ODYz,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（4）点击自动导入：&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104224058632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTQ3ODYz,size_16,color_FFFFFF,t_70&quot; width=&quot;60%&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（5）创建如下目录及文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/201901042244008.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTQ3ODYz,size_16,color_FFFFFF,&quot; width=&quot;60%&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（6）下面需要先做一件事，就是在 js 目录中，引入 Bootstrap3，&lt;br/&gt;注意：只能是 Bootstrap3 版本：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;安装 Node.js ，因为要使用 npm&lt;/li&gt;
&lt;li&gt;在项目中 js 目录，右键 Open in Explorer 可以打开该目录，并复制&lt;/li&gt;
&lt;li&gt;在 cmd 进入项目的 js 目录&lt;/li&gt;
&lt;li&gt;使用命令：&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;npm install bootstrap3&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;三具体文件编码&quot;&gt;三、具体文件编码：&lt;/h3&gt;
&lt;p&gt;（1）index.jsp 文件，用于登录成功时跳转：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;
&amp;lt;%--
    输出 Hello World，当前时间，列表
    列表内容为 com.list.StuList 中的内容
--%&amp;gt;

&amp;lt;%@ page import=&quot;java.util.Date&quot; pageEncoding=&quot;UTF-8&quot; %&amp;gt;

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h2&amp;gt;登陆成功！&amp;lt;/h2&amp;gt;
当前时间为：&amp;lt;%=new Date().toLocaleString()%&amp;gt;
&amp;lt;hr&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）failed.jsp 文件，用于登录失败时跳转：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;&amp;lt;%--
    登录失败！
--%&amp;gt;

&amp;lt;%@ page import=&quot;java.util.Date&quot; pageEncoding=&quot;UTF-8&quot; %&amp;gt;

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h2&amp;gt;登陆失败！&amp;lt;/h2&amp;gt;
当前时间为：&amp;lt;%=new Date().toLocaleString()%&amp;gt;
&amp;lt;hr&amp;gt;

&amp;lt;br&amp;gt;
&amp;lt;a href=&quot;login.html&quot; class=&quot;btn btn-default&quot;&amp;gt;返回登录&amp;lt;/a&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）login.html 文件，登录的前端界面：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;用户登录&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;js/node_modules/bootstrap3/dist/css/bootstrap.min.css&quot;&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;js/node_modules/bootstrap3/dist/css/bootstrap-theme.css&quot;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;

&amp;lt;form name=&quot;loginForm&quot; action=&quot;Servlet&quot; method=&quot;post&quot;&amp;gt;
    &amp;lt;div class=&quot;center-block&quot; style=&quot;width: 45%;height: 350px&quot;&amp;gt;
        &amp;lt;div class=&quot;panel panel-primary&quot;&amp;gt;
            &amp;lt;div class=&quot;panel-heading&quot;&amp;gt;
                &amp;lt;span class=&quot;glyphicon glyphicon-apple&quot;&amp;gt;&amp;lt;/span&amp;gt;用户登录

            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;panel-body&quot;&amp;gt;
                &amp;lt;div class=&quot;text-success&quot; align=&quot;center&quot;&amp;gt;
                    &amp;lt;h3&amp;gt;欢迎使用资源统一管理系统&amp;lt;/h3&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div class=&quot;input-group&quot;&amp;gt;
                    &amp;lt;label class=&quot;input-group-addon&quot;&amp;gt;用户名&amp;lt;/label&amp;gt;
                    &amp;lt;input class=&quot;form-control&quot; type=&quot;text&quot; name=&quot;uname&quot; placeholder=&quot;请输入用户名&quot;&amp;gt;
                    &amp;lt;label class=&quot;input-group-addon text-warning&quot;&amp;gt;*&amp;lt;/label&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;br&amp;gt;
                &amp;lt;div class=&quot;input-group&quot;&amp;gt;
                    &amp;lt;label class=&quot;input-group-addon&quot;&amp;gt;密&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;码&amp;lt;/label&amp;gt;
                    &amp;lt;input class=&quot;form-control&quot; type=&quot;password&quot; name=&quot;upwd&quot; placeholder=&quot;请输入密码&quot;&amp;gt;
                    &amp;lt;label class=&quot;input-group-addon text-warning&quot;&amp;gt;*&amp;lt;/label&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;br&amp;gt;
                &amp;lt;div class=&quot;input-group&quot;&amp;gt;
                    &amp;lt;label class=&quot;input-group-addon&quot;&amp;gt;权&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;限&amp;lt;/label&amp;gt;
                    &amp;lt;select name=&quot;role&quot; class=&quot;form-control &quot;&amp;gt;
                        &amp;lt;option value=&quot;admin&quot;&amp;gt;管理员&amp;lt;/option&amp;gt;
                        &amp;lt;option value=&quot;teacher&quot;&amp;gt;经理&amp;lt;/option&amp;gt;
                        &amp;lt;option value=&quot;student&quot;&amp;gt;用户&amp;lt;/option&amp;gt;
                    &amp;lt;/select&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div align=&quot;center&quot;&amp;gt;


                &amp;lt;a href=&quot;javascript:loginForm.submit()&quot; class=&quot;btn btn-danger&quot;&amp;gt;&amp;lt;span
                        class=&quot;glyphicon glyphicon-log-in&quot;&amp;gt;&amp;lt;/span&amp;gt; 登录&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;
                &amp;lt;a href=&quot;javascript:loginForm.reset()&quot; class=&quot;btn btn-primary&quot;&amp;gt;&amp;lt;span
                        class=&quot;glyphicon glyphicon-remove&quot;&amp;gt;&amp;lt;/span&amp;gt; 重置&amp;lt;/a&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;br&amp;gt;
            &amp;lt;div class=&quot;panel-footer&quot;&amp;gt;
                &amp;lt;div align=&quot;center&quot;&amp;gt;
                    &amp;amp;copy;2018-2019 肖朋伟的 CSDN 博客 Copy Right

               &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果成功引入 Bootstrap3 ，打开服务器，打开本页面，会有下面界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104225706262.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（4）User.java 文件：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.pojo;

//用来存放用户登录时，输入输出的信息
public class User {
    private String uname;
    private String upwd;
    private String role;

    public String getUname() {
        return uname;
    }

    public void setUname(String uname) {
        this.uname = uname;
    }

    public String getUpwd() {
        return upwd;
    }

    public void setUpwd(String upwd) {
        this.upwd = upwd;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（5）UserDAO.java 文件：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.dao;

import com.dbutil.DBUtils;
import com.pojo.User;

public class UserDAO {

    //返回 0 或 1
    public int login(User user){
        DBUtils dbUtils = new DBUtils();

        //与数据库是否匹配，匹配为 1
        int temp = dbUtils.login(user);
        return temp;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（6）DBUtils.java 文件：&lt;br/&gt;！！！ 成败在与这个文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;自行更改数据库名&lt;/li&gt;
&lt;li&gt;自行更改表名（两个）&lt;/li&gt;
&lt;li&gt;自行更改 root 的密码&lt;/li&gt;
&lt;li&gt;检查服务是否启动&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.dbutil;

import com.pojo.User;

import java.sql.*;

public class DBUtils {
    Connection conn;
    //预处理
    PreparedStatement pstmt;
    //结果集
    ResultSet rs;

    public DBUtils(){
        try{
            Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);
            conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/数据库名?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;serverTimezone=UTC&quot;,&quot;root&quot;,&quot;密码&quot;);

        } catch (Exception e){
            e.printStackTrace();
        }
    }

    public int login(User user){
        try{
            pstmt=conn.prepareStatement(&quot;select * from 表名 where uname = ? and upwd = md5(?)&quot;);
            pstmt.setString(1, user.getUname());
            pstmt.setString(2, user.getUpwd());
            rs = pstmt.executeQuery();
            if (rs.next())
                return 1;
            else
                return 0;
        }catch (Exception e){
            e.printStackTrace();
        }

        return 0;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（7）Servlet.java 文件：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;
package com.loginServlet;

import com.pojo.User;
import com.service.UserService;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@WebServlet(name = &quot;Servlet&quot;,urlPatterns = &quot;/Servlet&quot;)
public class Servlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        System.out.println(&quot;doPost&quot;);
        request.setCharacterEncoding(&quot;utf-8&quot;);
        //获取 post 请求中的两个参数
        String uname = request.getParameter(&quot;uname&quot;);
        String upwd = request.getParameter(&quot;upwd&quot;);
        String role = request.getParameter(&quot;role&quot;);


        /*硬编码, 不从数据库获取信息，直接验证
        if (uname.equals(&quot;admin&quot;) &amp;amp;&amp;amp; upwd.equals(&quot;123456&quot;)) {
            response.sendRedirect(&quot;index.jsp&quot;);
        }else{
            response.sendRedirect(&quot;loginServlet.html&quot;);
        }*/

        //从服务获取值
        UserService userService = new UserService();

        User user = new User();
        user.setUname(uname);
        user.setUpwd(upwd);
        user.setRole(role);

        if (userService.login(user)) {
            response.sendRedirect(&quot;index.jsp&quot;);
        }else{
            response.sendRedirect(&quot;failed.jsp&quot;);
        }

    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        System.out.println(&quot;doGet&quot;);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（8）UserService.java 文件：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;
package com.service;

//服务层，给控制层提供服务

import com.dao.UserDAO;
import com.pojo.User;

public class UserService {

    UserDAO dao = new UserDAO();

    //参数，处理 User 对象，返回 True 或 False
    public boolean login(User user){
        int temp = dao.login(user);
        if (temp == 0)
            return false;
        else
            return true;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;四运行调试&quot;&gt;四、运行调试&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190104231032358.gif&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;五常见错误&quot;&gt;五、常见错误&lt;/h3&gt;
&lt;p&gt;（1）MySQL 8.0 版本的 jdbc 个数据版本不匹配&lt;/p&gt;
&lt;p&gt;（2）数据库服务没有运行&lt;/p&gt;
&lt;p&gt;（3）配置文件数据库信息没有自行更改&lt;/p&gt;
&lt;p&gt;（4）文件名自定义时，依赖失败&lt;/p&gt;
&lt;h3 id=&quot;更多文章链接&quot;&gt;更多文章链接：&lt;/h3&gt;
&lt;h3 id=&quot;支持博主&quot;&gt;支持博主&lt;/h3&gt;
&lt;p&gt;我正在参加 CSDN 2018 年博客之星评选，希望大家能支持我，&lt;br/&gt;我是【No. 001】号 肖朋伟 ，感谢大家宝贵的一票 ^_^/&lt;br/&gt;投票地址：https://bss.csdn.net/m/topic/blog_star2018/index&lt;/p&gt;
</description>
<pubDate>Fri, 04 Jan 2019 15:40:00 +0000</pubDate>
<dc:creator>肖朋伟</dc:creator>
<og:description>Spring 笔记 06 从 MySQL 建库到 登录验证数据库信息（maven） 本篇和 Spring 没有什么关系，只是学习 Spring，必备一些知识，所以放在这里了。 本篇内容： （1）MyS</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xpwi/p/10223054.html</dc:identifier>
</item>
<item>
<title>Django 系列博客（二） - Eurekaa</title>
<link>http://www.cnblogs.com/zuanzuan/p/10223016.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zuanzuan/p/10223016.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;今天博客的内容为使用 Django 完成第一个 Django 页面，并进行一些简单页面的搭建和转跳。&lt;/p&gt;
&lt;h2 id=&quot;命令行搭建-django-项目&quot;&gt;命令行搭建 Django 项目&lt;/h2&gt;
&lt;h3 id=&quot;创建纯净虚拟环境&quot;&gt;创建纯净虚拟环境&lt;/h3&gt;
&lt;p&gt;在上一篇博客中已经安装好了虚拟环境，所以用虚拟环境来安装指定版本的 Django。为了可以从头到尾的走一遍流程，我重新创建了一个虚拟环境。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuq46n1ycj313k0b00yf.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;激活虚拟环境并安装-django&quot;&gt;激活虚拟环境并安装 Django&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;首先进入虚拟环境路径下的 bin 目录&lt;/li&gt;
&lt;li&gt;使用命令激活虚拟环境&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fyuq6rh7h5j313g05oaci.jpg&quot;/&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;安装指定版本 Django&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;首先使用 pip3 list 命令查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuq7edhb1j313o05kwfx.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到都是创建虚拟环境时安装的依赖包，现在使用 pip 命令安装指定 django 版本，因为做项目需要稳定，所以安装的版本不是最新的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fyuq9n2jaej313m0e0n3c.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到新安装了2个包，pytz 是 python time zone 的缩写，是用来转换时区的包。&lt;/p&gt;
&lt;h3 id=&quot;创建项目&quot;&gt;创建项目&lt;/h3&gt;
&lt;p&gt;前往目标路径创建项目，在这里我的 django 项目都在我的家目录下面的 django_project里面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79ly1fyuqe1vnb2j313c04wgo1.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;进入要创建项目的路径下，使用下面的命令创建一个 django 项目。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;django-admin startproject project_name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuuczax3cj313q03ijt8.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到多了个文件夹。查看项目结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fyuudl83h1j313m08smz6.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建应用&quot;&gt;创建应用&lt;/h3&gt;
&lt;p&gt;进入项目根目录使用下面命令创建一个 app。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python3 manage.py startapp app_name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuuftcwznj313m0dm42j.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;创建成功并查看项目结构。&lt;/p&gt;
&lt;h3 id=&quot;启动项目&quot;&gt;启动项目&lt;/h3&gt;
&lt;p&gt;使用下面命令&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python3 manage.py runserver 127.0.0.1:8888&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;成功后会在本机上的8888端口开启 django 服务&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79ly1fyuuhy11ctj313q0dg43k.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;访问8888端口会显示下图页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fyuuis02hwj31b30u0qdz.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;好了，到现在你已经开启了第一个 django 服务，并且还是使用了命令行。&lt;/p&gt;
&lt;h2 id=&quot;pycharm-创建-django-项目&quot;&gt;pycharm 创建 Django 项目&lt;/h2&gt;
&lt;p&gt;其实会使用命令行创建项目那么使用 pycharm 应该是手到擒来，毕竟 pycharm 已经做了很多工作了。不过也有点麻烦。。。&lt;/p&gt;
&lt;h3 id=&quot;在虚拟环境下使用-pycharm-安装指定django-版本&quot;&gt;在虚拟环境下使用 pycharm 安装指定django 版本&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuupb78ktj31bi0u0wuz.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建项目-1&quot;&gt;创建项目&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuuqqcy7ij31740sowkx.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;项目目录结构及作用&quot;&gt;项目目录结构及作用&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;项目目录：包含项目最基本的一些配置
    -- __init__.py：模块的配置文件，将blog_proj文件夹变成了模块
    -- settings.py：配置总文件
    -- urls.py：url配置文件，django项目中的所有页面都需要对其配置url地址
    -- wsgi.py：(web server gateway interface)，服务器网关接口，python应用与web服务器直接通信的接口
templates：模板文件夹，存放html文件的(页面)，支持使用Django模板语言(DTL)，也可以使用第三方(jinja2)
manage.py：项目管理器，与项目交互的命令行工具集的入口，查看支持的所有命令python3 manage.py&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;settings.py结构&quot;&gt;settings.py结构&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import os
# 项目根目录
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 项目安全码
SECRET_KEY = 'guwba1u$18=&amp;amp;*8kf44_u&amp;amp;swqb@xlwgel7n$0rs=(+f10yvz)p0'

# 调试模式，上线项目要关闭debug模式，不然后台出现异常会直接抛给前台展现给用户看了
DEBUG = True

# 在上线项目中，规定只能以什么ip地址来访问django项目
# DEBUG = FALSE
# ALLOWED_HOSTS = ['localhost']
ALLOWED_HOSTS = []

# 项目自带的应用
# 我们创建了自己的应用就要将自定义应用添加到该配置
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# 中间件
# django自带的工具集
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 配置url配件文件的根文件，执行urls.py
ROOT_URLCONF = '项目目录.urls'

# 模板，一个个html文件
TEMPLATES = [
    {
        # 如果使用第三方，可以在这个地方修改模板引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# 服务器网关接口应用
WSGI_APPLICATION = '项目目录.wsgi.application'

# 数据库配置
# 要配置自定义数据库去下面链接去查询详细配置
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# 密码认证配置
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 国际化相关配置
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# 静态文件地址 (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_URL = '/static/'&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;创建项目应用&quot;&gt;创建项目应用&lt;/h3&gt;
&lt;p&gt;使用 pycharm 自带的命令行工具来创建应用&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fyuuvtcnljj31b30u0atp.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;应用创建完后将应用名添加到 settings.py文件中&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;INSTALLED_APPS = [
    'django.contrib.admin',
        ...
    'django.contrib.staticfiles',
    # 添加的自定义应用
    'app',
]&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;app目录结构&quot;&gt;app目录结构&lt;/h3&gt;
&lt;p&gt;创建后的 app 目录结构和使用命令行创建的一样，下面来看看具体都有什么作用&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;migrations：数据迁移(移植)模块，内容都是由Django自动生成
    -- __init__.py
__init__.py
admin.py：应用的后台管理系统配置
apps.py：django 1.9后，本应用的相关配置
models.py：数据模型模块，使用ORM框架，类似于MVC模式下的Model层
tests.py：自动化测试模块，可以写自动化测试脚本
views.py：执行相应的逻辑代码模块(相应什么，如何相应)，代码逻辑处理的主要地点，项目的大部分代码所在位置&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;页面响应&quot;&gt;页面响应&lt;/h2&gt;
&lt;h3 id=&quot;第一个响应&quot;&gt;第一个响应&lt;/h3&gt;
&lt;p&gt;通过配置路由和视图文件来响应第一次连接请求。&lt;/p&gt;
&lt;h4 id=&quot;配置路由&quot;&gt;配置路由&lt;/h4&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from django.conf.urls import url
from django.contrib import admin

# 导入应用视图
import app.views as app_view # 取别名

# 配置路由
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    # 为指定函数配置 url
    url(r'^index/&amp;amp;', app_view.index)
]&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;配置视图&quot;&gt;配置视图&lt;/h4&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 导入处理请求的 http 相应功能
from django.http import HttpResponse

# django中每一个请求都会设置相应函数来进行处理
# 函数的参数约定为 request
def index(request):
    return HttpResponse('index page!')&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;启动服务&quot;&gt;启动服务&lt;/h4&gt;
&lt;p&gt;启动服务后访问 localhost:8000/index/，可以看到响应为 index 函数里填写的响应，说明服务成功启动并且响应了自己想要的响应字符串。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fyuvics5u0j31b30u0thr.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;第一个模板页面&quot;&gt;第一个模板页面&lt;/h3&gt;
&lt;p&gt;项目目录下有个 templates 文件夹是专门用于存放页面资源的，比如index.html&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from django.shortcuts import render

def index(request):
    # 参数：请求对象 request，模板 html 文件，传给前台的资源
    return render(request, 'index.html')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;index.html 文件&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt; &amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;主页&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;这是主页&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置完成后，访问127.0.0.1:8000/index/后显示为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fyuxy92naoj31b30u0wno.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在 views.py文件中编写对应响应功能函数时，会自动出现模板文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fyuxzv8234j311k07awfu.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这是因为在 settings.py文件中已经把模板路径配置好了&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;TEMPLATES = [
    {
        # 如果使用第三方，可以在这个地方修改模板引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 模板页面默认路径：项目根路径下的templates文件夹
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        # 允许所有app均拥有自己的模板文件夹
        'APP_DIRS': True,
        ...
    },
]&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;第一个重定向&quot;&gt;第一个重定向&lt;/h3&gt;
&lt;p&gt;和上面的一样，首先在 views.py文件中配置响应函数&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from django.shortcuts import render, redirect
# / 路径渲染index.html页面
def home(request):
    return render(request, 'index.html')
# /index/ 路径重定向到 / 路径，达到渲染index.html页面
def index(request):
    return redirect('/')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;响应的路由配置为&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from django.conf.urls import url
from django.contrib import admin
# 导入应用视图
import app.views as app_view
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^index/$', app_view.index),
    url(r'^$', app_view.home),
]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fyuy56m6f8j31c00u0qd3.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;状态码显示为301说明发生了转跳，查看网络详细信息发现在index/中有个 location 字段，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fyuy91l4xfj30wf0u0gt0.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;该字段值为 &lt;strong&gt;/&lt;/strong&gt;，说明转跳到了根目录下。&lt;/p&gt;
&lt;h2 id=&quot;其他配置&quot;&gt;其他配置&lt;/h2&gt;
&lt;h3 id=&quot;url应用移植&quot;&gt;url应用移植&lt;/h3&gt;
&lt;h4 id=&quot;项目目录下的urls.py文件&quot;&gt;项目目录下的urls.py文件&lt;/h4&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 导入include功能，将url配置转移到指定应用内部的自身url配置文件
from django.conf.urls import url, include
from django.contrib import admin
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    # 将url配置操作交给app_test自身的urls.py来进行操作
    # app-test/为app_test应用的总路径
    url(r'^app-test/', include('app_test.urls')),
]&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;app_test下的urls.py文件&quot;&gt;app_test下的urls.py文件&lt;/h4&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from django.conf.urls import url
from . import views
urlpatterns = [
    # 1.不要直接留空，直接留空 http://localhost:8000/app-test/* 均可以访问
    # 2.如果要配置index，访问的地址为 http://localhost:8000/app-test/index
    # 3.配置方式：r'^index/$'，不要省略 / 符号
    # 4.正则是否以$标识结尾取决于该路径是否会有下一级路径
    url(r'^$', views.index),
]&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;多应用相同模板页面冲突&quot;&gt;多应用相同模板页面冲突&lt;/h3&gt;
&lt;p&gt;如果在两个应用中均有相同的模板页面假如为index.html&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 1.在应用templates文件夹下建立与应用同名的文件夹，eg：app_text下就建立app_text
# 2.将模板创建在与应用同名的模板文件夹下
# 3.修改指定应用下views.py处理请求的render模板指向
def index(request):
    # 模板指向：blog_app应用的templates下的blog_app文件夹中的index.html
    return render(request, 'app_text/index.html')&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;静态资源的配置&quot;&gt;静态资源的配置&lt;/h3&gt;
&lt;p&gt;假如页面需要一些静态资源，比如需要 css 样式、js 文件等，那么就需要在 settings 文件中配置好静态文件的路径。&lt;/p&gt;
&lt;h4 id=&quot;配置-settings.py文件&quot;&gt;配置 settings.py文件&lt;/h4&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 静态文件地址 (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_URL = '/static/'
# 在项目根目录下新建static文件夹，静态资源均放在该文件夹中
# 增加STATICFILES_DIRS配置
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
# 前端页面加载静态资源的路径：/static/... (...为具体在static文件夹中的路径)&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;拓展静态资源配置&quot;&gt;拓展静态资源配置&lt;/h4&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 如果要将项目根目录下source文件夹也作为静态资源路径
# STATICFILES_DIRS增加source配置
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'source')
]
# 前端页面加载静态资源路径依旧不变，Django会自动索引：/static/... (...为具体在source文件夹中的路径)&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;url正则&quot;&gt;url正则&lt;/h2&gt;
&lt;h3 id=&quot;原生字符串&quot;&gt;原生字符串&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# urls.py配置路由
url(r'test', app_view.test)

# views.py设置响应函数
def test(request):
    return HttpResponse('test')

# 问题：请求地址包含test均可以访问
# http://127.0.0.1:8000/test =&amp;gt; /test | /atest | /testa | /atesta | /test/a | /test/&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;开头&quot;&gt;开头&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# urls.py配置路由
url(r'^test', app_view.test)

# views.py设置响应函数
def test(request):
    return HttpResponse('test')

# 问题：请求地址以test开头均可以访问
# http://127.0.0.1:8000/test =&amp;gt; /test | /testa | /test/a | /test/&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;结尾&quot;&gt;结尾&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# urls.py配置路由
url(r'^test$', app_view.test)

# views.py设置响应函数
def test(request):
    return HttpResponse('test')

# 问题：只能一种方式访问
# http://127.0.0.1:8000/test =&amp;gt; /test
# 不能以 /test/ 访问
# http://127.0.0.1:8000/test/&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;优化结尾&quot;&gt;优化结尾&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# urls.py配置路由
url(r'^test/$', app_view.test)

# views.py设置响应函数
def test(request):
    return HttpResponse('test')

# /test 和 /test/ 均可以访问
# http://127.0.0.1:8000/test
# http://127.0.0.1:8000/test/

# 问题：不能作为应用总路由
# eg：app_test应用在项目urls.py
# url(r'^app-test/', include('app_test.urls')) 末尾不能加$，因为作为应用总目录，是有下一级，如果用$标识结尾了，就代表不能有下一级路由&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;地址捕获&quot;&gt;地址捕获&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# urls.py配置路由
url(r'^test/(\d+)/\d+/(\d+)/$', app_view.test)

# 对应请求路径
# http://127.0.0.1:8000/test/1/22/333/

# 对应响应函数
def test(request, arg1, arg2):
    # arg1: str 1
    # arg2: str 333
    return HttpResponse('test')&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 常规路由配置
# r'^index/$'
# r'^page/2/$'

# 应用路由配置
# r'^app/'

# 根路由配置
# r'^$'

# 路由配置均以 / 结尾
# ()中的字段会被请求响应函数捕获

# 限制响应函数捕获的变量名
# (?P&amp;lt;num&amp;gt;[0-9]+) 响应函数参数(requset, num)&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 04 Jan 2019 15:23:00 +0000</pubDate>
<dc:creator>Eurekaa</dc:creator>
<og:description>Django 系列博客（二） 前言 今天博客的内容为使用 Django 完成第一个 Django 页面，并进行一些简单页面的搭建和转跳。 命令行搭建 Django 项目 创建纯净虚拟环境 在上一篇博客</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zuanzuan/p/10223016.html</dc:identifier>
</item>
<item>
<title>接口隔离原则 - LieBrother</title>
<link>http://www.cnblogs.com/liebrother/p/10222756.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liebrother/p/10222756.html</guid>
<description>&lt;p&gt;个人博客原文：&lt;br/&gt;&lt;a href=&quot;http://www.liebrother.com/interface-segregation-principle&quot;&gt;接口隔离原则&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.liebrother.com/upload/c1c89a591a8141bfa4d0318cecfebadd_0015_01.jpg&quot; alt=&quot;景&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;设计模式六大原则之四：接口隔离原则。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;姓名&lt;/strong&gt; ：接口隔离原则&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;英文名&lt;/strong&gt; ：Interface Segregation Principle&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;价值观&lt;/strong&gt; ：宁缺毋滥&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;个人介绍&lt;/strong&gt; ：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Clients should not be forced to depend upon interfaces that they don't use.（客户端不应该依赖它不需要的接口。）&lt;/li&gt;
&lt;li&gt;The dependency of one class to another one should depend on the smallest possible interface.（类间的依赖关系应该建立在最小的接口上。）&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;也用一个故事来讲这 2 句干巴巴的定义。&lt;/p&gt;
&lt;p&gt;一小伙子跑到大城市的工厂打工，工作了一年半载，越来越觉得没劲，每天干那么多活，又领那么一点工资，和他老爸抱怨这段时间的困扰，老爸想着，家里有个小作坊，自己也一年不如一年了，要不就让儿子回老家管理这小作坊。小伙子熬不过这个年，就跑回老家跟着老爸打理小作坊。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.liebrother.com/upload/c635b2192ca04b6783392e49f5423347_0015_02.jpg&quot; alt=&quot;布娃娃&quot;/&gt;&lt;br/&gt;(来自Google Image)&lt;/p&gt;
&lt;p&gt;小作坊主要是做布娃娃的，如上图，工作在于打扮包装布娃娃，工序有给布娃娃扎辫子、穿衣服、包装入箱、打标签。整个完整的流程都是一个人做的。有很多个工人每天都在做这个事情。&lt;/p&gt;
&lt;p&gt;老爸向小伙子诉苦，感觉招工挺多人的，生产力还是提不上去。小伙子记着老爸的话，在工厂里面观察了几天，他发现每个工人都要做这 4 个打扮包装布娃娃的工序，有些工人扎辫子很快但穿衣服很慢，有些工人扎辫子很慢但穿衣服快，他用了笔记本记下来：李大姨扎辫子快，王大妈穿衣服快，就这样把每个人有效率的工作都记录下来。&lt;/p&gt;
&lt;p&gt;一天晚上吃饭，小伙子跟老爸说了自己观察到的现象，也把本子拿给老爸看，跟老爸商量：可不可以做个尝试，不要每个人负责打扮包装布娃娃全步骤，而是按工序分开，每个人只负责一个工序，每个工人只干一件事，更容易熟能生巧。老爸听着觉得有道理。&lt;/p&gt;
&lt;p&gt;第二天早上，就到小作坊里，召集了所有工人，按小伙子的笔记上面的名单分工，大家都做好各自负责的内容，像流水线一样，做好了就放到下个工序的地方，让下个工序的人去做。到了下班，小伙子清点了今天工作的成果，包装完成的娃娃比前一天多了 50% 。晚上小伙子跟老爸喝着百威吃起大肉庆祝一番。&lt;/p&gt;
&lt;p&gt;这个故事你看了可能想骂爹骂娘，跟上面的定义有啥毛关系？故事只是把大家带入这个场景，我们在工作中，着手开发之前不都得先理清好需求背景，这就是要讲接口隔离原则的背景，通过代码来给大家讲解一下如何用好接口隔离原则。&lt;/p&gt;
&lt;h2 id=&quot;父亲的运营模式&quot;&gt;父亲的运营模式&lt;/h2&gt;
&lt;p&gt;先看代码&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;interface Work {

    void hairBraiding();
    void getDressed();
    void packingIntoTheBox();
    void makeTag();

}

class WangMather implements Work{

    @Override
    public void hairBraiding() {
        System.out.println(&quot;王大妈给布娃娃扎辫子&quot;);
    }

    @Override
    public void getDressed() {
        System.out.println(&quot;王大妈给布娃娃穿衣服&quot;);
    }

    @Override
    public void packingIntoTheBox() {
        System.out.println(&quot;王大妈把布娃娃装入箱子&quot;);
    }

    @Override
    public void makeTag() {
        System.out.println(&quot;王大妈给箱子打标签&quot;);
    }
}

class LiAunt implements Work {

    @Override
    public void hairBraiding() {
        System.out.println(&quot;李大姨给布娃娃扎辫子&quot;);
    }

    @Override
    public void getDressed() {
        System.out.println(&quot;李大姨给布娃娃穿衣服&quot;);
    }

    @Override
    public void packingIntoTheBox() {
        System.out.println(&quot;李大姨把布娃娃装入箱子&quot;);
    }

    @Override
    public void makeTag() {
        System.out.println(&quot;李大姨给箱子打标签&quot;);
    }
}

// 测试代码
WangMather wangMather = new WangMather();
wangMather.hairBraiding();
wangMather.getDressed();
wangMather.packingIntoTheBox();
wangMather.makeTag();

LiAunt liAunt = new LiAunt();
liAunt.hairBraiding();
liAunt.getDressed();
liAunt.packingIntoTheBox();
liAunt.makeTag();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在父亲管理下的小作坊，是大家各自完成好一个布娃娃，工作互不交接，在这种运营模式下，我们把所有工作都合并在一个接口 Work 是没有问题的。有人可能要问，不是说接口隔离么？这里面 Work 接口的 4 个方法都可以分离开，它们都是各自的工作内容。稍等一下，我们现在是基于老父亲运营的模式下实现，如果小作坊一直都是这种模式运营，这段代码有问题么？其实没问题的，我们根据当时的业务考虑，在这种情况下，把 Work 抽成 4 个接口不是不可以，只是不现实，每个工人都去实现一模一样的 4 个接口在老父亲运营模式下是不切实际。&lt;/p&gt;
&lt;h2 id=&quot;儿子的运营模式&quot;&gt;儿子的运营模式&lt;/h2&gt;
&lt;p&gt;接下来介绍儿子的运营模式。儿子提倡的是每个工人职责分明，只负责一个事情，在这种情况下，如果还是用老父亲的 Work 接口会有什么问题呢？上面我们说了，李大姨扎辫子快，王大妈穿衣服快，所以李大姨被分配去给布娃娃扎辫子，王大妈被分配去给布娃娃穿衣服。我们沿用老父亲的 Work 接口实现，代码如下&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;class WangMather2 implements Work{

    @Override
    public void hairBraiding() {
    }

    @Override
    public void getDressed() {
        System.out.println(&quot;王大妈给布娃娃穿衣服&quot;);
    }

    @Override
    public void packingIntoTheBox() {
    }

    @Override
    public void makeTag() {
    }
}

class LiAunt2 implements Work {

    @Override
    public void hairBraiding() {
        System.out.println(&quot;李大姨给布娃娃扎辫子&quot;);
    }

    @Override
    public void getDressed() {
    }

    @Override
    public void packingIntoTheBox() {
    }

    @Override
    public void makeTag() {
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;看出问题来了么？李大姨仅仅参与扎辫子工作，王大妈参与了穿衣服工作，但是却都要依旧实现其他 3 个多余的接口。所以在儿子的运营模式下，老父亲的 Work 接口需要重新分配，以工序的角度分配，而不是以完成一个布娃娃的角度分配。总共有 4 个工序：扎辫子、穿衣服、包装入箱、打标签，我们需要定义 4 个接口，让员工去实现各自负责的工序接口。代码如下&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;
interface Hair {
    void hairBraiding();
}

interface Dress {
    void getDressed();
}

interface Box {
    void packingIntoTheBox();
}

interface Tag {
    void makeTag();
}

/**
 * 李大姨给布娃娃扎辫子快
 */
class LiAunt3 implements Hair {

    @Override
    public void hairBraiding() {
        System.out.println(&quot;李大姨给布娃娃扎辫子&quot;);
    }
}

/**
 * 王大妈给布娃娃穿衣服快
 */
class WangMather3 implements Dress{

    @Override
    public void getDressed() {
        System.out.println(&quot;王大妈给布娃娃穿衣服&quot;);
    }

}

/**
 * 陈大叔包装快
 */
class ChenUncle implements Box {

    @Override
    public void packingIntoTheBox() {
        System.out.println(&quot;陈大叔给布娃娃装箱&quot;);
    }
}

/**
 * 黄大姐贴标签快
 */
class HuangSister implements Tag {

    @Override
    public void makeTag() {
        System.out.println(&quot;黄大姐给箱子打标签&quot;);
    }
}

// 测试代码
LiAunt3 liAunt3 = new LiAunt3();
WangMather3 wangMather3 = new WangMather3();
ChenUncle chenUncle = new ChenUncle();
HuangSister huangSister = new HuangSister();
liAunt3.hairBraiding();
wangMather3.getDressed();
chenUncle.packingIntoTheBox();
huangSister.makeTag();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这段代码看起来就很清晰了，在儿子的运营模式下，大家都是只做一道工序，这样子实现就非常合理。看了这个过程，你理解了接口隔离原则了么？再看一看上面的定义：客户端不应该依赖它不需要的接口。闭上眼睛，静默 3 秒，感受一下。&lt;br/&gt;我们也可以回忆一下在工作中编写的代码，是不是有遵守接口隔离原则？在特定的场景下，如果很多类实现了同一个接口，并且都只实现了接口的极少部分方法，这时候很有可能就是接口隔离性不好，就要去分析能不能把方法拆分到不同的接口。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;接口隔离原则最最最重要一点就是要&lt;strong&gt;根据实际情况，具体业务具体分析&lt;/strong&gt;，不能犯了上面说到的错误：在老父亲的运营模式下，按儿子的工序划分接口去实现，那样子会得不偿失。&lt;/p&gt;
&lt;p&gt;参考资料：《大话设计模式》、《Java设计模式》、《设计模式之禅》、《研磨设计模式》、《Head First 设计模式》&lt;/p&gt;
&lt;p&gt;希望文章对您有所帮助，设计模式系列会持续更新，感兴趣的同学可以关注公众号，第一时间获取文章推送阅读，也可以一起交流，交个朋友。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/mp/homepage?__biz=MzIxMzgwMTAyMg==&amp;amp;hid=2&amp;amp;sn=c97b64288d92312f57d3c8298f8d8888&quot;&gt;公众号之设计模式系列文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.liebrother.com/upload/df81ac224abe46b38131a0e78f4dcf9c_wechat.jpg&quot; alt=&quot;公众号&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 04 Jan 2019 14:03:00 +0000</pubDate>
<dc:creator>LieBrother</dc:creator>
<og:description>设计模式六大原则之四：接口隔离原则。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liebrother/p/10222756.html</dc:identifier>
</item>
<item>
<title>Bayesian Personalized Ranking 算法解析及Python实现 - Bo_hemian</title>
<link>http://www.cnblogs.com/wkang/p/10217172.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wkang/p/10217172.html</guid>
<description>&lt;h2&gt;&lt;span class=&quot;fontstyle0&quot;&gt;1. Learning to Rank &lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;1.1 什么是排序算法&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt; 为什么google搜索 ”idiot“ 后，会出现特朗普的照片？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104204351380-1617963623.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;“我们已经爬取和存储了数十亿的网页拷贝在我们相应的索引位置。因&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;此，你输入一个关键字，我们将关键词与网页进行匹配，并根据&lt;span class=&quot;fontstyle1&quot;&gt;200&lt;span class=&quot;fontstyle0&quot;&gt;多个&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;因子对其进行排名，这些因子包括相关性、新鲜度、流行度、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;PageRank&lt;span class=&quot;fontstyle0&quot;&gt;值、查询和文档匹配的单词个数、网页&lt;span class=&quot;fontstyle2&quot;&gt;URL&lt;span class=&quot;fontstyle0&quot;&gt;链接地址长度以及&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;其他人对排序结果的满意度等。在此基础上，在任何给定的时间，我们&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;尝试为该查询&lt;span class=&quot;fontstyle3&quot;&gt;排序&lt;span class=&quot;fontstyle0&quot;&gt;并找到最佳结果。”&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　—— &lt;span class=&quot;fontstyle5&quot;&gt;GoogleCEO&lt;span class=&quot;fontstyle0&quot;&gt;： 桑达尔&lt;span class=&quot;fontstyle5&quot;&gt;·&lt;span class=&quot;fontstyle0&quot;&gt;皮查伊&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;1.2 排序算法的发展&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;1.2.1 早期排序技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;最早主要是利用词频、逆文档频率和文档长度这几个因子来人工拟合排序公式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;因为考虑因素不多，由人工进行公式拟合是完全可行的，此时机器学习并不能派上很大用场，因为机器学&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;习更适合采用很多特征来进行公式拟合。此外，对于有监督机器学习来说，首先需要大量的训练数据，在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;此基础上才可能自动学习排序模型，单靠人工标注大量的训练数据不太现实。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;1.2.2 基于机器学习的排序技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;对于搜索引擎来说，尽管无法靠人工来标注大量训练数据，但是用户点击记录是可以当做机器学习方法训练数据的一个替代品，比如用户发出一个查询，搜索引擎返回搜索结果，用户会点击其中某些网页，可以假设用户点击的网页是和用户查询更加相关的页面。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;1.3 Learning to Rank&lt;span class=&quot;fontstyle2&quot;&gt;（&lt;span class=&quot;fontstyle0&quot;&gt;LTR&lt;span class=&quot;fontstyle2&quot;&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;机器学习排序系统由&lt;span class=&quot;fontstyle1&quot;&gt;4&lt;span class=&quot;fontstyle0&quot;&gt;个步骤组成：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;人工标注训练数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;文档特征抽取&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;学习分类函数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;在实际搜索系统中采用机器学习模型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210509634-1574629234.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;2. PointWise Approach&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;定义：单文档方法的处理对象是单独的一篇文档，将文档转换为特征向量后，机器学习系统根据从训练数&lt;span class=&quot;fontstyle0&quot;&gt;据中学习到的分类或者回归函数对文档打分，打分结果即是搜索结果。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210525066-1733470522.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;Score&lt;span class=&quot;fontstyle1&quot;&gt;（&lt;span class=&quot;fontstyle0&quot;&gt;Q&lt;span class=&quot;fontstyle1&quot;&gt;， &lt;span class=&quot;fontstyle0&quot;&gt;D&lt;span class=&quot;fontstyle1&quot;&gt;）＝&lt;span class=&quot;fontstyle0&quot;&gt;a&lt;span class=&quot;fontstyle1&quot;&gt;×&lt;span class=&quot;fontstyle0&quot;&gt;CS&lt;span class=&quot;fontstyle1&quot;&gt;＋&lt;span class=&quot;fontstyle0&quot;&gt;b&lt;span class=&quot;fontstyle1&quot;&gt;×&lt;span class=&quot;fontstyle0&quot;&gt;PM&lt;span class=&quot;fontstyle1&quot;&gt;＋&lt;span class=&quot;fontstyle0&quot;&gt;c&lt;span class=&quot;fontstyle1&quot;&gt;×&lt;span class=&quot;fontstyle0&quot;&gt;PR&lt;span class=&quot;fontstyle1&quot;&gt;＋&lt;span class=&quot;fontstyle0&quot;&gt;d &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;fontstyle0&quot;&gt;对于某个新的查询&lt;span class=&quot;fontstyle1&quot;&gt;Q&lt;span class=&quot;fontstyle0&quot;&gt;和文档&lt;span class=&quot;fontstyle1&quot;&gt;D&lt;span class=&quot;fontstyle0&quot;&gt;，系统首先获得其文档&lt;span class=&quot;fontstyle1&quot;&gt;D&lt;span class=&quot;fontstyle0&quot;&gt;对应的&lt;span class=&quot;fontstyle1&quot;&gt;3&lt;span class=&quot;fontstyle0&quot;&gt;个特征的特征值，之后利用学习到的参数组&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;合计算两者得分，当得分大于设定的阈值，即可判断文档是相关文档，否则判断为不相关文档。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;3. PairWise Approach &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210542962-1564177288.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;对于左、右两张图，按照pointwise的思想，则认为这两条样本 i 和 j 都被点击，因此label都是1。但在右图包含更重要的信息 ：用户只点了红框内的酒店，而没有点黄框内的酒店（右图黄框内的酒店和左图点击红框的酒店一致）。这说明样本 j 的 label应该比样本 i 的label大（样本 j 排名比样本 i 更靠前），很显然，pointwise并没有利用到这个信息。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;对于搜索任务来说，系统接收到用户查询后，返回相关文档列表，所以&lt;strong&gt;&lt;span class=&quot;fontstyle1&quot;&gt;问题的关键是确定文档之间的先后&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;顺序关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;单文档方法（&lt;span class=&quot;fontstyle2&quot;&gt;PointWise Approach&lt;span class=&quot;fontstyle0&quot;&gt;）完全从单个文档的分类得分角度计算，没有考虑文档之间的顺序关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;文档对方法（&lt;span class=&quot;fontstyle2&quot;&gt;PairWise Approach&lt;span class=&quot;fontstyle0&quot;&gt;）则将重点转向了对文档顺序关系是否合理进行判断。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;之所以被称为文档对方法，是因为这种机器学习方法的训练过程和训练目标，是判断任意两个文档组成的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;文档对&lt;span class=&quot;fontstyle2&quot;&gt;&amp;lt;Doc1,Doc2&amp;gt;&lt;span class=&quot;fontstyle0&quot;&gt;是否满足顺序关系，即判断是否&lt;span class=&quot;fontstyle2&quot;&gt;Doc1&lt;span class=&quot;fontstyle0&quot;&gt;应该排在&lt;span class=&quot;fontstyle2&quot;&gt;Doc2&lt;span class=&quot;fontstyle0&quot;&gt;的前面。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210555191-905664833.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;根据转换后的训练实例，就可以利用机器学习方法进行分类函数的学习： &lt;span class=&quot;fontstyle2&quot;&gt;输入一个查询和文档对&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&amp;lt;Doc1,Doc2&amp;gt;&lt;span class=&quot;fontstyle2&quot;&gt;，机器学习排序能够判断这种顺序关系是否成立，如果成立，那么在搜索结果中&lt;span class=&quot;fontstyle3&quot;&gt;Doc1&lt;span class=&quot;fontstyle2&quot;&gt;应该&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;排在&lt;span class=&quot;fontstyle3&quot;&gt;Doc2&lt;span class=&quot;fontstyle2&quot;&gt;前面，否则&lt;span class=&quot;fontstyle3&quot;&gt;Doc2&lt;span class=&quot;fontstyle2&quot;&gt;应该排在&lt;span class=&quot;fontstyle3&quot;&gt;Doc1&lt;span class=&quot;fontstyle2&quot;&gt;前面。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;通过这种方式，就完成搜索结果的排序任务。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;文档对方法（&lt;span class=&quot;fontstyle4&quot;&gt;PairWise Approach&lt;span class=&quot;fontstyle0&quot;&gt;）只考虑了两个文档对的相对先后顺序，却没有考虑文档出现在搜&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;索列表中的位置。排在搜索结果前列的文档更为重要，如果前列文档出现判断错误，代价明显高于排&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;在后面的文档。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;不同的查询，其相关文档数量差异很大，所以转换为只有十几个对应的文档对，这对机器学习系统的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;效果评价造成困难。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;4. ListWise Approach&lt;/h2&gt;
&lt;p&gt;1. 单文档方法（PointWise Approach）将训练集里每一个文档当做一个训练实例。&lt;/p&gt;
&lt;p&gt;2. 文档对方法（PairWise Approach）将同一个查询的搜索结果里任意两个文档对作为一个训练实例。&lt;/p&gt;
&lt;p&gt;3. 文档列表方法（ListWise Approach）与上述两种表示方式不同，是将每一个查询对应的所有搜索结果列表整体作为一个训练实例，这也是为何称之为文档列表方法的原因。&lt;/p&gt;
&lt;p&gt;4. 文档列表方法根据K个训练实例（一个查询及其对应的所有搜索结果评分作为一个实例）训练得到最优评分函数F。对于一个新的用户查询，函数F对每一个文档打分，之后按照得分顺序由高到低排序，就是对应的搜索结果。&lt;/p&gt;
&lt;p&gt;对于某个评分函数 f 来说，对3个搜索结果文档的相关性打分，得到3个不同的相关度得分F(A)、 F(B)和F(C)，根据这3个得分就可以计算6种排列组合情况各自的概率值。不同的评分函数，其6种搜索结果排列组合的概率分布是不一样的。所以可以通过不同的评分函数分布与实际分布比较得出最优的那个评分函数作为排序模型。如何判断 h 和 f 与虚拟的最优评分函数 g 更接近？一般可以用两个分布概率之间的距离远近来度量这种相似性，比如 KL散度等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210657712-314872508.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;5. Bayesian Personalized Ranking&lt;/h2&gt;
&lt;h3&gt;5.1 BPR介绍&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;在推荐系统中，分为召回和排序两个阶段。&lt;/li&gt;
&lt;li&gt;贝叶斯个性化排序属于Pairwise Approach。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt; BPR算法的五个核心知识点：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;每个⽤户之间的偏好⾏为相互独⽴&lt;/li&gt;
&lt;li&gt;同⼀⽤户对不同物品的偏序，即排序关系相互独⽴&lt;/li&gt;
&lt;li&gt;表⽰⽤户u对 I 的偏好⼤于对 j 的偏好&lt;/li&gt;
&lt;li&gt;满⾜完整性，反对称性和传递性&lt;/li&gt;
&lt;li&gt;采用最⼤后验估计计算参数&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt; 其中，完整性，反对称性和传递性的定义如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202608306-680287063.png&quot; alt=&quot;&quot; width=&quot;417&quot; height=&quot;94&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;5.2 BPR参数&lt;/h3&gt;
&lt;p&gt;在推荐系统中，排序算法通常完成对候选商品的二次筛选，也叫Reranking。这里的BPR算法借鉴了召回步骤中协同过滤算法的思想： 矩阵分解 。&lt;/p&gt;
&lt;p&gt;对于用户u：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202740848-1382526463.png&quot; alt=&quot;&quot; width=&quot;215&quot; height=&quot;51&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于所有用户：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202756502-481843141.png&quot; alt=&quot;&quot; width=&quot;89&quot; height=&quot;23&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中用户矩阵W：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202835594-1108191237.png&quot; alt=&quot;&quot; width=&quot;62&quot; height=&quot;23&quot;/&gt;&lt;/p&gt;
&lt;p&gt;物品矩阵H：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202848488-1478527943.png&quot; alt=&quot;&quot; width=&quot;55&quot; height=&quot;23&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;5.3 BPR参数计算方法&lt;/h3&gt;
&lt;p&gt;BPR算法采用的是最大化后验概率来估计参数（关于什么是最大化后验概率，可移步我的另外一篇文章：&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/wkang/p/10069780.html&quot;&gt;似然与概率的异同&lt;/a&gt;），因此，这里用到了贝叶斯公式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202918420-40001536.png&quot; alt=&quot;&quot; width=&quot;678&quot; height=&quot;38&quot;/&gt;&lt;/p&gt;
&lt;p&gt;之前已经假设每个用户之间的偏好行为相互独立，同一用户对不同物品的偏序相互独立，所以：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104202947755-1962648441.png&quot; alt=&quot;&quot; width=&quot;608&quot; height=&quot;33&quot;/&gt;&lt;/p&gt;
&lt;p&gt;δ(b)函数返回1 如果条件b成立， 否则返回0。D为训练集， (u,i,j) 表示关系，即相对于j，用户u更喜欢 i 。&lt;/p&gt;
&lt;p&gt;由于&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203024927-1840597185.png&quot; alt=&quot;&quot; width=&quot;22&quot; height=&quot;16&quot;/&gt;满足完整性和反对称性，所以上式可简化为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203055795-2016118811.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;99&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中，δ()为sigmod函数，用户 u 相比于 j 更喜欢 i 通过借助用户 u 对 i 的喜欢程度与对 j 的喜欢程度的差进行度量。&lt;/p&gt;
&lt;p&gt;因此，&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203156114-479859867.png&quot; alt=&quot;&quot; width=&quot;47&quot; height=&quot;17&quot;/&gt; 可表示为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203211227-138387521.png&quot; alt=&quot;&quot; width=&quot;272&quot; height=&quot;24&quot;/&gt;&lt;/p&gt;
&lt;p&gt;目标是求解θ。 由于采用最大后验估计来学习参数，所以假设θ服从正态分布：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203229903-308818696.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;22&quot;/&gt;&lt;/p&gt;
&lt;p&gt;根据概率密度函数，求得：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203254426-780766770.png&quot; alt=&quot;&quot; width=&quot;133&quot; height=&quot;24&quot;/&gt;&lt;/p&gt;
&lt;p&gt;关于这个等式的推导，笔者尝试将概率分布带入到概率密度函数中，发现并不能推导出来，但是由于存在正比关系，所以可以近似等于。&lt;/p&gt;
&lt;p&gt;所以，最终的后验概率估计函数为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203305466-1799288265.png&quot; alt=&quot;&quot; width=&quot;729&quot; height=&quot;40&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过最大化这个函数，可以求出参数W和H。 &lt;/p&gt;
&lt;h2&gt;6. Bayesian Personalized Ranking算法实现&lt;/h2&gt;
&lt;p&gt;网上开源的BPR代码有很多，这里着重表达一下用户embedding矩阵和物品embedding矩阵，以及损失函数的构造。其中损失函数为最小化上一小节的最大后验概率函数。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210714147-2027175680.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104210717542-1438059980.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt; 7. 总结&lt;/h2&gt;
&lt;p&gt;回顾Bayesian Personalized Ranking 算法，有以下三点值得回味：&lt;/p&gt;
&lt;p&gt;1. θ的正态分布（先验）形式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1473228/201901/1473228-20190104203229903-308818696.png&quot; alt=&quot;&quot; width=&quot;139&quot; height=&quot;24&quot;/&gt;&lt;/p&gt;
&lt;p&gt;之所以这样设计，笔者以为有两点：一是方便取对数、二是能与正则化联系起来。&lt;/p&gt;
&lt;p&gt;2. 用户 u 相比于 j 更喜欢 i 通过借助用户 u 对 i 的喜欢程度与对 j 的喜欢程度的差进行度量。这当然是最直观的表示方法，当然也可以加以改进。&lt;/p&gt;
&lt;p&gt;3. 万物皆可embedding ！通过对用户以及物品分别构造embedding向量，从而完成用户对物品喜好程度的计算。&lt;/p&gt;

</description>
<pubDate>Fri, 04 Jan 2019 13:22:00 +0000</pubDate>
<dc:creator>Bo_hemian</dc:creator>
<og:description>1. Learning to Rank 1.1 什么是排序算法 为什么google搜索 ”idiot“ 后，会出现特朗普的照片？ “我们已经爬取和存储了数十亿的网页拷贝在我们相应的索引位置。因此，你输</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wkang/p/10217172.html</dc:identifier>
</item>
</channel>
</rss>