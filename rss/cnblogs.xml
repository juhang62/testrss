<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>强大的jupyter，python开发者的福音 - 雪山飞猪</title>
<link>http://www.cnblogs.com/chenqionghe/p/10163190.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenqionghe/p/10163190.html</guid>
<description>&lt;p&gt;jupyter是一种交互式计算和开发环境的笔记，ipython命令行比原生的python命令行更加友好和高效，还可以运行web版的界面，支持多语言，输出图形和excel等功能。&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
pip3 install --upgrade pip
pip3 install jupyter
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;进入命令界面&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223021645971-311186786.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;
&lt;h2&gt;ipython强大功能介绍&lt;/h2&gt;
&lt;h3&gt;1.tab键补全功能  &lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223022408003-698100439.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.快速查看文档，函数名+问号?可以查看文档，类似原生python的help函数&lt;/h3&gt;
&lt;h3&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223022440426-1879468023.png&quot; alt=&quot;&quot;/&gt;&lt;/h3&gt;
&lt;h3&gt;3.运行shell命令&lt;/h3&gt;
&lt;p&gt;感叹号!+shell直接运行shell命令，如!pwd&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223022523617-21279837.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;4.运行python文件&lt;/h3&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
%run python文件路径
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;5.强大的魔术方法 &lt;/h3&gt;
&lt;p&gt;例如，查看函数的运行时间&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
%time a = np.arange(1000)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223022917366-83606528.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;列出所有的魔术命令&lt;/p&gt;

&lt;p&gt;常用魔术方法介绍&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
%quickref 显示IPython的快速参考
%magic 显示所有魔术命令的详细文档
%debug 从最新的异常跟踪的底部进入交互式调试器
%hist 打印命令的输入（可选输出）历史
%pdb 在异常发生后自动进入调试器
%paste 执行剪贴板中的Python代码
%cpaste 打开一个特殊提示符以便手工粘贴待执行的Python代码
%reset 删除interactive命名空间中的全部变量/名称
%page OBJECT 通过分页器打印输出OBJECT
%run script.py 在IPython中执行一个Python脚本文件
%prun statement 通过cProfile执行statement，并打印分析器的输出结果
%time statement 报告statement的执行时间
%timeit statement 多次执行statement以计算系综平均执行时间。对那些执行时 间非常小的代码很有用
%who、%who_ls、%whos 显示interactive命名空间中定义的变量，信息级别/冗余度可变
%xdel variable 删除variable，并尝试清除其在IPython中的对象上的一切引用
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
jupyter notebook
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
ipython notebook
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行界面如下，如果8888端口没有占用，会自动打开http://localhost:8888/tree&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223023511657-1267401491.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;命令行有的网页版都有，命令行没有的网页版也有，例如&lt;/p&gt;
&lt;p&gt;多语言的代码显示，如markdown、Go、Java、Nginx、MySQL啥的&lt;/p&gt;
&lt;p&gt;支持终端，在线直接使用命令行&lt;/p&gt;
&lt;p&gt;支持直接操作文件&lt;/p&gt;
&lt;p&gt;渲染媒体文件，如图片、视频、音乐&lt;/p&gt;
&lt;h2&gt;网页版强大功能简单介绍&lt;/h2&gt;
&lt;h3&gt;1.渲染图片、音乐、视频&lt;/h3&gt;
&lt;p&gt;渲染图片示例&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
from IPython.display import Image
Image(filename=&quot;/Users/chenqionghe/Downloads/light-weight.jpg&quot;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223025027983-678348093.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.直接显示绘制的图形&lt;/h3&gt;
&lt;p&gt;直接在网页显示绘制的图形，命令行就达不到这样的效果了，爽！&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;72&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import numpy as np
import matplotlib.pyplot as plt
x = np.array([1,2,3,4,5,6,7,8])
y = np.array([3,5,7,6,2,6,10,15])
plt.plot(x,y,'r')# 折线 1 x 2 y 3 color
plt.plot(x,y,'g',lw=10)# 4 line w
# 折线 饼状 柱状
x = np.array([1,2,3,4,5,6,7,8])
y = np.array([13,25,17,36,21,16,10,15])
plt.bar(x,y,0.2,alpha=1,color='b')# 5 color 4 透明度 3 0.9
plt.show()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223025732419-816689057.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;3.载入代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
%load /Users/chenqionghe/test.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/662544/201812/662544-20181223031112868-1249259724.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;4.常用快捷键&lt;/h3&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
执行当前cell，并自动跳到下一个cell：Shift Enter
执行当前cell，执行后不自动调转到下一个cell：Ctrl-Enter
为一行或者多行添加/取消注释：Crtl /&lt;br/&gt;打开帮助，Ctrl+Shirt+P
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;界面这东西小伙伴们可以自己去点使用一下，很简单就上手了，绝对python开发者的福音，high起来吧~&lt;/p&gt;

</description>
<pubDate>Sat, 22 Dec 2018 19:43:00 +0000</pubDate>
<dc:creator>雪山飞猪</dc:creator>
<og:description>jupyter是一种交互式计算和开发环境的笔记，ipython命令行比原生的python命令行更加友好和高效，还可以运行web版的界面，支持多语言，输出图形和excel等功能。 一、安装 二、使用命令</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenqionghe/p/10163190.html</dc:identifier>
</item>
<item>
<title>SpringBoot 初体验 - 丁可乐</title>
<link>http://www.cnblogs.com/dwlovelife/p/10163091.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dwlovelife/p/10163091.html</guid>
<description>&lt;h2 id=&quot;spring-boot-简介&quot;&gt;1、Spring Boot 简介&lt;/h2&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;简化Spring应用开发的一个框架&lt;/p&gt;
&lt;p&gt;整个Spring技术栈的一个大整合&lt;/p&gt;
&lt;p&gt;J2EE开发的一站式解决方案&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;微服务&quot;&gt;2、微服务&lt;/h2&gt;
&lt;p&gt;2014, martin fowler&lt;/p&gt;
&lt;p&gt;微服务：架构服务 (服务微化)&lt;/p&gt;
&lt;p&gt;一个应用应该是一组小型服务；可以通过HTTP的方式进行互通&lt;/p&gt;
&lt;p&gt;单体应用：ALL IN ONE&lt;/p&gt;
&lt;p&gt;微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa&quot;&gt;详细参照微服务文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;3、环境准备&lt;/h2&gt;
&lt;p&gt;环境约束&lt;/p&gt;
&lt;p&gt;–jdk1.8：Spring Boot 推荐jdk1.7及以上；java version &quot;1.8.0_112&quot;&lt;/p&gt;
&lt;p&gt;–maven3.x：maven 3.3以上版本；Apache Maven 3.3.9&lt;/p&gt;
&lt;p&gt;-Eclipse：Kepler Service Release 1&lt;/p&gt;
&lt;p&gt;–SpringBoot 1.5.9.RELEASE：1.5.9；&lt;/p&gt;
&lt;p&gt;统一环境；&lt;/p&gt;
&lt;h3 id=&quot;maven设置&quot;&gt;1.Maven设置&lt;/h3&gt;
&lt;p&gt;(对于eclipse开普勒版本设置了1.8 可能生效不了 此处没多大影响 就是用不了1.8新特性而已)&lt;/p&gt;
&lt;p&gt;给maven的settings.xml配置的文件的profiles标签添加&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;profile&amp;gt;
  &amp;lt;id&amp;gt;jdk-1.8&amp;lt;/id&amp;gt;
  &amp;lt;activation&amp;gt;
    &amp;lt;activeByDefault&amp;gt;true&amp;lt;/activeByDefault&amp;gt;
    &amp;lt;jdk&amp;gt;1.8&amp;lt;/jdk&amp;gt;
  &amp;lt;/activation&amp;gt;
  &amp;lt;properties&amp;gt;
    &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt;
    &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt;
    &amp;lt;maven.compiler.compilerVersion&amp;gt;1.8&amp;lt;/maven.compiler.compilerVersion&amp;gt;
  &amp;lt;/properties&amp;gt;
&amp;lt;/profile&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;eclipse设置&quot;&gt;2.Eclipse设置&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1348730/201812/1348730-20181223004525875-1101529143.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;spring-boot-helloworld&quot;&gt;4、Spring Boot HelloWorld&lt;/h2&gt;
&lt;p&gt;一个功能:&lt;/p&gt;
&lt;p&gt;浏览器发送hello请求，服务器接受请求并处理，响应Hello World字符串；&lt;/p&gt;
&lt;h3 id=&quot;创建一个maven工程jar&quot;&gt;1、创建一个Maven工程；(jar)&lt;/h3&gt;
&lt;h3 id=&quot;导入spring-boot相关的依赖&quot;&gt;2、导入spring boot相关的依赖&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;  &amp;lt;parent&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.5.9.RELEASE&amp;lt;/version&amp;gt;
    &amp;lt;/parent&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;编写一个主程序启动spring-boot应用aa&quot;&gt;3、编写一个主程序；启动Spring Boot应用aa&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;
/**
 *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用
 */
@SpringBootApplication
public class HelloWorldMainApplication {

    public static void main(String[] args) {

        // Spring应用启动起来
        SpringApplication.run(HelloWorldMainApplication.class,args);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;编写相关的controllerservice&quot;&gt;4、编写相关的Controller、Service&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Controller
public class HelloController {

    @ResponseBody
    @RequestMapping(&quot;/hello&quot;)
    public String hello(){
        return &quot;Hello World!&quot;;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;运行主程序测试&quot;&gt;5、运行主程序测试&lt;/h3&gt;
&lt;h3 id=&quot;简化部署&quot;&gt;6、简化部署&lt;/h3&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt; &amp;lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&amp;gt;
    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将这个应用打成jar包，直接使用java -jar的命令进行执行；&lt;/p&gt;
&lt;h2 id=&quot;hello-world探究&quot;&gt;5、Hello World探究&lt;/h2&gt;
&lt;h3 id=&quot;pom文件&quot;&gt;1、POM文件&lt;/h3&gt;
&lt;h4 id=&quot;父项目&quot;&gt;1、父项目&lt;/h4&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;parent&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.5.9.RELEASE&amp;lt;/version&amp;gt;
&amp;lt;/parent&amp;gt;

他的父项目是
&amp;lt;parent&amp;gt;
  &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;spring-boot-dependencies&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.5.9.RELEASE&amp;lt;/version&amp;gt;
  &amp;lt;relativePath&amp;gt;../../spring-boot-dependencies&amp;lt;/relativePath&amp;gt;
&amp;lt;/parent&amp;gt;
他来真正管理Spring Boot应用里面的所有依赖版本；
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Spring Boot的版本仲裁中心；&lt;/p&gt;
&lt;p&gt;以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）&lt;/p&gt;
&lt;h4 id=&quot;启动器&quot;&gt;2、启动器&lt;/h4&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;spring-boot-starter&lt;/strong&gt;-==web==：&lt;/p&gt;
&lt;p&gt;​ spring-boot-starter：spring-boot场景启动器；帮我们导入了web模块正常运行所依赖的组件；&lt;/p&gt;
&lt;p&gt;Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器&lt;/p&gt;
&lt;h3 id=&quot;主程序类主入口类&quot;&gt;2、主程序类，主入口类&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用
 */
@SpringBootApplication
public class HelloWorldMainApplication {

    public static void main(String[] args) {

        // Spring应用启动起来
        SpringApplication.run(HelloWorldMainApplication.class,args);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;@&lt;strong&gt;SpringBootApplication&lt;/strong&gt;: Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
@SpringBootConfiguration
@EnableAutoConfiguration
@ComponentScan(excludeFilters = {
      @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),
      @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })
public @interface SpringBootApplication {&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;@&lt;strong&gt;SpringBootConfiguration&lt;/strong&gt;:Spring Boot的配置类；&lt;/p&gt;
&lt;p&gt;​ 标注在某个类上，表示这是一个Spring Boot的配置类；&lt;/p&gt;
&lt;p&gt;​ @&lt;strong&gt;Configuration&lt;/strong&gt;:配置类上来标注这个注解；&lt;/p&gt;
&lt;p&gt;​ 配置类 ----- 配置文件；配置类也是容器中的一个组件；@Component&lt;/p&gt;
&lt;p&gt;@&lt;strong&gt;EnableAutoConfiguration&lt;/strong&gt;：开启自动配置功能；&lt;/p&gt;
&lt;p&gt;​ 以前我们需要配置的东西，Spring Boot帮我们自动配置；@&lt;strong&gt;EnableAutoConfiguration&lt;/strong&gt;告诉SpringBoot开启自动配置功能；这样自动配置才能生效；&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@AutoConfigurationPackage
@Import(EnableAutoConfigurationImportSelector.class)
public @interface EnableAutoConfiguration {&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;​ @&lt;strong&gt;AutoConfigurationPackage&lt;/strong&gt;：自动配置包&lt;/p&gt;
&lt;p&gt;​ @&lt;strong&gt;Import&lt;/strong&gt;(AutoConfigurationPackages.Registrar.class)：&lt;/p&gt;
&lt;p&gt;​ Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；&lt;/p&gt;
&lt;p&gt;​ 将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；&lt;/p&gt;
&lt;p&gt;​ @&lt;strong&gt;Import&lt;/strong&gt;(EnableAutoConfigurationImportSelector.class)；&lt;/p&gt;
&lt;p&gt;​ 给容器中导入组件？&lt;/p&gt;
&lt;p&gt;​ &lt;strong&gt;EnableAutoConfigurationImportSelector&lt;/strong&gt;：导入哪些组件的选择器；&lt;/p&gt;
&lt;p&gt;​ 将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；&lt;/p&gt;
&lt;p&gt;​ 会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1348730/201812/1348730-20181223004610263-966031687.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；&lt;/p&gt;
&lt;p&gt;​ SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)；&lt;/p&gt;
&lt;p&gt;Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；&lt;/p&gt;
&lt;p&gt;J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
</description>
<pubDate>Sat, 22 Dec 2018 16:51:00 +0000</pubDate>
<dc:creator>丁可乐</dc:creator>
<og:description>1、Spring Boot 简介 简化Spring应用开发的一个框架 整个Spring技术栈的一个大整合 J2EE开发的一站式解决方案 2、微服务 2014, martin fowler 微服务：架构</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dwlovelife/p/10163091.html</dc:identifier>
</item>
<item>
<title> C++3D数学库设计详解 向量篇 - 林-兮</title>
<link>http://www.cnblogs.com/lv-anchoret/p/10163085.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lv-anchoret/p/10163085.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;// 注：本内容为作者原创，禁止在其他网站复述内容以及用于商业盈利，如需引用，请标明出处：&lt;a href=&quot;http://www.cnblogs.com/lv_anchoret/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/lv_anchoret/&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Preface&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　&lt;span&gt;　为了支持&lt;strong&gt;&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/lv-anchoret/p/10163205.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;光线追踪&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;的学习，决定写一个3D泛型数学库。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我采用的是windows平台以及C++Template技术&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我的库文件组织目录如下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;--lvgm&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　----test&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　------testVec.cpp&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　----type_vec&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　------lv_vec2.h&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　------lv_vec3.h&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　------type_vec.h&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　------vec_inout.h&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　----lv_precision.h&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　----lvgm.h&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Ready&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　这一篇，需要您了解C++Template的基本语法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　需要您了解向量的运算&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　该向量库文件解释：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　二维向量模板类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　三维向量模板类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　数据精度设定&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　本库提供的向量相关的默认输出形式设置文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　该向量库文件暂时没有四元组lv_vec4，我将在之后添加并单独写一篇进行陈述&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　该向量库能为您提供的功能：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　对向量内部数据方便自由地调取和设定&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的正负&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的加减乘除&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的自增自减&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的索引&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量判等&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的赋值以及复合运算赋值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的范数&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的范数平方&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量的自身单位化&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　返回该向量的高精度单位化向量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　&lt;/span&gt;&lt;span&gt;&lt;span&gt;向量的内积和外积运算（·、×）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　向量判空&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Design&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　由于二维和三维的设计相仿，故此处以三维为例进行描述&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;1&amp;gt;类型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;相关&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;本类中公开定义数据值类型为模板参T，范数精度类型为经外部宏设定的类型——precision， 默认为double&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;strong&gt;&lt;em&gt;&lt;span&gt;设计问题&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;：一开始我们可能想到在模板类里面利用宏控制数据存储精度，但你可能会遇到问题。例如：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
#    ifdef HIGHPRECISION        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;set the high precision &lt;/span&gt;
&lt;span&gt;using&lt;/span&gt; norm_t = &lt;span&gt;long&lt;/span&gt; &lt;span&gt;double&lt;/span&gt;&lt;span&gt;;

#    elif(defined LOWPRECISION)    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;set the low preciion&lt;/span&gt;
&lt;span&gt;using&lt;/span&gt; norm_t = &lt;span&gt;float&lt;/span&gt;&lt;span&gt;;

#    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;using&lt;/span&gt; norm_t = &lt;span&gt;double&lt;/span&gt;;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;default precision&lt;/span&gt;
&lt;span&gt;
#    endif                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;set precision&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;假设我现在有一个int的三维向量，我想要返回一个实数精度（norm_t）的单位化向量，于是我们写了一个成员函数vec3&amp;lt;norm_t&amp;gt; ret_unit()const,我们在主函数中需要创建一个vec3去接收ret_unit的返回值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么，我们两手一摊，无可奈何&lt;/span&gt;&lt;span&gt;你可能这样做：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    vec3&amp;lt;？？&amp;gt; normal = intV.ret_unit();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;你可能做不到，？？可能是vec3::norm_t 吗，显然不是，vec3是一个模板，只能先将vec3&amp;lt;T&amp;gt;中的T特化。突然觉得，模板类中公开公布了精度类型norm_t，但是却用不上？？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;&lt;em&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;综合考量到其他类可能也需要精度设定，所以干脆把这设置部分代码单独出来，然后将norm_t 改名为precision，于是问题就解决了&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;模板类中只需要提前预处理precision文件即可进行如下简单定义：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;using&lt;/span&gt; norm_t = precision;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;而主函数中也方便多了&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    vec3&amp;lt;precision&amp;gt; normal = intV.ret_unit();
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;&amp;lt;2&amp;gt;参数类型&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我看过glm数学库的源码有一类函数是这么实现的&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
template &amp;lt;typename T, precision P&amp;gt;&lt;span&gt;
template &lt;/span&gt;&amp;lt;typename U&amp;gt;&lt;span&gt;
    GLM_FUNC_QUALIFIER tvec3&lt;/span&gt;&amp;lt;T, P&amp;gt; &amp;amp; tvec3&amp;lt;T, P&amp;gt;::&lt;span&gt;operator&lt;/span&gt;+=(tvec3&amp;lt;U, P&amp;gt; &lt;span&gt;const&lt;/span&gt; &amp;amp;&lt;span&gt; v)
    {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;x += static_cast&amp;lt;T&amp;gt;&lt;span&gt;(v.x);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;y += static_cast&amp;lt;T&amp;gt;&lt;span&gt;(v.y);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;z += static_cast&amp;lt;T&amp;gt;&lt;span&gt;(v.z);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;其实，意思就是它允许+=另外一种类型的向量，然后我都强转到自身类型T之后进行运算&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;&lt;em&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;个人有一拙见，我是下面这样实现的，如果有什么漏洞请邮件或者评论留言。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我可以通过“重载”static_cast，或者进行一些操作使得vec3模板类能够实现类似内置整型之间的隐式自动类型转换&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么，我就不需要设定多个模板参在内部static_cast了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好，我们这么做就可以了：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
        template&amp;lt;typename E&amp;gt;&lt;span&gt;
        vec3(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;E&amp;gt;&amp;amp; vec);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;static_cast&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;我在定义构造函数的时候支持其他类型的vec3，哪里需要vec3值传递，我就调用它。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;3&amp;gt;对数据进行方便自由的操作&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;很多数学库貌似可以直接v.x  v.y ，很多C-struct设计，但作为C++党，用C++语言写代码，要严格遵守数据隐藏，在不失语言原则的情况下做到最方便。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;1）&lt;/span&gt;很多库支持 v.x = 3;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是我定义：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
        inline T&amp;amp; x()        { &lt;span&gt;return&lt;/span&gt; _x; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;但我还是重载了常量版本&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
        inline &lt;span&gt;const&lt;/span&gt; T&amp;amp; x()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt; _x; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;我希望对内部数据的修改的禁止令可以通过参数来实现，比如：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
template&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of / ,example 3 * 5 -&amp;gt; 15 , (1,2,3) * (2,3,4) -&amp;gt; (1/2,2/3,3/4)&lt;/span&gt;
&lt;span&gt;            assert(v2.isnull());
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;/&amp;lt;T, T&amp;gt;&lt;span&gt; (v1, v2);
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;所以，我仅仅去重载v.x()的const版本，而不去禁止x()可修改&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;2）&lt;/span&gt;GLSL中还支持这种骚操作：v.rgb = v.gbr; or v.rg = v1.rg&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我看了glm库，它暂时没有实现上述的操作支持&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;而GLSL库我还没研读&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以，凭着自身粗浅的技术，只能实现获取数据元组，而不能实现修改：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
inline vec2&amp;lt;T&amp;gt; xy() { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;{_x, _y}; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;4&amp;gt;运算符设计&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;按照C++operator普遍的设计原则，依旧是将单目和（复合）赋值运算符重载定义为成员函数，而将双目运算符定义为友元或者外部函数，在本库中采用STL设计原则，定义为命名空间内的类外函数，为了不破坏C++类的封装性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;++、--等单目运算符请参见我的另外一篇专门解说&lt;a href=&quot;https://www.cnblogs.com/lv-anchoret/p/8342842.html&quot; target=&quot;_blank&quot;&gt;运算符重载&lt;/a&gt;的文章&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;此处，我只陈述与vec3类相关的设计细节&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;关于加减法，从数学角度讲，一个向量加减一个标量是非法的，所以，本库中不支持向量和标量的加减法，对于将每一个元素加同一个值，请用偏移向量进行。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;而乘法和除法则支持与标量进行运算，因为一个标量乘以一个向量，只是把向量长度延伸了，在数学上也是合法的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;除此之外，考虑到两个vec3对象进行乘除法，如果this是int其他是另外一个是实数的话，我觉得还是进行精度提升的好，所以有专门的重载，且应用了C++11的自动追踪返回值类型技术&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;关于%以及%=，从数学角度讲，实数并不支持%运算，只有integer才有，而在图形运算过程中，大多是实数，尽管本库不全应用于图形计算，但是%合法运算在工程项目中占得也并不多，所以，如果需要，请自行将每一个元素进行%，库设计中不会因为极小部分的应用而使库变得臃肿&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;向量范数以及单位化（标准化）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一个类型设计点：利用用户设定精度类型norm_t定义范数的值类型以及返回的标准化向量模板参。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;关于向量单位化，我写了两个，一个是自身单位化，此时遵循本身类型进行，意思就是int进行单位化仍然里面的元素是int。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;另一个是返回单位化向量，这个时候是实数向量。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我想陈述的本库相关的设计原则基本完毕。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;TEST&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;测试效果：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('32100421-7acc-46cd-8185-695a7461d1d4')&quot; readability=&quot;85.5&quot;&gt;&lt;img id=&quot;code_img_closed_32100421-7acc-46cd-8185-695a7461d1d4&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_32100421-7acc-46cd-8185-695a7461d1d4&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('32100421-7acc-46cd-8185-695a7461d1d4',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_32100421-7acc-46cd-8185-695a7461d1d4&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;166&quot;&gt;
&lt;pre&gt;
△--****************** CONSTRUCTOR TEST ******************

 ******* ivec3 test *********&lt;span&gt;
there are two ivec3s &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; intV{ &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt; } and intV2{ &lt;span&gt;1&lt;/span&gt;, }, the value of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

[ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, -&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt; ]

[ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; ]

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec2 : _2ivec{&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;}, and a integer &lt;span&gt;7&lt;/span&gt; to construct a ivec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

the vec2 &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; front of the integer of &lt;span&gt;7&lt;/span&gt;: [ &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;&lt;span&gt; ]

the number of &lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; front of vec2: [ &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;&lt;span&gt; ]



 &lt;/span&gt;******* fvec3 test **********&lt;span&gt;

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a fvec3 &lt;span&gt;as&lt;/span&gt; fV{ &lt;span&gt;1&lt;/span&gt;.f,&lt;span&gt;2.1f&lt;/span&gt;, }, the value of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

[ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2.1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt; ]

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a fvec2 : t{&lt;span&gt;1.2f&lt;/span&gt;,}, and a value &lt;span&gt;3&lt;/span&gt; to construct a ivec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

f2to3 : [ &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt; ]

△&lt;/span&gt;--******************* FUNCTIONS TEST ********************&lt;span&gt;

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3{&lt;span&gt;1&lt;/span&gt;, -&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;}
the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; + or - of ivec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

&lt;/span&gt;+ : [ &lt;span&gt;1&lt;/span&gt;, -&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt; ]
&lt;/span&gt;- :[ -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;3&lt;/span&gt;&lt;span&gt; ]

&lt;/span&gt;-----------------------------------------------------------&lt;span&gt;

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3{&lt;span&gt;1&lt;/span&gt;, -&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;}

&lt;/span&gt;++ivec3:        the val of expression:[ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt; ]      the val of ivec3:[ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]

ivec3&lt;/span&gt;++:        the val of expression:[ &lt;span&gt;1&lt;/span&gt;, -&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt; ]      the val of ivec3:[ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; of -- &lt;span&gt;is&lt;/span&gt; the same &lt;span&gt;as&lt;/span&gt;&lt;span&gt; above

&lt;/span&gt;-----------------------------------------------------------&lt;span&gt;

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;[] of ivec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

the intV[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;] &lt;span&gt;is&lt;/span&gt; &lt;span&gt;4&lt;/span&gt;
-----------------------------------------------------------&lt;span&gt;

there are two ivec3s &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; intV{ &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt; } and intV2{ &lt;span&gt;1&lt;/span&gt;, }, the value of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt; not equ to intV2

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; = such that: intV2 = intV; the result &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:
intV2 &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; [ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]
intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt; equ to intV2


there are two ivec3s &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; intV{ &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt; } and intV2{ &lt;span&gt;1&lt;/span&gt;, }, the value of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; += such that: intV += intV2, the result of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;3&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; -= such that: intV -= intV2, the result of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]

the value of intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt; to become the original value


there are two ivec3s &lt;/span&gt;&lt;span&gt;as&lt;/span&gt; intV{ &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt; } and intV2{ &lt;span&gt;2&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt; }, the value of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; *= such that: intV *= intV2, the result of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;4&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;12&lt;/span&gt;&lt;span&gt; ]

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; /= such that: intV /= intV2, the result of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]

the value of intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt; to become the original value

&lt;/span&gt;-----------------------------------------------------------&lt;span&gt;

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; *= (number)such that: intV *= &lt;span&gt;5&lt;/span&gt;, the result of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;10&lt;/span&gt;, -&lt;span&gt;5&lt;/span&gt;, &lt;span&gt;20&lt;/span&gt;&lt;span&gt; ]

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; /= (number) such that: intV /= &lt;span&gt;5&lt;/span&gt;, the result of which &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;2&lt;/span&gt;, -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt; ]

the value of intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt; to become the original value

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt; + 、 -、 * 、/ (ivec3 or number) &lt;span&gt;is&lt;/span&gt; the same &lt;span&gt;as&lt;/span&gt;&lt;span&gt; above

&lt;/span&gt;-----------------------------------------------------------&lt;span&gt;

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;* between ivec3 and fvec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3: intV{&lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;}, there &lt;span&gt;is&lt;/span&gt; a fvec3: fV{&lt;span&gt;1.1f&lt;/span&gt;,&lt;span&gt;2.3f&lt;/span&gt;,&lt;span&gt;3.8f&lt;/span&gt;}, and the result of ivec3*fvec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

res &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;1.1&lt;/span&gt;, -&lt;span&gt;4.6&lt;/span&gt;, &lt;span&gt;11.4&lt;/span&gt;&lt;span&gt; ]

the result of &lt;/span&gt;* &lt;span&gt;is&lt;/span&gt;&lt;span&gt; up to the higher precision of both

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;* between ivec3 and &lt;span&gt;float&lt;/span&gt; &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3: intV{&lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;}, there &lt;span&gt;is&lt;/span&gt; a &lt;span&gt;float&lt;/span&gt;: &lt;span&gt;3.14&lt;/span&gt;, and the result of ivec3*&lt;span&gt;3.14&lt;/span&gt; &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

res2 &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;3&lt;/span&gt;, -&lt;span&gt;6&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;&lt;span&gt; ]

the type of ivec3 &lt;/span&gt;* &lt;span&gt;float&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; not fvec3 but ivec3, and the factor &lt;span&gt;is&lt;/span&gt; just a factor that shouldn&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t change the vec&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s precision
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; you need the result&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s type to become fvec3,you should use static_cast&amp;lt;fvec3&amp;gt;(intV) * float&lt;/span&gt;
&lt;span&gt;
res3 &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;3.14&lt;/span&gt;, -&lt;span&gt;6.28&lt;/span&gt;, &lt;span&gt;9.42&lt;/span&gt;&lt;span&gt; ]

the &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;/ between different type &lt;span&gt;is&lt;/span&gt; the same &lt;span&gt;as&lt;/span&gt;&lt;span&gt; above

&lt;/span&gt;-----------------------------------------------------------&lt;span&gt;

the normal() test &lt;/span&gt;&lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3: intV{&lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt;}

the Norm of intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: &lt;span&gt;3.74166&lt;/span&gt;&lt;span&gt;

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a fvec3: fV{ &lt;span&gt;1.1&lt;/span&gt;, &lt;span&gt;2.3&lt;/span&gt;, &lt;span&gt;3.5&lt;/span&gt;&lt;span&gt;}

the Norm of fV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: &lt;span&gt;4.57602&lt;/span&gt;

-----------------------------------------------------------&lt;span&gt;

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3: intV{&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;}

the unitization of intV &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0.8&lt;/span&gt;, &lt;span&gt;0.6&lt;/span&gt;&lt;span&gt; ]

&lt;/span&gt;-----------------------------------------------------------&lt;span&gt;

there &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a ivec3: intV{&lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;}, there &lt;span&gt;is&lt;/span&gt; a fvec3: fV{&lt;span&gt;1.1f&lt;/span&gt;,&lt;span&gt;2.3f&lt;/span&gt;,&lt;span&gt;3.8f&lt;/span&gt;}, and the result of ivec3·fvec3 &lt;span&gt;as&lt;/span&gt;&lt;span&gt; follows:

the dotval &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: &lt;span&gt;7.9&lt;/span&gt;&lt;span&gt;

crossVec &lt;/span&gt;&lt;span&gt;is&lt;/span&gt;: [ -&lt;span&gt;14.5&lt;/span&gt;, -&lt;span&gt;0.5&lt;/span&gt;, &lt;span&gt;4.5&lt;/span&gt; ]
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;test result&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7469dd5b-9aa3-40d2-a837-9b2aa73d4702')&quot; readability=&quot;76.5&quot;&gt;&lt;img id=&quot;code_img_closed_7469dd5b-9aa3-40d2-a837-9b2aa73d4702&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7469dd5b-9aa3-40d2-a837-9b2aa73d4702&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7469dd5b-9aa3-40d2-a837-9b2aa73d4702',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7469dd5b-9aa3-40d2-a837-9b2aa73d4702&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;148&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#define&lt;/span&gt; LOWPRECISION        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;开启低精度&lt;/span&gt;
&lt;span&gt;#define&lt;/span&gt; VEC3_OUT            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;开启vec3输出&lt;/span&gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;lvgm\lvgm.h&amp;gt;
&lt;span&gt;#define&lt;/span&gt; stds std::
&lt;span&gt;#define&lt;/span&gt; enter stds endl &amp;lt;&amp;lt; stds endl

&lt;span&gt;using&lt;/span&gt;&lt;span&gt; lvgm::ivec2;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; lvgm::ivec3;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; lvgm::fvec3;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; lvgm::fvec2;

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    ivec3 intV{ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt; }, intV2{ &lt;span&gt;1&lt;/span&gt;, }, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;null.self_unitization();&lt;/span&gt;
&lt;span&gt;    ivec3 b;
    ivec2 _2ivec{ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;&lt;span&gt; };
    fvec3 fV{ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;.f,&lt;span&gt;2.1f&lt;/span&gt;&lt;span&gt;, };
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;△--****************** CONSTRUCTOR TEST ******************&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ******* ivec3 test *********&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; stds endl;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there are two ivec3s as intV{ 1,-2,3 } and intV2{ 1, }, the value of which as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; intV2 &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec2 : _2ivec{1,2}, and a integer 7 to construct a ivec3 as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    ivec3 _2to3{ _2ivec, &lt;/span&gt;&lt;span&gt;7&lt;/span&gt;&lt;span&gt; };
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the vec2 in front of the integer of 7: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; _2to3 &amp;lt;&amp;lt;&lt;span&gt; enter;
    _2to3 &lt;/span&gt;= ivec3{ &lt;span&gt;7&lt;/span&gt;&lt;span&gt;, _2ivec };
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the number of 7 in front of vec2: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; _2to3 &amp;lt;&amp;lt; enter &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ******* fvec3 test **********&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a fvec3 as fV{ 1.f,2.1f, }, the value of which as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; fV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a fvec2 : t{1.2f,}, and a value 3 to construct a ivec3 as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    fvec2 t{ &lt;/span&gt;&lt;span&gt;1.2f&lt;/span&gt;&lt;span&gt; };
    fvec3 f2to3{ t,&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;f2to3 : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; f2to3 &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;△--******************* FUNCTIONS TEST ********************&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3{1, -2, 3}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; stds endl;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator + or - of ivec3 as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= +&lt;span&gt;intV;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+ : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; stds endl;
    intV &lt;/span&gt;= -&lt;span&gt;intV;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;- :&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= -&lt;span&gt;intV;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3{1, -2, 3}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    auto re &lt;/span&gt;= ++&lt;span&gt;intV;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;++ivec3:    the val of expression:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; re &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\tthe val of ivec3:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    &lt;/span&gt;--&lt;span&gt;intV;
    re &lt;/span&gt;= intV++&lt;span&gt;;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ivec3++:    the val of expression:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; re &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\tthe val of ivec3:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator of -- is the same as above&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator[] of ivec3 as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the intV[2] is &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV[&lt;span&gt;2&lt;/span&gt;] &amp;lt;&amp;lt;&lt;span&gt; stds endl;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;stds cout &amp;lt;&amp;lt; &quot;the intV[4] is &quot; &amp;lt;&amp;lt; intV[4] &amp;lt;&amp;lt; stds endl;&lt;/span&gt;
    stds cout &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there are two ivec3s as intV{ 1,-2,3 } and intV2{ 1, }, the value of which as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (intV != intV2)stds cout &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is not equ to intV2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator = such that: intV2 = intV; the result as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; stds endl;
    intV2 &lt;/span&gt;=&lt;span&gt; intV;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV2 is &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV2 &amp;lt;&amp;lt;&lt;span&gt; stds endl;
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (intV2 == intV)stds cout &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is equ to intV2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; stds endl &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there are two ivec3s as intV{ 1,-2,3 } and intV2{ 1, }, the value of which as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator += such that: intV += intV2, the result of which as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV2 &lt;/span&gt;= { &lt;span&gt;1&lt;/span&gt;&lt;span&gt;, };
    intV &lt;/span&gt;+=&lt;span&gt; intV2;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator -= such that: intV -= intV2, the result of which as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;-=&lt;span&gt; intV2;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the value of intV is to become the original value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; stds endl &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there are two ivec3s as intV{ 1,-2,3 } and intV2{ 2,1,3 }, the value of which as follows&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator *= such that: intV *= intV2, the result of which as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV2 &lt;/span&gt;= { &lt;span&gt;2&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    intV &lt;/span&gt;*=&lt;span&gt; intV2;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;/=&lt;span&gt; intV2;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator /= such that: intV /= intV2, the result of which as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the value of intV is to become the original value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator *= (number)such that: intV *= 5, the result of which as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;*= &lt;span&gt;5&lt;/span&gt;&lt;span&gt;;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator /= (number) such that: intV /= 5, the result of which as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;/= &lt;span&gt;5&lt;/span&gt;&lt;span&gt;;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the value of intV is to become the original value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator + 、 -、 * 、/ (ivec3 or number) is the same as above&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator* between ivec3 and fvec3 as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3: intV{1,-2,3}, there is a fvec3: fV{1.1f,2.3f,3.8f}, and the result of ivec3*fvec3 as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= { &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    fV &lt;/span&gt;= { &lt;span&gt;1.1f&lt;/span&gt;,&lt;span&gt;2.3f&lt;/span&gt;,&lt;span&gt;3.8f&lt;/span&gt;&lt;span&gt; };
    auto res &lt;/span&gt;= intV*&lt;span&gt;fV;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;res is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; res &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the result of * is up to the higher precision of both&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator* between ivec3 and float as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3: intV{1,-2,3}, there is a float: 3.14, and the result of ivec3*3.14 as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= { &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    auto res2 &lt;/span&gt;= intV*&lt;span&gt;3.14&lt;/span&gt;&lt;span&gt;;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;res2 is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; res2 &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the type of ivec3 * float is not fvec3 but ivec3, and the factor is just a factor that shouldn't change the vec's precision&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; stds endl
        &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;if you need the result's type to become fvec3,you should use static_cast&amp;lt;fvec3&amp;gt;(intV) * float&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= { &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    auto res3 &lt;/span&gt;= (static_cast&amp;lt;fvec3&amp;gt;(intV))*&lt;span&gt;3.14&lt;/span&gt;&lt;span&gt;;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;res3 is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; res3 &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the operator/ between different type is the same as above&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the normal() test as follows: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3: intV{1,-2,3}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the Norm of intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; intV.normal() &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a fvec3: fV{ 1.1, 2.3, 3.5}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the Norm of fV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; fV.normal() &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3: intV{0, 4, 3}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= { &lt;span&gt;0&lt;/span&gt;,&lt;span&gt;4&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    lvgm::vec3&lt;/span&gt;&amp;lt;lvgm::precision&amp;gt; normal =&lt;span&gt; intV.ret_unitization();
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the unitization of intV is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; normal &amp;lt;&amp;lt;&lt;span&gt; enter;
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----------------------------------------------------------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;

    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;there is a ivec3: intV{1,-2,3}, there is a fvec3: fV{1.1f,2.3f,3.8f}, and the result of ivec3·fvec3 as follows:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; enter;
    intV &lt;/span&gt;= { &lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;&lt;span&gt; };
    fV &lt;/span&gt;= { &lt;span&gt;1.1f&lt;/span&gt;,&lt;span&gt;2.3f&lt;/span&gt;,&lt;span&gt;3.8f&lt;/span&gt;&lt;span&gt; };
    lvgm::precision dotval &lt;/span&gt;=&lt;span&gt; lvgm::dot(intV, fV);
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the dotval is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; dotval &amp;lt;&amp;lt;&lt;span&gt; enter;
    auto crossVec &lt;/span&gt;=&lt;span&gt; cross(intV, fV);
    stds cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;crossVec is: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; crossVec &amp;lt;&amp;lt;&lt;span&gt; enter;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;test code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;库文件代码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('afc673b4-e46d-4b01-b58a-2cf0f9e31e75')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_afc673b4-e46d-4b01-b58a-2cf0f9e31e75&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_afc673b4-e46d-4b01-b58a-2cf0f9e31e75&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('afc673b4-e46d-4b01-b58a-2cf0f9e31e75',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_afc673b4-e46d-4b01-b58a-2cf0f9e31e75&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt; lvgm.h&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [ time ]        2018.12 ~ 2018.12
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        include all of the mymath's head files
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span&gt;
#ifndef LVGM_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; LVGM_H&lt;span&gt;

#include &lt;/span&gt;&amp;lt;lvgm\type_vec\type_vec.h&amp;gt;

&lt;span&gt;#endif&lt;/span&gt;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;LVGM_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;lvgm.h&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('72f807af-b0a0-4140-8bc2-f06f4f200d61')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_72f807af-b0a0-4140-8bc2-f06f4f200d61&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_72f807af-b0a0-4140-8bc2-f06f4f200d61&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('72f807af-b0a0-4140-8bc2-f06f4f200d61',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_72f807af-b0a0-4140-8bc2-f06f4f200d61&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt; precision.h&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [ time ]        2018.12 ~ 2018.12
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        control the precision of data
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span&gt;


#ifndef LV_PRECISION_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; LV_PRECISION_H


&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; lvgm
{

#    ifdef HIGHPRECISION            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;set the high precision &lt;/span&gt;
&lt;span&gt;using&lt;/span&gt; precision = &lt;span&gt;long&lt;/span&gt; &lt;span&gt;double&lt;/span&gt;&lt;span&gt;;

#    elif(defined LOWPRECISION)    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;set the low preciion&lt;/span&gt;
&lt;span&gt;using&lt;/span&gt; precision = &lt;span&gt;float&lt;/span&gt;&lt;span&gt;;

#    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;using&lt;/span&gt; precision = &lt;span&gt;double&lt;/span&gt;;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;default precision&lt;/span&gt;
&lt;span&gt;
#    endif                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;set precision&lt;/span&gt;
&lt;span&gt;

}    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;namespace lvgm&lt;/span&gt;

&lt;span&gt;#endif&lt;/span&gt;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;LV_PRECISION_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;precision.h&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f9d8ee1d-bb96-48fe-a3ad-4389634a9ad0')&quot; readability=&quot;70&quot;&gt;&lt;img id=&quot;code_img_closed_f9d8ee1d-bb96-48fe-a3ad-4389634a9ad0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f9d8ee1d-bb96-48fe-a3ad-4389634a9ad0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f9d8ee1d-bb96-48fe-a3ad-4389634a9ad0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f9d8ee1d-bb96-48fe-a3ad-4389634a9ad0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;135&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt; myVec2.h&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [ time ]        2018.12 ~ 2018.12
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        the definition of two-dimensional vector 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span&gt;

#ifndef LV_VEC2_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; LV_VEC2_H


&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; lvgm
{

template&lt;/span&gt;&amp;lt;typename T&amp;gt;
    &lt;span&gt;class&lt;/span&gt;&lt;span&gt; vec2
        {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; value_type =&lt;span&gt; T;
        
        &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; norm_t =&lt;span&gt; precision;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:

        template&lt;/span&gt;&amp;lt;typename E&amp;gt;&lt;span&gt;
        vec2(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;E&amp;gt;&amp;amp; vec);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;static_cast&lt;/span&gt;
&lt;span&gt;
        vec2(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T x = T(), &lt;span&gt;const&lt;/span&gt; T y =&lt;span&gt; T())noexcept;

        vec2(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt;);

        &lt;/span&gt;~&lt;span&gt;vec2() {  }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;inline get function&lt;/span&gt;
        inline T&amp;amp; x()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline T&lt;/span&gt;&amp;amp; y()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline T&lt;/span&gt;&amp;amp; u()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline T&lt;/span&gt;&amp;amp; v()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline T&lt;/span&gt;&amp;amp; r()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline T&lt;/span&gt;&amp;amp; g()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline T&lt;/span&gt;&amp;amp; s()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline T&lt;/span&gt;&amp;amp; t()    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline vec2 xy() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _y}; }

        inline vec2 yx() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _x}; }

        inline vec2 rg() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _y}; }

        inline vec2 gr() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _x}; }

        inline vec2 uv() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _y}; }

        inline vec2 vu() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _x}; }

        inline vec2 st() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _y}; }

        inline vec2 ts() { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _x}; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; x()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; y()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; u()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; v()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; r()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; g()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; s()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; t()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;inline operator function&lt;/span&gt;
        inline &lt;span&gt;const&lt;/span&gt; vec2&amp;amp; &lt;span&gt;operator&lt;/span&gt;+()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline vec2 &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;-()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;++&lt;span&gt;();

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;--&lt;span&gt;();

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2 &lt;span&gt;operator&lt;/span&gt;++(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;);

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2 &lt;span&gt;operator&lt;/span&gt;--(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;);

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; &lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; index)&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline T&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; index);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;+=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;-=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor);

        inline vec2&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor);

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;return the Norm of vec2&lt;/span&gt;
        inline norm_t normal()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline norm_t squar()&lt;/span&gt;&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;let self become to the unit vector of vec_type&lt;/span&gt;
        inline &lt;span&gt;void&lt;/span&gt;&lt;span&gt; self_unitization();

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;return a non-integer three-dimensional unit vector [the type is norm_t]&lt;/span&gt;
        inline vec2&amp;lt;precision&amp;gt; ret_unitization()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; isnull()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
        T _x, _y;

        };

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;constructor functions&lt;/span&gt;
&lt;span&gt;
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec2&lt;/span&gt;&amp;lt;T&amp;gt;::vec2(&lt;span&gt;const&lt;/span&gt; T x,&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T y)noexcept
            :_x(x)
            ,_y(y)
    {    }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        template&lt;/span&gt;&amp;lt;typename E&amp;gt;&lt;span&gt;
        vec2&lt;/span&gt;&amp;lt;T&amp;gt;::vec2(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;E&amp;gt;&amp;amp;&lt;span&gt; rhs)
            :_x(static_cast&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;(rhs.x()))
            ,_y(static_cast&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;(rhs.y()))
    {    }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec2&lt;/span&gt;&amp;lt;T&amp;gt;::vec2(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            :_x(rhs._x)
            ,_y(rhs._y)
    {    }

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Binary operator functions [non-mem]&lt;/span&gt;
&lt;span&gt;
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;+(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;(v1[&lt;span&gt;0&lt;/span&gt;] + v2[&lt;span&gt;1&lt;/span&gt;], v1[&lt;span&gt;1&lt;/span&gt;] + v2[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;-(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of - ,example  (5,4) - (2,2) -&amp;gt; (3,2)  &lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; v1 + (-&lt;span&gt;v2);
            }

    template&lt;/span&gt;&amp;lt;typename A, typename B&amp;gt;&lt;span&gt;
        inline auto &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;A&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;B&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of * ,example  (1.1, 2.1) * (2, 3) -&amp;gt; (2.2, 6.3)&lt;/span&gt;
            &lt;span&gt;using&lt;/span&gt; type = decltype(v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;type&amp;gt;((type)v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;], (type)v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of * ,example (1,2) * (2,3) -&amp;gt; (2,6)&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;(v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;], v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v, &lt;span&gt;const&lt;/span&gt;&lt;span&gt; E factor)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;(v.x() * factor, v.y() *&lt;span&gt; factor);
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; E factor, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;(v.x() * factor, v.y() *&lt;span&gt; factor);
            }

    template&lt;/span&gt;&amp;lt;typename A, typename B&amp;gt;&lt;span&gt;
        inline auto &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;A&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;B&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of / ,example  (1.1, 2.1) * (2, 3) -&amp;gt; (0.55, 0.7)&lt;/span&gt;
&lt;span&gt;            assert(v2.isnull());
            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; type = decltype(v1[&lt;span&gt;0&lt;/span&gt;] / v2[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;type&amp;gt;((type)v1[&lt;span&gt;0&lt;/span&gt;] / v2[&lt;span&gt;0&lt;/span&gt;], (type)v1[&lt;span&gt;1&lt;/span&gt;] / v2[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
            }
    
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of / ,example 3 * 5 -&amp;gt; 15 , (1,2) * (2,3) -&amp;gt; (1/2,2/3)&lt;/span&gt;
&lt;span&gt;            assert(v2.isnull());
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;/&amp;lt;T, T&amp;gt;&lt;span&gt; (v1, v2);
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v, &lt;span&gt;const&lt;/span&gt;&lt;span&gt; E factor)
            {
            assert(factor &lt;/span&gt;!= &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; factor != &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;(v.x() / factor, v.y() /&lt;span&gt; factor);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;==(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; v1.x() == v2.x() &amp;amp;&amp;amp; v1.y() ==&lt;span&gt; v2.y();
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;!=(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; !(v1 ==&lt;span&gt; v2);
            }

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Unary operator functions [mem]&lt;/span&gt;
&lt;span&gt;
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;+() &lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of + ,example 5 -&amp;gt; +5,  +(1,-2) -&amp;gt; (1,-2)&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;-() &lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of - ,example 5 -&amp;gt; -5,  -(1,-2) -&amp;gt; (-1,2)&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;(-_x, -&lt;span&gt;_y);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;++&lt;span&gt;()
            {
            &lt;/span&gt;++&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_x;
            &lt;/span&gt;++&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_y;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;++(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)
            {
            vec2&lt;/span&gt;&amp;lt;T&amp;gt;ori(*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;++*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ori;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;--&lt;span&gt;()
            {
            &lt;/span&gt;--&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_x;
            &lt;/span&gt;--&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_y;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;--(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)
            {
            vec2&lt;/span&gt;&amp;lt;T&amp;gt;ori(*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;--*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ori;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; index)&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;0&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;1&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the index is error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline T&lt;/span&gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; index)
            {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;0&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;1&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the index is error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            }

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; member functions&lt;/span&gt;
&lt;span&gt;
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;=(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;this&lt;/span&gt; != &amp;amp;&lt;span&gt;rhs)
                {
                _x &lt;/span&gt;=&lt;span&gt; rhs._x;
                _y &lt;/span&gt;=&lt;span&gt; rhs._y;
                }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;+=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x +=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y +=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;-=(&lt;span&gt;const&lt;/span&gt; vec2&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt; += (-&lt;span&gt;rhs);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            {
            assert(&lt;/span&gt;!&lt;span&gt;rhs.isnull());
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x /=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y /=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x *=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y *=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x *=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y *=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec2&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor)
            {
            assert(factor &lt;/span&gt;!= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x /=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y /=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }


    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline typename vec2&lt;/span&gt;&amp;lt;T&amp;gt;::norm_t vec2&amp;lt;T&amp;gt;::normal()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; sqrt(squar());
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline typename vec2&lt;/span&gt;&amp;lt;T&amp;gt;::norm_t vec2&amp;lt;T&amp;gt;::squar()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; _x*_x + _y*&lt;span&gt;_y;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;::self_unitization()
            {
            &lt;/span&gt;*&lt;span&gt;this&lt;/span&gt; /=&lt;span&gt; normal();
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec2&lt;/span&gt;&amp;lt;precision&amp;gt; vec2&amp;lt;T&amp;gt;::ret_unitization()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            norm_t div &lt;/span&gt;=&lt;span&gt; normal();
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec2&amp;lt;norm_t&amp;gt;{ (norm_t)&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x / div, (norm_t)&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y / div, (norm_t)&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z /&lt;span&gt; div };
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline auto dot(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;E&amp;gt;&amp;amp; v2) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;-&amp;gt; decltype(v1.x() * v2.x() + v1.y() * v2.y() + v1.z() * v2.z())&lt;/span&gt;
            {&lt;span&gt;//&lt;/span&gt;&lt;span&gt; x1 * x2 + y1 * y2&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; v1.x() * v2.x() + v1.y() * v2.y() + v1.z() *&lt;span&gt; v2.z();
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline auto cross(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt; v1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;E&amp;gt;&amp;amp;&lt;span&gt; v2)
            {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; v1 × v2&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;decltype(v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;2&lt;/span&gt;] - v1[&lt;span&gt;2&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;])&amp;gt;&lt;span&gt;
                (
                    v1[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;] - v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]
                );
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; vec2&amp;lt;T&amp;gt;::isnull()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt; == vec2&amp;lt;T&amp;gt;&lt;span&gt;();
            }

}    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;namespace lvgm&lt;/span&gt;


&lt;span&gt;#endif&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;LV_VEC2_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;lv_vec2.h&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('742c5938-4199-450d-acad-63bb512664dc')&quot; readability=&quot;103.5&quot;&gt;&lt;img id=&quot;code_img_closed_742c5938-4199-450d-acad-63bb512664dc&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_742c5938-4199-450d-acad-63bb512664dc&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('742c5938-4199-450d-acad-63bb512664dc',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_742c5938-4199-450d-acad-63bb512664dc&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;202&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt; myVec3.h&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [ time ]        2018.12 ~ 2018.12
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        the definition of Three-dimensional vector
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;
&lt;span&gt;
#ifndef LV_VEC3_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; LV_VEC3_H

&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; lvgm
{

template&lt;/span&gt;&amp;lt;typename T&amp;gt;
    &lt;span&gt;class&lt;/span&gt;&lt;span&gt; vec3
        {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; value_type =&lt;span&gt; T;

        &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; norm_t =&lt;span&gt; precision;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:

        template&lt;/span&gt;&amp;lt;typename E&amp;gt;&lt;span&gt;
        vec3(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;E&amp;gt;&amp;amp; vec);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;static_cast&lt;/span&gt;
&lt;span&gt;
        vec3(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T e1 = T(), &lt;span&gt;const&lt;/span&gt; T e2 = T(), &lt;span&gt;const&lt;/span&gt; T e3 =&lt;span&gt; T())noexcept;

        &lt;/span&gt;&lt;span&gt;explicit&lt;/span&gt; vec3(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v2, &lt;span&gt;const&lt;/span&gt; T e3 =&lt;span&gt; T())noexcept;

        &lt;/span&gt;&lt;span&gt;explicit&lt;/span&gt; vec3(&lt;span&gt;const&lt;/span&gt; T e1, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)noexcept;

        &lt;/span&gt;&lt;span&gt;explicit&lt;/span&gt; vec3(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt;);

        &lt;/span&gt;~&lt;span&gt;vec3() {  }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:

        inline T&lt;/span&gt;&amp;amp; x()        { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline T&lt;/span&gt;&amp;amp; y()        { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline T&lt;/span&gt;&amp;amp; z()        { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _z; }

        inline T&lt;/span&gt;&amp;amp; r()        { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline T&lt;/span&gt;&amp;amp; g()        { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline T&lt;/span&gt;&amp;amp; b()        { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _z; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; xy() { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _y}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; yx()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _x}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; xz()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _z}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; zx()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_z, _x}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; yz()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _z}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; zy()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_z, _y}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; rg()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _y}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; gr()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _x}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; rb()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_x, _z}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; br()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_z, _x}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; gb()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_y, _z}; }

        inline vec2&lt;/span&gt;&amp;lt;T&amp;gt; bg()    { &lt;span&gt;return&lt;/span&gt; vec2&amp;lt;T&amp;gt;&lt;span&gt;{_z, _y}; }

        inline vec3 rgb()    { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vec3{_x, _y, _z}; }

        inline vec3 rbg()    { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vec3{_x, _z, _y}; }
            
        inline vec3 gbr()    { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vec3{_y, _z, _x}; }

        inline vec3 grb()    { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vec3{_y, _x, _z}; }

        inline vec3 bgr()    { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vec3{_z, _y, _x}; }

        inline vec3 brg()    { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vec3{_z, _x, _y}; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; x()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; y()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; z()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _z; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; r()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; g()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y; }

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; b()&lt;span&gt;const&lt;/span&gt;    { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _z; }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;inline oprator function&lt;/span&gt;
        inline &lt;span&gt;const&lt;/span&gt; vec3&amp;amp; &lt;span&gt;operator&lt;/span&gt;+() &lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline vec3 &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;-()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;++&lt;span&gt;();

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;--&lt;span&gt;();

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3 &lt;span&gt;operator&lt;/span&gt;++(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;);

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3 &lt;span&gt;operator&lt;/span&gt;--(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;);

        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; &lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; index)&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline T&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; index);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;+=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;-=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor);

        inline vec3&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor);
        
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;return the Norm of vec3&lt;/span&gt;
        inline norm_t normal()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline norm_t squar()&lt;/span&gt;&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;let self become to the unit vector of vec_type&lt;/span&gt;
        inline &lt;span&gt;void&lt;/span&gt;&lt;span&gt; self_unitization();

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;return a non-integer three-dimensional unit vector [the type is norm_t]&lt;/span&gt;
        inline vec3&amp;lt;precision&amp;gt; ret_unitization()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; isnull()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
        T _x, _y, _z;

        };

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;constructor functions&lt;/span&gt;
&lt;span&gt;
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        template&lt;/span&gt;&amp;lt;typename E&amp;gt;&lt;span&gt;
        vec3&lt;/span&gt;&amp;lt;T&amp;gt;::vec3(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;E&amp;gt;&amp;amp;&lt;span&gt; vec)
            :_x(static_cast&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;(vec.x()))
            ,_y(static_cast&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;(vec.y()))
            ,_z(static_cast&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;(vec.z()))
        {    }
    
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec3&lt;/span&gt;&amp;lt;T&amp;gt;::vec3(&lt;span&gt;const&lt;/span&gt; T e1, &lt;span&gt;const&lt;/span&gt; T e2, &lt;span&gt;const&lt;/span&gt;&lt;span&gt; T e3)noexcept
            :_x{e1}
            ,_y{e2}
            ,_z{e3}
        {    }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec3&lt;/span&gt;&amp;lt;T&amp;gt;::vec3(&lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp; v, &lt;span&gt;const&lt;/span&gt;&lt;span&gt; T e3)noexcept
            :_x(v.x())
            ,_y(v.y())
            ,_z(e3)
        {    }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec3&lt;/span&gt;&amp;lt;T&amp;gt;::vec3(&lt;span&gt;const&lt;/span&gt; T e, &lt;span&gt;const&lt;/span&gt; vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)noexcept
            :_x(e)
            ,_y(v.x())
            ,_z(v.y())
        {    }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec3&lt;/span&gt;&amp;lt;T&amp;gt;::vec3(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            :_x{rhs._x}
            ,_y{rhs._y}
            ,_z{rhs._z}
        {    }

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Binary operator functions [non-mem]&lt;/span&gt;
    template&amp;lt;typename T&amp;gt;&lt;span&gt;
        vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;+(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of + ,example  (5,4,3) + (2,-2,1) -&amp;gt; (7,2,4)  &lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec3&amp;lt;T&amp;gt;(v1[&lt;span&gt;0&lt;/span&gt;] + v2[&lt;span&gt;0&lt;/span&gt;], v1[&lt;span&gt;1&lt;/span&gt;] + v2[&lt;span&gt;1&lt;/span&gt;], v1[&lt;span&gt;2&lt;/span&gt;] + v2[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;-(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of - ,example  (5,4,3) - (2,2,1) -&amp;gt; (3,2,2)  &lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; v1 + (-&lt;span&gt;v2);
            }

    template&lt;/span&gt;&amp;lt;typename A, typename B&amp;gt;&lt;span&gt;
        inline auto &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;A&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;B&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of * ,example  (1.1, 2.1, 3.1) * (2, 3, 4) -&amp;gt; (2.2, 6.3, 12.4)&lt;/span&gt;
            &lt;span&gt;using&lt;/span&gt; type = decltype(v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec3&amp;lt;type&amp;gt;((type)v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;], (type)v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;], (type)v1[&lt;span&gt;2&lt;/span&gt;] * v2[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of * ,example 3 * 5 -&amp;gt; 15 , (1,2,3) * (2,3,4) -&amp;gt; (2,6,12)&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec3&amp;lt;T&amp;gt;(v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;], v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;], v1[&lt;span&gt;2&lt;/span&gt;] * v2[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v, &lt;span&gt;const&lt;/span&gt;&lt;span&gt; E factor)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec3&amp;lt;T&amp;gt;(v.x() * factor, v.y() * factor, v.z() *&lt;span&gt; factor);
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;*(&lt;span&gt;const&lt;/span&gt; E factor, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec3&amp;lt;T&amp;gt;(v.x() * factor, v.y() * factor, v.z() *&lt;span&gt; factor);
            }

    template&lt;/span&gt;&amp;lt;typename A, typename B&amp;gt;&lt;span&gt;
        inline auto &lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;A&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;B&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of / ,example  (1.1, 2.1, 3.2) * (2, 3, 4) -&amp;gt; (0.55, 0.7, 0.8)&lt;/span&gt;
&lt;span&gt;            assert(v2.isnull());
            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; type = decltype(v1[&lt;span&gt;0&lt;/span&gt;] / v2[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec3&amp;lt;type&amp;gt;((type)v1[&lt;span&gt;0&lt;/span&gt;] / v2[&lt;span&gt;0&lt;/span&gt;], (type)v1[&lt;span&gt;1&lt;/span&gt;] / v2[&lt;span&gt;1&lt;/span&gt;], (type)v1[&lt;span&gt;2&lt;/span&gt;] / v2[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);
            }
        
    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of / ,example 3 * 5 -&amp;gt; 15 , (1,2,3) * (2,3,4) -&amp;gt; (1/2,2/3,3/4)&lt;/span&gt;
&lt;span&gt;            assert(v2.isnull());
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;/&amp;lt;T, T&amp;gt;&lt;span&gt; (v1, v2);
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span&gt;operator&lt;/span&gt;/(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v, &lt;span&gt;const&lt;/span&gt;&lt;span&gt; E factor)
            {
            assert(factor &lt;/span&gt;!= &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; factor != &lt;span&gt;0&lt;/span&gt;&lt;span&gt;.);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec3&amp;lt;T&amp;gt;(v.x() / factor, v.y() / factor, v.z() /&lt;span&gt; factor);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;==(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; v1.x() == v2.x() &amp;amp;&amp;amp; v1.y() == v2.y() &amp;amp;&amp;amp; v1.z() ==&lt;span&gt; v2.z();
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;!=(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v2)
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; !(v1 ==&lt;span&gt; v2);
            }

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Unary operator functions [mem]&lt;/span&gt;
    template&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;+() &lt;span&gt;const&lt;/span&gt;&lt;span&gt; 
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of + ,example 5 -&amp;gt; +5,  +(1,-2,3) -&amp;gt; (1,-2,3)&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;; 
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;-() &lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;the operator of - ,example 5 -&amp;gt; -5,  -(1,-2,3) -&amp;gt; (-1,2,-3)&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec3&amp;lt;T&amp;gt;(-_x, -_y, -&lt;span&gt;_z);
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;++&lt;span&gt;()
            {
            &lt;/span&gt;++&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_x;
            &lt;/span&gt;++&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_y;
            &lt;/span&gt;++&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_z;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;++(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)
            {
            vec3&lt;/span&gt;&amp;lt;T&amp;gt;ori(*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;++*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ori;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;--&lt;span&gt;()
            {
            &lt;/span&gt;--&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_x;
            &lt;/span&gt;--&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_y;
            &lt;/span&gt;--&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;_z;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;--(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)
            {
            vec3&lt;/span&gt;&amp;lt;T&amp;gt;ori(*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;--*&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ori;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; T&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; index)&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;0&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;1&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;2&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _z;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the index is error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline T&lt;/span&gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;[](&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; index)
            {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;0&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _x;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;1&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _y;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;2&lt;/span&gt;)&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _z;
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;the index is error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            }

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; member functions&lt;/span&gt;
    template&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;=(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;this&lt;/span&gt; != &amp;amp;&lt;span&gt;rhs)
                {
                _x &lt;/span&gt;=&lt;span&gt; rhs._x;
                _y &lt;/span&gt;=&lt;span&gt; rhs._y;
                _z &lt;/span&gt;=&lt;span&gt; rhs._z;
                }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;+=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x +=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y +=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z +=&lt;span&gt; rhs._z;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;-=(&lt;span&gt;const&lt;/span&gt; vec3&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x -=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y -=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z -=&lt;span&gt; rhs._z;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            {
            assert(&lt;/span&gt;!&lt;span&gt;rhs.isnull());
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x /=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y /=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z /=&lt;span&gt; rhs._z;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; rhs)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x *=&lt;span&gt; rhs._x;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y *=&lt;span&gt; rhs._y;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z *=&lt;span&gt; rhs._z;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;*=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor)
            {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x *=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y *=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z *=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;T&amp;gt;&amp;amp; vec3&amp;lt;T&amp;gt;::&lt;span&gt;operator&lt;/span&gt;/=(&lt;span&gt;const&lt;/span&gt;&lt;span&gt; T factor)
            {
            assert(factor &lt;/span&gt;!= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x /=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y /=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z /=&lt;span&gt; factor;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline typename vec3&lt;/span&gt;&amp;lt;T&amp;gt;::norm_t vec3&amp;lt;T&amp;gt;::normal()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; sqrt(squar());
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline typename vec3&lt;/span&gt;&amp;lt;T&amp;gt;::norm_t vec3&amp;lt;T&amp;gt;::squar()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; _x*_x + _y*_y + _z*&lt;span&gt;_z;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; vec3&amp;lt;T&amp;gt;&lt;span&gt;::self_unitization()
            {
            &lt;/span&gt;*&lt;span&gt;this&lt;/span&gt; /=&lt;span&gt; normal();
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline vec3&lt;/span&gt;&amp;lt;precision&amp;gt; vec3&amp;lt;T&amp;gt;::ret_unitization()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            norm_t div &lt;/span&gt;=&lt;span&gt; normal();
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; vec3&amp;lt;norm_t&amp;gt;{ (norm_t)&lt;span&gt;this&lt;/span&gt;-&amp;gt;_x / div,(norm_t)&lt;span&gt;this&lt;/span&gt;-&amp;gt;_y / div,(norm_t)&lt;span&gt;this&lt;/span&gt;-&amp;gt;_z /&lt;span&gt; div };
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline auto dot(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt;&amp;amp; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;E&amp;gt;&amp;amp; v2) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;-&amp;gt; decltype(v1.x() * v2.x() + v1.y() * v2.y() + v1.z() * v2.z())&lt;/span&gt;
            {&lt;span&gt;//&lt;/span&gt;&lt;span&gt; x1 * x2 + y1 * y2 + z1 * z2&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; v1.x() * v2.x() + v1.y() * v2.y() + v1.z() *&lt;span&gt; v2.z();
            }

    template&lt;/span&gt;&amp;lt;typename T, typename E&amp;gt;&lt;span&gt;
        inline auto cross(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; vec3&amp;lt;T&amp;gt; v1, &lt;span&gt;const&lt;/span&gt; vec3&amp;lt;E&amp;gt;&amp;amp;&lt;span&gt; v2)
            {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; v1 × v2&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; vec3&amp;lt;decltype(v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;2&lt;/span&gt;] - v1[&lt;span&gt;2&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;])&amp;gt;&lt;span&gt;
                (
                v1[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;2&lt;/span&gt;] - v1[&lt;span&gt;2&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;],
                v1[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;] - v1[&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;],
                v1[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;] * v2[&lt;span&gt;1&lt;/span&gt;] - v1[&lt;span&gt;1&lt;/span&gt;] * v2[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]
                );
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        inline &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; vec3&amp;lt;T&amp;gt;::isnull()&lt;span&gt;const&lt;/span&gt;&lt;span&gt;
            {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; *&lt;span&gt;this&lt;/span&gt; == vec3&amp;lt;T&amp;gt;&lt;span&gt;();
            }

}    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;namespace lvgm&lt;/span&gt;

&lt;span&gt;#endif&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;LV_VEC3_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;lv_vec3.h&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('93ea34c5-bd69-45ed-9b33-64f5b63af569')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_93ea34c5-bd69-45ed-9b33-64f5b63af569&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_93ea34c5-bd69-45ed-9b33-64f5b63af569&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('93ea34c5-bd69-45ed-9b33-64f5b63af569',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_93ea34c5-bd69-45ed-9b33-64f5b63af569&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt; all vectors are in here&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [ time ]        2018.12 ~ 2018.12
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        all vectors are in here
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;


&lt;span&gt;#pragma&lt;/span&gt; once&lt;span&gt;

#include &lt;/span&gt;&amp;lt;iostream&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;cmath&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;cassert&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;lvgm\lv_precision.h&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;lv_vec2.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;lv_vec3.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vec_inout.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; lvgm
{
    template&lt;/span&gt;&amp;lt;typename T&amp;gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; vec2;

    template&lt;/span&gt;&amp;lt;typename T&amp;gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; vec3;

    template&lt;/span&gt;&amp;lt;typename T&amp;gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; vec4;


    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&lt;span&gt; bvec2;

    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;char&lt;/span&gt;&amp;gt;&lt;span&gt; cvec2;

    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;short&lt;/span&gt;&amp;gt;&lt;span&gt; svec2;

    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; ivec2;

    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt; fvec2;

    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;double&lt;/span&gt;&amp;gt;&lt;span&gt; dvec2;

    typedef vec2&lt;/span&gt;&amp;lt;&lt;span&gt;long&lt;/span&gt; &lt;span&gt;double&lt;/span&gt;&amp;gt;&lt;span&gt; ldvec2;


    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&lt;span&gt; bvec3;

    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;char&lt;/span&gt;&amp;gt;&lt;span&gt; cvec3;

    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;short&lt;/span&gt;&amp;gt;&lt;span&gt; svec3;

    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; ivec3;

    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt; fvec3;

    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;double&lt;/span&gt;&amp;gt;&lt;span&gt; dvec3;

    typedef vec3&lt;/span&gt;&amp;lt;&lt;span&gt;long&lt;/span&gt; &lt;span&gt;double&lt;/span&gt;&amp;gt;&lt;span&gt; ldvec3;


    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&lt;span&gt; bvec4;

    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;char&lt;/span&gt;&amp;gt;&lt;span&gt; cvec4;

    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;short&lt;/span&gt;&amp;gt;&lt;span&gt; svec4;

    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; ivec4;

    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt; fvec4;

    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;double&lt;/span&gt;&amp;gt;&lt;span&gt; dvec4;

    typedef vec4&lt;/span&gt;&amp;lt;&lt;span&gt;long&lt;/span&gt; &lt;span&gt;double&lt;/span&gt;&amp;gt;&lt;span&gt; ldvec4;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;type_vec.h&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c26a48fe-d490-43ae-b0f5-ed68463e8453')&quot; readability=&quot;40.5&quot;&gt;&lt;img id=&quot;code_img_closed_c26a48fe-d490-43ae-b0f5-ed68463e8453&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c26a48fe-d490-43ae-b0f5-ed68463e8453&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c26a48fe-d490-43ae-b0f5-ed68463e8453',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c26a48fe-d490-43ae-b0f5-ed68463e8453&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;76&quot;&gt;
&lt;pre&gt;
&lt;span&gt;///&lt;/span&gt;&lt;span&gt;vec_inout.h&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [author]        lv
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [ time ]        2018.12 ~ 2018.12
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; [brief ]        control the iostream of vec
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; -----------------------------------------------------&lt;/span&gt;


&lt;span&gt;#pragma&lt;/span&gt; once&lt;span&gt;


# ifdef    VEC_OUT

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        std::ostream&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; cout, &lt;span&gt;const&lt;/span&gt; lvgm::vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[ &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.x() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; cout;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        std::ostream&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; cout, &lt;span&gt;const&lt;/span&gt; lvgm::vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[ &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.x() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.z() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; cout;
            }

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        std::ostream&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; cout, &lt;span&gt;const&lt;/span&gt; lvgm::vec4&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
        {
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[ &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.x() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.z() &amp;lt;&amp;lt; v.w() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; cout;
        }

&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;&lt;span&gt;

# ifdef VEC2_OUT 

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        std::ostream&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; cout, &lt;span&gt;const&lt;/span&gt; lvgm::vec2&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[ &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.x() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; cout;
            }

&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;&lt;span&gt;

# ifdef VEC3_OUT 

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        std::ostream&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; cout, &lt;span&gt;const&lt;/span&gt; lvgm::vec3&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[ &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.x() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.z() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; cout;
            }

&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;&lt;span&gt;

# ifdef VEC4_OUT 

    template&lt;/span&gt;&amp;lt;typename T&amp;gt;&lt;span&gt;
        std::ostream&lt;/span&gt;&amp;amp; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(std::ostream&amp;amp; cout, &lt;span&gt;const&lt;/span&gt; lvgm::vec4&amp;lt;T&amp;gt;&amp;amp;&lt;span&gt; v)
            {
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[ &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.x() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; v.z() &amp;lt;&amp;lt; v.w() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; ]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; cout;
            }

&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;vec_inout.h&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;如有什么问题，请于评论区留言或者邮箱（^_^）&lt;/p&gt;

&lt;p&gt;&lt;span&gt;感谢您的阅读，生活愉快`&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 22 Dec 2018 16:46:00 +0000</pubDate>
<dc:creator>林-兮</dc:creator>
<og:description>// 注：本内容为作者原创，禁止在其他网站复述内容以及用于商业盈利，如需引用，请标明出处：http://www.cnblogs.com/lv_anchoret/ Preface 为了支持光线追踪的学习</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lv-anchoret/p/10163085.html</dc:identifier>
</item>
<item>
<title>Java 为程序创建日志系统 - 技高一筹俊G</title>
<link>http://www.cnblogs.com/GGYC/p/10163054.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/GGYC/p/10163054.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;使用JAVA创建日志系统有两种方法&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　1.使用log4j操作日志文件&lt;/p&gt;
&lt;p&gt;　　　　2.使用系统重定向输出日志信息&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;方法1：使用log4j操作日志文件(可使用jar或者xml)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　 &lt;span&gt;步骤1：下载log4j.jar&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　下载地址：http://mirrors.hust.edu.cn/apache/logging/log4j/1.2.17/log4j-1.2.17.zip&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　步骤2：导入log4j.jar&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　1.在当前工程处右键》new(新建)》Folder(文件夹)&amp;lt;没找到的话选Other》wizards》输出Folder&amp;gt;》Library（文件夹的名字）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　2.Library文件夹处放入刚才下在的log4j-1.2.17.zip里面的log4j-1.2.17.jar&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　3.捆绑Library（右键Library》Build Path》ADD to Bulid Path）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　步骤3：配置log4j.properties&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　1.在当前工程处右键》new(新建)》File（文件）》File  Name(文件名)》设置为log4j.properties&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　2.为log4j.properties添加配置信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;### 设置Logger输出级别和输出目的地 ###
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; log4j.rootLogger=&lt;span&gt;debug,stdout,logfile
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;###  把日子输出到控制台  ###
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; log4j.appender.stdout=&lt;span&gt;org.apache.log4j.ConsoleAppender
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; log4j.appender.stdout.Target=&lt;span&gt;System.err
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; log4j.appender.stdout.layout=&lt;span&gt;org.apache.log4j.SimpleLayout
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;###   把日志信息输出到文件   ###
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    ### 设置输出路径 jbit.log(jbit可以随意改后缀.log)    ###
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; log4j.appender.logfile.File=&lt;span&gt;jbit.log
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    ### 设置配置文件    ###
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; log4j.appender.logfile=&lt;span&gt;org.apache.log4j.FileAppender
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; log4j.appender.logfile.layout=&lt;span&gt;org.apache.log4j.PatternLayout
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %l %F %p %m%n 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　步骤4：新建日志文件&lt;/p&gt;
&lt;p&gt;　　　　　　　　在当前工程处右键》new(新建)》File（文件）》File  Name(文件名)》设置为LogFile.log&lt;/p&gt;
&lt;p&gt;　　　　步骤5：在所需的导出日志的Class添加以下代码即可实现导出日志信息功能&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.log4j.Logger;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.log4j.PropertyConfigurator;
/**&lt;br/&gt;　　测试代码&lt;br/&gt;*/
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Log4JTest {
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;关键代码1：创建日志对象    &lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Logger logger =Logger.getLogger(Log4JTest.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;.getName());
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
       &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;关键代码2：设置log4j配置文件 &lt;/span&gt;
            PropertyConfigurator.configure( &quot;log4j.properties&quot;&lt;span&gt; );
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Exception(&quot;输出信息错误！&quot;&lt;span&gt;);
        }&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(Exception e) {
            logger.error(e.getMessage());
        }
    }

}
                &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　方法2：使用系统重定向输出日志信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　步骤1:创建PrintStream对象&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　步骤2：设置您要输出的System输出格式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　系统输出格式有2种（System.setErr(PrintStream err)和System.setOut(PrintStream Out)）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　一种是输出错误信息，一种是输出普通打印信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　步骤3：实现以下代码即可输出日志信息&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileOutputStream;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.PrintStream;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * 测试重定向标准I/O流
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; Administrator
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RedirectionOutputStreamTest {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建PrintStream对象&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         PrintStream ps= &lt;span&gt;new&lt;/span&gt; PrintStream(&lt;span&gt;new&lt;/span&gt; FileOutputStream(&quot;jbit.log&quot;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置输出信息格式（普通信息输出or错误信息输出）&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        System.setErr(ps);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Exception(&quot;非法操作！！！&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(Exception e) {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            System.err.println(e.getMessage());
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;　　　　　　　　　　&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 22 Dec 2018 16:31:00 +0000</pubDate>
<dc:creator>技高一筹俊G</dc:creator>
<og:description>使用JAVA创建日志系统有两种方法 1.使用log4j操作日志文件 2.使用系统重定向输出日志信息 方法1：使用log4j操作日志文件(可使用jar或者xml) 步骤1：下载log4j.jar 下载地</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/GGYC/p/10163054.html</dc:identifier>
</item>
<item>
<title>算术运算符和算术表达式（初学者） - 巫师笔记</title>
<link>http://www.cnblogs.com/lvfengkun/p/10159483.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lvfengkun/p/10159483.html</guid>
<description>&lt;div readability=&quot;40.498598130841&quot;&gt;
&lt;p&gt;1、C语言的运算符可以分为以下几类：&lt;/p&gt;
&lt;p&gt;1.算术运算符：加（+）、减（-）、乘（*）、除（/）、求余（%）、自增（++），自减（--）&lt;/p&gt;
&lt;p&gt;2.关系运算符：大于（&amp;gt;）、小于（&amp;lt;）、等于（==）、大于等于（&amp;gt;=）、小于等于（&amp;lt;=）、不等于（!=）&lt;/p&gt;
&lt;p&gt;3.逻辑运算符：与（&amp;amp;&amp;amp;）、或（||），非（!）&lt;/p&gt;
&lt;p&gt;4.位操作运算符：参与运算的量，按二进制位进行运算。位与（&amp;amp;）、位或（|）、位非（!）、位异或（^）、左移（&amp;lt;&amp;lt;）、右移（&amp;gt;&amp;gt;）&lt;/p&gt;
&lt;p&gt;5.赋值运算符：用于赋值运算，分为简单赋值（=）、复合算术赋值（+=、-=，*=、/=、%=）、和复合位运算赋值（&amp;amp;=、!=、^=、&amp;gt;&amp;gt;=、&amp;lt;&amp;lt;=）；&lt;/p&gt;
&lt;p&gt;6.条件运算符：这是一个三目运算符，用于条件求值（?、 :）&lt;/p&gt;
&lt;p&gt;7.逗号运算符：用于把若干表达式组合成一个表达式（,）&lt;/p&gt;
&lt;p&gt;8.指针运算符：用于取内容（*）和区地址（&amp;amp;）&lt;/p&gt;
&lt;p&gt;9.求字节数运算符：用于计算数据类型所占的字节数（sizeof）&lt;/p&gt;
&lt;p&gt;10.特殊运算符：有括号( )、下标[ ]、成员(-&amp;gt;,)&lt;/p&gt;
&lt;p&gt;注：参与运算量均为整型时，结果也为整形，舍去小数，如果运算量中有一个是实型，则结果为双精度实型。&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;例1：
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
 printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%f\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;3.0&lt;/span&gt;/&lt;span&gt;4&lt;/span&gt;&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例2：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
 printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n\n%d,%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;20&lt;/span&gt;/&lt;span&gt;7&lt;/span&gt;,&lt;span&gt;20&lt;/span&gt;/&lt;span&gt;7&lt;/span&gt;&lt;span&gt;);
 printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%f,%f\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;20.0&lt;/span&gt;/&lt;span&gt;7&lt;/span&gt;,-&lt;span&gt;20.0&lt;/span&gt;/&lt;span&gt;7&lt;/span&gt;&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div readability=&quot;10.5&quot;&gt;例3：
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
 printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;100&lt;/span&gt;%&lt;span&gt;3&lt;/span&gt;&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em id=&quot;__mceDel&quot;&gt;2、运算符的优先级：C语言中，运算符的优先级共分十五级。一级最高，十五级最低。在表达式中，优先级较高的先于优先级较低的进行运算。而当两运算符优先级相同时，则按运算符的结合性所规定的结合方向处理。&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em id=&quot;__mceDel&quot;&gt;3、运算符的结合性：C语言中各运算符的结合性分为两种，即左结合性和右结合性。如：x=y=2，由于“=”的右结合性，应先执行y=2再执行x=（y= 2）运算。&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;
&lt;table&gt;&lt;tbody readability=&quot;3.7371134020619&quot;&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;优先级&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;名称或含义&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;使用形式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;结合方向&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;说明&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td rowspan=&quot;4&quot; colspan=&quot;1&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;[]&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;数组下标&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;数组名[常量表达式]&lt;/td&gt;
&lt;td rowspan=&quot;4&quot; colspan=&quot;1&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.4230769230769&quot;&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;()&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=70578599&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;圆括号&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;（表达式）/函数名(&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=541934&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;形参&lt;/a&gt;表)&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;.&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;成员选择（对象）&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;对象.成员名&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;-&amp;gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;成员选择（指针）&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=70269632&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;对象指针&lt;/a&gt;-&amp;gt;成员名&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;9&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;2&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;-&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=4718504&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;负号&lt;/a&gt;运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;-常量&lt;/td&gt;
&lt;td rowspan=&quot;9&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;右到左&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;(type)&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=7776741&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;强制类型转换&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;(数据类型)表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;++&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;自增运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;++变量名&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;--&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;自减运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;--变量名&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;*&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;取值运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;*指针变量&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;amp;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;取地址运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&amp;amp;变量名&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;!&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=101758618&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;逻辑非&lt;/a&gt;运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;!表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;~&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;按位&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=75943398&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;取反&lt;/a&gt;运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;~表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;单目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;sizeof&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;长度运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;sizeof(表达式)&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;3&quot; colspan=&quot;1&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;3&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;/&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;除&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式/表达式&lt;/td&gt;
&lt;td rowspan=&quot;3&quot; colspan=&quot;1&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=58006863&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;双目运算符&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;*&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;乘&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;表达式*表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;%&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;余数（取模）&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;整型表达式%整型表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;4&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;+&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;加&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式+表达式&lt;/td&gt;
&lt;td rowspan=&quot;2&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;-&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;减&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;表达式-表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;5&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&amp;lt;&amp;lt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;左移&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;变量&amp;lt;&amp;lt;表达式&lt;/td&gt;
&lt;td rowspan=&quot;2&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;右移&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量&amp;gt;&amp;gt;表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;4&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;6&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;大于&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式&amp;gt;表达式&lt;/td&gt;
&lt;td rowspan=&quot;4&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;gt;=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;大于等于&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;表达式&amp;gt;=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;lt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;小于&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;表达式&amp;lt;表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;lt;=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;小于等于&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;表达式&amp;lt;=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;7&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;==&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;等于&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式==表达式&lt;/td&gt;
&lt;td rowspan=&quot;2&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;!=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;不等于&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;表达式!= 表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;8&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&amp;amp;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;按位与&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式&amp;amp;表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;9&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;^&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;按位异或&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式^表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;10&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;|&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=68917663&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;按位或&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式|表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;11&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=319869&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;逻辑与&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式&amp;amp;&amp;amp;表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;12&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;||&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=340174&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;逻辑或&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式||表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;双目运算符&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2682926829268&quot;&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;13&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;?:&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=53372472&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;条件运算符&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式1? 表达式2: 表达式3&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;右到左&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=7636084&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;三目运算符&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;11&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;14&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;&lt;a class=&quot;ed_inner_link&quot; href=&quot;https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=55257294&amp;amp;ss_c=ssc.citiao.link&quot; target=&quot;_blank&quot;&gt;赋值运算符&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;变量=表达式&lt;/td&gt;
&lt;td rowspan=&quot;11&quot; align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;右到左&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;/=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;除后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量/=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;*=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;乘后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量*=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;%=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;取模后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量%=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;+=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;加后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量+=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;
&lt;h5&gt;-=&lt;/h5&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;减后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量-=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;
&lt;h5&gt;&amp;lt;&amp;lt;=&lt;/h5&gt;
&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;左移后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量&amp;lt;&amp;lt;=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;gt;&amp;gt;=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;右移后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量&amp;gt;&amp;gt;=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;&amp;amp;=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;按位与后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量&amp;amp;=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;^=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;按位异或后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量^=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;|=&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;按位或后赋值&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;变量|=表达式&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;69&quot;&gt;15&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;65&quot;&gt;,&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;127&quot;&gt;逗号运算符&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;145&quot;&gt;表达式,表达式,…&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;73&quot;&gt;左到右&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;87&quot;&gt;从左向右顺序运算&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt; 4、自增自减运算符：自增1运算符记为“++”，功能是使变量的值自证1。自减1运算符记为“--”，功能是使变量值自减。自增1，自减1运算符均为单目运算符，都具有右结合性。可有以下几种形式：&lt;/p&gt;
&lt;p&gt;++i     i自增1后再参与其他运算；&lt;/p&gt;
&lt;p&gt;--i       i自减1后再参与其他运算；&lt;/p&gt;
&lt;p&gt;i++     i参与运算后，i的值再自增1；&lt;/p&gt;
&lt;p&gt;i--       i参与运算后，i的值再自减1。&lt;/p&gt;
&lt;p&gt;在理解和使用上易出错的是i++和i--。特别是当它们出现在较复杂的表达式或语句中时，常常难于弄清，因此应仔细分析。&lt;/p&gt;
&lt;div readability=&quot;9.5&quot;&gt;例4：
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;

&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;8&lt;/span&gt;&lt;span&gt;;
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,++&lt;span&gt;i);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,--&lt;span&gt;i);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,i++&lt;span&gt;);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,i--&lt;span&gt;);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,-i++&lt;span&gt;);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,-i--&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注：负号不传导。&lt;/p&gt;
&lt;p&gt;例5：&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;71.5&quot;&gt; 
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;

&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;5&lt;/span&gt;,j=&lt;span&gt;5&lt;/span&gt;&lt;span&gt;,p,q;
    p&lt;/span&gt;=(i++)+(i++)+(i++);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这里i被视为5，运算结束后再自增变为8&lt;/span&gt;
    q=(++j)+(++j)+(++j); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这里j先自增为8在进行运算&lt;/span&gt;
    printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d,%d,%d,%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,p,q,i,j);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注：有的编译系统按照自左向右顺序执行括号内的运算，求解完第1个括号的值后会实现i的自加，i值变为6，再求第2个括号的值，结果表达式相当于6+7+8，即21。而另外一些系统（如Turbo C和MS C）把3作为表达式中所有i的值，因此3个i相加，得到表达式的值为15。在求出整个表达式的值后i变量再实现自加3次，i的值变为8。&lt;/p&gt;
&lt;p&gt;5、赋值运算和赋值表达式：（1）简单赋值运算符记为“=‘。由”=“连接的式子称为赋值表达式。其一般形式为：变量=表达式。例如：x=a+b&lt;/p&gt;
&lt;p&gt;赋值表达式的功能是计算表达式的值再赋予左边的变量。赋值运算符具有右结合性。因此a=b=c=5可理解为a=（b=（c=5））。&lt;/p&gt;
&lt;p&gt;（2）类型转换：如果赋值运算符两边的数据类型不相同，系统将自动进行类型转换，即把赋值号右边的类型转换为左边的类型，具体规定如下：&lt;/p&gt;
&lt;p&gt;a、实型赋予整型，舍去小数部分；&lt;/p&gt;
&lt;p&gt;b、整型赋予实型，数值不变，但将以浮点形式存放，即增加小数部分（小数部分值为零）；&lt;/p&gt;
&lt;p&gt;c、字符型赋予整型，由于字符型为一个字节，而整型占两个字节，故将字符的ASCII码值放到整型量的低八位中，高八位为0。整型赋予字符型，只把低八位赋予字符量。&lt;/p&gt;
&lt;p&gt;例6&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;

&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a,b=&lt;span&gt;322&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; x,y=&lt;span&gt;8.88&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; cl=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;k&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,c2;
    a&lt;/span&gt;=y;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt;a=y=8&lt;/span&gt;
    x=b;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt;x=b=322.000000&lt;/span&gt;
    a=cl;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt;a=y=cl='k'=107(ASCII表中107为k）&lt;/span&gt;
    c2=b;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt;c2=b=322=101000010(二进制）→字符型只存后八位=01000010=B（ASCII)&lt;/span&gt;
    printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d,%f,%d,%c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,a,x,a,c2);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）复合的赋值运算符：在赋值符”=“之前加上其他二目运算符可构成符合赋值符。如：+=、-=、*=、/=、%=、&amp;lt;&amp;lt;=、&amp;amp;=、^=等。&lt;/p&gt;
&lt;p&gt;例：a+=5 等价于 a=a+5、x*=y+7 等价于 x=x*（y+7）&lt;/p&gt;
&lt;p&gt;符合赋值符这种写法，对初学者可能不习惯，但十分有利于编译处理，能提高编译效率并产生质量较高的编译代码。&lt;/p&gt;
&lt;p&gt;（6）逗号运算符和逗号表达式：在C语言中逗号“，”也是一种运算符，称为逗号运算符，其功能是把两个表达式连起来组成一个表达式，称为逗号表达式。其一般形式为：表达式1，表达式2；&lt;/p&gt;
&lt;p&gt;其求值过程是分别求两个表达式的值，并以表达式2的值作为整个逗号表达式的值。&lt;/p&gt;
&lt;p&gt;例7&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;

&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a=&lt;span&gt;2&lt;/span&gt;,b=&lt;span&gt;4&lt;/span&gt;,c=&lt;span&gt;6&lt;/span&gt;&lt;span&gt;,x,y;
    y&lt;/span&gt;=((x=a+b),(b+c));   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;注：=的优先级比，要高，所以逗号表达式要记得加括号&lt;/span&gt;
    printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;y=%d,x=%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,y,x);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注：（1）逗号表达式中的表达式1和表达式2也可以是又是逗号表达式。例：（表达式1，（表达式2，表达式3））；&lt;/p&gt;
&lt;p&gt;（2）程序中出现逗号表达式通常是要分别求逗号表达式内个表达式的值，并不一定要求整个逗号表达式的值。&lt;/p&gt;
&lt;p&gt;（3）并不是所有出现逗号表达式的地方都组成逗号表达式，如在变量说明中，函数参考表中逗号只是用作各变量之间的间隔符。&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Sat, 22 Dec 2018 16:29:00 +0000</pubDate>
<dc:creator>巫师笔记</dc:creator>
<og:description>1、C语言的运算符可以分为以下几类： 1.算术运算符：加（+）、减（-）、乘（*）、除（/）、求余（%）、自增（++），自减（--） 2.关系运算符：大于（&gt;）、小于（&lt;）、等于（==）、</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lvfengkun/p/10159483.html</dc:identifier>
</item>
<item>
<title>html5聊天案例|趣聊h5|仿微信界面聊天|红包|语音聊天|地图 - xiaoyan2017</title>
<link>http://www.cnblogs.com/xiaoyan2017/p/10163043.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaoyan2017/p/10163043.html</guid>
<description>&lt;p&gt;&lt;span&gt;之前有开发过一个&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/xiaoyan2017/p/9904049.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;h5微直播项目&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;，当时里面也用到过聊天模块部分，今天就在之前聊天部分的基础上重新抽离模块，开发了这个h5趣聊项目，功能效果比较类似微信聊天界面。采用html5+css3+Zepto+swiper+wcPop+flex等技术融合开发，实现了发送消息、表情(动图)，图片、视频预览，添加好友/群聊，右键长按菜单。另外新增了语音模块、地图定位模块。整体功能界面效果比较接近微信聊天。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;项目运行效果图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000640257-1205661780.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000717323-1718660463.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000743123-517120242.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000806241-838823592.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000815846-246301182.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000823823-1701913162.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000843101-344143709.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000856422-968210941.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000925582-1118307054.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000946103-233195570.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223000954723-4958633.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001024831-1430413277.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001045820-1389771659.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001101116-234680318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001108897-623303143.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001120922-330227772.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001129935-704003701.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223001143653-1900187809.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;73&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ripple波纹效果&lt;/span&gt;
wcRipple({ elem: '.effect__ripple-fff', opacity: .15, speed: .5, bgColor: &quot;#fff&quot;&lt;span&gt; });
wcRipple({ elem: &lt;/span&gt;'.effect__ripple', opacity: .15, speed: .5, bgColor: &quot;#000&quot;&lt;span&gt; });

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 禁止长按弹出系统菜单&lt;/span&gt;
$(&quot;body&quot;).on(&quot;contextmenu&quot;, &quot;.weChatIM__panel&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
    e.preventDefault();
});

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 顶部 “+” 菜单&lt;/span&gt;
$(&quot;#J__topbarAdd&quot;).on(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(e){
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; _points =&lt;span&gt; [e.clientX, e.clientY];
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; contextMenuIdx =&lt;span&gt; wcPop({
        skin: &lt;/span&gt;'contextmenu', shade: &lt;span&gt;true&lt;/span&gt;,shadeClose: &lt;span&gt;true&lt;/span&gt;,opacity: 0&lt;span&gt;,follow: _points,
        style: &lt;/span&gt;'background:#3d3f4e; min-width:3.5rem;'&lt;span&gt;,
        btns: [
            {text: &lt;/span&gt;'&amp;lt;i class=&quot;iconfont icon-haoyou fs-40 mr-10&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span&amp;gt;添加好友&amp;lt;/span&amp;gt;',style: 'color:#fff;'&lt;span&gt;, onTap(){
                wcPop.close(contextMenuIdx);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加好友&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; addfriendIdx =&lt;span&gt; wcPop({
                    id: &lt;/span&gt;'wcim_fullscreen'&lt;span&gt;,
                    skin: &lt;/span&gt;'fullscreen'&lt;span&gt;,
                    title: &lt;/span&gt;'添加好友'&lt;span&gt;,
                    content: $(&lt;/span&gt;&quot;#J__popupTmpl-addFriends&quot;&lt;span&gt;).html(),
                    position: &lt;/span&gt;'right'&lt;span&gt;,
                    opacity: .&lt;/span&gt;1&lt;span&gt;,
                    xclose: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    style: &lt;/span&gt;'background: #f2f1f6;'&lt;span&gt;
                });
            }},
            {text: &lt;/span&gt;'&amp;lt;i class=&quot;iconfont icon-qunliao fs-40 mr-10&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span&amp;gt;发起群聊&amp;lt;/span&amp;gt;',style: 'color:#fff;'&lt;span&gt;, onTap(){
                wcPop.close(contextMenuIdx);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 发起群聊&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; addfriendIdx =&lt;span&gt; wcPop({
                    id: &lt;/span&gt;'wcim_fullscreen'&lt;span&gt;,
                    skin: &lt;/span&gt;'fullscreen'&lt;span&gt;,
                    title: &lt;/span&gt;'发起群聊'&lt;span&gt;,
                    content: $(&lt;/span&gt;&quot;#J__popupTmpl-launchGroupChat&quot;&lt;span&gt;).html(),
                    position: &lt;/span&gt;'right'&lt;span&gt;,
                    opacity: .&lt;/span&gt;1&lt;span&gt;,
                    xclose: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    style: &lt;/span&gt;'background: #f2f1f6;'&lt;span&gt;
                });
            }},
            {text: &lt;/span&gt;'&amp;lt;i class=&quot;iconfont icon-bangzhu fs-40 mr-10&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span&amp;gt;帮助与反馈&amp;lt;/span&amp;gt;',style: 'color:#fff;'&lt;span&gt;,}
        ]
    });
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;◆ 摇一摇模块弹窗模板：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; …… 摇一摇加好友弹窗模板.End &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wcim__popup-tmpl&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;J__popupTmpl-shakeFriends&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;display:none;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wcim__popupTmpl tmpl-shakeFriends&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wcim__shakeFriends-panel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;btn-setShake J__shakeSetting&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;i &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;iconfont icon-shezhi c-9ea0a3 fs-45&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;shake-ico&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;i &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;iconfont icon-yaoyiyao&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;shake-loading&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;J__shakeLoading&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;display:none;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;img/deng.gif&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;正在搜寻同一时刻摇晃手机的人&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 信息 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;shake-box J__shakeInfoBox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;div class=&quot;shake-info flexbox flex-alignc&quot;&amp;gt;
                        &amp;lt;img class=&quot;uimg&quot; src=&quot;img/uimg/u__chat-img08.jpg&quot; /&amp;gt;
                        &amp;lt;div class=&quot;flex1&quot;&amp;gt;
                            &amp;lt;h2 class=&quot;name&quot;&amp;gt;大幂幂&amp;lt;i class=&quot;iconfont icon-nv c-ee4343&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/h2&amp;gt;
                            &amp;lt;label class=&quot;lbl clamp1&quot;&amp;gt;开森每一刻，每天都要美美哒！&amp;lt;/label&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt; &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;shake-item J__swtShakeItem&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;javascript:;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;i &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;iconfont icon-yonghu&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;人&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;javascript:;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;i &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;iconfont icon-qunzu&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;群组&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; …… 摇一摇加好友弹窗模板.End &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt;&amp;gt;&amp;gt; 【摇一摇加好友核心模块】------------------------------------------&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 摇一摇加好友弹窗&lt;/span&gt;
$(&quot;#J__popScreen_shake&quot;).on(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; shakePopIdx =&lt;span&gt; wcPop({
        id: &lt;/span&gt;'wcim_shake_fullscreen'&lt;span&gt;,
        skin: &lt;/span&gt;'fullscreen'&lt;span&gt;,
        title: &lt;/span&gt;'摇一摇'&lt;span&gt;,
        content: $(&lt;/span&gt;&quot;#J__popupTmpl-shakeFriends&quot;&lt;span&gt;).html(),
        position: &lt;/span&gt;'right'&lt;span&gt;,
        xclose: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
        style: &lt;/span&gt;'background: #303030;'&lt;span&gt;,
        show: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 摇一摇功能&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; _shake = &lt;span&gt;new&lt;/span&gt; Shake({threshold: 15&lt;span&gt;});
            _shake.start();
            window.addEventListener(&lt;/span&gt;&quot;shake&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                window.navigator.vibrate &lt;/span&gt;&amp;amp;&amp;amp; navigator.vibrate(500&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; console.log(&quot;触发摇一摇！&quot;);&lt;/span&gt;
&lt;span&gt;
                $(&lt;/span&gt;&quot;.J__shakeInfoBox&quot;).html(&quot;&quot;&lt;span&gt;);
                $(&lt;/span&gt;&quot;.J__shakeLoading&quot;).fadeIn(300&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 消息模板&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; shakeTpl =&lt;span&gt; [
                    &lt;/span&gt;'&lt;span&gt;&amp;lt;div class=&quot;shake-info flexbox flex-alignc&quot;&amp;gt;\
                        &amp;lt;img class=&quot;uimg&quot; src=&quot;img/uimg/u__chat-img08.jpg&quot; /&amp;gt;\
                        &amp;lt;div class=&quot;flex1&quot;&amp;gt;\
                            &amp;lt;h2 class=&quot;name&quot;&amp;gt;大幂幂&amp;lt;i class=&quot;iconfont icon-nv c-f37e7d&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/h2&amp;gt;\
                            &amp;lt;label class=&quot;lbl clamp1&quot;&amp;gt;开森每一刻，每天都要美美哒！&amp;lt;/label&amp;gt;\
                        &amp;lt;/div&amp;gt;\
                    &amp;lt;/div&amp;gt;&lt;/span&gt;'&lt;span&gt;
                ].join(&lt;/span&gt;&quot;&quot;&lt;span&gt;);
                setTimeout(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    $(&lt;/span&gt;&quot;.J__shakeLoading&quot;).fadeOut(300&lt;span&gt;);
                    $(&lt;/span&gt;&quot;.J__shakeInfoBox&quot;&lt;span&gt;).html(shakeTpl);
                }, &lt;/span&gt;1500&lt;span&gt;);
            }, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        }
    });
});
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 切换摇一摇项目&lt;/span&gt;
$(&quot;body&quot;).on(&quot;click&quot;, &quot;.J__swtShakeItem a&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    $(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;).addClass(&quot;active&quot;).siblings().removeClass(&quot;active&quot;&lt;span&gt;);
});
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 摇一摇设置&lt;/span&gt;
$(&quot;body&quot;).on(&quot;click&quot;, &quot;.J__shakeSetting&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    wcPop({
        skin: &lt;/span&gt;'actionsheetMini'&lt;span&gt;,
        anim: &lt;/span&gt;'footer'&lt;span&gt;,
        btns: [
            { text: &lt;/span&gt;'&amp;lt;div class=&quot;flexbox flex-alignc&quot;&amp;gt;&amp;lt;span class=&quot;flex1&quot;&amp;gt;是否开启震动&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;rpr-30&quot;&amp;gt;&amp;lt;input class=&quot;cp__checkboxPX-switch&quot; type=&quot;checkbox&quot; checked /&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt; }, 
            { text: &lt;/span&gt;'摇到的历史'&lt;span&gt; },
        ]
    });
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;◆ &lt;/strong&gt;h5+js仿微信语音弹窗效果模块：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt;&amp;gt;&amp;gt; 【按住说话核心模块】------------------------------------------&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; ...按住说话&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; _voiceObj = $(&quot;.J__wdtVoice&quot;), eY1 = 0, eY2 = 0, eY3 = 0, isDrag = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; voiceIdx;
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; difftime = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; initVoice(){
    _voiceObj.on(&lt;/span&gt;&quot;touchstart&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(e){
        difftime &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!isDrag) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        isDrag &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        eY1 &lt;/span&gt;= e.originalEvent.targetTouches[0&lt;span&gt;].pageY;
        _voiceObj.text(&lt;/span&gt;&quot;松开 结束&quot;&lt;span&gt;);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 弹窗提示&lt;/span&gt;
        voiceIdx =&lt;span&gt; wcPop({
            id: &lt;/span&gt;'wdtVoice'&lt;span&gt;,
            skin: &lt;/span&gt;'toast'&lt;span&gt;,
            content: &lt;/span&gt;'&amp;lt;div style=&quot;margin-top:-10px;&quot;&amp;gt;&amp;lt;i class=&quot;iconfont icon-yuyin&quot; style=&quot;font-size:65px;&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;div style=&quot;line-height:32px;&quot;&amp;gt;手指上滑，取消发送&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt;,
            style: &lt;/span&gt;'border-radius:6px;height: 160px; width:160px;'&lt;span&gt;,
            time: &lt;/span&gt;10&lt;span&gt;,
            opacity: &lt;/span&gt;0&lt;span&gt;,
        });

        _voiceObj.on(&lt;/span&gt;&quot;touchmove&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
            e.preventDefault();

            eY3 &lt;/span&gt;= e.originalEvent.targetTouches[0&lt;span&gt;].pageY;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(eY1 - eY3 &amp;lt; 150&lt;span&gt;){
                _voiceObj.text(&lt;/span&gt;&quot;松开 结束&quot;&lt;span&gt;);
            }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                _voiceObj.text(&lt;/span&gt;&quot;松开手指，取消发送&quot;&lt;span&gt;);

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 弹窗提示&lt;/span&gt;
                $(&quot;#wdtVoice .popui__panel-cnt&quot;).html('&amp;lt;div style=&quot;margin-top:-10px;&quot;&amp;gt;&amp;lt;i class=&quot;iconfont icon-quxiao&quot; style=&quot;font-size:65px;&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;div style=&quot;background:#c53838; border-radius:3px; line-height:32px;&quot;&amp;gt;松开手指，取消发送&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt;);
            }
        });
    });
    _voiceObj.on(&lt;/span&gt;&quot;touchend&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
        e.preventDefault();
        eY2 &lt;/span&gt;= e.originalEvent.changedTouches[0&lt;span&gt;].pageY;
        _voiceObj.text(&lt;/span&gt;&quot;按住 说话&quot;&lt;span&gt;);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 录音时间太短提示&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;new&lt;/span&gt; Date() - difftime &amp;lt; 1000&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 弹窗提示&lt;/span&gt;
            $(&quot;#wdtVoice .popui__panel-cnt&quot;).html('&amp;lt;div style=&quot;margin-top:-10px;&quot;&amp;gt;&amp;lt;i class=&quot;iconfont icon-gantan&quot; style=&quot;font-size:65px;&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;div style=&quot;line-height:32px;&quot;&amp;gt;录音时间太短！&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (eY1 - eY2 &amp;lt; 150&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 发送成功&lt;/span&gt;
&lt;span&gt;                submitData();
                console.log(&lt;/span&gt;&quot;测试数据&quot;&lt;span&gt;);
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 取消发送&lt;/span&gt;
                console.log(&quot;cancel&quot;&lt;span&gt;);
            }
        }
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 关闭弹窗&lt;/span&gt;
        setTimeout(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
            wcPop.close(voiceIdx);
        }, &lt;/span&gt;500&lt;span&gt;);
        isDrag &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    });
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;◆ &lt;/strong&gt;js获取语音时长：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ...获取语音时长&lt;/span&gt;
&lt;span&gt;getVoiceTime();
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; getVoiceTime(){
    $(&lt;/span&gt;&quot;#J__chatMsgList li .audio&quot;).each(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; that = $(&lt;span&gt;this&lt;/span&gt;), audio = that.find(&quot;audio&quot;)[0&lt;span&gt;], duration;
        audio.load();
        audio.oncanplay &lt;/span&gt;= &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
            duration &lt;/span&gt;=&lt;span&gt; Math.ceil(audio.duration);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (duration == 'Infinity'&lt;span&gt;) {
                getVoiceTime();
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                that.find(&lt;/span&gt;&quot;.time&quot;).text(duration + `''&lt;span&gt;`);
                that.attr(&lt;/span&gt;&quot;data-time&quot;&lt;span&gt;, duration);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 语音宽度%&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; percent = (duration / 60).toFixed(2) * 100 + 20 + '%'&lt;span&gt;;
                that.css(&lt;/span&gt;&quot;width&quot;&lt;span&gt;, percent);
            }
        }
    });
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1289798/201812/1289798-20181223002536247-1982204087.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 22 Dec 2018 16:28:00 +0000</pubDate>
<dc:creator>xiaoyan2017</dc:creator>
<og:description>之前有开发过一个h5微直播项目，当时里面也用到过聊天模块部分，今天就在之前聊天部分的基础上重新抽离模块，开发了这个h5趣聊项目，功能效果比较类似微信聊天界面。采用html5+css3+Zepto+sw</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiaoyan2017/p/10163043.html</dc:identifier>
</item>
<item>
<title>Java线程入门第一篇 - 布尔bl</title>
<link>http://www.cnblogs.com/chenzhuantou/p/10162872.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenzhuantou/p/10162872.html</guid>
<description>&lt;h2&gt;&lt;code&gt;Java&lt;/code&gt;&lt;code&gt;线程的状态有6种&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;1、  初始(NEW)：新创建了一个线程对象，但还没有调用start()方法。&lt;/p&gt;
&lt;p&gt;2、  运行(RUNNABLE)：Java线程中将就绪（ready）和运行中（running）两种状态笼统的称为“运行”。（什么是就绪） 线程对象创建后，其他线程(比如main线程）调用了该对象的start()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获取CPU的使用权，此时处于就绪状态（ready）。（什么是运行）就绪状态的线程在获得CPU时间片后变为运行中状态（running）。&lt;/p&gt;
&lt;p&gt;3、  阻塞(BLOCKED)：表示线程阻塞于锁。&lt;/p&gt;
&lt;p&gt;4、  等待(WAITING)：进入该状态的线程需要等待其他线程做出一些特定动作（通知或中断）。&lt;/p&gt;
&lt;p&gt;5、  超时等待(TIMED_WAITING)：该状态不同于WAITING，它可以在指定的时间后自行返回。&lt;/p&gt;
&lt;p&gt;6、  终止(TERMINATED)：表示该线程已经执行完毕。&lt;/p&gt;
&lt;h2&gt;Java创建线程&lt;/h2&gt;
&lt;p&gt;1、  继承thread类&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * Created by buer on 2018/12/21.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ThreadTest extends Thread{
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
        System.&lt;/span&gt;&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;我是1线程&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }


    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ThreadTest().start();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、  实现Runnable接口&lt;/p&gt;
&lt;p&gt;　　a) Runabnle接口&lt;/p&gt;
&lt;p&gt;　　b) 实例代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * Created by buer on 2018/12/21.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ThreadTest {

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;JAVA7的方法&lt;/span&gt;
    Thread i1 =  &lt;span&gt;new&lt;/span&gt; Thread(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Runnable() {
        @Override
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
            System.&lt;/span&gt;&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;我是 i1 线程&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }
    });

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;java8的方法lambda&lt;/span&gt;
    Thread i2 = &lt;span&gt;new&lt;/span&gt; Thread(()-&amp;gt;System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;我是 i2 线程&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;    public void run() {
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(&quot;sss&quot;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;    }&lt;/span&gt;

    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        ThreadTest threadTest &lt;/span&gt;=  &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ThreadTest();
        threadTest.i1.start();
        threadTest.i2.start();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　结果2种：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/20181222230634355.png&quot; alt=&quot;&quot; width=&quot;460&quot; height=&quot;80&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　或者&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20181222231320474.png&quot; alt=&quot;&quot; width=&quot;385&quot; height=&quot;72&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　由于线程调度不确定，导致结果不一致（需要操作系统的知识）&lt;/p&gt;
&lt;p&gt;3、  使用callable（有返回值）和future&lt;/p&gt;
&lt;h2&gt;死锁实例&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * Created by buer on 2018/9/23.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; DeadLockDemo {

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;要用静态变量&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String A = &quot;A&quot;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String B = &quot;B&quot;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; DeadLockDemo().deadLock();
    }


    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deadLock() {
        Thread t1 &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Runnable() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
                &lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (A){
                    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;{
                        Thread.currentThread().sleep(&lt;/span&gt;2000&lt;span&gt;);
                    }&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
                        e.printStackTrace();
                    }
                    &lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (B) {
                        System.out.println(&lt;/span&gt;&quot;1&quot;&lt;span&gt;);
                    }
                }
            }
        });

        Thread t2 &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Runnable() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
                &lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (B) {
                    &lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (A) {
                        System.out.println(&lt;/span&gt;&quot;2&quot;&lt;span&gt;);
                    }
                }
            }
        });

        t1.start();
        t2.start();
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


</description>
<pubDate>Sat, 22 Dec 2018 15:20:00 +0000</pubDate>
<dc:creator>布尔bl</dc:creator>
<og:description>Java线程的状态有6种 1、 初始(NEW)：新创建了一个线程对象，但还没有调用start()方法。 2、 运行(RUNNABLE)：Java线程中将就绪（ready）和运行中（running）两种</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenzhuantou/p/10162872.html</dc:identifier>
</item>
<item>
<title>canvas 的基本使用 - wertantan</title>
<link>http://www.cnblogs.com/wertantan/p/10159570.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wertantan/p/10159570.html</guid>
<description>&lt;p&gt;&lt;span&gt;一、canvas的介绍&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　canvas是html5出现的新标签，像所有的DOM对象一样它有自己本身 的属性、方法和事件，其中就有绘图的方法，js能够调用它来进行绘图。canvas只有两个属性，而且是可选的，width、height，这两个属性也可以通过 js 来定义。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　canvas如果没有定义大小，则默认大小为宽 300px，高 150px。当然使用 css 也是可以设置 canvas 的大小，但如果css设置的宽高比例与 js 或在 标签的属性 width、height上设置的比例不一致，则会变形，而且如果css设置的值是它们的n倍，则图像也会放大n倍。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如下图第一个是长宽50的红色矩形，第二个是css设置为js设置的两倍是得出的图像，第三个是css设置宽高比为1.5：1时得出的图像且高是js设置的两倍。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181221222951099-903559565.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181221222957449-427139473.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181221223222227-2710936.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　canvas在某些较老的浏览器（如IE9以下）中并不支持，我们可以在canvas标签中写些内容替代当canvas标签不被支持的时候。也可以使用 getContext 来判断是否支持canvas。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!-- 插入替换的图片或提示文本 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;canvas id=&quot;canvas&quot; width=&quot;500&quot; height=&quot;500&quot;&amp;gt;
  &amp;lt;img src=&quot;images/canvas.png&quot; width=&quot;500&quot; height=&quot;500&quot; alt=&quot;&quot;/&amp;gt; //
&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;var&lt;/span&gt; canvas = document.getElementById('canvas'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (canvas.getContext) {
    console.log(&lt;/span&gt;'你的浏览器支持Canvas!'&lt;span&gt;);
} &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
    console.log(&lt;/span&gt;'你的浏览器不支持Canvas!'&lt;span&gt;);
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　canvas.getContext() 方法返回了一个相当于画笔的“东西”，通过它我们可以进行各种绘画。当然绘画时也会考虑是画2D的还是3D的，这个方法在传入参数后即可，如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;var&lt;/span&gt; context = canvas.getContext(&quot;2d&quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;如果想画3D的该怎么办，这样：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;var&lt;/span&gt; context = canvas.getContext(&quot;webgl&quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;本文只讨论2D的绘画的使用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　画图首先要有一个参考系，原点在哪，x、y轴的方向，单位是什么？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如下图，坐标轴在左上角，x轴为横向向右，y轴为垂直向下，所以画图的坐标都是正值，如果是负值，图像就超出画布看不见了。坐标轴单位为px。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222233223309-572169171.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;二、canvas绘制矩形&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　画矩形首先要知道在哪里画，矩形的大小，边框的粗细，边框的颜色，是否是填充的这些要素。而我们的画笔的API可以做到这些。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　context.strokeRect(10,10,50,50)，绘制无填充的矩形，四个参数分别表示：x轴坐标，y轴坐标，长，宽。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　context.fillRect(10,10,50,50)，绘制填充的矩形，默认填充黑色。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;var&lt;/span&gt; canvas = document.getElementById(&quot;canvas&quot;&lt;span&gt;);
canvas.width&lt;/span&gt;=&quot;500&quot;&lt;span&gt;;
canvas.height&lt;/span&gt;=&quot;500&quot;&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第一步必须获取一个&quot;画笔&quot; &lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; context = canvas.getContext(&quot;2d&quot;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;画矩形&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;设置边框宽度　　单位px&lt;/span&gt;
context.lineWidth=&quot;6&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置颜色&lt;/span&gt;
context.strokeStyle=&quot;red&quot;&lt;span&gt;;
context.strokeRect(&lt;/span&gt;10,10,50,50&lt;span&gt;)
context.fillStyle &lt;/span&gt;= '#f00'&lt;span&gt;
context.fillRect(&lt;/span&gt;10,10,20,20&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;清除画笔的轨迹　　将所在区域的矩形内容清空可以理解为橡皮擦&lt;/span&gt;
context.clearRect(15,15,20,20)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;画出图像如下，左上角白色的就是清除掉的部分。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181221232556623-895669149.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果你设置了边框宽度与颜色，但画出的图像没有，则是要在画之前进行设置，就是在context.strokeRect(10,10,100,100)之前定义，在其之后定义就只对后面画的有效了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　还有一个方法可以绘画矩形：这两个API要永远在一起，分开的就无法绘画了。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;context.rect(10,10,100,100&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制的形状&lt;/span&gt;
context.stroke()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;三、canvas绘制圆和弧线 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　context.arc(150, 150, 100, 0, 2*Math.PI, false)，绘制圆，六个参数分别是：圆心的x轴坐标，圆心的y轴坐标，半径，圆弧的起始弧度，圆的结束弧度，绘制的方向（默认为false，顺时针方向）。圆弧的起始弧度默认为水平方向直径与圆弧的右边交点处，如下图A点处，结束位置是顺时针方向的弧度结束点。360°是2Π，90°是1/2Π。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　如果要绘制实心的圆则要用 context.fill() 表示绘制实心圆，这是你可以不写 context.stroke() 那么圆就没有边框。如果绘制的弧度小于2Π那绘制实心的时候出来的是一个月亮一样的图形。绘制图像如下图右边两张。故如果要绘制弧线则让所绘制的的弧度之差小于2Π即可。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;context.arc(150,150,100,0,2*&lt;span&gt;Math.PI,false);
context.strokeStyle&lt;/span&gt;=&quot;#c33&quot;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;边框颜色&lt;/span&gt;
context.fillStyle=&quot;red&quot;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;填充颜色&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; context.fill(); //填充&lt;/span&gt;
context.stroke(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;画边框&lt;/span&gt;
&lt;span&gt;
context.arc(&lt;/span&gt;150,150,100,.5*Math.PI,1*Math.PI); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 弧度从1/2*Π 到 Π，及90°到180°&lt;/span&gt;
context.strokeStyle=&quot;#c33&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; context.fill();&lt;/span&gt;
context.stroke();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222192352333-113694623.png&quot; alt=&quot;&quot;/&gt;  &lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222192520542-1540500529.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222193112770-1137827122.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;四、canvas绘制线&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　context.moveTo(10,50)，将“画笔”移动到指定的坐标x以及y上，context.lineTo()绘制路径的结束点。可以设置路径的粗细与颜色，粗细的单位是px。&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制一条线&lt;/span&gt;
context.moveTo(10,150&lt;span&gt;);
context.lineTo(&lt;/span&gt;350,150&lt;span&gt;);
context.strokeStyle&lt;/span&gt;=&quot;black&quot;&lt;span&gt;;
context.lineWidth&lt;/span&gt;=&quot;6&quot;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;
context.stroke();&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;　　所的图像如下，是一条长340px的直线。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222195626503-1065154747.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　这时自然会想到如果同时绘制多条直线与弧会怎样，如下代码：&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;context.moveTo(10,150&lt;span&gt;);
context.lineTo(&lt;/span&gt;350,150&lt;span&gt;);
context.strokeStyle&lt;/span&gt;=&quot;black&quot;&lt;span&gt;;
context.lineWidth&lt;/span&gt;=&quot;30&quot;&lt;span&gt;;
context.stroke();

context.moveTo(&lt;/span&gt;50,50&lt;span&gt;);
context.lineTo(&lt;/span&gt;200,200&lt;span&gt;);
context.strokeStyle&lt;/span&gt;=&quot;green&quot;&lt;span&gt;;
context.lineWidth&lt;/span&gt;=&quot;10&quot;&lt;span&gt;;
context.stroke();

context.arc(&lt;/span&gt;150,150,100,0.5*Math.PI,1.5*Math.PI,&lt;span&gt;false&lt;/span&gt;&lt;span&gt;); 
context.strokeStyle&lt;/span&gt;=&quot;#c33&quot;&lt;span&gt;; 
context.lineWidth&lt;/span&gt;=&quot;2&quot;&lt;span&gt;; 
context.stroke();&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt; 　　所得如下图像，可以看到图中右很多线，但我们只画了三条。一条是中间的横线粗30px，黑色；一条是斜线粗10px，绿色；一条是一个粗1px红色的半圆。图上看起来好像有7条线。这是由于在canvas的绘制中，直线是由路径进行绘制的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面的痕迹也可以理解为你拿着画笔，笔一直没有离开画布画了这三条线。在不同的线之间移动时画笔也会留下痕迹，故多了那些多余的痕迹。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222200734667-1719847891.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;五、什么是路径？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　图形的基本元素是路径。路径是通过不同颜色和宽度的线段或曲线相连形成的不同形状的点的集合。canvas只支持原生绘制矩形，其他的图形绘制都至少需要一条生成路径。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用路径绘制图形需要一些额外的步骤。&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;你需要创建路径起始点。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;然后你使用“画笔”去画出路径。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;把路径封闭。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;一旦路径生成，你就能通过描边或填充路径区域来渲染图形。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;以下是所要用到的函数：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;&lt;code&gt;beginPath()　　 &lt;/code&gt;新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;code&gt;closePath()　　 &lt;/code&gt;闭合路径之后图形绘制命令又重新指向到上下文中。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;code&gt;stroke()　　   &lt;/code&gt;通过线条来绘制图形轮廓。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;code&gt;fill()　　    &lt;/code&gt;通过填充路径的内容区域生成实心的图形。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;　　调用beginPath()之后，或者canvas刚建的时候，第一条路径构造命令通常被视为是moveTo()。因为你几乎总是要在设置路径的起始位置。生成路径的步骤：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一步叫做beginPath()。本质上，路径是由很多子路径构成，这些子路径都是在一个列表中，所有的子路径（线、弧形、等等）构成图形。而每次这个方法调用之后，列表清空重置，然后我们就可以重新绘制新的图形。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第二步就是调用函数指定绘制路径，本文稍后我们就能看到了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第三，就是闭合路径closePath(),不是必需的。这个方法会通过绘制一条从当前点到开始点的直线来闭合图形。如果图形是已经闭合了的，即当前点为开始点，该函数什么也不做。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　当你调用fill()函数时，所有没有闭合的形状都会自动闭合，所以你不需要调用closePath()函数。但是调用stroke()时不会自动闭合。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将上面的代码闭合一下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;note&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;ctx.beginPath();
context.moveTo(&lt;/span&gt;10,150&lt;span&gt;);
context.lineTo(&lt;/span&gt;350,150&lt;span&gt;);
context.strokeStyle&lt;/span&gt;=&quot;black&quot;&lt;span&gt;;
context.lineWidth&lt;/span&gt;=&quot;30&quot;&lt;span&gt;;
context.stroke();
ctx.closePath();

ctx.beginPath();
context.moveTo(&lt;/span&gt;50,50&lt;span&gt;);
context.lineTo(&lt;/span&gt;200,200&lt;span&gt;);
context.strokeStyle&lt;/span&gt;=&quot;green&quot;&lt;span&gt;;
context.lineWidth&lt;/span&gt;=&quot;10&quot;&lt;span&gt;;
context.stroke();
ctx.closePath();

ctx.beginPath();
context.arc(&lt;/span&gt;150,150,100,0.5*Math.PI,1.5*Math.PI,&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
context.strokeStyle&lt;/span&gt;=&quot;#c33&quot;&lt;span&gt;;
context.lineWidth&lt;/span&gt;=&quot;2&quot;&lt;span&gt;;
context.stroke();
ctx.closePath();&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;note&quot; readability=&quot;108.93769054878&quot;&gt;
&lt;p&gt;&lt;span&gt;所得图像如下：只有三条线了，没有其他的痕迹了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222204322837-589080598.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;六、函数回调式的写法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　有时经常书写画笔的开始、闭合会很麻烦，这是会想可不可以将这些重复的代码封装以下，以后直接调用就行。没错就是这样，这是可以滴。如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; draw(cb){
    context.beginPath();
    context.save();
    cb();
    context.restore();
    context.closePath();
}

draw(()&lt;/span&gt;=&amp;gt;&lt;span&gt;{
    context.moveTo(&lt;/span&gt;10,150&lt;span&gt;);
    context.lineTo(&lt;/span&gt;350,150&lt;span&gt;);
    context.strokeStyle&lt;/span&gt;=&quot;black&quot;&lt;span&gt;;
    context.lineWidth&lt;/span&gt;=&quot;30&quot;&lt;span&gt;;
    context.stroke();
})

draw(()&lt;/span&gt;=&amp;gt;&lt;span&gt;{
    context.moveTo(&lt;/span&gt;50,50&lt;span&gt;);
    context.lineTo(&lt;/span&gt;200,200&lt;span&gt;);
    context.strokeStyle&lt;/span&gt;=&quot;green&quot;&lt;span&gt;;
    context.lineWidth&lt;/span&gt;=&quot;10&quot;&lt;span&gt;;
    context.stroke();
})

draw(()&lt;/span&gt;=&amp;gt;&lt;span&gt;{
    context.arc(&lt;/span&gt;150,150,100,0.5*pi,1.5*pi,&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
    context.strokeStyle&lt;/span&gt;=&quot;#c33&quot;&lt;span&gt;;
    context.lineWidth&lt;/span&gt;=&quot;2&quot;&lt;span&gt;;
    context.stroke();
})&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;如上代码画出的图像和上面的图是一样的，有人问这样写有什么用，这样写在画复杂图形时节省了起始与闭合代码的重复书写，也很清晰的能看出那些是一个画笔画出来的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是会有小伙伴问draw函数内的 save()、restore()是干什么的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;七、save()、restore()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　用于保存及恢复当前Canvas绘图环境的所有属性。其中&lt;code&gt;save()&lt;/code&gt;可以保存当前状态，而&lt;code&gt;restore()&lt;/code&gt;可以还原之前保存的状态。能起到保存绘制状态和防止污染状态栈。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　可以用栈来进行理解，当调用save()时会将“画笔”的状态（填充风格、线条风格、阴影风格的各种绘图状态）压入一个状态栈中，每调用一次就压入一次。当要使用时，用restore()来获取保存 的“画笔”状态，遵循栈的读取规则，先进后出，你最先取出的是你最后压入栈中的。如果你调用restore()的次数比save()多，那多余的次数画出的都是无效的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;save()只是保存了状态，并没有保留之前绘制的图形。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ctx.fillStyle = 'red'&lt;span&gt;; 
ctx.fillRect(&lt;/span&gt;10,30,15,15&lt;span&gt;); 
ctx.save(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 将第一个状态压入栈中 &lt;/span&gt;
&lt;span&gt;
ctx.fillStyle &lt;/span&gt;= 'blue'&lt;span&gt;; 
ctx.fillRect(&lt;/span&gt;50,20,30,30&lt;span&gt;); 
ctx.save(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 将第二个状态压入栈中 &lt;/span&gt;
&lt;span&gt;
ctx.fillStyle &lt;/span&gt;= 'green'&lt;span&gt;; 
ctx.fillRect(&lt;/span&gt;100,10,50,50&lt;span&gt;); 
ctx.save(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 将第三个状态压入栈中 &lt;/span&gt;
&lt;span&gt;
ctx.restore(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 取出栈3（第三个状态） &lt;/span&gt;
&lt;span&gt;ctx.beginPath(); 
ctx.arc(&lt;/span&gt;200, 35, 30, 0, Math.PI*2, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;); 
ctx.closePath(); 
ctx.fill(); 

ctx.restore(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 取出栈2（第二个状态） &lt;/span&gt;
&lt;span&gt;ctx.beginPath(); 
ctx.arc(&lt;/span&gt;300, 35, 20, 0, Math.PI*2, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;); 
ctx.closePath(); 
ctx.fill(); 

ctx.restore(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 取出栈1（第一个状态） &lt;/span&gt;
&lt;span&gt;ctx.beginPath(); 
ctx.arc(&lt;/span&gt;400, 35, 10, 0, Math.PI*2, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;); 
ctx.closePath(); 
ctx.fill();

ctx.restore(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 取出栈1（第一个状态） &lt;/span&gt;
&lt;span&gt;ctx.beginPath(); 
ctx.arc(&lt;/span&gt;400, 35, 10, 0, Math.PI*2, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;); 
ctx.closePath(); 
ctx.fill();&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222212634640-2112191466.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;看出最后多余的一次读取状态所绘图形并没有显示出来。所以读取次数要少于压入次数。否则无效。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;八、绘制文字&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　文字的绘制很简单，可以设置字体，大小，颜色，位置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　字体的位置 第一个number参数时x轴坐标，第二number个为y轴坐标，字体的原点在字体的左下角，如下图所示位置。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;context.strokeStyle=&quot;#c33&quot;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置颜色，如果要设置实心的字体颜色则要用 fillStyle&lt;/span&gt;
context.font=&quot;40px 微软雅黑&quot;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置大小与字体&lt;/span&gt;
context.fillText(&quot;wertantan的博客园&quot;,80,80); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;实心字体，设置所绘字体内容与位置&lt;/span&gt;
context.strokeText(&quot;wertantan的博客园&quot;,80,150); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;空心字体&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222214016358-1563941470.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 九、绘制贝塞尔曲线&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　二次贝塞尔曲线与三次贝塞尔曲线一般用来绘制复杂有规律的图形。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;　　quadraticCurveTo(cp1x, cp1y, x, y)&lt;/code&gt;绘制二次贝塞尔曲线，&lt;code&gt;cp1x,cp1y&lt;/code&gt;为一个控制点，&lt;code&gt;x,y为&lt;/code&gt;结束点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;code&gt;bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)&lt;/code&gt;绘制三次贝塞尔曲线，&lt;code&gt;cp1x,cp1y&lt;/code&gt;为控制点一，&lt;code&gt;cp2x,cp2y&lt;/code&gt;为控制点二，&lt;code&gt;x,y&lt;/code&gt;为结束点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　二次贝塞尔曲线有一个开始点（蓝色）、一个结束点（蓝色）以及一个控制点（红色），而三次贝塞尔曲线有两个控制点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222220700345-1173577670.png&quot; alt=&quot;&quot;/&gt;       &lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222220117352-422050698.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; Canvas除了能绘制基本的形状和文本，还可以实现动画、缩放、各种滤镜和像素转换等高级操作。这里就不再说了，感兴趣的小伙伴可以区 &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial/Using_images&quot;&gt;MDN&lt;/a&gt; 看一看。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;至此canvas的基础使用就结束了，希望各位能有所收获，如有问题还望指正！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 本文所有图片均由canvas绘制，截取下来。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这里附上一个小案例，是一个方形从浏览器可视区的左上角移动到右下角的动画，代码如下：&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
  &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt;
  &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&amp;gt;
  &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        *{margin:0;padding:0&lt;span&gt;;}
    &lt;/span&gt;&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;canvas id=&quot;canvas&quot;&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&amp;lt;script&amp;gt;
  &lt;span&gt;var&lt;/span&gt; canvas = document.getElementById(&quot;canvas&quot;&lt;span&gt;);
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; iw =&lt;span&gt; document.documentElement.clientWidth;
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ih =&lt;span&gt; document.documentElement.clientHeight;
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; context = canvas.getContext(&quot;2d&quot;&lt;span&gt;);

  canvas.width &lt;/span&gt;= iw-50&lt;span&gt;;
  canvas.height&lt;/span&gt;= ih-50&lt;span&gt;;
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x = 0&lt;span&gt;;
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; y = 0&lt;span&gt;;

  setInterval(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    context.clearRect(&lt;/span&gt;0,0&lt;span&gt;,iw,ih);
    x&lt;/span&gt;++&lt;span&gt;;
    y&lt;/span&gt;+=(ih-50)/(iw-50);
    context.fillRect(x,y,50,50&lt;span&gt;);
  },&lt;/span&gt;30&lt;span&gt;)
&lt;/span&gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1459075/201812/1459075-20181222231252496-255482009.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;/div&gt;
</description>
<pubDate>Sat, 22 Dec 2018 15:17:00 +0000</pubDate>
<dc:creator>wertantan</dc:creator>
<og:description>canvas的基本使用</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wertantan/p/10159570.html</dc:identifier>
</item>
<item>
<title>websocket 初识 - Eurekaa</title>
<link>http://www.cnblogs.com/zuanzuan/p/10162820.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zuanzuan/p/10162820.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;其实很早就知道了 websocket 这个概念了，像现在大火的直播等使用的就是 websocket。之前找爬虫工作，对面问我爬过 websocket 网站没，很汗颜，那时候还只是听说过。现在想了解一下，基于 JavaScript 语言。&lt;/p&gt;
&lt;h2 id=&quot;websocket-是什么&quot;&gt;Websocket 是什么&lt;/h2&gt;
&lt;p&gt;websocket 是一种网络通信协议，运行在 TCP 协议之上。&lt;/p&gt;
&lt;p&gt;对于传统的 HTTP 协议来说，通信只能由客户端发起，然后服务端响应。HTTP 协议做不到服务器制动向客户端推送信息。HTTP 协议的这种单向请求的特点，注定了如果服务器有连续的状态变化，客户端要获知就非常麻烦。只能使用‘’轮询‘’：（非阻塞通信），每隔一段时候，就发出一个询问，了解服务器有没有新的消息。轮询的效率低，非常浪费资源。&lt;/p&gt;
&lt;p&gt;websocket 协议在2008年诞生，它的最大特点就是服务器可以主动向客户端推送消息，客户端也可以主动向服务器发送消息，是真正的双向平等对话，属于服务器推送技术的一种。websocket 允许服务器端与客户端进行全双工通信。其特点如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;建立在 TCP 协议之上，服务端的实现比较容易；&lt;/li&gt;
&lt;li&gt;与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器；&lt;/li&gt;
&lt;li&gt;数据个数比较轻量，性能开销小，通信高效；&lt;/li&gt;
&lt;li&gt;可以发送文本，也可以发送二进制数据；&lt;/li&gt;
&lt;li&gt;没有同源限制，客户端可以与任意服务器通信，完全可以取代 AJAX；&lt;/li&gt;
&lt;li&gt;协议标识符是 ws（加密就是 wss），服务器网址为 URL。&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws://example.com:80/some/path&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;websocket-握手&quot;&gt;websocket 握手&lt;/h2&gt;
&lt;p&gt;浏览器发出的 websocket 握手请求类似于下面：&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;GET / HTTP/1.1
Connection: Upgrade
Upgrade: websocket
Host: example.com
Origin: null
Sec-WebSocket-Key: ...
Sec-WebSocket-Version: 13&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是数据头，HTTP1.1协议规定，Upgrade 字段表示将通信协议从 HTTP/1.1转向该字段指定的协议。Connection 字段表示浏览器通知服务器，如果可以的话就升级到 WebScoket 协议。Origin 字段用于提供请求发出的域名，供服务器验证是否许可的范围内（服务器可以不验证）。Sec-Websocket-Key 则是用于握手协议的密钥，是 Base64编码的16字节随机字符串（可以反解）。&lt;/p&gt;
&lt;p&gt;服务器的 WebSocket 回应如下：&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;HTTP/1.1 101 Switching Protocols
Connection: Upgrade
Upgrade: websocket
Sec-WebSocket-Accept: ...
Sec-WebSocket-Origin: null
Sec-WebSocket-Location: ws://exammple.com/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;服务器同样用 Connection 字段通知浏览器，可以改变协议为 Websocket，Sec-WebSocket-Accept 字段是服务器在浏览器提供的 Sec-Webscoket-Key 字符串后面，添加 RFC6465（不了解）标准规定的‘’258EAFA5-E914-47DA-95CA-C5AB0DC85B11‘’字符串，然后再取 SHA-1的哈希值。浏览器将对这个值进行验证，以证明确实是目标服务器回应了 Websocket 请求。Sec-WebSocket-Location 字段表示进行通信的 Websocket 网址。&lt;/p&gt;
&lt;p&gt;完成握手以后，WebSocket 协议就在 TCP 协议之上，开始传送数据。&lt;/p&gt;
&lt;h2 id=&quot;客户端的示例&quot;&gt;客户端的示例&lt;/h2&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;var ws = new WebSocket('wss://echo.websocket.org'); // 网址不可达

ws.open = function(ev) {
    console.log('Connection open...');
    ws.send('Hello WebSocket!');
};

ws.onmessage = function(ev) {
    console.log('Recevied Message: ' + ev.data);
};

ws.onclose = function(ev) {
    console.log('Connection closed.');
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;客户端-api&quot;&gt;客户端 API&lt;/h2&gt;
&lt;p&gt;浏览器对 WebSocket 协议的处理，无非是三件事：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;建立连接和断开连接；&lt;/li&gt;
&lt;li&gt;发送数据和接收数据；&lt;/li&gt;
&lt;li&gt;处理错误。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;构造函数-websocket&quot;&gt;构造函数 WebSocket&lt;/h3&gt;
&lt;p&gt;WebSocket 对象作为一个构造函数，用于新建 WebSocket实例。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;var ws = new WebSocket('ws://localhost:8080');&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;执行上面语句后，客户端就会与服务器进行连接。&lt;/p&gt;
&lt;h3 id=&quot;websocket.readystate&quot;&gt;WebSocket.readyState&lt;/h3&gt;
&lt;p&gt;跟 HTTP 协议一样，WebSocket 也有自己的状态码：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;CONNECTING：值为0，表示正在连接；&lt;/li&gt;
&lt;li&gt;OPEN：值为1，表示连接成功，可以进行通信；&lt;/li&gt;
&lt;li&gt;CLOSING：值为2，表示连接正在关闭；&lt;/li&gt;
&lt;li&gt;CLOSED：值为3，表示连接已经关闭，或者打开连接失败。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;实例：&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;switch (ws.readyState) {
    case WebSocket.CONNECTING:
        // do something
        break;
    case WebSocket.OPEN:
        // do something
        break;
    case WebSocket.CLOSING:
        // do something
        break;
    case WebSocket.CLOSED:
        // do something
        break;
    default:
        // this never happend
        break;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;websocket.onopen&quot;&gt;webSocket.onopen&lt;/h3&gt;
&lt;p&gt;实例对象的 onopen 属性，用于指定连接成功后的回调函数。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws.onopen = function () {
    ws.send('Hello MUSIBII');
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果要指定多个回调函数，可以使用 addEventListener 方法。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws.addEventListener('open', function () {
    ws.send('Hello MUSIBII');
})&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;websocket.onclose&quot;&gt;webSocket.onclose&lt;/h3&gt;
&lt;p&gt;实例对象的 onclose 属性，用于指定连接关闭后的回调函数。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws.onclose = function (ev) {
    var code = ev.code;
    var reason = ev.reason;
    var wasClean = ev.wasClean;
    // handle close event
};

ws.addEnentListener('close', function (ev) {
    var code = ev.clde;
    var reason = ev.reason;
    var wasClean = ev.wasClean;
    // handle close event
})&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;websocket.onmessage&quot;&gt;webSocket.onmessage&lt;/h3&gt;
&lt;p&gt;实例对象的 onmessage 属性，用于指定收到服务器数据后的回调函数。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws.onmessage = function (ev) {
    var data = ev.data;
    // handle data
};

ws.addEvendListener('message', function (ev) {
    var date = ev.data;
    // handle data
})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意：服务器的数据可能是文本，也可能是二进制数据（blob 对象或 Arraybuffer 对象）。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws.onmessage = function (ev) {
    if(typeof ev.data === String) {
        console.log('Received data string');
    }
    
    if(ev.data instanceof ArrayBuffer) {
        var buffer = ev.data;
        console.log('Received arraybuffer');
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;除了动态判断收到的数据类型，也可以使用 binaryType 属性，显式指定收到的二进制数据类型。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;// 收到的是 blob 数据
ws.binaryType = 'blob';
ws.onmessage = function (ev) {
    console.log(ev.data.size);
};

// 收到的是 ArrayBuffer 数据
ws.binaryType = 'arraybuffer';
ws.onmessage = function (ev) {
    console.log(ev.data.byteLength);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;websocket.send&quot;&gt;webSocket.send()&lt;/h3&gt;
&lt;p&gt;实例对象的 send() 方法用于向服务器发送数据。&lt;/p&gt;
&lt;p&gt;发送文本的例子。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;ws.send('your message');&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;发送 Blob 对象的例子。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;var file = document.querySelector('input[type = &quot;file&quot;]').files[0];
ws.send(file);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;发送 ArrayBuffer 对象的例子。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;// Senging canvas ImageData as ArrayBuffer
var img = canvas_context.getImageData(0, 0, 400, 320);
var binary = new Uint8Array(img.data.length);
for (var i = 0; i &amp;lt; img.data.length; i++) {
    binary[i] = img.data[i];
};

ws.seng(binary.buffer);&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;websocket.bufferedamout&quot;&gt;webSocket.bufferedAmout&lt;/h3&gt;
&lt;p&gt;实例对象的 bufferedAmout 属性，表示还有多少字节的二级制数据没有发送出去。它可以用来判断发送是否结束。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;var data = new ArrayBuffer(100000);
socket.send(data);

if (socket.bufferedAmount === 0) {
    // 发送完毕
} else {
    // 发送没有结束
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;websocket.onerror&quot;&gt;webSocket.onerror&lt;/h3&gt;
&lt;p&gt;实例对象的 onerror 属性，用于指定报错时的回调函数。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;socket.onerror = function (ev) {
    // handle error event
};

socket.addEventListener('error', function (ev) {
    // handle error enent
});&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Sat, 22 Dec 2018 15:04:00 +0000</pubDate>
<dc:creator>Eurekaa</dc:creator>
<og:description>websocket 初识 前言 其实很早就知道了 websocket 这个概念了，像现在大火的直播等使用的就是 websocket。之前找爬虫工作，对面问我爬过 websocket 网站没，很汗颜，那</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zuanzuan/p/10162820.html</dc:identifier>
</item>
<item>
<title>python中的生成器 - 张风闲</title>
<link>http://www.cnblogs.com/zhangfengxian/p/10160872.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhangfengxian/p/10160872.html</guid>
<description>&lt;p class=&quot;toc&quot;&gt;目录&lt;/p&gt;
&lt;h2 id=&quot;生成器&quot;&gt;1. 生成器&lt;/h2&gt;
&lt;p&gt;利用迭代器，我们可以在每次迭代获取数据（通过next()方法）时按照特定的规律进行生成。但是我们在实现一个迭代器时，关于当前迭代到的状态需要我们自己记录，进而才能根据当前状态生成下一个数据。为了达到记录当前状态，并配合next()函数进行迭代使用，我们可以采用更简便的语法，即&lt;strong&gt;生成器(generator)。生成器是一类特殊的迭代器&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;创建生成器方法1&quot;&gt;2. 创建生成器方法1&lt;/h2&gt;
&lt;p&gt;要创建一个生成器，有很多种方法。第一种方法很简单，只要把一个列表生成式的 [ ] 改成 ( )&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;In [15]: L = [ x*2 for x in range(5)]

In [16]: L
Out[16]: [0, 2, 4, 6, 8]

In [17]: G = ( x*2 for x in range(5))

In [18]: G
Out[18]: &amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0x7f626c132db0&amp;gt;

In [19]:&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;创建 L 和 G 的区别仅在于最外层的 [ ] 和 ( ) ， L 是一个列表，而 G 是一个生成器。我们可以直接打印出列表L的每一个元素，而对于生成器G，我们可以按照迭代器的使用方法来使用，即可以通过next()函数、for循环、list()等方法使用。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;In [19]: next(G)
Out[19]: 0

In [20]: next(G)
Out[20]: 2

In [21]: next(G)
Out[21]: 4

In [22]: next(G)
Out[22]: 6

In [23]: next(G)
Out[23]: 8

In [24]: next(G)
---------------------------------------------------------------------------
StopIteration                             Traceback (most recent call last)
&amp;lt;ipython-input-24-380e167d6934&amp;gt; in &amp;lt;module&amp;gt;()
----&amp;gt; 1 next(G)

StopIteration:

In [25]:&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;In [26]: G = ( x*2 for x in range(5))

In [27]: for x in G:
   ....:     print(x)
   ....:     
0
2
4
6
8

In [28]:&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;创建生成器方法2&quot;&gt;3. 创建生成器方法2&lt;/h2&gt;
&lt;p&gt;generator非常强大。如果推算的算法比较复杂，用类似列表生成式的 for 循环无法实现的时候，还可以用函数来实现。&lt;/p&gt;
&lt;p&gt;我们仍然用上一篇（&lt;a href=&quot;https://www.cnblogs.com/zhangfengxian/p/python-iterator.html&quot;&gt;python迭代器&lt;/a&gt;）提到的斐波那契数列来举例，回想我们在上一篇用迭代器的实现方式：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class Fabonacci(object):
        &quot;&quot;&quot;斐波那契数列迭代器&quot;&quot;&quot;

        def __init__(self, num):
                self.num = num 
                self.index = 0 
                self.a = 0 
                self.b = 1 
    
        def __next__(self):
                if self.index &amp;lt; self.num:
                        v = self.a
                        self.b, self.a = self.a, self.a + self.b
                        self.index += 1
                        return v
                else:
                        raise StopIteration
    
        def __iter__(self):
                return self


if __name__ == &quot;__main__&quot;:
    
        fab = Fabonacci(15)
        for i in fab:
                print(i)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意，在用迭代器实现的方式中，我们要借助几个变量(num、index、a、b)来保存迭代的状态。现在我们用生成器来实现一下。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from collections import Iterator


def fabonacci(num):
        index = 0 
        a, b = 0, 1
        while index &amp;lt; num:
                val = a 
                b, a = a, a + b 
                index += 1
                yield val 
        return &quot;done&quot;


fab = fabonacci(5)
print(isinstance(fab, Iterator))
print(next(fab))
print(next(fab))
print(next(fab))
print(next(fab))
print(next(fab))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在使用生成器实现的方式中，我们将原本在迭代器&lt;code&gt;__next__&lt;/code&gt;方法中实现的基本逻辑放到一个函数中来实现，但是将每次迭代返回数值的return换成了yield，此时新定义的函数便不再是函数，而是一个&lt;strong&gt;生成器&lt;/strong&gt;了。简单来说：只要在def中有yield关键字的 就称为 生成器&lt;/p&gt;
&lt;p&gt;此时按照调用函数的方式( 案例中为F = fib(5) )使用生成器就不再是执行函数体了，而是会返回一个生成器对象（ 案例中为F ），然后就可以按照使用迭代器的方式来使用生成器了。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;fab = fabonacci(5)
for i in fab:
        print(i)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;但是用for循环调用generator时，发现拿不到generator的return语句的返回值。如果想要拿到返回值，必须捕获StopIteration错误，返回值包含在StopIteration的value中：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;fab = fabonacci(5)
while True:
        try:
                print(next(fab))
        except StopIteration as e:
                print(&quot;生成器返回值为：&quot;, e.value)
                break   &lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;使用了yield关键字的函数不再是函数，而是生成器。（使用了yield的函数就是生成器）&lt;/li&gt;
&lt;li&gt;yield关键字有两点作用：
&lt;ul&gt;&lt;li&gt;保存当前运行状态（断点），然后暂停执行，即将生成器（函数）挂起&lt;/li&gt;
&lt;li&gt;将yield关键字后面表达式的值作为返回值返回，此时可以理解为起到了return的作用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;可以使用next()函数让生成器从断点处继续执行，即唤醒生成器（函数）&lt;/li&gt;
&lt;li&gt;Python3中的生成器可以使用return返回最终运行的返回值，而Python2中的生成器不允许使用return返回一个返回值（即可以使用return从生成器中退出，但return后不能有任何表达式）。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;使用send唤醒&quot;&gt;4. 使用send唤醒&lt;/h2&gt;
&lt;p&gt;我们除了可以使用next()函数来唤醒生成器继续执行外，还可以使用send()函数来唤醒执行。使用send()函数的一个好处是可以在唤醒的同时向断点处传入一个附加数据。&lt;/p&gt;
&lt;p&gt;例子：执行到yield时，gen函数作用暂时保存，返回i的值; temp接收下次c.send(&quot;python&quot;)，send发送过来的值，c.next()等价c.send(None)&lt;br/&gt;使用send：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;def gen():
        i = 0 
        while i &amp;lt; 10: 
                temp = yield i
                print(temp)
                i += 1&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;g = gen()
print(next(g))

print(g.send(&quot;python&quot;))

print(next(g))

print(g.send(None))
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使用next：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;g = gen()
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))
print(next(g))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使用__next__方法（不常用）：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;g = gen()
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
print(g.__next__())
&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Sat, 22 Dec 2018 14:56:00 +0000</pubDate>
<dc:creator>张风闲</dc:creator>
<og:description>[TOC] 1. 生成器 利用迭代器，我们可以在每次迭代获取数据（通过next()方法）时按照特定的规律进行生成。但是我们在实现一个迭代器时，关于当前迭代到的状态需要我们自己记录，进而才能根据当前状态</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhangfengxian/p/10160872.html</dc:identifier>
</item>
</channel>
</rss>