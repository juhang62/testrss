<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>一个区块链与淘宝客融合的产品之闪电鸡的本质与操作指引 - 张林-布莱恩特</title>
<link>http://www.cnblogs.com/zhangmumu/p/10468496.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhangmumu/p/10468496.html</guid>
<description>&lt;p&gt;【写在前面】&lt;/p&gt;
&lt;p&gt;希望参与闪电鸡App平台推广的用户，都能够保持信息更新和数据准确。信息错误，数据错误，再好的攻略，都是白搭。&lt;/p&gt;
&lt;p&gt;有些人因为前期试水，觉得不错，在朋友圈推广，邀请了不少好友或陌生人参与。不管关系如何，希望负责第一。&lt;/p&gt;
&lt;p&gt;在邀请好友的同时，希望不要再以高回报率诱人，高回报的那是资金盘，是炒作起来的概念。朋友圈推广的时候要说明利与弊。&lt;/p&gt;
&lt;p&gt;朋友圈常见推广语：（错误示例）&lt;/p&gt;
&lt;p&gt;1、每天都能提现 秒到账（不严谨，甚至错误）&lt;/p&gt;
&lt;p&gt;2、投资900块 每天收益80/90，一个月收益2000-3000元 （错误）&lt;/p&gt;
&lt;p&gt;3、开启躺赚人生？（做过“区块链”的毛病要改改，错误）&lt;/p&gt;
&lt;p&gt;4、闪电价值每天都在涨，天天翻倍（有没有算过小鸡的价格在跌？严重数据错误）&lt;/p&gt;
&lt;p&gt;5、推广时用自己刚开始几天的收益图或盗图或推广得到的高收益，作为推广素材，烘托平台高收益 （很不负责）&lt;/p&gt;
&lt;p&gt;【以下正文】&lt;/p&gt;
&lt;p&gt;以下操作指引是多方消息的汇总和整理，也是群策群力的结果。我们都不是官方的核心算法人员，只能根据表面数据进行揣摩。请保持疑问和独立思考。&lt;/p&gt;
&lt;h3 id=&quot;一关于闪电鸡的本质&quot;&gt;一、关于闪电鸡的本质&lt;/h3&gt;
&lt;p&gt;闪电鸡购物APP本质就是一家淘宝客平台，跟目前互联网市场上的高佣联盟/好省/券妈妈一样。这一点是毋庸置疑的。平台上打造的闪电股模块，探险鸡模块，只不过是作为社交电商引流和促进用户养成闪电鸡平台购物的消费习惯的营销手段。&lt;/p&gt;
&lt;p&gt;平台早期是开发了闪电股，目的是让用户在平台消费所得的返利，在闪电股中继续增值。后来平台加入了探险鸡养鸡模块，上线了扩散奖励，以高回报率诱人，才有了今天爆发式的增长。&lt;/p&gt;
&lt;p&gt;探险鸡养鸡模块可以增加用户每天打开闪电鸡的频率，分享【时间码】增加时间的功能，可以引发朋友圈裂变。从引流到导流，让用户增加对平台的黏度，从而引导用户消费并养成在闪电鸡购物消费的习惯。这是闪电鸡社交电商的核心，也是平台的高明之处。&lt;/p&gt;
&lt;p&gt;不过现在大多数把闪电鸡作为高回报率的养鸡平台，而不是当成购物返利平台。用户忽略了平台发展的本意，可平台的盈利点还是淘宝返佣。如果平台脱离这一点，靠用户买鸡，养鸡支撑，那就是圈钱行为。也是所谓的“资金盘”。&lt;/p&gt;
&lt;p&gt;同样用户把闪电鸡当作养鸡的高回报率平台，也是错误的理解。闪电鸡大概可理解成社交电商+理财平台。能购物，还能理财。其背后的算法完全可以控制住一些人一夜暴富的发财梦。&lt;/p&gt;
&lt;p&gt;【闪电鸡平台安装数据】可作为推广数据&lt;/p&gt;
&lt;p&gt;实际上安卓端手机/平板端/Android系统，各大应用商店已突破100万量级下载&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1220420/201903/1220420-20190303235133223-1840535826.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;数据截止：2018/2/27 来源：七麦数据（qimai.cn）搜索“闪电鸡”&lt;/p&gt;
&lt;p&gt;苹果端手机/iPad/iOS端，已突破12万次下载&lt;/p&gt;
&lt;p&gt;数据截止：2018/2/27 来源：七麦数据（qimai.cn）搜索“闪电鸡”&lt;/p&gt;
&lt;p&gt;安卓端和苹果端已超过116万次下载量&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1220420/201903/1220420-20190303235235600-1091474269.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mmbiz.qpic.cn/mmbiz_png/Y9DSf18veefISXyyXnLVJ9psJChgn6ibUCy7DDh1ibSaJzGQ4WLCVZibuicFtmAEGnzsB0DMugYKyhbxJy7M9r2CwA/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; class=&quot;uri&quot;&gt;https://mmbiz.qpic.cn/mmbiz_png/Y9DSf18veefISXyyXnLVJ9psJChgn6ibUCy7DDh1ibSaJzGQ4WLCVZibuicFtmAEGnzsB0DMugYKyhbxJy7M9r2CwA/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;数据截止：2018/2/27 来源：七麦数据（qimai.cn）搜索“闪电鸡”&lt;br/&gt;这一数据有据可查，可以作为推广数据支撑。&lt;/p&gt;
&lt;h3 id=&quot;二闪电股探险鸡的本质&quot;&gt;二、闪电股、探险鸡的本质&lt;/h3&gt;
&lt;p&gt;本质就是相当于银行的理财产品，其实也可以把闪电鸡理解成一款理财产品，购物便宜，又能返现，投资还有比银行高的利息。既然是理财产品，就要知道，高投资才有高回报，小投资小回报。我们所有人的探险鸡数据，都跟这有关系。我们所购买的闪电证作为一种股票凭证（无法直接兑现），存在“超级闪电蛋”中，也是买的多，回报率就高。&lt;/p&gt;
&lt;p&gt;同样，探险鸡的收益，跟你投入平台的本金有直接关系。【闪电排行榜】上前100名的数据，可以验证这一点，他们为什么花大手笔买探险鸡或者买仓库，因为他们非常清楚探险鸡模块仍然是高投入高回报的“理财产品”。&lt;/p&gt;
&lt;p&gt;这里所指的【本金】是指购买探险鸡和购买仓库总投资的数据。对于刷仓，购买“0.01/0.1的优惠券或壁纸”所产生的投入金额，并没有计算在内。&lt;/p&gt;
&lt;p&gt;既然收益与投资的总金额有关系，那么什么“关键性数据”，会影响回本速度和后期收益呢？&lt;/p&gt;
&lt;p&gt;答：我的闪电总数，也是闪电鸡个人的【账户资金】如图&lt;br/&gt;&lt;a href=&quot;https://mmbiz.qpic.cn/mmbiz_png/WUodTDPB6EInAPuBb944ia0nVc5X67RStlvfE5poQRvd5usjCicWcVd9wRykTTheYYPpVOvQXM5wG5b0aEFRHc3Q/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; class=&quot;uri&quot;&gt;https://mmbiz.qpic.cn/mmbiz_png/WUodTDPB6EInAPuBb944ia0nVc5X67RStlvfE5poQRvd5usjCicWcVd9wRykTTheYYPpVOvQXM5wG5b0aEFRHc3Q/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&lt;/a&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1220420/201903/1220420-20190303235301282-24418252.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mmbiz.qpic.cn/mmbiz_png/WUodTDPB6EInAPuBb944ia0nVc5X67RStBnPOvIPAkbquAkdkInHkficXYcbO74nUQxYAT1yepLuyia1bISUBKHkw/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; class=&quot;uri&quot;&gt;https://mmbiz.qpic.cn/mmbiz_png/WUodTDPB6EInAPuBb944ia0nVc5X67RStBnPOvIPAkbquAkdkInHkficXYcbO74nUQxYAT1yepLuyia1bISUBKHkw/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&lt;/a&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1220420/201903/1220420-20190303235312482-2059906117.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;“我的闪电价值”就是你的【账户金额】164.82就是164.82元。账户总金额=我的闪电数✖今日闪电价&lt;/p&gt;
&lt;p&gt;证明账户资金与回本速度和后期收益有关联的，一是，根据闪电排行榜第二2月27日王尼玛直播提供的小号数据参考，他的小号6000鸡，投资1万8，一次都没有提现，16天回本，第一天收益就有1400元，回本前基本水平800/900块。回本之后收益到现在，算上每日电价涨幅的复利，现在一天最低220元。当时直播晒了总账户的数据，充值数据，提现记录（为空）。&lt;/p&gt;
&lt;h3 id=&quot;二是以排行榜用户的总收益作为参考&quot;&gt;二是以排行榜用户的总收益作为参考：&lt;/h3&gt;
&lt;p&gt;说明一下，排行榜用户的数据是累积的，不是一天的数据。&lt;/p&gt;
&lt;p&gt;1、记录同一个人2天（或2天以上的）的闪电总数，相减之后乘以今日电价，除以2，获得每天总收益数据。&lt;/p&gt;
&lt;p&gt;2、接着去计算他探险鸡带回小鸡的数据，这个数据是不参杂购物返利和邀请奖励的数据，是所有探险鸡一天纯粹获得的收益。&lt;/p&gt;
&lt;p&gt;3、用总闪电收益➖探险鸡收益=额外的收益。额外收益，可能包含的有邀请奖励，最好多记录几天。如果这个人收益几天内浮动很小，说明他没有邀请奖励，只有探险鸡所得收益。那么按照最低利率1.22%计算（下文说明），大概可以推算出他的账户有多少资金。&lt;/p&gt;
&lt;p&gt;总之，存着闪电收益，有利于回本周期正常。平台给出的回本周期是15-22天。&lt;/p&gt;
&lt;p&gt;*不知道上述计算方法是否准确，欢迎指正。&lt;/p&gt;
&lt;h3 id=&quot;三关于利息及回本前后的收益计算&quot;&gt;三、关于利息及回本前后的收益计算&lt;/h3&gt;
&lt;p&gt;对于刚入行前三四天的用户，收益确实高，确实可观。但越往后，收益逐渐减少。平台的计息方式大概是参考银行的定期理财年化率和定期存款利率作为参考。&lt;/p&gt;
&lt;p&gt;回本前收益率可能达到6%-10%&lt;/p&gt;
&lt;p&gt;回本后比银行定期存款利率最低1.1%要高一些，大概后本后期在1.2-4%。&lt;/p&gt;
&lt;p&gt;按照排行榜第二投资18000元买6000只探险鸡，每天净赚最低220元计算：&lt;/p&gt;
&lt;p&gt;220/18000&lt;em&gt;365/365&lt;/em&gt;100%=1.22%&lt;/p&gt;
&lt;p&gt;比银行最低利率1.1%高一些。这是按照最低率计算，浮动利率在1.2-4%。&lt;/p&gt;
&lt;p&gt;这是按照最低的收益计算，如果回本后，不提现，还可以实现复利，毕竟现在闪电价格每天都增加1%-1.3%。100块钱，放一天涨息1块钱，1000块钱就是10块钱一天利息，1万块钱就是每天100多块钱的利息。比把钱买银行理财产品划算的多，甩活期存款几条街。&lt;/p&gt;
&lt;p&gt;为什么要计算利息和回本后的利息，因为平台不是资金盘的前提下，调整收益才是正常的，如果一直都是高息，那么平台就是资金盘，所以后期和回本后的收益减少是必然结果，大家可以根据自己的投入的本金，按照最低利率计算自己最低收益。&lt;/p&gt;
&lt;h3 id=&quot;四错误操作-导致回本周期延长的补救方法&quot;&gt;四、错误操作 导致回本周期延长的补救方法&lt;/h3&gt;
&lt;p&gt;如果刚得知个人总账户金额会影响回本周期的关系。前期可能天天提现，把账户清零，那么回本周期可能要超过1个月，后面的利息也会随之减少。补救方法，只能通过复投买鸡或者买仓，保留收益不提现至达到回本金额。后期可以利滚利也可以少量提现。&lt;/p&gt;
&lt;p&gt;这时候买探险鸡或买仓库，买任何一种效果是一样的。因为你的探险收益是按照你投入的总金额和账户留存的金额计算的。买不了鸡就买仓库，就这么简单。&lt;/p&gt;
&lt;p&gt;另外，在闪电鸡平台经常购物，都能返一定额度的闪电，也可以间接的增加闪电账户总额度，并产生利息，把花的钱多多少少回一些本。关于平台消费对探险鸡的探险数据是否有帮助，现在没有充分的例子证明。&lt;/p&gt;
&lt;h3 id=&quot;五关于提现-何时提现&quot;&gt;五、关于提现 何时提现&lt;/h3&gt;
&lt;p&gt;前面阐述了回本后再提现，回本稳定。不过中间可以尝试2笔小额提现，大概总金额的10%。或许很多人担心平台会跑路，现在只能这样说，几率很小。下面会介绍平台总流水，是可以支撑平台健康运营的。&lt;/p&gt;
&lt;p&gt;把收益存着不提现，涨利息收益也很客观，存的越多，利息越多（上面已阐述）。微信和支付宝都支持提现，最好选择支付宝提现，到账最快。&lt;/p&gt;
&lt;p&gt;2019年2月18日 目前平台仅能支付宝提现，微信提现恢复未知。支付宝大额提现现在也是秒到账。今天有个3000鸡的大佬，一次提了900多，秒到账。或许支付宝提现，没有50元以下才能秒到账之说。支付宝提现一直很稳定。之前微信提现，经常有延迟提现单，最多延迟3天。所以尽量使用支付宝提现。如有支付宝提现也有延迟，最多不超过3天。平台提现一直很稳定。&lt;/p&gt;
&lt;h3 id=&quot;六闪电价格增长的因素与平台营收的计算&quot;&gt;六、闪电价格增长的因素与平台营收的计算&lt;/h3&gt;
&lt;p&gt;闪电价格的增长与用户淘宝消费和用户在平台上的投入成正比。用户消费和投资越多，闪电价格的增长越多。从而可以根据闪电价值的增长，计算出平台当天的营收。以下算法由闪电排行榜老二提供&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1220420/201903/1220420-20190303235351637-1943087724.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mmbiz.qpic.cn/mmbiz_png/Y9DSf18veefISXyyXnLVJ9psJChgn6ibUyg0RuUD7LqKrO2TibwKk7OcWXchJ4dIicTzktILgeRdUWAdxA2SoCrDQ/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; class=&quot;uri&quot;&gt;https://mmbiz.qpic.cn/mmbiz_png/Y9DSf18veefISXyyXnLVJ9psJChgn6ibUyg0RuUD7LqKrO2TibwKk7OcWXchJ4dIicTzktILgeRdUWAdxA2SoCrDQ/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（0.0049591472-0.0048924170）/0.0000001%≈67万总营收&lt;/p&gt;
&lt;p&gt;0.0000001%是与人民币1:1同价兑换，就跟你有多少闪电就有多少钱一样。&lt;/p&gt;
&lt;p&gt;平台当天总营收达到67万元。有兴趣的大家可以算一算昨天的营收.&lt;/p&gt;
&lt;p&gt;67万一天的营收，完全可以支撑平台运营了。排行榜上的大佬们应该都知道这个算法，所以才敢把钱存在平台中，吃利息。如果能知道一天纯利润就更好了。&lt;/p&gt;
&lt;h3 id=&quot;七小鸡兑换闪电的价格降低与闪电价的增长&quot;&gt;七、小鸡兑换闪电的价格降低与闪电价的增长&lt;/h3&gt;
&lt;p&gt;小鸡兑换闪电价格是在千分位减少，闪电价格是在万分位上增长。之前的文章里进行过计算，小鸡兑换闪电价格降值是闪电增长的3.3倍。如果想捞回3.3倍的损失，可以在3.3天后收回损失。要想赚，那就多存几天。这也就成了收益存的越多，利息越多。这种感觉跟前面提到的“回本后再提”是一个路子。不得不佩服平台的算法之精。&lt;/p&gt;
&lt;h3 id=&quot;八新手建议-无需纠结买仓还是买鸡&quot;&gt;八、新手建议 无需纠结买仓还是买鸡&lt;/h3&gt;
&lt;p&gt;或许都在纠结，我买多少鸡，配多少仓库。怎么配比才能利益最大化。前面说了，买鸡和买仓都一样，收益是跟你投入的本金有关系。探险鸡的数量，仓库量，探险鸡带回小鸡的数量及频率，都是游戏心理。&lt;/p&gt;
&lt;p&gt;如果你打算只想买探险鸡，只想买100只探险鸡，那么就先刷仓库，购买0.1元的订单进行扩仓，刷到8000以上仓库，自动派遣时间刷到4-6个小时后，再买探险鸡。刷时间可以进一个200以上的群，互扫几天，很容易累积到6小时以上。&lt;/p&gt;
&lt;p&gt;300只鸡，排行榜老二给的数据是买900块钱买2万仓库。你们参考下。&lt;/p&gt;
&lt;p&gt;每人只能买300只探险鸡，鸡买不了就买仓库，效果是一样的。排行榜308鸡的用户，数据一直稳如泰山，就是买仓库的。&lt;/p&gt;
&lt;p&gt;购买0.1元的商品扩仓，可以为你以后增加探险鸡数量做准备。现在没有足够的例子证明刷仓会影响探险鸡带回小鸡的数量。&lt;/p&gt;
&lt;p&gt;如果一天天时刻盯着探险鸡带回小鸡的数量稍微有些改动，就觉得自己的探险鸡得“鸡瘟”了。非常不开心。其实没有必要。因为每一个时间段，探险鸡带回小鸡的数量是有差距的。&lt;/p&gt;
&lt;p&gt;只要晚上不跑鸡，收益等回本再提或者回本后提小额，总能回本，还能继续赚。记住探险鸡的数据都是游戏，你的收益跟你投入的本金成正比。&lt;/p&gt;
&lt;h3 id=&quot;九师徒系统与探险鸡系统&quot;&gt;九、师徒系统与探险鸡系统&lt;/h3&gt;
&lt;p&gt;拜师收徒，师徒系统是跟淘宝返利挂钩，推广收徒是赚徒弟购物返利的钱。探险鸡系统只跟探险数据挂钩，也可以通过分享赚钱。两个系统获得的徒弟收益不重叠，除非他是你邀请注册的，也拜你为师了，前提你要出师。&lt;/p&gt;
&lt;p&gt;师徒系统所获得的徒弟购物返佣奖励，在徒弟确认收货后收益结算至【我的余额】探险鸡系统收益结算在【我的闪电】中结算。&lt;/p&gt;
&lt;p&gt;拜师不花钱，若想出师，需要购买价值399元的出师礼包。其实师徒系统才是平台重点想推广的。平台的盈利点是淘宝返佣，探险鸡游戏只是引流方式。&lt;/p&gt;
&lt;h3 id=&quot;十关于新增鸡蛋仓-怎么看&quot;&gt;十、关于新增鸡蛋仓 怎么看？&lt;/h3&gt;
&lt;p&gt;目前只清楚 鸡蛋孵化量跟你的收蛋量有关系。你收的鸡蛋越多，孵化的越多。鸡蛋仓库够你用就行。以后再补充。&lt;/p&gt;
&lt;p&gt;总结：操作规范，回本第一。&lt;/p&gt;
&lt;h3 id=&quot;十一联系我&quot;&gt;十一、联系我&lt;/h3&gt;
&lt;p&gt;加微信：zl18872849618，加入闪电鸡互扫群&lt;/p&gt;
&lt;p&gt;闪电鸡微信识别二维码下载：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1220420/201903/1220420-20190303234158658-1236071490.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mmbiz.qpic.cn/mmbiz_png/WUodTDPB6EInAPuBb944ia0nVc5X67RStk33UlClRkB9geib4njd9zlYHZg0E0bCk1yvJVXntzYWM8ic1o2uT6s0A/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; class=&quot;uri&quot;&gt;https://mmbiz.qpic.cn/mmbiz_png/WUodTDPB6EInAPuBb944ia0nVc5X67RStk33UlClRkB9geib4njd9zlYHZg0E0bCk1yvJVXntzYWM8ic1o2uT6s0A/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&lt;/a&gt;[]&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 15:41:00 +0000</pubDate>
<dc:creator>张林-布莱恩特</dc:creator>
<og:description>闪电鸡购物APP本质就是一家淘宝客平台，后来平台加入了探险鸡养鸡模块，上线了扩散奖励，以高回报率诱人，才有了今天爆发式的增长</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhangmumu/p/10468496.html</dc:identifier>
</item>
<item>
<title>Azure Devops/Tfs 编译的时候自动修改版本号 - LeoLaw</title>
<link>http://www.cnblogs.com/leolaw/p/10468393.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/leolaw/p/10468393.html</guid>
<description>&lt;p&gt;看到阿迪王那边出品了一个基于Azure Devops自增版本号  链接 &lt;a title=&quot;http://edi.wang/post/2019/3/1/incremental-build-number-for-net-core-via-azure-devops&quot; href=&quot;http://edi.wang/post/2019/3/1/incremental-build-number-for-net-core-via-azure-devops&quot;&gt;http://edi.wang/post/2019/3/1/incremental-build-number-for-net-core-via-azure-devops&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;恰巧我自己也有一个版本（虽然核心原理是差不多的）也分享下&lt;/p&gt;

&lt;p&gt;（以下均基于Tfs 2018的截图，Azure Devops Server暂时还没发布，只能Tfs将就着了，虽然Azure Devops跟当前的Tfs 2018已经界面有&quot;一些&quot;改动不过流程是相通）&lt;/p&gt;

&lt;p&gt;先说下我们的场景，我们使用Tfs来进行发布，所以我希望做到一个事情是Tfs里Release的版本号能跟我dll的版本号对应上，这样便于版本的对应和关联（实际上我们站点在启动的时候还会上报版本号到exceptionless，假如有机器漏发布了我们就能知道）&lt;/p&gt;
&lt;p&gt;看下我们的最终效果，每次Tfs发布之后，都会改变我当前项目产生的dll的版本号，并且这个版本号（4位的）的其中后2位一定跟Tfs里的生成号一样，而Tfs的生成好的第三位是当前的月份和日期，第四位是当天build的次数&lt;/p&gt;
&lt;p&gt;首先我能将版本号和发布或者说编译关联，其次我也能知道当天到底编译了几次&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231704784-537136980.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231705355-1425352124.png&quot; alt=&quot;image&quot; width=&quot;800&quot; height=&quot;309&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;先说2个前置知识&lt;/p&gt;
&lt;p&gt;①Azure Devops里预定义的变量 &lt;a title=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;amp;tabs=yaml&quot; href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;amp;tabs=yaml&quot;&gt;https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;amp;tabs=yaml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;②通过Powershell如何读取Azure Devops里CI/CD的变量呢？ 直接 $Env.变量名  （注意，他预定义变量名里有时候会有英文句号. 要将其转为下划线，如Build.BuildNumber你要读取的时候应该是 $Env.Build_BuildNumber)&lt;/p&gt;

&lt;p&gt;再说说.Net里的文件版本号的是怎么来的，主要有Framework和Core两个体系，因为我们两种项目都有（当前还是Framework是大头）所以2个都要支持&lt;/p&gt;
&lt;p&gt;Framework，主要是在项目的Properties文件夹里的AssemblyInfo.cs定义&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231705662-2035531562.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231705895-411063906.png&quot; alt=&quot;image&quot; width=&quot;209&quot; height=&quot;83&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231706136-1579583440.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231706420-61917605.png&quot; alt=&quot;image&quot; width=&quot;365&quot; height=&quot;175&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Core，主要是项目里的csproj&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231706648-1578151764.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231706912-1646701744.png&quot; alt=&quot;image&quot; width=&quot;425&quot; height=&quot;89&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;顺带我再加上一个自己的假设，在这些配置文件夹里只有我们的版本号会是正则表达式为 .\d+.\d+.\d+.\d+(也就是x.x.x.x)的规则，我只要用正则找出他替换就行了。&lt;/p&gt;

&lt;p&gt;等下，好像哪里不对劲。&lt;/p&gt;
&lt;p&gt;在core的csproj里因为还管着nuget的引用，所以里面会有他引用的nuget包信息，所以此时他里面可能会有这些内容&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231707185-653621065.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231707403-1963396380.png&quot; alt=&quot;image&quot; width=&quot;471&quot; height=&quot;102&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;于是在core项目里，我们是将version统一抽走到要给独立的props文件里&lt;/p&gt;

&lt;p&gt;搞一个props文件，类似这样&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231707702-1290900359.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231707964-1419942179.png&quot; alt=&quot;image&quot; width=&quot;490&quot; height=&quot;186&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后在你的项目导入你的props&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231708234-626590932.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231708433-1593852408.png&quot; alt=&quot;image&quot; width=&quot;382&quot; height=&quot;76&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;其实这样子之后，比如如我截图里的，我在里面定义了我项目使用C# 7.2，那么我所有项目都跟着是7.2，我定义了打包带symbol就所有都带，统一了配置，也更好一些（个人感觉）&lt;/p&gt;

&lt;p&gt;然后就是上powershell(这段powershell并非我原创，也不记得很久前哪里找来的了，然后稍加修改后一直使用至今）&lt;/p&gt;
&lt;div id=&quot;scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:88bee558-ac5d-455e-9118-81a424e3a048&quot; class=&quot;wlWriterEditableSmartContent&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
# Enable -Verbose option
[CmdletBinding()]

# Regular expression pattern to find the version in the build number 
# and then apply it to the assemblies
$VersionRegex = &quot;(?&amp;lt;=\d+\.\d+\.)\d+\.\d+&quot;


# Make sure path to source code directory is available
if (-not $Env:BUILD_SOURCESDIRECTORY)
{
    Write-Error (&quot;BUILD_SOURCESDIRECTORY environment variable is missing.&quot;)
    exit 1
}
elseif (-not (Test-Path $Env:BUILD_SOURCESDIRECTORY))
{
    Write-Error &quot;BUILD_SOURCESDIRECTORY does not exist: $Env:BUILD_SOURCESDIRECTORY&quot;
    exit 1
}
Write-Verbose &quot;BUILD_SOURCESDIRECTORY: $Env:BUILD_SOURCESDIRECTORY&quot;

# Make sure there is a build number
if (-not $Env:BUILD_BUILDNUMBER)
{
    Write-Error (&quot;BUILD_BUILDNUMBER environment variable is missing.&quot;)
    exit 1
}
Write-Verbose &quot;BUILD_BUILDNUMBER: $Env:BUILD_BUILDNUMBER&quot;

# Get and validate the version data
$VersionData = [regex]::matches($Env:BUILD_BUILDNUMBER,$VersionRegex)
switch($VersionData.Count)
{
   0        
      { 
         Write-Error &quot;Could not find version number data in BUILD_BUILDNUMBER.&quot;
         exit 1
      }
   1 {}
   default 
      { 
         Write-Warning &quot;Found more than instance of version data in BUILD_BUILDNUMBER.&quot; 
         Write-Warning &quot;Will assume first instance is version.&quot;
      }
}
$NewVersion = $VersionData[0]
Write-Verbose &quot;Version: $NewVersion&quot;


# Apply the version to the assembly property files
$commonPropsFiles = Get-ChildItem -include common.props,AssemblyInfo.cs  -recurse
if($commonPropsFiles)
{
    Write-Verbose &quot;Will apply $NewVersion to $($commonPropsFiles.count) files.&quot;

    foreach ($file in $commonPropsFiles) {
        $filecontent = Get-Content($file)
         attrib $file -r
                 Write-Host $NewVersion
        $filecontent -replace $VersionRegex, $NewVersion | Out-File $file
        Write-Verbose &quot;$file.FullName - version applied&quot;

    }
}
else
{
    Write-Warning &quot;Found no commonPropsFiles.&quot;
}
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;这段powershell可以弄成一个.ps1文件放到Azure Devops里然后引用&lt;/p&gt;
&lt;p&gt;如&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231708670-1227348975.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231708913-1550442172.png&quot; alt=&quot;image&quot; width=&quot;525&quot; height=&quot;304&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意使用的时候一定要在高级里配置”工作文件夹”到你项目根目录（一般是csproj所在文件夹）&lt;/p&gt;

&lt;p&gt;或者直接用Powershell Inline&lt;/p&gt;
&lt;p&gt;也就是阿迪王分享的博客里的直接将powershell贴入到里面去执行的那个方法&lt;/p&gt;

&lt;p&gt;两者效果一样&lt;/p&gt;

&lt;p&gt;然后在Azure Devops里下其生成的版本号规则，即可完成匹配&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231709128-1461198491.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231709359-1738488131.png&quot; alt=&quot;image&quot; width=&quot;409&quot; height=&quot;312&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后在进行编译的时候你就能看到你的版本号被修改拉&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231709648-1086800292.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/658343/201903/658343-20190303231709950-2053539643.png&quot; alt=&quot;image&quot; width=&quot;682&quot; height=&quot;351&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 15:17:00 +0000</pubDate>
<dc:creator>LeoLaw</dc:creator>
<og:description>看到阿迪王那边出品了一个基于Azure Devops自增版本号 链接 http://edi.wang/post/2019/3/1/incremental-build-number-for-net-co</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/leolaw/p/10468393.html</dc:identifier>
</item>
<item>
<title>不一样的go语言之入门篇-Hello World - Laud</title>
<link>http://www.cnblogs.com/laud/p/go_helloworld.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/laud/p/go_helloworld.html</guid>
<description>&lt;p&gt;  这是《不一样的go语言》的开篇之作，我尝试以非go语言转变者的角度来聊一聊go语言。所以今天先从go语言的基础开始，即语法。&lt;/p&gt;
&lt;p&gt;  学习一门新的编程语言，必从语法开始。但需要注意的是，对于一个有大量项目经验的程序员来说，可能看完语言介绍或者看完Hello World之后，就着急地想着上手写个小东东玩玩，比如写个简单的web服务。但是将一门新的语言应用到实际项目中需要的东西很多很多。诸如go语言的项目结构是怎么样的？有没有什么约定？用什么IDE？依赖是怎么管理的？项目是怎么构建的？是怎么发布的？如果带着这么多的思想负担去学习一门新语言，这个时间花费恐怕会得不偿失。&lt;/p&gt;
&lt;p&gt;  因而我觉得回归本真最好不过。回到C语言的时代，面向过程、面向单文件编程。所以的代码放在一个文件里，使用命令行编译、运行。&lt;/p&gt;
&lt;p&gt;  接下来的示例，就是go语言版的Hello World。新建文件main.go&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[eventer@localhost]# vi main.go&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后敲入以下代码：&lt;/p&gt;
&lt;pre class=&quot;go&quot;&gt;
&lt;code&gt;package main

import &quot;fmt&quot;

func main() {
    fmt.Println(&quot;Hello World!&quot;)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;  要编译、运行这段代码，需要安装go sdk。伟大的先驱者们，已经为我们开辟了绿色通道。sdk及官方文档都可以在&lt;a href=&quot;https://studygolang.com/&quot;&gt;go 语言中文网&lt;/a&gt;找到，目前go语言的最新版本是1.11。&lt;/p&gt;
&lt;p&gt;  一个题外话，go语言从1.5版本开始实现自举（Bootstrap，用要编译的目标编程语言编写其编译器或汇编器），也就是用go语言写编译器，然后用来编译go语言写的代码。因此当你需要从go1.5的源码来构建go sdk的话，需要先下载安装go1.4或者使用gcc构建go1.4的源码，当你有go1.4的go编译器的时候，就可以用它来编译go1.5的源码，从而得到go语言版的编译器。&lt;/p&gt;
&lt;p&gt;go sdk: &lt;a href=&quot;https://studygolang.com/dl&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  下载安装之后，设置&lt;strong&gt;GOROOT&lt;/strong&gt;环境变量为go sdk所在目录，然后设置一个工作目录的环境变量&lt;strong&gt;GOPATH&lt;/strong&gt;，用于存放未来要用到第三方包及你的程序。&lt;/p&gt;
&lt;p&gt;  至此，你可以使用以下命令编译、运行上面那段代码了。&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[eventer@localhost]# go run main.go&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;  波澜不惊，可是一个Hello World 能看出什么来呢？那还是让我们来看看各大语言的 Hello World 是长什么样的吧。&lt;/p&gt;
&lt;p&gt;Java版&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.eventer.test;

import java.lang;

public class Test {
    public static void main(String[] args) {
        System.out.Println(&quot;Hello World!&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Python版&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;print &quot;Hello World!\n&quot;;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;C语言版&lt;/p&gt;
&lt;pre class=&quot;c&quot;&gt;
&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void main() {
    printf(&quot;Hello World!\n&quot;);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;C++版&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;#include &amp;lt;iostream&amp;gt;

void main() {
    using namespace std;
    cout &amp;lt;&amp;lt; &quot;Hello World!\n&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;nodejs版&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;console.log('Hello World!');&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;C#版&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;using System;

public class HelloWorld
{
    public static void Main()
    {
        Console.WriteLine(&quot;Hello World&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Common Lisp 版&lt;/p&gt;
&lt;pre class=&quot;lisp&quot;&gt;
&lt;code&gt;(print &quot;Hello World&quot;);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Lua 版&lt;/p&gt;
&lt;pre class=&quot;lua&quot;&gt;
&lt;code&gt;print &quot;Hello World!/n&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;  从这么来看，go没有更简洁也没有更复杂。所以确实从一个 Hello World 来看一门语言，真的看不出什么来。当然设计一门语言也不是从 Hello World 来开始设计的。可以得出结论，Hello World只是为了让你觉得写个 Hello World挺简单的，赶快麻利地搭建环境吧。&lt;/p&gt;
&lt;p&gt;  下一篇将详细地讲述go语言更多地语法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jobbole.com/93905/&quot;&gt;Hello World来自哪里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.csdn.net/article/2012-11-22/2812113-The-Nature-Of-Lisp&quot;&gt;Lisp的本质&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 15:13:00 +0000</pubDate>
<dc:creator>Laud</dc:creator>
<og:description>  这是《不一样的go语言》的开篇之作，我尝试以非go语言转变者的角度来聊一聊go语言。所以今天先从go语言的基础开始，即语法。   学习一门新的编程语言，必从</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/laud/p/go_helloworld.html</dc:identifier>
</item>
<item>
<title>记laravel5.5项目php-fpm迁移到swoole4.2.9 - 自由TK</title>
<link>http://www.cnblogs.com/wscsq789/p/10468268.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wscsq789/p/10468268.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;事起说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;        最近对上线半年多的laravel项目做了一次少大的改动，由php-fpm改为swoole，这里做个记录。&lt;/p&gt;
&lt;p&gt;       2019年过年前半个月，上阿里云后台查看前一天的访问请求日志，发现很多接口响应慢。翻了前几天的日志，发现不少响应慢的接口，包括app首页资讯、文章列表、文章详情等所有和cms相关的接口。想着最近没上线过什么新功能，怎么最近变慢好多。阿里云后台查看nginx错误日志，上服务器看php-fpm错误日志。发现和上次php-fpm优化报的同样错误信息。时间点差不多都吻合，大都是push发出后的那几分钟。用户大都在开盘那会打开咱们公司的APP了，虽然公司这款app不做期货交易，黄金交易，但接口响应这么慢，严重影响用户体验！（下图是阿里云后台看到的日志信息）因为临近过年不想有大改动，向公司临时申请加一台服务器，配置好调试上生产负载均衡。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303165143081-1380715721.png&quot; alt=&quot;&quot; width=&quot;863&quot; height=&quot;447&quot;/&gt;&lt;/p&gt;


&lt;p&gt;       过完年后，刚开工，需求不多。想着要优化系统，自己ab压测一下测试环境的接口，接口tps110多，有点低。参考网上的laravel框架优化资料（https://learnku.com/articles/5088/optimize-laravel-site-to-open-speed），照着改了tps上升到120左右，没起到什么起作用。&lt;/p&gt;
&lt;p&gt;       在公司技术群里咨询下，有人建议用swoole+laravel，网上说做得好性能可以十倍以上的提升。又上github搜索swoole+laravel，选用别人已经集成好的，最后选用laravels(https://segmentfault.com/a/1190000013358289?utm_source=tag-newest)。&lt;/p&gt;
&lt;p&gt;      开发机安装swoole扩展，composer拉取laravels包(折腾好会，这里就不表述了)。&lt;/p&gt;
&lt;p&gt;      原来http请求到达web服务器，服务器nginx将请求转发给php-fpm，让php-fpm管理进程对php程序读取解析并返回。使用 swoole会接管php-fpm要做这部分事情。&lt;/p&gt;
&lt;p&gt;     nginx配置更改如下(nginx监听接收88端口的请求并转发本机5200端口，如果是php-fpm，默认本机9000端口接收)：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;gzip on;
gzip_min_length &lt;/span&gt;&lt;span&gt;1024&lt;/span&gt;&lt;span&gt;;
gzip_comp_level &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;;#返回结果的压缩比，数值越高压缩的越小但更消耗CPU，但不一定有更高的压缩率╥﹏╥
gzip_disable &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;msie6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
upstream laravels {
　　# 通过 IP:Port 连接&lt;br/&gt;# 通config/laravels.php中listen_ip listen_port保持一致
　　server &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;5200 &lt;/span&gt;weight=&lt;span&gt;5&lt;/span&gt; max_fails=&lt;span&gt;3&lt;/span&gt; fail_timeout=&lt;span&gt;30s;
　　keepalive &lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt;;
}

server {
　　&lt;/span&gt;&lt;span&gt;listen &lt;/span&gt;&lt;span&gt;88&lt;/span&gt;&lt;span&gt;; 
　　server_name test&lt;/span&gt;-cms.xxxx.com&lt;span&gt;;
　　root &lt;/span&gt;/alidata/www/test-cms.xxx.com/&lt;span&gt;public&lt;/span&gt;&lt;span&gt;;
　　&lt;/span&gt;&lt;span&gt;access_log &lt;/span&gt;/alidata/logs/nginx/test-&lt;span&gt;cms.xxx.com.log;
　　error_log &lt;/span&gt;/alidata/logs/nginx/test-cms.xxx.com-&lt;span&gt;error.log;
　　charset utf&lt;/span&gt;-&lt;span&gt;8&lt;/span&gt;&lt;span&gt;;
　　location &lt;/span&gt;/&lt;span&gt; {
　　　　try_files $uri @laravels;
　　}
　　location @laravels {
　　　　proxy_http_version &lt;/span&gt;&lt;span&gt;1.1&lt;/span&gt;&lt;span&gt;;
　　　　proxy_set_header Connection &lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
　　　　proxy_set_header X&lt;/span&gt;-Real-&lt;span&gt;IP $remote_addr;
　　　　proxy_set_header X&lt;/span&gt;-Real-&lt;span&gt;PORT $remote_port;
　　　　proxy_set_header X&lt;/span&gt;-Forwarded-&lt;span&gt;For $proxy_add_x_forwarded_for;
　　　　proxy_set_header Host $http_host;
　　　　proxy_set_header Scheme $scheme;
　　　　proxy_set_header Server&lt;/span&gt;-&lt;span&gt;Protocol $server_protocol;
　　　　proxy_set_header Server&lt;/span&gt;-&lt;span&gt;Name $server_name;
　　　　proxy_set_header Server&lt;/span&gt;-&lt;span&gt;Addr $server_addr;
　　　　proxy_set_header Server&lt;/span&gt;-&lt;span&gt;Port $server_port;
　　　　proxy_pass http:&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;laravels;&lt;/span&gt;
　　&lt;span&gt;}
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;      在修改config/laravels.php中配置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
    'listen_ip'                =&amp;gt; env('LARAVELS_LISTEN_IP', '127.0.0.1'),
    'listen_port'              =&amp;gt; env('LARAVELS_LISTEN_PORT', 9527),
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;运行和排查&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&lt;span class=&quot;cnblogs_code&quot;&gt;php bin/laravels {start|stop|restart|reload|info|help}&lt;/span&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;再根据laravels命令:&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;命令&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td&gt;start&lt;/td&gt;
&lt;td&gt;启动LaravelS，展示已启动的进程列表 &quot;&lt;em&gt;ps -ef|grep laravels&lt;/em&gt;&quot;。支持选项 &quot;&lt;em&gt;-d|--daemonize&lt;/em&gt;&quot; 以守护进程的方式运行，此选项将覆盖&lt;code&gt;laravels.php&lt;/code&gt;中&lt;code&gt;swoole.daemonize&lt;/code&gt;设置；支持选项 &quot;&lt;em&gt;-e|--env&lt;/em&gt;&quot; 用来指定运行的环境，如&lt;code&gt;--env=testing&lt;/code&gt;将会优先使用配置文件&lt;code&gt;.env.testing&lt;/code&gt;，这个特性要求&lt;code&gt;Laravel 5.2+&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;stop&lt;/td&gt;
&lt;td&gt;停止LaravelS&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;restart&lt;/td&gt;
&lt;td&gt;重启LaravelS，支持选项 &quot;&lt;em&gt;-d|--daemonize&lt;/em&gt;&quot; 和 &quot;&lt;em&gt;-e|--env&lt;/em&gt;&quot;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;reload&lt;/td&gt;
&lt;td&gt;平滑重启所有Task/Worker进程，这些进程内包含了你的业务代码，不会重启Master/Manger/Timer/Custom进程&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;info&lt;/td&gt;
&lt;td&gt;显示组件的版本信息&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;help&lt;/td&gt;
&lt;td&gt;显示帮助信息&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;     如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303221112727-1673655065.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;       再用上压测机用apache jmeter试了下，50的并发压测半分钟，结果显示性能提升很大哦^_^：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303222029232-1067074679.png&quot; alt=&quot;&quot; width=&quot;531&quot; height=&quot;204&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303222002372-2103545435.png&quot; alt=&quot;&quot; width=&quot;842&quot; height=&quot;202&quot;/&gt;&lt;/p&gt;
&lt;p&gt;       再上100的并发压测：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303222426533-1791098157.png&quot; alt=&quot;&quot; width=&quot;533&quot; height=&quot;223&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303222459674-743765731.png&quot; alt=&quot;&quot; width=&quot;838&quot; height=&quot;231&quot;/&gt;&lt;/p&gt;
&lt;p&gt;       没什么提升，再看系统负载不高啊，为啥tps上不去？ &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303222843090-1836510801.png&quot; alt=&quot;&quot; width=&quot;855&quot; height=&quot;278&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303223031021-1458189533.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;     在排查此问题时，在接口加了时间间隔打印。&lt;/p&gt;
&lt;p&gt;     期间一直没找出问题出在哪，截图压测的几个接口都是从redis获取数据，不会读取mysql的。&lt;/p&gt;
&lt;p&gt;     网上有人说可能是swoole的redis链接未释放导致的。&lt;/p&gt;
&lt;p&gt;     可问题是我这里虽然redis链接句柄用的是class静态变量保存，但是redis是短连接，代码的变量不应该在请求结束就释放了吗？&lt;/p&gt;
&lt;p&gt;     如果是用redis长链接可能导致异常，但像我这正常不会有redis链接未释放的问题啊，查看swoole和laravel错误日志也未找到redis的报错信息。&lt;/p&gt;
&lt;p&gt;     第二天，忽然想到一位前同事，swoole用的很溜的，请教他后，让我把config/laravels.php的两个参数设置大一些。原来是系统内核数乘2，现在改成系统内核数乘12&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303224330698-436344876.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;     继续压测100的线程数：&lt;/p&gt;
&lt;p&gt;     tps上到1200了非常激动&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1441404/201903/1441404-20190303224453275-1792486830.png&quot; alt=&quot;&quot; width=&quot;819&quot; height=&quot;230&quot;/&gt;&lt;/p&gt;
&lt;p&gt;     在该同事想看看更高性能意见后，改成200线程数，400线程数，tps越来越大，系统负载也越来越高，接近极限，最后达到2200。&lt;/p&gt;
&lt;p&gt;     期间发生一个小插曲，200线程组改成400线程组后，发现tps竟然达到7000多，真是把我两乐坏了，后来看下没有重启swoole服务，接口直接报错。。。&lt;/p&gt;
&lt;p&gt;    &lt;span&gt;所以在此提醒下，任何更改php代码的行为，都需要重启swoole服务才能生效！！！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  &lt;span&gt; 夜深了，明天要上班就不写了。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;   未完待续，下篇接着更！！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 03 Mar 2019 14:56:00 +0000</pubDate>
<dc:creator>自由TK</dc:creator>
<og:description>事起说明 最近对上线半年多的laravel项目做了一次少大的改动，由php-fpm改为swoole，这里做个记录。 2019年过年前半个月，上阿里云后台查看前一天的访问请求日志，发现很多接口响应慢。翻</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wscsq789/p/10468268.html</dc:identifier>
</item>
<item>
<title>我为什么要写博客 - 五色花的</title>
<link>http://www.cnblogs.com/luao/p/10468226.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/luao/p/10468226.html</guid>
<description>&lt;h2 id=&quot;序言&quot;&gt;序言&lt;/h2&gt;
&lt;p&gt;从开始有写技术博客（这里指技术博客）的想法到真正的开始写，经历了漫长的时间，大约两年有余。从决定要写博客到真正的开始行动大约经历了两个月的时间，为什么从有想法到付诸实施会经历这么漫长的时间，到底要不要写，为什么要写，能给自己或他人带来什么，怎么写，纠结了很长时间。最终还是决定要有一个自己学习总结的一个能够沉淀下来的东西，想到还是用博客的方式来记录比较好。于是决定了博客一定是要写的，采用独立的站点域名还是在技术博客上注册自己的博客空间，对于这个问题自己也经过一番调研，甚至连VPS和域名已经购买好了，毅然放弃采用独立站点，而是在博客园开通了博客空间。主要有如下这些原因使我决定在博客园开通空间。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;VPS和域名每年都会有固定的费用支出，需要花费时间和金钱去维护网站系统。当然去搭建一个博客系统对自己来说没有什么技术难题，网上成熟的博客系统很多，如WordPress 和Hexo等。&lt;/li&gt;
&lt;li&gt;重要的是独立的站点和域名，在内容不是特别优秀的情况下很难被搜索引擎找到，或者说博文被搜索到的几率非常低。对于以学习、分享、探讨为目的写博文来说是非常不利的。因为别人没有途径找到你的文章，或者说能看到你的文章入口非常有限。基于这些考虑，就放弃了独立建站的想法。&lt;/li&gt;
&lt;li&gt;放弃了独立站点之后，就开始调研技术论坛。如：CSDN、SegmentFault （思否）、cnblogs(博客园)，oschina（开源中国）等。第一感觉是选择CSDN 但是由于广告太多了于是就放弃了，选择了博客园，主要是博文质量高，广告少，还能一键推送到电子阅读器，呵呵。经过了漫长的过程终于开启了自己的博客生涯，希望未来时光能有幸和激友们(对生活充满激情的朋友)探讨技术、思考人生、登上人生巅峰。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;下边将主要围绕两个方面：为什么? 怎么做？ 对本文进行阐述。&lt;/p&gt;
&lt;h2 id=&quot;我为什么要写&quot;&gt;我为什么要写？&lt;/h2&gt;
&lt;p&gt;为什么要写也就是写博客能给自己带来什么好处或者给别人带来的好处，因为写博文会花费大量的时间和精力，如果两者都不能带来，那么做这件事也就没有什么意义了。写博文，需要总结和思考。有时候我们一直在赶路，却忘了放慢脚步，回顾和总结最近所学的和使用的技术，他们之间是否有联系，如何能更好的服务于工作和生活。需要花费时间来思考，认真思考之后写出来走心的文章，往往能引起共鸣。&lt;/p&gt;
&lt;h2 id=&quot;该如何去写&quot;&gt;该如何去写？&lt;/h2&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;自学或者工作中用到的某一块的技术知识以及衍生出的知识点。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;验证学习过的知识，确保理论值与实践值的一致性。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;构思博客的重点、实例代码、配图等，写出文章，进行排版，最后发表。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;对网友提问进行回复。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;总结为： 学习 、思考 、总结 、 提升&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;冰冻三尺非一日之寒写博客也是短期内可能看不到效果但是长期坚持对自己的提升很有帮助&quot;&gt;冰冻三尺非一日之寒，写博客也是，短期内可能看不到效果，但是长期坚持，对自己的提升很有帮助。&lt;/h2&gt;
&lt;p&gt;【本文只代表个人观点，如有不同观点 欢迎留言交流】&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 14:46:00 +0000</pubDate>
<dc:creator>五色花的</dc:creator>
<og:description>我为什么要写博客 序言 从开始有写技术博客（这里指技术博客）的想法到真正的开始写，经历了漫长的时间，大约两年有余。从决定要写博客到真正的开始行动大约经历了两个月的时间，为什么从有想法到付诸实施会经历这</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/luao/p/10468226.html</dc:identifier>
</item>
<item>
<title>《关于长沙.NET技术社区未来发展规划》问卷调查结果公布 - 溪源More</title>
<link>http://www.cnblogs.com/xiyuanMore/p/10468159.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiyuanMore/p/10468159.html</guid>
<description>&lt;p align=&quot;left&quot;&gt;　　2月，长沙.net 技术社区自从把群拉起来开始，做了一次比较正式、题目为《关于长沙.NET技术社区未来发展规划》的问卷调查，在问卷调查中，溪源写道：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　随着互联网时代的到来，互联网企业和传统企业对于人才的要求也越来越高。我们组建长沙.NET技术社区的目的，正是为了让大家能够更加直接的了解互联网技术发展的脉络，积极的投身到面向新时代互联网技术开发的浪潮中来。  参加社区的开发者们，大家虽然来自不同的城市，有的在外地打拼，有的留守故土，还有的愿意看着长沙社区茁壮成长。不管大家以前做过什么类型的工作，但此刻大家都有共同的标签，那就是.NET开发者。而.NET（包括.NET FX和.NET Core）这种技术，是一种非常优秀的技术，虽然在互联网时代屡屡丢失阵地，但是也同样充满了创新的精神，同样充满了潜力，能够值得大家进一步付出。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　2月中旬，我们长沙.NET社区已经成功的组建了两个群，总人数超过六百人。然而建群，并不是我们的目的，我们的目的依然是让大家实现技能的沉淀进一步提高自己的技术能力，分享自己的博客、技术分享以及参与开源项目的开发过程。同时我们也会组织一些社区活动，让大家从线上走到线下，一起学习那些感兴趣的新技术。       &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　这个问卷的目的，也是期待通过收集大家的意见，为后期社区其他活动的开展做一些基础准备工作。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　半个月的时间过去了，问卷的结果基本上已经出炉了，现将结果公布如下：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　首先是问卷的来源情况，在这次活动之前，我们有幸得到了来自全国各地的优秀开发者的大力捧场，所以在我们的微信群中，有许多不同地区的优秀开发者。通过问卷调查，我们可以看到，目前大部分都是来源于湖南本土的开发者居多，有将近6成都是目前在本地的开发者，除此之外，还有相当一部分都是身在异地，却心在湖南的开发者。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223320606-951669723.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt; 1、您是否对.NET和.NET Core持续关注，并广泛的应用到贵公司的项目中？&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223327895-114577563.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　在收到的150份问卷中，共有133份问卷选择了是，还有17份选择了否。目前共有将近九成网友选择了是。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　当然还有17位选择了否，只要是因为这道问题开始的设问存在缺陷，造成了不少被调查者选择了否之后就自动结束作答了。通过后期与一些开发者的交流，他们说虽然目前公司没有用到.NET，但是他们时时刻刻都在关注.NET的发展，并期待能够未来有机会将.NET应用到项目中。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　当然，这些开发者所在公司大部分都使用Java进行开发，这是一个逃不过去的问题，我们相信，随着.NET Core的发展，也许情况会有所改观。&lt;/p&gt;
&lt;h2&gt;2、我们对于社区的定性是知识分享和学习分享，您怎么看？&lt;/h2&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223333777-984617002.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;3、    您是否愿意参与社区建设？你愿意提供哪种形式的帮助？&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223346640-544466530.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4、    社区后期会举办一系列技术活动，您愿意积极参与么？&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223354889-1094562679.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;5、    您希望活动是收费的还是免费的？&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223402208-1068762523.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;6、   您是否愿意参与开源项目或者参与文档翻译、贡献技术文档？&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223409574-1291272570.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;7、    您期望社区能够举行哪些类型的技术活动？&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201903/191302-20190303223418257-840767652.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;8、    您贡献的项目或开源文档叫什么名字？方便提供您的git项目地址，让我们大家一起学习么？&lt;/p&gt;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;序号&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot;&gt;
&lt;p&gt;开源库地址&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://github.com/xiexingen&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://github.com/AClumsy&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot;&gt;
&lt;p&gt;https://github.com/scb&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot;&gt;
&lt;p&gt;http://github.com/sduo&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot;&gt;
&lt;p&gt;https://github.com/sdcb&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;https://github.com/xiao15111325694/LifeParagraph_Core_Dev&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot;&gt;
&lt;p&gt;Noerrornolife&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;432&quot;&gt;
&lt;p&gt;小黄豆CRM&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;　　然而。。长沙的参与开源项目的人实在是太少了，简直凤毛麟角。&lt;/p&gt;

&lt;p&gt;9、    您方便提供您自己的博客或公众号，以便让我们社区的其他开发者一起学习么？&lt;/p&gt;
&lt;p&gt;　　博客还是挺多的，但是。。好像都不太活跃啊。~&lt;/p&gt;

&lt;p&gt;10、 您的微信号以及对于长沙.NET社区，您有哪些想法么？您愿意给大家带来技术分享？&lt;/p&gt;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;30&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;序号&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot;&gt;
&lt;p&gt;开源库地址&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;1 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;慢慢来 组织好活动，技术交流技术分享技术落地&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;2 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;真正的能沉下心来深挖技术 推动.NET的生态发展和实现个人价值&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;3 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;希望能打造成一个好的技术社区而不是吹水社区，社区也可以把唐胡子的一些吹水、招聘群二维码贴出来，让大家去别的群闲聊 我愿意带来分享。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;4 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;希望社区越来越壮大越来越好&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;5 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt; 希望能多介绍大数据大流量的处理方法与技术。 虽然自己技术不怎么样，但是如果社区有需要用得到，我愿意贡献自己的微薄之力&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;6 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;大佬们多带带我们年轻的，分享最新的技术知识，多些干货，祝长沙社区越办越好！&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;7 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;分享工作项目中的技术&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;8 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;我个人是一个F#语言爱好者（日常工作C#），虽然水平有限，但是期待我们长沙社区有同好可以一起交流进步。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;活动需要赞助可以找我。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;10 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;是不是建立一个论坛，有问题技术方便在上线交流。群里人多眼杂。有些信息没看到，或者自己不感兴趣的。浪费查看时间。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;11 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;介绍新技术、如何面对复杂代码&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;12 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;少吹水，多解决实际问题&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;13 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;多开些讲座，比如在线公开课等之类&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;14 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;希望能够学习到新的技术，对技术有更深刻的了解&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;15 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;希望在社区和同行一起进步学习交流，为社区多做贡献。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;16 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;希望大家集体出力把长沙net社区建设好，一起改进社区氛围。现在还在规划，用net技术搭建适用于中小团队的大网站架构&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;17 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;我感觉长沙的net的氛围太差了。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;18 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;希望能多分享技术，像我这种入门不久的，很希望在大神们的带领下走的更远，不断提高自身，最终回馈社区&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;19 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot;&gt;
&lt;p&gt;越办越好吧&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;20 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;可不定时的举办各种沙龙，组织技术人员头脑风暴，可持续性的产出博客、开源项目，提高长沙.NET开发社区知名度，影响更多在学校中的学生以及在Java与.NET技术选型徘徊中的企业。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;21 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;今年三月底即将回长沙工作，长沙.net的工作机会不多，这跟这项技术的社区活跃有关系，然后我也有知道一些企业在用.net core作为他们的辅助技术栈&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;22 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;遇到感兴趣的，我会在评论区留言的。现在我工作中遇到的问题是SQL分库分表，分布式orm，推流拉流视频直播，在线excel，word生成查看，及Net数据的统计分析，希望公众号多一些这类文章的介绍和实现方案。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;23 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;还没有什么好想法，希望把自己学到的和走的一些技术坑和大家分享&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;产学研，业余的时间开发一个产品&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;89&quot;&gt;
&lt;p&gt;25 &lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;431&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;更多的是希望能从社区里面学到一些东西&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt; 　　另外，为了防止给博客园不同层面的读者造成不舒适感，类似于此类内容将不再发布到博客园首页。有需求关注长沙.NET技术社区发展的朋友，可以关注我的个人公众号【溪源技术圈More】(MoreDotNetCore），或者关注我的博客。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　对您造成的不舒适感，深表歉意，我要好好的自省，多写几篇技术文章来弥补对您造成的伤害。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 14:45:00 +0000</pubDate>
<dc:creator>溪源More</dc:creator>
<og:description>那些开发者们对于社区的美好期待 2月，长沙.net 技术社区自从把群拉起来开始，做了一次比较正式、题目为《关于长沙.NET技术社区未来发展规划》的问卷调查，在问卷调查中，溪源写道： 随着互联网时代的到</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiyuanMore/p/10468159.html</dc:identifier>
</item>
<item>
<title>企业架构设计之IFW实践回顾 - 五岳</title>
<link>http://www.cnblogs.com/wuyuegb2312/p/10461099.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuyuegb2312/p/10461099.html</guid>
<description>&lt;p&gt;　　笔者几年前曾参与过一套网络银行的系统建设以及后续这套系统在信用、云服务、保险、基金、支付等领域的复用，使用了IFW模型的变体。当时仅仅是根据架构师的设计进行编码、测试和交付以及后续的维护，没有对这套模型进行系统化的总结，心中总是有点缺失。这么多年过去，借着在组内分享的机会，系统地整理一下这块的知识，希望对以后的设计建模能有所帮助。&lt;br/&gt;　　限于笔者水平，同时IFW模型实际上是非常复杂（以至于对于专业的咨询公司来说，这套模型的咨询+分析+落地方案设计费用通常在百万到千万级别），短短的一篇博文仅仅是管中窥豹，而且由于理解偏差也会有错误的之处，因此仅作参考。&lt;/p&gt;

&lt;p&gt;　　IFW是IBM的Information FrameWork缩写，旨在描述银行业务，可以看做领域内技术和业务沟通的桥梁。IFW是一套Zachman Framework的变体，后者最经典之处在于5W1H维度下对于6个概念的划分：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/228024/201903/228024-20190302143936560-2050371178.jpg&quot;/&gt;&lt;br/&gt;　　这里对于Zachman Framework不展开介绍，保持聚焦于IFW本身，其所应用的产品很多：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IBM旗下Industry Models的一部分&lt;/li&gt;
&lt;li&gt;银行业与财务市场
&lt;ul&gt;&lt;li&gt;IBM银行业与金融市场业数据仓库(IBM Banking and Financial Markets Data Warehouse，BFMDW)&lt;/li&gt;
&lt;li&gt;IBM银行业数据仓库(IBM Banking Data Warehouse，BDW，是BFMDW的衍生产品，只和银行有关)&lt;/li&gt;
&lt;li&gt;IBM金融市场数据仓库(IBM Financial Markets Data Warehouse，FMDW，同样是BFMDW的衍生产品，只和金融市场有关)&lt;/li&gt;
&lt;li&gt;IBM银行处理服务模型(BPS)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;保险业
&lt;ul&gt;&lt;li&gt;IBM保险应用架构(IBM Insurance Application Architecture, IAA)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;其他
&lt;ul&gt;&lt;li&gt;保健&lt;/li&gt;
&lt;li&gt;电信&lt;/li&gt;
&lt;li&gt;零售&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整个业务模型框架分为以下几个板块：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/228024/201903/228024-20190302174552356-481212068.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IFW基础模型
&lt;ul&gt;&lt;li&gt;金融服务数据模型(FSDM)&lt;/li&gt;
&lt;li&gt;金融服务功能模型(FSFM)&lt;/li&gt;
&lt;li&gt;金融服务工作流模型(FSWM)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;银行数据仓库
&lt;ul&gt;&lt;li&gt;业务解决方案模板&lt;/li&gt;
&lt;li&gt;银行数据仓库模型&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IFW集成模型
&lt;ul&gt;&lt;li&gt;金融服务业务对象模型&lt;/li&gt;
&lt;li&gt;金融服务接口设计模型&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IFW流程模型&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　其中“IFW基础模型”如其命名，是基础中的基础。个人理解，“工作流模型”是指工作流中的各个实体，如节点、跳转条件等，“流程模型”指的是抽象或具体的某个流程。&lt;/p&gt;

&lt;p&gt;　　IFW将金融信息分解为九大数据概念，所有的金融业务中都可以套用到其中。具体的细节可能有差异，我一共参考了两份资料，下面一共列了11项，其中前7项是公有的，&lt;br/&gt;第8~9份是我所参与项目中使用的，10~11项是另一份资料中的。其中“渠道”和“业务方向”有重合之处。&lt;br/&gt;　　这部分是我实践中接触最多的地方，也是对建模最有帮助的。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;19.5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;参与者&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;业务往来、信息交互中关联的各方&lt;/td&gt;
&lt;td&gt;个人、机构、柜员、平台商、委托方、代理人&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;LO&lt;/td&gt;
&lt;td&gt;参与者相关的地址&lt;/td&gt;
&lt;td&gt;家庭住址、公司地址、邮政邮箱、电子邮箱、网址&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;条件&lt;/td&gt;
&lt;td&gt;CD&lt;/td&gt;
&lt;td&gt;描述业务开展时需要的前提条件、资格标准、要求、限制、服务参数&lt;/td&gt;
&lt;td&gt;需年满18岁、利率、价格、周期&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;产品&lt;/td&gt;
&lt;td&gt;PD&lt;/td&gt;
&lt;td&gt;提供给客户用以换取任何形式利润或收益的产品和服务&lt;/td&gt;
&lt;td&gt;活期存款、货币基金、人身险、实体商品&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;合约&lt;/td&gt;
&lt;td&gt;AR&lt;/td&gt;
&lt;td&gt;描述或两个或两个人、团体、组织等潜在或实际的协议，申明了权利或/和义务&lt;/td&gt;
&lt;td&gt;服务协议、产品协议&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;资源项&lt;/td&gt;
&lt;td&gt;RI&lt;/td&gt;
&lt;td&gt;各参与者拥有、需要管理和使用的物品项&lt;/td&gt;
&lt;td&gt;身份证、借条、房产、通行证&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;事件&lt;/td&gt;
&lt;td&gt;EV&lt;/td&gt;
&lt;td&gt;参与者之间、参与者与系统、系统与系统交互的行为与数据&lt;/td&gt;
&lt;td&gt;交易事件、存款事件、收费事件&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;账户&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;记录及监控货币及非货币(如积分等)数量变化的主体&lt;/td&gt;
&lt;td&gt;存款账户、贷款账户、总账账户、公积金账户&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;渠道&lt;/td&gt;
&lt;td&gt;CH&lt;/td&gt;
&lt;td&gt;多个参与者为业务通讯的通道&lt;/td&gt;
&lt;td&gt;柜面渠道、ATM渠道、网站门户&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;分类&lt;/td&gt;
&lt;td&gt;CL&lt;/td&gt;
&lt;td&gt;数据分类或分组&lt;/td&gt;
&lt;td&gt;前台类目、后台类目&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;业务方向&lt;/td&gt;
&lt;td&gt;BD&lt;/td&gt;
&lt;td&gt;开展业务所在的环境或方式&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;　　包含了500多个银行的业务功能，不过没有详细列出。举例如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;资源管理
&lt;ul&gt;&lt;li&gt;人力资源资源管理&lt;/li&gt;
&lt;li&gt;基础设施资源管理&lt;/li&gt;
&lt;li&gt;信息资源管理&lt;/li&gt;
&lt;li&gt;金融资源管理&lt;/li&gt;
&lt;li&gt;信托资源管理&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;方向管理
&lt;ul&gt;&lt;li&gt;控制管理&lt;/li&gt;
&lt;li&gt;策略管理&lt;/li&gt;
&lt;li&gt;会计管理&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　本处指工作流模型+流程模板。模板特点是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;独立于渠道&lt;/li&gt;
&lt;li&gt;独立于业务部门&lt;/li&gt;
&lt;li&gt;独立于产品线&lt;/li&gt;
&lt;li&gt;独立于特殊客户群&lt;/li&gt;
&lt;li&gt;独立于技术&lt;/li&gt;
&lt;li&gt;独立于已有系统或某个 ISV方案&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;作为模板化的分析和抽象，我们在设计中可以参考这些指导建议。&lt;/p&gt;

&lt;p&gt;　　追求模型的大而全是不现实的，在特定业务主题下实际上只需要部分模型即可实现，以下是几个例子。&lt;/p&gt;
&lt;h2 id=&quot;产品管理&quot;&gt;产品管理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/228024/201903/228024-20190303223553176-823712907.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;产品签约管理&quot;&gt;产品签约管理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/228024/201903/228024-20190303223612322-1067847735.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;核心业务处理&quot;&gt;核心业务处理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/228024/201903/228024-20190303223631574-1712477177.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;客户关系管理&quot;&gt;客户关系管理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/228024/201903/228024-20190303223649773-305829429.png&quot;/&gt;&lt;/p&gt;

&lt;h2 id=&quot;基于技术选型的再设计&quot;&gt;基于技术选型的再设计&lt;/h2&gt;
&lt;p&gt;　　建模后限于技术选型的限制，模型可能并不能直接套用。比如DB不支持批量插入或性能很差、字段长度不支持等。这是一个很常见的逻辑模型转换物理模型时遇到的问题，对于物理模型的组织和存储，需要进行进一步的设计，当然也有可能影响到逻辑模型。&lt;/p&gt;
&lt;h2 id=&quot;结构与数据分离&quot;&gt;结构与数据分离&lt;/h2&gt;
&lt;p&gt;　　对于领域模型非常复杂的场景，建模的最初目的是理解业务和沟通，可能并没有考虑到系统间交互的复杂度。在将物理存储转换为逻辑模型时，组装模型的接口可能会导致系统处理速度下降，特别是在大量信息需要做序列化/反序列化时。在实践中我们发现，对于外部只消费数据，不感知具体模型的结构，对吞吐量要求较高；对于内部信息管理，才会感知到结构，但对吞吐量没有太大要求。因此可以考虑将结构和数据分开存储，对外接口只需要透出数据即可。&lt;/p&gt;
&lt;h2 id=&quot;缓存化&quot;&gt;缓存化&lt;/h2&gt;
&lt;p&gt;　　对于经常查询的信息预先考虑缓存化处理。&lt;/p&gt;
&lt;h2 id=&quot;可以但是没必要的复杂性&quot;&gt;可以但是没必要的复杂性&lt;/h2&gt;
&lt;p&gt;　　模型支持可扩展，但不意味着把所有的处理工作留给自己，建议在保持核心逻辑和原子能力的前提下做扩展，保持内部的高内聚性，减少对外围逻辑的耦合。下文会提到，“没有一套模型能解决所有的问题”。&lt;/p&gt;
&lt;h2 id=&quot;sdk化&quot;&gt;SDK化&lt;/h2&gt;
&lt;p&gt;　　如果应用IFW的系统仅仅是一个公司SOA化架构中的一环，而非整个公司技术产品的共识，即使是一个核心应用，上下游来对接会非常痛苦——他们不得不理解这套复杂的概念。这里建议采用共建的形式为使用方提供SDK，屏蔽复杂的细节，仅仅提供给对方需要的信息和接口即可。&lt;/p&gt;
&lt;h2 id=&quot;模型裁剪&quot;&gt;模型裁剪&lt;/h2&gt;
&lt;p&gt;　　与SDK化相反，如果仅仅关注系统内部流程，是没必要完全实现大而全的IFW的，只需要实现其中使用到的领域即可。&lt;/p&gt;
&lt;h2 id=&quot;没有银弹&quot;&gt;没有银弹&lt;/h2&gt;
&lt;p&gt;　　“没有一套模型能解决所有的问题，如果强行去做，那么会导致每个模型都非常扭曲，这个是我们在经历了这么多迭代后得出的血的教训。”这是我原先所在团队的架构师在这套模型多年实践后总结出的心得。&lt;/p&gt;

&lt;p&gt;　　建设成本与使用成本的权衡。&lt;/p&gt;

&lt;p&gt;IFW英文wiki：&lt;a href=&quot;https://en.wikipedia.org/wiki/Information_Framework&quot; class=&quot;uri&quot;&gt;https://en.wikipedia.org/wiki/Information_Framework&lt;/a&gt;&lt;br/&gt;Zachman Framework：&lt;a href=&quot;https://en.wikipedia.org/wiki/Zachman_Framework&quot; class=&quot;uri&quot;&gt;https://en.wikipedia.org/wiki/Zachman_Framework&lt;/a&gt;&lt;br/&gt;Industry Models产品官网：&lt;a href=&quot;https://www.ibm.com/analytics/industry-models&quot; class=&quot;uri&quot;&gt;https://www.ibm.com/analytics/industry-models&lt;/a&gt;&lt;br/&gt;IFW Overview：&lt;a href=&quot;http://www.itpub.net/thread-1604106-1-1.html&quot; class=&quot;uri&quot;&gt;http://www.itpub.net/thread-1604106-1-1.html&lt;/a&gt; （直接注册下就可以下载，这里有关于IFW的一些讨论可以借鉴）&lt;br/&gt;治理和管理企业模型，第 1 部分：&lt;a href=&quot;https://www.ibm.com/developerworks/cn/rational/09/0113_letkeman-norris/index.html&quot; class=&quot;uri&quot;&gt;https://www.ibm.com/developerworks/cn/rational/09/0113_letkeman-norris/index.html&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 14:42:00 +0000</pubDate>
<dc:creator>五岳</dc:creator>
<og:description>IFW是IBM的Information FrameWork缩写，是一套银行及金融业的信息模型框架方案。笔者几年前曾参与过一套基于IFW变体的网络银行的系统建设以及后续这套系统在信用、云服务、保险、基金</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wuyuegb2312/p/10461099.html</dc:identifier>
</item>
<item>
<title>flink-kafka-connector 的实现 - fk12138</title>
<link>http://www.cnblogs.com/0x12345678/p/10463539.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/0x12345678/p/10463539.html</guid>
<description>&lt;h2 id=&quot;简单介绍&quot;&gt;简单介绍&lt;/h2&gt;
&lt;p&gt;flink-kafka-connector用来连接kafka，用于消费kafka的数据， 并传入给下游的算子。&lt;/p&gt;
&lt;h2 id=&quot;使用方式&quot;&gt;使用方式&lt;/h2&gt;
&lt;p&gt;首先来看下flink-kafka-connector的简单使用， 在&lt;a href=&quot;https://ci.apache.org/projects/flink/flink-docs-release-1.7/dev/connectors/kafka.html#kafka-consumer&quot;&gt;官方文档&lt;/a&gt;中已经介绍了，传入相关的配置， 创建consumer对象， 并调用addsource即可&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;Properties properties = new Properties();
properties.setProperty(&quot;bootstrap.servers&quot;, &quot;localhost:9092&quot;);
// only required for Kafka 0.8
properties.setProperty(&quot;zookeeper.connect&quot;, &quot;localhost:2181&quot;);
properties.setProperty(&quot;group.id&quot;, &quot;test&quot;);
DataStream&amp;lt;String&amp;gt; stream = env
    .addSource(new FlinkKafkaConsumer08&amp;lt;&amp;gt;(&quot;topic&quot;, new SimpleStringSchema(), properties));&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;类图分析&quot;&gt;类图分析&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/700757/201903/700757-20190303203834206-52568653.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从类图来看，flink-kafka-connector 基本类为FlinkKafkaConsumerBase， 继承RichParallelSourceFunction， 重写了open和run方法。&lt;br/&gt;再open方法中主要是做一些初始化的工作， 获得所有的topic的partiiton信息， 使用partitionDiscoverer来获得topic的parition信息， 不同版本的connector对于getAllPartitionsForTopics有着不同的实现。 在run方法中用于从kafka中读取消息放入SourceContext中, 其中消息获取逻辑放在了AbstractFetcher中， 不同版本的Fetcher对于runFetchLoop有不同的实现，不同版本的kafka-connector有着不同的实现.&lt;/p&gt;
&lt;h2 id=&quot;并行逻辑解析&quot;&gt;并行逻辑解析&lt;/h2&gt;
&lt;p&gt;对于RichParallelSourceFunction, 是可以设置并行的， 通过设置设置并行度， 可以在多个taskMansger中同时消费kafka在AbstractFetcher中， 有两个队列， subscribedPartitionStates和unassignedPartitionsQueue分别用于保存当前已经在读取的topic的parition和未读取的parition。 通过partitionDiscoverer中的getAllPartitionsForTopics来获得所有topic的partition, 后通过KafkaTopicPartiitonAssigner来判断当前parition是否为当前的source所消费，&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;    public static int assign(KafkaTopicPartition partition, int numParallelSubtasks) {
        int startIndex = ((partition.getTopic().hashCode() * 31) &amp;amp; 0x7FFFFFFF) % numParallelSubtasks;

        // here, the assumption is that the id of Kafka partitions are always ascending
        // starting from 0, and therefore can be used directly as the offset clockwise from the start index
        return (startIndex + partition.getPartition()) % numParallelSubtasks;
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在初始化时， 会放入subscribedPartitionStates((此逻辑在FlinkKafkaConsumerBase的open方法中), 之后发现的新的topicparition(在FlinkFafkaConsumerBase的run方法中)，调用kafkaFetcher.addDiscoveredPartitions() 会同时放入 subscribedPartitionStates和unassignedPartitionsQueue,。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unassignedPartitionsQueue&lt;/code&gt;主要用于将新发现的parition信息传递给消费线程， 在kafka-0.9版本中， 由ConsumerThread不断获取，如果有新的partition， 会由client一并消费.&lt;br/&gt;在kafka-08版本中，使用线程池来消费， 每个borker对应一个线程， 会在Kafka08Fetcher的runfetchloop中不断获取，会放到parition的所在的borker对应的线程中.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;subscribedPartitionStates&lt;/code&gt; 用于初始化的工作消费设置和保存所有的topic的消费信息。 在消息的消费中， 会不断更新队列中每个partition的partitionstate. 主要用于其他线程的offset上报或者metric的上报.&lt;/p&gt;
&lt;h2 id=&quot;watermark的处理&quot;&gt;watermark的处理&lt;/h2&gt;
&lt;p&gt;flink-kafka提供了设置watermark的接口 assignTimestampsAndWatermarks(), 在emitRecord中会调用对所设置的watermater生成函数，为每个partition生成其对应的watermark.&lt;br/&gt;如果设置了PeriodicWatermark, 会起一个线程， 定时发送watermark。&lt;br/&gt;如果设置了PunctuatedWatermark, 会在emitRecordWithTimestampAndPunctuatedWatermark中， 调用checkAndGetNewWatermark()， 是否有新的watermark生成.&lt;/p&gt;
&lt;h2 id=&quot;checkpoint的处理&quot;&gt;checkpoint的处理&lt;/h2&gt;
&lt;p&gt;通过继承相关的类和接口。 CheckpointedFunction，initializeState用于初始化checkpoint， snapshotState用于保存checkpoint&lt;br/&gt;CheckpointListener中notifyCheckpointComplete， 用作checkpoint保存成功的回调， 在kafka-connector中调用commitInternalOffsetsToKafka, 将offset信息上报给kafka.&lt;/p&gt;
&lt;h2 id=&quot;metric的使用&quot;&gt;metric的使用&lt;/h2&gt;
&lt;p&gt;flink-kafka-connector中使用了flink中的metric库， 用来监控消费信息， 主要是commitoffset和currentOffset信息。&lt;br/&gt;在AbstractFetcher的registerOffsetMetrics中， 注册了对于CurrentOffset和CommitOffset的监控.&lt;br/&gt;通过flink job的查看页面，可以看到各个topic的partition的消费情况.&lt;/p&gt;
</description>
<pubDate>Sun, 03 Mar 2019 14:31:00 +0000</pubDate>
<dc:creator>fk12138</dc:creator>
<og:description>简单介绍 flink kafka connector用来连接kafka，用于消费kafka的数据， 并传入给下游的算子。 使用方式 首先来看下flink kafka connector的简单使用， 在</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/0x12345678/p/10463539.html</dc:identifier>
</item>
<item>
<title>F#周报2019年第9期 - Ken.W</title>
<link>http://www.cnblogs.com/kenwoo/p/10467922.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kenwoo/p/10467922.html</guid>
<description>[unable to retrieve full-text content]新闻 &quot;对于F ，Visual Studio 2019 RC有哪些更新&quot; &quot;Visual Studio 2019 RC现在已经发布&quot; &quot;C 版本与工具的升级&quot; &quot;如何移植桌面应用程序到.NET Core 3.0&quot; &quot;对于Xamarin开发者，在Visual Studio 2019预览版2中有哪些更新</description>
<pubDate>Sun, 03 Mar 2019 14:18:00 +0000</pubDate>
<dc:creator>Ken.W</dc:creator>
<og:description>新闻 '对于F ，Visual Studio 2019 RC有哪些更新' 'Visual Studio 2019 RC现在已经发布' 'C 版本与工具的升级' '如何移植桌面应用程序到.NET Cor</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kenwoo/p/10467922.html</dc:identifier>
</item>
<item>
<title>cvte前端笔试后的js原型总结 - Yellow_ice</title>
<link>http://www.cnblogs.com/Yellow-ice/p/10467798.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Yellow-ice/p/10467798.html</guid>
<description>&lt;p&gt;　　最近实习生招聘已经开始了，昨天晚上也终于迎来了第一场笔试，笔试的公司是cvte，笔试题总共27题，25道不定项还有2道编程题，虽然出的都是前端题，但是因为之前没有好好准备，还是很多做的不是很好o(╥﹏╥)o考完试后也总结了一下，考的以node，原型，promise比较多，之前以为自己原型掌握的还可以，一考才发现问题啊，赶紧总结一下O(∩_∩)O&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、从笔试说起&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　大家觉得自己原型掌握的怎么样呢？昨天的笔试出了不少原型的题，一个prototype还好，多个加在一起真的是有点晕了，下面是记得的一道题，大家觉得会输出什么呢？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; f1(){}

&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt; f1.prototype;
&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt; Object.prototype;
&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt; Function.prototype.prototype;
&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt; f1.prototype.constructor
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　上面的代码会依次输出&quot;object&quot;，&quot;object&quot;，&quot;undefined&quot;，&quot;function&quot;，如果大家四个都答对的话就不用往下看啦，如果还不会的话就跟着我一起重新学习下原型把&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、原型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1、原型对象&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　无论什么时候，只要创建了一个新函数，就会根据一组特定的规则为该函数创建一个prototype属性，这个函数指向函数的原型对象，这个原型对象中包含了所有实例共享的属性和方法，在默认情况下，所有原型对象都会自动获得一个constructor属性，这个属性包含一个指向prototype属性所在函数的指针，我们拿上面的笔试题为例画图给大家说明一下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/831247/201903/831247-20190303195220584-1203566215.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　从上面的图我们可以看出，第一个例子中，因为f1是个函数，因此会根据一组规则为f1创建一个prototype属性，并且指向f1的原型，这里也就是f1.prototype&lt;/p&gt;
&lt;p&gt;　　因此，f1.prototype就是我们所说的原型对象啦，既然它是对象，那么typeof f1.prototype就会输出object，而第四个例子中，f1.prototype.constructor会指向f1，f1本身是个函数，所以typeof f1.prorotype.constructor会输出function&lt;/p&gt;
&lt;p&gt;　　关于第二个例子Object.prototype也是同样的道理，以下面的图为例说明一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/831247/201903/831247-20190303195546351-127929469.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从上面的图我们可以看出，我们可以把Object看出是一个构造函数，因此它也有一个prototype属性指向Object的原型对象，而Object.prototype也是一个对象，因此typeof Object.prototype会输出object&lt;/p&gt;
&lt;p&gt;　　关于第三个例子就有点复杂啦，首先，typeof Function.prototype会输出什么呢？&lt;/p&gt;
&lt;p&gt;　　打开控制台，输入代码，我们会看到typeof Function.prototype输出的会是Function，这里要说明一点，Function.prototype和其它类型的prototype属性不一样，像前两个例子一样，f1.prototype和Object.prototype以及其它类型的prototype都是Object，而Function比较特殊，Function.prototype的类型是Function&lt;/p&gt;
&lt;p&gt;　　接下来，typeof Function.prototype.prototype为什么会输出undefined呢？这里其实可以这样去理解，这是因为Function.prototype不具备prototype属性，因此会输出undefined，一般来说，只有函数才会根据一定的规则创建prototype的，而Function.prototype并不是函数，因此也不具备prototype属性，同样的道理，typeof f1.prototype.prototype会输出undefined，typeof Object.prototype.prototype也会输出undefined&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、实例，原型和构造函数的关系&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　首先，我们需要先来说一下__proto__这个属性，当一个对象被实例化的时候，将会包含一个内部属性，我们把这个内部属性叫做[[Prototype]]，也就是__proto__，这个属性会指向实例化出这个对象函数的prototype，比如有下面的代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; Person(){}

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; person1 = &lt;span&gt;new&lt;/span&gt; Person();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这个时候Person的构造函数，Person的原型属性和Person的实例之间的关系可以这样表示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/831247/201903/831247-20190303203915326-395017346.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从上面的图我们可以看到，Person是构造函数，它将根据一组特定的规则创建prototype属性，并且指向Person的原型对象，而Person.prototype的constructor会指向Person构造函数，而person1是Person的实例，会包含一个内部属性__proto__指向Person.prototype，大家别小看__proto__，正因为有了这个属性，我们就可以在Person.prototype上添加属性和方法，这些属性和方法将会被所有实例所共享，比如说可以像下面这样在Person的原型上添加属性和方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; Person() {}

Person.prorotype.sayName &lt;/span&gt;= &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    console.log(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name);                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;  在原型上添加方法&lt;/span&gt;
&lt;span&gt;}

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; person1 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Person();
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; person2 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Person();

person1.name &lt;/span&gt;= &quot;Nicholas&quot;;                  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;  在实例上添加属性&lt;/span&gt;
person2.name = &quot;Greg&quot;;                       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;  在实例上添加属性&lt;/span&gt;
&lt;span&gt;
person1.sayName();                             &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  Nicholas&lt;/span&gt;
person2.sayName();                             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;  Greg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　一般来说，&lt;span&gt;每当代码读取某个对象的某个属性时，都会指向一次搜索，目标是具有给定名字的属性，搜索首先从对象实例本身开始，如果在实例中找到了具有给定名字的属性，则返回该属性的值，如果没有找到，则继续搜索指针指向的原型对象，在原型对象中查找具有给定名字的属性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　我们在Person的原型上添加了sayName方法，并且创建了person1和person2两个实例，这两个实例都有自己的name属性，当执行sayName()方法时，由于其实例上不存在sayName()方法，因此会顺着__proto__指向的原型，在原型上查找sayName()方法，并且指向里面的代码&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;3、怎么判断某个实例和原型之间存在关系&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　在所有实现中都无法访问到[[Prototype]]的，因此我们不可能通过实例的[[Prototype]]判断其是否和某个原型存在关系，我们需要&lt;span&gt;使用isPrototypeOf()方法来确定对象之间是否存在这种关系，从本质上讲，如果[[Prototype]]指向调用isPrototypeOf()方法的对象，那么就返回true&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Person.prorotype.isPrototypeOf(person1);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;  true&lt;/span&gt;
Person.prototype.isPrototypeOf(person2);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;  true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　因为person1和person2内部的[[Prototype]]都指向Person.prototype，所以返回true&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;4、怎么判断属性存在实例还是原型中&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　前面已经说过，如果在对象的实例上搜索不到某个属性时，将会在原型对象上进行搜索，如果我们&lt;span&gt;在实例中添加了一个属性，而该属性与实例原型中的一个属性同名，那么该属性将会屏蔽原型中的那个属性&lt;/span&gt;，那么，我们怎么判断一个属性是存在实例还是存在原型中呢，这里可以&lt;span&gt;用hasOwnProperty进行判断&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;span&gt;使用hasOwnPrototype方法可以检测一个属性是否是存在于实例中，还是存在于原型中，旨在给定属性存在于对象实例中时，才会返回true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5、再来一个题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　上面对原型做了一个比较简单的介绍，不知道大家是不是对原型有个了解了，最后，我们在来看下面的题输出的是什么？&lt;/p&gt;
&lt;p&gt;　　大家知道typeof Function.prototype.__proto__又是什么呢？大家自己输出代码试一试，结果会输出object哟，我们看看下面的代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Function.prototype.__proto__ === Object.prototype;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　一般来说，除了Object.prototype之外的所有对象都会有[[Prototype]]，也就是__proto__属性，会指向实例化出这个对象的构造函数的原型，而为什么Object没有呢，因为js的继承机制主要是原型链实现的，而原型链的头就是Object.prototype，而这里Function.prototype其实就是指向了Object.prototype&lt;/p&gt;

&lt;p&gt;　　今天主要介绍这么多了，接下来要好好准备笔试，准备面试了，其实在笔试和面试中，我们可以发现自己在哪方面的不足，及时的进行总结，其实面试对于我们来说，也是一种不断学习的过程，希望大家都能加油拿到自己想要的offer&lt;/p&gt;

</description>
<pubDate>Sun, 03 Mar 2019 13:34:00 +0000</pubDate>
<dc:creator>Yellow_ice</dc:creator>
<og:description>最近实习生招聘已经开始了，昨天晚上也终于迎来了第一场笔试，笔试的公司是cvte，笔试题总共27题，25道不定项还有2道编程题，虽然出的都是前端题，但是因为之前没有好好准备，还是很多做的不是很好o(╥﹏</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Yellow-ice/p/10467798.html</dc:identifier>
</item>
</channel>
</rss>