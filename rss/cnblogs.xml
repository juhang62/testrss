<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Liunx百宝箱（Centos补充） - 东小东</title>
<link>http://www.cnblogs.com/dongxiaodong/p/10371517.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dongxiaodong/p/10371517.html</guid>
<description>&lt;p&gt;Liunx可分为Redhat系列和debian系列，其采用的都是相同的Liunx内核，最大的不同点就是对RPM包的管理，使用的软件源不同。但相比之下debian系列的桌面端较好，Redhat其稳定性较好。所以笔者选择使用Redhat系列的CentOS。&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;Liunx整体注意&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;1&amp;gt; 命令或者内容严格区分大小写的&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;2&amp;gt; 所有内容都是以文件形式存在，包括硬件&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;3&amp;gt; 没有扩展名的区分，携带扩展名仅仅是为了让用户知道是什么文件&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;远程工具&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;服务器默认打开&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;命令行工具：SecureCRT，putty&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;文件传输工具（win与liunx)：Winscp&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Winscp下载：https://sourceforge.net/projects/winscp/files/WinSCP/5.13.5/WinSCP-5.13.5-Setup.exe/download&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;Liunx一些重要的目录和文件&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;/bin     所有用户都可用的二进制可执行文件&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/usr/bin  所有用户都可用的二进制可执行文件，安全模式下不可用&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/sbin     只有超级管理员可执行&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/usr/sbin   只有超级管理员可执行，安全模式下不可用&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/usr       系统资源目录&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/boot     启动资源目录&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/dev      硬件设备文件&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/etc       绝大多数的配置文件&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/home/用户名 用户目录&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/root         超级用户的家目录&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/tmp         临时目录&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/var          日志文件&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;/etc/rc.local  开机时会自动进入，可把服务启动标准命令写入其中，让其开机自启&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;命令快捷键&lt;/h2&gt;
&lt;p&gt;tab键  命令补全&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Ctrl+C 强制停止当前命令&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Ctrl+L 清屏，clear命令&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Ctrl+D 退出当前终端&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Ctrl+A 把光标移至命令开头&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Ctrl+E 把关闭移至命令结尾&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Ctrl+U 删除光标前的全部字符&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;Liunx命令介绍与补充&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;清屏&lt;/p&gt;

&lt;p&gt;查看系统健康状态，系统进程及其它详细信息，q键退出&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;关机与重启&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;补充：设置时间(-h 23:10)、（-c）取消前一个关机命令、去掉-r则是关机&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
shutdown -r now
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 设置只ping三次&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
ping -c 3 ip地址...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看本机IP地址，lo是回环网卡,用于本机内部网络测试&lt;/p&gt;

&lt;p&gt;跟踪访问URL，测试失败&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
traceroute 网站URL
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CentOS配置网络&lt;/p&gt;

&lt;p&gt;查看系统位&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
file /bin/&lt;span&gt;ls
或者
getconf LONG_BIT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看当前系统的发行版本，需安装yum install -y redhat-lsb&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
lsb_release -a
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看本机所有端口描述&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
netstat -tlun
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;查看命令所在位置&lt;/h2&gt;
&lt;p&gt;可以看到别名（区别标准liunx的命令）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
which 命令...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到帮助文档所在位置 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
whereis 命令...
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;命令帮助文档&lt;/h2&gt;
&lt;p&gt;查看命令的帮助文档，操作与文件分页相同&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
man 命令...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看内置命令的帮助&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
help 命令...
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt; 历史使用命令&lt;/h2&gt;
&lt;p&gt; 查看所有历史命令，包括缓存中的&lt;/p&gt;

&lt;p&gt;把缓存中的历史命令写入（~/.bash_history）文件中，默认最大为1000条&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
history -w
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;清空缓存中的历史命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
history -c
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;进程管理&lt;/h2&gt;
&lt;p&gt;查看进程树&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
pstree -pu
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看系统所有进程&lt;/p&gt;

&lt;p&gt;kill杀死进程，参数必须是PID,1为重启，9为强制终止，15为正常终止&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
kill -15 PID
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;killall 或者 pkill 杀死进程，参数为进程名,1为重启，9为强制终止，15为正常终止&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;如【killall -1 httpd】或【pkill -1 进程名】为重启Apache进程&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
killall -15 进程名
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;命令放入后台执行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
...命令 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;暂停当前运行并放入后台（暂停）&lt;/p&gt;

&lt;p&gt;查看暂停运行的程序&lt;/p&gt;

&lt;p&gt;让暂停程序继续工作&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
fg 最前面的编号
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列出以字符串开头正在运行的进程文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
lsof -c 字符串
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列出某个用户打开的文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
lsof -u 用户名
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列出某个PID进程打开的文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
lsof -p  PID
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;定时任务(crond 服务)&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
crontab 选项
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;选项有   -e     -l   -r&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;-e 编辑任务&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
* * * * *&lt;span&gt; 命令
注意：每隔&lt;/span&gt;*&lt;span&gt;之间要有空格
第一个&lt;/span&gt;*为一个小时的第几分钟，[0,59&lt;span&gt;]
第二个&lt;/span&gt;*表示一天中的第几个小时，[0,23&lt;span&gt;]
第三个&lt;/span&gt;*表示一个月中的第几天，[0,31&lt;span&gt;]
第四个&lt;/span&gt;*表示一年中的第几个月，[1,12&lt;span&gt;]
第五个&lt;/span&gt;*表示一周中的第几天，[0,7&lt;span&gt;] ，其中0和7都表示星期日
特殊符号：
【&lt;/span&gt;*&lt;span&gt;】表示任意时间
【，】逗号，表示不连续时间，如第一个&lt;/span&gt;*里面写12,50,55,****&lt;span&gt;表示每小时的多个特点分钟
【&lt;/span&gt;-】减号，表示连续的范围，比如第五个*里写****0-3&lt;span&gt; 表示星期天到星期三都会执行
【&lt;/span&gt;*/10】如果在分钟上，表示每隔十分钟执行
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;-l 查看任务&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;-r 删除当前用户的所有的任务&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt; 命令重命名&lt;/h2&gt;
&lt;p&gt;查看所有系统定义别名&lt;/p&gt;

&lt;p&gt;设置命令别名，当次登入有效&lt;/p&gt;
&lt;p&gt;&amp;gt; 命令的优先级：绝对/相对路径-&amp;gt;别名-&amp;gt;命令本身（bash）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;gt; （vim ~/.bashrc）更改系统文件中的环境变量里，永久生效别名&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
alias a=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除命令别名&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
unalias 别名...
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;通信&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;发送邮件：&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;mail 某个用户名 回车 标题 回车 ctrl+D 确定发送&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;查看邮件：&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;命令：mail&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;查看：选择序号&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;删除：d 序号&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;退出: q&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;指定用户发送&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;write 某个在线用户名 回车 内容 ctrl+D确定发送&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;发送给所有用户&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
wall 内容....
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
</description>
<pubDate>Wed, 13 Feb 2019 22:57:00 +0000</pubDate>
<dc:creator>东小东</dc:creator>
<og:description>Liunx可分为Redhat系列和debian系列，其采用的都是相同的Liunx内核，最大的不同点就是对RPM包的管理，使用的软件源不同。但相比之下debian系列的桌面端较好，Redhat其稳定性较</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dongxiaodong/p/10371517.html</dc:identifier>
</item>
<item>
<title>情人节，送女友一桶代码可否？ - 美码师</title>
<link>http://www.cnblogs.com/littleatp/p/10372599.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/littleatp/p/10372599.html</guid>
<description>
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;今天是2019年的第一个情人节！，是的你没听错，是情人节到了，还在办公室加班的你还在加班吗？&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/206850820.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/0.6785301561710297.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1550086654980&amp;amp;di=d4761dcff7e1978b40562b2cbf15a725&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20170927%2F62f04df1eb0b4b83955ed701162fee9d.gif&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;240&quot;/&gt;&lt;/div&gt;

&lt;p&gt;是不是乐此不疲？&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214015710266-2095598282.png&quot; alt=&quot;&quot; width=&quot;232&quot; height=&quot;210&quot;/&gt;&lt;/div&gt;

&lt;p&gt;还在赶项目进度而&lt;span&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;忘记吃饭甚至&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;忘记给女朋友惊喜&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;的你，知道老板已经已经在为情人节狂欢了吗？&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/0.34501589748102.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1550086778043&amp;amp;di=f66ef0dea842bbb809903a53a59b5437&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fztd00.photos.bdimg.com%2Fztd%2Fw%3D700%3Bq%3D50%2Fsign%3Df81e510af4faaf5184e383bfbc6fe5d3%2F3812b31bb051f819b01dfa66d3b44aed2e73e7e6.jpg&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;225&quot;/&gt;&lt;/div&gt;

&lt;p&gt;好了，这些都没有关系，谁叫你是程序猿呢，&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;程序猿的情人节就要跟别人不一样&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;，&lt;/p&gt;
&lt;p&gt;程序猿要是有喜欢的人(没有也假设有)，那各种表白送情意的招儿那还少吗？&lt;/p&gt;

&lt;p&gt;什么？一脸懵逼？ 下面还是给大家普及普及吧&lt;/p&gt;
&lt;p&gt;小编和广大程序猿一样，一直认为情人节最好的礼物就是...&lt;/p&gt;

&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;送你一桶代码！~~&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;没错，你没看错的。&lt;/p&gt;


&lt;p&gt;|&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;span&gt;&lt;strong&gt;Java 程序猿 &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/201834577.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020117258-413777101.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;在生命结束之前，每天都会爱你多一点&lt;/p&gt;


&lt;p&gt;|&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;span&gt;&lt;strong&gt;C&lt;/strong&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;程序猿&lt;/span&gt; &lt;/strong&gt;&lt;/span&gt;|&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div readability=&quot;7&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020150956-27756254.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;without u(没有了你)，我再也不能对 the world(这个世界) say hello!&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;|&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;strong&gt;高级的&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;程序猿 &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/202978953.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020253808-1119295309.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;  两隔的世界；&lt;/p&gt;
&lt;p&gt;  无名的信件；&lt;/p&gt;
&lt;p&gt;  短暂的停留；&lt;/p&gt;
&lt;p&gt;  长久的记忆；&lt;/p&gt;
&lt;p&gt;  说这么多，只想告诉你：我想你了。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;Python &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;程序猿 &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/202143630.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020352707-304618066.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;  山无陵，江水为竭，冬雷震震，夏雨雪，天地合，乃敢与君绝！&lt;/p&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;Javascript &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;程序猿&lt;/span&gt; &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/202234454.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020451339-1685999683.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;春风十里不如你！&lt;/p&gt;

&lt;p&gt;还有... ~~~~！&lt;/p&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;搞 DBA的 &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/203641895.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214022513758-1415737656.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;把你的心、我的心，串一串，串一株幸运草，串一个同心圆...&lt;/p&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;搞运维的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/204978980.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020556456-570997495.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt; 每天只想对你道下晚安：做个好梦，my 甜心！&lt;/p&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;搞前端的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;| 硬是用Html5 整出了一个3D表白图：&lt;/span&gt;&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1550088043624&amp;amp;di=dade68c52833c647ea8405ee410a0189&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fdown.admin5.com%2Fuploads%2Fallimg%2F180308%2F2639_180308145906_1.gif&quot; alt=&quot;&quot; width=&quot;407&quot; height=&quot;218&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;~~!!! 还是搞前端的有优势啊&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;后端程序猿&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;| 表示不服，祭出了这段代码：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/205971099.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020856076-1909317747.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;也不知道是什么意思，反正小编粘贴到 Shell 客户端后就变成了这样：&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/205712621.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020907355-912137813.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;搞架构的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;|&lt;/span&gt;&lt;/p&gt;

&lt;div&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214020928726-131358736.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/210417003.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;都 三四十的人了，不敢乱表白呀 `_`!!，很有责任心呢，实在是好榜样。&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214021134675-2007057084.png&quot; alt=&quot;&quot; width=&quot;379&quot; height=&quot;234&quot;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;搞临时工的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;|...&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/208001639.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214021100051-1149150634.png&quot; alt=&quot;&quot; width=&quot;393&quot; height=&quot;238&quot;/&gt;
&lt;/div&gt;
&lt;p&gt;俺也不会啥代码的，就送几个钻戒吧..&lt;/p&gt;



&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/d6bdf277-9d05-4a0f-b6a9-02417ea41b42.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/d6bdf277-9d05-4a0f-b6a9-02417ea41b42.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/7282aeb6-0816-407b-9244-dc5baae9ef0b.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;...&lt;/strong&gt;&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214021412846-1674093489.png&quot; alt=&quot;&quot; width=&quot;221&quot; height=&quot;223&quot;/&gt;
&lt;p&gt;&lt;strong&gt;...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;...&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/242916/201902/242916-20190214021935043-131973853.jpg&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/e4a3412d-3e80-4242-92d7-617794c351fc.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;小编呢，也偷偷找了一个有个性的诗句，可以借鉴采纳&lt;/p&gt;

&lt;p&gt;&lt;span&gt;       我能抽象出整个世界．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　但是我不能抽象出你．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　因为你在我心中是那么的具体．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　所以我的世界并不完整．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　我可以重载甚至覆盖这个世界里的任何一种方法．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　但是我却不能重载对你的思念．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　也许命中注定了 你在我的世界里永远的烙上了静态的属性．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　而我不慎调用了爱你这个方法．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　当我义无返顾的把自己作为参数传进这个方法时．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　我才发现爱上你是一个死循环．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　它不停的返回对你的思念压入我心里的堆栈．．． &lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　在这无尽的黑夜中．．． &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我的内存里已经再也装不下别人．．． &lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;file:///C:/Users/atp/Documents/My%20Knowledge/temp/e1a12eec-1bc2-43db-ada7-0166483a3819/128/index_files/0.46787802995425287.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1550085960839&amp;amp;di=3eb082a4b39b8dfd841e818d2c64b360&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20170804%2F189d730f5c58433ca5756d8c599e6960_th.jpg&quot; alt=&quot;&quot; width=&quot;387&quot; height=&quot;218&quot;/&gt;&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;


&lt;p&gt;谨以此篇送给还在犹豫的你，不管结果如何努力过就好，祝愿天下有情猿终有眷属！&lt;/p&gt;
&lt;p&gt;本文大多内容摘自互联网，如有雷同请勿喷勿念，大家开心就好。&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Wed, 13 Feb 2019 18:27:00 +0000</pubDate>
<dc:creator>美码师</dc:creator>
<og:description>今天是2019年的第一个情人节！，是的你没听错，是情人节到了，还在办公室加班的你还在加班吗？ 是不是乐此不疲？ 还在赶项目进度而忘记吃饭甚至忘记给女朋友惊喜的你，知道老板已经已经在为情人节狂欢了吗？</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/littleatp/p/10372599.html</dc:identifier>
</item>
<item>
<title>《组织行为学》--态度、工作满意度及个人感悟 - 超大的雪童子</title>
<link>http://www.cnblogs.com/yangsy0915/p/10372301.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yangsy0915/p/10372301.html</guid>
<description>&lt;h2&gt;&lt;strong&gt;一、态度&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　&lt;strong&gt;（1）什么是态度？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　态度是根据经验而系统化了一种心理和神经的准备状态，它对个人的反应具有指导性的或动力性的影响。洛克奇指出：态度是一种具有结构和组织的复杂的认知体系。前一定义侧重在态度是个人行为的内在结构，或强调态度是个人行为的倾向性，它是对个人行为产生影响的一种心理结构。后一定义侧重于态度是个人对事物内在信念的总评价，强调态度是一种认识体系，侧重于认知方面。我们比较赞同以下定义：&lt;/p&gt;
&lt;p&gt;　　　　态度是人们关于物体、任务和事件的描述性陈述，这种评述可以是赞同的也可以是反对的，它反映了一个人对于某一对象的内心感受。态度不是行为而是行为的前提，是一种反应的准备状态。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（2）态度的三种成分&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　态度不等同于价值观，但两者其实相互关联。态度额三个组成成分是：认知成分、情感成分和行为意向成分。&lt;/p&gt;
&lt;p&gt;　　　　“战争会给人们带来灾难”这种信念是一种价值陈述，这种对态度对象的认识、理解和评价，即态度的认知成分。它为态度的一个更为关键的成分奠定了基础--情感成分。情感是态度中的情绪体验部分，它在下面这个陈述中反映出来，“所以我们坚决反对战争，因此而不喜欢XX政府”。最后，情感能够导致行为结果。&lt;/p&gt;
&lt;p&gt;　　　　态度中的行为意向成分指个体可能以某种方式对某人或某事做出行动的意向。态度的这三种成分，是外界刺激与个体反应之间的中介因素，个人对外界刺激的反应受其态度的调节。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190213225645957-685897442.jpg&quot; alt=&quot;&quot; width=&quot;572&quot; height=&quot;271&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　认知因素，规定了态度的对象。态度总是有一定的对象，其对象可以是人、物、群体、事件等，也可以是代表某种具体事物本质的抽象概念，如勇敢、诚实等，还可以是制度或规定，例如上班打卡制度，迟到罚款制度等。如果只是笼统地说某个有善意的态度，那是不确切的。描述一个人态度的时候必须明确针对某一个对象，例如工作态度、对某人的态度，对学习的态度等。认知因素是带有好坏的评价与意义的叙述成分，叙述内容包括个人对某个对象的认识和理解。&lt;/p&gt;
&lt;p&gt;　　　　情感因素是个人对某个对象持有的内心体验，喜欢或厌恶；尊重或轻视；同情或冷漠等。&lt;/p&gt;
&lt;p&gt;　　　　意向因素是个人对态度对象的反应倾向。即行为的准备状态，准备对态度对象做出某种反应。意向不是行为本身，而是行动之前的思想倾向。&lt;/p&gt;
&lt;p&gt;　　　　态度的三种成分通常是协调一致、共同起作用的。例如，员工认识到学习的重要性，渴望学习新的知识新的东西，说明态度中的三种成分是一致的。但是有时候也会有不一致的情况，比如吸烟有害健康，但是我们并不讨厌吸烟，甚至自己吸烟。&lt;/p&gt;
&lt;p&gt;　　　　情感是态度的中心成分，它会决定行为倾向。即使一个表明了自己对某个对象的态度，也不意味着他的行为与其表达的态度或观点一致。从本质上来讲，态度是一种与外显行为可能一致也可能不一致的主观经验。即使人们对某一事物的认知描述十分混乱，他们还是会对该事物产生强烈赞同或反对的情感性态度。&lt;/p&gt;
&lt;p&gt;　　　　一个人的态度是缺乏稳定性的，这一点与价值观不同。&lt;/p&gt;
&lt;p&gt;　　　　如果员工认为公司领导对自己很关系，他们就可能努力工作。因此，理解态度是怎样形成的，它与实际工作行为的关系以及它可能如何改变，就显得非常重要了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　（3）态度的形成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　一个人对某件事或某个人的态度如何形成的呢？我们为什么会对客观事物包括自己持有某种态度呢？&lt;/p&gt;
&lt;p&gt;　　　　首先，态度的形成过程是一个人复杂的社会化过程的一部分。我们从自然人变成社会人，需要接受社会的影响，在成长过程中逐渐对周围世界形成了某种态度。随着周围世界的变化，我们的态度也会发生变化。&lt;/p&gt;
&lt;p&gt;　　　　其次，态度的形成过程是从服从到同化再到内化的过程。一个人态度的形成需要一个过程，表现为明显的阶段。&lt;/p&gt;
&lt;p&gt;　　　　1、服从，个人为了获得物质或精神的报酬而采取表面上服从的行为，但这个时候并不是自己真心愿意的行为，只是在某种条件下对社会条件或规范的服从。后来，人们把服从的东西转化成自己的东西，个人自愿地接受社会的观念或信念，与外界环境保持一致，也就是被环境同化了。越是有吸引力的群体或他人，越容易使新人被同化。&lt;/p&gt;
&lt;p&gt;　　　　2、内化，个体把外界的标准和思想完全转换成自己的标准，并从内心深处接受和认同，也就是彻底转变了自己的态度。&lt;/p&gt;
&lt;p&gt;　　　　从表面的服从到内化，是一个很复杂的过程，但并不是所有的人对所有事情的态度都要经过这个过程。可能简化，也可能重复。但态度是一个相对不稳定的心理属性，这一点与价值观不同。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;二、态度与行为&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　&lt;strong&gt;（1）态度与一致性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　人们为了避免和自己的行为发生矛盾，所以改变了自己的言辞？研究表明，人们总是在寻求态度之间的一致性以及态度和行为之间的一致性。这意味着个体在努力调和不同的态度，并使态度与行为保持一致，以使自己变得富有理性和言行一致。当出现不一致时，个体就会采取措施促使态度与行为重新回到一致的平衡状态。人们采用的方法有：改变态度，或者改变行为，或为这种不一致找一种合理化的理由。当然，要是这种不一致与部协调性过大时，他们可能辞去这份工作。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（2）认知失调理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　如果我们知道了一个人对于某事的态度，就可以预测出这个人的行为？对于这个问题的答案远比“是”或“否”复杂得多。&lt;/p&gt;
&lt;p&gt;　　　　认知不协调理论，这个理论试图用认知的观点对态度和行为之间的联系做出解释。相互矛盾的观念就是不协调，不协调使人感到不舒服，所以，我们有一种倾向，就是把不舒服降低到最小程度。不协调就意味着不一致。认知失调泛指任何情况的不和谐。个体寻求的是一种能把失调降低到最低程度的稳定状态。&lt;/p&gt;
&lt;p&gt;　　　　当个体感受到这种不协调是一种不可空的结果--也就是说，他们没有选择余地，则不太可能改变自己的态度。例如，如果导致失调的行为来自老板的指示，那么减少失调的压力比资源行为要小得多。尽管此时失调依然存在，但人们很容易把它合理化并作出辩解。那么比如一些中介因素，也就是奖励，如果奖赏足够有人可以抵消不协调感，那么个体不会有太强的压力来减少这种失调。&lt;/p&gt;
&lt;p&gt;　　　　认知失调理论对组织的意义何在？可以帮助我们预测员工在态度和行为改变方面的倾向性。例如，如果由于工作需要员工被要求说或做与他们的个人态度相冲突、相矛盾的事情，他们倾向于努力改变自己的态度，以使他们的态度与言行相一致。而且，这种失调性越大（经过重要性、选择权和奖赏等因素的校正以后），那么减少它的压力也就越大。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（3）态度与行为的关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　人们所持有的态度会决定了他们会做什么。态度与行为之间并无相关关系，即使有，也不过是很弱的相关性。不过，更为近期的研究还是表名，如果把一些调节变量加进来，那么态度可以有力地预测未来的行为。&lt;/p&gt;
&lt;p&gt;　　　　调节变量。人们发现最有力的调节变量是：态度的重要性，态度的具体性，态度的可提取性，是否存在社会压力，个体对于这种态度是否具有直接的经验。&lt;/p&gt;
&lt;p&gt;　　　　重要的态度是哪些基本的价值观、自我利益的反应，或是反应了一个人对于自己看中的个体或群体的认同。被个体认为很重要的态度，倾向于表现出与行为的高度相关性。&lt;/p&gt;
&lt;p&gt;　　　　很容易回忆起来的态度会比那些不容易从记忆中透气出来的态度更可能预测行为，有趣的是，你更可能记住的是哪些频繁表达的态度。因此，你对于某个个体所表达的态度越频繁，你越可能记住它，而它越可能影响你的行为。&lt;/p&gt;
&lt;p&gt;　　　　当社会压力在某种方式上拥有绝对的权利时，态度与行为之间更可能出现差异。&lt;/p&gt;
&lt;p&gt;　　　　最后，如果个体对于态度所针对的事件有着直接经验，则态度和行为之间的关系很可能跟强烈。当问到为一个专职的主管工作会有何反应时，如果寻味哪些没有明显工作的大学生，则很难预测他们的实际行为。同一个问题问及为类似主管工作过的员工时，得到的效果则不同。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（4）自我知觉理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　研究者通过另一种途径来考察是否寻味会影响态度时，发现了更高的相关性，称之为自我知觉理论&lt;/p&gt;
&lt;p&gt;　　　　当问到一个人对某种事物的态度时，个体会回忆他们与这种事物有关的行为，然后从他们过去的行为中推断出对该事物的态度。与认知失调理论相反，当人们被问及自己的态度时，他们并没有太强烈的想法或情感，自我知觉理论指出，人们倾向于找出一种听起来合理的答案。当你的态度早已在头脑中形成，并且界定得十分清晰时，那么 ，这些态度很可能会指导你的行为。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（5）情景的压力&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　当与个人态度相反的情景压力很强时，态度就不可能像平时那样，成为强有力的行为决定因素。强大的情景压力往往使人做出违心的行为。这就涉及两个最重要的变量就是价值和代价。&lt;/p&gt;
&lt;p&gt;　　　　由于某个对象极有价值，会使个人放弃原有的态度，做出相反的行为。比如，一向不愿意吃药的人，在得了重病时，也会毫不犹豫把药吃下去。太大的代价也会使人望而却步，放弃原有的态度。这种代价指的是，为达到某种目的所小号的物质或能力。如果为了坚持已有的态度，个人要付出的代价高于个人愿意承受的范围，也常常会出现与态度不一致的违心行为。&lt;/p&gt;
&lt;p&gt;　　　　影响态度和行为不一致的还有一些原因，如缺乏保证实现良好愿望的能力与技巧；一种行为与几种相矛盾的态度相关联。实现某一态度则与另一些态度不一致时，甚至还有仅仅出于策略考虑的情况等等。　　&lt;/p&gt;
&lt;p&gt;　　　　宗之，态度与行为并非简单机械的一一对应，有时会出现不一致。总的来说态度与行为是相符的，但是有时会受到情境因素的干扰。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;三、态度的改变&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　&lt;strong&gt;（1）参与活动，改变态度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　要改变一个人的态度，必须引导他积极地参加相应的活动，在活动中增强对态度对象的了解，从而有效的改变态度。对于原来不喜欢的人，由于经常在一起工作、学习，互相了解，也可能由不喜欢变为喜欢。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（2）群体规定，改变态度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　群体成员的一致性行为对个体来说会产生很大的压力，它迫使个体采取与多数人一致的行为方式，而且群体成员在情绪上也会互相感染，行为上相互模仿，所以群体规定能有力地改变个体的态度。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（3）了解态度差距，“小步子原则”改变态度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　当目标态度在个人可接受的范围内，态度是可以改变的，如果超出了可接受的范围，个体就不能容忍。要改变一个人的态度，必须了解他原来的态度强度，然后再估计要求改变的态度和原来态度的差距是否过于悬殊。每一次提出的要求都在可能性接受的范围内，待态度改变并稳定下来后，再进一步要求，逐渐地缩小差距，有利于完全转变他的态度。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（4）说服的作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　通过信息传播或沟通的方式来改变的态度就是说服，说服是改变态度的主要方法。说服过程包括四个部分，即说服者、说服信息、说服对象和情景。就是谁说，说什么，对谁说，在什么场合下说。&lt;/p&gt;
&lt;p&gt;　　　　1、说服者方面的影响因素&lt;/p&gt;
&lt;p&gt;　　　　　　说服者作为信息源，要向说服对象输入新的信息。而人们总是将信息源和信息结合到一起考虑，因此，说服对象对信息来说是否新人，决定了他是否接受这些信息。说服对象对说服者越新人，说服的效果越多。通常，说服者在某一领域中越具有权威地位，影响力越大。另外，说服者的外表越具有吸引力，令人喜欢，则人们也更容易接受他的观点。&lt;/p&gt;
&lt;p&gt;　　　　2、说服对象的特点&lt;/p&gt;
&lt;p&gt;　　　　　　说服过程终端的说服对象，是具有主观能动性的人。不同的对象可能有不同的反应，有的接受，有的抵触。所以，在设计、组织和传递信息时，必须考虑对象特点。他的价值观是什么？他的主导动机如何、他的个体特点是随和易变、开放接纳外界新事物的，还是固执、具有很强自我防御机制的。&lt;/p&gt;
&lt;p&gt;　　　　3、说服信息的特征&lt;/p&gt;
&lt;p&gt;　　　　　　对于受教育程度比较低的人来讲，单方面的宣传容易转变他们的态度。而对于文化程度较高的人来说，正反两方面的论证效果更好，前提是对于你所宣传的观点的论证必须充分。这一原理，也可以解释为什么广告只对某些人有效。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;四、工作中的态度&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　　　1、工作满意度&lt;/p&gt;
&lt;p&gt;　　　　　　工作满意度指个体对他所从事的工作的总体态度。如果一个人拥有较高水平的工作满意度，说明他对工作持积极的态度；而对工作不满意的人，则对工作持消极态度。组织行为学认为，工作满意度非常重要。&lt;/p&gt;
&lt;p&gt;　　　　2、工作参与&lt;/p&gt;
&lt;p&gt;　　　　　　它测量一个人从心理上对其工作的认同程度、认为它的绩效水平对自我价值的重要程度。工作参与程度高的员工对他们所做的工作有强烈的认同感，并且真的很在意自己的那份工作。工作参与程度高于低缺勤率和低辞职率成正相关。&lt;/p&gt;
&lt;p&gt;　　　　3、组织承诺&lt;/p&gt;
&lt;p&gt;　　　　　　员工对于特定组织及其目标的认同，并且希望保持组织成员身份的一种心态。所以，高工作参与意味着一个人对于具体工作的认同；高组织承诺则意味着对于所在组织的认同。&lt;/p&gt;
&lt;p&gt;　　　　　　组织承诺的三个维度：情感、连续、规范承诺。情感承诺个体的需要和他们对组织的期望，以及他们实际感受的满足两者相符程度的影响。边缘承诺受到个体对离开组织所产生的代价的认识的影响。规范承诺是对留在组织中的义务的认识，它以人们普遍接受的组织与雇员之间相互的责任与义务为基础。&lt;/p&gt;
&lt;p&gt;　　　　　　个体的组织承诺水平是预测离职现象的有效指标，它可以解释34%的变异。它对“离职意向”的预测率更高。虽然人们往往更多地使用工作满意度作为预测指标。一个员工可能会对他所从事的某个具体工作不满意，但认为这是暂时的现象，因而并不对组织的整体感到不满意。但是，当不满意蔓延至组织本身时，员工更可能会考虑离职。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;五、态度调查&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　对于员工态度的了解有助于管理者预测员工的行为。在个体分数基础上还可以得到工作群体、工作部门、分公司以及整个组织的态度平均分。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190214011251545-960339320.jpg&quot; alt=&quot;&quot; width=&quot;559&quot; height=&quot;317&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　简要的态度调查，如（1）在工作中你的看法受到重视；（2）在你们当中，如果有人想成为公司的领导者，他是有机会成为这个角色的。（3）在最近6个月里，有人和你谈过你的个人发展问题。定期使用态度调查能够为管理者提供有价值的反馈信息，从而了解员工对他们工作环境如何感受的。管理层可能认为组织的规章制度和实践活动是客观和公正的，然而员工群体或一部分员工却可能并不这么认为。&lt;/p&gt;
&lt;p&gt;　　员工是行为是建立在知觉基础上，而不是建立在事实基础上。即使管理层拥有客观证据表明给员工支付的薪水相当有竞争力，但如果员工自己觉得薪水过低，他也会因此而辞职，其结果与他实际上得到了过低的薪水毫无差异。定期使用态度调查能够提醒管理层注意潜在的问题，及早了解员工的意图，以便采取措施防范于未然。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt; 五、工作满意度&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　工作满意度是组织行为学的核心概念之一。实际上，当前组织行为对满意度的关注，已经从单纯的工作满意度转变为员工马一度。主要讨论范围：如何测量工作满意度？员工对他们的工作有多满意？工作满意度对员工的生产率、缺勤率和流动率有什么影响？&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（1）工作满意度的测量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　个体对其工作的总体态度。任何工作都需要与同事和上司进行相互交往、遵守组织的规章制度、达到绩效评价标准、生活在与理想有差距的工作环境中等等。这意味着员工对工作是否满意的评价，常常是对大量不同工作元素进行总合的结果。&lt;/p&gt;
&lt;p&gt;　　　　有两种最为广泛的手段，其一是单一整体评估法，其二是包括多维度的综合评价法。&lt;/p&gt;
&lt;p&gt;　　　　单一整体评估法，例如，如果你把所有因素考虑在内，你对自己的工作满意吗？要求从数字1-5所代表的分数等级中圈出一个符合自己的数字，这些数字代表了从“非常满意”到“非常不满意”的不同程度。&lt;/p&gt;
&lt;p&gt;　　　　多维度的综合评价法，首先需要确定工作中的关键要素，然后询问员工对于每一个维度的感受。典型的因素包括五个方面：工作性质、收入水平、晋升机会、同事关系、上级的监督与控制。通过标准化的量表来评估这些要素，累加起来就得到工作满意度总分。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（2）员工对他们的工作有多满意&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　哪些因素可以解释工作满意度上最近的下降趋势？一种可能是，雇主试图通过对员工施加更重的工作符合和规定更苛刻的工作来提高生产率；另一种可能是一种感觉，越来越多的工人报告说，他们对工作的控制程度日益降低。工作满意度随收入的提高而提高这一事实，是否意味着金钱可以买到快乐？未必如此。尽管更高的收入本身可以转化为更高的工作满意度，但这一现象的另一种解释：更高的收入反映了工作类型的不同。更高的收入的工作通常需要技能更高、在职者的工作职责更多、工作根据刺激性和挑战性、员工对工作的控制更多。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（3）中国员工的满意度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　运用层次分析法（AHP），将反应员工工作满意度的内容归纳为 工作本身、工作汇报、工作条件、工作群体、企业历史文化 五个基本维度。将这五个基本维度的内容分解为26项具体的评价指标。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190214013830603-1236928395.jpg&quot; alt=&quot;&quot; width=&quot;615&quot; height=&quot;368&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190214013905789-1289687996.jpg&quot; alt=&quot;&quot; width=&quot;552&quot; height=&quot;545&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　研究表明，不同岗位、不同年龄、不同企业和不同教育背景对于员工满意度都存在着显著性差异，但是不同岗龄对于员工满意度没有显著影响。&lt;/p&gt;
&lt;p&gt;　　　　国内企业的研究结论认为：性别和年龄对满意度没有影响。教育水平越高，工作满意度越低。月收入、所在行业和工作单位性质显著影响工作满意度。职能和级别也存在差异：中层管理、一般员工、高层管理人员依次升高。&lt;/p&gt;
&lt;p&gt;　　　　有人专门研究了脑力劳动者的工作满意度，得出的结论是：我国脑力劳动者普遍对激励机制不满意，工资待遇低引起脑力劳动者不满意。工资待遇是脑力劳动者较为关心的问题之一。不同性质单位的满意度有差异，企业的劳动者对工资收入满意度最高，其次是政府机关、事业单位最低。&lt;/p&gt;
&lt;p&gt;　　　　科技人员对薪酬的满意度存在差异：高层、中层、基层依次递减，也存在职称差异：初级、中级、副高级、正高级依次递减。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（4）满意度与员工绩效&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　1、满意度与生产率 &lt;/p&gt;
&lt;p&gt;　　　　　　快乐的员工未必就是高生产率的员工。有趣的是，如果我们站在组织水平上而不是个体水平上，则会重新支持过去关于 “满意度---工作绩效”的关系。当我们以组织作为整体来收集满意度与生产率的数据时，而不是在个体水平上收集时，则会发现员工满意度较高的组织相比员工满意度较低的组织更有效。我们不能说快乐的员工就是更高生产率的员工，但是我们可以说，快乐的组织是更高产的组织。&lt;/p&gt;
&lt;p&gt;　　　　2、满意度与缺勤率&lt;/p&gt;
&lt;p&gt;　　　　　　尽管不满意的员工更可能旷工这一点从道理上说得通，但是，其他因素也影响着两者之间的关系并降低了两者的相关系数。&lt;/p&gt;
&lt;p&gt;　　　　3、满意度与流动率&lt;/p&gt;
&lt;p&gt;　　　　　　满意度和流动率之间也是负相关，而且这种相关性比我们看到的满意度与缺勤率之间的相关性更高。组织会做出相当的努力来挽留那些高绩效的员工。他们会得到高薪、更多的表扬和认同，更多的晋升机会等。工作满意度对于低绩效者的影响大于对高绩效者的影响。无论满意度水平如何，高绩效者更可能呆在组织里，因为他们得到的认可、表扬以及其他奖励给他们提供了更多的理由留下来。&lt;/p&gt;
&lt;p&gt;　　　　4、工作满意度与组织公民行为&lt;/p&gt;
&lt;p&gt;　　　　　　感到满意的员工更可能以积极的心态来谈论组织、帮助他人、在工作中也做得比正式期望更多。感到满意的员工可能更倾向于主动承担正式要求之外的更多责任，因为他们希望回报自己的积极体验。然而，越来越多的研究证据表明，工作满意度对于组织共鸣行为的影响，是通过公平感发生的。&lt;/p&gt;
&lt;p&gt;　　　　　　从根本上说，工作满意感来自于公平的结果，待遇、程序这些概念。如果你觉得你上级主管、组织程序、薪酬制度不公平，则满意度可能会受到显著打击。当你感觉到组织的过程与结果是公平的，则会发展处信任。但你信任自己的雇主时，就会更满意自觉履行正式工作要求之外的行为。&lt;/p&gt;
&lt;p&gt;　　　　5、员工如何表达不满&lt;/p&gt;
&lt;p&gt;　　　　　　员工可以抱怨、不服从、窃取组织财产或者逃避一部分工作责任，这些做法都比辞职更为普遍。四种不同反应：&lt;/p&gt;
&lt;p&gt;　　　　　　退出：行为直接指出离开组织。包括寻找新的工作岗位或者辞职。&lt;/p&gt;
&lt;p&gt;　　　　　　建议：采取主动地、建设性的努力来改善工作条件。包括，提出改进建议、主动与上司以及其他类型的团体一起讨论所面临的问题。&lt;/p&gt;
&lt;p&gt;　　　　　　忠诚：被动但乐观地等待环境有所改善。包括：面对外部批评时站出来为组织说话，相信组织及领导层会做出“正确的事”。&lt;/p&gt;
&lt;p&gt;　　　　　　怠工：被动地听任事态越来越糟，包括长期缺勤或迟到，降低努力程度，增加失误率。&lt;/p&gt;
&lt;p&gt;　　　　6、哪些因素可以提高工作满意度&lt;/p&gt;
&lt;p&gt;　　　　　　心理挑战性的工作：员工更喜欢得到这样的工作。这些工作能为他们提供施展技术和能力的机会，能够为他们提供多种多样不同的任务，可以得到范阔了解自己干得怎么样。&lt;/p&gt;
&lt;p&gt;　　　　　　公平的报酬：希望报酬制度和晋升政策能让他们感到公正、明确，并与他们的期望相一致。当报酬建立在工作要求、个人技能水平、社区工资标准的基础上时，就会被视为公正，也会导致对工作的满意。晋升为员工提供的是个人成长的机会，更多的责任感和社会地位的提高。因此，如果员工觉得晋升决策是在公平和公正的基础上进行的，则可能会从工作中体验到满意感。&lt;/p&gt;
&lt;p&gt;　　　　　　支持性的工作条件：为了个人舒适，也是为了更好地完成工作。&lt;/p&gt;
&lt;p&gt;　　　　　　支持性的同事：工作还能满足他们的社交需要。友好的和支持的工作伙伴会提高员工对工作的满意度。上司的行为也决定满意度的一个重要因素。当员工的主管是善解人意的、倾听员工的意见的、对员工感兴趣时，员工的满意度会提高。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;个人感悟&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　员工对于工作的态度及满意度直接影响到组织的稳定性，如果核心员工的消极怠工或是离职，会对其他组织成员造成心理上的影响，不光是对于工作开展的成本的影响，也会对整个组织成员对组织的信心上、个人心态上造成影响。&lt;/p&gt;
&lt;p&gt;　　我们站在第三视角审视整个组织，管理者需要把握员工的真正工作动机及满意度，同时可以通过对员工现有工作情况、家庭情况以及当前所处的态度来判断员工最想要的是什么，通过员工的需求激励措施来激发员工的积极性，通过团队建设等方式保持员工与其他员工的正向交流，从而提高员工的满意度与稳定性。&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 18:02:00 +0000</pubDate>
<dc:creator>超大的雪童子</dc:creator>
<og:description>一、态度 （1）什么是态度？ 态度是根据经验而系统化了一种心理和神经的准备状态，它对个人的反应具有指导性的或动力性的影响。洛克奇指出：态度是一种具有结构和组织的复杂的认知体系。前一定义侧重在态度是个人</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yangsy0915/p/10372301.html</dc:identifier>
</item>
<item>
<title>像我这样的人 - 陈本布衣</title>
<link>http://www.cnblogs.com/chenbenbuyi/p/10177038.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenbenbuyi/p/10177038.html</guid>
<description>&lt;p&gt;　　我是一个特别有计划的人，也特别热爱学习，内心时刻充盈着奋发向上的心；尤其身为码农一族，更要活到老学到老！常常感叹余生苦短，时间宝贵，所以平日里，那些热门的剧是不追的，抖音是不刷的，综艺是不看的，游戏是不玩的，只是上上网了解外面世界发生的事防止自己和社会脱节，剩余的闲暇时间，都投身学习，简直难以自拔。&lt;/p&gt;
&lt;h2&gt;热血澎湃的学习计划&lt;/h2&gt;
&lt;p&gt;　　还是元旦节的时候，别人还在总结去年的得失，我却早早的定下了新一年的学习计划：&lt;/p&gt;
&lt;p&gt;　　　　① 常用的框架Spring、SpringMVC、MyBatis、Shiro、Dubbo、JFinal等等每月学习一套不算多吧？&lt;/p&gt;
&lt;p&gt;　　　　② 技术类的书籍比如《Java编程思想》、《Spring实战》、《MyBatis技术原理与实战》、《深入理解 Java 虚拟机》、《Java并发编程实战》等经典书目一年之内啃一(遍)争二（遍）不算多吧？&lt;/p&gt;
&lt;p&gt;　　　　③ 个人技术博客每周或每两周更新一篇不算多吧？&lt;/p&gt;
&lt;p&gt;　　　　④ 其它日常开发的小技能见一个灭（学）一个不算过分吧？&lt;/p&gt;
&lt;p&gt;　　有人说计划太笼统了，呵呵，怎么可能，像我这样的人，在学习这件事上不光善于计划，而且善于分解计划。随手拿起床头买了一年的新书《Java编程思想》，翻开目录扫视一遍，嗯，章节不算多，剔除图形化部分也就21个章节，而且比较基础，以博主一目十行的阅读速度和超强的知识理解能力，三个月啃完没啥压力，于是任务分解信手划出:一月份啃第1章“对象导论”到第10章“内部类”，二月份消灭第11章“持有对象”到第16章“数组”，三月份学完第17章“容器深入研究”到第21章“并发”。男人，就该对自己狠一点，抓紧时间，没有什么任务完不成；如果能提前完成学习任务更好，不光能让同事领导刮目相看，还能在日常项目中学以致用，让自己的代码走位更加风骚有内涵——要知道技能贴合着项目经验的积累才是码农们涨薪的必要一环啊。接着继续深入Spring系列套餐，这可是开发中的重点技能。。。而常见框架度娘一套学习视频demo走起，然后结合学习经验和个人实践又能总结形成技术博客，光想想就很perfect。&lt;/p&gt;
&lt;p&gt;　　制定计划就像是在给自己打鸡血，总令人心潮澎湃，久久难平。你想啊，一年之后，按计划修炼完成，个人技能那肯定是飞一般蹭蹭蹭上窜几个台阶啊，要基础有基础，要技术有技术，常用框架不在话下，日常功能小菜一碟，出去找工作，面试不光技术层面能侃侃而谈，还有常年积累的技术博客做背书，这可是实打实的技能型人才啊，新东家要不给翻倍工资我都不带鸟它的，哼哼，感觉就要攀上人生的一个小高峰了！为了最大限度利用时间学习，博主还给自己加了些辅助，比如每天早十分钟去公司，先练习十来分钟Linux常用命令或者SQL语法，一天之计在于晨，早上记脑子清醒，适合记忆；中午吃饭时间也别闲着，找点面试真题撸一撸拓宽知识面；把要啃的书籍的PDF文档下载到手机，上下班路上以至于厕所蹲坑的时间也能充分利用。。。&lt;/p&gt;
&lt;h2&gt;我是这样的人&lt;/h2&gt;
&lt;p&gt;　　完美的计划，需要完美的开端，元旦3天刚过完，计划开始，Action！&lt;/p&gt;
&lt;p&gt;　　下班溜得飞快，生怕浪费一点时间，回到家六点半，吃饭洗碗玩下手机稍缓一下，差不多七点半，嗯，然后就是大把的学习时间，噢，NO,NO,NO，你想的太简单了。博主是个已婚男人，孩子刚刚一岁，正是需要陪伴照料的时候，所以，接下来的日程是这样的：陪老婆孩子散步一小时，鉴于码农身体每况愈下的现实，为防猝死早衰(xie)，至少得锻炼半个小时（实际上也是三天打鱼两天晒网），再次着家差不多九点过，然后打开电脑，准备干。。。等等，孩子的事情还没完呢，于是给孩子泡奶粉换尿布洗脸洗手洗屁股，拾掇一番，再加上一些鸡零狗碎或者鸡飞狗跳的的事情，真正可以坐下来开始学习至少要等到晚上十点。十点，对我父母那样的人来说，可能都睡醒一觉了，而属于博主这种上有老下有小的苦逼码农自己的时间才刚刚开始呢。老婆大人常说：你总嫌我和孩子耽误你学习时间，可你每晚哪怕就学习到十二点都有整整两个小时的时间啊，想想挺有道理的，于是关灯，她哄着孩子睡觉，我独坐台灯下电脑前夜战——终于可以撸会儿自己的代码啦！&lt;/p&gt;
&lt;p&gt;　　正式开始学习，看看时间才十点整，总感觉时间尚早，于是习惯性的，先打开腾讯首页浏览一番，时政新闻，证券资讯，体育新闻。。。嗯，不错，信息量挺大，根本停不下来啊。。。再看时间，半个小时过去了，不行，不能再磨蹭了，必须要正式开始了，于是又习惯性的打开博客园首页，看看园友最新发布了哪些技术博客，《Maven就这么简单》，嗯，熟悉的知识，先看一两段，嗯，不错，写的好，没时间细看，滚动鼠标直接到底，好东西先收藏，待有时间一定要好好学习学习；继续下看，《Spring Boot上传原理》，看一段，嗯，也写的很好，也收藏之；再看看此博主的其它博文，嗯，不错，都是满满的干货啊，果断关注之，有时间一定要好好学习学习。。。如此，直到看到昨天看过的时间节点——对于我这样爱学习的人来说，怎么能错过社区大牛们技术分享的盛宴呢？现在，我博客园开博时间不过1年5个月，竟然收藏文章300余篇，虽然没有一篇是我回看学习过的，但博主很相信自己将来一定有时间慢慢消化的。浏览博客的时间又耗去半个小时，时间已经是十一点了，赶紧的，IDE工具打开，建工程创目录，主方法带打印，一顿梭哈溜得不行，照着学习教程一通HelloWord写完也不难，然后，诶，看着demo自鸣得意，十分钟的专注后抵不过弹窗新闻的骚扰，才开始学了一点了，脑子就觉得充盈得不行，想要犒劳下放松会儿，要么拿起手机看微信，要么就是打开首页看新闻。虽然博主自以为不追剧不游戏，浪费时间的方式看起来比较单一，但看新闻和微信却用去了自己大多数的有暇时间啊！新闻看再多，碎片化的记忆两秒就忘了，但手贱就是要点开看；微信虽然没啥人找，却总是一遍遍的打开，挨个查看订阅号推送更新，十来个微信群一个个过一遍，朋友圈亮红点了，也强迫症一样点开看一下。。。我擦嘞，怎么就十二点了？都这个点了，免不了的开始犯困，即使不犯困，对着电脑已是一天，眼睛也受不住了——年纪大了，不比当年，越来越熬不住夜，有心无力啊！多少人都是年轻时以健康换钱财，老了又拿钱财买健康，划不来划不来的，明天再说吧！而且熬夜不光影响身体健康，还很影响夫妻生活。你想啊，孩子哄睡了，老婆有时间有兴致的时候，你在电脑前冷坐着，等你爬上床，人早睡了，谁还有心思那个？而且还免不了被老婆一番埋怨：大冬天的你不上床给我们娘俩暖被窝就算了，现在老娘把被窝睡暖和了你倒是上了蹭热度了？既然熬夜不行，那就做一只早起逮虫吃的鸟儿吧，早点起来看会儿书也行，还能避免熬夜瞌睡连天没有效率的问题。闹钟调了三档，6:30，7:00，7:30。一个冬天的实践证明，博主这种阶梯式的闹钟设置是非常合理的，从来没有一次因为闹钟问题上班迟到。而统计表明，博主在三个点起床的比例大概是3：5：2——6:30，大冬天的遥看窗外天色未明，实在没气氛起来，而且一年那么长，也不差这半个小时，多眯一会儿养足精神也好；7:00 闹钟又响，嗯，真不能再睡了，再睡就没有时间学习了，却还是要在被窝里酝酿那么十来分钟，像是打盹，又像是思考人生。终于起床了，洗漱做早餐吃早餐，而且作为一个居家的男人，还要去菜市场买好一天的菜，终于搞定一切能坐下来看书的时间也就所剩无几了。又怕上班迟到失了全勤，还是先去公司吧，早点去会有点时间学习。真的吗，噢，NO,NO,NO。我们公司通常上班是这样的：去早了公司还没开门，门开了同事之间先要闹腾一番为一天的工作预热——啥，你有敬业福，来来来老铁，送我一张可好？哎呀，我就差花花卡，等我粘粘卡粘你下——可怜一帮拿高薪的程序员，为了支付宝那两三块钱竟然互相。。。我还是该静一静的，打开各种工具软件，刚想Linux命令一日一练，不想领导一来又提新需求了，或者测试又测出新Bug了，正式上班了哟喂擦！而计划好的中午辅助呢，至少也吃完饭再说吧？饭吃完了总是要先拿起手机了解股市行情，新闻资讯，工作半天了总是要放松下脑子的吧？放松放松就困意绵绵，又得抓紧时间午觉了。。。&lt;/p&gt;
&lt;p&gt;　　看看自己的工作日常，总想唱问——时间都去哪儿了？感觉自己的一天完全不够24小时啊。虽然有周末，但软件行业，名义上的周末而已，双休时不时变单休，而且对于成了家的人来说，单休往往也并不属于自己。老婆会说，老娘受累带了一周孩子了，周末你也常常不着家，好不容易休息有时间，必须得带带孩子，现在孩子都不认你，你这爹怎么当的，真就只负责播种不负责养吗？所以，博主不光要挣钱养家，还得必须做一个合格的奶爸，至于学习的计划，额，明天开始吧，明天一定要开始了，不能再延宕了！可转眼间，年会开完了，旧历的年也过完了，自己所有可以为自己开脱的时间节点都走完了，计划还在脑子里停留。已是2月中旬，各种事由，书没能看完一章，博客没有更新一篇，技能自然也没能get一点；可是靠技术吃饭的人，内心的危机感是时时刻刻都有的，实在不敢停留，停留就意味着退步，退步，那就真的要被后浪拍死在沙滩上了。&lt;/p&gt;
&lt;p&gt;　　毛不易有一首歌《像我这样的人》，特别适合本文的尿性——&lt;/p&gt;
&lt;p&gt;　　像我这样优秀的人，本该灿烂过一生，怎么二十多年到头来，还在人海里浮沉？（真正优秀的人都拼命死磕自己好吗）&lt;/p&gt;
&lt;p&gt;　　像我这样一心想要学习拿起手机来却是新闻微信玩股票的人，&lt;/p&gt;
&lt;p&gt;　　像我这样明日复明日的人，&lt;/p&gt;
&lt;p&gt;　　像我这样老大不小却又碌碌无为的人，&lt;/p&gt;
&lt;p&gt;　　像我这样平庸而又不甘的人，&lt;/p&gt;
&lt;p&gt;　　你还见过多少人？&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 17:42:00 +0000</pubDate>
<dc:creator>陈本布衣</dc:creator>
<og:description>我是一个特别有计划的人，也特别热爱学习，内心时刻充盈着奋发向上的心；尤其身为码农一族，更要活到老学到老！常常感叹余生苦短，时间宝贵，所以平日里，那些热门的剧是不追的，抖音是不刷的，综艺是不看的，游戏是</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenbenbuyi/p/10177038.html</dc:identifier>
</item>
<item>
<title>git使用教程指南 - 前端蔡蔡</title>
<link>http://www.cnblogs.com/caiyy/p/10372550.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/caiyy/p/10372550.html</guid>
<description>&lt;p&gt; Git是一个开源的分布式版本控制系统。其核心就在于&lt;strong&gt;版本控制&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt; 在实际编码过程中，我们往往会忘记上次对文件的修改内容。若是刚刚修改的还好说，撤销操作即可。但若这是你昨天做的修改并关闭了IDE呢？所以我们需要有一个可以回退版本的工具。&lt;/p&gt;
&lt;p&gt; Git还有另一个作用便是&lt;strong&gt;多人协作开发&lt;/strong&gt;——将代码文件上传至云端，partner可以随时下载至自己的电脑，又可以随时做好修改再上传至云端。&lt;/p&gt;
&lt;p&gt; 我将学习Git分为三块，大家跟着我的步骤做一遍也就会了。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;配置Git及配置Github&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地Git操作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程推送操作&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;hr/&gt;
&lt;p&gt; 首先分清楚Git和Github的作用分别是什么。你们可以理解为——&lt;strong&gt;Git是运输的小车，Github是仓库&lt;/strong&gt;，我们将东西装上车，然后让他送到仓库去。&lt;/p&gt;
&lt;p&gt; 要想使用Git及Github服务，必须得创建Github账号，Github官网：&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot;&gt;https://github.com/&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt; 创建好账号后，再new一个repository。然后，我们接着配置Git。&lt;/p&gt;
&lt;p&gt; 我们需要先下载Git工具，这是Git官网：&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot;&gt;https://git-scm.com&lt;/a&gt;,根据自己计算机的系统下载即可。&lt;/p&gt;
&lt;p&gt; 而后我们需要在本地创建ssh key：&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; 后面的your_email@youremail.com改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的ssh key。&lt;/p&gt;
&lt;p&gt; 回到github上，点击右上角头像，选择Settings（账户配置），选择左边栏的SSH and GPG keys,点击new SSH key，title随便填，粘贴上你电脑上生成的key。&lt;/p&gt;
&lt;p&gt; 配置完ssh key后，我们还需要配置username和email：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    $ git config --global user.name &quot;your name&quot;
    $ git config --global user.email &quot;your_email@youremail.com&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt; 至此，Git的配置和Github的配置已经结束了，你已经有了可用的Git和可用的Github。接下来我们来学习如何进行本地Git操作。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt; 首先要学习几个概念——&lt;strong&gt;工作区，暂存区，版本库&lt;/strong&gt;。他们之间的关系如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1564471/201902/1564471-20190213195338685-156335578.png&quot; alt=&quot;引用自Runoob&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 这三个区域其实没有什么神秘的，他们都是个文件夹（为树结构）。他们的作用分别为&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;工作区：实际持有的文件夹，即你可以在 我的电脑 里找到的文件夹。用于实际项目开发。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暂存区：他就如同一个缓存，可以频繁地将工作区中的文件发送到其中，从而使发送过来的修改后的文件覆盖暂存区中的原文件。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本库：暂存区将他的文件发送到版本库中，用于发送到Github仓库中，作为最新版本。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt; 这三个区域之间的关系及功能搞清楚了，接下来我会先说最重要的Git操作，学会这些操作后就可以直接进行生产活动了。而后，我再陈列其他较重要的的Git操作及更深层的辨析。&lt;/p&gt;
&lt;p&gt; 首先，创建一个文件夹做为工作区，不过要想这个文件夹成为工作区，需要cd到该文件夹，输入&lt;code&gt;git init&lt;/code&gt;哦！这样其才是工作区，而不是普通的文件夹，切记。&lt;/p&gt;
&lt;p&gt; 然后，我们在文件夹中随意进行修改，如创建txt文件等。我在文件夹中创建了一个experiment.txt文件，并写入内容。根据上图，我们需要将工作区的文件发送到暂存区，使用&lt;code&gt;git add -A&lt;/code&gt;，该命令的意义为将所有的改动发送到暂存区中。（实际上还有很多种git add方法，但一般来说git add -A已经足够。）&lt;/p&gt;
&lt;p&gt; 再然后，将暂存区的文件发送到版本库中，使用&lt;code&gt;git commit -m 'comments'&lt;/code&gt;，其中comments为你对这个版本的说明文字。&lt;/p&gt;
&lt;p&gt; 好了，本地Git操作已经结束了，是不是非常简单？只要三步就好了，我们来复习一遍。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    $ git init
    $ git add -A
    $ git commit -m 'comments'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt; 基础的讲好了，如果觉得已经够用的，可以跳过下一阶段。我们接下来进入更深的层次。&lt;/p&gt;
&lt;h2 id=&quot;为什么要有暂存区&quot;&gt;为什么要有暂存区&lt;/h2&gt;
&lt;p&gt; 为什么要有暂存区，我们每次将实际改动的文件直接发送到版本库不就好了？这样也没有任何问题啊，还省了一步。&lt;/p&gt;
&lt;p&gt; 其实你想的没有错，这样是没有问题的。不过这与软件开发的一大基础原则背道而驰了——单一职责原则。若是没有暂存区，那么版本库就得既负责提交版本，又得负责保存修改，使得Git一点也不优雅。这是两个完全不同的功能，应该由两个模块去分别完成。&lt;/p&gt;
&lt;h2 id=&quot;分支&quot;&gt;分支&lt;/h2&gt;
&lt;p&gt; 引用自https://guides.github.com/activities/hello-world/ 的一句话：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Have you ever saved different versions of a file?&lt;/p&gt;
&lt;p&gt;Branches accomplish similar goals in GitHub repositories.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 意思就是：你是否为一个文件备份了许多不同版本，在GitHub中分支完成同样的目标。&lt;/p&gt;
&lt;p&gt; 我们之所以为一个文件备份好多份文件，就是担心我们不备份的话，代码打着打着，突然发现出现了bug，而我们却实在改不过来了，最简单的方法就是回到没有修改前的状态，但我们已经回退不回去了。这样的话，真的就是心态爆炸。&lt;/p&gt;
&lt;p&gt; 所以我们备份，但是最终我们发现，桌面一团糟。&lt;/p&gt;
&lt;p&gt; 所以分支就是这样的作用——&lt;strong&gt;绝缘特性开发&lt;/strong&gt;，简而言之就是，给你一个调试bug的分支，同时不影响其他分支。&lt;/p&gt;
&lt;p&gt; 默认情况下，都有一条主分支——master分支&lt;/p&gt;
&lt;p&gt; 以下是有关分支的操作：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    $ git branch 分支名 //用于创建新的分支，该分支的内容就是当前主分支的内容。
    $ git checkout 分支名 //切换到某一分支上
    $ git branch -d 分支名 //删除某一分支
    $ git merge 分支名 //将该分支合并到当前分支上&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt; 要注意一点的是，&lt;code&gt;git checkout 分支名&lt;/code&gt;切换分支后，工作区、暂存区、版本区也都对应的全都改变，即&lt;strong&gt;一个分支对应一套独立的工作区、暂存区、版本区&lt;/strong&gt;，其中我们可以直观地看到的是，切换分支后，工作区（也就是你电脑里的那个文件夹）的文件内容发生了改变。&lt;/p&gt;
&lt;p&gt; 其中，我要讲的是&lt;code&gt;$ git merge 分支名&lt;/code&gt;这一操作。&lt;/p&gt;
&lt;h3 id=&quot;分支合并-git-merge-分支名&quot;&gt;分支合并（$ git merge 分支名）&lt;/h3&gt;
&lt;p&gt; master是我们的主分支，而new是我们新建的分支，用于调试代码。而当我们在该分支上调试成功了，我们是不是应该将该分支的内容复制到主分支上？毕竟该分支new仅仅是我们为了调试bug而创建出来的，master才是真正的主分支。&lt;/p&gt;
&lt;p&gt; 所以分支合并其实就是&lt;strong&gt;将在B分支中修改的文件覆盖掉A分支中对应的文件&lt;/strong&gt;，未修改的文件不覆盖。&lt;/p&gt;
&lt;p&gt; 那么，又有一个问题来了——如果A分支和B分支都修改了这个文件呢？那么应该听谁的呢？&lt;/p&gt;
&lt;p&gt; 首先，这个情况我们称为&lt;strong&gt;分支合并冲突&lt;/strong&gt;，其次，&lt;strong&gt;当发生分支合并冲突时，他会将两个分支的修改都保存下来，但是要求你得手动修改文件后才能commit提交。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 其中，Git用&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;，=======，&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;标记出来自不同分支的内容。&lt;/p&gt;
&lt;h2 id=&quot;回退版本&quot;&gt;回退版本&lt;/h2&gt;
&lt;p&gt; 之前我们说过，Git的核心在于&lt;strong&gt;版本控制&lt;/strong&gt;。那么就自然要求Git得有版本回退的功能。&lt;/p&gt;
&lt;p&gt; 何为版本？&lt;strong&gt;每次commit到版本库后就是一个版本。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 首先，&lt;strong&gt;第一步——&lt;code&gt;git log&lt;/code&gt;查看历史版本&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1564471/201902/1564471-20190213230103684-1889293130.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 第二步——&lt;strong&gt;截取commit字样后的任意字数，用作版本标识。如10feb9882453e57。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 第三步——&lt;strong&gt;&lt;code&gt;git reset --hard 第二步截取的版本标识&lt;/code&gt;回退版本。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 就这样，我们就成功地回退版本啦！终于不用担惊受怕自己一不小心脑子犯浑commit了一个错误的版本却无法恢复了。&lt;/p&gt;
&lt;p&gt; 但由此又出现了一个问题，当你回退到以前的版本，那么在以前的版本后的所有版本就都无法通过&lt;code&gt;git log&lt;/code&gt;查找出来了。&lt;/p&gt;
&lt;p&gt; 对此，我们通过&lt;code&gt;git reflog&lt;/code&gt;来解决。其意义为&lt;strong&gt;查看所有分支的提交操作，其结果也含有版本标识。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;小技巧：如果你想要知道各个版本文件内容修改的话，使用&lt;code&gt;git log -p&lt;/code&gt;命令即可。&lt;/p&gt;
&lt;h2 id=&quot;查看修改内容&quot;&gt;查看修改内容&lt;/h2&gt;
&lt;p&gt; 有时，我们想要知道还有什么文件需要add/commit，或是自己究竟做了什么样的修改内容，那么我们可以通过&lt;code&gt;git status&lt;/code&gt;和&lt;code&gt;git diff&lt;/code&gt;来查看。&lt;/p&gt;
&lt;h3 id=&quot;git-status&quot;&gt;git status&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;git status&lt;/code&gt;的意义为&lt;strong&gt;检索本地仓库的文件更新状态。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 这说的太笼统了，执行该命令显示的内容如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;已修改的，未暂存的文件名称&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;已暂存，为提交的文件名称&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未追踪到的文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt; 其中，要解释一下&lt;strong&gt;未追踪文件&lt;/strong&gt;的意义：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;已追踪文件：在仓库之前的版本快照中包含文件的记录，在用户工作一段时间过后，这些文件同样能被追踪到（如文件的修改和删除）。可以理解为，原来就有的文件，非新增文件。&lt;/li&gt;
&lt;li&gt;未追踪文件：一些文件的新增&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;git-diff&quot;&gt;git diff&lt;/h3&gt;
&lt;p&gt; &lt;code&gt;git diff&lt;/code&gt;的意义为&lt;strong&gt;查看所有文件进行的具体的修改，添加到暂存区则看不了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt; 与其对应的是&lt;code&gt;git diff staged&lt;/code&gt;，意义为&lt;strong&gt;查看添加至暂存区所有的内容修改&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt; 当你学到这里的时候，离成功就只剩一步之遥了，坚持下去，加油！&lt;/p&gt;
&lt;p&gt; 现在我们在本地仓库中的版本库中准备好要推送到远程仓库的版本文件了，可是我们现在连要发送到哪一个远程仓库的地址都不知道，所以第一步是——&lt;strong&gt;建立本地仓库与远程仓库的连接。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;建立连接&quot;&gt;建立连接&lt;/h2&gt;
&lt;p&gt; 建立连接的方法有一下几种：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;git remoted add 远程主机名 git@github.com:GitHub名称/远程仓库名.git&lt;/code&gt;。这个命令用于将本地仓库和远程仓库连接起来。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;git clone git@github.com:GitHub名称/远程仓库名.git&lt;/code&gt;。将远程仓库的文件夹克隆到本地目录中。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt; 连接成功了之后，便可以进行push和pull操作了。&lt;/p&gt;
&lt;h2 id=&quot;git-push&quot;&gt;git push&lt;/h2&gt;
&lt;p&gt; 该命令的意义是&lt;strong&gt;将本地版本库的分支推送到远程版本库的对应分支&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;git push&lt;/code&gt;的一般形式为&lt;code&gt;git push &amp;lt;远程主机名&amp;gt; &amp;lt;本地分支名&amp;gt;:&amp;lt;远程分支名&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt; 其中，一旦使用上面两种方法连接远程仓库成功，则远程仓库名称为origin。&lt;/p&gt;
&lt;h2 id=&quot;git-pull&quot;&gt;git pull&lt;/h2&gt;
&lt;p&gt; 该命令的意义是&lt;strong&gt;将远程仓库的分支下载至本地，并将其合并到对应分支&lt;/strong&gt;，其实这一个命令是&lt;code&gt;git fetch&lt;/code&gt;和&lt;code&gt;git merge 分支名&lt;/code&gt;的缩写。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;git pull&lt;/code&gt;的一般形式为&lt;code&gt;git pull &amp;lt;远程主机名&amp;gt; &amp;lt;本地分支名&amp;gt;:&amp;lt;远程分支名&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt; 全文结束。&lt;/p&gt;
&lt;hr/&gt;
&lt;ol&gt;&lt;li&gt;git add documents:&lt;a href=&quot;https://www.git-scm.com/docs/git-add&quot; target=&quot;_blank&quot;&gt;https://www.git-scm.com/docs/git-add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;为什么要先 git add 才能 git commit ？&lt;a href=&quot;https://www.zhihu.com/question/19946553&quot; target=&quot;_blank&quot;&gt;https://www.zhihu.com/question/19946553&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub简明教程：&lt;a href=&quot;http://www.runoob.com/w3cnote/git-guide.html&quot; target=&quot;_blank&quot;&gt;http://www.runoob.com/w3cnote/git-guide.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git status和git diff:&lt;a href=&quot;https://www.cnblogs.com/kkz-org/p/9313205.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/kkz-org/p/9313205.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git 远程仓库和本地仓库建立连接：&lt;a href=&quot;https://blog.csdn.net/wowoniuzailushang/article/details/78545971&quot; target=&quot;_blank&quot;&gt;https://blog.csdn.net/wowoniuzailushang/article/details/78545971&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Git push：&lt;a href=&quot;https://www.cnblogs.com/qianqiannian/p/6008140.html&quot;&gt;https://www.cnblogs.com/qianqiannian/p/6008140.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Wed, 13 Feb 2019 16:43:00 +0000</pubDate>
<dc:creator>前端蔡蔡</dc:creator>
<og:description>前言  Git是一个开源的分布式版本控制系统。其核心就在于 版本控制 。  在实际编码过程中，我们往往会忘记上次对文件的修改内容。若是刚刚修改的还好说，撤销操作即可。但若这是你昨天</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/caiyy/p/10372550.html</dc:identifier>
</item>
<item>
<title>[Flutter] Windows Flutter 环境走一遍 - 黑眼诗人</title>
<link>http://www.cnblogs.com/farwish/p/10372454.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/farwish/p/10372454.html</guid>
<description>
&lt;p&gt;Windows Install&lt;br/&gt;　　1.系统需要：&amp;gt; win7&lt;br/&gt;　　　　　　　　&amp;gt; 400M磁盘空间&lt;br/&gt;　　　　　　　　Windows PowerShell（Windows 搜索框中找）&lt;br/&gt;　　　　　　　　Git for Windows 2.x，能在 cmd 使用 git 命令&lt;/p&gt;&lt;p&gt;　　2.下载 Flutter SDK 稳定版：https://storage.googleapis.com/flutter_infra/releases/stable/windows/flutter_windows_v1.0.0-stable.zip&lt;br/&gt;　　解压到不需要特殊权限的位置，进入 flutter 目录，双击 flutter_console.bat 启动&lt;br/&gt;　　（更新SDK见：https://flutter.io/docs/development/tools/sdk/upgrading）&lt;/p&gt;
&lt;p&gt;　　3.更新 Path&lt;br/&gt;　　编辑系统环境变量（windows搜索框），把 flutter\bin 的路径追加到 Path 中，以 ；隔开或者新加一行&lt;br/&gt;　　保存后就可以在 PowerShell 中任意位置使用 flutter 命令了。&lt;/p&gt;
&lt;p&gt;　　4.运行 flutter doctor&lt;br/&gt;　　如果没有 Android SDK，那么可以通过安装 Android Studio（https://developer.android.com/studio），&lt;br/&gt;　　IDE 启动时会安装 Android SDK 组件。安装好 Android SDK 后，设置 $ANDROID_HOME 指向安装的路径，或者设置安装路径到 Path 环境变量中。&lt;br/&gt;　　flutter config --no-analytics 不向 google 发送特性使用的统计和 crash 报告 。&lt;/p&gt;&lt;p&gt;　　5.Android设置&lt;br/&gt;　　安装 Android Studio（https://developer.android.com/studio）&lt;br/&gt;　　启动 Android 设备，需要 Android 4.1（API level 16）或更高。&lt;br/&gt;　　　　1）设备开启 Developer options 和 USB debugging。（https://developer.android.com/studio/debug/dev-options）&lt;br/&gt;　　　　2）Windows上安装 Google USB Driver。（https://developer.android.com/studio/run/win-usb）&lt;br/&gt;　　　　3）用一根USB线，把手机插到电脑上，如果有弹框，授权电脑访问手机。&lt;br/&gt;　　　　4）在终端中运行 flutter devices 来核实 flutter 识别的已连接的 Android 设备。&lt;br/&gt;　　　　默认 flutter 使用 adb 工具使用的 Android SDK 版本，如果要使用其它版本的，需要设置 $ANDROID_HOME 指定要使用的 SDK 安装的位置。&lt;br/&gt;　　启动 Android 模拟器&lt;br/&gt;　　　　1）开启机器的 VM加速。（https://developer.android.com/studio/run/emulator-acceleration）&lt;br/&gt;　　　　2）启动 Android Studio &amp;gt; Tools &amp;gt; Android &amp;gt; AVD Manager 并选择 Create Virtual Device.&lt;br/&gt;　　　　3）选择一个设备定义并选择 Next 下一步。&lt;br/&gt;　　　　4）为想要模拟的 Android 版本选择一个或多个系统，选择 Next 下一步，建议 x86 或 x86_64。&lt;br/&gt;　　　　5）在模拟表现下，选择 Hardware - GLES 2.0 开启硬件加速。（https://developer.android.com/studio/run/emulator-acceleration）&lt;br/&gt;　　　　6）验证 AVD 配置是否正确，并点击 Finish。（https://developer.android.com/studio/run/managing-avds）&lt;br/&gt;　　　　7）在 Android 虚拟设备管理器中，点击工具栏上的 Run。 模拟器启动并显示所选操作系统版本的默认图像。&lt;/p&gt;

&lt;p&gt;设置编辑器 Android Studio 的 flutter 和 dart 插件：&lt;br/&gt;　　Files &amp;gt; Settings &amp;gt; Plugins &amp;gt; Browser Repositories 搜索 flutter 安装并重启编辑器。&lt;/p&gt;

&lt;p&gt;Link：&lt;a href=&quot;https://www.cnblogs.com/farwish/p/10372454.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/farwish/p/10372454.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install：&lt;a href=&quot;https://flutter.io/docs/get-started/install&quot; target=&quot;_blank&quot;&gt;https://flutter.io/docs/get-started/install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows：&lt;a href=&quot;https://flutter.io/docs/get-started/install/windows&quot; target=&quot;_blank&quot;&gt;https://flutter.io/docs/get-started/install/windows&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 16:09:00 +0000</pubDate>
<dc:creator>黑眼诗人</dc:creator>
<og:description>Windows Install 1.系统需要：&gt; win7 &gt; 400M磁盘空间 Windows PowerShell（Windows 搜索框中找） Git for Windows 2.x</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/farwish/p/10372454.html</dc:identifier>
</item>
<item>
<title>ASP.NET Core 打造一个简单的图书馆管理系统 (修正版)（二）用户数据库初始化、基本登录页面以及授权逻辑的建立 - NanaseRuri</title>
<link>http://www.cnblogs.com/gokoururi/p/10372471.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gokoururi/p/10372471.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;前言：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;本系列文章主要为我之前所学知识的一次微小的实践，以我学校图书馆管理系统为雏形所作。&lt;/p&gt;
&lt;p&gt;本系列文章主要参考资料：&lt;/p&gt;
&lt;p&gt;微软文档：https://docs.microsoft.com/zh-cn/aspnet/core/getting-started/?view=aspnetcore-2.1&amp;amp;tabs=windows&lt;/p&gt;
&lt;p&gt;《Pro ASP.NET MVC 5》、《锋利的 jQuery》&lt;/p&gt;

&lt;p&gt;当此系列文章写完后会在一周内推出修正版。&lt;/p&gt;

&lt;p&gt;此系列皆使用 VS2017+C# 作为开发环境。如果有什么问题或者意见欢迎在留言区进行留言。 &lt;/p&gt;
&lt;p&gt;项目 github 地址：&lt;a href=&quot;https://github.com/NanaseRuri/LibraryDemo&quot; target=&quot;_blank&quot;&gt;https://github.com/NanaseRuri/LibraryDemo&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;本章内容：Identity 框架的配置、对账户进行授权的配置、数据库的初始化方法、自定义 TagHelper&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt; 一到四为对 Student 即 Identity框架的使用，第五节为对 Admin 用户的配置&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、自定义账号和密码的限制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　在 Startup.cs 的 ConfigureServices 方法中可以对 Identity 的账号和密码进行限制：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;             services.AddIdentity&amp;lt;Student, IdentityRole&amp;gt;(opts =&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt;                 opts.User.RequireUniqueEmail = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 opts.User.AllowedUserNameCharacters = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 opts.Password.RequiredLength = &lt;span&gt;6&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 opts.Password.RequireNonAlphanumeric = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 opts.Password.RequireLowercase = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 opts.Password.RequireUppercase = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                 opts.Password.RequireDigit = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             }).AddEntityFrameworkStores&amp;lt;StudentIdentityDbContext&amp;gt;&lt;span&gt;()
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 .AddDefaultTokenProviders();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　RequireUniqueEmail 限制每个邮箱只能用于一个账号。&lt;/p&gt;
&lt;p&gt;　　此处 AllowedUserNameCharacters 方法限制用户名能够使用的字符，需要单独输入每个字符。&lt;/p&gt;
&lt;p&gt;　　剩下的设置分别为限制密码必须有符号 / 包含小写字母 / 包含大写字母 / 包含数字。&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、对数据库进行初始化&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　在此创建一个 StudentInitiator 用以对数据库进行初始化：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudentInitiator
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;async&lt;/span&gt;&lt;span&gt; Task Initial(IServiceProvider serviceProvider)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             UserManager&amp;lt;Student&amp;gt; userManager = serviceProvider.GetRequiredService&amp;lt;UserManager&amp;lt;Student&amp;gt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (userManager.Users.Any())
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             IEnumerable&amp;lt;Student&amp;gt; initialStudents = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student()
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     UserName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;U201600001&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                     Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Nanase&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                     Email = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Nanase@cnblog.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                     PhoneNumber = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;12345678910&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     Degree =&lt;span&gt; Degrees.CollegeStudent,
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                     MaxBooksNumber = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                },
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student()
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                     UserName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;U201600002&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                     Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Ruri&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                     Email = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NanaseRuri@cnblog.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                     PhoneNumber = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;12345678911&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                     Degree =&lt;span&gt; Degrees.DoctorateDegree,
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                     MaxBooksNumber = &lt;span&gt;15&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                },
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; student &lt;span&gt;in&lt;/span&gt;&lt;span&gt; initialStudents)
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; userManager.CreateAsync(student, student.UserName.Substring(student.UserName.Length - &lt;span&gt;6&lt;/span&gt;,&lt;span&gt;6&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;        } 
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;        }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　为确保能够进行初始化，在 Startup.cs 的 Configure 方法中调用该静态方法：　　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;             app.UseMvc(routes =&amp;gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;                routes.MapRoute(
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;                     name: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;                     template: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{controller=Home}/{action=Index}/{id?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;             DatabaseInitiator.Initial(app.ApplicationServices).Wait();    
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　Initial 方法中 serviceProvider 参数将在传入 ConfigureServices 方法调用后的 ServiceProvider，此时在 Initial 方法中初始化的数据也会使用 ConfigureServices 中对账号和密码的限制。&lt;/p&gt;
&lt;p&gt;　　此处我们使用账号的后六位作为密码。启动网页后查看数据库的数据：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215184824732-355726496.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215184830156-815033091.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、建立验证所用的控制器以及视图&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　首先创建一个视图模型用于存储账号的信息，为了方便实现多种登录方式，此处创建一个 LoginType 枚举：&lt;/p&gt;
&lt;p&gt;　　[UIHint] 特性构造函数传入一个字符串用来告知对应属性在使用 Html.EditorFor() 时用什么模板来展示数据。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt;&lt;span&gt; LoginType
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        UserName,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        Email,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;        Phone
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LoginModel
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         [Required(ErrorMessage = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入您的学号 / 邮箱 / 手机号码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学号 / 邮箱 / 手机号码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Account { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;         [Required(ErrorMessage = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入您的密码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         [UIHint(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;密码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Password { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; LoginType LoginType { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　 &lt;/strong&gt;使用支架特性创建一个 StudentAccountController&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181214163116076-762459445.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　StudentAccount 控制器：&lt;/p&gt;
&lt;p&gt;　　第 5 行判断是否授权以避免多余的授权：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;      &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudentAccountController : Controller
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;     {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; IActionResult Login(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; returnUrl)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (HttpContext.User.Identity.IsAuthenticated)
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AccountInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt;             LoginModel loginInfo = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; LoginModel();
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             ViewBag.returnUrl =&lt;span&gt; returnUrl;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(loginInfo);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　在在 Login 视图中添加多种登录方式，并使视图更加清晰，创建了一个 LoginTypeTagHelper ，TagHelper 可制定自定义 HTML 标记并在最终生成视图时转换成标准的 HTML 标记。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     [HtmlTargetElement(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LoginType&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LoginTypeTagHelper:TagHelper
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;[] LoginType { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt;&lt;span&gt; Task ProcessAsync(TagHelperContext context, TagHelperOutput output)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; loginType &lt;span&gt;in&lt;/span&gt;&lt;span&gt; LoginType)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                 &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (loginType)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: output.Content.AppendHtml($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;option selected=\&quot;selected/\&quot; value=\&quot;{loginType}\&quot;&amp;gt;学号&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: output.Content.AppendHtml(GetOption(loginType, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;邮箱&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                     &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Phone&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: output.Content.AppendHtml(GetOption(loginType, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;手机号码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     &lt;span&gt;default&lt;/span&gt;: &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                }                
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            }            
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Task.CompletedTask;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; GetOption(&lt;span&gt;string&lt;/span&gt; loginType,&lt;span&gt;string&lt;/span&gt;&lt;span&gt; innerText)
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; $&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;option value=\&quot;{loginType}\&quot;&amp;gt;{innerText}&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　Login 视图：&lt;/p&gt;
&lt;p&gt;　　25 行中使用了刚建立的 LoginTypeTagHelper：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;@model LoginModel
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;@{
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     ViewData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &amp;lt;h2&amp;gt;Login&amp;lt;/h2&amp;gt;
&lt;span&gt; 8&lt;/span&gt; &amp;lt;br/&amp;gt;
&lt;span&gt; 9&lt;/span&gt; &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text-danger&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-validation-summary=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;All&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;
&lt;span&gt;10&lt;/span&gt; &amp;lt;br/&amp;gt;
&lt;span&gt;11&lt;/span&gt; &amp;lt;form asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; method=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;12&lt;/span&gt;     &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;returnUrl&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@ViewBag.returnUrl&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt;13&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;   
&lt;span&gt;14&lt;/span&gt;         &amp;lt;label asp-&lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Account&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/label&amp;gt;
&lt;span&gt;15&lt;/span&gt;         &amp;lt;input asp-&lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Account&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; placeholder=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入你的学号 / 邮箱 / 手机号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt;16&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;17&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;   
&lt;span&gt;18&lt;/span&gt;         &amp;lt;label asp-&lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/label&amp;gt;
&lt;span&gt;19&lt;/span&gt;         &amp;lt;input asp-&lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; placeholder=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入你的密码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt;20&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;21&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;22&lt;/span&gt;         &amp;lt;label&amp;gt;登录方式&amp;lt;/label&amp;gt;
&lt;span&gt;23&lt;/span&gt;         &amp;lt;&lt;span&gt;select&lt;/span&gt; asp-&lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LoginType&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;24&lt;/span&gt;             &amp;lt;option disabled value=&lt;span&gt;&quot;&quot;&lt;/span&gt;&amp;gt;登录方式&amp;lt;/option&amp;gt;
&lt;span&gt;25&lt;/span&gt;             &amp;lt;LoginType login-type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Enum.GetNames(typeof(LoginType))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/LoginType&amp;gt;
&lt;span&gt;26&lt;/span&gt;         &amp;lt;/&lt;span&gt;select&lt;/span&gt;&amp;gt;
&lt;span&gt;27&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;28&lt;/span&gt;     &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-primary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt;29&lt;/span&gt; &amp;lt;/form&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181214224418994-1440322852.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　然后创建一个用于对信息进行验证的动作方法。&lt;/p&gt;

&lt;p&gt;　　为了获取数据库的数据以及对数据进行验证授权，需要通过 DI（依赖注入） 获取对应的 UserManager 和 SignInManager 对象，在此针对 StudentAccountController 的构造函数进行更新。&lt;/p&gt;
&lt;p&gt;　　StudentAccountController 整体：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;    [Authorize]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudentAccountController : Controller
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; UserManager&amp;lt;Student&amp;gt;&lt;span&gt; _userManager;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; SignInManager&amp;lt;Student&amp;gt;&lt;span&gt; _signInManager;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; StudentAccountController(UserManager&amp;lt;Student&amp;gt; studentManager, SignInManager&amp;lt;Student&amp;gt;&lt;span&gt; signInManager)
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             _userManager =&lt;span&gt; studentManager;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             _signInManager =&lt;span&gt; signInManager;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        [AllowAnonymous]
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; IActionResult Login(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; returnUrl)
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (HttpContext.User.Identity.IsAuthenticated)
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AccountInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt;             LoginModel loginInfo = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; LoginModel();
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             ViewBag.returnUrl =&lt;span&gt; returnUrl;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(loginInfo);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;        [HttpPost]
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;        [ValidateAntiForgeryToken]
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;        [AllowAnonymous]
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; Login(LoginModel loginInfo, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; returnUrl)
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (ModelState.IsValid)
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 Student student =&lt;span&gt;await&lt;/span&gt;&lt;span&gt; GetStudentByLoginModel(loginInfo);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (student == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(loginInfo);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;                 SignInResult signInResult = &lt;span&gt;await&lt;/span&gt; _signInManager.PasswordSignInAsync(student, loginInfo.Password, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (signInResult.Succeeded)
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt; Redirect(returnUrl ?? &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/StudentAccount/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+&lt;span&gt;nameof(AccountInfo));
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt;                 ModelState.AddModelError(&lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;账号或密码错误&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;                             
&lt;span&gt;48&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(loginInfo);
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; IActionResult AccountInfo()
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(CurrentAccountData());
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; 
&lt;span&gt;58&lt;/span&gt;         Dictionary&amp;lt;&lt;span&gt;string&lt;/span&gt;, &lt;span&gt;object&lt;/span&gt;&amp;gt;&lt;span&gt; CurrentAccountData()
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; userName =&lt;span&gt; HttpContext.User.Identity.Name;
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; user =&lt;span&gt; _userManager.FindByNameAsync(userName).Result;
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; 
&lt;span&gt;63&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span&gt;string&lt;/span&gt;, &lt;span&gt;object&lt;/span&gt;&amp;gt;&lt;span&gt;()
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;                 [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;]=&lt;span&gt;userName,
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;                 [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;姓名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;]=&lt;span&gt;user.Name,
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;                 [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;邮箱&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;]=&lt;span&gt;user.Email,
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;                 [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;手机号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;]=&lt;span&gt;user.PhoneNumber,
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　_userManager 以及  _signInManager 将通过 DI 获得实例；[ValidateAntiForgeryToken] 特性用于防止 XSRF 攻击；returnUrl 参数用于接收或返回之前正在访问的页面，在此处若 returnUrl 为空则返回 AccountInfo 页面；[Authorize] 特性用于确保只有已授权的用户才能访问对应动作方法；CurrentAccountData 方法用于获取当前用户的信息以在 AccountInfo 视图中呈现。&lt;/p&gt;

&lt;p&gt;　　由于未进行授权，在此直接访问 AccountInfo 方法默认会返回 /Account/Login 页面请求验证，可通过在 Startup.cs 的 ConfigureServices 方法进行配置以覆盖这一行为，让页面默认返回 /StudentAccount/Login ：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;             services.ConfigureApplicationCookie(opts =&amp;gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;                 opts.LoginPath = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/StudentAccount/Login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;             }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　为了使 [Authorize] 特性能够正常工作，需要在 Configure 方法中使用 Authentication 中间件，如果没有调用 app.UseAuthentication()，则访问带有 [Authorize] 的方法会再度要求进行验证。中间件的顺序很重要：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;            app.UseAuthentication();
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;            app.UseHttpsRedirection();
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;            app.UseStaticFiles();
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;             app.UseCookiePolicy();
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　直接访问 AccountInfo 页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192155416-77070251.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　输入账号密码进行验证：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192147263-14769400.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　验证之后返回 /StudentAccount/AccountInfo 页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192218605-2103438680.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、创建登出网页&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　简单地调用 SignOutAsync 用以清除当前 Cookie 中的授权信息。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; Logout(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; returnUrl)
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _signInManager.SignOutAsync();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (returnUrl == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; View(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Redirect(returnUrl);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　同时在 AccountInfo 添加登出按钮：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     @model Dictionary&amp;lt;&lt;span&gt;string&lt;/span&gt;, &lt;span&gt;object&lt;/span&gt;&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    @{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         ViewData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AccountInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &amp;lt;h2&amp;gt;账户信息&amp;lt;/h2&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;ul&amp;gt;
&lt;span&gt; 7&lt;/span&gt;         @foreach (&lt;span&gt;var&lt;/span&gt; info &lt;span&gt;in&lt;/span&gt;&lt;span&gt; Model)
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &amp;lt;li&amp;gt;@info.Key: @Model[info.Key]&amp;lt;/li&amp;gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &amp;lt;/ul&amp;gt;
&lt;span&gt;12&lt;/span&gt;     &amp;lt;br /&amp;gt;
&lt;span&gt;13&lt;/span&gt;     &amp;lt;a &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-danger&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Logout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;登出&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181220194750604-1454243561.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　登出后返回 Login 页面，同时 AccountInfo 页面需要重新进行验证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192539631-1835206804.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192547279-1383656429.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　附加使用邮箱以及手机号验证的测试：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192834363-292854778.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181220202357197-1134574318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181215192852990-1610968751.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181220202406490-263626481.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;




&lt;p&gt;&lt;span&gt;&lt;strong&gt;五、基于 Role 的 Identity 授权&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　修改 StudentInitial 类，添加名为 admin 的学生数组并使用 AddToRoleAsync 为用户添加身份。在添加 Role 之前需要在 RoleManager 对象中使用 Create 方法为 Role 数据库添加特定的 Role 字段：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudentInitiator
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;async&lt;/span&gt;&lt;span&gt; Task InitialStudents(IServiceProvider serviceProvider)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             UserManager&amp;lt;Student&amp;gt; userManager = serviceProvider.GetRequiredService&amp;lt;UserManager&amp;lt;Student&amp;gt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             RoleManager&amp;lt;IdentityRole&amp;gt; roleManager = serviceProvider.GetRequiredService&amp;lt;RoleManager&amp;lt;IdentityRole&amp;gt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (userManager.Users.Any())
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;await&lt;/span&gt; roleManager.FindByNameAsync(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; roleManager.CreateAsync(&lt;span&gt;new&lt;/span&gt; IdentityRole(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;await&lt;/span&gt; roleManager.FindByNameAsync(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Student&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; roleManager.CreateAsync(&lt;span&gt;new&lt;/span&gt; IdentityRole(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Student&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;             IEnumerable&amp;lt;Student&amp;gt; initialStudents = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student()
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                     UserName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;U201600001&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                     Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Nanase&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                     Email = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Nanase@cnblog.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                     PhoneNumber = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;12345678910&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                     Degree =&lt;span&gt; Degrees.CollegeStudent,
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                     MaxBooksNumber = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;                },
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student()
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                     UserName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;U201600002&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                     Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Ruri&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                     Email = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NanaseRuri@cnblog.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;                     PhoneNumber = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;12345678911&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;                     Degree =&lt;span&gt; Degrees.DoctorateDegree,
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;                     MaxBooksNumber = &lt;span&gt;15&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt;             IEnumerable&amp;lt;Student&amp;gt; initialAdmins = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student()
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;                     UserName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A000000000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;                     Name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin0000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;                     Email = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin@cnblog.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;                     PhoneNumber = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;12345678912&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;                     Degree =&lt;span&gt; Degrees.CollegeStudent,
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;                     MaxBooksNumber = &lt;span&gt;20&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt; &lt;span&gt;                },
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student()
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;                     UserName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A000000001&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;                     Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin0001&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;                     Email = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;123456789@qq.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;                     PhoneNumber = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;12345678910&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;                     Degree =&lt;span&gt; Degrees.CollegeStudent,
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;                     MaxBooksNumber = &lt;span&gt;20&lt;/span&gt;
&lt;span&gt;63&lt;/span&gt; &lt;span&gt;                },
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; student &lt;span&gt;in&lt;/span&gt;&lt;span&gt; initialStudents)
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; userManager.CreateAsync(student, student.UserName.Substring(student.UserName.Length - &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; admin &lt;span&gt;in&lt;/span&gt;&lt;span&gt; initialAdmins)
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; userManager.CreateAsync(admin, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;zxcZXC!123&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; userManager.AddToRoleAsync(admin, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 　　对 ConfigureServices 作进一步配置，添加 Cookie 的过期时间和不满足 Authorize 条件时返回的 Url：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
1             services.ConfigureApplicationCookie(opts =&amp;gt;
2 &lt;span&gt;            {
&lt;span&gt;3                 opts.Cookie.HttpOnly = true&lt;/span&gt;&lt;span&gt;&lt;span&gt;;
&lt;/span&gt;4                 opts.LoginPath = &quot;/StudentAccount/Login&quot;&lt;span&gt;;
&lt;span&gt;5                 opts.AccessDeniedPath = &quot;/StudentAccount/Login&quot;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;
6                 opts.ExpireTimeSpan=TimeSpan.FromMinutes(5&lt;/span&gt;&lt;span&gt;&lt;span&gt;);
&lt;/span&gt;7             });&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　则当 Role 不为 Admin 时将返回 /StudentAccount/Login 而非默认的 /Account/AccessDeny。&lt;/p&gt;


&lt;p&gt;　　然后新建一个用以管理学生信息的 AdminAccount 控制器，设置 [Authorize] 特性并指定 Role 属性，使带有特定 Role 的身份才可以访问该控制器。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     [Authorize(Roles = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; AdminAccountController : Controller
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; UserManager&amp;lt;Student&amp;gt;&lt;span&gt; _userManager;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; AdminAccountController(UserManager&amp;lt;Student&amp;gt;&lt;span&gt; userManager)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             _userManager =&lt;span&gt; userManager;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; IActionResult Index()
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             ICollection&amp;lt;Student&amp;gt; students =&lt;span&gt; _userManager.Users.ToList();
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(students);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　Index 视图：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;@using LibraryDemo.Models.DomainModels
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; @model IEnumerable&amp;lt;LibraryDemo.Models.DomainModels.Student&amp;gt;
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;@{
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt;     ViewData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AccountInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt;     Student stu = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Student();
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/css/BookInfo.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt; &amp;lt;script&amp;gt;
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;    function confirmDelete() {
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; userNames = document.getElementsByName(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;userNames&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; message = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;确认删除&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; values =&lt;span&gt; [];
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; userNames) {
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (userNames[i].&lt;span&gt;checked&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;                 message = message + userNames[i].value+&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;                values.push(userNames[i].value);
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;         message = message + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;?&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (confirm(message)) {
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;            $.ajax({
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;                 url: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Url.Action(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;RemoveStudent&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;                 contentType: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;application/json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;                 method: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;                data: JSON.stringify(values),
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;                success: function(students) {
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;                    updateTable(students);
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; 
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;    function updateTable(data) {
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; body = $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#studentList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;        body.empty();
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; data.length; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; person =&lt;span&gt; data[i];
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;             body.append(`&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checkbox&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;userNames&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${person.userName}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;&amp;lt;/td&amp;gt;
&lt;span&gt; 40&lt;/span&gt;             &amp;lt;td&amp;gt;${person.userName}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;${person.name}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;${person.degree}&amp;lt;/td&amp;gt;
&lt;span&gt; 41&lt;/span&gt;             &amp;lt;td&amp;gt;${person.phoneNumber}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;${person.email}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;${person.maxBooksNumber}&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;span&gt;`);
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;    };
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; 
&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;    function addStudent() {
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; studentList = $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#studentList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (!document.getElementById(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;studentInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)) {
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;             studentList.append(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;tr id=&quot;studentInfo&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 49&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 50&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;UserName&quot; id=&quot;UserName&quot; /&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 51&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;Name&quot; id=&quot;Name&quot; /&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 52&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;Degree&quot; id=&quot;Degree&quot; /&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 53&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;PhoneNumber&quot; id=&quot;PhoneNumber&quot; /&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 54&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;Email&quot; id=&quot;Email&quot; /&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 55&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;MaxBooksNumber&quot; id=&quot;MaxBooksNumber&quot; /&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 56&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&amp;lt;button type=&quot;submit&quot; onclick=&quot;return postAddStudent()&quot;&amp;gt;添加&amp;lt;/button&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; +
&lt;span&gt; 57&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;     
&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;    function postAddStudent() {
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;        $.ajax({
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;             url: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Url.Action(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;AddStudent&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;             contentType: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;application/json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;             method: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;            data: JSON.stringify({
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;                 UserName: $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#UserName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;                 Name: $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#Name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;                 Degree:$(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#Degree&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;                 PhoneNumber: $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#PhoneNumber&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;                 Email: $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#Email&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;                 MaxBooksNumber: $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#MaxBooksNumber&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val()
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;            }),
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;            success: function (student) {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;                addStudentToTable(student);
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; 
&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    function addStudentToTable(student) {
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; studentList = document.getElementById(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;studentList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; studentInfo = document.getElementById(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;studentInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;        studentList.removeChild(studentInfo);
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; 
&lt;span&gt; 85&lt;/span&gt;         $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#studentList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).append(`&amp;lt;tr&amp;gt;` +
&lt;span&gt; 86&lt;/span&gt;             `&amp;lt;td&amp;gt;&amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checkbox&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;userNames&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${student.userName}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;&amp;lt;/td&amp;gt;` +
&lt;span&gt; 87&lt;/span&gt;             `&amp;lt;td&amp;gt;${student.userName}&amp;lt;/td&amp;gt;` +
&lt;span&gt; 88&lt;/span&gt;             `&amp;lt;td&amp;gt;${student.name}&amp;lt;/td&amp;gt;`+
&lt;span&gt; 89&lt;/span&gt;             `&amp;lt;td&amp;gt;${student.degree}&amp;lt;/td&amp;gt;` +
&lt;span&gt; 90&lt;/span&gt;             `&amp;lt;td&amp;gt;${student.phoneNumber}&amp;lt;/td&amp;gt;` +
&lt;span&gt; 91&lt;/span&gt;             `&amp;lt;td&amp;gt;${student.email}&amp;lt;/td&amp;gt;` +
&lt;span&gt; 92&lt;/span&gt;             `&amp;lt;td&amp;gt;${student.maxBooksNumber}&amp;lt;/td &amp;gt;` +
&lt;span&gt; 93&lt;/span&gt;             `&amp;lt;/tr&amp;gt;&lt;span&gt;`);
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &amp;lt;/script&amp;gt;
&lt;span&gt; 96&lt;/span&gt; 
&lt;span&gt; 97&lt;/span&gt; &amp;lt;h2&amp;gt;学生信息&amp;lt;/h2&amp;gt;
&lt;span&gt; 98&lt;/span&gt; 
&lt;span&gt; 99&lt;/span&gt; &amp;lt;div id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;buttonGroup&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;100&lt;/span&gt;     &amp;lt;button &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-primary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; onclick=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;return addStudent()&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;添加学生&amp;lt;/button&amp;gt;
&lt;span&gt;101&lt;/span&gt;     &amp;lt;button &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-danger&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; onclick=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;return confirmDelete()&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;删除学生&amp;lt;/button&amp;gt;
&lt;span&gt;102&lt;/span&gt; &amp;lt;/div&amp;gt;
&lt;span&gt;103&lt;/span&gt; 
&lt;span&gt;104&lt;/span&gt; 
&lt;span&gt;105&lt;/span&gt; &amp;lt;br /&amp;gt;
&lt;span&gt;106&lt;/span&gt; &amp;lt;table&amp;gt;
&lt;span&gt;107&lt;/span&gt;     &amp;lt;thead&amp;gt;
&lt;span&gt;108&lt;/span&gt;         &amp;lt;tr&amp;gt;
&lt;span&gt;109&lt;/span&gt;             &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
&lt;span&gt;110&lt;/span&gt;             &amp;lt;th&amp;gt;@Html.LabelFor(m =&amp;gt; stu.UserName)&amp;lt;/th&amp;gt;
&lt;span&gt;111&lt;/span&gt;             &amp;lt;th&amp;gt;@Html.LabelFor(m =&amp;gt; stu.Name)&amp;lt;/th&amp;gt;
&lt;span&gt;112&lt;/span&gt;             &amp;lt;th&amp;gt;@Html.LabelFor(m =&amp;gt; stu.Degree)&amp;lt;/th&amp;gt;
&lt;span&gt;113&lt;/span&gt;             &amp;lt;th&amp;gt;@Html.LabelFor(m =&amp;gt; stu.PhoneNumber)&amp;lt;/th&amp;gt;
&lt;span&gt;114&lt;/span&gt;             &amp;lt;th&amp;gt;@Html.LabelFor(m =&amp;gt; stu.Email)&amp;lt;/th&amp;gt;
&lt;span&gt;115&lt;/span&gt;             &amp;lt;th&amp;gt;@Html.LabelFor(m =&amp;gt; stu.MaxBooksNumber)&amp;lt;/th&amp;gt;
&lt;span&gt;116&lt;/span&gt;         &amp;lt;/tr&amp;gt;
&lt;span&gt;117&lt;/span&gt;     &amp;lt;/thead&amp;gt;
&lt;span&gt;118&lt;/span&gt;     &amp;lt;tbody id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;studentList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;119&lt;/span&gt; 
&lt;span&gt;120&lt;/span&gt;         @if (!&lt;span&gt;@Model.Any())
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt;             &amp;lt;tr&amp;gt;&amp;lt;td colspan=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;未有学生信息&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;span&gt;123&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;125&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; student &lt;span&gt;in&lt;/span&gt;&lt;span&gt; Model)
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt;                 &amp;lt;tr&amp;gt;
&lt;span&gt;129&lt;/span&gt;                     &amp;lt;td&amp;gt;&amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checkbox&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;userNames&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@student.UserName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;&amp;lt;/td&amp;gt;
&lt;span&gt;130&lt;/span&gt;                     &amp;lt;td&amp;gt;@student.UserName&amp;lt;/td&amp;gt;
&lt;span&gt;131&lt;/span&gt;                     &amp;lt;td&amp;gt;@student.Name&amp;lt;/td&amp;gt;
&lt;span&gt;132&lt;/span&gt;                     &amp;lt;td&amp;gt;@Html.DisplayFor(m =&amp;gt; student.Degree)&amp;lt;/td&amp;gt;
&lt;span&gt;133&lt;/span&gt;                     &amp;lt;td&amp;gt;@student.PhoneNumber&amp;lt;/td&amp;gt;
&lt;span&gt;134&lt;/span&gt;                     &amp;lt;td&amp;gt;@student.Email&amp;lt;/td&amp;gt;
&lt;span&gt;135&lt;/span&gt;                     &amp;lt;td&amp;gt;@student.MaxBooksNumber&amp;lt;/td&amp;gt;
&lt;span&gt;136&lt;/span&gt;                 &amp;lt;/tr&amp;gt;
&lt;span&gt;137&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;     &amp;lt;/tbody&amp;gt;
&lt;span&gt;140&lt;/span&gt; &amp;lt;/table&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　使用 Role 不是 Admin 的账户登录:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213235756183-267837572.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213235853582-1782953735.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　使用 Role 为 Admin 的账户登录：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201812/1408470-20181220205057725-723281360.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190214000011938-526844896.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 13 Feb 2019 16:03:00 +0000</pubDate>
<dc:creator>NanaseRuri</dc:creator>
<og:description>基本登录页面以及授权逻辑的建立</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gokoururi/p/10372471.html</dc:identifier>
</item>
<item>
<title>分布式服务的幂等性设计 - melonstreet</title>
<link>http://www.cnblogs.com/QG-whz/p/10372458.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/QG-whz/p/10372458.html</guid>
<description>&lt;h2 id=&quot;为什么需要保证幂等性&quot;&gt;为什么需要保证幂等性&lt;/h2&gt;
&lt;p&gt;编程中的“幂等性”是指任意多次执行所产生的影响，与一次执行的影响相同。一个拥有幂等性设计的接口，保证无论一次或多次来调用接口，都能够得到相同的结果。接口的幂等性设计在某些场景下是必需的，例如用户下单的场景。&lt;/p&gt;
&lt;p&gt;我们知道，服务之间的调用存在三种状态：成功、失败、超时。超时是一种未知的状态：被调服务是否执行成功，这个状态是未知的。上游服务调用下游服务超时时可能会进行重试。对于用户下单的场景的超时重试我们考虑以下问题：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;是否会导致最终创建了两条一样的订单？&lt;/li&gt;
&lt;li&gt;是否会扣除两遍库存？&lt;/li&gt;
&lt;li&gt;是否会重复扣除用户的钱？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如果每一笔订单都携带唯一的序号，下单接口可以借助这个序号，来记录某次下单操作的状态。当下单的状态为成功时，就将重复的执行拦截住，避免出现上述的问题。这种方式是由下游被调方来保证幂等性。&lt;/p&gt;
&lt;p&gt;除此之外，订单服务也可以提供查询订单状态的接口，上游在下单之前先进行查询，确认该笔订单并没有成功支付后，再重复进行下单操作。&lt;/p&gt;
&lt;p&gt;一般来说，服务本身需要自己保证幂等性，而不应该将幂等性交给上游的调用方来做。&lt;/p&gt;
&lt;h2 id=&quot;唯一id&quot;&gt;唯一ID&lt;/h2&gt;
&lt;p&gt;就上面的幂等性下单接口来说，要做到幂等性，就需要借助一个唯一的ID来标志每次交易。唯一ID的分配可以有几种方式：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;由一个统一的ID分配中心来分配。&lt;/li&gt;
&lt;li&gt;由上游服务来生成唯一ID，但必须保证不产生冲突的ID。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;采用统一的分配中心来分配唯一ID时，业务方每次调用接口都多了一次调用分配中心获取唯一ID的请求。这多了额外的开销。获取唯一ID有一种方式，是借助mysql的自增索引，这其实也是一个ID分配中心。对服务性能有苛刻要求时，可以采用第二种方式，由主调服务本身来生成这个唯一ID。为了保持不会产生重复的ID，可以使用一下几种ID生成方法：&lt;/p&gt;
&lt;h3 id=&quot;uuid&quot;&gt;UUID&lt;/h3&gt;
&lt;p&gt;UUID的全称是Universally Unique Identifier，通用唯一识别码。具体可以看维基百科的介绍：&lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier&quot; class=&quot;uri&quot;&gt;https://en.wikipedia.org/wiki/Universally_unique_identifier&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UUID是一个128bit的数字，用于标志计算机的信息，虽然UUID不能保证绝对不重复，但重复的概率小到可以被忽略。UUID的生成没有什么规律，为了保证UUID的唯一性，规范定义了包括网卡MAC地址、时间戳、名字空间（Namespace）、随机或伪随机数、时序等元素，以及从这些元素生成UUID的算法。这也就意味着：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;128bit，占据了太多的内存空间&lt;/li&gt;
&lt;li&gt;生成的ID不是人可以看懂的&lt;/li&gt;
&lt;li&gt;无法保证ID的递增，某些场景需要按前后排序 无法满足。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这是一个在线生成UUID的网站：&lt;a href=&quot;https://www.uuidgenerator.net/&quot; class=&quot;uri&quot;&gt;https://www.uuidgenerator.net/&lt;/a&gt; 你可以直观感受一下UUID。&lt;/p&gt;
&lt;h3 id=&quot;snowflake&quot;&gt;Snowflake&lt;/h3&gt;
&lt;p&gt;这是Twitter的一个开源项目，它是一个分布式ID的生成算法，它会产生一个long类型的唯一ID，其核心算法是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;时间部分：41bit作为毫秒数，大概可以使用69.7年&lt;/li&gt;
&lt;li&gt;机器编号部分：10bit作为机器编号，支持1024个机器实例。&lt;/li&gt;
&lt;li&gt;毫秒内的序列号：12bit，一毫米可以生成4096个序列号&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/610439/201902/610439-20190213235956464-2091446754.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;网上有各种语言实现的Snowflake算法的实现，有兴趣的阅读一下实现代码。&lt;/p&gt;
&lt;p&gt;实际上，redis 或是 mongoDB 的全局ID生成器的算法和Snowflake算法大同小异。这是基于redis的分布式ID生成器实现：&lt;a href=&quot;https://github.com/hengyunabc/redis-id-generator&quot; class=&quot;uri&quot;&gt;https://github.com/hengyunabc/redis-id-generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它的核心思想是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;使用41 bit来存放时间，精确到毫秒，可以使用41年。&lt;/li&gt;
&lt;li&gt;使用12 bit来存放逻辑分片ID，最大分片ID是4095&lt;/li&gt;
&lt;li&gt;使用10 bit来存放自增长ID，意味着每个节点，每毫秒最多可以生成1024个ID&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;共享存储&quot;&gt;共享存储&lt;/h2&gt;
&lt;p&gt;如果我们的幂等性服务是分布式的，那么存储唯一ID也需要采用共享的存储，这样每个服务就是无状态的了。可以使用mysql来存储，也可以使用k-v存储例如redis。我在自己的业务中就采用了redis来存储唯一key。&lt;/p&gt;
&lt;h2 id=&quot;避免不必要的查询&quot;&gt;避免不必要的查询&lt;/h2&gt;
&lt;p&gt;并不是所有的请求都是重复的，生产环境下可能99%的请求都不是重复请求。如果每个请求在执行前都要去查询下唯一ID是否存在，可能会带来不必要的性能消耗。如果你使用mysql来存储唯一ID，那么可以直接进行insert，通过结果来判断是否插入记录成功，如果不成功则证明ID已经存在：&lt;/p&gt;
&lt;pre class=&quot;sql&quot;&gt;
&lt;code&gt;insert into ... values ... on DUPLICATE KEY UPDATE ...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;而如果使用的是redis，也可以使用redis的setEx，设置成功则证明key不存在，否则key存在说明是重复请求。&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 16:02:00 +0000</pubDate>
<dc:creator>melonstreet</dc:creator>
<og:description>[TOC] 为什么需要保证幂等性 编程中的“幂等性”是指任意多次执行所产生的影响，与一次执行的影响相同。一个拥有幂等性设计的接口，保证无论一次或多次来调用接口，都能够得到相同的结果。接口的幂等性设计在</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/QG-whz/p/10372458.html</dc:identifier>
</item>
<item>
<title>C#中Lambda表达式总结 - 江湖逍遥</title>
<link>http://www.cnblogs.com/xu-yi/p/10372394.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xu-yi/p/10372394.html</guid>
<description>&lt;p&gt;       在C#的语法中有一种比较特殊的写法，叫做Lambda表达式，这种表达式的写法在于你查询数据的时候直接是使用以下箭头的形式来表示查询语句的：=&amp;gt;。例如，我们要查找学生的List&amp;lt;Student&amp;gt;集合中班级编号为1001的所有学生数据，我们即可用Studentlist.Where(t=&amp;gt;t.ClassCode=‘1001’)语句来直接完成，无需再写繁琐的foreach语句或者for循环。Lambda表达式的运算符即为=&amp;gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、Lambda表达式定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;        Lambda表达式实际上是一种匿名函数，在Lambda表达式中可以包含语句以及运算等操作。并且可用于创建委托或表达式目录树类型，支持带有可绑定到委托或表达式树的输入参数的内联表达式。使用Lambda表达式可大大减少代码量，使得代码更加的优美、简洁，更有可观性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、Lambda表达式的表现形式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;       &lt;/strong&gt;表达式形式：(Input Param)=&amp;gt;Expression。在表达式左侧的表示输入参数，右侧的为相应的运算语句或者判断语句等，可包含函数调用等复杂方式。运算符=&amp;gt;读作为goes to，例如下面这个表达t=&amp;gt;t.ClassCode='1001'，多做goes to ClassCode equal 1001。&lt;/p&gt;
&lt;p&gt;       在上述的表达式中，仅仅只有当参数只有一个的时候，括号是可选择的，例如下面这种含有两个参数时候的情况应该是这样子的写法&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
     (a,b)=&amp;gt;a==b
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　当表达式中的多个参数编译器无法自动判断类型的时候，则需要显式指定类型。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
   (int firstIndex, string str) =&amp;gt; str.IndexOf('Hello') &amp;gt; firstIndex
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;三、下面介绍List集合中的Lambda表达式的运用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;       在C#的List集合中，我们时常需要使用到大量的运算或者筛选等操作，按常规的方式无非就是利用foreach或者for对List集合进行循环操作，最后运算出结果。此种方法往往需要写多行语句，阅读性稍微差点，当然复杂的情况下编写也费时。博主遇到这种情况一般比较喜欢偷懒，很少会去直接写循环，而是直接使用Lambda表达式一条语句完成。&lt;/p&gt;
&lt;p&gt;     先假定好我们待会使用的范例的格式：&lt;/p&gt;
&lt;p&gt;     studentList对象：此对象是一个List集合，集合中的对象为学生实体Student。此集合中存放着整个学校学生的信息。&lt;/p&gt;
&lt;p&gt;     scoreList对象：此对象是个List集合，集合中的对象是成绩实体Score，此集合中存放着为学生的成绩信息。&lt;/p&gt;
&lt;p&gt;     Student实体：此实体包含下列几个属性，StudentName，StudentCode，ClassCode，ClassName，BirthDay，Grade。以上几个英文单词都比较简单，就不做解释了。&lt;/p&gt;
&lt;p&gt;     Score实体：此实体包含下列几个属性，StudentCode,SubjectName(科目名称),ScoreValue(分数，0-100的数字)。一个学生可能有多门成绩数据存放在此。&lt;/p&gt;
&lt;p&gt;    (1)查询班级编号为1001的班级下面的所有学生实体并返回到list1001中存储&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
 var list1001=Studentlist.Where(t=&amp;gt;t.ClassCode==‘1001’)；
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;　(2)查询班级编号为1001的班级下面的所有学生实体并返回到list1001中存储，并按照学生的出生日期从小到大排列。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
var list1001=Studentlist.Where(t=&amp;gt;t.ClassCode==‘1001’).OrderBy(t=&amp;gt;t.BirthDay)；
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;   在此说一下，OrderBy是从小到大排序，需要从大到小排列则用OrderByDescending。&lt;/p&gt;
&lt;p&gt;　(3)查询班级编号为1001的班级下面的姓氏为【李】的同学的所有集合，并按照学生的出生日期从小到大排列。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
var list1001=Studentlist.Where(t=&amp;gt;t.ClassCode==‘1001’&amp;amp;&amp;amp;t.StudentName.StartWith（“李”）).OrderBy(t=&amp;gt;t.BirthDay)；
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　(4)查询出班级编号为1001的班级，并且存在至少一门考试科目成绩低于60分的所有同学。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
  var result = studentList.Where(t =&amp;gt; (t.ClassCode == &quot;1001&quot;) &amp;amp;&amp;amp; (scoreList.Exists(p =&amp;gt; p.ScoreValue &amp;lt; 60 &amp;amp;&amp;amp; p.StudentCode == t.StudentCode)));
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在上述语句中，lambda表达式中再次嵌入了一个lambda表达式。t参数是studentList中的lambda表达式参数，代表实体为student。p参数为scoreList中的lambda表达式参数，代表的实体为score。&lt;/p&gt;
&lt;p&gt;   (5)其他较常用的Lambda表达式如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;var&lt;/span&gt; a = studentList.FirstOrDefault(t =&amp;gt; t.StudentCode == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;10012&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;FirstOrDefault返回第一个符合条件的数据，不存在的时候返回Null。&lt;/span&gt;
 &lt;span&gt;var&lt;/span&gt; b = studentList.Count(t =&amp;gt; t.StudentName == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;李世民&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回符合条件的实体个数&lt;/span&gt;
 &lt;span&gt;var&lt;/span&gt; c = studentList.FindAll(t =&amp;gt; t.StudentName.Contains(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;中&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;));&lt;span&gt;//&lt;/span&gt;&lt;span&gt;查找所有名字中含有【中】的实体集合&lt;/span&gt;
 &lt;span&gt;var&lt;/span&gt; d = studentList.GroupBy(t =&amp;gt; t.ClassCode);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;对studentList按照ClassCode分组&lt;/span&gt;
 &lt;span&gt;var&lt;/span&gt; f = studentList.Max(t =&amp;gt; t.BirthDay);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回最大的出生日期。&lt;/span&gt;
&lt;span&gt; var&lt;/span&gt; e = scoreList.Sum(t =&amp;gt; t.ScoreValue);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;对所有成绩求和&lt;/span&gt;
 &lt;span&gt;var&lt;/span&gt; g = scoreList.Average(t =&amp;gt; t.ScoreValue);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;对所有成绩求平均分&lt;/span&gt;
 &lt;span&gt;var&lt;/span&gt; h = studentList.Select(t =&amp;gt; t.StudentName).Distinct();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取所有的学生姓名，并去除重名&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;    Lambda表达式的总结大致如此，从上述例子来看，可以大大简化代码的量，并增加可读性。&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;最后，附上博主的个人博客站点，更多的文章在博主的个人站点中，欢迎各位同行来进行指导交流：&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;http://50bit.cn/&quot; target=&quot;_blank&quot;&gt;IT技术小屋&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 15:31:00 +0000</pubDate>
<dc:creator>江湖逍遥</dc:creator>
<og:description>在C#的语法中有一种比较特殊的写法，叫做Lambda表达式，这种表达式的写法在于你查询数据的时候直接是使用以下箭头的形式来表示查询语句的：=&gt;。例如，我们要查找学生的List&lt;Studen</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xu-yi/p/10372394.html</dc:identifier>
</item>
<item>
<title>欧拉线性筛 和 欧拉函数的求值 - Jack_Pei</title>
<link>http://www.cnblogs.com/Jackpei/p/10372392.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Jackpei/p/10372392.html</guid>
<description>&lt;p&gt;PS：求逆元的部分在文章最后。。。最好也看看前边的知识吧qwq&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;用筛法求素数的基本思想是：把从1开始的、某一范围内的正整数从小到大顺序排列， 1不是素数，首先把它筛掉。剩下的数中选择最小的数是素数，然后去掉它的倍数。依次类推，直到筛子为空时结束。&lt;em&gt;（来自 百度百科）&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt; 一般的筛法（埃拉托斯特尼筛法）的效率是O(nlglgn)，但出题人卡你可就凉了。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1599173/201902/1599173-20190213224029391-37799291.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;(就不介绍了（逃）)&lt;/p&gt;
&lt;h3&gt;下面我们来说O(n)的欧拉线性筛&lt;/h3&gt;
&lt;p&gt;埃筛之所以慢，是因为有些合数被重复筛除（如：6会被2和3重复筛）&lt;/p&gt;
&lt;p&gt;但是欧拉筛保证&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;每一个数p，只会被其最小的素因子mp[p]筛一次&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#define R register int&lt;br/&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; M=&lt;span&gt;1000010&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; mp[M],&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mp[i] 为i的最小素因子 &lt;/span&gt;
    prime[M],&lt;span&gt;//&lt;/span&gt;&lt;span&gt;prime[i] 代表2-n中的第i个质数 &lt;/span&gt;
    cnt；&lt;span&gt;//&lt;/span&gt;&lt;span&gt;素数计数 &lt;/span&gt;
inline &lt;span&gt;void&lt;/span&gt; Prime(&lt;span&gt;int&lt;/span&gt; n)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;筛的范围&lt;/span&gt;
&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(R i=&lt;span&gt;2&lt;/span&gt;;i&amp;lt;=n;i++&lt;span&gt;)
    {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!mp[i]) prime[++cnt]=mp[i]=&lt;span&gt;i;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(R j=&lt;span&gt;1&lt;/span&gt;,k=i*prime[j];j&amp;lt;=cnt&amp;amp;&amp;amp;prime[j]&amp;lt;mp[i]&amp;amp;&amp;amp;(k=i*prime[j])&amp;lt;=m;i++) mp[k]=&lt;span&gt;prime[j];
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也有一些别的写法，如&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;inline void&lt;/span&gt; Prime(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x)
{
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;2&lt;/span&gt;;i&amp;lt;=x;i++&lt;span&gt;)
    {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!mp[i]) prime[++cnt]=i,mp[i]=&lt;span&gt;i;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=&lt;span&gt;1&lt;/span&gt;;j&amp;lt;=cnt&amp;amp;&amp;amp;i*prime[j]&amp;lt;=x;j++&lt;span&gt;)
        {
            mp[i&lt;/span&gt;*prime[j]]=&lt;span&gt;prime[j];
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i%prime[j]==&lt;span&gt;0&lt;/span&gt;) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;if(prime[j]&amp;gt;=mp[i]) break; &lt;/span&gt;
&lt;span&gt;        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;if(i%prime[j]==0) break&lt;span&gt;; 这个很重要qwq&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;若 i%prime[j]==0,则 i=k*prime[j](k为正整数).&lt;/p&gt;
&lt;p&gt;如果不 break,下一个循环中的 mp(i*prime[j+1])=prime[j+1],&lt;/p&gt;
&lt;p&gt;就是 mp(k*prime[j]*prime[j+1])=prime[j+1],&lt;/p&gt;
&lt;p&gt;但 显然k*prime[j]*prime[j+1]的最小质因子为 prime[j] 而非 prime[j+1]（prime[]数组中的素数是递增的）&lt;/p&gt;
&lt;p&gt;所以应 break&lt;/p&gt;
&lt;p&gt;if(prime[j]&amp;gt;=mp[i]) break;也可用这句话，一个意思，就是不能让 i乘上的质因子 大于 i的最小质因子&lt;/p&gt;
&lt;hr/&gt;
&lt;h3&gt;欧拉函数。。。&lt;/h3&gt;
&lt;p&gt;在数论，对正整数n，欧拉函数是少于或等于n的数中与n互质的数的数目。此函数以其首名研究者欧拉命名，它又称为Euler's totient function、φ函数、欧拉商数等。 例如φ(8)=4，因为1,3,5,7均和8互质。&lt;/p&gt;
&lt;p&gt;所以求某个φ(p)可以有很朴素&lt;span&gt;（朴素的不行）&lt;/span&gt;的求法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;就是枚举每个素因子&lt;/span&gt;
inline &lt;span&gt;int&lt;/span&gt; phi(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; n) 
{
    R ans&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(R i=&lt;span&gt;2&lt;/span&gt;;i*i&amp;lt;=n;++i) &lt;span&gt;if&lt;/span&gt;(n%i==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {
        n&lt;/span&gt;/=&lt;span&gt;i;
        ans&lt;/span&gt;*=i-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(n%i==&lt;span&gt;0&lt;/span&gt;) n/=i,ans*=&lt;span&gt;i;
    }
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(n&amp;gt;&lt;span&gt;1&lt;/span&gt;) ans*=n-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ans;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但如果求p∈[1,n]，每个φ(p)，那上面的算法就太菜了。&lt;/p&gt;
&lt;p&gt;数论上的积性函数f(x)满足a与b互素时（a,b∈N&lt;sup&gt;+&lt;/sup&gt;），f(a·b)=f(a)·f(b)，f(1)=1;&lt;/p&gt;
&lt;p&gt;而φ(p)就是一个积性函数。&lt;/p&gt;
&lt;p&gt;此时可以利用刚学的欧拉筛&lt;/p&gt;
&lt;p&gt;正确性：&lt;/p&gt;
&lt;p&gt;1.φ(p)是一个积性函数，当a与b互素时，满足φ(a·b)=φ(a)·φ(b)。&lt;/p&gt;
&lt;p&gt;2.当正整数p是素数时，φ(p)=p-1 (定义)&lt;/p&gt;
&lt;p&gt;3.每个合数只会被筛到一次（前面说明过）。&lt;/p&gt;
&lt;p&gt;4.当p是素数时，φ(p&lt;sup&gt;k&lt;/sup&gt;)=(p-1)·φ(p&lt;sup&gt;k-1&lt;/sup&gt;)，因为有(p-1)个数与p互素&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#define&lt;/span&gt; R register int 
&lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; N=&lt;span&gt;10000010&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; n,cnt,prime[N],p[N];
&lt;/span&gt;&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; vis[N];

inline &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Euler(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; n)
{
    vis[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;]=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(R i=&lt;span&gt;2&lt;/span&gt;;i&amp;lt;=n;i++&lt;span&gt;) 
    {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!vis[i]) prime[++cnt]=i,p[i]=i-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(R j=&lt;span&gt;1&lt;/span&gt;;j&amp;lt;=cnt&amp;amp;&amp;amp;i*prime[j]&amp;lt;=n;j++&lt;span&gt;)
        {
            vis[i&lt;/span&gt;*prime[j]]=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i%prime[j]==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;) 
            {
                p[i&lt;/span&gt;*prime[j]]=p[i]*&lt;span&gt;prime[j];
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            }
            p[i&lt;/span&gt;*prime[j]]=(prime[j]-&lt;span&gt;1&lt;/span&gt;)*&lt;span&gt;p[i];
        }
    }
}&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;p[i]即为φ(i)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;所以隆重推出......::::::&lt;/p&gt;
&lt;h3&gt;欧拉定理：&lt;/h3&gt;
&lt;p&gt;若p,a为正整数，且p,a互质，则：a^φ(p) ≡1 (mod p) (是不是有些眼熟)&lt;/p&gt;
&lt;p&gt;其实欧拉定理相当于费马小定理的扩展&lt;/p&gt;
&lt;p&gt;所以我们可用其求乘法逆元：&lt;/p&gt;
&lt;p&gt;a*a^(φ(p)-1) ≡1 (mod p) &lt;/p&gt;
&lt;p&gt;a^(φ(p)-1)即为a mod p 意义下的逆元&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
#include&amp;lt;iostream&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;cstdio&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;cctype&amp;gt;
&lt;span&gt;#define&lt;/span&gt; R register int
&lt;span&gt;#define&lt;/span&gt; ll long long
&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;
&lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt; ll a,p;

inline ll q_pow(ll x,ll ind,ll mod)
{
    x&lt;/span&gt;%=&lt;span&gt;mod;
    register ll a&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(;ind;ind&amp;gt;&amp;gt;=&lt;span&gt;1&lt;/span&gt;,(x*=x)%=mod) &lt;span&gt;if&lt;/span&gt;(ind&amp;amp;&lt;span&gt;1&lt;/span&gt;) (a*=x)%=&lt;span&gt;mod;
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; a;
}

inline &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; phi(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; n) 
{
    R ans&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(R i=&lt;span&gt;2&lt;/span&gt;;i*i&amp;lt;=n;++i) &lt;span&gt;if&lt;/span&gt;(n%i==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {
        n&lt;/span&gt;/=&lt;span&gt;i;
        ans&lt;/span&gt;*=i-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(n%i==&lt;span&gt;0&lt;/span&gt;) n/=i,ans*=&lt;span&gt;i;
    }
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(n&amp;gt;&lt;span&gt;1&lt;/span&gt;) ans*=n-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ans;
}

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    scanf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%lld%lld&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&amp;amp;a,&amp;amp;&lt;span&gt;p);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%lld\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,q_pow(a,phi(p)-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,p));
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如有错误，恳请您指正（我太菜了）；如有不理解，可留言，我会尽量回复。。。（高中生(逃)。。）&lt;/p&gt;
&lt;p&gt;by Jackpei 2019.2.13&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 15:30:00 +0000</pubDate>
<dc:creator>Jack_Pei</dc:creator>
<og:description>PS：求逆元的部分在文章最后。。。最好也看看前边的知识吧qwq 用筛法求素数的基本思想是：把从1开始的、某一范围内的正整数从小到大顺序排列， 1不是素数，首先把它筛掉。剩下的数中选择最小的数是素数，然</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Jackpei/p/10372392.html</dc:identifier>
</item>
</channel>
</rss>