<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>.NET Core 时代已经到了，你准备好了吗 - 张善友</title>
<link>http://www.cnblogs.com/shanyou/p/10699029.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/shanyou/p/10699029.html</guid>
<description>&lt;p&gt;今天很多人都收到了阿里云函数计算支持.NET Core的短信了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/510/201904/510-20190412222352628-664674494.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;126&quot; title=&quot;image&quot; alt=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/510/201904/510-20190412222353145-1042429423.png&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过访问 &lt;a title=&quot;https://help.aliyun.com/document_detail/112379.html&quot; href=&quot;https://help.aliyun.com/document_detail/112379.html&quot;&gt;https://help.aliyun.com/document_detail/112379.html&lt;/a&gt; 你可以看到最新的说明。现在和过去的两年不同，因为最恶劣的时期已经过去，经历过了最黑暗的时刻，我们正在走向光明的前程。.NET Core 在今年即将引来3.0版本，&lt;/p&gt;
&lt;p&gt;在经过了1.x的沉淀后，2.x版本趋向于风格上的稳定，有兴趣知道各个版本的一些特性和变化，可以参考&lt;a href=&quot;https://docs.microsoft.com/zh-cn/aspnet/core/release-notes/aspnetcore-2.2?view=aspnetcore-2.2&quot;&gt;ASPNET.Core各个版本差异以及新特性&lt;/a&gt; ，有兴趣的还可以关注3.x的预览版。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://img2018.cnblogs.com/blog/510/201904/510-20190412222353661-1076081913.png&quot;&gt;&lt;img width=&quot;179&quot; height=&quot;244&quot; title=&quot;image&quot; alt=&quot;image&quot; src=&quot;https://img2018.cnblogs.com/blog/510/201904/510-20190412222354224-701552976.png&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个性能优化非常感人，具体大家可以看看这个PR &lt;a href=&quot;https://github.com/aspnet/AspNetCore/pull/8374&quot;&gt;https://github.com/aspnet/AspNetCore/pull/8374&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;从上面这两天这两个小小事件你应该感受到了.NET Core的新时代已经开启。随着互联网和电商公司从去年开始一家家的倒掉，你们会发现.NET正在重新成为市场焦点。BAT 都开始转向企业市场，在传统的企业市场有大量的.NET 应用，以至于这些搞互联网的同学接触到这些系统时都在感慨你们还在用”这么老的没人用的.NET”, 这两年发生了很多 .NET 被强制转Java的事件，现在还在上演。我希望随着.NET Core的成熟，这样的事件需要反转，从Java转.NET Core.&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 14:24:00 +0000</pubDate>
<dc:creator>张善友</dc:creator>
<og:description>今天很多人都收到了阿里云函数计算支持.NET Core的短信了。通过访问 https://help.aliyun.com/document_detail/112379.html 你可以看到最新的说明。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/shanyou/p/10699029.html</dc:identifier>
</item>
<item>
<title>MongoDB通过Shell 实现集合的日常归档 - 东山絮柳仔</title>
<link>http://www.cnblogs.com/xuliuzai/p/10698241.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuliuzai/p/10698241.html</guid>
<description>&lt;h3&gt; 1.MongoDB数据归档的意义&lt;/h3&gt;
&lt;p&gt;和其他类型的数据库一样，归档对MongoDB同样重要。通过归档，可以保持集合中合适的数据量，对数据库的性能是一种保障，也就是大家常说的数据冷热分离。&lt;/p&gt;
&lt;p&gt;同时，归档对数据库的管理也带来了很大方便性，例如日常的备份、灾难恢复等。&lt;/p&gt;
&lt;p&gt;在此，不再展开叙述了。&lt;/p&gt;
&lt;h3&gt; 2.集合数据归档流程图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/780228/201904/780228-20190412185116364-223593053.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3.归档实现代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#
# The &lt;/span&gt;&lt;span&gt;file&lt;/span&gt;&lt;span&gt; is used by cron to Archive the data of NeedArchiveColName_Archive collection,the collection is part of NeedArchiveDBColName DB.
# The &lt;/span&gt;&lt;span&gt;file&lt;/span&gt; is writed by DBA Carson Xu.If you &lt;span&gt;find&lt;/span&gt;&lt;span&gt; any error, please connect with me,thanks.
# The version is defined V.&lt;/span&gt;&lt;span&gt;001&lt;/span&gt;&lt;span&gt;
# Version   ModifyTime                ModifyBy              Desc
# Ver001    &lt;/span&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;02&lt;/span&gt;-&lt;span&gt;22&lt;/span&gt; &lt;span&gt;14&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;&lt;span&gt;         Carson Xu             Create the Scripts File
#
#
#&lt;/span&gt;!/bin/&lt;span&gt;bash
######mongodb可执行文件所在文档路径，此例为4.&lt;/span&gt;&lt;span&gt;04&lt;/span&gt; ，同时支持3.&lt;span&gt;4.4&lt;/span&gt;&lt;span&gt;

command_linebin&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/QQMSG/mongo_db/mongobin404/bin/mongo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
command_linebinT&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/QQMSG/mongo_db/mongobin404/bin/mongo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

######存放导出过渡文件的文档路径和文件名字，ColA可用你的集合名字替代
targetpath&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/data/mongodb_back/ArchiveDB_端口号&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
bakcollectionname&lt;/span&gt;=NeedArchiveColName_$(&lt;span&gt;date&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+%Y%m%d%H%M&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

###### 登入账号信息
username&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;账号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
password&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;账号密码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;


#######start 设置备份集合的开始日期和结束日期 #####

ParamBakStartDate&lt;/span&gt;=$(&lt;span&gt;date&lt;/span&gt; -d &lt;span&gt;'&lt;/span&gt;&lt;span&gt;-46 days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+%Y-%m-%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份NeedArchiveColName时间参数中的开始时间为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $ParamBakStartDate 

ParamBakEndDate&lt;/span&gt;=$(&lt;span&gt;date&lt;/span&gt; -d &lt;span&gt;'&lt;/span&gt;&lt;span&gt;-45 days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+%Y-%m-%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份NeedArchiveColName时间参数中的结束时间为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $ParamBakEndDate 

ParamBakStartTimeS&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$(date -d $ParamBakStartDate +%s)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

ParamBakEndTimeS&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$(date -d $ParamBakEndDate  +%s)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份集合的时间转换为UTC时间秒数为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $ParamBakStartTimeS  和 $ParamBakEndTimeS

ParamBakStartTimeMS&lt;/span&gt;=$[$ParamBakStartTimeS * &lt;span&gt;1000&lt;/span&gt;+&lt;span&gt;8&lt;/span&gt;*&lt;span&gt;60&lt;/span&gt;*&lt;span&gt;60&lt;/span&gt;*&lt;span&gt;1000&lt;/span&gt;&lt;span&gt;]
ParamBakEndTimeMS&lt;/span&gt;=$[$ParamBakEndTimeS * &lt;span&gt;1000&lt;/span&gt;+&lt;span&gt;8&lt;/span&gt;*&lt;span&gt;60&lt;/span&gt;*&lt;span&gt;60&lt;/span&gt;*&lt;span&gt;1000&lt;/span&gt;&lt;span&gt;]

&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份集合的时间转换为UTC时间毫秒数为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $ParamBakStartTimeMS  和 $ParamBakEndTimeMS

#######end ######

######## start 连接源Server DB ，检查此次集合备份的文档数
command_line&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${command_linebin} localhost:端口号/NeedArchiveDBColName -u$username -p$password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
export docQty&lt;/span&gt;=$(/bin/&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;db.NeedArchiveColName.find({NeedArchiveByField:{$gte:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$ParamBakStartDate\&quot;'),$lt:new Date('\&quot;$ParamBakEndDate\&quot;')}}).count()' | $command_line --quiet)&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份前集合NeedArchiveColName的文档数据为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $docQty
###### End #####

###### Start 定义每次备份归档的最大阈值，防止意外情况的发生，例如：参数输入错误###
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ $docQty -gt &lt;span&gt;2000000&lt;/span&gt; ];&lt;span&gt;then&lt;/span&gt;
  &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MongoDB-Archive-Exception:NeedArchiveDBColName库NeedArchiveColName集合指定时间段内的文档数过大，超过定义的安全阈值 2000000，归档终止，请检查！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  exit
&lt;/span&gt;&lt;span&gt;fi&lt;/span&gt;&lt;span&gt;

####### end  ######

######## start 连接目标Server DB ，检查target DB 上是否已经存在此时间内的文档
command_lineT&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${command_linebinT} 归档实例IP:归档实例端口/归档数据库Name -u$username -p$password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
export docQtyT&lt;/span&gt;=$(/bin/&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;db.NeedArchiveColName.find({NeedArchiveByField:{$gte:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$ParamBakStartDate\&quot;'),$lt:new Date('\&quot;$ParamBakEndDate\&quot;')}}).count()' | $command_lineT --quiet)&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份目标BKDB集合NeedArchiveColName备份归档前的文档数据为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $docQtyT
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ $docQtyT -gt &lt;span&gt;0&lt;/span&gt; ];&lt;span&gt;then&lt;/span&gt;
  &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MongoDB-Archive-Exception:NeedArchiveDBColName库NeedArchiveColName集合检查发现指定时间段内目标数据库目标集合存在异常文档数，归档终止，请检查！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
  exit
&lt;/span&gt;&lt;span&gt;fi&lt;/span&gt;&lt;span&gt;

####### end  ######

####### start mongoexport  指定集合指定时间段内的文档，输出到指定路径下;并执行检查命令是否正常执行####
start()
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NeedArchiveDBColName库NeedArchiveColName集合备份输出开始&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
/QQMSG/mongo_db/mongobin404/bin/mongoexport --port 端口号 -u $username -p $password -d NeedArchiveDBColName --authenticationDatabase NeedArchiveDBColName -c NeedArchiveColName -q &lt;span&gt;'&lt;/span&gt;&lt;span&gt; { NeedArchiveByField: { $gte:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;$ParamBakStartTimeMS&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),$lt:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;$ParamBakEndTimeMS&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) } } &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; -o ${targetpath}/&lt;span&gt;${bakcollectionname}
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NeedArchiveDBColName库NeedArchiveColName集合备份输出完毕&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
}
start
execute()
{
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ $? -eq &lt;span&gt;0&lt;/span&gt;&lt;span&gt; ]
&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;The MongoDB 集合 NeedArchiveColName 文档mongoexport完成!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;The MongoDB 集合 NeedArchiveColName 文档mongoexport失败&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
exit
&lt;/span&gt;&lt;span&gt;fi&lt;/span&gt;&lt;span&gt;
}
###### end  ######

###### Start mongomongoimport 将导出的备份集合导入到指定的BKDB 指定的集合中#####
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份输入开始&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
/QQMSG/mongo_db/mongobin404/bin/mongoimport -h 归档实例IP --port 归档实例端口 -u $username -p $password -d 归档数据库Name --authenticationDatabase 归档数据库Name -c NeedArchiveColName  --&lt;span&gt;file&lt;/span&gt; ${targetpath}/&lt;span&gt;${bakcollectionname}
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份输入完毕&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

##### End #######

######## start 连接目标Server DB ，检查target DB 上是否已经存在此时间内的文档
export docQtyT2&lt;/span&gt;=$(/bin/&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;db.NeedArchiveColName.find({NeedArchiveByField:{$gte:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$ParamBakStartDate\&quot;'),$lt:new Date('\&quot;$ParamBakEndDate\&quot;')}}).count()' | $command_lineT --quiet)&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;备份目标BKDB集合NeedArchiveColName备份归档后的文档数据为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $docQtyT2

&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;比较docQty 和 docQtyT2 的大小&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; [ $docQty == $docQtyT2 ]; &lt;span&gt;then&lt;/span&gt;
     &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;正常:时间段内源数据库集合中的文档数  和 目标数据库集合中还原后的文档数据 相等&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;elif&lt;/span&gt; [ $docQty -gt $docQtyT2 ]; &lt;span&gt;then&lt;/span&gt;
    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MongoDB-Archive-Exception:时间段内源数据库集合中的文档数  大于  目标数据库集合中还原后的文档数据&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    exit
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
   &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MongoDB-Archive-Exception:时间段内源数据库集合中的文档数  小于  目标数据库集合中还原后的文档数据&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
   exit
&lt;/span&gt;&lt;span&gt;fi&lt;/span&gt;&lt;span&gt;
########### End ##### 

########### Start Remove 源数据库源集合指定时间内的记录 ########

docQtyR&lt;/span&gt;=$(/bin/&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;db.NeedArchiveColName.remove({NeedArchiveByField:{$gte:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;$ParamBakStartTimeMS&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),$lt:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;$ParamBakEndTimeMS&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)}}).nRemoved&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | $command_line --&lt;span&gt;quiet)
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;本次操作Remove集合NeedArchiveColName的文档数据为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $docQtyR
########## End  #########
###### 检查 Remove 后集合的文档数 ### 
docQty&lt;/span&gt;=$(/bin/&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;db.NeedArchiveColName.find({NeedArchiveByField:{$gte:new Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$ParamBakStartDate\&quot;'),$lt:new Date('\&quot;$ParamBakEndDate\&quot;')}}).count()' | $command_line --quiet)&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NeedArchiveDBColName库NeedArchiveColName集合 此次 Remove 后指定时间剩余的文档数据为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; $docQty
###### End ###

#########删除导出的文件#######
&lt;/span&gt;&lt;span&gt;rm&lt;/span&gt; -rf ${targetpath}/&lt;span&gt;${bakcollectionname}
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ $? -eq &lt;span&gt;0&lt;/span&gt;&lt;span&gt; ]
&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;正常：NeedArchiveDBColName库NeedArchiveColName集合导出的文件被删除:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ${targetpath}/&lt;span&gt;${bakcollectionname}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MongoDB-Archive-Exception:NeedArchiveDBColName库NeedArchiveColName集合导出的文件未被正常删除&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ${targetpath}/&lt;span&gt;${bakcollectionname}
&lt;/span&gt;&lt;span&gt;fi&lt;/span&gt;&lt;span&gt;
######## End #####&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;4. 代码说明&lt;/h3&gt;
&lt;h4&gt;4.1 配置基本信息&lt;/h4&gt;
&lt;p&gt;主要包括：mongo bin 可执行文件所在路径；导出过渡文件的定义；归档账号和密码；集合数据保留天数。&lt;/p&gt;
&lt;h4&gt;4.2 代码中关键词&lt;/h4&gt;
&lt;p&gt;明白关键字的含义，可在部署运行前，批量替换&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;7&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;代码中关键词&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;关键词意义&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;
&lt;pre&gt;
NeedArchiveDBColName
&lt;/pre&gt;&lt;/td&gt;
&lt;td&gt;需要归档的集合所在数据库；&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;
&lt;pre&gt;
NeedArchiveColName
&lt;/pre&gt;&lt;/td&gt;
&lt;td&gt;需要归档的集合名字；&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;pre&gt;
归档数据库Name
&lt;/pre&gt;&lt;/td&gt;
&lt;td&gt;
&lt;pre&gt;
归档数据库Name
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;
&lt;pre&gt;
NeedArchiveByField
&lt;/pre&gt;&lt;/td&gt;
&lt;td&gt;归档依据的字段；此例中是Date类型的字段，其他类型还要调试。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt; /QQMSG/mongo_db/mongobin404/bin&lt;/td&gt;
&lt;td&gt; Mongo 可执行文件所在路径&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 2000000&lt;/td&gt;
&lt;td&gt; 归档的最大阈值&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; ArchiveDB_端口号&lt;/td&gt;
&lt;td&gt; 过渡文件所放的位置，一个数据库一个文档。不用细化到集合&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;端口号&lt;/td&gt;
&lt;td&gt;端口号分为源库所在实例端口，和目标库所在实例端口&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4&gt;4.3 在本例中，源库和目标库设置了相同的归档账号和对应密码&lt;/h4&gt;
&lt;h4&gt;4.4  通过crontab 实现日常归档，执行信息（异常错误）重定向到log文件&lt;/h4&gt;
&lt;p&gt;归档实现代码保存到文件中，通过crontab设置文件的定时任务，实现日常归档。&lt;/p&gt;
&lt;p&gt;执行情况 重定向（ &amp;gt;&amp;gt;）到指定文件。通过指定文件的监视可实现监控归档的执行情况。&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;本文版权归作者所有，未经作者同意不得转载&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;strong&gt;谢谢配合！！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;本文版权归作者所有，未经作者同意不得转载&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;strong&gt;谢谢配合！！！&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文版权归作者所有，未经作者同意不得转载&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;strong&gt;谢谢配合！！！&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 14:11:00 +0000</pubDate>
<dc:creator>东山絮柳仔</dc:creator>
<og:description>1.MongoDB数据归档的意义 和其他类型的数据库一样，归档对MongoDB同样重要。通过归档，可以保持集合中合适的数据量，对数据库的性能是一种保障，也就是大家常说的数据冷热分离。 同时，归档对数据</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuliuzai/p/10698241.html</dc:identifier>
</item>
<item>
<title>Unity 几何着色器 - 君莫笑-93</title>
<link>http://www.cnblogs.com/Firepad-magic/p/10698749.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Firepad-magic/p/10698749.html</guid>
<description>&lt;p&gt;&lt;span class=&quot;tag blue label&quot;&gt;shader&lt;/span&gt;&lt;span class=&quot;tag blue label&quot;&gt;Geometry Shader&lt;/span&gt;&lt;span class=&quot;tag blue label&quot;&gt;几何着色器&lt;/span&gt;&lt;/p&gt;


&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;&lt;span class=&quot;mark mark_color mark_color_F44336&quot;&gt;如果学习不能带来价值，那将毫无意义&lt;/span&gt;&lt;/p&gt;

&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;简介&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;    在顶点和片段着色器之间有一个可选的着色器，叫做几何着色器(Geometry Shader)。几何着色器以一个或多个表示为一个单独基本图形（primitive）即图元的顶点作为输入，比如可以是一个点或者三角形。几何着色器在将这些顶点发送到下一个着色阶段之前，可以将这些顶点转变为它认为合适的内容。&lt;strong&gt;几何着色器有意思的地方在于它可以把（一个或多个）顶点转变为完全不同的基本图形（primitive），从而生成比原来多得多的顶点。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;输入&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;    几何着色器阶段可将整个图元作为输入，并能够在输出上生成顶点。&lt;br/&gt;    必须首先指定单次调用几何着色器输出的顶点的最大数量（每个图元调用几何着色器）。这可以通过使用以下属性语法在着色器定义之前设置最大顶点数：&lt;br/&gt;[maxvertexcount(N)]&lt;br/&gt;    其中N是几何着色器为单个调用输出的顶点的最大数量。几何着色器可以在每次调用时输出的顶点数量是可变的，但不能超过定义的最大值。出于性能考虑，最大顶点数应尽可能小; [NVIDIA08]指出，当GS输出在1到20个标量之间时，可以实现GS的性能峰值，如果GS输出在27-40个标量之间，则性能下降50％。每次调用的标量输出数是最大顶点输出数和输出顶点类型结构中的标量数的乘积。&lt;/p&gt;
&lt;table class=&quot;table table-striped table-celled&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;基本图形&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5.5&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;point&lt;/td&gt;
&lt;td&gt;绘制GL_POINTS基本图形的时候（1）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;line&lt;/td&gt;
&lt;td&gt;当绘制GL_LINES或GL_LINE_STRIP（2）时&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;lineadj&lt;/td&gt;
&lt;td&gt;输入图元具有邻接线段（4）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;triangle&lt;/td&gt;
&lt;td&gt;GL_TRIANGLES, GL_TRIANGLE_STRIP或GL_TRIANGLE_FAN（3）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;triangleadj&lt;/td&gt;
&lt;td&gt;输入图元具有邻接三角形（6）&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;输出&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;几何着色器通过将顶点附加到输出流对象来一次输出一个顶点。 流的拓扑由固定声明确定，选择 TriangleStream、LineStream 和 PointStream 作为 GS 阶段的输出。&lt;/p&gt;

&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;声明&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot;&gt;
&lt;div class=&quot;xiaoshujiang_pre&quot;&gt;
&lt;div class=&quot;language-glsl hljs code_linenums xiaoshujiang_code&quot;&gt;
&lt;ol class=&quot;ol_linenums&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;[maxvertexcount(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)] 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; geometry_shader(point VS_OUTPUT IN[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; TriangleStream&amp;lt;GS_ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;OUTPUT&amp;gt; triStream) {  } 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;示例&lt;/span&gt;&lt;/h2&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;不做处理&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;    几何着色器位于顶点着色器和片元着色器之间，下面示例中几何着色器没做多余的效果，仅仅相当于默认的数据传递。&lt;/p&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot;&gt;
&lt;div class=&quot;xiaoshujiang_pre&quot;&gt;
&lt;div class=&quot;language-glsl hljs code_linenums xiaoshujiang_code&quot;&gt;
&lt;ol class=&quot;ol_linenums&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Shader &quot;ShaderCookbook/几何着色器/SimplePoint&quot; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Properties 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_MainTex (&quot;Texture&quot;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;D) = &quot;white&quot; {} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;SubShader 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Tags { &quot;RenderType&quot;=&quot;Opaque&quot; } 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;LOD &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Pass 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;CGPROGRAM 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma vertex vert&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma geometry geom&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma fragment frag&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#include &quot;UnityCG.cginc&quot;&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct appdata 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex : POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv : TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct v2g{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex:SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv:TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct g2f 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv : TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex : SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;sampler2D&lt;/span&gt; _MainTex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 _MainTex_ST; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g vert (appdata v) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex = UnityObjectToClipPos(v.vertex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv = TRANSFORM_TEX(v.uv, _MainTex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;[maxvertexcount(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)] 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; geom(triangle v2g input[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],&lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; TriangleStream&amp;lt;g2f&amp;gt; outStream){ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;i++){ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;g2f o=(g2f)&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex=input[i].vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv=input[i].uv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outStream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outStream.RestartStrip(); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 frag (g2f i) : SV_Target 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col = tex2D(_MainTex, i.uv); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ENDCG 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;点&lt;/span&gt;&lt;/h3&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;示例一：单纯的点&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img title=&quot;点&quot; src=&quot;https://img2018.cnblogs.com/blog/760344/201904/760344-20190412213707245-1119878193.jpg&quot; alt=&quot;点&quot; name=&quot;images/point.jpg&quot; data-src=&quot;./images/point.jpg&quot;/&gt;&lt;p&gt;点&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;xiaoshujiang_code_container&quot;&gt;
&lt;div class=&quot;xiaoshujiang_pre&quot;&gt;
&lt;div class=&quot;language-glsl hljs code_linenums xiaoshujiang_code&quot;&gt;
&lt;ol class=&quot;ol_linenums&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Shader &quot;ShaderCookbook/几何着色器/OnlyPoint&quot; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Properties 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_MainTex (&quot;Texture&quot;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;D) = &quot;white&quot; {} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;SubShader 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Tags { &quot;RenderType&quot;=&quot;Opaque&quot; } 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;LOD &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Pass 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;CGPROGRAM 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma vertex vert&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma geometry geom&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma fragment frag&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#include &quot;UnityCG.cginc&quot;&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct appdata 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex : POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv : TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct v2g{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex:SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv:TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct g2f 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv : TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex : SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;sampler2D&lt;/span&gt; _MainTex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 _MainTex_ST; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g vert (appdata v) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex = UnityObjectToClipPos(v.vertex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv = TRANSFORM_TEX(v.uv, _MainTex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;[maxvertexcount(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)] 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; geom(point v2g input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],&lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; PointStream&amp;lt;g2f&amp;gt; outStream){ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;g2f o=(g2f)&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex=input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv=input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].uv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outStream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 frag (g2f i) : SV_Target 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col = tex2D(_MainTex, i.uv); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ENDCG 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;示例二：散裂&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;    这里需要注意的是我们通过以v[0]为原点构建两个向量，通过这两个向量我们可以自定义点。&lt;/p&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;story_image_container story_block_image&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;story_image&quot; readability=&quot;33&quot;&gt;&lt;img title=&quot;由s,t构成的仿射坐标系&quot; src=&quot;https://img2018.cnblogs.com/blog/760344/201904/760344-20190412213707585-277242931.jpg&quot; alt=&quot;由s,t构成的仿射坐标系&quot; name=&quot;images/st.jpg&quot; data-src=&quot;./images/st.jpg&quot;/&gt;&lt;p&gt;由s,t构成的仿射坐标系&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img title=&quot;炸裂&quot; src=&quot;https://img2018.cnblogs.com/blog/760344/201904/760344-20190412213707903-128648325.jpg&quot; alt=&quot;炸裂&quot; name=&quot;images/dpoint.jpg&quot; data-src=&quot;./images/dpoint.jpg&quot;/&gt;&lt;p&gt;炸裂&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;xiaoshujiang_code_container&quot;&gt;
&lt;div class=&quot;xiaoshujiang_pre&quot;&gt;
&lt;div class=&quot;language-glsl hljs code_linenums xiaoshujiang_code&quot;&gt;
&lt;ol class=&quot;ol_linenums&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Shader &quot;ShaderCookbook/GeometryShader/分解&quot; { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Properties { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_MainTex(&quot;Texture&quot;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; D) = &quot;white&quot; {} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_Height(&quot;Length&quot;, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt;) = &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_Offset(&quot;Offset&quot;, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt;) = &lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_StripColor(&quot;StripColor&quot;, Color) = (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_OutColor(&quot;OutColor&quot;, Color) = (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_InColor(&quot;InColor&quot;, Color) = (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;SubShader { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Cull off 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Pass { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Tags { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&quot;RenderType&quot; = &quot;Opaque&quot; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;CGPROGRAM&lt;span class=&quot;hljs-meta&quot;&gt;# pragma vertex vert# pragma fragment frag#include &quot;UnityCG.cginc&quot;&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct appdata { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex: POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct v2f { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex: SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 objPos: TEXCOORD1; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;sampler2D&lt;/span&gt; _MainTex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 _MainTex_ST; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; _Height; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; _Offset; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 _StripColor; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2f vert(appdata v) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2f o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex = UnityObjectToClipPos(v.vertex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.objPos = v.vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv = v.uv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 frag(v2f i): SV_Target { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col = tex2D(_MainTex, i.uv); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;clip(_Height + _Offset - i.objPos.y); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i.objPos.y &amp;gt; _Height) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;col = _StripColor; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ENDCG 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;pass { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Tags { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&quot;RenderType&quot; = &quot;Opaque&quot; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;CGPROGRAM&lt;span class=&quot;hljs-meta&quot;&gt;# pragma vertex vert# pragma geometry geome# pragma fragment frag#include &quot;UnityCG.cginc&quot;&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 _OutColor; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 _InColor; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; _Height; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; _Offset; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct appdata { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex: POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 normal: NORMAL; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct v2g { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 objPos: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 normal: NORMAL; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct g2f { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex: SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; ADD_VERT(float4 v, g2f o, &lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; PointStream &amp;lt; g2f &amp;gt; outstream) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex = v; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outstream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g vert(appdata v) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.objPos = v.vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.normal = v.normal; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;[maxvertexcount(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;)] 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; geome(triangle v2g input[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; PointStream &amp;lt; g2f &amp;gt; outStream) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;g2f o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex = (input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].objPos + input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].objPos + input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].objPos) / &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 normal = (input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].normal + input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].normal + input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].normal) / &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (vertex.y &amp;lt; _Height + _Offset) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 s = input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].objPos - input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].objPos; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 t = input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].objPos - input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].objPos; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.col = _OutColor * &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;; i++) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;input[i].objPos.xyz += input[i].normal * (vertex.y - _Height); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;input[i].objPos = UnityObjectToClipPos(input[i].objPos); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_VERT(input[i].objPos, o, outStream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.col = _InColor * &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 v[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;0.2&lt;/span&gt; * s + &lt;span class=&quot;hljs-number&quot;&gt;0.2&lt;/span&gt; * t; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;0.4&lt;/span&gt; * s + &lt;span class=&quot;hljs-number&quot;&gt;0.6&lt;/span&gt; * t; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;0.6&lt;/span&gt; * s + &lt;span class=&quot;hljs-number&quot;&gt;0.4&lt;/span&gt; * t; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;; i++) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v[i].xyz += normal * (vertex.y - _Height); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v[i] = UnityObjectToClipPos(v[i]); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_VERT(v[i], o, outStream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 frag(g2f i): SV_Target { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col = i.col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ENDCG 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;线&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img title=&quot;线&quot; src=&quot;https://img2018.cnblogs.com/blog/760344/201904/760344-20190412213708464-906661513.jpg&quot; alt=&quot;线&quot; name=&quot;images/line.jpg&quot; data-src=&quot;./images/line.jpg&quot;/&gt;&lt;p&gt;线&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;示例：wire frame&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot;&gt;
&lt;div class=&quot;xiaoshujiang_pre&quot;&gt;
&lt;div class=&quot;language-glsl hljs code_linenums xiaoshujiang_code&quot;&gt;
&lt;ol class=&quot;ol_linenums&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Shader &quot;ShaderCookbook/几何着色器/TriangleLine&quot; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Properties 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_MainTex (&quot;Texture&quot;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;D) = &quot;white&quot; {} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;SubShader 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Tags { &quot;RenderType&quot;=&quot;Opaque&quot; } 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;LOD &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Pass 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;CGPROGRAM 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma vertex vert&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma geometry geom&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma fragment frag&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#include &quot;UnityCG.cginc&quot;&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct appdata 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex : POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv : TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct v2g{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex:SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv:TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct g2f 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv : TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex : SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;sampler2D&lt;/span&gt; _MainTex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 _MainTex_ST; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g vert (appdata v) 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex = UnityObjectToClipPos(v.vertex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv = TRANSFORM_TEX(v.uv, _MainTex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;[maxvertexcount(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)] 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; geom(triangle v2g input[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],&lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; LineStream&amp;lt;g2f&amp;gt; outStream){ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;g2f o=(g2f)&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex=input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv=input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].uv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outStream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex=input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv=input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].uv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outStream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex=input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv=input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].uv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;outStream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 frag (g2f i) : SV_Target 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;{ 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col = tex2D(_MainTex, i.uv); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ENDCG 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h3&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;面&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;story_image_container story_block_image&quot;&gt;
&lt;div class=&quot;story_image&quot;&gt;&lt;img title=&quot;enter description here&quot; src=&quot;https://img2018.cnblogs.com/blog/760344/201904/760344-20190412213709420-834037825.gif&quot; alt=&quot;enter description here&quot; name=&quot;images/尖刺.gif&quot; data-src=&quot;./images/%E5%B0%96%E5%88%BA.gif&quot;/&gt;&lt;p&gt;enter description here&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;h4 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h4&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;示例：尖刺&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;xiaoshujiang_code_container&quot;&gt;
&lt;div class=&quot;xiaoshujiang_pre&quot;&gt;
&lt;div class=&quot;language-glsl hljs code_linenums xiaoshujiang_code&quot;&gt;
&lt;ol class=&quot;ol_linenums&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Shader &quot;ShaderCookbook/GeometryShader/尖刺&quot; { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Properties { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_MainTex(&quot;Texture&quot;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;D) = &quot;white&quot; {} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;_Length(&quot;Length&quot;, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt;) = &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;SubShader { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Tags { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&quot;RenderType&quot; = &quot;Opaque&quot; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;LOD &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;Pass { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;CGPROGRAM 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma vertex vert&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma geometry geom&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma fragment frag&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#pragma multi_compile_fog&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#include &quot;UnityCG.cginc&quot;&lt;/span&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct appdata { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex: POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct v2g { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 pos: SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;struct g2f { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 uv: TEXCOORD0; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 vertex: SV_POSITION; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;}; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;sampler2D&lt;/span&gt; _MainTex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float4 _MainTex_ST; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; _Length; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; ADD_VERT(float3 v, g2f o, &lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; TriangleStream &amp;lt; g2f &amp;gt; tristream) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.vertex = UnityObjectToClipPos(v); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;tristream.Append(o); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; ADD_TRI(float3 p0, float3 p1, float3 p2, g2f o, &lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; TriangleStream &amp;lt; g2f &amp;gt; tristream) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_VERT(p0, o, tristream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_VERT(p1, o, tristream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_VERT(p2, o, tristream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;tristream.RestartStrip(); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g vert(appdata v) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;v2g o = (v2g) &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.pos = v.vertex; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv = TRANSFORM_TEX(v.uv, _MainTex); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;[maxvertexcount(&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;)] 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; geom(triangle v2g input[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;hljs-keyword&quot;&gt;inout&lt;/span&gt; TriangleStream &amp;lt; g2f &amp;gt; outStream) { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;g2f o; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 s = (input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].pos - input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].pos).xyz; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 t = (input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].pos - input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].pos).xyz; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 normal = &lt;span class=&quot;hljs-built_in&quot;&gt;normalize&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;cross&lt;/span&gt;(s, t)); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float3 centerPos = (input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].pos.xyz + input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].pos.xyz + input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].pos.xyz) / &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;float2 centerUv = (input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].uv + input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].uv + input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].uv) / &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;o.uv = centerUv; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;centerPos += normal * _Length * &lt;span class=&quot;hljs-built_in&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;sin&lt;/span&gt;(_Time.y * &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_TRI(input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].pos, centerPos, input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].pos, o, outStream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_TRI(input[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].pos, centerPos, input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].pos, o, outStream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ADD_TRI(input[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].pos, centerPos, input[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].pos, o, outStream); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 frag(g2f i): SV_Target { 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;fixed4 col = tex2D(_MainTex, i.uv); 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; col; 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;ENDCG 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;li class=&quot;li_linenum li_list_style&quot;&gt;} 
&lt;hr class=&quot;code_line_break_hack&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 class=&quot;xsj_heading_hash xsj_heading xsj_heading_h2&quot;&gt;&lt;span class=&quot;xsj_heading_content&quot;&gt;Other&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;项目工程：链接: &lt;a class=&quot;xsj_link xsj_auto_link&quot; href=&quot;https://pan.baidu.com/s/1eGk6GHIfWzIFcAX6pxTGRA&quot; target=&quot;_blank&quot;&gt;https://pan.baidu.com/s/1eGk6GHIfWzIFcAX6pxTGRA&lt;/a&gt; 提取码: fv75&lt;/p&gt;
&lt;p&gt;eqm2Bj23236&lt;/p&gt;
&lt;blockquote readability=&quot;0&quot;&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_1&quot;&gt;&lt;a class=&quot;xsj_link xsj_manu_link&quot; href=&quot;https://learnopengl-cn.readthedocs.io/zh/latest/04%20Advanced%20OpenGL/09%20Geometry%20Shader/&quot; target=&quot;_blank&quot;&gt;参考一&lt;/a&gt;&lt;br/&gt;&lt;a class=&quot;xsj_link xsj_manu_link&quot; href=&quot;https://open.gl/geometry&quot; target=&quot;_blank&quot;&gt;参考二&lt;/a&gt;&lt;br/&gt;&lt;a class=&quot;xsj_link xsj_manu_link&quot; href=&quot;https://blog.csdn.net/qq_37925032/article/details/82936769&quot; target=&quot;_blank&quot;&gt;参考三&lt;/a&gt;&lt;br/&gt;&lt;a class=&quot;xsj_link xsj_manu_link&quot; href=&quot;https://api.assetstore.unity3d.com/affiliate/embed/package/68570/widget?aid=1011l5dHP%22&quot; target=&quot;_blank&quot;&gt;可视化shader编程工具&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;xsj_paragraph xsj_paragraph_level_0&quot;&gt;&lt;span class=&quot;mark mark_color mark_color_FF9800&quot;&gt;这里推荐一款可视化shader编程工具，对美术同学非常友好，就像建模工具中的材质编辑器一样&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 13:37:00 +0000</pubDate>
<dc:creator>君莫笑-93</dc:creator>
<og:description>Unity 几何着色器 shaderGeometry Shader几何着色器 Unity 几何着色器 如果学习不能带来价值，那将毫无意义 简介 在顶点和片段着色器之间有一个可选的着色器，叫做几何着色器</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Firepad-magic/p/10698749.html</dc:identifier>
</item>
<item>
<title>sqlserver 抓取所有执行语句  SQL语句分析 死锁 抓取 - black2bi</title>
<link>http://www.cnblogs.com/qiaqia-liu/p/10698643.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qiaqia-liu/p/10698643.html</guid>
<description>&lt;p&gt;在多人开发中最头疼的是人少事多没有时间进行codereview,本来功能都没时间写,哪有时间来开会细细来分析代码.软件能跑就行,但是一些影响性能的语句写出来,有可能本人都不知道.找就更&lt;/p&gt;
&lt;p&gt;麻烦了.幸亏sqlserver提供了工具可以导出执行语句进行分析.可以看看是哪些语句影响整体性能.工具叫sql server profiler,这玩意可以抓取实例上执行的所有语句\死锁\事物,为分析提供帮助.&lt;/p&gt;
&lt;p&gt;开始-&amp;gt;sqlserver目录-&amp;gt;性能工具-&amp;gt;sql server profiler 打开软件新建连接你想抓的实例,然后你就可以看到这个了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/411120/201904/411120-20190412202400521-167589313.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击显示所有事件,会列出可以监视的所有状态.一般分析和用的多的话死TSQL\Stored ProcedureS\Lock 这三个.第一个很简单是SQL语句,第二个是存储过程,第三个是锁的情况.&lt;/p&gt;
&lt;p&gt;一般把前两个放在一起分析.可以找到所有的执行语句.第三个用来单独分析来找死锁.&lt;/p&gt;
&lt;p&gt;前两个选好以后,转到第一个选项卡,不要保存在文件,保存在文件给没有一样,直接保存到表,这时,你要另外找个数据库了.因为保存到表中相当于往保存的数据库中插入一条记录,然后这个语句&lt;/p&gt;
&lt;p&gt;又会产生一个语句,造成无限递归,一会就把服务器搞死,我们一次分析时,直接把要分析的库跟抓取的库放在同一个实例上,结果3分钟后整个SQL挂了,没有响应了,删了抓取表,重启实例服务,重启网站&lt;/p&gt;
&lt;p&gt;才好.还好是处理的快.简单说,&lt;span&gt;比如你要分析服务器上的一个实例所有的语句,你要把抓取的结果放在你本地的数据库实例中&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;放到数据库表中后,因为是结构化数据,所以分析也特别容易,一下贴一张图.抓取的结果放在表中,是会覆盖原表中的数据.还有它抓取数据中,界面在不断的闪烁.也在列表中增加,如果服务器显卡不佳,一会&lt;/p&gt;
&lt;p&gt;就给卡死,所以开启以后直接最小化,抓取完毕直接用任务处理器杀掉进程就行.抓取时间跟你们要分析的片段有关.然后用SQL语句直接查出耗时前10,然后个人认领回去修改就行.我存在本地数据库&lt;/p&gt;
&lt;p&gt;名字DataA中的表InitTableInfo,这样我们就可以查询下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;use&lt;/span&gt;&lt;span&gt; DataA

&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;top&lt;/span&gt; &lt;span&gt;100&lt;/span&gt; &lt;span&gt;datediff&lt;/span&gt;&lt;span&gt;(second, StartTime, EndTime) costtime,
       RowNumber,
       TextData,
       ApplicationName,
       ClientProcessID,
       SPID
  &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; InitTableInfo
 &lt;/span&gt;&lt;span&gt;where&lt;/span&gt; StartTime &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;
   &lt;span&gt;and&lt;/span&gt; EndTime &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;
 &lt;span&gt;order&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; costtime &lt;span&gt;desc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下是结果展示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/411120/201904/411120-20190412205427371-58127066.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第一个是花费的时间,还有对应的语句,以及一些额外的信息.可以看到一些用时最大的达到20多秒.很吓人的额.这样贴出来让个人认领去修改.达到提升执行效率的目的.&lt;/p&gt;
&lt;p&gt;2.死锁&lt;/p&gt;
&lt;p&gt;程序运行中一些关键模块,比如会员积分和金额代金券等,有些人写的因为不够注意或者当时水平不行,容易些一些死锁.这样我们需要有一个分析的路径.&lt;/p&gt;
&lt;p&gt;如果再程序中加入try catch来捕获,自己写的熟悉的模块还好,如果是别人写的另外时间紧任务重.你一时发现不了,你就可以启用死锁了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/411120/201904/411120-20190412211342905-1617080854.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;deadlock graph 会把找到的deadlock放到一个xdl文件中,这玩意用文件夹也打的开,可以分别存储每个deadlock发生的语句和占用的资源.这时间你就可以根据这玩意处理了.&lt;/p&gt;
&lt;p&gt;一般处理死锁是相同顺序的读写\优化索引和最小限度的使用表里的数据,对于抓取数据,进行使用行级锁和页级锁.对于非必要的数据进行脏读.单独说又是很多了.这里只介绍工具&lt;/p&gt;
&lt;p&gt;保存好的死锁文件,可以送给你的各位同事,&lt;/p&gt;

</description>
<pubDate>Fri, 12 Apr 2019 13:19:00 +0000</pubDate>
<dc:creator>black2bi</dc:creator>
<og:description>在多人开发中最头疼的是人少事多没有时间进行codereview,本来功能都没时间写,哪有时间来开会细细来分析代码.软件能跑就行,但是一些影响性能的语句写出来,有可能本人都不知道.找就更 麻烦了.幸亏s</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qiaqia-liu/p/10698643.html</dc:identifier>
</item>
<item>
<title>在Windows上使用Docker运行.NetCore - 小世界的野孩子</title>
<link>http://www.cnblogs.com/hulizhong/p/10698584.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hulizhong/p/10698584.html</guid>
<description>&lt;p&gt;&lt;span&gt;今天我们来说下如何在windows下使用docker运行.net core，既然是docker，那么我们首先得在windows上安装docker。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;在Windows安装 docker 有两种选择&lt;/strong&gt; ：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1、docker for windows&lt;/span&gt;&lt;br/&gt;&lt;span&gt;2、docker toolbox&lt;/span&gt;&lt;br/&gt;&lt;span&gt;区别：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;docker for windows-64位Windows 10、必须开启 Hyper-V&lt;/span&gt;&lt;br/&gt;&lt;span&gt;docker toolbox -有virtualbox即可&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;今天只给大家介绍 docker for windows安装&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;地址：&lt;a href=&quot;https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe&quot;&gt;https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们下载按照步骤一步步安装就ok了，安装之后打开可能会出现一个错误，如果没有出现那肯定万事大吉咯！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Hyper-V 没开不能启动：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;以管理员身份打开 PowerShell 控制台。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;运行以下命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现在我们再来启动即可，在右下角也会有一个图标，悬浮上去显示 docker desk is running，表示已经安装成功（这个会提示我们登录，不过登录不登录问题都不是太大，登录之后可以连接到(Docker Hub）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;接下来正式进入我们&lt;/span&gt;&lt;span&gt;今天的主题，如何而使用 docker for windows 来运行 .netcore（Start）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先我们创建一个.net core web项目&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412210308658-1927998667.png&quot; alt=&quot;&quot; width=&quot;681&quot; height=&quot;427&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后我们去项目根目录去看，会发现有一个Dockerfile的文件，同样我们需要在项目当中修改Dockerfile文件的属性，修改为较新则复制。 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412210425959-1478732029.png&quot; alt=&quot;&quot; width=&quot;349&quot; height=&quot;636&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们可以运行一下.net core看一下出来的页面效果，到现在我们需要的.net core的事例已经准备好了，我们现在开始在docker 中部署了。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;我们打开PowerShell ，输入 docker info 出现下面的界面的样子证明docker 一切正常。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412210749877-1261276882.png&quot; alt=&quot;&quot; width=&quot;423&quot; height=&quot;469&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们进入到我们刚刚创建的.net core 项目的根目录，然后开始构建docker镜像，要注意命令后面的那个 . ，意思是当前目录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;docker build -t demotest .&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;然后我们发现在执行到第六步的时候报错了，说什么在该路径找不到该文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412210934014-1581000618.png&quot; alt=&quot;&quot; width=&quot;1049&quot; height=&quot;266&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我也卡在这里卡了很久，最后发现路径拼接起来不对。我们仔细检查下Dockerfile文件的第六步发现文件路径是dockertest/dockertest.csproj，再结合我们当前路径是E:\Docker\dockertest&lt;/span&gt;&lt;br/&gt;&lt;span&gt;\dockertest，组合一来看，多了一个dockertest，然后我们修改Dockerfile文件中的路径去掉这个多的dockertest/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后我们再来执行docker build -t demotest .然后发现我们在第10步的时候又出错了，说这个程序不包含适合入口点的静态'Main'方法，我们继续检查下Dockerfile文件，发现第9步那个工作路径&lt;/span&gt;&lt;br/&gt;&lt;span&gt;是/src/dockertest，我们拼接一下发现，又多了一个/dockertest，我们接着继续去掉这个，然后继续运行docker build -t demotest .&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这一次终于不负众望。它完整的运行完成了所有的步骤并且提示了&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Successfully built eaa8cea8fcf4
Successfully tagged demotest:latest&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;我们来看看构建镜像是否真的成功了吧&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;docker images&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412211306089-15563238.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们发现了这一个，是我们刚刚创建的demotest,既然镜像我们已经创建成功了，那我们正式运行起来看看是否可用。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;docekr run --name=demotest -p &lt;span&gt;7778&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt; -&lt;span&gt;d demotest
&lt;/span&gt;--&lt;span&gt;name：指定容器名称
&lt;/span&gt;-&lt;span&gt;p：指定容器端口
&lt;/span&gt;-d：指定容器 后台运行&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;然后出现了一串字符串，说明我们启动成功了，然后我们查看一下我们正在运行的容器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412211417546-1105558387.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412211458761-355354446.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后我们去浏览器输入ip+7778，看到如下页面证明这次docker for windows  +.net core 成功运行了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1470432/201904/1470432-20190412211527593-1493810502.png&quot; alt=&quot;&quot; width=&quot;1066&quot; height=&quot;255&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;那么到这里我们的第一的windows+docker运行.netcore算是正式完工了，然后在给大家介绍一些较为常用的docker命令（命令）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;docker build -&lt;span&gt;t demotest .    构建 demotest镜像
docker images                      查看当前所有的镜像
docker inspect demotest     查看 运行容器的详情
docker ps                         查看当前运行的容器
docker ps &lt;/span&gt;-&lt;span&gt;a                      查看当前所有的容器
docker stop demotest      停止运行demotest容器
docker start demotest     开启运行demotest容器
docker rm demotest     删除demotest容器
docker rmi demotest    删除demotest镜像
docker rm $(docker ps &lt;/span&gt;-&lt;span&gt;aq)     删除所有容器
docker rmi $(docker images &lt;/span&gt;-q)   删除所有镜像&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;






&lt;div&gt;&lt;span&gt;&lt;img src=&quot;file:///C:/Users/Administrator/Documents/AntSys/256/CA843AAA-5D18-11E9-8675-005056C00008.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 12 Apr 2019 13:19:00 +0000</pubDate>
<dc:creator>小世界的野孩子</dc:creator>
<og:description>今天我们来说下如何在windows下使用docker运行.net core，既然是docker，那么我们首先得在windows上安装docker。 在Windows安装 docker 有两种选择</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hulizhong/p/10698584.html</dc:identifier>
</item>
<item>
<title>#8   Python网络编程（一） - MinuteSheep</title>
<link>http://www.cnblogs.com/minutesheep/p/10659700.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/minutesheep/p/10659700.html</guid>
<description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;语言是用来交流的，人类语言使人与人交流，编程语言使人与机器交流，那么问题来了，机器如何与机器交流。你是否疑惑过：为什么我们可以使用浏览器查资料、为什么我们可以使用聊天软件聊天、为什么我们可以通过网络传输文件.etc。会与机器交流的人是少部分的，正是这少部分人让几乎所有人方便的使用网络，对于这所有人来说，他们想要聊天，只需要打开一个聊天窗口，输入文字，然后发送即可，他们并不会关注其背后的具体过程，因为背后的过程是复杂的，是由少部分人完成的。通过这本次系列的学习，你将成为少部分人！&lt;/p&gt;
&lt;h3&gt;一、网络编程概念&lt;/h3&gt;
&lt;h4&gt;1.1 网络编程概念&lt;/h4&gt;
&lt;p&gt;网络编程听起来很高大上，但其实质就是进程之间的通信。再说的直白点，就是软件间的通信，可以是同一计算机的同一软件、同一计算机的不同软件、不同计算机的不同软件、不同计算机的同一软件。（看到这里，应该大概明白了进程就是软件了哇）&lt;/p&gt;
&lt;h3&gt;二、网络编程先修知识&lt;/h3&gt;
&lt;h4&gt;2.1 计算机网络五层协议体系结构&lt;/h4&gt;
&lt;p&gt;为了介绍网络原理，通常习惯将计算机网络分为五层协议体系结构，从下至上分别为：物理层、数据链路层、网络层、运输层、应用层。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1443622/201904/1443622-20190406171330182-1455702835.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;2.1.1 应用层&lt;/h4&gt;
&lt;p&gt;应用层是体系结构的最高层。直接为用户的应用进程提供服务，主要任务是通过应用进程间的交互来完成特定的网络应用。应用层协议定义的是应用进程间通信和交互的规则。&lt;/p&gt;
&lt;p&gt;应用层的协议很多，例如大家熟知的HTTP协议、DNS、SMTP协议、FTP等等&lt;/p&gt;
&lt;p&gt;&lt;span&gt;『防抄袭：读者请忽略这段文字，文章作者是博客园的&lt;a href=&quot;https://www.cnblogs.com/minutesheep/p/10659700.html&quot;&gt;MinuteSheep&lt;/a&gt;』&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2.1.2 运输层&lt;/p&gt;
&lt;p&gt;运输层的主要任务是负责向两台主机中进程之间的通信提供通用的数据传输服务。&lt;/p&gt;
&lt;p&gt;运输层主要有以下两种协议：&lt;/p&gt;
&lt;p&gt;传输控制协议TCP（Transmission Control Protool）—— 提供面向连接的、可靠的数据传输服务&lt;/p&gt;
&lt;p&gt;用户数据协议UDP（User Datagram Protool）—— 提供无连接的、尽最大努力的数据传输服务&lt;/p&gt;
&lt;h4&gt;2.1.3 网络层&lt;/h4&gt;
&lt;p&gt;网络层负责为分组交换网上的不同主机提供通信服务。&lt;/p&gt;
&lt;p&gt;网络层最常用的协议为IP（Internet Protool）协议&lt;/p&gt;
&lt;h4&gt;2.1.4 数据链路层&lt;/h4&gt;
&lt;p&gt;两台主机之间的数据传输，总是在一段一段的链路上传送的，这就需要使用专门的链路层协议。&lt;/p&gt;
&lt;h4&gt;2.1.5 物理层&lt;/h4&gt;
&lt;p&gt;物理层主要的任务是传送比特流。&lt;/p&gt;
&lt;h4&gt;2.2 图解数据在各层之间的传递过程&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1443622/201904/1443622-20190412200908694-954193006.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上图是从《计算机网络》（第七版，谢希仁）扫描下来的，这幅图显示了整个计算机网络体系的传递过程。&lt;/p&gt;
&lt;p&gt;假定主机1的应用进程AP1向主机2的应用进程AP2传送数据。AP1先将其数据交给本主机的第5层（应用层）。第5层加上必要的控制信息H5就变成了下一层的数据单元。第4层（运输层）收到这个数据单元后，加上本层的控制信息H4，在交给第3层（网络层），成为第3层的数据单元。一次类推，不过到了第2层（数据链路层）后，控制信息被分为两部分，分别加到本层数据单元的首部（H2）和尾部（T2）；而第1层（物理层）由于是比特流的传送，所以不在加上控制信息。&lt;/p&gt;
&lt;p&gt;当这串的比特流离开主机1经网络的物理媒体传送到路由器时，就从路由器的第1层依次上升到第3层。每层都根据控制信息进行必要的操作，然后将控制信息剥去，将该层剩下的数据单元上交给更高的一层。当分组上升到了第3层时，就根据首部中的目的地址查找路由器中的转发表，找出转发分组的接口，然后往下传送到第2层，加上新的首部和尾部后，再到最下面的第1层，然后在物理媒体上把每-个比特发送出去。&lt;/p&gt;
&lt;p&gt;当这一串的比特流离开路由器到达目的站主机2时，就从主机2的第1层按照上面讲过的方式，依次上升到第5层。最后，把应用进程AP1发送的数据交给目的站的应用进程AP2。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;『防抄袭：读者请忽略这段文字，文章作者是博客园的&lt;a href=&quot;https://www.cnblogs.com/minutesheep/p/10659700.html&quot;&gt;MinuteSheep&lt;/a&gt;』&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;2.3 TCP/IP简介&lt;/h4&gt;
&lt;p&gt;了解了上面五层网络体系结构之后，两台主机之间想要通信，那么最重要的问题就是：要给谁发？怎么发？发送的信息是否可以没有任何错误的到达？&lt;/p&gt;
&lt;h4&gt;2.3.1 IP协议&lt;/h4&gt;
&lt;p&gt;为了解决要给谁发？怎么发的问题，IP协议就诞生了。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;为每一台计算机做了标识，这个标识就是IP地址，例如233.233.233.233，有了这个标识，就可以知道给谁发送了&lt;/li&gt;
&lt;li&gt;IP协议负责将数据从一台主机发送到另一台主机。发送方式是将数据划分为一段一段的，以IP包的形式发出去&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;2.3.2 TCP协议&lt;/h4&gt;
&lt;p&gt;发是能发了，但是能不能无差错的送到对方手中，又成了一个难题，TCP的诞生解决了这个问题：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;TCP是建立在IP协议之上的&lt;/li&gt;
&lt;li&gt;TCP通过3次握手的方式建立连接，然后对IP包进行编号，保证每个IP包可以顺利发送到对方手中，如果有一个包出现差错，就重新发送这个包&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1443622/201904/1443622-20190412204001963-928473509.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 上图就是TCP建立连接（三次握手🤝）和建立连接后发送数据的过程，了解即可。&lt;/p&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;有了这些基本的网络知识以后，下一步就要正式进行网络编程了，下次见！&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 12:48:00 +0000</pubDate>
<dc:creator>MinuteSheep</dc:creator>
<og:description>本篇博文主要记录网络编程的先修知识，重点讲解了五层网络体系结构和TCP/IP协议</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/minutesheep/p/10659700.html</dc:identifier>
</item>
<item>
<title>基于STM8的UART发送和中断接收 - 浩宇99✌</title>
<link>http://www.cnblogs.com/zhenghaoyu/p/10698471.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhenghaoyu/p/10698471.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.综述&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　UART的基础知识，通用异步收发传输器（Universal Asynchronous Receiver/Transmitter)，通常称作UART，是一种异步收发传输器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　做软件开发的人都知道打印信息的重要，说到打印信息，我们就不得不说UART串口打印。做单片机开发的人，打印信息主要的来源就是UART串口打印。因此，UART会比较常用到，所以在此对UART串口进行一个说明。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.关于STM8S103手册的UART简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1545743/201904/1545743-20190411215703981-1325212527.png&quot; alt=&quot;&quot; width=&quot;998&quot; height=&quot;786&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.UART详细讲解&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.1 BaudRate（波特率）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;所谓的波特率就是每秒钟传送的码元符号的个数，可以理解为串口的输出速率。可选的波特率有很多，常用的波特率有115200bps，9600bps等...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.2 WordLength（数据长度）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;即为传输的数据转成二进制后有多少位。可选的数据位数：8位、9位，常用的数据位数为8位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.3 StopBits（停止位）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;即为数据帧的尾部传输停止位个数。可选的停止位：0.5位、1位、1.5位、2位，常用的停止位为1位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.4 Parity（奇偶校验）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;即为输出结果是否经过奇偶校验，根据被传输的一组二进制代码的数位中“1”的个数是奇数或偶数来进行校验。可选的奇偶校验：奇校验、偶校验、不进行奇偶校验。常用的为不进行奇偶校验。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.5 SyncMode（同步模式 ）&lt;/span&gt;&lt;/strong&gt;（本博客对此模式只进行一个粗略讲解，如想深入了解，请察看官方的手册。）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　  通信时双方是否有共同的时钟参考，能否通过时钟参考准确收发数据。可选择的模式有很多，常用的模式为 同步模式禁用，SLK PIN禁用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.6 Mode（UART模式）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;可选的模式：接收使能、接收不使能、发送使能、发送不使能、发送接收都使能。常用的模式为发送接收都使能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.例程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.1 编译环境&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我的编译环境是IAR，这款软件是现在STM8的主流平台，比较推荐。不过我打算等到STCubeMX更新出比较方便的版本后再去使用Keil5，因为我在用STM32的时候就是利用Keil5，的确很方便，你们也可以学着用一下。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.2 主芯片&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我的主芯片是STM8S系列中的103，其中STM8S的003、005、和103、105，配置一样（外设和CPU频率，FLASH），在代码相同的情况下均可进行烧写。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.3 库文件的添加&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们的工程可以在IAR中的官方例程中复制，操作过程：打开STM8S_StdPeriph_Lib（这是一个官方的库文件，下载IAR STM8包的时候就携带，里面有库文件和相对应的例程），将Libraries文件复制到你工程所在的文件下，并将有关于ADC的库文件添加到你的工程列表当中。添加完成后，就可以开始编写代码了（如果你将全部的库文件都添加进来的话，编译程序后库文件还有红点报错的话，这是因为你选的芯片上没有该功能，你需要将其删掉才能不报错。）如图。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1545743/201904/1545743-20190412195741836-607381978.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.4 代码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.4.1 UART初始化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;将GPIO和UART初始化后，需要开启接收的中断，如14、17行内容。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;******************************************************************************
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;* Function Name  : MX_UART1_Init
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;* Description    : UART1_Init
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;* Input          : None
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;* Output         : None
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;* Return         : None
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;*******************************************************************************&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MX_UART1_Init(&lt;span&gt;void&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;  UART1_DeInit();
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;  GPIO_Init(Uart_TX_GPIO_Port, Uart_TX,GPIO_MODE_OUT_PP_HIGH_FAST);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;  GPIO_Init(Uart_RX_GPIO_Port, Uart_RX,GPIO_MODE_IN_PU_IT);  
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;   UART1_Init(&lt;span&gt;115200&lt;/span&gt;&lt;span&gt;,UART1_WORDLENGTH_8D,UART1_STOPBITS_1,UART1_PARITY_NO,UART1_SYNCMODE_CLOCK_DISABLE,UART1_MODE_TXRX_ENABLE);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;  UART1_ITConfig(UART1_IT_RXNE_OR,ENABLE);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;   UART1_Cmd(ENABLE);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;启用串口&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;   
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;  enableInterrupts(); 
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;扩展一下基本知识就是：起始位 +数据（8位） +停止位（这里没有校验位）。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;所以我们传输一个字节数据要用到10个位。这样算下来 115200/10 = 11520 字节/s。（即速度为11520 B/s）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;通俗一点的说的话，KB是1024个B，11520 (B/S) / 1024 = 11.25KB/S就是我们这个功能所拥有的速度了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这个是为了让你知道它的速度局限在哪里。因此来做一些它所力所能及的事情。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.4.2 发送&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;UART1_SendData8(0x31);
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;UART1_SendWord(&quot;国维不行&quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这里直接调用这两个函数便可实现发送。不过，发送数据的是ASCII码值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;实验结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1545743/201904/1545743-20190412201922302-871408419.png&quot; alt=&quot;&quot; width=&quot;557&quot; height=&quot;509&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.4.2 中断接收&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;    &lt;span&gt;if&lt;/span&gt;(UART1_GetITStatus(UART1_IT_RXNE) != RESET)        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查指定的UART1中断是否发生。 &lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;   {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;      UART1_SendData8(UART1_ReceiveData8());             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将接收的数据再用串口发送出去&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;      UART1_ClearITPendingBit(UART1_IT_RXNE);            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;清除UART1挂起标志&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;    }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;由于IAR中库函数工程模板的中断都写在 stm8s_it.c 库文件中，我们需要打开将上面的代码加入函数内部中，如图。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1545743/201904/1545743-20190412203354716-1574466629.png&quot; alt=&quot;&quot; width=&quot;802&quot; height=&quot;266&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意：这里的中断处理有芯片型号的区分，如果不是STM8S103芯片请自行选择相对应的芯片的中断处理函数。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;实验结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1545743/201904/1545743-20190412205404209-735257661.png&quot; alt=&quot;&quot; width=&quot;562&quot; height=&quot;419&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;5. 结尾&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　相对来说，STM8库文件的UART调用相对来说还是比较容易的，希望该博客能够帮助到大家实现UART功能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　对STM8的GPIO的说明和引用到这里结束，感谢各位看官的点击。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　如果觉得有所收获请点下推荐，若认为该博客中存在错误的说明或者对博客中某方面有疑问请留言。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;作 者：浩宇99✌
出 处：https://www.cnblogs.com/zhenghaoyu/p/10676192.html&lt;/span&gt;&lt;br/&gt;&lt;span&gt;版权声明：本文原创发表于 博客园，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则视为侵权。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 12 Apr 2019 12:46:00 +0000</pubDate>
<dc:creator>浩宇99✌</dc:creator>
<og:description>做软件开发的人都知道打印信息的重要，说到打印信息，我们就不得不说UART串口打印。做单片机开发的人，打印信息主要的来源就是UART串口打印。因此，UART会比较常用到，所以在此对UART串口进行一个说</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhenghaoyu/p/10698471.html</dc:identifier>
</item>
<item>
<title>『同余乘法逆元』 - Parsnip</title>
<link>http://www.cnblogs.com/Parsnip/p/10698402.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Parsnip/p/10698402.html</guid>
<description>&lt;p&gt;&lt;span&gt;&amp;lt;更新提示&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;lt;第一次更新&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&amp;lt;正文&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;乘法逆元&quot;&gt;&lt;span&gt;乘法逆元&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;我们知道，由于同余的运算只定义在整数集中，而整数集不满足除法封闭，所以同余是不满足同除性的。但是，如果有涉及取模操作的计数类题目当中需要除法运算怎么办，这就需要乘法逆元了。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;定义&quot;&gt;&lt;span&gt;定义&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;若整数&lt;span class=&quot;math inline&quot;&gt;\(b,m\)&lt;/span&gt;互质，且&lt;span class=&quot;math inline&quot;&gt;\(b|a\)&lt;/span&gt;，则存在一个整数&lt;span class=&quot;math inline&quot;&gt;\(x\)&lt;/span&gt;，满足&lt;span class=&quot;math inline&quot;&gt;\(\frac{a}{b}\equiv ax(mod\ m)\)&lt;/span&gt;，称&lt;span class=&quot;math inline&quot;&gt;\(x\)&lt;/span&gt;为&lt;span class=&quot;math inline&quot;&gt;\(b\)&lt;/span&gt;在模&lt;span class=&quot;math inline&quot;&gt;\(m\)&lt;/span&gt;意义下的乘法逆元，即为&lt;span class=&quot;math inline&quot;&gt;\(b^{-1}(mod\ m)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;通常来说，我们会使用另一种方式来表示逆元：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\frac{a}{b}\equiv ab^{-1}\equiv \frac{a}{b}*b*b^{-1}(mod\ m)\]&lt;/span&gt;&lt;br/&gt;故对于逆元&lt;span class=&quot;math inline&quot;&gt;\(b^{-1}(mod\ m)\)&lt;/span&gt;，满足&lt;span class=&quot;math inline&quot;&gt;\(b*b^{-1}\equiv 1(mod\ m)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;求解&quot;&gt;&lt;span&gt;求解&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;了解了模意义下乘法逆元的定义和作用，那么我们需要知道如何求解。通常来说，我们有好几种常用的方式，如费马小定理，扩展欧几里得等，接下来我们一一详解。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;费马小定理&quot;&gt;&lt;span&gt;费马小定理&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;若&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;为质数，则对于任意整数&lt;span class=&quot;math inline&quot;&gt;\(a\)&lt;/span&gt;，有&lt;span class=&quot;math inline&quot;&gt;\(a^p\equiv a(mod\ p)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;注意到著名的费马小定理和我们的逆元非常像，可以推导一下：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ a^p\equiv a(mod\ p) \\a^{p-1}\equiv 1(mod\ p) \\a*a^{p-2}\equiv 1(mod\ p) \]&lt;/span&gt;&lt;br/&gt;所以，当模数&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;为质数时，&lt;span class=&quot;math inline&quot;&gt;\(a^{p-2}\)&lt;/span&gt;就是&lt;span class=&quot;math inline&quot;&gt;\(a\)&lt;/span&gt;在模&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;意义下的乘法逆元。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;math inline&quot;&gt;\(a^{p-2}\)&lt;/span&gt;显然是可以用快速幂算的，那么我们就得到了逆元的第一种解决方案，可以求解单独一个数的逆元，时间复杂度为&lt;span class=&quot;math inline&quot;&gt;\(O(log_2p)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;math inline&quot;&gt;\(Code:\)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;span&gt;&lt;code&gt;inline long long power(long long a,long long b,long long p)
{
    long long res=1;
    while (b)
    {
        if (1&amp;amp;b)res=res*a%p;
        a=a*a%p;
        b&amp;gt;&amp;gt;=1;
    }
    return res;
}
inline long long Fermat(long long a,long long p)
{
    return power(a,p-2,p);
}&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;欧拉定理&quot;&gt;&lt;span&gt;欧拉定理&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;span&gt;若正整数&lt;span class=&quot;math inline&quot;&gt;\(a,p\)&lt;/span&gt;互质，则&lt;span class=&quot;math inline&quot;&gt;\(a^{ϕ(p)}≡1(mod\ p)\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(ϕ(p)\)&lt;/span&gt;为欧拉函数。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;费马小定理求逆元的话是要求模数&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;为质数的，更一般地，如果只能保证&lt;span class=&quot;math inline&quot;&gt;\(a,p\)&lt;/span&gt;互质，那么我们可以用欧拉定理求逆元。&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ a^{\phi(p)}\equiv 1(mod\ p) \\a*a^{\phi(p)-1}\equiv 1(mod\ p) \]&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么&lt;span class=&quot;math inline&quot;&gt;\(a^{\phi(p)-1}\)&lt;/span&gt;就是&lt;span class=&quot;math inline&quot;&gt;\(a\)&lt;/span&gt;在模&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;意义下的一个乘法逆元。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;欧拉函数可以用试除法分解质因数求，那么这就是求解逆元的第二种方法，可以求解单独一个数的逆元，时间复杂度&lt;span class=&quot;math inline&quot;&gt;\(O(\sqrt p+log_2p)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;math inline&quot;&gt;\(Code:\)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;span&gt;&lt;code&gt;inline long long power(long long a,long long b,long long p)
{
    long long res=1;
    while (b)
    {
        if (1&amp;amp;b)res=res*a%p;
        a=a*a%p;
        b&amp;gt;&amp;gt;=1;
    }
    return res;
}
inline long long phi(long long x)
{
    long long ans=x;
    for (long long i=2;i*i&amp;lt;=x;i++)
    {
        if (x%i==0)
        {
            ans=ans/i*(i-1);
            while (x%i==0)x/=i;
        }
    }
    if (x&amp;gt;1)ans=ans/x*(x-1);
    return ans;
}
inline long long Eular(long long a,long long p)
{
    return power(a,phi(p)-1,p);
}&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;线性同余方程&quot;&gt;&lt;span&gt;线性同余方程&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;我们已经知道了只有&lt;span class=&quot;math inline&quot;&gt;\(a,p\)&lt;/span&gt;互质时逆元&lt;span class=&quot;math inline&quot;&gt;\(a^{-1}\)&lt;/span&gt;的求法，但是试除法求解欧拉函数未免有点慢。考虑到我们已经得到了逆元的表达方式，其实我们可以直接通过解线性同余方程的方法入手，求解逆元。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;已知逆元&lt;span class=&quot;math inline&quot;&gt;\(a^{-1}(mod\ p)\)&lt;/span&gt;满足&lt;span class=&quot;math inline&quot;&gt;\(a*a^{-1}\equiv 1(mod\ p)\)&lt;/span&gt;，令&lt;span class=&quot;math inline&quot;&gt;\(x=a^{-1}\)&lt;/span&gt;，则&lt;span class=&quot;math inline&quot;&gt;\(ax\equiv 1(mod\ p)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是一个简单的线性同余方程，设&lt;span class=&quot;math inline&quot;&gt;\(-py=ax-1\)&lt;/span&gt;，则可以将方程改写为&lt;span class=&quot;math inline&quot;&gt;\(ax+py=1\)&lt;/span&gt;，利用扩展欧几里得算法找到解。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这就是求解逆元的第三种方法，以求解单独一个数的逆元，时间复杂度&lt;span class=&quot;math inline&quot;&gt;\(O(log_2a+log_2p)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;math inline&quot;&gt;\(Code:\)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;span&gt;&lt;code&gt;inline long long Exeuclid(long long a,long long &amp;amp;x,long long b,long long &amp;amp;y,long long c)
{
    if (!b){x=c/a,y=0;return a;}
    else
    {
        long long p=Exeuclid(b,x,a%b,y,c);
        long long x_=x,y_=y;
        x=y_,y=x_-a/b*y_;
        return p;
    }
}
inline long long Euclid(long long a,long long p)
{
    long long x_,y_;
    Exeuclid(a,x_,p,y_,1);
    return (x_+p)%p;
}&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;逆元递推&quot;&gt;&lt;span&gt;逆元递推&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;如果求的是单独一个数的逆元的话，那么以上的算法基本上可以完美解决了。现在，如果需要快速的求解&lt;span class=&quot;math inline&quot;&gt;\(1-n\)&lt;/span&gt;每一个数模&lt;span class=&quot;math inline&quot;&gt;\(p\)&lt;/span&gt;意义下的逆元，我们就需要要到逆元递推了。&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;引理：&lt;span class=&quot;math inline&quot;&gt;\(x^{-1}=(p-\frac{p}{x})*(p\ mod\ x)^{-1}\ mod\ p\)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;证明：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;设&lt;span class=&quot;math inline&quot;&gt;\(t=\lfloor \frac{p}{x} \rfloor\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(k=p\ mod\ x\)&lt;/span&gt;，即&lt;span class=&quot;math inline&quot;&gt;\(p=tx+k\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么显然有&lt;span class=&quot;math inline&quot;&gt;\(tx+k\equiv 0(mod\ p)\)&lt;/span&gt;，则&lt;span class=&quot;math inline&quot;&gt;\(-tx\equiv k(mod\ p)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将上式两边同时除以&lt;span class=&quot;math inline&quot;&gt;\(x*k\)&lt;/span&gt;，则&lt;span class=&quot;math inline&quot;&gt;\(-t*k^{-1}\equiv x^{-1}(mod\ p)\)&lt;/span&gt;，进而得到&lt;span class=&quot;math inline&quot;&gt;\(x^{-1}=(p-\frac{p}{x})*(p\ mod\ x)^{-1}\ mod\ p\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;已知&lt;span class=&quot;math inline&quot;&gt;\(1^{-1}=1\)&lt;/span&gt;，那么剩下的递推就行了，可以求解&lt;span class=&quot;math inline&quot;&gt;\(1-n\)&lt;/span&gt;所有数的逆元，时间复杂度&lt;span class=&quot;math inline&quot;&gt;\(O(n)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;math inline&quot;&gt;\(Code:\)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;span&gt;&lt;code&gt;inline long long recursion(int n)
{
    inv[1]=1;
    for (int i=2;i&amp;lt;=n;i++)
        inv[i]=(p-p/i)*inv[p%i]%p;
}&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;逆元递归&quot;&gt;&lt;span&gt;逆元递归&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;当然，利用上述引理，我们也可以直接递归来求解单独一个数的逆元，时间复杂度为&lt;span class=&quot;math inline&quot;&gt;\(O(log_2a)\)&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;math inline&quot;&gt;\(Code:\)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;span&gt;&lt;code&gt;inline long long inv(long long x,long long p)
{
    if (x==1)return 1;
    else return (p-p/x)*inv(p%x)%p;
}&lt;/code&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;至此，本文已经介绍了&lt;span class=&quot;math inline&quot;&gt;\(5\)&lt;/span&gt;种求乘法逆元的方案，其中每一种方法都有各自的优缺点，希望读者能够灵活运用，选择合适的方法来求解逆元。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&amp;lt;后记&amp;gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 12:34:00 +0000</pubDate>
<dc:creator>Parsnip</dc:creator>
<og:description>乘法逆元 我们知道，由于同余的运算只定义在整数集中，而整数集不满足除法封闭，所以同余是不满足同除性的。但是，如果有涉及取模操作的计数类题目当中需要除法运算怎么办，这就需要乘法逆元了。 定义 若整数$b</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Parsnip/p/10698402.html</dc:identifier>
</item>
<item>
<title>sqlserver  索引优化 CPU占用过高 执行分析 服务器检查 - black2bi</title>
<link>http://www.cnblogs.com/qiaqia-liu/p/10687619.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qiaqia-liu/p/10687619.html</guid>
<description>&lt;p&gt;1. 管理公司一台服务器,上面放的东西挺多的.有一天有个哥们告诉我现在程序卡的厉害.我给他说,是时候读点优化的书了.别一天到晚没个正形,现在写的程序卡的跑不动.他说我本地&lt;/p&gt;
&lt;p&gt;是好好的,跑的很快.我说别扯那么多没用的,服务器不比你的本子强得多.待洒家上去看看.不看不知道一看吓一跳,CPU占用在95上下.开个程序是不卡,可整点有些时间是卡的一匹.这就令人很难受了.&lt;/p&gt;
&lt;p&gt;本来服务器上也没有什么,就一个网站和几个数据库.那一个个分析吧,打开任务管理器和资源监视器,CPU占用达到93,这个还是普通,有时间到98 99.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/411120/201904/411120-20190412195458111-1242701859.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2. 这不要了亲命了吗,打开资源监视器看看什么占用的最多吧.一看果然是数据库占用最多,数据服务占用过大&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/411120/201904/411120-20190412195642634-1311962948.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个为了重现占用过高,我把自己建的索引都删除掉后,sqlservr.exe立马成为,人群中最靓的仔.占用独占大头.看来只有试出来绝招了.作为面向浏览器编程的程序员,首先搜索一下.网上还真有建设性意见.都说是索引缺失&lt;/p&gt;
&lt;p&gt;还贴心的给了一段查询索引的语句.把查出的结果做非聚集索引,就可以了.贴上代码.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SELECT&lt;/span&gt;  &lt;span&gt;TOP&lt;/span&gt; &lt;span&gt;10&lt;/span&gt; 
        &lt;span&gt;[&lt;/span&gt;&lt;span&gt;Total Cost&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;  &lt;span&gt;=&lt;/span&gt; &lt;span&gt;ROUND&lt;/span&gt;(avg_total_user_cost &lt;span&gt;*&lt;/span&gt; avg_user_impact &lt;span&gt;*&lt;/span&gt; (user_seeks &lt;span&gt;+&lt;/span&gt; user_scans),&lt;span&gt;0&lt;/span&gt;&lt;span&gt;) 
        , avg_user_impact
        , TableName &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; statement
        , &lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;EqualityUsage&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;&lt;span&gt; equality_columns 
        , &lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;InequalityUsage&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;&lt;span&gt; inequality_columns
        , &lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;Include Cloumns&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;&lt;span&gt; included_columns
&lt;/span&gt;&lt;span&gt;FROM&lt;/span&gt;&lt;span&gt;        sys.dm_db_missing_index_groups g 
&lt;/span&gt;&lt;span&gt;INNER&lt;/span&gt; &lt;span&gt;JOIN&lt;/span&gt;&lt;span&gt;    sys.dm_db_missing_index_group_stats s 
       &lt;/span&gt;&lt;span&gt;ON&lt;/span&gt; s.group_handle &lt;span&gt;=&lt;/span&gt;&lt;span&gt; g.index_group_handle 
&lt;/span&gt;&lt;span&gt;INNER&lt;/span&gt; &lt;span&gt;JOIN&lt;/span&gt;&lt;span&gt;    sys.dm_db_missing_index_details d 
       &lt;/span&gt;&lt;span&gt;ON&lt;/span&gt; d.index_handle &lt;span&gt;=&lt;/span&gt;&lt;span&gt; g.index_handle
&lt;/span&gt;&lt;span&gt;ORDER&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;Total Cost&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;DESC&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;微软名字起的也很直白,直接叫missing_index,就是sqlserver 经过分析认为这些字段处理和查询是最耗时的,最好在 EqualityUsage上包含的字段上加个非聚集索引.前几个用时是后几名的好几个数量级.&lt;/p&gt;
&lt;p&gt;加了索引立马飞起.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/411120/201904/411120-20190412200626355-452428811.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在优化过,耗时都在一个数量级.如果没有优化是不同的几个数量级.&lt;/p&gt;

</description>
<pubDate>Fri, 12 Apr 2019 12:08:00 +0000</pubDate>
<dc:creator>black2bi</dc:creator>
<og:description>1. 管理公司一台服务器,上面放的东西挺多的.有一天有个哥们告诉我现在程序卡的厉害.我给他说,是时候读点优化的书了.别一天到晚没个正形,现在写的程序卡的跑不动.他说我本地 是好好的,跑的很快.我说别扯</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qiaqia-liu/p/10687619.html</dc:identifier>
</item>
<item>
<title>结合JDK源码看设计模式——策略模式 - 方块人</title>
<link>http://www.cnblogs.com/Cubemen/p/10698268.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Cubemen/p/10698268.html</guid>
<description>

&lt;p&gt; 现在电商已经成为我们生活中不可或缺的购物渠道，同时各大商家会针对不同的时间做出不同的折扣，这在我们看来就是一种营销手段，也是一种策略，今天我们就来讲讲JDK中的策略模式是怎么样的。&lt;/p&gt;

&lt;p&gt;　　定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化不会影响到使用算法的用户。可以用来消除大量的if...else结构。&lt;/p&gt;

&lt;h4&gt;　1、系统有很多类，它们的区别仅在于它们的行为不同&lt;/h4&gt;
&lt;h4&gt;　2、一个系统需要动态的在几种算法中选择一种&lt;/h4&gt;
&lt;p&gt;　　在这里稍微理解一下，策略模式其实和工厂模式很像，不过工厂模式是创建型的，是接收到指令来去创建相应的工厂，而策略模式是传入一个创建好的策略来实现具体行为。重点理解行为和算法。其实只不过是我们根据不同业务场景做出的不同反应，拿淘宝来说，双十一的促销活动力度最大，可能打到5折，而女王节一般只打到7折。针对这两种不同的对象，就有两种不同的行为或者不同的算法，在客户端调用时，可以直接传入对应的策略就能做出相应的行为。下面我们来具体看一下策略模式在JDK中的应用&lt;/p&gt;

&lt;p&gt;　　我们先来认清，策略模式中到底需要什么角色：&lt;/p&gt;
&lt;h4&gt;　　　　1、抽象策略角色&lt;/h4&gt;
&lt;p&gt;　　　　　　负责定义通常由一个接口或抽象类实现。此角色给出所有的具体策略类所需的接口。&lt;/p&gt;
&lt;h4&gt;　　　　2、策略实现类&lt;/h4&gt;
&lt;p&gt;　　　　　　不同的类实现具体不同的算法。&lt;/p&gt;
&lt;h4&gt;　　　　3、环境角色类&lt;/h4&gt;
&lt;p&gt;　　　　　　里面持有抽象策略角色的引用，然后客户端可以由具体的方法传不同参数或实现类进去得到不同算法。&lt;/p&gt;
&lt;p&gt;　　我们现在直接看Arrays这个类&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Arrays{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;void&lt;/span&gt; sort(T[] a, Comparator&amp;lt;? &lt;span&gt;super&lt;/span&gt; T&amp;gt;&lt;span&gt; c) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (c == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            sort(a);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (LegacyMergeSort.userRequested)
                legacyMergeSort(a, c);
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                TimSort.sort(a, &lt;/span&gt;0, a.length, c, &lt;span&gt;null&lt;/span&gt;, 0, 0&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　Arrays就是一个环境角色类，这个sort方法你可以传一个新策略让Arrays根据这个方法来进行排序。就比如下面的测试类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Test1 {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        Integer []data &lt;/span&gt;={12,2,3,2,4,5,1&lt;span&gt;};
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实现降序排序，返回-1放左边，1放右边，0保持不变&lt;/span&gt;
        Arrays.sort(data, (str1, str2) -&amp;gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (str1.compareTo(str2) &amp;gt; 0&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; -1&lt;span&gt;;
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; 1&lt;span&gt;;
            }
        });
        System.out.println(Arrays.toString(data)); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;[12, 5, 4, 3, 2, 2, 1]&lt;/span&gt;
&lt;span&gt;    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这里是直接用lambda表达式进行重写Comparator接口中的compare方法，可以认为这里的lambda表达式就是具体的算法，可见Comparator充当的就是抽象策略角色。我上面说过，环境角色类应该持有抽象策略的引用来调用，Arrays类中的sort方法是直接传Comparator接口，如果是有自己的compare方法那么就会进入到下面这个方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt; TimSort&amp;lt;T&amp;gt;&lt;span&gt; {
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;void&lt;/span&gt; sort(T[] a, &lt;span&gt;int&lt;/span&gt; lo, &lt;span&gt;int&lt;/span&gt; hi, Comparator&amp;lt;? &lt;span&gt;super&lt;/span&gt; T&amp;gt;&lt;span&gt; c,
                         T[] work, &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; workBase, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; workLen) {
        &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; c != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; a != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; lo &amp;gt;= 0 &amp;amp;&amp;amp; lo &amp;lt;= hi &amp;amp;&amp;amp; hi &amp;lt;=&lt;span&gt; a.length;

        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; nRemaining  = hi -&lt;span&gt; lo;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (nRemaining &amp;lt; 2&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Arrays of size 0 and 1 are always sorted

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; If array is small, do a &quot;mini-TimSort&quot; with no merges&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (nRemaining &amp;lt;&lt;span&gt; MIN_MERGE) {
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; initRunLen =&lt;span&gt; countRunAndMakeAscending(a, lo, hi, c);
            binarySort(a, lo, hi, lo &lt;/span&gt;+&lt;span&gt; initRunLen, c);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;int&lt;/span&gt; countRunAndMakeAscending(T[] a, &lt;span&gt;int&lt;/span&gt; lo, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; hi,
                                                    Comparator&lt;/span&gt;&amp;lt;? &lt;span&gt;super&lt;/span&gt; T&amp;gt;&lt;span&gt; c) {
        &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; lo &amp;lt;&lt;span&gt; hi;
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; runHi = lo + 1&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (runHi ==&lt;span&gt; hi)
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; 1&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Find end of run, and reverse range if descending&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (c.compare(a[runHi++], a[lo]) &amp;lt; 0) { &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Descending&lt;/span&gt;
            &lt;span&gt;while&lt;/span&gt; (runHi &amp;lt; hi &amp;amp;&amp;amp; c.compare(a[runHi], a[runHi - 1]) &amp;lt; 0&lt;span&gt;)
                runHi&lt;/span&gt;++&lt;span&gt;;
            reverseRange(a, lo, runHi);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; {                              &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Ascending&lt;/span&gt;
            &lt;span&gt;while&lt;/span&gt; (runHi &amp;lt; hi &amp;amp;&amp;amp; c.compare(a[runHi], a[runHi - 1]) &amp;gt;= 0&lt;span&gt;)
                runHi&lt;/span&gt;++&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; runHi -&lt;span&gt; lo;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这里多说一下，上面的代码中最终会跑到countRunAndMakeAscending这个方法中。我们可以看见，只用了compare方法，所以在调用Arrays.sort方法只传具体compare重写方法的类就行，这也是Comparator接口中必须要子类实现的一个方法。&lt;/p&gt;

&lt;p&gt;　　其实学了这么多模式，你会发现这些模式的大体很相似，但是细究起来又不相似。策略模式是很容易和工厂模式弄混淆的。策略模式的核心就是不同的行为对应不同的算法，而工厂更多的是生产不同的产品，给产品规定好的参数和返回类型。&lt;/p&gt;
</description>
<pubDate>Fri, 12 Apr 2019 12:08:00 +0000</pubDate>
<dc:creator>方块人</dc:creator>
<og:description>前言： 现在电商已经成为我们生活中不可或缺的购物渠道，同时各大商家会针对不同的时间做出不同的折扣，这在我们看来就是一种营销手段，也是一种策略，今天我们就来讲讲JDK中的策略模式是怎么样的。 一、定义</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Cubemen/p/10698268.html</dc:identifier>
</item>
</channel>
</rss>