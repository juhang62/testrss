<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>5分钟带你读懂事务隔离性与隔离级别 - Coder编程</title>
<link>http://www.cnblogs.com/coder-programming/p/10693473.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/coder-programming/p/10693473.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;我们在上一章节中介绍过数据库的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwMTg3NzYyOA==&amp;amp;mid=2247483722&amp;amp;idx=1&amp;amp;sn=e8bc8bd82c559e0cfe7f35cf46100af3&amp;amp;chksm=96e67059a191f94fe8948e5b5e4ef177b77fa7707d86d945b153f67e7f2e76b83ed0c768ef27&amp;amp;token=1701970188&amp;amp;lang=zh_CN#rd&quot;&gt;带你了解数据库中事务的ACID特性&lt;/a&gt;的相关用法。本章节主要来介绍下数据库中一个非常重要的知识点&lt;code&gt;事务的隔离级别&lt;/code&gt;。如有错误还请大家及时指出~&lt;/p&gt;
&lt;p&gt;问题：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;事务的隔离级别有哪些？&lt;/li&gt;
&lt;li&gt;如果并发事务没有进行隔离，会出现什么问题？&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;以下都是采用mysql数据库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在多个事务并发做数据库操作的时候，如果没有有效的避免机制，就会出现种种问题。大体上有以下问题：&lt;/p&gt;
&lt;h2 id=&quot;一引发的问题&quot;&gt;一、引发的问题&lt;/h2&gt;
&lt;p&gt;在并发事务没有进行隔离的情况下，会发生如下问题。&lt;/p&gt;
&lt;h3 id=&quot;问题一脏读&quot;&gt;问题一：脏读&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;脏读&lt;/code&gt;指一个事务读取了另外一个事务未提交的数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;具体看后文案例介绍&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题二不可重复读&quot;&gt;问题二：不可重复读&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;不可重复读&lt;/code&gt;指在一个事务内读取表中的某一行数据，多次读取结果不同。&lt;br/&gt;不可重复读和脏读的区别是，脏读是读取前一事务未提交的脏数据，不可重复读是重新读取了前一事务已提交的数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;具体看后文案例介绍&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题三幻读虚读&quot;&gt;问题三：幻读(虚读)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;幻读(虚读)&lt;/code&gt;指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;具体看后文案例介绍&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;二概念&quot;&gt;二、概念&lt;/h2&gt;
&lt;h3 id=&quot;事务的隔离级别分为&quot;&gt;2.1 事务的隔离级别分为：&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Read uncommitted(读未提交)&lt;/li&gt;
&lt;li&gt;Read Committed(读已提交)&lt;/li&gt;
&lt;li&gt;Repeatable Reads(可重复读)&lt;/li&gt;
&lt;li&gt;Serializable(串行化)&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;read-uncommitted&quot;&gt;Read uncommitted&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;读未提交&lt;/code&gt;：隔离级别最低的一种事务级别。在这种隔离级别下，会引发脏读、不可重复读和幻读。&lt;/p&gt;
&lt;h4 id=&quot;read-committed&quot;&gt;Read Committed&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;读已提交&lt;/code&gt;读到的都是别人提交后的值。这种隔离级别下，会引发不可重复读和幻读，但避免了脏读。&lt;/p&gt;
&lt;h4 id=&quot;repeatable-reads&quot;&gt;Repeatable Reads&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;可重复读&lt;/code&gt;这种隔离级别下，会引发幻读，但避免了脏读、不可重复读。&lt;/p&gt;
&lt;h4 id=&quot;serializable&quot;&gt;Serializable&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;串行化&lt;/code&gt;是最严格的隔离级别。在Serializable隔离级别下，所有事务按照次序依次执行。脏读、不可重复读、幻读都不会出现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190411212953426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2hhZWxfSE0=,size_16,color_FFFFFF,t_70&quot; alt=&quot;隔离级别&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;三操作&quot;&gt;三、操作&lt;/h2&gt;
&lt;h3 id=&quot;查看事务隔离级别&quot;&gt;3.1 查看事务隔离级别&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SHOW VARIABLES LIKE 'tx_isolation';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看全局的事务隔离级别&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHOW GLOBAL VARIABLES LIKE 'tx_isolation';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用系统变量查询&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT @@global.tx_isolation;&lt;/code&gt;&lt;br/&gt;&lt;code&gt;SELECT @@session.tx_isolation;&lt;/code&gt;&lt;br/&gt;&lt;code&gt;SELECT @@tx_isolation;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;设置mysql的事务隔离级别&quot;&gt;3.2 设置MysQL的事务隔离级别&lt;/h3&gt;
&lt;h4 id=&quot;语法&quot;&gt;语法&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;SET [GLOBAL | SESSION] TRANSACTION ISOLATION LEVEL
  {
       REPEATABLE READ
     | READ COMMITTED
     | READ UNCOMMITTED
     | SERIALIZABLE
   }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;GLOBAL&lt;/code&gt;：设置全局的事务隔离级别&lt;br/&gt;&lt;code&gt;SESSION&lt;/code&gt;：设置当前session的事务隔离级别，如果语句没有指定GLOBAL或SESSION，默认值为SESSION&lt;/p&gt;
&lt;h4 id=&quot;使用系统变量设置事务隔离级别&quot;&gt;使用系统变量设置事务隔离级别&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SET GLOBAL tx_isolation='REPEATABLE-READ';&lt;/code&gt;&lt;br/&gt;&lt;code&gt;SET SESSION tx_isolation='SERIALIZABLE';&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;四案例分析&quot;&gt;四、案例分析&lt;/h2&gt;
&lt;p&gt;下面实际操作中使用到的一些并发控制语句，可看上面的&lt;strong&gt;操作&lt;/strong&gt;介绍&lt;/p&gt;
&lt;p&gt;作为演示：product表&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;xiaomi&lt;/td&gt;
&lt;td&gt;1999&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;带着上面的我们来看一下，事务在没有隔离性的情况下，会引发哪些问题？&lt;/p&gt;
&lt;p&gt;同时打开两个窗口模拟2个用户并发访问数据库&lt;/p&gt;
&lt;h3 id=&quot;事务隔离级别设置为read-uncommitted&quot;&gt;4.1 事务隔离级别设置为read uncommitted&lt;/h3&gt;
&lt;p&gt;查询事务隔离级别&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT @@tx_isolation;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;设置隔离级别为&lt;strong&gt;未提交读&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注意：需要同时修改两个窗口的事务隔离级别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下我们以两位用户抢小米手机为例&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;7&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T1&lt;/td&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T2&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T3&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T4&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;T5&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;update product set productCount = 99 where productId = 1;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T6&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =99)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T7&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;ROLLBACK;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T8&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr/&gt;&lt;p&gt;T1—— A用户开启事务，start transaction；&lt;br/&gt;T2—— A用户查询当前小米手机剩余数量，select p.productName,p.productCount from product p where p.productId=1;此时数量显示为100。&lt;br/&gt;T3——B用户开启事务，start transaction；&lt;br/&gt;T4——B用户查询当前小米手机剩余数量，select p.productName,p.productCount from product p where p.productId=1;此时数量显示为100。&lt;br/&gt;T5—— B用户购买了一台小米手机，update product set productCount = 99 where productId = 1; 此时只修改数据并未提交事务。&lt;br/&gt;T6—— A用户刷新页面，select p.productName,p.productCount from product p where p.productId=1;此时数量显示为99。&lt;br/&gt;T7—— B用户购买失败，回滚事务。&lt;br/&gt;T8—— A用户查询当前小米手机剩余数量，select p.productName,p.productCount from product p where p.productId=1;此时数量显示为100。&lt;/p&gt;
&lt;hr/&gt;&lt;h4 id=&quot;小结&quot;&gt;小结：&lt;/h4&gt;
&lt;p&gt;事务A读取了未提交的数据，事务B的回滚，导致了事务A的数据不一致，导致了事务A的&lt;code&gt;脏读&lt;/code&gt; ！&lt;/p&gt;
&lt;h3 id=&quot;事务隔离级别设置为read-committed&quot;&gt;4.2 事务隔离级别设置为Read Committed&lt;/h3&gt;
&lt;p&gt;查询事务隔离级别&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT @@tx_isolation;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;更改数据库隔离级别，设置隔离级别为&lt;strong&gt;提交读&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SET SESSION  TRANSACTION ISOLATION LEVEL READ COMMITTED;&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注意：需要同时修改两个窗口的事务隔离级别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;7&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T1&lt;/td&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T2&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T3&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T4&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;T5&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;update product set productCount = 99 where productId = 1;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T7&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T6&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;commit;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T8&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =99)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr/&gt;&lt;p&gt;这里就不再对流程做过多赘述。&lt;/p&gt;
&lt;h5 id=&quot;小结-1&quot;&gt;小结：&lt;/h5&gt;
&lt;p&gt;可以看到避免了&lt;code&gt;脏读&lt;/code&gt;现象，但是却出现了，一个事务还没有结束，就发生了不可重复读问题，即事务A来说 productCount从 100-&amp;gt;100-&amp;gt;99。但这个过程中事务并未提交结束。&lt;/p&gt;
&lt;h3 id=&quot;事务隔离级别设置为repeatable-readmysql默认级别&quot;&gt;4.3 事务隔离级别设置为Repeatable Read（mysql默认级别）&lt;/h3&gt;
&lt;p&gt;查询事务隔离级别&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT @@tx_isolation;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;更改数据库隔离级别，设置隔离级别为&lt;strong&gt;可重复读&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SET SESSION  TRANSACTION ISOLATION LEVEL REPEATABLE READ;&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注意：需要同时修改两个窗口的事务隔离级别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;7&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T1&lt;/td&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T2&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T3&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T4&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;T5&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;update product set productCount = 99 where productId = 1;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T7&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T6&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;commit;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T8&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100)&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr/&gt;&lt;p&gt;这里就不再对流程做过多赘述。&lt;/p&gt;
&lt;h5 id=&quot;小结-2&quot;&gt;小结：&lt;/h5&gt;
&lt;p&gt;可以看到&lt;code&gt;可重复读&lt;/code&gt;隔离级别避免了&lt;code&gt;脏读&lt;/code&gt;，&lt;code&gt;不可重复读&lt;/code&gt;的问题，但是出现了&lt;code&gt;幻读&lt;/code&gt;现象。事务A查询到的小米数量等于100，但是事务B修改了数量为99，但是事务A读取到的值还是100。当事务A去减1等于99时，是错误的，此时应该是99-1=98才对。接下来我们再提高一个事务隔离级别。&lt;/p&gt;
&lt;h3 id=&quot;事务隔离级别设置为serializable&quot;&gt;4.4 事务隔离级别设置为Serializable&lt;/h3&gt;
&lt;p&gt;查询事务隔离级别&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT @@tx_isolation;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;更改数据库隔离级别，设置隔离级别为&lt;strong&gt;串行化&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SET SESSION  TRANSACTION ISOLATION LEVEL REPEATABLE READ;&lt;/code&gt;
&lt;/pre&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;---&lt;/td&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;T1&lt;/td&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;T2&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;start transaction；&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;T2&lt;/td&gt;
&lt;td&gt;select p.productName,p.productCount from product p where p.productId=1;(productCount =100);&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;T4&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;update product set productCount = 99 where productId = 1;（等待中..）&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr/&gt;&lt;p&gt;这里就不再对流程做过多赘述。&lt;/p&gt;
&lt;h5 id=&quot;小结-3&quot;&gt;小结：&lt;/h5&gt;
&lt;p&gt;在我们Serializable隔离级别中，我们可以看到事务B去做修改动作时卡主了，不能向下执行。这是因为：给事务A的select操作上了锁，所以事务B去修改值的话，就会被卡主。只有当事务A操作执行完毕，才会执行事务B的操作。这样就避免了上述三个问题了。&lt;/p&gt;
&lt;h2 id=&quot;问题本身&quot;&gt;问题本身&lt;/h2&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;回到问题的本身，其实我们并不需要将事务提到这么高。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;问题的本身就是，当我们读完了的时候，就要在上面加锁。我们不希望别人能够去读它。因为别人读到了count,就会修改count的值，并写进去。所以我们在select 操作的时候，加上for update。这时候就会把这行操作给锁掉了。那么另外一个人也进行相同的操作，也表示select 出来的count需要进行update，需要锁住。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;select p.productName,p.productCount from product p where p.productId=1 for update;&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;PS: 在实际开发过程中，这样的加锁行为，是非常的耗系统性能的。下一章节我们将来介绍&lt;code&gt;悲观锁与乐观锁&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;文末&quot;&gt;文末&lt;/h2&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;本章节主要介绍了数据库中事务的ADID特性中的&lt;code&gt;隔离性&lt;/code&gt;，在没有隔离的情况下会发生什么问题，相信大家通过本章，对数据库事务中的&lt;code&gt;隔离性&lt;/code&gt;有了一定的了解，下篇文章我们将介绍数据库中的&lt;code&gt;悲观锁与乐观锁&lt;/code&gt;。&lt;br/&gt;欢迎关注公众号：&lt;strong&gt;Coder编程&lt;/strong&gt;&lt;br/&gt;获取最新原创技术文章和相关免费学习资料，随时随地学习技术知识！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190411234814936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2hhZWxfSE0=,size_16,color_FFFFFF,t_70&quot; alt=&quot;微信公众号&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;推荐阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwMTg3NzYyOA==&amp;amp;mid=2247483713&amp;amp;idx=1&amp;amp;sn=d61ad0aed42dc36d64d17732db352288&amp;amp;chksm=96e67052a191f9445bbe3d5825ce547ad3171c3874b571a93b97977d0668413e37a164c3e0bc&amp;amp;token=1144933717&amp;amp;lang=zh_CN#rd&quot;&gt;带你了解数据库中JOIN的用法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwMTg3NzYyOA==&amp;amp;mid=2247483717&amp;amp;idx=1&amp;amp;sn=157a8a021c29043a10480d0294b39ca0&amp;amp;chksm=96e67056a191f940668812ebb092fe9984b22eb619a18339cc052e1051c659a7e9d907c48814&amp;amp;token=1144933717&amp;amp;lang=zh_CN#rd&quot;&gt;带你了解数据库中group by的用法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwMTg3NzYyOA==&amp;amp;mid=2247483722&amp;amp;idx=1&amp;amp;sn=e8bc8bd82c559e0cfe7f35cf46100af3&amp;amp;chksm=96e67059a191f94fe8948e5b5e4ef177b77fa7707d86d945b153f67e7f2e76b83ed0c768ef27&amp;amp;token=1701970188&amp;amp;lang=zh_CN#rd&quot;&gt;带你了解数据库中事务的ACID特性&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/CoderMerlin/coder-programming&quot;&gt;Github个人主页目录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gitee.com/573059382/coder-programming&quot;&gt;Gitee个人主页目录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;欢迎大家关注并Star~&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 11 Apr 2019 15:53:00 +0000</pubDate>
<dc:creator>Coder编程</dc:creator>
<og:description>前言 我们在上一章节中介绍过数据库的 '带你了解数据库中事务的ACID特性 ' 的相关用法。本章节主要来介绍下数据库中一个非常重要的知识点 。如有错误还请大家及时指出~ 问题： 事务的隔离级别有哪些？</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/coder-programming/p/10693473.html</dc:identifier>
</item>
<item>
<title>WebRTC 泄漏真实 IP 地址 - 陈旭华</title>
<link>http://www.cnblogs.com/chenxuhua/p/webrtc-leak-real-ip.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenxuhua/p/webrtc-leak-real-ip.html</guid>
<description>&lt;p&gt;WebRTC（网页即时通信，Web Real-Time Communication） 它允许浏览器内进行实时语音或视频对话，而无需添加额外的浏览器扩展。包括 Chrome、Firefox、Opera、Safari 均支持，并且在移动端也有支持。虽然此功能可能对某些用户有用，但它会对任何使用 VPN 的人构成威胁。&lt;strong&gt;WebRTC 漏洞的可怕之处在于，即使你用 VPN 代理上网仍然会暴露自己的真实 IP 地址。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;webrtc-漏洞原理&quot;&gt;WebRTC 漏洞原理&lt;/h2&gt;
&lt;p&gt;WebRTC 这个漏洞是在 2015 年初被发现的。通过该漏洞，网站管理员可以轻易地通过 WebRTC 看到用户的真实 IP 地址，即使用户使用 VPN 隐藏自己的 IP。 该漏洞影响支持 WebRTC 的浏览器，包括 Chrome 和 Firefox 浏览器。&lt;/p&gt;
&lt;p&gt;WebRTC 采用 STUN（Session Traversal Utilities for NAT）、TURN 和 ICE 等协议栈对 VoIP 网络中的防火墙或者 NAT 进行穿透。用户发送请求至服务器，STUN 服务器会返回用户所用系统的 IP 地址和局域网地址。&lt;/p&gt;
&lt;p&gt;返回的请求可以通过 JavaScript 获取，但由于这个过程是在正常的 XML/HTTP 请求过程之外进行的，所以在开发者控制台看不到。这意味着，这个漏洞的唯一要求就是浏览器要支持 WebRTC 和 JavaScript。&lt;/p&gt;
&lt;h2 id=&quot;检查你的浏览器是否暴露了-ip&quot;&gt;检查你的浏览器是否暴露了 IP&lt;/h2&gt;
&lt;p&gt;① 连接 VPN 代理&lt;/p&gt;
&lt;p&gt;② 访问 &lt;a href=&quot;https://ip.voidsec.com/&quot; class=&quot;uri&quot;&gt;https://ip.voidsec.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/790395/201904/790395-20190411233950590-8703927.png&quot; alt=&quot;voidsec&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果在 WebRTC 的部分看到了公网 IP 地址，则说明你已经暴露了身份信息。&lt;/p&gt;
&lt;h2 id=&quot;webrtc-漏洞防范措施&quot;&gt;WebRTC 漏洞防范措施&lt;/h2&gt;
&lt;p&gt;对于用户来说，如果不想自己的真实IP地址泄漏，可以通过禁用 WebRTC 来防止真实 IP 地址泄漏。&lt;/p&gt;
&lt;h3 id=&quot;chrome-安装扩展禁用&quot;&gt;Chrome 安装扩展禁用&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;安装「&lt;strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/eiadekoaikejlgdbkbdfeijglgfdalml&quot;&gt;WebRTC Leak Prevent&lt;/a&gt;&lt;/strong&gt;」扩展&lt;/li&gt;
&lt;li&gt;将「IP handling policy」选项设置为「Disable non-proxied UDP (force proxy)」&lt;/li&gt;
&lt;li&gt;点击「Apply Settings」以应用&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;firefox-修改配置禁用&quot;&gt;Firefox 修改配置禁用&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;在浏览器地址栏输入「&lt;a href=&quot;about:config」回车&quot; class=&quot;uri&quot;&gt;about:config」回车&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;搜索「media.peerconnection.enabled」字段&lt;/li&gt;
&lt;li&gt;双击「media.peerconnection.enabled」首选项，使其值变为「false」&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;更多隐私检测&quot;&gt;更多隐私检测&lt;/h2&gt;
</description>
<pubDate>Thu, 11 Apr 2019 15:44:00 +0000</pubDate>
<dc:creator>陈旭华</dc:creator>
<og:description>WebRTC（网页即时通信，Web Real Time Communication） 它允许浏览器内进行实时语音或视频对话，而无需添加额外的浏览器扩展。包括 Chrome、Firefox、Opera、</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenxuhua/p/webrtc-leak-real-ip.html</dc:identifier>
</item>
<item>
<title>【JVM虚拟机】(7)---深入理解Class中-属性集合 - 雨点的名字</title>
<link>http://www.cnblogs.com/qdhxhz/p/10693324.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qdhxhz/p/10693324.html</guid>
<description>&lt;center&gt;

&lt;/center&gt;
&lt;p&gt;之前有关class文件已经写了两篇博客：&lt;/p&gt;
&lt;p&gt;1、&lt;a href=&quot;https://www.cnblogs.com/qdhxhz/p/10646088.html&quot;&gt;【JVM虚拟机】(5)---深入理解JVM-Class中常量池&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href=&quot;https://www.cnblogs.com/qdhxhz/p/10676337.html&quot;&gt;【JVM虚拟机】(6)---深入理解Class中访问标志、类索引、父类索引、接口索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那么这篇博客主要讲有关 &lt;strong&gt;字段表集合&lt;/strong&gt; 相关的理解和代码示例。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;字段表&lt;/code&gt;：用于&lt;strong&gt;描述接口或者类中声明的变量&lt;/strong&gt;,字段包括&lt;code&gt;类级(static修饰)变量&lt;/code&gt;以及&lt;code&gt;实例级变量&lt;/code&gt;，但是不包括局部变量(方法内部变量）。&lt;/p&gt;
&lt;h2 id=&quot;一概念&quot;&gt;&lt;span&gt;一、概念&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;字段表集合：包括了&lt;code&gt;字段计数器&lt;/code&gt;和&lt;code&gt;字段数据区&lt;/code&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201904/1090617-20190411231402817-449455269.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Field_info: 依次包含&lt;code&gt;访问标志&lt;/code&gt;（access_flags）、&lt;code&gt;名称索引&lt;/code&gt;（name_index）、&lt;code&gt;描述符索引&lt;/code&gt;（descriptor_index）、&lt;code&gt;属性表集合&lt;/code&gt;（attributes）几项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201904/1090617-20190411231413546-2127494420.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;字段修饰符&lt;/code&gt;放在access_flags项目中，它与类中的access_flags项目是非常相似的，都是一个u2的数据类型．&lt;/p&gt;
&lt;p&gt;(&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201904/1090617-20190411231458127-370081870.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;跟随access_flags标志的是两项索引值：&lt;code&gt;name_index&lt;/code&gt;和&lt;code&gt;descriptor_index&lt;/code&gt;，它们都是对常量池的引用，分别代表着字段的&lt;code&gt;简单名称&lt;/code&gt;以及&lt;code&gt;字段方法和方法的描述符&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;描述符的作用&lt;/code&gt;：是用来描述字段的数据类型，方法的参数列表（包括数量，类型以及顺序）和返回值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;描述符规则&lt;/code&gt;: 基本数据类型以及代表无返回值的void类型都用一个大写字符来表示，而对象类型则用字符加L加对象名的全限定名来表示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201904/1090617-20190411231525191-1906804832.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数组类型&lt;/code&gt;:每一维度将使用一个前置的＂［＂字符来描述．如一个定义为＂java.lang.Stirng[ ]＂类型的二维数组，将被记录为：＂［［Ljava/lang/Stirng＂，一个整型数组＂int［］＂将被记录为＂［I＂．&lt;/p&gt;
&lt;p&gt;&lt;code&gt;用描述符来描述方法&lt;/code&gt;: 按照先参数列表，后返回值的顺序来描述，参数列表按照参数的严格顺序放在一组小括号＂（）＂之内。&lt;/p&gt;
&lt;p&gt;字段表集合中不会列出从父类或者父接口中继承而来的字段。&lt;/p&gt;
&lt;h2 id=&quot;二属性表集合-----静态field字段的初始化&quot;&gt;&lt;span&gt;二、属性表集合-----静态field字段的初始化&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在定义&lt;strong&gt;&lt;code&gt;属性字段&lt;/code&gt;&lt;/strong&gt;的过程中，我们有时候会很自然地对 &lt;strong&gt;&lt;code&gt;属性字段&lt;/code&gt;&lt;/strong&gt; 直接赋值，如下所示：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public static final int MAX=100;  
public  int count=0;  &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;对于虚拟机而言，上述的两个&lt;strong&gt;&lt;code&gt;属性字段&lt;/code&gt;&lt;/strong&gt;赋值的时机是不同的：&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;对于非静态（即无static修饰）的&lt;strong&gt;属性字段&lt;/strong&gt;的赋值将会出现在实例构造方法&lt;strong&gt;()&lt;/strong&gt;中&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;对于静态的&lt;strong&gt;属性字段&lt;/strong&gt;，有两个选择：1、在静态构造方法&lt;strong&gt;()&lt;/strong&gt;中进行；2 、使用&lt;strong&gt;ConstantValue&lt;/strong&gt;属性进行赋值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sun javac编译器对于 &lt;strong&gt;静态属性字段&lt;/strong&gt; 的初始化赋值策略&lt;/p&gt;
&lt;p&gt;1）、如果使用&lt;strong&gt;final&lt;/strong&gt;和&lt;strong&gt;static&lt;/strong&gt;同时修饰一个&lt;strong&gt;属性字段&lt;/strong&gt;，并且这个字段是基本类型或者&lt;strong&gt;String&lt;/strong&gt;类型的，那么编译器在编译这个字段的时候，会在对应的&lt;strong&gt;field_info&lt;/strong&gt;结构体中&lt;br/&gt;增加一个&lt;code&gt;ConstantValue&lt;/code&gt;类型的结构体，在赋值的时候使用这个&lt;code&gt;ConstantValue&lt;/code&gt;进行赋值。&lt;/p&gt;
&lt;p&gt;2）、如果该&lt;strong&gt;属性字段&lt;/strong&gt;并没有被&lt;strong&gt;final&lt;/strong&gt;修饰，或者不是基本类型或者&lt;strong&gt;String&lt;/strong&gt;类型，那么将在类构造方法&lt;strong&gt;()&lt;/strong&gt;中赋值。&lt;/p&gt;
&lt;p&gt;对于上述的&lt;strong&gt;public static final init MAX=100;&lt;/strong&gt; javac编译器在编译此&lt;strong&gt;属性字段&lt;/strong&gt;构建&lt;strong&gt;field_info&lt;/strong&gt;结构体时，除了访问标志、名称索引、描述符索引外，会增加一个&lt;strong&gt;&lt;code&gt;ConstantValue&lt;/code&gt;&lt;/strong&gt;类型的属性表。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201904/1090617-20190411231712680-1015512537.jpg&quot;/&gt;&lt;/p&gt;

&lt;h2 id=&quot;三示例&quot;&gt;&lt;span&gt;三、示例&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;1）先来个网上的例子，图片解释很好&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class Simple {  
    private  transient static final String str =&quot;This is a test&quot;;  
}  &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201904/1090617-20190411231724787-940812686.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;说明&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1、&lt;strong&gt;字段计数器&lt;/strong&gt;中的值为&lt;strong&gt;0x0001&lt;/strong&gt;,表示这个类就定义了一个&lt;strong&gt;属性字段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2、 &lt;strong&gt;字段的访问标志&lt;/strong&gt;是&lt;strong&gt;0x009A&lt;/strong&gt;，这个字段的标志符有：&lt;strong&gt;ACC_TRANSIENT、ACC_FINAL、ACC_STATIC、ACC_PRIVATE;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3、 &lt;strong&gt;名称索引&lt;/strong&gt;中的值为&lt;strong&gt;0x0005&lt;/strong&gt;,指向了常量池中的第&lt;strong&gt;5&lt;/strong&gt;项，为“&lt;strong&gt;str&lt;/strong&gt;”,表明这个&lt;strong&gt;属性字段&lt;/strong&gt;的名称是&lt;strong&gt;str&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;4、&lt;strong&gt;描述索引&lt;/strong&gt;中的值为&lt;strong&gt;0x0006&lt;/strong&gt;,指向了常量池中的第&lt;strong&gt;6&lt;/strong&gt;项，为&quot;&lt;strong&gt;Ljava/lang/String;&lt;/strong&gt;&quot;，表明这个&lt;strong&gt;field字段&lt;/strong&gt;的数据类型是&lt;strong&gt;java.lang.String&lt;/strong&gt;类型；&lt;/p&gt;
&lt;p&gt;5、属性表计数器&lt;strong&gt;中的值为&lt;/strong&gt;0x0001,表明&lt;strong&gt;field_info&lt;/strong&gt;还有一个属性表；&lt;/p&gt;
&lt;p&gt;6、属性表名称索引&lt;strong&gt;中的值为&lt;/strong&gt;0x0007&lt;strong&gt;,指向常量池中的第&lt;/strong&gt;7&lt;strong&gt;项，为“&lt;/strong&gt;ConstantValue”,表明这个属性表的名称是&lt;strong&gt;ConstantValue&lt;/strong&gt;，即属性表的类型是&lt;strong&gt;ConstantValue&lt;/strong&gt;类型的；&lt;/p&gt;
&lt;p&gt;7、属性长度中的值为&lt;strong&gt;0x0002&lt;/strong&gt;，因为此属性表是&lt;strong&gt;ConstantValue&lt;/strong&gt;类型，它的值固定为&lt;strong&gt;2&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;8、常量值索引 中的值为&lt;strong&gt;0x0008&lt;/strong&gt;,指向了常量池中的第&lt;strong&gt;8&lt;/strong&gt;项，为&lt;strong&gt;CONSTANT_String_info&lt;/strong&gt;类型的项，表示“&lt;strong&gt;This is a test&lt;/strong&gt;” 的常量。在对此&lt;strong&gt;field&lt;/strong&gt;赋值时，会使用此常量对&lt;strong&gt;field&lt;/strong&gt;赋值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)自测&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.jincou.demo.domain;

public class XiaoXiao {
    public String name = &quot;小小&quot;;
    private Integer age = 3;
    public static final String sex = &quot;女&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接下来看16进制文件和class反编译文件&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;//1、这里直接截取到访问标志服后的16进制数据,从|开始代表字段集合相关16进制
                                     00
2100 0600 0700 00|00 0300 0100 0800 0900
0000 0200 0a00 0b00 0000 1900 0c00 0900
0100 0d00 0000 0200 0e00 0100 0100 0f00
1000 0100 1100 0000 3300 0200 0100 0000
132a b700 012a 1202 b500 032a 06b8 0004
b500 05b1 0000 0001 0012 0000 000e 0003
0000 0003 0004 0004 000a 0005 0001 0013
0000 0002 0014 
                                       
//2、查看 XiaoXiao.class反编译数据信息
Constant pool:
   #1 = Methodref          #7.#21         // java/lang/Object.&quot;&amp;lt;init&amp;gt;&quot;:()V
   #2 = String             #22            // 小小
   #3 = Fieldref           #6.#23         // com/jincou/demo/domain/XiaoXiao.name:Ljava/lang/String;
   #4 = Methodref          #24.#25        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #5 = Fieldref           #6.#26         // com/jincou/demo/domain/XiaoXiao.age:Ljava/lang/Integer;
   #6 = Class              #27            // com/jincou/demo/domain/XiaoXiao
   #7 = Class              #28            // java/lang/Object
   #8 = Utf8               name
   #9 = Utf8               Ljava/lang/String;
  #10 = Utf8               age
  #11 = Utf8               Ljava/lang/Integer;
  #12 = Utf8               sex
  #13 = Utf8               ConstantValue
  #14 = String             #29            // 女
  #15 = Utf8               &amp;lt;init&amp;gt;
  #16 = Utf8               ()V
  #17 = Utf8               Code
  #18 = Utf8               LineNumberTable
  #19 = Utf8               SourceFile
  #20 = Utf8               XiaoXiao.java
  #21 = NameAndType        #15:#16        // &quot;&amp;lt;init&amp;gt;&quot;:()V
  #22 = Utf8               小小
  #23 = NameAndType        #8:#9          // name:Ljava/lang/String;
  #24 = Class              #30            // java/lang/Integer
  #25 = NameAndType        #31:#32        // valueOf:(I)Ljava/lang/Integer;
  #26 = NameAndType        #10:#11        // age:Ljava/lang/Integer;
  #27 = Utf8               com/jincou/demo/domain/XiaoXiao
  #28 = Utf8               java/lang/Object
  #29 = Utf8               女
  #30 = Utf8               java/lang/Integer
  #31 = Utf8               valueOf
  #32 = Utf8               (I)Ljava/lang/Integer;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接下来我们来分析从00 03开始。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;//00 03 代表示成员变量的个数，此处为3个。
1）00 01 结合上表代表第一个变量的修饰符为 public
2）00 08 找常量池第8个 name
3）00 09 找常量池第9个 String
4）00 00 用来描述该变量的属性，因为这个变量没有附加属性，所以attributes_count为0，attribute_info为空。
 //接下来直接分析第三个
1）00 19 结合上表 ACC_PUBLIC+ACC_STATIC+ACC_FINAL 刚好19
2）00 0c 找常量池第12个 sex
3）00 09 找常量池第9个 String
4）00 01 代表这个变量有一个附加属性
5）00 0d 找常量池第13个 ConstantValue
6）00 0000 02 属性长度
7）00 0e 找常量池第14个 女&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;通过这个例子我们注意到：&lt;br/&gt;1）、&lt;code&gt;name = &quot;小小&quot;&lt;/code&gt;中的&lt;code&gt;小小&lt;/code&gt;并没有出现，这就是上一个例子所说的,因为它不是静态变量所以不属于类，而是属于对象,所以在创建对象的时候，才会出现。&lt;br/&gt;2）、sex = &quot;女&quot; 中的&lt;code&gt;女&lt;/code&gt;出现了，因为它是静态属性字段，属于类级别的所以出现。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;span&gt;参考&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;1、深入了解java虚拟机第2版第六章&lt;/p&gt;
&lt;p&gt;2、&lt;a href=&quot;https://blog.51cto.com/1459294/1932331&quot;&gt;深入理解JVM-Class文件属性集合&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;只要自己变优秀了，其他的事情才会跟着好起来（少将5）&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 11 Apr 2019 15:31:00 +0000</pubDate>
<dc:creator>雨点的名字</dc:creator>
<og:description>【JVM虚拟机】(7) 深入理解Class中 属性集合 之前有关class文件已经写了两篇博客： 1、 '【JVM虚拟机】(5) 深入理解JVM Class中常量池' 2、 '【JVM虚拟机】(6)</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qdhxhz/p/10693324.html</dc:identifier>
</item>
<item>
<title>校招需要看的书 巩固的知识 - Draymonder</title>
<link>http://www.cnblogs.com/Draymonder/p/10693342.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Draymonder/p/10693342.html</guid>
<description>&lt;h2 id=&quot;感想&quot;&gt;感想&lt;/h2&gt;
&lt;p&gt;听到了很多面试官说：你是科班的，那么&lt;strong&gt;操作系统&lt;/strong&gt;，&lt;strong&gt;计算机网络&lt;/strong&gt;，&lt;strong&gt;操作系统&lt;/strong&gt;，&lt;strong&gt;数据库&lt;/strong&gt; 应该没什么问题。&lt;br/&gt;听完这句话，我知道我大一大二多么愚昧，以为都是水水，考个80 90分就行的想法很蠢蛋..&lt;/p&gt;
&lt;h2 id=&quot;算法与数据结构&quot;&gt;算法与数据结构&lt;/h2&gt;
&lt;p&gt;剑指offer&lt;br/&gt;leetcode&lt;/p&gt;
&lt;h2 id=&quot;操作系统&quot;&gt;操作系统&lt;/h2&gt;
&lt;p&gt;就正常的上课用的书吧&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;知识点如下：
&lt;ul&gt;&lt;li&gt;进程和线程区别&lt;/li&gt;
&lt;li&gt;文件描述符&lt;/li&gt;
&lt;li&gt;一个文件如何组织存放到硬盘上&lt;/li&gt;
&lt;li&gt;你知道的文件系统&lt;/li&gt;
&lt;li&gt;死锁，例子，四个特征&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;还有待挖掘的很多&lt;/p&gt;
&lt;h2 id=&quot;计算机网络&quot;&gt;计算机网络&lt;/h2&gt;
&lt;p&gt;计算机网络(第6/7版) 谢希仁&lt;br/&gt;图解HTTP&lt;br/&gt;计算机网络自顶向下 （也可以，有点儿难&lt;/p&gt;
&lt;p&gt;重点还是TCP UDP IP HTTP DNS&lt;br/&gt;涉及到web的要很熟悉&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;知识点如下：
&lt;ul&gt;&lt;li&gt;OSI七层模型，五层模型，TCP/IP协议栈&lt;/li&gt;
&lt;li&gt;HTTP函数了解哪些？POST和GET的区别？&lt;/li&gt;
&lt;li&gt;传文件POST，怎么知道是不是传输完了？&lt;/li&gt;
&lt;li&gt;TCP，UDP区别&lt;/li&gt;
&lt;li&gt;请求重传机制&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;数据库&quot;&gt;数据库&lt;/h2&gt;
&lt;p&gt;高性能mysql&lt;br/&gt;redis设计与实现&lt;/p&gt;
&lt;h2 id=&quot;java&quot;&gt;Java&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;集合(看源码)&lt;/li&gt;
&lt;li&gt;网络编程&lt;/li&gt;
&lt;li&gt;并发编程(Java并发编程实战，Java并发编程的艺术)&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;笔试&quot;&gt;笔试&lt;/h2&gt;
&lt;p&gt;技术之瞳——阿里巴巴技术笔试心得&lt;/p&gt;
&lt;h2 id=&quot;项目&quot;&gt;项目&lt;/h2&gt;
&lt;p&gt;实习或者自己搞&lt;/p&gt;
</description>
<pubDate>Thu, 11 Apr 2019 15:16:00 +0000</pubDate>
<dc:creator>Draymonder</dc:creator>
<og:description>感想 听到了很多面试官说：你是科班的，那么 操作系统 ， 计算机网络 ， 操作系统 ， 数据库 应该没什么问题。 听完这句话，我知道我大一大二多么愚昧，以为都是水水，考个80 90分就行的想法很蠢蛋.</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Draymonder/p/10693342.html</dc:identifier>
</item>
<item>
<title>TypeScript 中的方法重载 - 刘哇勇</title>
<link>http://www.cnblogs.com/Wayou/p/function_overload_in_typescript.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Wayou/p/function_overload_in_typescript.html</guid>
<description>&lt;p&gt;方法重载（overload）在传统的静态类型语言中是很常见的。JavaScript 作为动态语言， 是没有重载这一说的。一是它的参数没有类型的区分，二是对参数个数也没有检查。虽然语言层面无法自动进行重载，但借助其动态的特性，我们可以在代码中手动检查入参的类型，或者通过 &lt;code&gt;arguments&lt;/code&gt; 获取到参数个数，从而实现根据不同的入参做不同的操作。&lt;/p&gt;
&lt;p&gt;比如有一个获取聊天消息的方法，根据传入的参数从数组中查找数据。如果入参为数字，则认为是 id，然后从数据源中找对应 id 的数据并返回，否则当成类型，返回这一类型的消息。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; query &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;nunber&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; query);
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; query);
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TypeScript 中，假如我们的消息数据为如下结构：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;image&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;audio&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;

&lt;span class=&quot;pl-k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; {
  id&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt;;
  type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt;;
  content&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;string&lt;/span&gt;;
};
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面获取数据的方法等价于：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(
  &lt;span class=&quot;pl-v&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt;
)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;[] &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;undefined&lt;/span&gt; {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;);
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;);
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样做一是类型书写上比较丑陋，二是没有发挥出 TypeScript 类型检查的优势，这里我们是可以根据入参的类型明确知道返回的类型的，即如果传入的是 id，返回的是单个数据或&lt;code&gt;undefined&lt;/code&gt;，如果是根据类型查找，返回的是数组。而现在调用方法后，得到的类型太过宽泛，这和使用 &lt;code&gt;any&lt;/code&gt; 做为返回没多大差别。&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://user-images.githubusercontent.com/3783096/55962274-231c6980-5ca3-11e9-8381-33a767a0517b.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/55962274-231c6980-5ca3-11e9-8381-33a767a0517b.png&quot; alt=&quot;函数返回类型不够紧凑&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;函数返回类型不够紧凑&lt;/p&gt;
&lt;p&gt;因为类型的不明朗，返回的结果都不能直接操作，需要进行类型转换后才能继续。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt;&lt;/span&gt; result1 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;audio&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; 不能直接对 result1 调用数组方法 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;((&lt;span class=&quot;pl-smi&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;[]).&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;);

&lt;span class=&quot;pl-k&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt;&lt;/span&gt; result2 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;result2&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; 不能对 result2 直接访问消息对象中的属性 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;((&lt;span class=&quot;pl-smi&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;content&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;重载的实现&lt;/h3&gt;
&lt;p&gt;这时候可通过提供多个函数类型的声明来解决上面的问题，最后得到的结果就是间接实现了函数的重载。当然这个重载只是 TypeScript 编译时的。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;undefined&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;[];
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;any&lt;/span&gt; {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;);
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;);
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样改造后，我们在调用的时候直接就会有重载的提示。&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://user-images.githubusercontent.com/3783096/55962191-ff592380-5ca2-11e9-8df2-cfd7356c4dda.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3783096/55962191-ff592380-5ca2-11e9-8df2-cfd7356c4dda.png&quot; alt=&quot;实现 TypeScript 的重载后调用时的自动提示&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;实现 TypeScript 的重载后调用时的自动提示&lt;/p&gt;
&lt;p&gt;并且得到的结果类型是重载方法中指定的入参与返回的组合，在对结果进行使用时，无须再进行类型转换。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt;&lt;/span&gt; result1 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;audio&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; ✅ 无须类型转换 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;result1&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;);

&lt;span class=&quot;pl-k&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt;&lt;/span&gt; result2 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;result2&lt;/span&gt;) {
  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; ✅ 无须类型转换 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;result2&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;content&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里需要理解的是，上面添加的函数类型仅作为 TypeScript 在编译时使用的，它不是真的实现像传统静态类型语言那样的重载，也不会改变编译后代码的输出。实际运行时仍然是不带重载的 JavaScript 版本。&lt;/p&gt;
&lt;details readability=&quot;6.5&quot;&gt;编译后的代码
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;18&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;use strict&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; data &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [
    {
        id&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;,
        type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        content&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    },
    {
        id&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;,
        type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;image&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        content&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;url_for_iamge&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    },
    {
        id&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;,
        type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        content&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    }
];
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; query &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; query; });
    }
    &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;) { &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; query; });
    }
}
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; result1 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;audio&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; ✅ 无须类型转换 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;result1&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; result2 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (result2) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; ✅ 无须类型转换 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;result2&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;content&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;p&gt;但这一点也不影响我们在 TypeScript 中使用这种假的重载。&lt;/p&gt;
&lt;h3&gt;可选参数&lt;/h3&gt;
&lt;p&gt;另一个 TypeScript 重载的场景。还是上面获取消息数据的方法，因为根据类型查找消息时，会返回同类型消息的一个数组。此时我们想加一个参数实现只返回结果中前几个数据，那么可以很方便地进行如下的改造：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-diff&quot; readability=&quot;13&quot;&gt;
&lt;pre&gt;
function getMessage(id: number): Message | undefined;
&lt;span class=&quot;pl-mi1&quot;&gt;&lt;span class=&quot;pl-mi1&quot;&gt;+&lt;/span&gt;function getMessage(type: MessageType, count?: number): Message[];&lt;/span&gt;
&lt;span class=&quot;pl-mi1&quot;&gt;&lt;span class=&quot;pl-mi1&quot;&gt;+&lt;/span&gt;function getMessage(query: any, count = 10): any {&lt;/span&gt;
  if (typeof query === &quot;number&quot;) {
    return data.find(message =&amp;gt; message.id === query);
  } else {
&lt;span class=&quot;pl-mi1&quot;&gt;&lt;span class=&quot;pl-mi1&quot;&gt;+&lt;/span&gt;    return data.filter(message =&amp;gt; message.type === query).splice(0, count);&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过重载，这个新增的参数很容易实现只针对入参 &lt;code&gt;MessageType&lt;/code&gt; 时，这样如果我们有如下的调用，会得到编译时的报错：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; 🚨 Argument of type '1' is not assignable to parameter of type 'MessageType' &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而非重载的版本是享受不到上面提到的类型优势的。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(
  &lt;span class=&quot;pl-v&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt;,
  &lt;span class=&quot;pl-v&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;
)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;[] &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;undefined&lt;/span&gt; {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;);
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;message&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;splice&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;count&lt;/span&gt;);
  }
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; ✅ ojbk, 不错报 &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;getMessage&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;重载过程&lt;/h3&gt;
&lt;p&gt;TypeScript 重载的过程是，拿传入的参数和重载的方法签名列表中由上往下逐个匹配，直到找到一个完全匹配的函数签名，否则报错。所以推荐的做法是将签名更加具体的重载放上面，不那么具体的放后面。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; ✅&lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;[];
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;undefined&lt;/span&gt;;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt; 🚨&lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;undefined&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; getMessage(&lt;span class=&quot;pl-v&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;MessageType&lt;/span&gt;, &lt;span class=&quot;pl-v&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;number&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Message&lt;/span&gt;[];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;像上面示例中正确做法这样，如果说入参个数只有一个，那可以直接跳过第一个函数签名，无须做入参类型的判断。&lt;/p&gt;
&lt;h3&gt;相关资源&lt;/h3&gt;
</description>
<pubDate>Thu, 11 Apr 2019 15:08:00 +0000</pubDate>
<dc:creator>刘哇勇</dc:creator>
<og:description>方法重载（overload）在传统的静态类型语言中是很常见的。JavaScript 作为动态语言， 是没有重载这一说的。一是它的参数没有类型的区分，二是对参数个数也没有检查。虽然语言层面无法自动进行重</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Wayou/p/function_overload_in_typescript.html</dc:identifier>
</item>
<item>
<title>交叉编译问题记录－嵌入式环境下 GDB 的使用方法 - 叶余</title>
<link>http://www.cnblogs.com/leisure_chn/p/10693247.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/leisure_chn/p/10693247.html</guid>
<description>&lt;p&gt;本文为作者原创，转载请注明出处：&lt;a href=&quot;https://www.cnblogs.com/leisure_chn/p/10693247.html&quot; class=&quot;uri&quot;&gt;https://www.cnblogs.com/leisure_chn/p/10693247.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文以嵌入式 Linux 环境下的 gdb 使用为例，记录交叉编译过程中一个比较关键的问题：configure 过程中 --build, --host, --target 参数的区别。&lt;/p&gt;
&lt;h2 id=&quot;交叉编译&quot;&gt;1. 交叉编译&lt;/h2&gt;
&lt;p&gt;交叉编译是指在一种平台上编译出运行于另一种平台的程序。这里的平台，涉及硬件和软件两个部分，硬件平台指 CPU 架构，软件平台指操作系统。交叉编译主要针对嵌入式领域，因为嵌入式系统资源受限，没有办法在嵌入式平台上运行一套编译环境，因此需要在其他性能更强劲的平台上借助交叉编译工具链来制作可在嵌入式平台上运行的程序。&lt;/p&gt;
&lt;p&gt;交叉编译与普通编译基本步骤一样：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[1] configure&lt;/strong&gt;&lt;br/&gt;在编译前进行配置。如果 --host 参数与 --build 参数不同，则是交叉编译。否则就是普通编译。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[2] make&lt;/strong&gt;&lt;br/&gt;编译。根据 configure 配置生成的参数，调用相应的编译工具链编译生成目标程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[3] make install&lt;/strong&gt;&lt;br/&gt;安装。将 make 生成的目标程序安装到指定目录。如果不运行 make install，手动拷贝到指定目录即可。&lt;/p&gt;
&lt;h3 id=&quot;build---host---target&quot;&gt;1.1 --build --host --target&lt;/h3&gt;
&lt;p&gt;看一下 configure 步骤中 --build、--host 和 --target 三个参数的定义，下面在 gdb 源码目录运行 './configure --help'&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure --help
System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;源码经过编译生成可执行程序。根据执行编译操作的平台、可执行程序的运行平台、可执行的程序的处理平台，可以将编译操作分为多种类型，对应的三个配置参数如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--build&lt;/strong&gt;：运行编译工具链的平台，也就是正在执行编译操作的平台。如果未指定此参数，则通过 config.guess 猜测得到。通常都不指定此参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--host&lt;/strong&gt;：可执行程序将运行的平台。如果未指定此函数，则和 --build 相同。如果 --host 和 --build 不同，是交叉编译；否则是普通编译。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--target&lt;/strong&gt;：可执行程序将处理的平台。如果未指定此函数，则和 --host 相同。一般来说，程序运行在什么平台，处理的就是什么平台，此参数值和 --host 参数相同，不需显式指定所以通常不会关注到此参数。但在制作交叉编译工具 (如 gcc、gdb 等) 这种特殊情况的时候下，此值和 --host 不同，例如编译生成 arm-linux-gcc 程序，它运行在 x86-linux 平台 (--host 参数)，但处理的是 arm-linux 平台 (--target 参数)。如果是交叉编译一个普通的应用，如运行于 arm-linux 平台的 tftp 程序，则它的运行平台和处理平台都是 arm-linux 平台。&lt;/p&gt;
&lt;h3 id=&quot;三种编译类型&quot;&gt;1.2 三种编译类型&lt;/h3&gt;
&lt;p&gt;再啰嗦总结一下。编译类型可以分为三种：(假设交叉编译工具链安装在 x86-linux 平台，待编译的目标嵌入式平台为 arm-linux 平台，这里仅为了说明意图，平台命名并不严谨)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[1] 编译 PC 平台普通程序&lt;/strong&gt;&lt;br/&gt;一般执行如下形式的配置命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将缺省的参数补全，实际等效于如下命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure --build=x86_linux --host=x86_linux --target=x86_linux&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;[2] 编译交叉编译工具链&lt;/strong&gt;&lt;br/&gt;交叉编译工具链的特别之处在于，它在 x86-linux 平台上运行，处理的却是 arm-linux 平台。制作交叉编译工具链并不需要使用交叉编译。一般执行如下形式的配置命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure --target=arm_linux&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将缺省的参数补全，实际等效于如下命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure --build=x86_linux --host=x86_linux --target=arm_linux&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;[3] 交叉编译嵌入式平台程序&lt;/strong&gt;&lt;br/&gt;生成嵌入式平台的程序需要用用到交叉编译。一般执行如下形式的配置命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure --host=arm_linux&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将缺省的参数补全，实际等效于如下命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;./configure --build=x86_linux --host=arm_linux --target=arm_linux CC=arm-linux-gcc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;实际上，如果我们要制作运行于嵌入式平台的编译工具(比如 gcc、gdb 等)，也可以先执行上面的配置命令然后交叉编译得到目标应用程序，但是生成的 gcc、gdb 工具基本上无法在目标嵌入式平台上正常运行，因为硬件带不动，所以嵌入式平台的编译工具链是按 [2] 中的方法制作 ，而不是按 [3] 中的方法制作。&lt;/p&gt;
&lt;h2 id=&quot;gdb-交叉编译与使用实例&quot;&gt;2. GDB 交叉编译与使用实例&lt;/h2&gt;
&lt;p&gt;嵌入式平台中使用 GDB 时会用到 GDB 的远程 (remote) 调试模式：在目标板上通过 gdbserver 运行待调试的程序，在宿主机上运行 gdb 并通过 'target remote [ip]:[port]' 来连接到目标板上的 gdbserver，从而启动远程调试。各种调试命令在宿主机上输入，程序执行效果(包括打印)在目标板上展示，这很容易理解，因为正在调试的程序本来就是在目标板上运行的。不在目标板上直接运行 gdb 进行调试是因为目标板硬件配置低，跑不动 gdb，当然，不排除某些嵌入式平台的性能很强劲，能够正常运行 gdb。当嵌入式平台的硬件越来越强大时，嵌入式平台与通用计算机平台的界限也越来越模糊，实际情况也正是这样，硬件性能越来越强悍，资源短缺的问题越来越淡化，这种发展形势下，嵌入式技术的日薄西山成为必然的结果。&lt;/p&gt;
&lt;p&gt;搭建嵌入式平台下的 gdb 调试环境，对理解前面交叉编译过程中的 --build、--host 和 --target 三个参数非常用帮助。&lt;/p&gt;
&lt;h3 id=&quot;环境描述&quot;&gt;2.1 环境描述&lt;/h3&gt;
&lt;p&gt;虚拟机：CPU：x86_64，系统：openSUSE Leap 42.3，IP：192.168.202.240&lt;br/&gt;开发板：CPU：mips mt7688，系统：openwrt linux，IP：192.168.202.141&lt;br/&gt;虚拟机上安装的 C 交叉编译器为 mipsel-openwrt-linux-gcc，即交叉编译工具链的前缀为 mipsel-openwrt-linux。&lt;/p&gt;
&lt;h3 id=&quot;下载源码&quot;&gt;2.2 下载源码&lt;/h3&gt;
&lt;p&gt;从 &lt;a href=&quot;ftp://ftp.gnu.org/gnu/gdb&quot; class=&quot;uri&quot;&gt;ftp://ftp.gnu.org/gnu/gdb&lt;/a&gt; 下载最新版源码 gdb-8.2.tar.gz，解压：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;tar zxvf ./gdb-8.2.tar.gz
cd gdb-8.2&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;编译-gdb&quot;&gt;2.3 编译 gdb&lt;/h3&gt;
&lt;p&gt;编译 gdb：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd gdb-8.2
./configure --target=mipsel-openwrt-linux
make&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;gdb 运行在虚拟机上，所以它不需要交叉编译。--build 和 --host 参数留空，实际使用的是虚拟机的平台参数。gdb 虽运行在虚拟机上，但它处理的是开发板平台的程序，所以指定 --target 为 mipsel-openwrt-linux，值取的是交叉编译工具链前缀。&lt;/p&gt;
&lt;h3 id=&quot;交叉编译-gdbserver&quot;&gt;2.4 交叉编译 gdbserver&lt;/h3&gt;
&lt;p&gt;编译 gdbserver：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd gdb-8.2/gdb/gdbserver
./configure --host=mipsel-openwrt-linux CC=mipsel-openwrt-linux-gcc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;gdbserver 运行在开发板上，所以需要交叉编译。--build 参数留空，实际使用的是虚拟机的平台参数。--host 参数指定虚拟机平台，值为 mipsel-openwrt-linux。--target 参数留空，所以它的聚值将等于 --host 参数值。&lt;/p&gt;
&lt;p&gt;开发板：开发板 IP 是 192.168.202.141，则输入下述任一条指令皆可&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;gdbserver :1234 test
gdbserver 127.0.0.1:1234 test
gdbserver 192.168.202.141:1234 test&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;以-remote-方式使用-gdb&quot;&gt;2.5 以 remote 方式使用 gdb&lt;/h3&gt;
&lt;p&gt;主机：首先在 SHELL 命令行里运行 gdb 应用&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;./gdb&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行上一条命令后，SHELL 将进入 gdb 模式，下列几条指令中'(gdb) '是提示符：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;(gdb) target remote 192.168.202.141
(gdb) b main.c:55
(gdb) c&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面第一条是远程连接到开发板上的 gdbserver。连接之后，就是正常使用了。第二条是设置断点。第三条是运行程序，注意待调试的程序实际已在开发板上运行了，所以要使用'c'指令，不能使用 'r' 指令，如果输入 'r' 指令，可以看到提示 remote 模式下不支持 'r' 指令：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;(gdb) r
The &quot;remote&quot; target does not support &quot;run&quot;.  Try &quot;help target&quot; or &quot;continue&quot;.&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;遗留问题&quot;&gt;3. 遗留问题&lt;/h2&gt;
&lt;p&gt;交叉编译过程中，一般使用交叉编译工具链的前缀作 --host 及 --target 的值；--build 参数一般不指定，编译时自动推测。这些都是在实践层面，一般就算写错了，试一试都能编译通过。而对平台描述的定义，即 --build、--host 及 --target 的值的具体取值规则，我没有找到正式的出处和定义，是的，网上没查到。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;4. 参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-23780428-id-3212367.html&quot;&gt;嵌入式 Linux 的 GDB 调试环境建立&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://blog.csdn.net/this_is_me_anyway/article/details/89160748&quot;&gt;Python Exception 异常信息&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://blog.csdn.net/z526882183/article/details/78805811&quot;&gt;QT 远程调试 ARM 板中 python 的问题&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;修改记录&quot;&gt;5. 修改记录&lt;/h2&gt;
&lt;p&gt;2019-04-11 初稿&lt;/p&gt;
</description>
<pubDate>Thu, 11 Apr 2019 14:54:00 +0000</pubDate>
<dc:creator>叶余</dc:creator>
<og:description>本文为作者原创，转载请注明出处： 本文以嵌入式 Linux 环境下的 gdb 使用为例，记录交叉编译过程中一个比较关键的问题：configure 过程中 build, host, target 参数的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/leisure_chn/p/10693247.html</dc:identifier>
</item>
<item>
<title>Unity3D中利用Action实现自己的消息管理（订阅/发布）类 - 子非鱼`</title>
<link>http://www.cnblogs.com/imteach/p/10679239.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/imteach/p/10679239.html</guid>
<description>&lt;h2&gt;引言&lt;/h2&gt;
&lt;blockquote readability=&quot;23&quot;&gt;
&lt;p&gt;一般的软件开发过程中，为了方便对项目进行管理、维护和扩展，通常会采用一种MVC框架，以将显示逻辑、业务逻辑和数据进行分离。&lt;/p&gt;
&lt;p&gt;这在传统企业软件的开发中很常见，但我在使用Unity做游戏开发的时候却几乎找不到相关框架。&lt;/p&gt;
&lt;p&gt;其原因猜测大概有两点，一是游戏开发模式多变，不同类型的游戏代码结构差异很大，很以有一个适用性很强的框架出现；二是Unity太年轻，其大范围使用也不过是最近三四年的事情。&lt;/p&gt;
&lt;p&gt;没有框架也不是意味着没有办法，MVC只是一种规范，只要在开发过程中对代码的组织结构及用途做一定的约束，就到达到各层分离的效果。&lt;/p&gt;
&lt;p&gt;在代码分层组织的结构中，出于解耦合的需求，通常需要一个对事件/消息进行管理的类，以便在各层之间传送消息，其功能包括事件/消息的订阅、发布以及取消订阅。&lt;/p&gt;
&lt;p&gt;本文不会写怎么实现一个MVC结构（驾驭不了），只说说这个事件管理类的实现方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;事件管理类的实现&lt;/h2&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;h3&gt;1、编写EventManager类&lt;/h3&gt;
&lt;p&gt;一个事件管理类通过包括三个功能，订阅、发布消息、取消订阅，对应到代码中，也是就三个方法：AddEvent、DispatchEvent、RemoveEvent，还有一个字典List，对订阅事件做管理，实现如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('2fd6cc57-5b38-4d18-a211-d9891af2d26e')&quot; readability=&quot;39.5&quot;&gt;&lt;img id=&quot;code_img_closed_2fd6cc57-5b38-4d18-a211-d9891af2d26e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2fd6cc57-5b38-4d18-a211-d9891af2d26e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('2fd6cc57-5b38-4d18-a211-d9891af2d26e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2fd6cc57-5b38-4d18-a211-d9891af2d26e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;74&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;* UnityVersion: 2018.3.1f1
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;* FileName:     EventManager.cs
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;* Author:       TYQ
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;* CreateTime:   2019/04/04 15:49:53
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;* Description:  自定义的事件派发类
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; 
&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; EventManager
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 带返回参数的回调列表,参数类型为T，支持一对多
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Dictionary&amp;lt;&lt;span&gt;string&lt;/span&gt;, List&amp;lt;Delegate&amp;gt;&amp;gt; events = &lt;span&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span&gt;string&lt;/span&gt;, List&amp;lt;Delegate&amp;gt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; 
&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 注册事件，1个返回参数
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;eventName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;callback&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; AddEvent&amp;lt;T&amp;gt; (&lt;span&gt;string&lt;/span&gt; eventName, Action&amp;lt;T&amp;gt;&lt;span&gt; callback)
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;         List&amp;lt;Delegate&amp;gt; actions = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt; 
&lt;span&gt; 29&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;eventName已存在&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (events.TryGetValue(eventName, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; actions))
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;            actions.Add(callback);
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;eventName不存在&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;             actions = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Delegate&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; 
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;            actions.Add(callback);
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;            events.Add(eventName ,actions);
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt; 
&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 注册事件，不带返回参数
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;eventName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;callback&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; AddEvent(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; eventName, Action callback)
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;         List&amp;lt;Delegate&amp;gt; actions = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; 
&lt;span&gt; 53&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;eventName已存在&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (events.TryGetValue(eventName, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; actions))
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;            actions.Add(callback);
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;eventName不存在&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;             actions = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Delegate&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; 
&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;            actions.Add(callback);
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;            events.Add(eventName, actions);
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt; 
&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 移除事件
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;eventName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;callback&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; RemoveEvent&amp;lt;T&amp;gt;(&lt;span&gt;string&lt;/span&gt; eventName, Action&amp;lt;T&amp;gt;&lt;span&gt; callback)
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         List&amp;lt;Delegate&amp;gt; actions = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; 
&lt;span&gt; 77&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (events.TryGetValue(eventName, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; actions))
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;            actions.Remove(callback);
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (actions.Count == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;                events.Remove(eventName);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 移除全部事件
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; RemoveAllEvents ()
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;        events.Clear();
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 95&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 派发事件
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 97&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;eventName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;arg&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; DispatchEvent&amp;lt;T&amp;gt;(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; eventName, T arg)
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;         List&amp;lt;Delegate&amp;gt; actions = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt; 
&lt;span&gt;103&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (events.ContainsKey(eventName))
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;             events.TryGetValue(eventName, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; actions);
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; 
&lt;span&gt;107&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; act &lt;span&gt;in&lt;/span&gt;&lt;span&gt; actions)
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;                act.DynamicInvoke(arg);
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;114&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 派发事件，不带参数
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;116&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;eventName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;arg&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt;118&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; DispatchEvent(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; eventName)
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;         List&amp;lt;Delegate&amp;gt; actions = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; 
&lt;span&gt;122&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (events.ContainsKey(eventName))
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;             events.TryGetValue(eventName, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; actions);
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; 
&lt;span&gt;126&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; act &lt;span&gt;in&lt;/span&gt;&lt;span&gt; actions)
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;                act.DynamicInvoke();
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;EventManager.cs&lt;/span&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;2、测试事件类&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;2.1、先制作测试界面，包括两个接收（订阅）消息的Text组件，以及一个发布消息的Slider组件，层次结构见下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/634826/201904/634826-20190409194506962-1487237063.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 预期效果：拖动Slider，Slider的值会同步显示到两个用于接收的Text组件上。&lt;/p&gt;
&lt;p&gt;2.2、编写测试类&lt;/p&gt;
&lt;p&gt; 先写一个发布消息的类，在Slider的onValueChanged事件中执行发布操作，如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('281f6b72-1dc3-42af-a8fe-28e9f4bd92c4')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_281f6b72-1dc3-42af-a8fe-28e9f4bd92c4&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_281f6b72-1dc3-42af-a8fe-28e9f4bd92c4&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('281f6b72-1dc3-42af-a8fe-28e9f4bd92c4',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_281f6b72-1dc3-42af-a8fe-28e9f4bd92c4&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine.UI;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Sender : MonoBehaviour
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Slider slider = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Awake()
    {
        slider.onValueChanged.AddListener(&lt;/span&gt;&lt;span&gt;delegate&lt;/span&gt; (&lt;span&gt;float&lt;/span&gt;&lt;span&gt; value) {
            Debug.LogFormat(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;slider:{0}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, value);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;有参分发&lt;/span&gt;
            EventManager.DispatchEvent&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NumberEvent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, value);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;无参分发&lt;/span&gt;
            EventManager.DispatchEvent(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NumberEventNoParam&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        });
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;Sender.cs&lt;/span&gt;&lt;/div&gt;
&lt;p&gt; 再写一下接收消息的类，，如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('64e79362-edd3-4ee1-aa37-864fdcb9ccfe')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_64e79362-edd3-4ee1-aa37-864fdcb9ccfe&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_64e79362-edd3-4ee1-aa37-864fdcb9ccfe&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('64e79362-edd3-4ee1-aa37-864fdcb9ccfe',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_64e79362-edd3-4ee1-aa37-864fdcb9ccfe&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine.UI;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Receiver : MonoBehaviour
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Text receiveText1 = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Text receiveText2 = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Awake()
    {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;带参数回调

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注册方法1&lt;/span&gt;
        EventManager.AddEvent&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NumberEvent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, OnNumberChangeEventHandler);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注册方法2&lt;/span&gt;
        EventManager.AddEvent(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NumberEvent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;delegate&lt;/span&gt; (&lt;span&gt;float&lt;/span&gt;&lt;span&gt; arg) {
            receiveText2.text &lt;/span&gt;=&lt;span&gt; (Convert.ToInt32(arg)).ToString();
        });
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;无参回调&lt;/span&gt;
        EventManager.AddEvent(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NumberEventNoParam&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;delegate&lt;/span&gt;&lt;span&gt; () {
            Debug.Log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;无参回调&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        });
    }

    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 事件处理方法
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;arg&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; OnNumberChangeEventHandler (&lt;span&gt;float&lt;/span&gt;&lt;span&gt; arg)
    {
        receiveText1.text &lt;/span&gt;=&lt;span&gt; (Convert.ToInt32(arg)).ToString();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;Receiver.cs&lt;/span&gt;&lt;/div&gt;
&lt;p&gt; 2.3、运行&lt;/p&gt;
&lt;p&gt;运行结果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/634826/201904/634826-20190409195147472-167386757.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到，Slider值的改变会立马同步到接收端Text中，实现了预期的功能。&lt;/p&gt;

&lt;/blockquote&gt;
&lt;h2&gt; 3、后记&lt;/h2&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;1、我在EventManager.cs中使用Action类型来接受事件的回调，而不是使用c#的delegate，是因为，Action是Unity已经定义好的一种公共delegate，使用起来更方便。&lt;/p&gt;
&lt;p&gt;2、目录的EventManager.cs只支持无参回调和一个参数的回调，如需更多参数回调，可以依照AddEvent&amp;lt;T&amp;gt;的写法，添加重载。&lt;/p&gt;
&lt;p&gt;3、在EventManager.cs中好像还缺一个无参的RemoveEvent方法，请自行补充。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
<pubDate>Thu, 11 Apr 2019 14:49:00 +0000</pubDate>
<dc:creator>子非鱼`</dc:creator>
<og:description>引言 一般的软件开发过程中，为了方便对项目进行管理、维护和扩展，通常会采用一种MVC框架，以将显示逻辑、业务逻辑和数据进行分离。 这在传统企业软件的开发中很常见，但我在使用Unity做游戏开发的时候却</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/imteach/p/10679239.html</dc:identifier>
</item>
<item>
<title>项目管理之敏捷方式（我们的方式） - 白胡子海盗</title>
<link>http://www.cnblogs.com/wzrong/p/10693104.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wzrong/p/10693104.html</guid>
<description>&lt;p&gt;项目管理的话题比较大，敏捷方式呢见仁见智，一千个人就有一千个哈姆雷特。所以我这里只说我们的方式，如有雷同，说明我们是同道中人，江湖之大，请珍重。&lt;/p&gt;

&lt;h3&gt;什么是敏捷？&lt;/h3&gt;
&lt;p&gt;敏捷 是一种项目管理方式，而不是一种工具。&lt;/p&gt;

&lt;p&gt;很多同学说，我们现在已经很敏捷了，我们在用 TAPD，我们在用 Teambtion。我要说的是 TAPD、Teambition 等只是一种工具，是实现敏捷管理的一种手段，而不是敏捷本身。&lt;/p&gt;

&lt;h3&gt;什么是用户故事？&lt;/h3&gt;
&lt;p&gt;用户故事 不是另外一种写需求的方式，&lt;/p&gt;
&lt;p&gt;故事是用来 讲的，不是用来写的，&lt;/p&gt;
&lt;p&gt;主要是为了 建立共识 机制。&lt;/p&gt;

&lt;p&gt;用户故事 也不是需求，&lt;/p&gt;
&lt;p&gt;是关于问题解决 方案的讨论，&lt;/p&gt;
&lt;p&gt;公司的问题、客户的问题、用户的问题&lt;/p&gt;
&lt;p&gt;目的是对要开发的功能 达成共识。&lt;/p&gt;

&lt;h3&gt;什么是建立共识？&lt;/h3&gt;
&lt;p&gt;用下边这张图来解释，最合适不过了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222437857-525730289.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/图片%201.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ol start=&quot;1&quot;&gt;&lt;li&gt;产品经理写了一份文档，邮件同时发送给了 设计、研发、测试。大家看到文档以后，每个人的理解各不相同。有人理解的是方的，有人理解的是圆的，有人理解的三角形的。大家都觉得自己的理解是正确的，然后回邮件说：我理解了。&lt;/li&gt;
&lt;li&gt;当开会大家坐在一起讨论时，才发现 oh my god，完全不是那么回事。&lt;/li&gt;
&lt;li&gt;然后大家经过一系列的沟通交流，不断的去纠偏，不断的产生新的问题，不断的去解决。&lt;/li&gt;
&lt;li&gt;最后大家达成了统一的意见，建立了相同的认知共识。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下边这张图，是我们目前达成共识的一个敏捷流程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222544886-37637250.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/图片%2012.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;MVP &amp;amp; 最小可行方案&lt;/h3&gt;

&lt;p&gt;MVP 是指可以产生预期成果的 最小可行产品。&lt;/p&gt;

&lt;p&gt;MVP 一般都是新的产品为了快速验证市场的可行性，而发布的最小可行产品。 &lt;/p&gt;

&lt;p&gt;但大部分公司都是在已有的产品上进行功能迭代，我们把这种功能迭代叫做最小可行方案。&lt;/p&gt;

&lt;p&gt;最小可行方案 是指可以产生预期成果的 最小可发布方案。&lt;/p&gt;

&lt;p&gt;最小可行方案，也是我们在拆分版本迭代任务时，需要考虑的点。以下两种图可以解释什么是 最小不可行方案 和 什么是 最小可行方案 ：&lt;/p&gt;

&lt;p&gt;图1-最小 不可行 方案&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/111.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222626552-329038767.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图2- 最小 可行 方案&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/222.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222637303-553561411.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;用户故事地图 &amp;amp; OKR？&lt;/h3&gt;
&lt;p&gt;地图 一般的作用有两个：寻找路径，了解全貌。&lt;/p&gt;

&lt;p&gt;寻找路径&lt;/p&gt;
&lt;p&gt;我们一般想要去一个地方，现在都会使用电子地图，输入起点和终点，APP会自动帮你规划出路径。&lt;/p&gt;
&lt;p&gt;以前使用纸质地图的时候，也是在地图上要起点和终点，然后自己谋划一下路径。&lt;/p&gt;
&lt;p&gt;这个应该是我们比较常用的功能了。&lt;/p&gt;

&lt;p&gt;了解全貌&lt;/p&gt;
&lt;p&gt;上学那会儿，地理课老师用世界地图也好，中国地图也好，来给我们讲解几大洲几大洋，地质情况等等。&lt;/p&gt;
&lt;p&gt;我们在知道了地球是圆的基础上，还知道了中国就是雄鸡，意大利是靴子……&lt;/p&gt;
&lt;p&gt;这就是了解全貌。&lt;/p&gt;

&lt;p&gt;同理，用户故事地图也起到同样的作用。&lt;/p&gt;
&lt;p&gt;用户故事地图主要起到两个作用。&lt;/p&gt;
&lt;p&gt;一个是找到整个产品的主干，也就是路径。&lt;/p&gt;
&lt;p&gt;一个就是了解整个产品的全貌&lt;/p&gt;

&lt;p&gt;OKR （Objectives and Key Results）即目标与关键成果法，是一套明确和跟踪目标及其完成情况的管理工具和方法，由英特尔公司发明。 &lt;/p&gt;

&lt;p&gt;OKR是努力的方向和目标，代表你到底要去哪里，而不是你要去的地方具体在哪里。&lt;/p&gt;

&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;话说，三只猎狗追一只土拨鼠，土拨鼠钻进了树洞。树洞只有一个出口。突然从树洞里钻出一只兔子，飞快地爬上一颗大树。兔子在树枝上没站稳，掉下来砸晕了正在仰头看的三只猎狗。最后，兔子逃脱了。&lt;/p&gt;
&lt;p&gt;    这个故事有什么问题？&lt;/p&gt;
&lt;p&gt;    有人说：兔子不会爬树。&lt;/p&gt;
&lt;p&gt;    有人说：一只兔子不可能同时砸晕三只猎狗。&lt;/p&gt;
&lt;p&gt;    这些都是好问题，但是有没有人注意到：土拨鼠那里去了？&lt;/p&gt;
&lt;p&gt;    对，土拨鼠才是目标。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下图两张图是我们在使用 OKR ，结合用户故事地图，在敏捷方式中的一种运用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222724329-899999788.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/333.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222737300-1468647034.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/444.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;下图是我们借助看板工具 Teambition的栏目流程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411222750485-1092263040.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;file:///Users/wzrong/Documents/项目管理之敏捷方式（我们的方式）/555.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;以上就是我们的敏捷方式，我们也在不断升级迭代中。 如果你是同道中人，留言写下的方式或指出我们可优化的地方，大家共同交流，一同进步。&lt;/p&gt;

&lt;p&gt;最后推荐一本书：《用户故事地图》，我们的敏捷方式理论支撑出处。&lt;/p&gt;
&lt;p&gt;请关注公众号：白胡子海盗&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/43860/201904/43860-20190411224021860-1234763505.jpg&quot; alt=&quot;&quot; width=&quot;378&quot; height=&quot;391&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 11 Apr 2019 14:29:00 +0000</pubDate>
<dc:creator>白胡子海盗</dc:creator>
<og:description>项目管理的话题比较大，敏捷方式呢见仁见智，一千个人就有一千个哈姆雷特。所以我这里只说我们的方式，如有雷同，说明我们是同道中人，江湖之大，请珍重。 什么是敏捷？ 敏捷 是一种项目管理方式，而不</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wzrong/p/10693104.html</dc:identifier>
</item>
<item>
<title>对HTML5标签的认识(三) - Eden-Xie</title>
<link>http://www.cnblogs.com/xym15079750872/p/10692657.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xym15079750872/p/10692657.html</guid>
<description>&lt;p&gt;&lt;em&gt;&lt;span&gt;这篇随笔继续来认识&lt;/span&gt;&lt;span&gt;HTML&lt;/span&gt;&lt;span&gt;标签。这次随笔主要是对&amp;lt;table&amp;gt;标签的认识和最近我学习到的一些标签来和大家分享。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、&amp;lt;table&amp;gt;标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;lt;table&amp;gt;标签的作用主要是定义HTML表格,&amp;lt;table&amp;gt;内也分头&amp;lt;thead&amp;gt;和主体&amp;lt;tbody&amp;gt;,而简单的HTML表格由table元素以及一个或者多个tr，th或者td元素组成&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;tr元素定义表格的行，th元素定义列头，td元素定义表格单元。也有更复杂的HTML表格可能包括&amp;lt;caption&amp;gt;定义表格标题，&amp;lt;thead&amp;gt; 标签用于组合 HTML 表格的表头内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体怎么用呢，一个最简单的HTML表格     代码如下：&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;HTML5标签的认识&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;小明&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;20&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一样的方法 在body里面定义&amp;lt;table&amp;gt;标签（有头就要有尾），上面说过tr是定义表行所以先先一个&amp;lt;tr&amp;gt;元素再把&amp;lt;td&amp;gt;表单元包在里面，这就成为了表格的第一行。同样在写一个一样的成为了表格的第二行&lt;/p&gt;
&lt;p&gt;写完还以后运行看效果会发现并没有表格的存在:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202040669-1909107597.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里面还要补充一个属性，就是border属性 作用是规定表格边框的宽度，如果没有规定那自然会没有表格的出现。&lt;/p&gt;
&lt;p&gt;border属性和&amp;lt;table&amp;gt;元素放在一起。边框宽度设置为1.看效果&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202523854-441003873.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那为什么没有运用到&amp;lt;th&amp;gt;标签呢?&lt;/p&gt;
&lt;p&gt;th元素内部的文本通常会呈现为居中的&lt;span&gt;粗体&lt;span&gt;文本，而td元素内的文本通常是左对齐的普通文本。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以看到效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202947070-1036613896.png&quot; alt=&quot;&quot;/&gt;对比用td的&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202523854-441003873.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;caption&amp;gt;标签&lt;/p&gt;
&lt;p&gt;作用是定义表格的标题，&amp;lt;caption&amp;gt;标签必须放置到&amp;lt;table&amp;gt;标签之后。每个表格最多规定一个标题。他一般都会显示在表格上方。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;HTML5标签的认识&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;小明&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;20&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411203502904-863710032.png&quot; alt=&quot;&quot; width=&quot;266&quot; height=&quot;127&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注：如果需要将内容纵横跨多个行或列，请使用rowspan和colspan属性。&lt;/p&gt;
&lt;p&gt; 例如：&lt;/p&gt;
&lt;p&gt;我做了一个学生信息表，要获取姓名和性别 还有一张学生照片。但这张图占了表格的三列，使用使用colspan属性来合并&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411204942767-1934425808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 代码如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;colspan的使用&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;600&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;border:3px dotted blue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;个人信息&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50x&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50px&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Mary&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50px&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50px&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;照片&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;colspan&lt;/span&gt;&lt;span&gt;=&quot;3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;C:\Users\XYM\Desktop\图\头像.jpg&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;200&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;200&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411205344634-1635464274.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411205417493-328910567.png&quot; alt=&quot;&quot; width=&quot;651&quot; height=&quot;261&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、&amp;lt;audio&amp;gt;标签&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;audio&amp;gt; 标签定义声音，比如音乐或其他音频流。&lt;/p&gt;
&lt;p&gt;目前，&amp;lt;audio&amp;gt; 元素支持的3种文件格式：MP3、Wav、Ogg。是HTML5中的新的标签。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;简单的音频&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;audio &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;01.mp3&quot;&lt;/span&gt;&lt;span&gt; controls&lt;/span&gt;&lt;span&gt;=&quot;controls&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; src里是写音频的路径。&lt;/p&gt;
&lt;p&gt;controls属性供添加音频播放，暂停和音量的控件&lt;/p&gt;
&lt;p&gt;运行效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411210447542-222838794.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这就是一首音频音乐了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、&amp;lt;video&amp;gt;标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;定义视频&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;lt;video&amp;gt;标签和&amp;lt;audio&amp;gt;b标签相似，都是HTML5中的新标签，解决一些网页播放的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;video有支持三种视频格式：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　1、ogg = 带有Theora视频的编码和Vorbis音频编码的Ogg文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2、MPEG4 = 带有H.264视频编码和AAC音频编码的MPEG 4 文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　3、WebM = 带有 VP8视频编码和Vorbis音频编码的WebM文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;简单代码&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;简单的Video&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;video &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;02.mp4&quot;&lt;/span&gt;&lt;span&gt; controls&lt;/span&gt;&lt;span&gt;=&quot;controls&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;video&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411211356347-569571872.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这篇笔记的重点是 掌握列表标签的运用和掌握网页中的音频和视频的运用。希望大家能掌握运用，为以后的学习打下基础。&lt;/p&gt;

</description>
<pubDate>Thu, 11 Apr 2019 13:17:00 +0000</pubDate>
<dc:creator>Eden-Xie</dc:creator>
<og:description>这篇随笔继续来认识HTML标签。这次随笔主要是对&lt;table&gt;标签的认识和最近我学习到的一些标签来和大家分享。 一、&lt;table&gt;标签 &lt;table&gt;标签的作用主要</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xym15079750872/p/10692657.html</dc:identifier>
</item>
<item>
<title>对HTML5标签的认识(三) - Eden-Xie</title>
<link>http://www.cnblogs.com/xym15079750872/p/10692658.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xym15079750872/p/10692658.html</guid>
<description>&lt;p&gt;&lt;em&gt;&lt;span&gt;这篇随笔继续来认识&lt;/span&gt;&lt;span&gt;HTML&lt;/span&gt;&lt;span&gt;标签。这次随笔主要是对&amp;lt;table&amp;gt;标签的认识和最近我学习到的一些标签来和大家分享。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、&amp;lt;table&amp;gt;标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;lt;table&amp;gt;标签的作用主要是定义HTML表格,&amp;lt;table&amp;gt;内也分头&amp;lt;thead&amp;gt;和主体&amp;lt;tbody&amp;gt;,而简单的HTML表格由table元素以及一个或者多个tr，th或者td元素组成&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;tr元素定义表格的行，th元素定义列头，td元素定义表格单元。也有更复杂的HTML表格可能包括&amp;lt;caption&amp;gt;定义表格标题，&amp;lt;thead&amp;gt; 标签用于组合 HTML 表格的表头内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体怎么用呢，一个最简单的HTML表格     代码如下：&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;HTML5标签的认识&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;小明&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;20&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一样的方法 在body里面定义&amp;lt;table&amp;gt;标签（有头就要有尾），上面说过tr是定义表行所以先先一个&amp;lt;tr&amp;gt;元素再把&amp;lt;td&amp;gt;表单元包在里面，这就成为了表格的第一行。同样在写一个一样的成为了表格的第二行&lt;/p&gt;
&lt;p&gt;写完还以后运行看效果会发现并没有表格的存在:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202040669-1909107597.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里面还要补充一个属性，就是border属性 作用是规定表格边框的宽度，如果没有规定那自然会没有表格的出现。&lt;/p&gt;
&lt;p&gt;border属性和&amp;lt;table&amp;gt;元素放在一起。边框宽度设置为1.看效果&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202523854-441003873.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那为什么没有运用到&amp;lt;th&amp;gt;标签呢?&lt;/p&gt;
&lt;p&gt;th元素内部的文本通常会呈现为居中的&lt;span&gt;粗体&lt;span&gt;文本，而td元素内的文本通常是左对齐的普通文本。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以看到效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202947070-1036613896.png&quot; alt=&quot;&quot;/&gt;对比用td的&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411202523854-441003873.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;caption&amp;gt;标签&lt;/p&gt;
&lt;p&gt;作用是定义表格的标题，&amp;lt;caption&amp;gt;标签必须放置到&amp;lt;table&amp;gt;标签之后。每个表格最多规定一个标题。他一般都会显示在表格上方。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;HTML5标签的认识&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;小明&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;20&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411203502904-863710032.png&quot; alt=&quot;&quot; width=&quot;266&quot; height=&quot;127&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注：如果需要将内容纵横跨多个行或列，请使用rowspan和colspan属性。&lt;/p&gt;
&lt;p&gt; 例如：&lt;/p&gt;
&lt;p&gt;我做了一个学生信息表，要获取姓名和性别 还有一张学生照片。但这张图占了表格的三列，使用使用colspan属性来合并&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411204942767-1934425808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 代码如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;colspan的使用&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;600&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;border:3px dotted blue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;个人信息&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;caption&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50x&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50px&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Mary&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50px&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&quot;150&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;50px&quot;&lt;/span&gt;&lt;span&gt; align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;align&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;照片&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;colspan&lt;/span&gt;&lt;span&gt;=&quot;3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;C:\Users\XYM\Desktop\图\头像.jpg&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;200&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;200&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411205344634-1635464274.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411205417493-328910567.png&quot; alt=&quot;&quot; width=&quot;651&quot; height=&quot;261&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、&amp;lt;audio&amp;gt;标签&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;audio&amp;gt; 标签定义声音，比如音乐或其他音频流。&lt;/p&gt;
&lt;p&gt;目前，&amp;lt;audio&amp;gt; 元素支持的3种文件格式：MP3、Wav、Ogg。是HTML5中的新的标签。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;简单的音频&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;audio &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;01.mp3&quot;&lt;/span&gt;&lt;span&gt; controls&lt;/span&gt;&lt;span&gt;=&quot;controls&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; src里是写音频的路径。&lt;/p&gt;
&lt;p&gt;controls属性供添加音频播放，暂停和音量的控件&lt;/p&gt;
&lt;p&gt;运行效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411210447542-222838794.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这就是一首音频音乐了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、&amp;lt;video&amp;gt;标签&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;定义视频&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;lt;video&amp;gt;标签和&amp;lt;audio&amp;gt;b标签相似，都是HTML5中的新标签，解决一些网页播放的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;video有支持三种视频格式：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　1、ogg = 带有Theora视频的编码和Vorbis音频编码的Ogg文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2、MPEG4 = 带有H.264视频编码和AAC音频编码的MPEG 4 文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　3、WebM = 带有 VP8视频编码和Vorbis音频编码的WebM文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;简单代码&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;简单的Video&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;video &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;02.mp4&quot;&lt;/span&gt;&lt;span&gt; controls&lt;/span&gt;&lt;span&gt;=&quot;controls&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;video&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1635146/201904/1635146-20190411211356347-569571872.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这篇笔记的重点是 掌握列表标签的运用和掌握网页中的音频和视频的运用。希望大家能掌握运用，为以后的学习打下基础。&lt;/p&gt;

</description>
<pubDate>Thu, 11 Apr 2019 13:17:00 +0000</pubDate>
<dc:creator>Eden-Xie</dc:creator>
<og:description>这篇随笔继续来认识HTML标签。这次随笔主要是对&lt;table&gt;标签的认识和最近我学习到的一些标签来和大家分享。 一、&lt;table&gt;标签 &lt;table&gt;标签的作用主要</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xym15079750872/p/10692658.html</dc:identifier>
</item>
</channel>
</rss>