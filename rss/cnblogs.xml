<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>django第七课模型第三讲 - 风扇1121</title>
<link>http://www.cnblogs.com/donghao1121/p/10447891.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/donghao1121/p/10447891.html</guid>
<description>&lt;p&gt;1.自定义主键字段的创建&lt;br/&gt;　　AutoFiled(pirmary_key=True) # 一般不会自定义&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('45615e38-d507-4146-ae83-de7f860b076e')&quot; readability=&quot;31.5&quot;&gt;&lt;img id=&quot;code_img_closed_45615e38-d507-4146-ae83-de7f860b076e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_45615e38-d507-4146-ae83-de7f860b076e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('45615e38-d507-4146-ae83-de7f860b076e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_45615e38-d507-4146-ae83-de7f860b076e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Grade(models.Model):
    idd &lt;/span&gt;= models.AutoField(primary_key=&lt;span&gt;True)
    name &lt;/span&gt;= models.CharField(max_length=20&lt;span&gt;)
    num &lt;/span&gt;= models.CharField(max_length=20)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt; 2.order_by  asc desc&lt;/p&gt;
&lt;p&gt;　　小写排序默认是asc，倒叙的时候需要调用到desc&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('253ba936-db62-48fc-a952-8255a3f9add2')&quot; readability=&quot;35.5&quot;&gt;&lt;img id=&quot;code_img_closed_253ba936-db62-48fc-a952-8255a3f9add2&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_253ba936-db62-48fc-a952-8255a3f9add2&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('253ba936-db62-48fc-a952-8255a3f9add2',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_253ba936-db62-48fc-a952-8255a3f9add2&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;66&quot;&gt;
&lt;pre&gt;
In [4]: &lt;span&gt;from&lt;/span&gt; django.db.models.functions &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Lower                                                       

In [&lt;/span&gt;5]: res = Student.objects.order_by(Lower(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))                                                      

In [&lt;/span&gt;6]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                   
SELECT `teacher_student`.`id`, `teacher_student`.`name`, `teacher_student`.`age`, `teacher_student`.`sex`, `teacher_student`.`qq`, `teacher_student`.`phone`, `teacher_student`.`c_time` FROM `teacher_student` ORDER BY LOWER(`teacher_student`.`name`) ASC

In [&lt;/span&gt;7]: res = Student.objects.order_by(Lower(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;).desc()) 
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;1. 表关系的创建&lt;br/&gt;- OneToOne&lt;br/&gt;student = models.OneToOneField('Student', on_delete=models.CASCADE)&lt;/p&gt;
&lt;p&gt;　　学生和学生详情表通过外键关联&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('bf26475e-680a-48fc-9b61-786c55fa48a0')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_bf26475e-680a-48fc-9b61-786c55fa48a0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_bf26475e-680a-48fc-9b61-786c55fa48a0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('bf26475e-680a-48fc-9b61-786c55fa48a0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_bf26475e-680a-48fc-9b61-786c55fa48a0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Studentdetail(models.Model):
    num &lt;/span&gt;= models.CharField(max_length=20,default=&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    collage &lt;/span&gt;= models.CharField(max_length=20,default=&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    student &lt;/span&gt;= models.OneToOneField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Student&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)





mysql&lt;/span&gt;&amp;gt;&lt;span&gt; show tables;
&lt;/span&gt;+-----------------------+
| Tables_in_crm         |
+-----------------------+
| django_migrations     |
| teacher_grade         |
| teacher_student       |
| teacher_studentdetail |
+-----------------------+
4 rows &lt;span&gt;in&lt;/span&gt; set (0.00&lt;span&gt; sec)

mysql&lt;/span&gt;&amp;gt;&lt;span&gt; desc teacher_studentdetail;
&lt;/span&gt;+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| id         | int(11)     | NO   | PRI | NULL    | auto_increment |
| num        | varchar(20) | NO   |     | NULL    |                |
| collage    | varchar(20) | NO   |     | NULL    |                |
| student_id | int(11)     | NO   | UNI | NULL    |                |
+------------+-------------+------+-----+---------+----------------+
4 rows &lt;span&gt;in&lt;/span&gt; set (0.00 sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;- OneToMany&lt;br/&gt;grade = models.ForeignKey('Grade', on_delete=models.SET_NULL, null=True)&lt;/p&gt;
&lt;p&gt;学生和班级是一对多的关系&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('70e65288-7c76-4934-bf40-c99eab5fb836')&quot; readability=&quot;35&quot;&gt;&lt;img id=&quot;code_img_closed_70e65288-7c76-4934-bf40-c99eab5fb836&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_70e65288-7c76-4934-bf40-c99eab5fb836&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('70e65288-7c76-4934-bf40-c99eab5fb836',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_70e65288-7c76-4934-bf40-c99eab5fb836&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Student(models.Model):
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     name = models.CharField(max_length=20&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     age = models.SmallIntegerField(default=&lt;span&gt;0)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     sex =models.SmallIntegerField(default=1&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     qq = models.CharField(max_length=20,default=&lt;span&gt;''&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     phone = models.CharField(max_length=20&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     
&lt;span&gt; 8&lt;/span&gt;     c_time = models.DateTimeField(verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     e_time = models.DateTimeField(verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;修改时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, auto_now=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; grade = models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Grade&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=models.SET_NULL,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Grade(models.Model):
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     idd = models.AutoField(primary_key=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     name = models.CharField(max_length=20&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     num = models.CharField(max_length=20)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;br/&gt;- ManyToMany&lt;/p&gt;
&lt;p&gt;多对多需要通过第三张表来实现&lt;/p&gt;
&lt;p&gt;课程表和学生表是多对多关系&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('647f648d-1733-4466-8b83-98abb237e30d')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_647f648d-1733-4466-8b83-98abb237e30d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_647f648d-1733-4466-8b83-98abb237e30d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('647f648d-1733-4466-8b83-98abb237e30d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_647f648d-1733-4466-8b83-98abb237e30d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Course(models.Model):
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     name = models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=20&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     student = models.ManyToManyField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Student&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; mysql&amp;gt;&lt;span&gt; desc teacher_course;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; +-------+-------------+------+-----+---------+----------------+
&lt;span&gt; 8&lt;/span&gt; | Field | Type        | Null | Key | Default | Extra          |
&lt;span&gt; 9&lt;/span&gt; +-------+-------------+------+-----+---------+----------------+
&lt;span&gt;10&lt;/span&gt; | id    | int(11)     | NO   | PRI | NULL    | auto_increment |
&lt;span&gt;11&lt;/span&gt; | name  | varchar(20) | NO   |     | NULL    |                |
&lt;span&gt;12&lt;/span&gt; +-------+-------------+------+-----+---------+----------------+
&lt;span&gt;13&lt;/span&gt; 2 rows &lt;span&gt;in&lt;/span&gt; set (0.00 sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;第三张表：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Enroll(models.Model):
    student &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Student&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    course &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Course&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    pay &lt;/span&gt;= models.FloatField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;缴费金额&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,default=&lt;span&gt;0)
    c_time &lt;/span&gt;= models.DateTimeField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;报名时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,auto_now_add=True)
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
mysql&amp;gt;&lt;span&gt; desc  teacher_enroll;
&lt;/span&gt;+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| id         | int(11)     | NO   | PRI | NULL    | auto_increment |
| pay        | double      | NO   |     | NULL    |                |
| c_time     | datetime(6) | NO   |     | NULL    |                |
| course_id  | int(11)     | NO   | MUL | NULL    |                |
| student_id | int(11)     | NO   | MUL | NULL    |                |
+------------+-------------+------+-----+---------+--------------
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2. 关联表的数据操作&lt;br/&gt;- OneToMany&lt;br/&gt;- 正向 一个模型如果定义了一个外键字段，通过这个模型操作外键&lt;br/&gt;增&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('557d48fe-e0ae-48b3-ab09-6189c862bf03')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_557d48fe-e0ae-48b3-ab09-6189c862bf03&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_557d48fe-e0ae-48b3-ab09-6189c862bf03&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('557d48fe-e0ae-48b3-ab09-6189c862bf03',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_557d48fe-e0ae-48b3-ab09-6189c862bf03&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
In [3]: s =&lt;span&gt; Student()                                                                                      


In [&lt;/span&gt;5&lt;span&gt;]: Student.objects.all()                                                                              
Out[&lt;/span&gt;5]: &amp;lt;QuerySet []&amp;gt;&lt;span&gt;

In [&lt;/span&gt;6]: s.name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;xinlan&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;                                                                                    

In [&lt;/span&gt;7&lt;span&gt;]: Student.objects.all()                                                                              
Out[&lt;/span&gt;7]: &amp;lt;QuerySet []&amp;gt;&lt;span&gt;

In [&lt;/span&gt;9]: g1 =&lt;span&gt; Grade.objects.first()                                                               

In [&lt;/span&gt;10&lt;span&gt;]: g1                                                                                                
Out[&lt;/span&gt;10]: &amp;lt;Grade: 33qi-djangokuangjia&amp;gt;&lt;span&gt;

In [&lt;/span&gt;11]: s.grade=&lt;span&gt;g1                                                                                        

In [&lt;/span&gt;12&lt;span&gt;]: s.save() 










In [&lt;/span&gt;13]: s2 = Student(name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;weimingka&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)                                                                    

In [&lt;/span&gt;14]: g2 =&lt;span&gt; Grade.objects.last()                                                                         

In [&lt;/span&gt;15]: s2.grade_id=&lt;span&gt;g2.idd 
In [&lt;/span&gt;16]: s2.save()
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;删&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('37803238-21ce-490d-87d8-8c25636c7506')&quot; readability=&quot;31&quot;&gt;&lt;img id=&quot;code_img_closed_37803238-21ce-490d-87d8-8c25636c7506&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_37803238-21ce-490d-87d8-8c25636c7506&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('37803238-21ce-490d-87d8-8c25636c7506',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_37803238-21ce-490d-87d8-8c25636c7506&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
In [15]: s.grade =&lt;span&gt;None                                                                                     

In [&lt;/span&gt;16&lt;span&gt;]: s.save()                                                                                          

In [&lt;/span&gt;17]: s=&lt;span&gt; Student.objects.first()                                                                        

In [&lt;/span&gt;18]: s.grade
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;改&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('19afece1-2e68-4892-b7aa-ccb1bec1484a')&quot; readability=&quot;31.5&quot;&gt;&lt;img id=&quot;code_img_closed_19afece1-2e68-4892-b7aa-ccb1bec1484a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_19afece1-2e68-4892-b7aa-ccb1bec1484a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('19afece1-2e68-4892-b7aa-ccb1bec1484a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_19afece1-2e68-4892-b7aa-ccb1bec1484a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
In [8]: g2=&lt;span&gt;Grade.objects.last()                                                                            

In [&lt;/span&gt;9&lt;span&gt;]: g2                                                                                                 
Out[&lt;/span&gt;9]: &amp;lt;Grade: 34qi-pachou&amp;gt;&lt;span&gt;

In [&lt;/span&gt;10]: s.grade=&lt;span&gt; g2                                                                                       

In [&lt;/span&gt;11&lt;span&gt;]: s.save()             
In [&lt;/span&gt;14&lt;span&gt;]: s.grade                                                                                           
Out[&lt;/span&gt;14]: &amp;lt;Grade: 34qi-pachou&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;查&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('636c1383-6aa2-47e8-a447-2fdea422915f')&quot; readability=&quot;31.5&quot;&gt;&lt;img id=&quot;code_img_closed_636c1383-6aa2-47e8-a447-2fdea422915f&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_636c1383-6aa2-47e8-a447-2fdea422915f&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('636c1383-6aa2-47e8-a447-2fdea422915f',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_636c1383-6aa2-47e8-a447-2fdea422915f&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
In [37&lt;span&gt;]: s2                                                                                                
Out[&lt;/span&gt;37]: &amp;lt;Student: weimingkai-0&amp;gt;&lt;span&gt;

In [&lt;/span&gt;38&lt;span&gt;]: s2.name                                                                                           
Out[&lt;/span&gt;38]: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;weimingkai&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

In [&lt;/span&gt;39&lt;span&gt;]: s2.grade.name                                                                                     
Out[&lt;/span&gt;39]: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pachou&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

In [&lt;/span&gt;40&lt;span&gt;]: s2.grade.num                                                                                      
Out[&lt;/span&gt;40]: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;34qi&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;br/&gt;- 反向&lt;br/&gt;增&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('93923f07-b210-4176-a71f-9e588906b024')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_93923f07-b210-4176-a71f-9e588906b024&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_93923f07-b210-4176-a71f-9e588906b024&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('93923f07-b210-4176-a71f-9e588906b024',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_93923f07-b210-4176-a71f-9e588906b024&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
In [41]: g3 =Grade.objects.create(name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jinjie&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,num=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;40qi&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)                                                

In [&lt;/span&gt;42]: g3.student_set.create(name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;lipenghao&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)                                                           
Out[&lt;/span&gt;42]: &amp;lt;Student: lipenghao-0&amp;gt;&lt;span&gt;

In [&lt;/span&gt;43&lt;span&gt;]: g3.student_set.add(s)                                                                             

In [&lt;/span&gt;44&lt;span&gt;]: g3.student_set.all()                                                                              
Out[&lt;/span&gt;44]: &amp;lt;QuerySet [&amp;lt;Student: xinlan-0&amp;gt;, &amp;lt;Student: lipenghao-0&amp;gt;]&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;删&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('424db8ac-b89a-4e5b-948b-09f98f24a9cc')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_424db8ac-b89a-4e5b-948b-09f98f24a9cc&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_424db8ac-b89a-4e5b-948b-09f98f24a9cc&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('424db8ac-b89a-4e5b-948b-09f98f24a9cc',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_424db8ac-b89a-4e5b-948b-09f98f24a9cc&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&lt;span&gt;删除
In [&lt;/span&gt;49&lt;span&gt;]: g3.student_set.remove(s)                                                                          

In [&lt;/span&gt;50&lt;span&gt;]: g3.student_set.all()                                                                              
Out[&lt;/span&gt;50]: &amp;lt;QuerySet [&amp;lt;Student: lipenghao-0&amp;gt;]&amp;gt;&lt;span&gt;


清空
In [&lt;/span&gt;51&lt;span&gt;]: g3.student_set.clear()                                                                            

In [&lt;/span&gt;52&lt;span&gt;]: g3.student_set.all()                                                                              
Out[&lt;/span&gt;52]: &amp;lt;QuerySet []&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;改&lt;/p&gt;
&lt;p&gt;先执行clear清空，在添加列表&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('1d5bf23d-4c2d-4672-9c1b-facb6ee1b066')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_1d5bf23d-4c2d-4672-9c1b-facb6ee1b066&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1d5bf23d-4c2d-4672-9c1b-facb6ee1b066&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('1d5bf23d-4c2d-4672-9c1b-facb6ee1b066',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1d5bf23d-4c2d-4672-9c1b-facb6ee1b066&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
In [54&lt;span&gt;]: g3.student_set.set([s,s2])                                                                        

In [&lt;/span&gt;55&lt;span&gt;]: g3.student_set.all()                                                                              
Out[&lt;/span&gt;55]: &amp;lt;QuerySet [&amp;lt;Student: xinlan-0&amp;gt;, &amp;lt;Student: weimingkai-0&amp;gt;]&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;查&lt;/p&gt;
&lt;p&gt;出现学生表里面的课程&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('72eac15c-6560-44a5-ac41-cfde5391a3eb')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_72eac15c-6560-44a5-ac41-cfde5391a3eb&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_72eac15c-6560-44a5-ac41-cfde5391a3eb&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('72eac15c-6560-44a5-ac41-cfde5391a3eb',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_72eac15c-6560-44a5-ac41-cfde5391a3eb&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
In [59]: res = Student.objects.filter(grade__name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;djangokuangjia&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)                                        

In [&lt;/span&gt;60]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                  
SELECT `teacher_student`.`id`, `teacher_student`.`name`, `teacher_student`.`age`, `teacher_student`.`sex`, `teacher_student`.`qq`, `teacher_student`.`phone`, `teacher_student`.`grade_id`, `teacher_student`.`c_time`, `teacher_student`.`e_time` FROM `teacher_student` INNER JOIN `teacher_grade` ON (`teacher_student`.`grade_id` &lt;/span&gt;= `teacher_grade`.`idd`) WHERE `teacher_grade`.`name` = djangokuangjia
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;-Many-to-Many&lt;br/&gt;*** 指定了中间表，add，remove，set 都不能用，必须用中间表&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
In [73]: Enroll.objects.create(student=s2,course=&lt;span&gt;c3)                                                       
Out[&lt;/span&gt;73]: &amp;lt;Enroll: weimingkai-0-english&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
In [75&lt;span&gt;]: c1.student                                                                                        
Out[&lt;/span&gt;75]: &amp;lt;django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.&amp;lt;locals&amp;gt;.ManyRelatedManager at 0x7fa557bec5f8&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;-One-to-One&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('fba378dc-6bfe-4026-91ba-f17acea420c1')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_fba378dc-6bfe-4026-91ba-f17acea420c1&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_fba378dc-6bfe-4026-91ba-f17acea420c1&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('fba378dc-6bfe-4026-91ba-f17acea420c1',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_fba378dc-6bfe-4026-91ba-f17acea420c1&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
In [80]: sd = Studentdetail.objects.create(num=2019020001,collage=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jialidun&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,student=&lt;span&gt;s2)                   

In [&lt;/span&gt;81&lt;span&gt;]: sd                                                                                                
Out[&lt;/span&gt;81]: &amp;lt;Studentdetail: Studentdetail object (1)&amp;gt;&lt;span&gt;

In [&lt;/span&gt;82&lt;span&gt;]: sd.student                                                                                        
Out[&lt;/span&gt;82]: &amp;lt;Student: weimingkai-0&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;反向&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1501100/201902/1501100-20190227235110102-1909581295.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 3. 跨表查询&lt;/p&gt;
&lt;p&gt;　　查询男生报了什么课程？&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a0f03982-61c2-45e0-a007-86fe02d3b7a0')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_a0f03982-61c2-45e0-a007-86fe02d3b7a0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a0f03982-61c2-45e0-a007-86fe02d3b7a0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a0f03982-61c2-45e0-a007-86fe02d3b7a0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a0f03982-61c2-45e0-a007-86fe02d3b7a0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
In [88]: res = Course.objects.filter(student__sex=1&lt;span&gt;)                                                       

In [&lt;/span&gt;89]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                  
SELECT `teacher_course`.`id`, `teacher_course`.`name` FROM `teacher_course` INNER JOIN `teacher_enroll` ON (`teacher_course`.`id` &lt;/span&gt;= `teacher_enroll`.`course_id`) INNER JOIN `teacher_student` ON (`teacher_enroll`.`student_id` = `teacher_student`.`id`) WHERE `teacher_student`.`sex` = 1
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;查询所有报名Python课程的学员&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('0190c7af-63f2-454f-8416-fa20c5440cd3')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_0190c7af-63f2-454f-8416-fa20c5440cd3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_0190c7af-63f2-454f-8416-fa20c5440cd3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('0190c7af-63f2-454f-8416-fa20c5440cd3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_0190c7af-63f2-454f-8416-fa20c5440cd3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
In [90]: res = Student.objects.filter(course__name__contains=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;python&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)                                     

In [&lt;/span&gt;91]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                  
SELECT `teacher_student`.`id`, `teacher_student`.`name`, `teacher_student`.`age`, `teacher_student`.`sex`, `teacher_student`.`qq`, `teacher_student`.`phone`, `teacher_student`.`grade_id`, `teacher_student`.`c_time`, `teacher_student`.`e_time` FROM `teacher_student` INNER JOIN `teacher_enroll` ON (`teacher_student`.`id` &lt;/span&gt;= `teacher_enroll`.`student_id`) INNER JOIN `teacher_course` ON (`teacher_enroll`.`course_id` = `teacher_course`.`id`) WHERE `teacher_course`.`name` LIKE BINARY %python%
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;查询所欲报名英语33期的学园&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('1afb665b-af4f-4dd7-807f-a030b659678b')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_1afb665b-af4f-4dd7-807f-a030b659678b&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1afb665b-af4f-4dd7-807f-a030b659678b&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('1afb665b-af4f-4dd7-807f-a030b659678b',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1afb665b-af4f-4dd7-807f-a030b659678b&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
In [93]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                  
SELECT `teacher_student`.`id`, `teacher_student`.`name`, `teacher_student`.`age`, `teacher_student`.`sex`, `teacher_student`.`qq`, `teacher_student`.`phone`, `teacher_student`.`grade_id`, `teacher_student`.`c_time`, `teacher_student`.`e_time` FROM `teacher_student` INNER JOIN `teacher_enroll` ON (`teacher_student`.`id` &lt;/span&gt;= `teacher_enroll`.`student_id`) INNER JOIN `teacher_course` ON (`teacher_enroll`.`course_id` = `teacher_course`.`id`) INNER JOIN `teacher_grade` ON (`teacher_student`.`grade_id` = `teacher_grade`.`idd`) WHERE (`teacher_course`.`name` LIKE BINARY %english% AND `teacher_grade`.`num` LIKE BINARY %33%)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;缴费小于3000的学员&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c00760bd-7872-4e0b-90ae-532f62d2abc3')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_c00760bd-7872-4e0b-90ae-532f62d2abc3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c00760bd-7872-4e0b-90ae-532f62d2abc3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c00760bd-7872-4e0b-90ae-532f62d2abc3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c00760bd-7872-4e0b-90ae-532f62d2abc3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;                                                                                                           
In [&lt;/span&gt;95]: res = Student.objects.filter(enroll__pay__lt=3000&lt;span&gt;)                                                

In [&lt;/span&gt;96]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                  
SELECT `teacher_student`.`id`, `teacher_student`.`name`, `teacher_student`.`age`, `teacher_student`.`sex`, `teacher_student`.`qq`, `teacher_student`.`phone`, `teacher_student`.`grade_id`, `teacher_student`.`c_time`, `teacher_student`.`e_time` FROM `teacher_student` INNER JOIN `teacher_enroll` ON (`teacher_student`.`id` &lt;/span&gt;= `teacher_enroll`.`student_id`) WHERE `teacher_enroll`.`pay` &amp;lt; 3000.0
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;报名python的课有哪些&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('39f77b37-62d1-4f1e-a4dd-fb2f97baecc9')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_39f77b37-62d1-4f1e-a4dd-fb2f97baecc9&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_39f77b37-62d1-4f1e-a4dd-fb2f97baecc9&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('39f77b37-62d1-4f1e-a4dd-fb2f97baecc9',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_39f77b37-62d1-4f1e-a4dd-fb2f97baecc9&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
In [99]: res=Grade.objects.filter(student__course__name__contains=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;python&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)                                

In [&lt;/span&gt;100]: &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res.query)                                                                                 
SELECT `teacher_grade`.`idd`, `teacher_grade`.`name`, `teacher_grade`.`num` FROM `teacher_grade` INNER JOIN `teacher_student` ON (`teacher_grade`.`idd` &lt;/span&gt;= `teacher_student`.`grade_id`) INNER JOIN `teacher_enroll` ON (`teacher_student`.`id` = `teacher_enroll`.`student_id`) INNER JOIN `teacher_course` ON (`teacher_enroll`.`course_id` = `teacher_course`.`id`) WHERE `teacher_course`.`name` LIKE BINARY %python%
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

</description>
<pubDate>Wed, 27 Feb 2019 16:00:00 +0000</pubDate>
<dc:creator>风扇1121</dc:creator>
<og:description>1.自定义主键字段的创建 AutoFiled(pirmary_key=True) # 一般不会自定义 class Grade(models.Model): idd = models.AutoField</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/donghao1121/p/10447891.html</dc:identifier>
</item>
<item>
<title>Perl IO：文件锁 - 骏马金龙</title>
<link>http://www.cnblogs.com/f-ck-need-u/p/10447881.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/f-ck-need-u/p/10447881.html</guid>
<description>&lt;h2 id=&quot;文件锁&quot;&gt;文件锁&lt;/h2&gt;
&lt;p&gt;当多个进程或多个程序都想要修同一个文件的时候，如果不加控制，多进程或多程序将可能导致文件更新的丢失。&lt;/p&gt;
&lt;p&gt;例如进程1和进程2都要写入数据到a.txt中，进程1获取到了文件句柄，进程2也获取到了文件句柄，然后进程1写入一段数据，进程2写入一段数据，进程1关闭文件句柄，会将数据flush到文件中，进程2也关闭文件句柄，也将flush到文件中，于是进程1的数据被进程2保存的数据覆盖了。&lt;/p&gt;
&lt;p&gt;所以，多进程修改同一文件的时候，需要协调每个进程：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;保证文件在同一时间只能被一个进程修改，只有进程1修改完成之后，进程2才能获得修改权&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;进程1获得了修改权，就不允许进程2去读取这个文件的数据，因为进程2可能读取出来的数据是进程1修改前的过期数据&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这种协调方式可以通过文件锁来实现。文件锁分两种，独占锁(写锁)和共享锁(读锁)。当进程想要修改文件的时候，申请独占锁(写锁)，当进程想要读取文件数据的时候，申请共享锁(读锁)。&lt;/p&gt;
&lt;p&gt;独占锁和独占锁、独占锁和共享锁都是互斥的。只要进程1持有了独占锁，进程2想要申请独占锁或共享锁都将失败(阻塞)，也就保证了这一时刻只有进程1能修改文件，只有当进程1释放了独占锁，进程2才能继续申请到独占锁或共享锁。但是共享锁和共享锁是可以共存的，这代表的是两个进程都只是要去读取数据，并不互相冲突。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;        独占锁       共享锁
独占锁     ×           ×
共享锁     ×           √&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;文件锁flock和lockf&quot;&gt;文件锁：flock和lockf&lt;/h2&gt;
&lt;p&gt;Linux上的文件锁类型主要有两种：flock和lockf。后者是fcntl系统调用的一个封装。它们之间有些区别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;flock来自BSD，而fcntl或lockf来自POSIX，所以lockf或fcntl实现的锁也称为POSIX锁&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;flock只能对整个文件加锁，而fcntl或lockf可以对文件中的部分加锁，即粒度更细的记录锁&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;flock的锁是劝告锁，lockf或fcntl可以实现强制锁。所谓劝告锁，是指只有多进程双方都遵纪守法地使用flock锁才有意义，某进程使用flock，但另一进程不使用flock，则flock锁对另一进程完全无限制&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flock锁是附加在(关联在)文件描述符上的&lt;/strong&gt;，而lockf是关联在文件实体上的。本文后面将详细分析flock锁在文件描述符上的现象&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Perl中主要使用flock来实现文件锁，也是本文的主要内容。&lt;/p&gt;
&lt;h2 id=&quot;perl的flock&quot;&gt;Perl的flock&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;flock FILEHANDLE, flags;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;flock两个参数，第一个是文件句柄，第二个是锁标志。&lt;/p&gt;
&lt;p&gt;锁标志有4种，有数值格式的1、2、8、4，在导入Fcntl模块的&lt;code&gt;:flock&lt;/code&gt;后，也支持字符格式的&lt;code&gt;LOCK_SH&lt;/code&gt;、&lt;code&gt;LOCK_EX&lt;/code&gt;、&lt;code&gt;LOCK_UN&lt;/code&gt;、&lt;code&gt;LOCK_NB&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;字符格式      数值格式      意义
-----------------------------------
LOCK_SH        1        申请共享锁
LOCK_EX        2        申请独占锁
LOCK_UN        8        释放锁
LOCK_NB        4        非阻塞模式&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;独占锁和独占锁、独占锁和共享锁是冲突的。所以，当进程1持有独占锁时，进程2想要申请独占锁或共享锁默认将被阻塞。如果使用了非阻塞模式，那么本该阻塞的过程将立即返回，而不是阻塞等待其它进程释放锁。非阻塞模式可以结合共享锁或独占锁使用。所以，有下面几种方式：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;use Fcntl qw(:flock);

flock $fh, LOCK_SH;    # 申请共享锁
flock $fh, LOCK_EX;    # 申请独占锁
flock $fh, LOCK_UN;    # 释放锁
flock $fh, LOCK_SH | LOCK_NB;  # 以非阻塞的方式申请共享锁
flock $fh, LOCK_EX | LOCK_NB;  # 以非阻塞的方式申请独占锁&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;flock在操作成功时返回true，否则返回false&lt;/strong&gt;。例如，在申请锁的时候，无论是否使用了非阻塞模式，只要没申请到锁就返回false，否则返回true，而在释放锁的时候，成功释放则返回true。&lt;/p&gt;
&lt;p&gt;例如，两个程序(不是单程序内的两个进程，这种情况后面分析)同时运行，其中一个程序写a.txt文件，另一个程序读a.txt文件，但要保证先写完再读。&lt;/p&gt;
&lt;p&gt;程序1的代码内容：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#!/usr/bin/perl

use strict;
use warnings;
use Fcntl qw(:flock);

open my $fh, '&amp;gt;', &quot;a.txt&quot;
    or die &quot;open failed: $!&quot;;

flock $fh, LOCK_EX;
print $fh, &quot;Hello World1\n&quot;;
print $fh, &quot;Hello World2\n&quot;;
print $fh, &quot;Hello World3\n&quot;;

flock $fh, LOCK_UN;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;程序2的代码内容：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#!/usr/bin/perl

use strict;
use warnings;
use Fcntl qw(:flock);

open my $fh, '&amp;lt;', &quot;a.txt&quot;
    or die &quot;open failed: $!&quot;;

# 非阻塞的方式每秒申请一次共享锁
# 只要没申请成功就返回false
until(flock $fh, LOCK_SH | LOCK_NB){
    print &quot;waiting for lock released\n&quot;;
    sleep 1;
}
while(&amp;lt;$fh&amp;gt;){
    print &quot;readed: $_&quot;;
}

flock $fh, LOCK_UN;&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;fork文件句柄文件描述符和锁的关系&quot;&gt;fork、文件句柄、文件描述符和锁的关系&lt;/h2&gt;
&lt;p&gt;在开始之前，先看看在Perl中的fork、文件句柄、文件描述符、flock之间的结论。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;文件句柄是指向文件描述符的，文件描述符是指向实体文件的(假如是实体文件的描述符的话)&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;fork只会复制文件句柄，不会复制文件描述符，而是通过复制的不同文件句柄指向同一个文件描述符而实现文件描述符共享&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;通过引用计数的方式来计算某个文件描述符上文件句柄的数量&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;close()一次表示引用数减1，直到所有文件句柄都关闭了即引用数为0时，文件描述符才被关闭&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;flock是附在文件描述符上的，不是文件句柄也不是实体文件上的&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;flock是进程级别的，不适用于在多线程中使用它来锁互斥&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;所以fork后的父子进程在共享文件描述符的同时也会共享flock锁&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flock $fh, LOCK_UN&lt;/code&gt;会直接释放文件描述符上的锁&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;当文件描述符被关闭时，文件描述符上的锁也会自动释放。所以使用close()去释放锁的时候，必须要保证所有文件句柄都被关闭才能关闭文件描述符从而释放锁&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;flock（包括加锁和解锁）或close()都会自动flush IO Buffer，保证多进程间获取锁时数据同步&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;只要持有了某个文件描述符上的锁，在这把锁释放之前，自己可以随意更换锁的类型，例如多次flock从EX锁变成SH锁&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/733013/201902/733013-20190227160356706-258328288.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面是正式介绍和解释。&lt;/p&gt;
&lt;p&gt;在C或操作系统上的fork会复制(dup)文件描述符，使得父子进程对同一文件使用不同文件描述符。但&lt;strong&gt;Perl的fork只会复制文件句柄而不会复制文件描述符，父子进程的不同文件句柄会共享同一个文件描述符，并使用引用计数的方式来统计有多少个文件句柄在使用这个文件描述符&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;之所以复制文件句柄是因为文件句柄在Perl中是一种变量类型，在不同作用域内是互相独立的。而文件描述符对Perl来说相对更底层一些，属于操作系统的数据资源，对Perl来说是属于可以共享的数据。&lt;/p&gt;
&lt;p&gt;也就是说，如果只fork了一次，那么父子进程的两个文件句柄都共享同一个文件描述符，都指向这个文件描述符，这个文件描述符上的引用计数为2。当父进程close关闭了该文件描述符上的一个文件句柄，子进程需要也关闭一次才是真的关闭这个文件描述符。&lt;/p&gt;
&lt;p&gt;不仅如此，由于文件描述符是共享的，&lt;strong&gt;导致加在文件描述符上的锁(比如flock锁)在父子进程上看上去也是共享的。尽管只在父子某一个进程上加一把锁，但这两个进程都将持有这把锁。如果想要释放这个文件描述符上的锁，直接unlock(&lt;code&gt;flock $fh, LOCK_UN&lt;/code&gt;)或关闭文件描述符即可&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但是注意，&lt;strong&gt;close()关闭的只是文件描述符上的一个文件句柄引用，在文件描述符真的被关闭之前(即所有文件句柄都被关掉)，锁会一直存在于描述符上&lt;/strong&gt;。所以，很多时候使用close去释放时的操作(之所以使用close而非unlock类操作，是因为unlock存在race condition，多个进程可能会在释放锁的同时抢到那个文件的锁)，可能需要在多个进程中都执行，而使用unlock类的操作只需在父子中的任何一进程中即可释放锁。&lt;/p&gt;
&lt;p&gt;例如，分析下面的代码中父进程三处加独占锁位置(1)、(2)、(3)对子进程中加共享锁的影响。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;use Fcntl qw(:flock);

open my $fh, &quot;&amp;gt;&quot;, &quot;a.log&quot;;
# (1) flock $fh, LOCK_EX;

# 这里开始fork子进程
my $pid = fork;
# (3) flock $fh, LOCK_EX;

unless($pid){
    # 子进程
    # flock $fh, LOCK_SH;
}

# 父进程
# (2) flock $fh, LOCK_EX;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;首先分析父进程在(3)处加锁对子进程的影响。(3)是在fork后且进入子进程代码段之前运行的，也就是说父子进程都执行了一次flock加独占锁，显然只有一个进程能够加锁。&lt;strong&gt;但无论是谁加锁了，这个描述符上的锁对另一个进程都是共享的，也就是两个进程都持有EX锁，这似乎违背了我们对独占锁的独占性常识，但并没有，因为实际上文件描述符上只有一个锁，只不过这个锁被两个进程中的文件句柄持有了。因为子进程也持有EX锁，自己可以直接申请SH锁实现自己的锁切换&lt;/strong&gt;，如果父进程这时还没有关闭文件句柄或解锁，它也将持有SH锁。&lt;/p&gt;
&lt;p&gt;再看父进程中加在(1)或(2)处的独占锁，他们其实是等价的，因为在有了子进程后，无论在哪里加锁，锁(文件描述符)都是共享的，引用计数都会是2。这时子进程要获取共享锁是完全无需阻塞的，因为它自己就持有了独占锁。&lt;/p&gt;
&lt;p&gt;也就是说，上面无论是在(1)、(2)还是(3)处加锁，在子进程中都能随意无阻塞换锁，因为子进程在换锁前已经持有了这个文件描述符上的锁。&lt;/p&gt;
&lt;p&gt;那么上面的示例中，&lt;strong&gt;如何让子进程申请互斥锁的时候被阻塞？只需在子进程中打开这个文件的新文件句柄即可，它会创建一个新的文件描述符，在两个文件描述符上申请锁时会检查锁的互斥性&lt;/strong&gt;。但是必须记住，&lt;strong&gt;要让子进程能成功申请到互斥锁，必须在父进程中unlock或者在父子进程中都close()，往往我们会忘记在子进程中也关闭文件句柄而导致文件描述符继续存在，其上的锁也继续保留，从而导致子进程在该文件描述符上持有的锁阻塞了自己去申请其它描述符的锁&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;例如，下面在子进程中打开了新的&lt;code&gt;$fh1&lt;/code&gt;，且父子进程都使用close()来保证文件描述符的关闭、锁的释放。当然，也可以直接在父或子进程中使用一次&lt;code&gt;flock $fh, LOCK_UN&lt;/code&gt;来直接释放锁。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;use Fcntl qw(:flock);

open my $fh, &quot;&amp;gt;&quot;, &quot;a.log&quot;;
# (1) flock $fh, LOCK_EX;

# 这里开始fork子进程
my $pid = fork;
# (3) flock $fh, LOCK_EX;

unless($pid){
    # 子进程
    open $fh1, &quot;&amp;gt;&quot;, &quot;a.log&quot;;
    close $fh;     # close(1)
    # flock $fh1, LOCK_SH;
}

# 父进程
# (2) flock $fh, LOCK_EX;
close $fh;         # close(2)&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Wed, 27 Feb 2019 15:59:00 +0000</pubDate>
<dc:creator>骏马金龙</dc:creator>
<og:description>文件锁 当多个进程或多个程序都想要修同一个文件的时候，如果不加控制，多进程或多程序将可能导致文件更新的丢失。 例如进程1和进程2都要写入数据到a.txt中，进程1获取到了文件句柄，进程2也获取到了文件</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/f-ck-need-u/p/10447881.html</dc:identifier>
</item>
<item>
<title>设置定点数学属性 - MATLAB基于模型的设计</title>
<link>http://www.cnblogs.com/52geek/p/10447850.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/52geek/p/10447850.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;您可以使用&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;span&gt;fimath&lt;/span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;对象控制赋值，加法，减法和乘法的定点数学属性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;可以使用&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://ww2.mathworks.cn/help/fixedpoint/ref/fimath.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;fimath&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;对象附加到&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;span&gt;fi&lt;/span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;对象。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;您可以使用&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;从&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://ww2.mathworks.cn/help/fixedpoint/ref/setfimath.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;网络&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;对象中删除&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://ww2.mathworks.cn/help/fixedpoint/ref/fi.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;fimath&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;对象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;div readability=&quot;155.85628742515&quot;&gt;
&lt;h3 id=&quot;d120e12249&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;设置和删除不动点数学属性&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-1&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;使用通过&lt;/span&gt;&lt;span&gt;状语从句：&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://ww2.mathworks.cn/help/fixedpoint/ref/fimath.html&quot; target=&quot;_blank&quot;&gt; &lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt; &lt;/a&gt;&lt;span&gt;&lt;span&gt;删除函数&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; ，可以将定点操作与全局和本地&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;span&gt;fimath&lt;/span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;设置隔离开来。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;您还可以从没有附加到输出&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;变量的函数返回。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;这使您可以对定点数学设置进行本地控制，而不会干扰其他函数中的设置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;matlab代码&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
function&lt;span&gt; y = user_written_sum（u）
     &lt;/span&gt;％Setup&lt;span&gt; 
    F = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;，&lt;/span&gt;... 
        'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;... 
        'SumMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;，&lt;/span&gt;... 
        'SumWordLength'&lt;span&gt;， 32）;&lt;/span&gt;&lt;span&gt;
    u = setfimath（u，F）;&lt;/span&gt;&lt;span&gt;
    y = fi（0，true，32，get（u，&lt;/span&gt;'FractionLength'&lt;span&gt;），F）;
    &lt;/span&gt;％算法
    为&lt;span&gt; I = 1：长度（U）&lt;/span&gt;&lt;span&gt;
        y（:) = y + u（i）;&lt;/span&gt;
    结束
    ％清理&lt;span&gt;
    y = removefimath（y）;&lt;/span&gt;
结束
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;输出没有附加的fimath&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;当你运行代码时，&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;控制函数内的算术，但返回值没有附加&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;这是由于在函数&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;使用&lt;/span&gt;&lt;/span&gt;&lt;span&gt;了 setfimath&lt;/span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = fi（1：10，true，16,11）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; y = user_written_sum（u）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;y =&lt;/span&gt;&lt;span&gt;
    55&lt;/span&gt;&lt;span&gt;
          DataTypeMode：定点：二进制点&lt;/span&gt;缩放&lt;span&gt;
            签名：签名&lt;/span&gt;&lt;span&gt;
            WordLength：32&lt;/span&gt;&lt;span&gt;
        分数长度：11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;生成的c代码&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;如果您有matlab编码器软件，则可以使用以下命令生成c代码。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = fi（1：10，true，16,11）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; codegen user_written_sum &lt;/span&gt;-args  {u}  -config：lib  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;函数&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;span&gt;定点数学，但变量中包含的基础数据不会更改，因此生成的c代码不会生成任何数据副本。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;int32_T user_written_sum（const int16_T u [10]）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  int32_T y;&lt;/span&gt;&lt;span&gt;
  int32_T i;&lt;/span&gt;&lt;span&gt;
  /* 建立 */&lt;/span&gt;&lt;span&gt;
  y = 0;&lt;/span&gt;&lt;span&gt;
  / *算法* /&lt;/span&gt;&lt;span&gt;
  for（i = 0; i &amp;lt;10; i ++）{&lt;/span&gt;&lt;span&gt;
    y + = u [i];&lt;/span&gt;&lt;span&gt;
  }&lt;/span&gt;&lt;span&gt;
  /* 清理 */&lt;/span&gt;&lt;span&gt;
  回归y;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;d120e12320&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;不匹配的菲马特&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-2&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;当您对&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fi&lt;/code&gt;&lt;span&gt;对象进行操作时，它们&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;属性必须相等，否则您会收到错误。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; A = fi（pi，&lt;/span&gt;'ProductMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; B = fi（2，&lt;/span&gt;'ProductMode'&lt;span&gt;，&lt;/span&gt;'SpecifyPrecision'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; C = A * B.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;使用embedded.fi/mtimes时出错&lt;/span&gt;&lt;span&gt;
两个操作数的embedded.fimath必须相等。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;若要避免此错误，可以从表达式中的一个变量中删除&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;在本例中，表达式在上下文的中从&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;中删除&lt;/span&gt;&lt;/span&gt;&lt;span&gt;fimath&lt;/span&gt;&lt;span&gt;&lt;span&gt;，而不修改&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;B&lt;/code&gt;&lt;span&gt;&lt;span&gt;本身，并使用附加到&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;B&lt;/code&gt;&lt;span&gt;&lt;span&gt;计算产品&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; C = A * removefimath（B）
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;                6.283203125&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;           DataTypeMode：定点：二进制点缩放&lt;/span&gt;&lt;span&gt;
             签名：签名&lt;/span&gt;&lt;span&gt;
             WordLength：32&lt;/span&gt;&lt;span&gt;
         分数长度：26&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;         RoundingMethod：最近的&lt;/span&gt;&lt;span&gt;
         溢出动作：饱和&lt;/span&gt;&lt;span&gt;
            ProductMode：KeepLSB&lt;/span&gt;&lt;span&gt;
      ProductWordLength：32&lt;/span&gt;&lt;span&gt;
                SumMode：FullPrecision&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;d120e12367&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;在临时变量上更改himath&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-3&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;如果您有没有附加&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;的变量，但您想要控制特定的操作，则可以在表达式的上下文中附加&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;，而无需修改变量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;例如，产品是用&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;F&lt;/code&gt;&lt;span&gt;&lt;span&gt;定义的&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;计算的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; F = fimath（&lt;/span&gt;'ProductMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;，&lt;/span&gt;'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; A = fi（pi）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; B = fi（2）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; C = A * setfimath（B，F）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;           DataTypeMode：定点：二进制点缩放&lt;/span&gt;&lt;span&gt;
             签名：签名&lt;/span&gt;&lt;span&gt;
             WordLength：32&lt;/span&gt;&lt;span&gt;
         分数长度：26&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;         RoundingMethod：地板&lt;/span&gt;&lt;span&gt;
         OverflowAction：Wrap&lt;/span&gt;&lt;span&gt;
            ProductMode：KeepLSB&lt;/span&gt;&lt;span&gt;
      ProductWordLength：32&lt;/span&gt;&lt;span&gt;
                SumMode：FullPrecision&lt;/span&gt;&lt;span&gt;
       MaxSumWordLength：128&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;请注意，变量&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;B&lt;/code&gt;&lt;span&gt;不会更改。&lt;/span&gt;&lt;/p&gt;



&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;           DataTypeMode：定点：二进制点缩放&lt;/span&gt;&lt;span&gt;
             签名：签名&lt;/span&gt;&lt;span&gt;
             WordLength：16&lt;/span&gt;&lt;span&gt;
         分数长度：13&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;d120e12411&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;消除循环中的fimath冲突&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-4&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;您可以计算产品和总和，使用dsp的累加器与地板舍入和包装溢出相匹配，并在输出上使用最近的舍入和饱和溢出。&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;为了避免不匹配的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;fimath&lt;/span&gt;&lt;span&gt;&lt;span&gt;错误，可以在与其他变量一起计算时删除输出变量上的&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;matlab代码&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;在本例中，产品为32位，累加器为40位，使最小位与地板舍入和包装溢出，就像c的本机整数规则一样。&lt;/span&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;输出使用最近的舍入和饱和溢出。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
function&lt;span&gt; [y，z] = setfimath_removefimath_in_a_loop（b，a，x，z）
     &lt;/span&gt;％Setup&lt;span&gt; 
    F_floor = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;，&lt;/span&gt;... 
           'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;... 
           'ProductMode'&lt;span&gt;，&lt;/span&gt;' KeepLSB'&lt;span&gt;，&lt;/span&gt;... 
           'ProductWordLength'&lt;span&gt;，32，&lt;/span&gt;... 
           'SumMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;，&lt;/span&gt;...... 
           'SumWordLength'&lt;span&gt;，40）;&lt;/span&gt;&lt;span&gt;
    F_nearest = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'最近'&lt;span&gt;，&lt;/span&gt;...... 
        'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;）;
    &lt;/span&gt;％设置此函数的本地fimath&lt;span&gt;
    b = setfimath（b，F_floor）;&lt;/span&gt;&lt;span&gt;
    a = setfimath（a，F_floor）;&lt;/span&gt;&lt;span&gt;
    x = setfimath（x，F_floor）;&lt;/span&gt;&lt;span&gt;
    z = setfimath（z，F_floor）;&lt;/span&gt;
    ％使用最近的舍入创建y&lt;span&gt;
    y = coder.nullcopy（fi（zeros（size（x）），true，16,14，F_nearest））;&lt;/span&gt;
    ％算法
    为&lt;span&gt;长度（X）：J = 1
         &lt;/span&gt;％最近分配成Y&lt;span&gt;
        y（j）= b（1）* x（j）+ z（1）;&lt;/span&gt;
        ％删除y与其他fimaths的fimath冲突&lt;span&gt;
        z（1）=（b（2）* x（j）+ z（2）） -  a（2）* removefimath（y（j））;&lt;/span&gt;&lt;span&gt;
        z（2）= b（3）* x（j） -  a（3）* removefimath（y（j））;&lt;/span&gt;
    结束
    ％清理：从输出中删除fimath&lt;span&gt;
    y = removefimath（y）;&lt;/span&gt;&lt;span&gt;
    z = removefimath（z）;&lt;/span&gt;
结束
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;代码生成说明&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;如果您有matlab编码器软件，则可以使用以下命令生成具有指定硬件特征的c代码。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;N = 256;&lt;/span&gt;&lt;span&gt;
t = 1：N;&lt;/span&gt;&lt;span&gt;
xstep = [ones（N / 2,1）;  -  ones（N / 2,1）];&lt;/span&gt;&lt;span&gt;
num = [0.0299545822080925 0.0599091644161849 0.0299545822080925];&lt;/span&gt;&lt;span&gt;
den = [1 -1.4542435862515900 0.5740619150839550];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;b = fi（num，true，16）;&lt;/span&gt;&lt;span&gt;
a = fi（den，true，16）;&lt;/span&gt;&lt;span&gt;
x = fi（xstep，true，16,15）;&lt;/span&gt;&lt;span&gt;
zi = fi（零（2,1），真，16,14）;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;B = coder.Constant（b）;&lt;/span&gt;&lt;span&gt;
A = coder.Constant（a）;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;config_obj = coder.config（&lt;/span&gt;'lib'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
config_obj.GenerateReport = true;&lt;/span&gt;&lt;span&gt;
config_obj.LaunchReport = true;&lt;/span&gt;&lt;span&gt;
config_obj.TargetLang = &lt;/span&gt;'C'&lt;span&gt; ;&lt;/span&gt;&lt;span&gt;
config_obj.GenerateComments = true;&lt;/span&gt;&lt;span&gt;
config_obj.GenCodeOnly = true;&lt;/span&gt;&lt;span&gt;
config_obj.HardwareImplementation.ProdBitPerChar = 8;&lt;/span&gt;&lt;span&gt;
config_obj.HardwareImplementation.ProdBitPerShort = 16;&lt;/span&gt;&lt;span&gt;
config_obj.HardwareImplementation.ProdBitPerInt = 32;&lt;/span&gt;&lt;span&gt;
config_obj.HardwareImplementation.ProdBitPerLong = 40;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;代码生成&lt;/span&gt;-config  config_obj  setfimath_removefimath_in_a_loop  -args  {B，A，X，滋}  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;生成的c代码&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;函数&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;span&gt;定点数学，但变量中包含的基础数据不会更改，因此生成的c代码不会生成任何数据副本。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;void setfimath_removefimath_in_a_loop（const int16_T x [256]，int16_T z [2]，&lt;/span&gt;&lt;span&gt;
  int16_T y [256]）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  int32_T j;&lt;/span&gt;&lt;span&gt;
  int40_T i0;&lt;/span&gt;&lt;span&gt;
  int16_T b_y;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  /* 建立 */&lt;/span&gt;&lt;span&gt;
  / *设置此函数的本地fimath * /&lt;/span&gt;&lt;span&gt;
  / *用最近的舍入创建y * /&lt;/span&gt;&lt;span&gt;
  / *算法* /&lt;/span&gt;&lt;span&gt;
  for（j = 0; j &amp;lt;256; j ++）{&lt;/span&gt;&lt;span&gt;
    / *最近的分配到y * /&lt;/span&gt;&lt;span&gt;
    i0 = 15705 * x [j] +（（int40_T）z [0] &amp;lt;&amp;lt; 20）;&lt;/span&gt;&lt;span&gt;
    b_y =（int16_T）（（int32_T）（i0 &amp;gt;&amp;gt; 20）+（（i0＆524288L）！= 0L））;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;    / *删除y与其他fimaths的fimath冲突* /&lt;/span&gt;&lt;span&gt;
    z [0] =（int16_T）（（（31410 * x [j] +（（int40_T）z [1] &amp;lt;&amp;lt; 20）） - （（int40_T）（ -  23826&lt;/span&gt;&lt;span&gt;
      * b_y）&amp;lt;&amp;lt; 6））&amp;gt;&amp;gt; 20）;&lt;/span&gt;&lt;span&gt;
    z [1] =（int16_T）（（15705 * x [j]  - （（int40_T）（9405 * b_y）&amp;lt;&amp;lt; 6））&amp;gt;&amp;gt; 20）;&lt;/span&gt;&lt;span&gt;
    y [j] = b_y;&lt;/span&gt;&lt;span&gt;
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  / *清理：从输出中删除fimath * /&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;d120e12468&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;多态性代码&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-5&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;您可以编写matlab代码，这些代码可用于浮点和定点类型，使用setfimath &lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
function&lt;span&gt; y = user_written_function（u）
     &lt;/span&gt;％Setup&lt;span&gt; 
    F = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;，&lt;/span&gt;...... 
        'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;... 
        'SumMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
    u = setfimath（u，F）;&lt;/span&gt;
    ％算法&lt;span&gt;
    y = u + u;&lt;/span&gt;
    ％ 清理&lt;span&gt;
    y = removefimath（y）;&lt;/span&gt;
结束
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;定点输入&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;当使用定点输入调用该函数时，&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt; &lt;code class=&quot;literal&quot;&gt;F&lt;/code&gt;&lt;span&gt;&lt;span&gt;将用于算术，并且输出没有附加&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = fi（pi / 8，true，16,15，&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Convergent'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; y = user_written_function（u）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;             0.785400390625&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;           DataTypeMode：定点：二进制点缩放&lt;/span&gt;&lt;span&gt;
             签名：签名&lt;/span&gt;&lt;span&gt;
             WordLength：32&lt;/span&gt;&lt;span&gt;
         分数长度：15&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;为固定点生成c代码&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;如果您有matlab编码器软件，则可以使用以下命令生成c代码。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = fi（pi / 8，true，16,15，&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Convergent'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; codegen user_written_function &lt;/span&gt;-args  {u}  -config：lib  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;函数&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;span&gt;定点数学，但变量中包含的基础数据不会更改，因此生成的c代码不会生成任何数据副本。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;int32_T user_written_function（int16_T u）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  /* 建立 */&lt;/span&gt;&lt;span&gt;
  / *算法* /&lt;/span&gt;&lt;span&gt;
  /* 清理 */&lt;/span&gt;&lt;span&gt;
  回报你+你;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;双输入&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;由于&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;状语从句：&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;span&gt;的英文浮点类型的传递，&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;user_written_function&lt;/code&gt;&lt;span&gt;示例也适用于浮点类型。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
function&lt;span&gt; y = user_written_function（u）
     &lt;/span&gt;％Setup&lt;span&gt; 
    F = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;，&lt;/span&gt;...... 
        'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;... 
        'SumMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;）;&lt;/span&gt;&lt;span&gt;
    u = setfimath（u，F）;&lt;/span&gt;
    ％算法&lt;span&gt;
    y = u + u;&lt;/span&gt;
    ％ 清理&lt;span&gt;
    y = removefimath（y）;&lt;/span&gt;
结束
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;为双精度生成的c代码&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;当使用浮点输入编译时，您将获得以下生成的c代码。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; codegen user_written_function &lt;/span&gt;-args  {0}  -config：lib  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;real_T user_written_function（real_T u）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  回报你+你;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;其中&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;real_T&lt;/code&gt;&lt;span&gt;&lt;span&gt;类型被定义为&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;double&lt;/code&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;typedef double real_T;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;d120e12561&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;更多多态代码&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-6&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;编写此函数时，可以将输出创建为与输入的类型相同，因此浮点和定点都可以与输入一起使用。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
function&lt;span&gt; y = user_written_sum_polymorphic（u）
     &lt;/span&gt;％Setup&lt;span&gt; 
    F = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;，&lt;/span&gt;... 
        'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;... 
        'SumMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;，&lt;/span&gt;... 
        'SumWordLength'&lt;span&gt;， 32）;
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;     u = setfimath（u，F）;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;     如果是isfi（你）&lt;/span&gt;&lt;span&gt;
         y = fi（0，true，32，get（u，'FractionLength'），F）;&lt;/span&gt;&lt;span&gt;
     其他&lt;/span&gt;&lt;span&gt;
         y =零（1,1，class（u））;&lt;/span&gt;&lt;span&gt;
     结束&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;     ％算法&lt;/span&gt;&lt;span&gt;
     对于i = 1：长度（u）&lt;/span&gt;&lt;span&gt;
         y（:) = y + u（i）;&lt;/span&gt;&lt;span&gt;
     结束&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;     ％ 清理&lt;/span&gt;&lt;span&gt;
     y = removefimath（y）;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;固定点生成的c代码&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;如果您有matlab编码器软件，则可以使用以下命令生成定点c代码。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = fi（1：10，true，16,11）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; codegen user_written_sum_polymorphic &lt;/span&gt;-args  {u}  -config：lib  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;函数&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;removefimath&lt;/code&gt;&lt;span&gt;定点数学，但变量中包含的基础数据不会更改，因此生成的c代码不会生成任何数据副本。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;int32_T user_written_sum_polymorphic（const int16_T u [10]）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  int32_T y;&lt;/span&gt;&lt;span&gt;
  int32_T i;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  /* 建立 */&lt;/span&gt;&lt;span&gt;
  y = 0;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  / *算法* /&lt;/span&gt;&lt;span&gt;
  for（i = 0; i &amp;lt;10; i ++）{&lt;/span&gt;&lt;span&gt;
    y + = u [i];&lt;/span&gt;&lt;span&gt;
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  /* 清理 */&lt;/span&gt;&lt;span&gt;
  回归y;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;emphasis bold&quot; lang=&quot;zh-CHS&quot;&gt;生成的浮点c代码&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;如果您有matlab编码器软件，则可以使用以下命令生成浮点c代码。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = 1:10;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; codegen user_written_sum_polymorphic &lt;/span&gt;-args  {u}  -config：lib  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;real_T user_written_sum_polymorphic（const real_T u [10]）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  real_T y;&lt;/span&gt;&lt;span&gt;
  int32_T i;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  /* 建立 */&lt;/span&gt;&lt;span&gt;
  y = 0.0;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  / *算法* /&lt;/span&gt;&lt;span&gt;
  for（i = 0; i &amp;lt;10; i ++）{&lt;/span&gt;&lt;span&gt;
    y + = u [i];&lt;/span&gt;&lt;span&gt;
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;  /* 清理 */&lt;/span&gt;&lt;span&gt;
  回归y;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;其中&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;real_T&lt;/code&gt;&lt;span&gt;&lt;span&gt;类型被定义为&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;double&lt;/code&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;typedef double real_T;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;d120e12632&quot; class=&quot;title&quot;&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;整数类型上的setimath&lt;/span&gt;&lt;span id=&quot;fi_setfimath_removefimath_example-7&quot; class=&quot;anchor_target&quot;/&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;&lt;span&gt;按照既定的模式处理内置整数（&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fi&lt;/code&gt;&lt;span&gt;&lt;span&gt;对象），&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;setfimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;将整数输入转换为具有附加&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;&lt;span&gt;的等效&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fi&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;&amp;gt;&amp;gt; u = int8（5）;&lt;/span&gt;&lt;span&gt;
&amp;gt;&amp;gt; codegen user_written_u_plus_u &lt;/span&gt;-args  {u}  -config：lib  -launchreport
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
function&lt;span&gt; y = user_written_u_plus_u（u）
     &lt;/span&gt;％Setup&lt;span&gt; 
    F = fimath（&lt;/span&gt;'RoundingMethod'&lt;span&gt;，&lt;/span&gt;'Floor'&lt;span&gt;，&lt;/span&gt;... 
        'OverflowAction'&lt;span&gt;，&lt;/span&gt;'Wrap'&lt;span&gt;，&lt;/span&gt;... 
        'SumMode'&lt;span&gt;，&lt;/span&gt;'KeepLSB'&lt;span&gt;，&lt;/span&gt;... 
        'SumWordLength'&lt;span&gt;， 32）;&lt;/span&gt;&lt;span&gt;
    u = setfimath（u，F）;&lt;/span&gt;
    ％算法&lt;span&gt;
    y = u + u;&lt;/span&gt;
    ％ 清理&lt;span&gt;
    y = removefimath（y）;&lt;/span&gt;
结束
&lt;/pre&gt;&lt;/div&gt;
&lt;p lang=&quot;zh-CHS&quot;&gt;&lt;span&gt;类型输出由&lt;/span&gt;&lt;code class=&quot;literal&quot;&gt;fimath&lt;/code&gt;&lt;span&gt;指定为32位。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;code_responsive&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;
&lt;span&gt;int32_T user_written_u_plus_u（int8_T u）&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;
  /* 建立 */&lt;/span&gt;&lt;span&gt;
  / *算法* /&lt;/span&gt;&lt;span&gt;
  /* 清理 */&lt;/span&gt;&lt;span&gt;
  回报你+你;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 27 Feb 2019 15:50:00 +0000</pubDate>
<dc:creator>MATLAB基于模型的设计</dc:creator>
<og:description>此示例演示如何在matlab®代码中设置固定点数学属性。 您可以使用 fimath 对象控制赋值，加法，减法和乘法的定点数学属性。可以使用fimath将fimath对象附</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/52geek/p/10447850.html</dc:identifier>
</item>
<item>
<title>Sublime Text3介绍和插件安装——基于Python开发 - 人无名，则可专心练剑</title>
<link>http://www.cnblogs.com/yif0118/p/10447804.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yif0118/p/10447804.html</guid>
<description>&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;        Subime&lt;/span&gt;&lt;span&gt;编辑器是一款轻量级的代码编辑器，是收费的，但是可以无限期使用。官网下载地址：&lt;/span&gt;&lt;span class=&quot;MsoHyperlink&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;https://www.sublimetext.com&lt;/a&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;MsoHyperlink&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227224224530-1925864544.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;        Sublime Text3支持语言开发种类多样，几乎可以涵盖所有的开发语言(Java、C/C++、C#、Python、Go、JavaScript…)，轻量、智能提示、界面完美、支持自定义界面和插件配置，这让很多开发者一经上手就会爱上这款便捷的Coding神器。&lt;/p&gt;
&lt;p&gt;        本文是笔者使用Sublime Text3基于Python学习、开发进行安装及相关插件的配置，同时Sublime Text3也在前端开发中广泛被使用，涉及到更多的便捷插件不在本博客阐述，详尽插件安装请参阅前端开发网：&lt;a href=&quot;https://www.html.cn/archives/5858?utm_source=tuicool&amp;amp;utm_medium=referral&quot;&gt;https://www.html.cn/archives/5858?utm_source=tuicool&amp;amp;utm_medium=referral&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;插件安装&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;        Sublime中界面比较简陋，需要安装支撑Python开发的一系列插件才可以使用&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;1.安装Package Control插件&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;        Package Control是一个管理其他插件的插件。&lt;/p&gt;
&lt;p&gt;        步骤：&lt;/p&gt;
&lt;p&gt;        a. ctrl键+` (Esc下面切换英文)，打开Sublime控制台界面&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227225040082-1944906812.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;        b.输入一下一段代码improt安装；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;        或代码复制网址：&lt;a href=&quot;https://packagecontrol.io/installation#st3&quot;&gt;https://packagecontrol.io/installation#st3&lt;/a&gt;（自查询安装）&lt;/p&gt;
&lt;p&gt;        复制Sublime Text3中的import安装代码到命令行&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227225302810-758869941.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;        c.安装成功后，Ctlr+Shift+P打开查找小框，输入install Package命令&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227230143438-1840110469.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227230200586-2089059532.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;        Install Package命令完成后界面&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227230231370-2086622793.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;2.安装Anaconda插件&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;        Anaconda插件可以让你在Sublime中写代码的时候增加提示。也可以进行代码之间的跳转等。&lt;/p&gt;
&lt;p&gt;        在上一步的基础上输入Anaconda，出现如下画面表示插件安装成功。&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227230409490-133723892.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;        安装成功后一定要关闭Sublime，重启Sublime&lt;/p&gt;
&lt;p&gt;        Sublime写代码，提示和自动填充真的很爽！&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227230448221-499061813.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;3.去除Sublime中的&lt;span&gt;下划线&lt;/span&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;        在安装完成Sublime Text3以上插件之后，编写Python代码时默认会在编辑的代码下出现不必要的下划线设置，具体删除方法如下：&lt;/p&gt;
&lt;p&gt;        在Preferences →Package Settings → Anaconda → Settings → User中添加一下代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
{&lt;span&gt;

&quot;anaconda_linting&quot;&lt;/span&gt;:&lt;span&gt;false

&lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;        之后重启Sublime编辑器，可见代码中下滑线已删除。&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227230814923-466712340.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h2&gt;Sublime 常用快捷键&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;快捷键&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+shift+p&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;打开命令行&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+d&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;选中一个单词&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+shift+d&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;复制当前这行到下一行&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+x&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;删除当前这一行&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+l&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;选中多行&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+enter&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;在当前这行下面添加一行&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+shift+enter&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;在当前这行上面添加一行&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+shift+&lt;/strong&gt;&lt;strong&gt;上下箭头&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将当前这行上下移动&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;ctrl+k,ctrl+b&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;打开和关闭侧边栏&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;277&quot;&gt;
&lt;p&gt;&lt;strong&gt;alt+shift+1…5&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;277&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将sublime打开为多列&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;        记住这些常用的快捷键并完成本文所述的安装即可使用Sublime Text3进行Python相关代码的学习和开发啦！&lt;/p&gt;
&lt;p&gt;        附上笔者初次安装并使用编写界面风格截图：&lt;/p&gt;
&lt;p&gt;    &lt;img src=&quot;https://img2018.cnblogs.com/blog/1309074/201902/1309074-20190227232134527-210388862.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;        更多前端插件安装内容将在后期进行更新~~~&lt;/p&gt;

</description>
<pubDate>Wed, 27 Feb 2019 15:32:00 +0000</pubDate>
<dc:creator>人无名，则可专心练剑</dc:creator>
<og:description>Subime编辑器是一款轻量级的代码编辑器，是收费的，但是可以无限期使用。官网下载地址：https://www.sublimetext.com。 Sublime Text3支持语言开发种类多样，几乎可</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yif0118/p/10447804.html</dc:identifier>
</item>
<item>
<title>开发谷歌浏览器插件会上瘾，搞了一个JSONViewer，一个页面格式化多条JSON，提升工作效率 - oppoic</title>
<link>http://www.cnblogs.com/oppoic/p/10444012.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/oppoic/p/10444012.html</guid>
<description>&lt;p&gt;最近写了一个谷歌浏览器插件（Chrome extension），拿出来分享下，希望能提升大家的工作效率。&lt;/p&gt;

&lt;p&gt;先说痛点：日常开发中，经常需要不停的把接口输出的JSON拷贝到在线JSON格式化页面进行校验、查看和对比等操作，但是现在主流的在线JSON格式化网站都只支持单个操作，如果想同时查看多条JSON，那么就得开多个浏览器标签页，效率非常底下。比如这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227162735068-1970999540.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;想看另一条JSON必须切换标签页，重复的操作一两次还可以，久而久之就无法忍受了。如果能把这些JSON都在一个页面上格式化就好了。&lt;/p&gt;

&lt;p&gt;一个页面格式化多条JSON，那就是从本来的一个操作区域变成多个操作区域。首先想到的是拷贝下别人的代码，初始化对象的时候多初始化几个，这样就一个变多个了。于是找到国内某搜索排名靠前的JSON格式化网站来研究。看看他们的js&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227152203396-349272007.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看了后非常疑惑，js为什么要写成这样？这个_0x6eb0对象里的元素为什么都转成了16进制的，刚开始还想着挨个转回来看看到底是什么，突然想到Chrome已经拿到了这个对象，打印一下就可以了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227152221995-1439166554.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到这里才明白了，就是不让你舒服的看源码。不过这个js还好，想拿来用的话恢复和修改的难度不大，看看另一个js&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227152237189-935189415.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1万多行混淆的代码，变量名都替换成了短的，想看某个变量怎么定义的、方法在哪里调用过，搜索都没办法搜索，基本放弃了。&lt;/p&gt;

&lt;p&gt;既然国内的JSON格式化网站没法抄了，就到国外找找，Google上搜索JSON Formatter，前几个网站界面都不一样，但是用的都是&lt;a href=&quot;https://github.com/josdejong/jsoneditor&quot; target=&quot;_blank&quot;&gt;JSONEditor&lt;/a&gt;这个编辑器。JSONEditor的简介是：&quot;A web-based tool to view, edit, format, and validate JSON&quot;，看来能满足需求了，看下这个编辑器的效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227152333738-61398298.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看下对应的代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test page&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html;charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;dist/jsoneditor.min.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;dist/jsoneditor.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        #container &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 600px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; container &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;container&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; options &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
            mode: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
            onError: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err) {
                alert(err.toString());
            }
        };
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; editor &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JSONEditor(container, options);
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非常简洁，这个editor还自带json格式化、压缩和去除转义的功能，无需自己实现。为了方便布局，用下Bootstrap的栅栏模式，看看多个editor在一起的效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227152423183-1125379445.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对应的代码是&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d35c5535-b583-4e61-99b0-546a5958dd76')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_d35c5535-b583-4e61-99b0-546a5958dd76&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d35c5535-b583-4e61-99b0-546a5958dd76&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d35c5535-b583-4e61-99b0-546a5958dd76',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d35c5535-b583-4e61-99b0-546a5958dd76&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test page&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html;charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;dist/jsoneditor.min.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;dist/bootstrap.min.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;dist/jquery.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;dist/jsoneditor.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;dist/bootstrap.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container-fluid&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-xs-12 col-sm-6 col-md-6 col-lg-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;container1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-xs-12 col-sm-6 col-md-6 col-lg-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;container2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; container1 &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;container1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; container2 &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;container2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; options &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
            mode: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
            onError: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err) {
                alert(err.toString());
            }
        };

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; editor1 &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JSONEditor(container1, options);
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; editor2 &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JSONEditor(container2, options);

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; wHeight &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $(window).height();
        $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#container1,#container2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).height(wHeight);
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;到这里又该疑惑了：一个页面到底放几个editor合适。最终决定根据浏览器窗口宽度动态控制个数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; getMaxBoxCount() {
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; screenWidth =&lt;span&gt; $(window).width();

    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; maxBoxCount = 0&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (screenWidth &amp;lt; 1024&lt;span&gt;) {
        maxBoxCount &lt;/span&gt;= 1&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (screenWidth &amp;gt;= 1024 &amp;amp;&amp;amp; screenWidth &amp;lt; 1920) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;1080p&lt;/span&gt;
        maxBoxCount = 2&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (screenWidth &amp;gt;= 1920 &amp;amp;&amp;amp; screenWidth &amp;lt; 2560) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;2k&lt;/span&gt;
        maxBoxCount = 3&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (screenWidth &amp;gt;= 2560 &amp;amp;&amp;amp; screenWidth &amp;lt; 3840) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;4k&lt;/span&gt;
        maxBoxCount = 4&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (screenWidth &amp;gt;= 3840 &amp;amp;&amp;amp; screenWidth &amp;lt; 5120) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;5k&lt;/span&gt;
        maxBoxCount = 5&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (screenWidth &amp;gt;= 5120) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;5k+&lt;/span&gt;
        maxBoxCount = 6&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; maxBoxCount;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果用户的显示器是5k的，那么放6个editor，一个页面同时显示6段JSON，基本够用了。如果不够再开一个标签页，就是12个了。&lt;br/&gt;当然也不强制必须开几个，允许关掉editor为剩下的editor获取更大的显示宽度。这里需要注意的就是：单页应用不停的关闭和增加editor对象必须要考虑销毁，否则越来越卡。JSONEditor提供了JSONEditor.destroy()方法，文档里是这样描述destroy方法的：&quot;Destroy the editor. Clean up DOM, event listeners, and web workers.&quot;。&lt;/p&gt;
&lt;p&gt;调用destroy方法之前必须得有editor对象，所以初始化的时候就给存起来&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; jsonEditorArr =&lt;span&gt; [];
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; cnr = $(&quot;[data-tgt='container']&quot;&lt;span&gt;);
$.each(cnr, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (i, v) {
    editor &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JSONEditor(v, jsonEditorOptions);
    jsonEditorArr.push(editor);
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后每次删除和增加editor都必须维护这个jsonEditorArr数组&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; idx = $(&lt;span&gt;this&lt;/span&gt;).parents(&quot;.mainBox&quot;&lt;span&gt;).next().index();
jsonEditorArr.splice(idx, &lt;/span&gt;0, editor);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;增加&lt;/span&gt;
&lt;span&gt;
jsonEditorArr[idx].destroy();
jsonEditorArr.splice(idx, &lt;/span&gt;1);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;移除&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此功能就差不多了，继续为这个插件加一些常用功能&lt;/p&gt;
&lt;h3&gt;1.复制&lt;/h3&gt;
&lt;p&gt;复制editor里的JSON到剪切板，再去别的地方粘贴出来结构不乱。使用的是&lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot; target=&quot;_blank&quot;&gt;clipboard-polyfill&lt;/a&gt;这个库，不需要初始化和销毁对象等操作，直接调用api无脑copy即可，省事省心。示例代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
clipboard.writeText(jsonCopy).then(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
    console.log(&lt;/span&gt;'ok'&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err) {
    console.log(err);
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.粘贴&lt;/h3&gt;
&lt;p&gt;别的地方复制的JSON，到这里不需要右键然后粘贴了，直接点粘贴按钮即可，每次操作省一次鼠标右击。同样借助了&lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot; target=&quot;_blank&quot;&gt;clipboard-polyfill&lt;/a&gt;这个库。示例代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
clipboard.readText().then(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (result) {
    console.log(&lt;/span&gt;'剪切板里的内容是：'+&lt;span&gt;result);
}, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err) {
    console.log(err);
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.下载&lt;/h3&gt;
&lt;p&gt;保存JSON到本地，省的复制全部，然后到本地新建txt粘贴保存了。使用了&lt;a href=&quot;https://github.com/eligrey/FileSaver.js&quot; target=&quot;_blank&quot;&gt;FileSaver.js&lt;/a&gt;，示例代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; blob = &lt;span&gt;new&lt;/span&gt; Blob([jsonData], { type: &quot;text/plain;charset=utf-8&quot;&lt;span&gt; });
saveAs(blob, &lt;/span&gt;&quot;jsonviewer.txt&quot;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，功能就都完成了，来看看最终的效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/401362/201902/401362-20190227152709979-1862839443.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap&quot; target=&quot;_blank&quot;&gt;Bootstrap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ajaxorg/ace&quot; target=&quot;_blank&quot;&gt;ace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/josdejong/jsoneditor&quot; target=&quot;_blank&quot;&gt;jsoneditor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot; target=&quot;_blank&quot;&gt;clipboard-polyfill&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/eligrey/FileSaver.js&quot; target=&quot;_blank&quot;&gt;FileSaver.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/CodeSeven/toastr&quot; target=&quot;_blank&quot;&gt;toastr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用到了如上库，感谢无私分享&lt;/p&gt;

&lt;p&gt;GitHub：&lt;a href=&quot;https://github.com/oppoic/JSONViewer/&quot; target=&quot;_blank&quot;&gt;https://github.com/oppoic/JSONViewer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chrome web store：&lt;a href=&quot;https://chrome.google.com/webstore/detail/jsonviewer/khbdpaabobknhhlpglenglkkhdmkfnca&quot; target=&quot;_blank&quot;&gt;https://chrome.google.com/webstore/detail/jsonviewer/khbdpaabobknhhlpglenglkkhdmkfnca&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;crx文件：&lt;a href=&quot;https://github.com/oppoic/JSONViewer/raw/master/crx/JSONViewer.crx&quot; target=&quot;_blank&quot;&gt;https://github.com/oppoic/JSONViewer/raw/master/crx/JSONViewer.crx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1）crx文件安装方式：打开Chrome浏览器 - 更多工具 - 扩展程序，把crx文件拖进来&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2）GitHub源码安装方式：下载源码，打开Chrome浏览器 - 更多工具 - 扩展程序，打开“开发者模式” - 加载已解压的扩展程序 - 选择源码的src目录 - 确定&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;本插件完全是前端实现，可以双击html页面运行，也可以发布到服务器上。做成谷歌浏览器插件完全是为了方便：每次需要格式化JSON就点谷歌浏览器右上角的插件图标即可。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;想要运行HTML页面的到源码包里找这个文件：JSONViewer\test\jsonviewer-test2.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;本文地址：https://www.cnblogs.com/oppoic/p/10444012.html，如果觉得不错，请不吝点个赞并到Github上Star本项目，谢谢！&lt;/p&gt;

</description>
<pubDate>Wed, 27 Feb 2019 15:31:00 +0000</pubDate>
<dc:creator>oppoic</dc:creator>
<og:description>最近写了一个谷歌浏览器插件（Chrome extension），拿出来分享下，希望能提升大家的工作效率。 一、背景 先说痛点：日常开发中，经常需要不停的把接口输出的JSON拷贝到在线JSON格式化页面</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/oppoic/p/10444012.html</dc:identifier>
</item>
<item>
<title>《HelloGitHub》第 35 期 - 削微寒</title>
<link>http://www.cnblogs.com/xueweihan/p/10447747.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xueweihan/p/10447747.html</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;兴趣是最好的老师，&lt;strong&gt;HelloGitHub&lt;/strong&gt; 就是帮你找到兴趣！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231140849-504751060.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;分享 GitHub 上有趣、入门级的开源项目。&lt;/p&gt;
&lt;p&gt;这是一个面向&lt;strong&gt;编程新手&lt;/strong&gt;、&lt;strong&gt;热爱编程&lt;/strong&gt;、&lt;strong&gt;对开源社区感兴趣&lt;/strong&gt; 人群的月刊，月刊的内容包括：&lt;strong&gt;各种编程语言的项目&lt;/strong&gt;、&lt;strong&gt;让生活变得更美好的工具&lt;/strong&gt;、&lt;strong&gt;书籍、学习笔记、教程等&lt;/strong&gt;，这些开源项目大多都是非常容易上手，而且非常 Cool。主要是希望大家能动手用起来，加入到&lt;strong&gt;开源社区&lt;/strong&gt;中。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;会编程的可以贡献代码&lt;/li&gt;
&lt;li&gt;不会编程的可以反馈使用这些工具中的 Bug&lt;/li&gt;
&lt;li&gt;帮着宣传你觉得优秀的项目&lt;/li&gt;
&lt;li&gt;Star 项目⭐️&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在浏览、参与这些项目的过程中，你将学习到&lt;strong&gt;更多编程知识&lt;/strong&gt;、&lt;strong&gt;提高编程技巧&lt;/strong&gt;、&lt;strong&gt;找到编程的乐趣&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;🎉 最后 &lt;a href=&quot;https://hellogithub.com&quot;&gt;HelloGitHub&lt;/a&gt; 这个项目就诞生了 🎉&lt;/p&gt;
&lt;hr/&gt;&lt;blockquote readability=&quot;3.5882352941176&quot;&gt;
&lt;p&gt;&lt;strong&gt;以下为本期内容&lt;/strong&gt;｜每个月 &lt;strong&gt;28&lt;/strong&gt; 号发布最新一期｜&lt;a href=&quot;https://github.com/521xueweihan/HelloGitHub#%E5%86%85%E5%AE%B9&quot;&gt;点击查看往期内容&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;c-项目&quot;&gt;C# 项目&lt;/h4&gt;
&lt;p&gt;1、&lt;a href=&quot;https://github.com/skoruba/IdentityServer4.Admin&quot;&gt;IdentityServer4.Admin&lt;/a&gt;：免费开源的 IdentityServer4 与 Asp.Net Core Identity 管理器。IdentityServer4 官方的管理器是收费的，该项目很好的替代了官方管理器，可以方便的管理使用 IdentityServer4 所搭建的认证服务器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231200092-2028738234.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;c-项目-1&quot;&gt;C++ 项目&lt;/h4&gt;
&lt;p&gt;2、&lt;a href=&quot;https://github.com/FLIF-hub/FLIF&quot;&gt;FLIF&lt;/a&gt;：免费、新颖的无损图像格式。压缩比方面优于 PNG、lossless WebP、lossless BPG、lossless JPEG2000 等格式&lt;/p&gt;
&lt;h4 id=&quot;go-项目&quot;&gt;Go 项目&lt;/h4&gt;
&lt;p&gt;3、&lt;a href=&quot;https://github.com/ovh/cds&quot;&gt;cds&lt;/a&gt;：企业级开源持续集成系统。支持横向扩展、自带 UI、常用的持续集成构建等功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231212145-1368944155.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4、&lt;a href=&quot;https://github.com/skanehira/docui&quot;&gt;docui&lt;/a&gt;：终端 Docker 管理工具，自带一个终端界面。使用该工具可以方便的通过界面管理 docker 不用再记那些命令。安装命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Homebrew
$ brew tap skanehira/docui
$ brew install docui

# go get
$ go get -d github.com/skanehira/docui
$ cd $GOPATH/src/github.com/skanehira/docui
$ GO111MODULE=on go install&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231244159-106204784.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;a href=&quot;https://github.com/chenjiandongx/go-echarts&quot;&gt;go-echarts&lt;/a&gt;：Golang 代码生成对应的 echarts 可视化图表。实例代码：&lt;/p&gt;
&lt;pre class=&quot;go&quot;&gt;
&lt;code&gt;// example.go
package main

import (
    &quot;log&quot;
    &quot;math/rand&quot;
    &quot;os&quot;
    &quot;time&quot;

    &quot;github.com/chenjiandongx/go-echarts/charts&quot;
)

var nameItems = []string{&quot;衬衫&quot;, &quot;牛仔裤&quot;, &quot;运动裤&quot;, &quot;袜子&quot;, &quot;冲锋衣&quot;, &quot;羊毛衫&quot;}
var seed = rand.NewSource(time.Now().UnixNano())

func randInt() []int {
    cnt := len(nameItems)
    r := make([]int, 0)
    for i := 0; i &amp;lt; cnt; i++ {
        r = append(r, int(seed.Int63()) % 50)
    }
    return r
}

func main() {
    bar := charts.NewBar()
    bar.SetGlobalOptions(charts.TitleOpts{Title: &quot;Bar-示例图&quot;}, charts.ToolboxOpts{Show: true})
    bar.AddXAxis(nameItems).
        AddYAxis(&quot;商家A&quot;, randInt()).
        AddYAxis(&quot;商家B&quot;, randInt())
    f, err := os.Create(&quot;bar.html&quot;)
    if err != nil {
        log.Println(err)
    }
    bar.Render(f)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231301824-683344203.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;6、&lt;a href=&quot;https://github.com/eranyanay/1m-go-websockets&quot;&gt;1m-go-websockets&lt;/a&gt;：该项目演示了如何用 Go 编写一个可以提供超过一百万个 websockets 连接、运行内存小于 1GB 的服务器。&lt;code&gt;setup.sh&lt;/code&gt; 是用来创建 websocket 客户端的，&lt;code&gt;destroy.sh&lt;/code&gt; 则用来销毁客户端&lt;/p&gt;
&lt;h4 id=&quot;java-项目&quot;&gt;Java 项目&lt;/h4&gt;
&lt;p&gt;7、&lt;a href=&quot;https://github.com/dyc87112/SpringBoot-Learning&quot;&gt;SpringBoot-Learning&lt;/a&gt;：Spring Boot 教程&lt;/p&gt;
&lt;p&gt;8、&lt;a href=&quot;https://github.com/ruibaby/halo&quot;&gt;halo&lt;/a&gt;：Java 博客系统。在层出不穷的博客系统中，很难看到使用 Java 编写的简洁优雅的博客系统。该项目还具备着轻快且功能强大的特点，这些特性使它从众多 Java 博客系统脱颖而出。安装命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# 安装 Halo
$ yum install -y wget &amp;amp;&amp;amp; wget -O halo-cli.sh https://git.io/fxHqp &amp;amp;&amp;amp; bash halo-cli.sh -i
# 更新 Halo
$ bash halo-cli.sh -u&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231317853-678345874.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;9、&lt;a href=&quot;https://github.com/TommyLemon/APIJSON&quot;&gt;APIJSON&lt;/a&gt;：快速开发 API 服务的框架。为简单的增删改查、复杂的查询、简单的事务操作提供了完全自动化的 API。大部分 HTTP 请求后端再也不用写接口了，也不用写文档了，适合中小型前后端分离的项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231329136-905106154.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;10、&lt;a href=&quot;https://github.com/teeyog/IQL&quot;&gt;IQL&lt;/a&gt;：基于 SparkSQL 实现了一套即席查询服务，具有如下特性：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;优雅的交互方式，支持多种 datasource/sink、多数据源混算&lt;/li&gt;
&lt;li&gt;Spark 常驻服务，基于 zookeeper 的引擎自动发现&lt;/li&gt;
&lt;li&gt;多 session 模式实现并行查询&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231345093-1508464906.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;javascript-项目&quot;&gt;JavaScript 项目&lt;/h4&gt;
&lt;p&gt;11、&lt;a href=&quot;https://github.com/huangjianke/Gitter&quot;&gt;Gitter&lt;/a&gt;：GitHub 的小程序客户端。UI 设计漂亮，可作为小程序和 GitHub 结合的实战项目学习&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231353255-6810224.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;12、&lt;a href=&quot;https://github.com/agalwood/Motrix&quot;&gt;Motrix&lt;/a&gt;：桌面下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。界面简洁易用，采用 Vue + VueX + Element 的技术架构适合学习桌面应用开发&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231404773-1620178162.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;13、&lt;a href=&quot;https://github.com/ccampbell/rainbow&quot;&gt;rainbow&lt;/a&gt;：体积小、易于使用、支持各种编程语言的语法高亮插件。该项目原理是通过正则过滤关键字，然后进行高亮。代码：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// JS关键字判断
Rainbow.extend('javascript', [

    /**
     * matches $. or $(
     */
    {
        name: 'selector',
        pattern: /\$(?=\.|\()/g
    },
    {
        name: 'support',
        pattern: /\b(window|document)\b/g
    }
...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;14、&lt;a href=&quot;https://github.com/chartjs/Chart.js&quot;&gt;Chart.js&lt;/a&gt;：基于 canvas 的可视化库。可用于构建简单的 H5 图表，满足基本的日常可视化需求&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231414648-1265396844.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;15、&lt;a href=&quot;https://github.com/vueComponent/ant-design-vue&quot;&gt;ant-design-vue&lt;/a&gt;：Ant Design 的 Vue 实现，该项目已经得到 &lt;a href=&quot;https://vue.ant.design/docs/vue/introduce-cn/&quot;&gt;Ant Design 官方&lt;/a&gt;认可&lt;/p&gt;
&lt;h4 id=&quot;objective-c-项目&quot;&gt;Objective-C 项目&lt;/h4&gt;
&lt;p&gt;16、&lt;a href=&quot;https://github.com/lefex/iWeChat&quot;&gt;iWeChat&lt;/a&gt;：还原、探索微信 APP 的项目。通过该项目借鉴、学习微信客户端开发的相关设计与技术，也可以学到如何分析一个第三方 APP 的方法&lt;/p&gt;
&lt;h4 id=&quot;python-项目&quot;&gt;Python 项目&lt;/h4&gt;
&lt;p&gt;17、&lt;a href=&quot;https://github.com/openspug/spug&quot;&gt;spug&lt;/a&gt;：使用 Python+Vue 实现的开源运维平台，前后端分离方便二次开发。该项目基于 Docker 镜像发布部署，方便安装和升级。支持运维常见功能：主机管理、任务计划管理、发布部署、监控告警等&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231427470-1442488064.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;18、&lt;a href=&quot;https://github.com/howie6879/ruia&quot;&gt;ruia&lt;/a&gt;：基于 asyncio 和 aiohttp 的 Python3 异步爬虫框架。它具有容易上手、非阻塞、扩展性强等特点，实例代码：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from ruia import TextField, Item, Spider

class HackerNewsItem(Item):
    target_item = TextField(css_select='tr.athing')
    title = TextField(css_select='a.storylink')


class HackerNewsSpider(Spider):
    start_urls = ['https://news.ycombinator.com/news?p=1']

    async def parse(self, response):
        async for item in HackerNewsItem.get_items(html=response.html):
            yield item

if __name__ == '__main__':
    HackerNewsSpider.start()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231436024-1304417562.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;其它&quot;&gt;其它&lt;/h4&gt;
&lt;p&gt;19、&lt;a href=&quot;https://github.com/devhubapp/devhub&quot;&gt;devhub&lt;/a&gt;：支持 Android、iOS、Web、Desktop 的 GitHub 管理通知客户端。能够帮你方便地接收、查看、管理 GitHub 消息、动态等&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231444446-3905486.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;20、&lt;a href=&quot;https://github.com/neovim/neovim&quot;&gt;neovim&lt;/a&gt;：致力于改善 Vim 的维护、可扩展性等方面的编辑器。它功能强大、项目开发活跃、社区活跃，“新一代”的 Vim&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231452599-1322936485.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;21、&lt;a href=&quot;https://github.com/Micropoor/Micro8&quot;&gt;Micro8&lt;/a&gt;：浸淫渗透攻击的老鸟所写，内容一线深入浅出，主要是 Windows 系统场景。对于初中级安全从业人员、乙方安全测试、甲方安全自检、网络安全爱好者等提高都有很大的帮助&lt;/p&gt;
&lt;p&gt;22、&lt;a href=&quot;https://github.com/24OI/OI-WIKI&quot;&gt;OI-WIKI&lt;/a&gt;：免费、开放、持续更新的编程竞赛相关知识教程。包含竞赛的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速、深入地学习编程竞赛相关知识&lt;/p&gt;
&lt;p&gt;23、&lt;a href=&quot;https://github.com/mbinary/USTC-CS-Courses-Resource&quot;&gt;USTC-CS-Courses-Resource&lt;/a&gt;：该仓库收录中国科学技术大学众多课程资源。包括电子版教材、参考书、讲义、试卷、学习心得、习题解答等。以计算机学院课程为主，也包含公选课、自由选修等其他课程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/759200/201902/759200-20190227231502795-1459171351.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;开源书籍&quot;&gt;开源书籍&lt;/h4&gt;
&lt;p&gt;24、&lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS&quot;&gt;You-Dont-Know-JS&lt;/a&gt;：（英文）深入探讨 JavaScript 语言核心机制的书籍，适用于深入学习 JS。该书已出版，但在线阅读免费&lt;/p&gt;
&lt;p&gt;25、&lt;a href=&quot;https://github.com/d2l-ai/d2l-zh&quot;&gt;d2l-zh&lt;/a&gt;：《Dive into Deep Learning 》翻译版，即《动手学深度学习》。&lt;a href=&quot;http://zh.d2l.ai/&quot;&gt;在线阅读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26、&lt;a href=&quot;https://github.com/3dgen/cppwasm-book&quot;&gt;cppwasm-book&lt;/a&gt;：《C/C++ 面向 WebAssembly 编程》，&lt;a href=&quot;https://3dgen.cn/cppwasm-book/&quot;&gt;在线阅读&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;机器学习&quot;&gt;机器学习&lt;/h4&gt;
&lt;p&gt;27、&lt;a href=&quot;https://github.com/openai/gpt-2&quot;&gt;gpt-2&lt;/a&gt;：OpenAI 发布的 15 亿参数量通用语言模型 GPT-2，迄今最大模型！展示了一种构建语言处理系统的潜在方式，即根据自然发生的演示学习执行任务。实例代码：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;export PYTHONIOENCODING=UTF-8
python3 src/generate_unconditional_samples.py | tee samples
python3 src/generate_unconditional_samples.py --top_k 40 --temperature 0.7 | tee samples
python3 src/interactive_conditional_samples.py --top_k 40&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;28、&lt;a href=&quot;https://github.com/kmario23/deep-learning-drizzle&quot;&gt;deep-learning-drizzle&lt;/a&gt;：世界计算机名校的深度学习、强化学习、机器学习、计算机视觉、自然语言处理等方面的公开课&lt;/p&gt;
&lt;p&gt;29、&lt;a href=&quot;https://github.com/stanfordnlp/stanfordnlp&quot;&gt;stanfordnlp&lt;/a&gt;：适用于多种人类语言的 Stanford NLP 官方 Python 库。包含用于运行 CoNLL 2018 共享任务的最新完全神经管道以及访问 Java Stanford CoreNLP 服务器的软件包。实例代码：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import stanfordnlp
stanfordnlp.download('en')   # This downloads the English models for the neural pipeline
nlp = stanfordnlp.Pipeline() # This sets up a default neural pipeline in English
doc = nlp(&quot;Barack Obama was born in Hawaii.  He was elected president in 2008.&quot;)
doc.sentences[0].print_dependencies()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;30、&lt;a href=&quot;https://github.com/taki0112/Tensorflow-Cookbook&quot;&gt;Tensorflow-Cookbook&lt;/a&gt;：易学易用的 Tensorflow 教程&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;换种方式阅读&quot;&gt;换种方式阅读&lt;/h2&gt;
&lt;h2 id=&quot;声明&quot;&gt;声明&lt;/h2&gt;
&lt;p&gt;如果你发现了好玩、有意义的开源项目 &lt;a href=&quot;https://github.com/521xueweihan/HelloGitHub/issues/new&quot;&gt;点击这里&lt;/a&gt; 分享你觉得有意思的项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;欢迎转载，请注明出处和作者，同时保留声明。&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 27 Feb 2019 15:16:00 +0000</pubDate>
<dc:creator>削微寒</dc:creator>
<og:description>《HelloGitHub》第 35 期 兴趣是最好的老师， HelloGitHub 就是帮你找到兴趣！ 简介 分享 GitHub 上有趣、入门级的开源项目。 这是一个面向 编程新手 、 热爱编程 、</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xueweihan/p/10447747.html</dc:identifier>
</item>
<item>
<title>1.开始学习ASP.NET MVC - 灰太狼的梦想</title>
<link>http://www.cnblogs.com/caofangsheng/p/10440900.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/caofangsheng/p/10440900.html</guid>
<description>&lt;p&gt;&lt;span&gt;        Hello,大家好! 好久没有开始记录博客了，是时候开始分享一下了，这个系列主要为零基础的同学，量身打造的。废话不多说，我们开干！&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;        什么是ASP.NET MVC&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;MVC(Model-View-Controller)--[模型--视图--控制器]，是一种设计模式，它将一个应用程序拆分成下面三个主要的组件：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Model(模型)&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;View（视图）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Controller（控制器）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;ASP.NET MVC框架提供了相对ASP.NET Web Forms创建Web应用程序的另外一种选择。ASP.NET MVC框架是一个轻量级的，高度可测试的Web框架，它和Web Form 一样，集成在现有的ASP.NET特性中，例如：母版页，Membership授权验证。ASP.NET MVC 框架定义在&lt;strong&gt;System.Web.Mvc&lt;/strong&gt;程序集中，提供了对HTML、JavaScript和CSS的完全控制权。对于大型开发团队来说，推荐使用ASP.NET MVC进行团队开发协作。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;         &lt;span&gt;MVC设计模式&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/745221/201902/745221-20190226224330734-1411714120.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;      &lt;span&gt;基于MVC模式的Web应用程序的优点&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;ASP.NET MVC框架有以下优点：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;通过将应用程序拆分为Model、View、Controller，对复杂性易于管理；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;不使用ViewState或者服务器端的控件；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;对HTML、JavaScript和CSS拥有完全控制权；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;更好的支持测试驱动开发【Test-Driven Development（TDD）】；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;非常适合对应用程序有着高度控制需求的Web设计人员；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;默认支持FaceBook和谷歌的授权验证；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;通过使用多个Areas，可以很容易管理大型应用程序；&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;    ASP.NET MVC 引用了哪些命名空间&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;System.Web.Mvc&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;System.Web.Mvc命名空间中，包含支持MVC模式的类和接口。这个命名空间包含：控制器类、控制器工厂类、ActionResult类、视图、分布视图以及模型绑定类等。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;System.Web.Mvc.Ajax&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;包含在ASP.NET MVC应用程序中支持的Ajax脚本，这个命名空间包含支持Ajax脚本和Ajax选项的设置。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;System.Web.Mvc.Async&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;包含在ASP.NET MVC应用程序中支持异步操作的类和接口。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;System.Web.Mvc.Html&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;包含在ASP.NET MVC 应用程序中渲染HTML控件的类。这个命名空间包含支持表单（forms）、输入控件(input controls)、超链接(links)、分布视图（partial views）以及验证的类。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;   ASP.NET MVC 和ASP.NET Web Forms的不同点&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;table border=&quot;0&quot;&gt;&lt;thead&gt;&lt;tr align=&quot;center&quot;&gt;&lt;td&gt;&lt;strong&gt;ASP.NET Web Forms&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ASP.NET MVC&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;13&quot;&gt;&lt;tr align=&quot;center&quot; readability=&quot;11&quot;&gt;&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;Web Forms使用Code behind技术，将页面分成两部分&lt;/p&gt;
&lt;p&gt;【.aspx文件(用来呈现视图)，.aspx.cs或者aspx.vb(用来编码）】&lt;/p&gt;
&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;ASP.NET MVC web应用程序是一个&lt;/p&gt;
&lt;p&gt;设计模式，它将应用程序划分成三个部分:&lt;/p&gt;
&lt;p&gt;模型、视图、控制器。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr align=&quot;center&quot; readability=&quot;4&quot;&gt;&lt;td&gt;ASP.NET Web Forms有服务器端控件&lt;/td&gt;
&lt;td&gt;ASP.NET MVC 有HTML帮助类&lt;/td&gt;
&lt;/tr&gt;&lt;tr align=&quot;center&quot; readability=&quot;6&quot;&gt;&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;ASP.NET Web Forms支持ViewState&lt;/p&gt;
&lt;p&gt;用于在客户端进行状态管理。&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;ASP.NET MVC不支持ViewState&lt;/td&gt;
&lt;/tr&gt;&lt;tr align=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;td readability=&quot;5&quot;&gt;
&lt;p&gt;ASP.NET Web Forms模型遵循一个&lt;/p&gt;
&lt;p&gt;页面的生命周期。&lt;/p&gt;
&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;没有像Web Forms那样的页面生命&lt;/p&gt;
&lt;p&gt;周期，在ASP.NET MVC模型中，请求周期很简单.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr align=&quot;center&quot; readability=&quot;5&quot;&gt;&lt;td readability=&quot;5&quot;&gt;
&lt;p&gt;在许多情况下，对HTML，JavaScript和&lt;/p&gt;
&lt;p&gt;CSS的控制有限。&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;对HTML，JavaScript和CSS完全控制&lt;/td&gt;
&lt;/tr&gt;&lt;tr align=&quot;center&quot; readability=&quot;6&quot;&gt;&lt;td&gt;它适用于小型团队开发。&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;ASP.NET MVC 是在大型应用程序中，&lt;/p&gt;
&lt;p&gt;各个团队协作开发中推荐的框架&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;   &lt;span&gt;ASP.NET MVC应用程序解决方案&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;一个ASP.NET MVC 应用程序被划分到三个文件夹中：Model、View、Controller，当然我们还有其他文件夹用来放置脚本文件，以及App_Start文件夹等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/745221/201902/745221-20190227212617568-608745013.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.Model【模型】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;模型是用来存放由LINQ to SQL创建的类或者EF创建的类，又或者是存放WCF服务的引用，又或者是其他。最终我们只是使用这个模型，在视图中呈现数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.View 【视图】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;视图文件夹用于存放特定控制器对应的视图页或者局部页，通常View文件夹会包含一个Shared文件夹，在Shared文件夹中，我们可以存放可以在任何控制器中使用的页面或者用户控件。来自控制器的每个请求，同样会检查Shared文件夹中页面的扩展名。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.Controller【控制器】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;控制器就是用来存放业务逻辑类，每一个控制器类都是&lt;strong&gt;System.Web.Mvc.Controller&lt;/strong&gt;类的子类。控制器类仅仅是包含一些方法，用来返回一个视图、分布视图、Content、Json数据以及其他的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  Actions 【方法】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Actions是一类拥有特别返回值类型的方法，用来编码以完成特定的任务，它同样也向用户返回一些东西【例如：视图页面，分布视图页面(用户控件)】。每一个Action都可以处理两种类型的Http请求。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.【HttpGet】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HttpGet标识的方法，用于处理直接来自用户的操作，我们还可以这样说：HttpGet用于处理第一次请求这个方法的时候。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.【HttpPost】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HttpPost标识的方法，是在客户端已经存在视图页面的时候，用户点击HTML表单中的提交按钮的时候被调用的。点击按钮的时候，同样返回了所有在表单中的控件值，这些值在&lt;strong&gt;FormCollection&lt;/strong&gt;类型的对象中。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一个Action方法，可能有多种返回值类型。我们可以返回多种类型的返回值给用户，但是大多数的时候，还是使用&lt;strong&gt;ActionResult&lt;/strong&gt;，因为它是其他类型的父类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ActionResult是一个抽象类，它有多种子类：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/745221/201902/745221-20190227215543340-1970430798.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　&lt;strong&gt;ASP.NET MVC中的Areas &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从ASP.NET MVC 2.0开始，微软提供了一个新的特性：Areas。Areas仅仅是用来划分或者分离大型应用程序为多个或者单独的MVC。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/745221/201902/745221-20190227215933554-909714312.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当你向项目中添加一个Area的时候，一个为Area定义的路由，就在AreaRegistration文件中定义了。路由基于请求的URL向Area发送请求。为了注册Area的路由，在Global.asax文件中写入注册代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;AreaRegistration.RegistrAllAreas();&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;    MVC应用程序请求的生命周期&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在MVC应用程序中，没有像ASP.NET Web Forms那样的页面生命周期，但是我们有MVC请求的生命周期。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/745221/201902/745221-20190227221113844-64977459.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;在MVC应用程序中，当用户通过浏览器发送一个请求的时候，就会被IIS处理，这个请求的URL就像下面这样：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://主机名/控制器名称/Action方法名/ID&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在上面的请求图中，我仅仅只是描述了两种类型的用户请求。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.第一种请求是：返回一个视图，没有对模型数据进行请求。这个时候是用户发送一个请求，被MVC处理程序处理，然后直接到到控制器，然后调用控制器的某个HttpGet特性标识的方法中，然后返回一个ViewResult实例，然后找到相应的视图页面，视图引擎就渲染视图页面，呈现给用户HTML页面。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.第二种请求类型是，用户请求一个View+data模式，也就是说用户发送一个请求，被MVC处理程序处理，然后找到控制器中相应的HttpGet特性标识的方法。如果这个方法返回:一个带有Model对象的ViewResult,那么它就会先去请求Model类，然后返回一个带有ModelObject的 ViewResult，然后我们就可以在视图中进行绑定呈现了。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里有两种类型的模型视图绑定：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.&lt;strong&gt;Dynamic Banding&lt;/strong&gt; 【动态绑定】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;动态绑定是当我们向ViewResult传递一个对象的时候，用于返回视图的时候，却没有在视图中定义对象的类型，这个时候，我们还是可以使用对象属性赋值，但是这时候是没有Visual Studio智能提示,我们写的动态语句，只有在运行的时候，才看的到效果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2. &lt;strong&gt;Strong typed binding&lt;/strong&gt;【强类型绑定】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;强类型绑定是当我们向ViewResult传递对象，用于返回视图的时候，就已经在页面中定义了对象的类型，然后我们就可以在页面中安全的使用对象了，这个时候是有智能提示的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;strong&gt;View Engines 【视图引擎】&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;视图引擎主要是用于向浏览器呈现HTML页面，视图引擎模板有不同的语法实现，当前主流的是Razor，此外还有ASPX。当然ASP.NET同样支持一些第三方的视图引擎，例如：Spark、NHaml.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;ASPX&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ASPX 是最早的ASP.NET MVC 应用程序视图引擎，语法类型ASP.NET Web Forms。我们使用“&amp;lt;%:%&amp;gt;”来写一些服务端的代码，视图文件的扩展名和ASP.NET也一样。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1. .aspx: .aspx是视图页面的扩展名，和ASP.NET Web Forms一样&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2. .ascx: .ascx是分布视图的扩展名，类似ASP.NET Web Forms中的用户控件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3. .master: .master扩展名的文件就是母版页和ASP.NET Web Forms中母版页一样。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Razor&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Razor视图引擎是更高级的视图引擎，是从MVC中第一次出来的，Razor视图引擎使用“@”符号代替&quot;&amp;lt;%:%&amp;gt;&quot;,并且Razor不需要你明确的去关闭代码块。视图引擎在运行的时候，智能的判断什么哪里呈现标签元素，哪里是代码块。 　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Razor视图引擎是MVC 3.0 、MVC 4.0以及MVC 5.0中的默认视图引擎，对于C#/VB来说，我们有两种页面的扩展名。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;C#语言对应的是：.cshtml&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;VB语言对应的是：.vbhtml&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;到此为止，我们从零开始系列学习MVC的第一篇就结束了，大家有什么疑问，欢迎留言评论。&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 27 Feb 2019 15:05:00 +0000</pubDate>
<dc:creator>灰太狼的梦想</dc:creator>
<og:description>Hello,大家好! 好久没有开始记录博客了，是时候开始分享一下了，这个系列主要为零基础的同学，量身打造的。废话不多说，我们开干！ 什么是ASP.NET MVC MVC(Model-View-Cont</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/caofangsheng/p/10440900.html</dc:identifier>
</item>
<item>
<title>Redis的复制是如何实现的？ - JJian</title>
<link>http://www.cnblogs.com/jian0110/p/10447491.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jian0110/p/10447491.html</guid>
<description>&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;　　关系数据库通常会使用一个主服务器向多个从服务器发送更新，并使用从服务器来处理所有的读请求，Redis采用了同样方法来实现自己的复制特性。&lt;/p&gt;
&lt;p&gt;　　简单总结起来就是：&lt;strong&gt;在接收到主服务器发送的数据初始副本之后，客户端每次主服务器进行写命令时，从服务器都会实时地得到更新。部署好主从服务器之后，客户端可以向任意的从服务器发送读请求。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　&lt;/strong&gt;　&lt;strong&gt;本文主要介绍Redis实现数据同步复制简单过程、新旧版本之间的对比、复制的实现、以及一些需要注意的细节，但不会涉及Redis源码解释。只对基本流程及功能进行详细描述。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　主要参考资料《Redis实战》与《Redis设计与实现》（有需要的同学可以私信或者评论）&lt;/p&gt;
&lt;/blockquote&gt;


&lt;hr/&gt;


&lt;p&gt;&lt;span&gt;　&lt;/span&gt;&lt;span&gt;　&lt;strong&gt;Redis 2.8以前采用的复制都为旧版复制，主要使用SYNC命令同步复制&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，SYNC存在很大的缺陷严重消耗主服务器的资源以及大量的网络连接资源。&lt;span&gt;&lt;strong&gt;Redis 2.8之后采用PSYNC命令替代SYNC&lt;/strong&gt;&lt;/span&gt;，解决完善这些缺陷，但在介绍新版复制功能之前，必须先介绍旧版复制过程，这样才能更好地形成对比。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;　　1、复制功能的两种模式&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　　　同时复制过程分为同步sync与命令传播（command propagate），两个过程配合执行才能实现Redis复制。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;span&gt;1）&lt;strong&gt;同步操作：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　通过从服务器发送到SYNC命令给主服务器--------&amp;gt;主服务器生成&lt;/strong&gt;RDB文件&lt;/span&gt;并发送给从服务器，同时发送保存所有写命令给从服务器------&amp;gt;从服务器清空之前数据并执行解释RDB文件-------&amp;gt;保持数据一致（还需要命令传播过程才能保持一致）&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　　　　　　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227094621560-1540901918.png&quot; alt=&quot;&quot; width=&quot;349&quot; height=&quot;175&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;      　　 &lt;span&gt;2）命令传播操作&lt;/span&gt;：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　主服务器的数据库状态被修改（主服务器执行写命令，修改数据库），导致主从服务器数据库不一致时，通过发送让主从服务器不一致的命令（主服务器接收到的新写命令）给从服务器并执行，让主从服务器的数据库重新回到一致状态。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　比如初次同步完成后，主从服务器数据库中都已经存在k1-k5的键，处于数据一致的状态&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227110136449-1103762794.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　之后，主服务器客户端发送DEL删除命令，删除k3键，导致主从服务器数据不一致&lt;/p&gt;

&lt;p&gt;　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227110303630-300325546.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　为了让主从服务器数据再次回到一致状态，主服务器向从服务器发送DEL命令，紧接着从服务器接收并执行。即可回到一致状态&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227110414601-735189526.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　　　&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;　　2、配置选项前提&lt;/h3&gt;

&lt;p&gt;　　　　1）主从复制的前提不用多说，就是先正确配置redis主从服务器，主要通过slaveof ip port选项配置或者SLAVEOF 命令。&lt;/p&gt;
&lt;p&gt;　　　　2）保证主服务器的RDB+AOF配置正确，特别是RDB中dbfilename选项与AOF中的dir选项，两个文件路径对于Redis是可写的&lt;/p&gt;

&lt;h3&gt;　　3、主从复制过程&lt;/h3&gt;
&lt;p&gt;　　　　　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190226234128427-1737096033.png&quot; alt=&quot;&quot; width=&quot;438&quot; height=&quot;84&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　文字简单总结描述：&lt;/p&gt;
&lt;p&gt;　　　　&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）slave会建立和master的连接，然后发送sync命令；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;2）master都会启动一个后台进程执行BGSAVE命令，将数据快快照保存到文件中，同时master主进程会开始收集新的写命令并缓存起来；、&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;3）后台进程完成写文件后，master发送文件给slave，slave将文件保存到磁盘上，然后加载到内存恢复数据库快照到slave上。\&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;4）紧接着master就会把缓存命令转发给slave，后续的master收到的写命令也通过跟slave连接发送给slave；&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;5）如果master同时接收到多个slave发来的同步连接请求，只会启动一个进程来写数据库镜像，然后发送给所有slave。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　也可以参考以下表，&lt;span&gt;&lt;strong&gt;其中步骤1-4可以认为是sync同步操作，而步骤5即为命令传播模式&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　&lt;/span&gt;　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190226232920117-1794108092.png&quot; alt=&quot;&quot; width=&quot;740&quot; height=&quot;301&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;span&gt;&lt;strong&gt;　　　　　　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;　&lt;span&gt;　注意事项&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　1）&lt;span&gt;&lt;strong&gt;从服务器在同步时，会清空所有数据&lt;/strong&gt;&lt;/span&gt;，服务器在与主服务器进行初连接时，数据库中的所有数据都将丢失，替换成主服务器发送的数据。&lt;/p&gt;
&lt;p&gt;　　　　2）&lt;span&gt;&lt;strong&gt;Redis不支持主主复制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;span&gt;3）&lt;/span&gt;&lt;strong&gt;主从复制不会阻塞master（不会阻塞master处理客户端请求），相反slave在初次同步数据时会阻塞不能处理客户端请求。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　4）当多个从服务器尝试连接同一个主服务器的时候，就会出现以下两种情况：&lt;/p&gt;
&lt;p&gt;                　　一是：步骤3还未执行，所有从服务器都会接收到相同的快照文件和相同缓冲区写命令。&lt;/p&gt;
&lt;p&gt;                　　二是：步骤3正在执行或者已经执行完毕，当主服务器与较早的从服务器完成以上全部步骤之后，主服务器会新连接的从服务器重新依次执行1-5步骤。&lt;/p&gt;
&lt;p&gt;                　&lt;span&gt;&lt;strong&gt;在大部分情况下，Redis会尽可能去减少复制所需要的工作，但是从服务器连接的时机不凑巧的话，只好多做一些外额外工作。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;/span&gt;5）&lt;strong&gt;&lt;span&gt;多个从服务器连接主服务器时候，同步数据可能会占用很大一部分的带宽，可能会导致其他请求难以到达主服务器。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span&gt;　　&lt;span&gt;4、SYNC命令的缺陷&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;主要是主从服务器断线后重复制，即处于命令传播阶段的主从服务器由于网络断开，从服务器一直尝试连接主服务器连接成功后，继续复制主服务器。如下过程在主从服务器断开后重新连接期间，主服务器继续执行三个SET命令，导致从服务器连接后发送L SYNC命令，重新进行了“全量”复制过程，RDB文件中包含k1-k10089全部的键。&lt;/p&gt;
&lt;p&gt;　　　　　　　　 &lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227105756266-1625308850.png&quot; alt=&quot;&quot; width=&quot;727&quot; height=&quot;631&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　　其中可以明显看出重新连接主服务器之后，&lt;span&gt;&lt;strong&gt;SYNC命令创建包含k1-k10089的RDB文件。而事实上只需要再同步断线后的k10087-k10089即可。SYNC的“全同步”对于从服务来说是不必要的。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;           SYNC命令非常消耗资源，原因有三点：&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;&lt;span&gt;1）主服务器执行BGSAVE命令生成RDB文件，这个生成过程会大量消耗主服务器资源（CPU、内存和磁盘I/O资源）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　2）主服务器需要将自己生成的RBD文件发送给从从服务器，这个发送操作会消耗主从服务器大量的网络资源（带宽与流量）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　　　3）接收到RDB文件你的从服务器需要载入RDB文件，载入期间从服务器会因为阻塞而导致没办法处理命令请求。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;　　为了解决旧版本中断线情况下SYNC低效问题，在Redis 2.8之后使用PSYNC命令代替SYNC命令执行复制同步操作，自然PSYNC具备完整重同步和部分重同步模式&lt;/p&gt;
&lt;p&gt;   &lt;strong&gt; &lt;span&gt;   1）完整重同步：跟旧版复制基本是一致的，可以理解为“全量”复制。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;       2）部分重同步：在命令传播阶段，断线重复制只需要发送主服务器在断开期间执行的写命给从服务器即可，可以理解为“增量”复制。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　&lt;span&gt;　断开连接后发送+CONTINUE回复，表示使用PSYNC部分重同步，只需要同步k10087-10089即可，不需要生成RDB文件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227113400493-175707994.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　相关流程图如下：&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227113340836-826434957.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;　&lt;span&gt;　Redis不管是旧版还是新版，复制的实现都可以分为七个步骤，流程图如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227214144009-1683915756.png&quot; alt=&quot;&quot; width=&quot;723&quot; height=&quot;379&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;1、设置主服务的地址与端口&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;        &lt;span&gt;&lt;strong&gt;当客户端向从服务器发送一下命令时或者在配置文件中配置slaveof选项&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
127.0.0.1:12345&amp;gt; SLAVEOF 127.0.0.1 6379
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;        从服务器将向发送SLAVEOF命令的客户端返回OK，表示复制指令已经被接收，而实际上复制工作是在OK返回之后进行。&lt;/p&gt;
&lt;h2&gt;2、&lt;strong&gt;建立套接字连接&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;        &lt;span&gt;&lt;strong&gt;从服务器根据设置的套接字创建连向主服务器的套接字连接&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;               &lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227215353821-1315228578.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;       &lt;span&gt;&lt;strong&gt;主服务器接收从服务器的套接字连接之后，为该套接字创建响应的客户端状态，并将此时的从服务器看做是主服务器的客户端，也就是该从服务器同时具备服务器与客户端两个身份。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;               &lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227215358755-1847844895.png&quot; alt=&quot;&quot; width=&quot;407&quot; height=&quot;95&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;3、&lt;strong&gt;发送PING&lt;/strong&gt;&lt;strong&gt;命令&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;        从服务器成为主服务器的客户端之后，做的第一件事就是向主服务器发送PING命令。PING命令主要有两种作用：&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;&lt;strong&gt;1） 虽然建立了套接字连接，但是还未使用过，通过发送PING命令检查套接字的读写状态是否正常&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　2） 通过发送PING命令检查主服务器能否正常处理命令请求&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　从服务器在发送PING命令之后将遇到以下三种情况的其中一种：&lt;/p&gt;
&lt;p&gt;　&lt;span&gt;&lt;strong&gt;　1） 主服务器向从服务器返回一个回复，但是从服务器却不能在规定的会时间（timeout）内读取命令回复的内容，则表示当前主从服务器之间的网络状态连接不佳，不能基础执行复制工作的后续步骤，这时从服务器会断开套接字连接重新创建。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　2） 主服务器向从服务器返回一个错误，那么表示主服务器暂时没有办法处理从服务器的命令请求，不能继续执行复制工作的后续步骤，这时从服务器会断开套接字连接重新创建。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　3） 如果从服务器读取到“PONG”回复，那么表示主从服务器之间网络连接正常，并且主服务器可以处理从服务器发送的命令请求。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　 &lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227215659697-160862776.png&quot; alt=&quot;&quot; width=&quot;451&quot; height=&quot;287&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;4、身份验证&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;       从服务器接收到主服务器返回的“PONG”回复，接下来就需要考虑身份验证的事。&lt;/p&gt;
&lt;p&gt;       如果从服务器设置了masterauth选项，那么进行身份验证&lt;/p&gt;
&lt;p&gt;       如果从服务器没有设置masterauth选项，那么不进行身份验证&lt;/p&gt;
&lt;p&gt;　　从服务器在身份验证的时候可能遇到三种情况&lt;/p&gt;
&lt;p&gt;　&lt;span&gt;&lt;strong&gt;　1） 主服务没有设置requirepass选项，并且从服务器也没有设置masterquth选项，那么主服务器继续执行从服务器命令，完成复制工作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　2） 如果从服务器通过AUTH命令发送的密码与主服务器中requirepass密码相同，那么主服务器将继续执行从服务器发送的命令，复制工作继续，与此相反，密码不一致，则会返回invalid password错误&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　3） 如果从服务器没有设置masterauth选项，而主服务器设置了requirepass选项，那么主服务器将返回一个NOAUTH错误。反之没有设设置masterauth选项，而设置了requirepass选项，那么会返回no password is set错误。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　　　　　　　　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227215902279-299162514.png&quot; alt=&quot;&quot; width=&quot;499&quot; height=&quot;483&quot;/&gt;&lt;/p&gt;


&lt;h2&gt;&lt;strong&gt;5、发送端口信息&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;        &lt;/strong&gt;&lt;span&gt; &lt;strong&gt;在身份验证步骤之后，从服务器将执行命令REPLCONF listening-port &amp;lt;port&amp;gt;，向主服务器发送从服务器的监听端口号。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227215926355-186863757.png&quot; alt=&quot;&quot; width=&quot;574&quot; height=&quot;85&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;6、&lt;strong&gt;同步&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;        就是上述所指的同步操作，&lt;span&gt;&lt;strong&gt;从服务器向主服务器发送PSYNC命令，执行同步操作，值得注意的是只有从服务器是主服务器的客户端，但是执行同步操作之后，主服务器也会成为从服务器的客户端。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;                               &lt;img src=&quot;https://img2018.cnblogs.com/blog/1352849/201902/1352849-20190227215931465-172241826.png&quot; alt=&quot;&quot; width=&quot;437&quot; height=&quot;105&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;7、&lt;strong&gt;命令传播&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;   　主从服务器就会进入命令传播阶段，主服务器只要将自己执行的写命令发送给从服务器，而从服务器只要一直执行并接收主服务器发来的写命令（上述已经介绍过，这里不过多介绍）&lt;/p&gt;



&lt;p&gt;&lt;img src=&quot;c:/Users/Administrator/Desktop/copy.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 27 Feb 2019 14:27:00 +0000</pubDate>
<dc:creator>JJian</dc:creator>
<og:description>前言 关系数据库通常会使用一个主服务器向多个从服务器发送更新，并使用从服务器来处理所有的读请求，Redis采用了同样方法来实现自己的复制特性。 简单总结起来就是：在接收到主服务器发送的数据初始副本之后</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jian0110/p/10447491.html</dc:identifier>
</item>
<item>
<title>程序员的自我修养系列（一）：聊聊专业和业余 - 敏捷的水</title>
<link>http://www.cnblogs.com/cnblogsfans/p/programmer_self_cultivation.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cnblogsfans/p/programmer_self_cultivation.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/26781/201902/26781-20190227205359947-1328389872.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;理解专业和业余的区别，异常重要，会让我们进步非常快，不会让我们浪费如此珍贵的人生。&lt;/p&gt;
&lt;p&gt;毕业工作很多年，如果让我说一个感受很深的体会的就是 专业 和 业余 的区别，我想很多人都能理解这两个词的字面意思，但是要想有深刻的感受，却是不易。&lt;/p&gt;
&lt;p&gt;就比如我们看很多体育比赛，觉得人家没啥，就拿大家经常骂的国足来说，很多人老觉得自己踢球也还可以，还不如自己上去踢，那是因为这些人没亲眼见过人家的系统训练，现场观球很多时候业余人员也不太容易看一个人踢得如何，大部分主持人说的头头有道，估计最差的足球教练都不相信他们的胡扯，20年前，还是陕西国力的时候，我就看到一个陕西国力替补球员见球迷的时候，现场颠球跟玩一样，当然不是说颠球好就球踢得好。还有人说，女足水平太厉害了，国足踢不过女足，那都是超业余得看法，国足要是踢女足得话，完全是大学生欺负小学生，职业化水平差距太大了。&lt;/p&gt;

&lt;p&gt;我拿我自己经历的几件事来说一下：&lt;/p&gt;
&lt;p&gt;第一个例子：我们每年公司都举行一次乒乓球比赛，而且我们公司放了个乒乓球桌，大家还经常练一练，我们有一个瑞典的客户在我们这边待了半年，他不太会打球，所以我们公司乒乓球前10里都不太可能有他的影子，去年10月份，那个客户说他哥哥要来西安玩，说他哥哥小的时候训练过几个月，我们根本没当回事，但是结果是把我们虐的一塌糊涂，我们全公司的连发球都接不住。（下面就是他在发球)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/26781/201902/26781-20190227205423405-1757880295.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;所以，从这件事上充分说明被专业训练过几个月的人轻轻松松秒杀野路子打几十年的人。如果跟着业余的人做事，一定是误人子弟，一辈子不会有长进的。&lt;/p&gt;
&lt;p&gt;第二个例子，我有一个外国客户，现在在Google, 合作了很多年，现在我们成了非常好的朋友，人非常帅气， 相信我的很多同事都知道，8年前他们给客户的报价是我们这边均价5倍左右，刚开始我一直认为是外国人对中国程序员的歧视，所以认为我们就应该低，直到有一次他和我一起编码解决一个项目问题，他做事的质量和效率让我震惊，有一个小的东西要做，当时让我们一个还算高级的程序员做，我们这个高级程序员评估了2个礼拜，我们这个程序员第二天才刚搭建好环境，估计他觉得慢了，不好意思说，就说他们的客户希望这几天就要要，他说我们来不及了，然后晚上我俩吃完饭，喝完酒，他说Jack, 我们去酒店一起试试做做这个小项目吧，然后我们就拿了两瓶啤酒，一起写这个项目，几个小时之后，我们高级程序员需要2个礼拜的东西，几个小时边喝酒边完成了，然后我被深深的震撼了，我要说人家效率是我们的10倍一点不夸张，人家的报价才是我们的5倍，人家还觉得我们占便宜了呢？ 是我们很差吗？不是的，我自己很多时候也是一些程序员3，4倍的效率（我没说写代码厉害，我大部分时间都没有做无用功)，但是报价连2倍都不到。&lt;/p&gt;
&lt;p&gt;为什么有那么大的差距呢？我想说是因为专业的程度，除了写代码的速度，做事的方式，找问题，解决问题的方法等等就是有那么大的差距，很多人代码出问题的时候，需要把程序跑起来，设置断点，一个个试，人家早就用单元测试自动发现问题了, 这些人还一直沉醉在自己的这个状态中，使用Google的能力，我实在自叹不如。&lt;/p&gt;
&lt;p&gt;第三个例子，我见到了另一个国外的程序员，有幸他要在我们这里待半年，让我们两家成为了好朋友，刚和我们团队一起工作的时候，有很多我们会的东西他不会，我们还觉得有点优势，我还给他讲一些东西，很多时候讨论的时候，我们还能占一些主导，但是半年后，几乎没有我们会的他不会了，又过了两年，人家就可以自己写框架了，最近他自己成立了个个人咨询公司，正在服务一个客户，报价已经是我们目前这边报价的3倍了，如果说人家为何成长的为何如此之快，我还是要说人家用的是专业的训练方法。而我们还在到处找免费的东西，天天在网上看业余的人士胡扯。&lt;/p&gt;
&lt;p&gt;从上面你就可以看到，专业的训练用更少的时间达到了效果，然后在收入上有了很大的区别。&lt;/p&gt;

&lt;p&gt;我们都知道中国制造很厉害，但是很多核心技术，很多软的东西都提不起来，电脑操作系统不管是Windows, Linux和MacOS都是别人的，手机操作系统Android和iOS同样是别人的。我相信我们做不出这些东西，不是我们不够聪明，是因为除了我们总想找条捷径，不愿投入以外，还有很多人缺乏对专业的东西的敬畏，就拿BATJ（百度、阿里巴巴、腾讯、京东)，以及一些国内IT的一些大公司来说，微软、Google、苹果等这些公司离了他们几乎没多大影响，但是BATJ没有微软、Google、苹果等产品还真不行。&lt;/p&gt;
&lt;p&gt;为什么差别如此之大，就是对专业的态度上，我们弄不弄就说自己是第一，弄不弄就是乔布斯的接班人，任何行业不了解的时候，一定要向专业的人学习，对这个行业以及行业的前辈要有基本的敬畏。那些说：“没吃过猪肉，还没见过猪走吗？” 显然就是胡说，你没吃过猪肉，你怎么知道是什么味道呢？&lt;/p&gt;
&lt;p&gt;不相信专业的人，通常过度自负，觉得什么东西都可以完全自己搞，最后要么跟守株待兔一样，要么像瞎猫一样，举几个涉及到工作、学习、子女教育、生病等例子：&lt;/p&gt;
&lt;p&gt;工作，就拿我所在的软件行业，一些客户，你报个价格，他觉得这么简单这么贵？我自己回去找几个人来搞，这就是不敬重权威，觉得这东西就像去超市买个东西一样，刚毕业那几年，很多企业搞ERP，就是自己随便找几个人就觉得可以搞定，最后ERP变成了 （咦？哦？屁？)&lt;/p&gt;
&lt;p&gt;学习一样，很多人觉得自学能力强，我承认靠刻苦的自学，肯定也可以不错，因为有很多人根本就不学习，但是要更好，要做到行业里的前20%, 想成为大师，如果我们相信专业，我们就需要向专业人士学习，比如和专业人士一起工作， 购买专业人士的教程，买书也是向专业人士学习，可惜很多人不愿意花几十块钱，宁愿花几十天在网上瞎找资料，更可笑的还在用百度查技术资料。&lt;/p&gt;
&lt;p&gt;子女教育，很多人认为也是很简单的事，大师的书也不看，老师的话也不听、比自己牛的人观点也不停、自己也不成长， 我说的难听一点，那些觉得教育小孩儿自己无师自通的，也就是自己小孩儿幼儿园的水平，只是因为多活了几年，能比小孩儿多听懂几句话而已，如果你孩子将来还可以，那并不是你教育多成功，而是他后天付出了巨大的努力并且不能像父母一样的见识，另外，尤其很多孩子的父母的父母，一弄就说你不也长大了吗？我想说，现在都啥年代了，活着，像猪一样的活着，早都不是一个问题了。子女教育是个大话题，以后也是我想重点聊的，子女教育向来不是一个人的事，就算我和你自己说的很有道理，保持学习，也不一定我们的子女一定可以成功，但是可以保证的是，比我们不学习教育出来的孩子更成功，我为啥认为认识到专业性很重要，也是因为我也一样之前没认识到，吃了很大的亏，子女教育我就是小学生。&lt;/p&gt;
&lt;p&gt;生病治疗，我们很多人不相信专业，吃了很大的亏，很多人盲目相信一些所谓的“中医”，生病不吃药或者弄些所谓的安慰剂来吃，不相信专业的科学，我们要相信，大学医学院，实验室，那么多医药企业的研发团队，不太可能某个人没有经过正规训练的，就随随便便能治疗各种疑难杂症，我觉得相信这些的人，就等于相信科学家，个大学医学院精心挑选的人，医药研发团队的是傻逼，相信大街上有一个巨大的低垂的果实没有一个人看见，碰巧让他看见了。 所以，不管是谁生病，相信我，去医院找专业的医生是唯一正确的选择，自己网上瞎看，瞎琢磨，这药不能吃，那药不能吃，最终都会耽误事。&lt;/p&gt;
&lt;p&gt;坏了的钟表，一天时间也能对两次，所以做事情要学会衡量是不是这次是瞎猫碰到了死耗子。&lt;/p&gt;
&lt;p&gt;做为程序员，我们要想成为高级程序员，光有个漂亮女朋友是不够的，做出来的东西很专业，才是我们的基本修养。&lt;/p&gt;
</description>
<pubDate>Wed, 27 Feb 2019 13:21:00 +0000</pubDate>
<dc:creator>敏捷的水</dc:creator>
<og:description>毕业工作很多年，如果让我说一个感受很深的体会的就是 专业 和 业余 的区别，我想很多人都能理解这两个词的字面意思，但是要想有深刻的感受，却是不易。 就比如我们看很多体育比赛，觉得人家没啥，就拿大</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/cnblogsfans/p/programmer_self_cultivation.html</dc:identifier>
</item>
<item>
<title>PHPStorm中对nodejs项目进行单元测试 - 悠悠i</title>
<link>http://www.cnblogs.com/youyoui/p/10446784.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/youyoui/p/10446784.html</guid>
<description>&lt;h2 id=&quot;安装必要的包&quot;&gt;安装必要的包&lt;/h2&gt;
&lt;p&gt;nodejs的单元测试最常用的是使用&lt;code&gt;mocha&lt;/code&gt;包。首先确保你本地安装&lt;code&gt;nodejs&lt;/code&gt;，之后按照&lt;code&gt;mocha&lt;/code&gt;包。&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;npm install mocha -g&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后还需要安装相关的断言工具，Node.js中常用的断言库有：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;assert: TDD风格&lt;/li&gt;
&lt;li&gt;should: BDD风格&lt;/li&gt;
&lt;li&gt;expect: BDD风格&lt;/li&gt;
&lt;li&gt;chai: BDD/TDD风格&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;使用&lt;code&gt;npm install&lt;/code&gt;安装这些断言库其中之一即可。&lt;/p&gt;
&lt;h2 id=&quot;phpstorm配置nodejs单元测试环境&quot;&gt;PHPStorm配置nodejs单元测试环境&lt;/h2&gt;
&lt;p&gt;在PHPStorm中选择菜单：Run -&amp;gt; Edit Configurations，点击右上角添加&lt;code&gt;mocha&lt;/code&gt;。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/818185/201902/818185-20190227204541126-1498352934.png&quot; alt=&quot;PHPStorm配置nodejs单元测试环境&quot;/&gt;&lt;br/&gt;分别填写下面几项，关于&lt;code&gt;mocha&lt;/code&gt;单元测试可以参考官网：&lt;a href=&quot;https://mochajs.org/&quot; class=&quot;uri&quot;&gt;https://mochajs.org/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Name: 随便一个运行配置的名称，如MochaTest&lt;/li&gt;
&lt;li&gt;Working directory: 当前项目目录&lt;/li&gt;
&lt;li&gt;Mocha package: Mocha安装包的目录，node_modules\mocha&lt;/li&gt;
&lt;li&gt;User interface: 测试类型，这里选择TDD（对应&lt;code&gt;assert&lt;/code&gt;库）&lt;/li&gt;
&lt;li&gt;Test directory: 这一项可以选择测试目录或文件
&lt;ul&gt;&lt;li&gt;All in directory: 整个目录都进行测试&lt;/li&gt;
&lt;li&gt;File patterns: 某种模式的文件，可以填正则表达式&lt;/li&gt;
&lt;li&gt;Test file: 某个特定的测试文件&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;填写完成并且没有报错后点击OK。&lt;/p&gt;
&lt;h2 id=&quot;nodejs进行单元测试&quot;&gt;Nodejs进行单元测试&lt;/h2&gt;
&lt;p&gt;这里我们选择&lt;code&gt;assert&lt;/code&gt;库，TDD模式进行单元测试。在上面选定的&lt;code&gt;Test directory&lt;/code&gt;目录下新建一个测试文件&lt;code&gt;test.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;const assert = require('assert');

// 测试Array类型的方法
suite('Array', function() {
    // 测试 indexOf方法
    suite('#indexOf()', function() {
        // 测试用例
        test('should return -1 when not present', function() {
            assert.equal(-1, [1, 2, 3].indexOf(4));
        });
    });
});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;点击选择Mocha运行，在PHPStorm下面的输出框中有测试的结果，绿色表示通过，红色表示失败。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/818185/201902/818185-20190227204701282-890273847.png&quot; alt=&quot;PHPStorm配置nodejs单元测试环境&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;assert断言函数&quot;&gt;assert断言函数&lt;/h2&gt;
&lt;p&gt;下面列举&lt;code&gt;assert&lt;/code&gt;库中常用的断言函数，详情可参考官网：&lt;a href=&quot;https://www.npmjs.com/package/assert&quot; class=&quot;uri&quot;&gt;https://www.npmjs.com/package/assert&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;assert.fail(actual, expected, message, operator)&lt;/li&gt;
&lt;li&gt;assert(value, message), assert.ok(value, [message])&lt;/li&gt;
&lt;li&gt;assert.equal(actual, expected, [message])&lt;/li&gt;
&lt;li&gt;assert.notEqual(actual, expected, [message])&lt;/li&gt;
&lt;li&gt;assert.deepEqual(actual, expected, [message])&lt;/li&gt;
&lt;li&gt;assert.notDeepEqual(actual, expected, [message])&lt;/li&gt;
&lt;li&gt;assert.strictEqual(actual, expected, [message])&lt;/li&gt;
&lt;li&gt;assert.notStrictEqual(actual, expected, [message])&lt;/li&gt;
&lt;li&gt;assert.throws(block, [error], [message])&lt;/li&gt;
&lt;li&gt;assert.doesNotThrow(block, [message])&lt;/li&gt;
&lt;li&gt;assert.ifError(value)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;其中的参数说明如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;value: 实际值&lt;/li&gt;
&lt;li&gt;actual: 实际值&lt;/li&gt;
&lt;li&gt;expected: 期望值&lt;/li&gt;
&lt;li&gt;block: 语句块&lt;/li&gt;
&lt;li&gt;message: 附加信息&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;几种常见的测试风格代码举例&quot;&gt;几种常见的测试风格代码举例&lt;/h2&gt;
&lt;h3 id=&quot;bdd&quot;&gt;BDD&lt;/h3&gt;
&lt;p&gt;BDD提供的接口有：describe(), context(), it(), specify(), before(), after(), beforeEach(), and afterEach().&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;describe('Array', function() {
  before(function() {
    // ...
  });

  describe('#indexOf()', function() {
    context('when not present', function() {
      it('should not throw an error', function() {
        (function() {
          [1, 2, 3].indexOf(4);
        }.should.not.throw());
      });
      it('should return -1', function() {
        [1, 2, 3].indexOf(4).should.equal(-1);
      });
    });
    context('when present', function() {
      it('should return the index where the element first appears in the array', function() {
        [1, 2, 3].indexOf(3).should.equal(2);
      });
    });
  });
});&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;tdd&quot;&gt;TDD&lt;/h3&gt;
&lt;p&gt;提供的接口有： suite(), test(), suiteSetup(), suiteTeardown(), setup(), and teardown():&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;suite('Array', function() {
  setup(function() {
    // ...
  });

  suite('#indexOf()', function() {
    test('should return -1 when not present', function() {
      assert.equal(-1, [1, 2, 3].indexOf(4));
    });
  });
});&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;qunit&quot;&gt;QUNIT&lt;/h3&gt;
&lt;p&gt;和TDD类似，使用suite()和test()标记测试永烈，包含的接口有：before(), after(), beforeEach(), and afterEach()。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;function ok(expr, msg) {
  if (!expr) throw new Error(msg);
}

suite('Array');

test('#length', function() {
  var arr = [1, 2, 3];
  ok(arr.length == 3);
});

test('#indexOf()', function() {
  var arr = [1, 2, 3];
  ok(arr.indexOf(1) == 0);
  ok(arr.indexOf(2) == 1);
  ok(arr.indexOf(3) == 2);
});

suite('String');

test('#length', function() {
  ok('foo'.length == 3);
});&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Wed, 27 Feb 2019 12:47:00 +0000</pubDate>
<dc:creator>悠悠i</dc:creator>
<og:description>安装必要的包 nodejs的单元测试最常用的是使用 包。首先确保你本地安装 ，之后按照 包。 然后还需要安装相关的断言工具，Node.js中常用的断言库有： assert: TDD风格 should:</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/youyoui/p/10446784.html</dc:identifier>
</item>
</channel>
</rss>