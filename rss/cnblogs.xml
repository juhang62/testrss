<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>浅谈分布式集群管理的原理，看看集群究竟是做什么的 - TechFlow2019</title>
<link>http://www.cnblogs.com/techflow/p/12630277.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/techflow/p/12630277.html</guid>
<description>&lt;p&gt;本文始发于个人公众号：&lt;strong&gt;TechFlow&lt;/strong&gt;，原创不易，求个关注&lt;/p&gt;
&lt;br/&gt;&lt;section id=&quot;nice&quot; data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; readability=&quot;114&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天是&lt;strong&gt;分布式专题的第11篇&lt;/strong&gt;文章，我们一起来聊聊&lt;strong&gt;分布式集群资源管理&lt;/strong&gt;。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在开始文章之前，我们先来问一个问题，&lt;strong&gt;为什么是国际上是亚马逊，国内是阿里这两家公司云计算搞得最好呢&lt;/strong&gt;？这两家公司之间有一个巨大的共同点，就是它们都是&lt;strong&gt;电商公司&lt;/strong&gt;。电商公司的特点很明显，就是流量不是固定的，往往会受到大促、节日的影响。像是国内的双十一和美国的黑色星期五就是典型的大促。在大促的时候的流量会是平常的十倍甚至更多，这么大的流量必须要有更多的机器去应对。但问题是如果去买这么多机器，但是大促过了，流量下降，那么这些机器就又用不到了，显然就会造成浪费。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那怎么样才能&lt;strong&gt;避免浪费&lt;/strong&gt;呢？就是搞一个大集群，把所有机器和计算资源管理起来，大促的时候就用来应对大促的流量，平时呢可以用来搞搞大数据运算或者是租给其他公司或个人，形成一定的经济收益，总是就是&lt;strong&gt;不让这些机器闲着，以免浪费&lt;/strong&gt;。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本质上来说，亚马逊和阿里搞云计算、云服务器背后的核心驱动因素之一原因都是为了解决这个问题。&lt;/p&gt;
&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span class=&quot;content&quot;&gt;集群资源管理&lt;/span&gt;&lt;/h2&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集群资源管理是分布式非常普遍的应用场景，可以说是无论公司大小都必然有所接触。像是阿里云、亚马逊云说起来很高大上，但是底层也离不开这个。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个问题的背景非常简单，无论&lt;strong&gt;大小公司往往都不止一套系统&lt;/strong&gt;。但是公司的资源是有限的也是固定的，但是我们需要应用机器的场景却是灵活的。比如今天新上线了一个系统，需要占用几台服务器，明天这个系统效果不好，撤了，再把这几台服务器清出来。一开始的时候没有动态管理的集群系统，都是靠运维手动操作，所以那年代的运维都练就了一手拔插网线的好本事和健硕的手部肌肉。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在大数据时代到来之前，基本上机器变更基本上都是系统上线下线的情况，这还好说。毕竟一般的公司系统变化不会特别频繁，但是&lt;strong&gt;大数据时代&lt;/strong&gt;来临之后，临时任务的数量大增，今天需要跑下用户的这份数据，明天需要统计一份报表，来来回回的临时需求，而且这些需求往往需要用到大量机器（大数据嘛，机器少算不完），总不能都靠运维人肉处理吧？也不能指望每个开发都练就运维的本事，很浪费时间也不现实。所以很自然地人们想到了&lt;strong&gt;开发一套系统&lt;/strong&gt;来做这件事情。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是集群资源管理系统应运而生，像是我们常常听说的&lt;strong&gt;Yarn，Mesos，Corona&lt;/strong&gt;等，都是做这个的。&lt;/p&gt;
&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span class=&quot;content&quot;&gt;系统架构&lt;/span&gt;&lt;/h2&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们了解了资源管理系统是做什么的了之后，就可以来看看它的架构了。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它的&lt;strong&gt;架构本身并不复杂&lt;/strong&gt;，本质上这个系统只做了两件事情，一件事情是&lt;strong&gt;分配&lt;/strong&gt;，另一件事情是&lt;strong&gt;回收&lt;/strong&gt;。从功能上很好理解，我们需要把任务下发到机器，当任务执行了之后，我们需要把资源回收回来从而以后分配其他的任务。但从逻辑上，要实现这两点并不容易。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，我们&lt;strong&gt;需要知道当前所有任务的情况&lt;/strong&gt;，比如需要多少机器，以及执行的状态，是还没开始，还是已经开始了，或者是已经结束了。如果是结束了，那么需要收回机器，如果还没开始，则需要分配机器资源。除此之外&lt;strong&gt;还需要知道资源的情况&lt;/strong&gt;，哪些资源被哪些任务占据了，哪些是空闲的，这样才好进行分配。要做到这一点，必须要保证系统和所有机器的通信，还需要一个程序来&lt;strong&gt;执行分配策略&lt;/strong&gt;给还没有执行的任务分配资源。我们把这些内容整理一下，就可以画出系统架构图了。&lt;/p&gt;
&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/4/4/171429929e6b9b5b?w=631&amp;amp;h=691&amp;amp;f=png&amp;amp;s=75353&quot; alt=&quot;&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单解释一下上图，上面的部分就是我们的资源管理系统，下面的部分自然就是机器了。由于一台物理机的功能非常强大，所以&lt;strong&gt;一般我们不会直接接入系统&lt;/strong&gt;，而是会在上面部署多个容器，相当于多个虚拟机，也就是把一台机器变成多台加入集群。所以这个过程称为&lt;strong&gt;虚拟化&lt;/strong&gt;。以前很多C++工程师是就是专门做这个的，现在docker兴起，据说很多已经逐渐换成docker了。好处是如果单个或若干个容器挂了，整个物理机还活着，&lt;strong&gt;可以随时重启&lt;/strong&gt;。还有一个原因是一般没有那么大的任务可以吃掉一整个物理机的资源，也是节约资源。除了容器之外，还需要一个&lt;strong&gt;节点管理器&lt;/strong&gt;，负责和整个管理系统通信。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;资源收集器负责搜集这些容器当前的状态，如果有已经执行结束的，则把它们添加进&lt;strong&gt;资源池&lt;/strong&gt;当中，也就是当前可用的意思。调度策略执行器发现有新的机器可用之后会去查看任务队列，将其中一些任务分配到这些可用的容器当中。工作队列当中的任务可以是多种多样的，比如spark，MapReduce等等。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不难看出这当中调度策略执行器是整个管理系统的核心，其他所有的模块都是为它服务的。详细的分配策略涉及的细节和逻辑非常多，所以我们把具体的策略内容放到下一篇文章当中。我们只需要有个大概的认识，知道它是负责调度任务和分配执行的即可。&lt;/p&gt;
&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span class=&quot;content&quot;&gt;集群管理的优缺点&lt;/span&gt;&lt;/h2&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然我们已经有了管理系统，看起来好像牛哄哄的。但是这方面目前&lt;strong&gt;仍然处于摸索状态&lt;/strong&gt;，还远远没有成熟。这些系统之间多有不同，但是原理都是类似的，本质上都是&lt;strong&gt;在我们的硬件资源之上抽象出一个管理系统&lt;/strong&gt;，就好像雇佣了一个工作飞快永远不会累的管家。我们只需要告诉他，我们当前需要做什么，需要多少资源。至于怎么分配，怎么完成，统统交给他，我们再也不用操心。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这么做和之前人肉分配相比，进步了非常多，有非常明显的优点。我们随便就可以列举出好几条。&lt;/p&gt;
&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span class=&quot;content&quot;&gt;优点&lt;/span&gt;&lt;/h3&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如我们的&lt;strong&gt;机器利用率变高&lt;/strong&gt;了，因为之前人工分配了资源之后资源就固定了。比如分配给A任务一台机器，但问题是A任务并不是一直满负荷的。可能白天流量大，消耗高，但是到了晚上流量就小了，占用的资源就少了。而B任务可能相反，白天不需要运作，到了晚上开始发力，需要大量计算（比如现在很多机器学习的大型job都是凌晨跑的）。如果是人工分配的话，我们可能需要两台机器分别执行A和B，但显然这是不合理的，因为我们完全可以把它们合并，让它们互相互补。但是每天都依靠人力来做这件事情是不现实的，万一运维哪天忘了不是完蛋了。而有了管理系统，会有个系统替我们做这件事，它会把所有资源都安排妥当，自然利用率就高了。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，某种程度上来说也&lt;strong&gt;减少了数据存储的消耗&lt;/strong&gt;。比如之前的用户数据在许多系统当中用到，不同的系统需要单独存储一份。不然不同的team用同一份数据很容易出现责任划分不清楚扯皮的问题，有了分布式管理系统之后，我们只需要在分布式系统当中存储一份数据找专人维护即可，避免了重复劳动。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，支持多种计算框架。比如像是Yarn，mesos等集群支持众多计算框架，无论是MapReduce也好，还是spark也罢，或者是hive等等都可以用一套系统来管理，非常灵活方便。甚至还可以支持多版本，也不会影响。&lt;/p&gt;
&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span class=&quot;content&quot;&gt;不足&lt;/span&gt;&lt;/h3&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;凡事有好有坏，没有事情的完美的&lt;/strong&gt;。既然有优点必然有不足，关于调度策略产生的问题，我们今天先不谈，今天主要讲讲调度系统本身的问题。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一点也是最重要的一条就是&lt;strong&gt;风险&lt;/strong&gt;，表面上看我们使用集群调度系统降低了集群的风险，因为单个的节点挂了并不会影响整个集群的运行。我们只需要找到单个节点挂掉的原因进行修复，或者等待系统自动重启就好了。系统宕机的&lt;strong&gt;风险被均摊了&lt;/strong&gt;，但问题是均摊风险其实本身就是很危险的事情，它也意味着风险的聚集。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如说有没有想过如果&lt;strong&gt;集群管理系统本身宕机了呢&lt;/strong&gt;？&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果连负责任务调度的系统都挂了，显然整个集群也就完蛋了。这种事情&lt;strong&gt;看似发生的概率非常小&lt;/strong&gt;，但是一旦发生，对于企业带来的影响和损失是巨大的。据说之前阿里云宕机了一个下午，中国大半个互联网的网站受此影响无法访问。这也是阿里这几年一直在搞&lt;strong&gt;异地多活，各种容灾备案&lt;/strong&gt;的原因。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二个不足是系统目前&lt;strong&gt;还不够智能&lt;/strong&gt;，比如说如果集群规定了每个任务最多占用的资源总量，突然我们扩容了机器，或者是临时有一个大任务需要超额。这些情况都需要人工干预，再比如对于系统开发的时候能够预料的一些问题有很好的解决措施，比如节点挂了，资源吃满了等等。但是&lt;strong&gt;对于没有预料到的问题则完全解决不了&lt;/strong&gt;，比如某个节点卡死了，没有挂一直占着资源。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再比如一些集群里&lt;strong&gt;被人为安置了一些非法的脚本&lt;/strong&gt;，比如黑客的入侵脚本，或者是挖矿脚本等等。前阵子比较火的某度员工在公司机器上挖矿了好几个月才被抓，为什么没能及时发现？因为资源都是系统调度的，人工很少干预，也没人会去整天看系统里到底都在跑些什么任务。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，&lt;strong&gt;有问题就有前进的方向&lt;/strong&gt;，这些问题其实也反应了我们目前这一块还有很长的路要走，目前的方案还比较原始。以后应该会有更好用的集群管理的设计理念也会有更好的系统，当然万丈高楼平地起，未来的方案也是基于当下一点一点改进得到的。我们学习的目的和意义也正在于此。&lt;/p&gt;
&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天的文章就是这些，如果觉得有所收获，请顺手点个&lt;strong&gt;关注或者转发&lt;/strong&gt;吧，你们的举手之劳对我来说很重要。&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/4/4/1714299389341eae?w=258&amp;amp;h=258&amp;amp;f=png&amp;amp;s=23988&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 04 Apr 2020 00:34:00 +0000</pubDate>
<dc:creator>TechFlow2019</dc:creator>
<og:description>本文始发于个人公众号： TechFlow ，原创不易，求个关注 今天是分布式专题的第11篇文章，我们一起来聊聊分布式集群资源管理。 在开始文章之前，我们先来问一个问题，为什么是国际上是亚马逊，国内是阿</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/techflow/p/12630277.html</dc:identifier>
</item>
<item>
<title>JavaScript JSON 与 AJAX - pgjett</title>
<link>http://www.cnblogs.com/pgjett/p/12630265.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pgjett/p/12630265.html</guid>
<description>&lt;div id=&quot;cnblogs_post_description&quot; readability=&quot;34&quot;&gt;&lt;img data-src=&quot;https://blog-static.cnblogs.com/files/pgjett/41.ico&quot; class=&quot;desc_img&quot;/&gt; JSON 是一种轻量的数据交互格式，与 AJAX 配合完成前端与服务端的信息传递，本文介绍 JSON 的使用、原生 AJAX 写法、JSONP 跨域解决方法以及 AJAX 和 JSONP 工具函数的封装&lt;/div&gt;&lt;div id=&quot;cnblogs_post_body&quot; readability=&quot;57&quot;&gt;

&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;JSON 是一种轻量的数据交互格式，与 AJAX 配合完成前端与服务端的信息传递，本文介绍 JSON 的使用、原生 AJAX 写法、JSONP 跨域解决方法以及 AJAX 和 JSONP 工具函数的封装&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;json-的概念&quot;&gt;JSON 的概念&lt;/h2&gt;
&lt;ol readability=&quot;8&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;所有编程语言都离不开的三大数据结构&lt;/p&gt;
&lt;p&gt;scalar 标量：数字和字符串&lt;/p&gt;
&lt;p&gt;sequence 序列：数组和列表&lt;/p&gt;
&lt;p&gt;mapping 映射：键值对&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;JSON：JavaScript Object Notation，轻量级的数据交互格式&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;JSON 数据是没有方法的普通对象，或者是包含这种对象的数组&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var person = {
    &quot;name&quot;: &quot;jett&quot;,
    &quot;age&quot;: &quot;22&quot;,
    &quot;sex&quot;: &quot;男&quot;
}
var persons = [
    {
    &quot;name&quot;: &quot;jett&quot;,
    &quot;age&quot;: &quot;22&quot;,
    &quot;sex&quot;: &quot;男&quot;
        },
    {
    &quot;name&quot;: &quot;lily&quot;,
    &quot;age&quot;: &quot;20&quot;,
    &quot;sex&quot;: &quot;女&quot;
        }
]
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;json-的基本格式&quot;&gt;JSON 的基本格式&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;键值对以冒号隔开&lt;/li&gt;
&lt;li&gt;键名强制使用双引号&lt;/li&gt;
&lt;li&gt;并列数据用逗号隔开&lt;/li&gt;
&lt;li&gt;并列数据集合用&lt;code&gt;[]&lt;/code&gt;包围&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;json-与对象的转换&quot;&gt;JSON 与对象的转换&lt;/h2&gt;
&lt;ol readability=&quot;5.5&quot;&gt;&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;JSON 转换成 JS 对象&lt;/p&gt;
&lt;p&gt;JSON.parse()&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id='box' data-info='{&quot;name&quot;:&quot;Jett&quot;,&quot;age&quot;:&quot;22&quot;}'&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;// JSON.parse(str) str -&amp;gt; object
var box = document.getElementById('box');
var jsonData = box.getAttribute('data-info');
var obj = JSON.parse(jsonData);
console.log(obj);
// {name:&quot;Jett&quot;,age:&quot;22&quot;}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;eval()&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var obj = eval('('+jsonData+')');
// eval 可以执行任何 JS 代码，所以可以将 jsonData 当作代码执行
// 为安全性考虑，最好使用 JSON.parse()
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;JS 对象转换 JSON&lt;/p&gt;
&lt;p&gt;JSON.stringify()&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var obj = {
        name: 'Jett',
        age: 22,
        sex: '男'
    }
var jsonData  = JSON.stringify(obj);
console.log(jsonData);
// {&quot;name&quot;:&quot;Jett&quot;,&quot;age&quot;:22,&quot;sex&quot;:&quot;男&quot;}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;ajax-的概念&quot;&gt;AJAX 的概念&lt;/h2&gt;
&lt;ol readability=&quot;3.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;AJAX：Asynchronous JavaScript and XML，异步的 JavaScript 和 XML&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;AJAX 不是新的编程语言，而是一种使用现有标准的新方法&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;AJAX 最大的优点是在不重新加载整个页面的情况下，可以与服务器交换数据并更新部分网页内容&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;AJAX 工作原理&lt;/p&gt;
&lt;p&gt;浏览器创建 XMLHttpRequest 对象，发送 AJAX 请求&lt;/p&gt;
&lt;p&gt;服务器接收请求，创建响应，返回数据&lt;/p&gt;
&lt;p&gt;浏览器接收数据，动态渲染页面&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;ajax-的基本写法&quot;&gt;AJAX 的基本写法&lt;/h2&gt;
&lt;ol readability=&quot;22.5&quot;&gt;&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;创建 XMLHttpRequest 对象&lt;/p&gt;
&lt;p&gt;XMLHttpRequest 用于在后台与服务器交换数据&lt;/p&gt;
&lt;p&gt;兼容 IE7 及以上&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var xmlhttp;
if (window.XMLHttpRequest) {
    xmlhttp = new XMLHttpRequest();
} else {
    // 兼容 IE6/5
    xmlhttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;15&quot;&gt;
&lt;p&gt;发送 AJAX 请求&lt;/p&gt;
&lt;p&gt;GET 请求&lt;/p&gt;
&lt;p&gt;url 为请求地址，在地址后使用 &lt;code&gt;?&lt;/code&gt; 拼接消息内容，如 ?name=Jett&amp;amp;age=22&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;xmlhttp.open('GET',url, true);
xmlhttp.send();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;POST 请求&lt;/p&gt;
&lt;p&gt;send 方法内传入消息内容，如：name=Jett&amp;amp;age=22&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;xmlhttp.open('POST',url, true);
// xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);
// 通过 setRequestHeader 设置请求头
xmlhttp.send(data);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;GET 请求比 POST 更快，但安全性低，且传输数据的大小有限制&lt;/p&gt;
&lt;p&gt;第三参数 true 代表异步，fasle 代表同步&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;15&quot;&gt;
&lt;p&gt;监听响应状态&lt;/p&gt;
&lt;p&gt;XMLHttpRequest 对象有 readystatechange 事件，用于监听 readystate 的改变&lt;/p&gt;
&lt;p&gt;XMLHttpRequest 对象的 readystate 表示 AJAX 请求的状态&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;0: 请求未初始化
1: 服务器连接已建立
2: 请求已接收
3: 请求处理中
4: 请求已完成，且响应已就绪
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;XMLHttpRequest 对象的 status 表示 http 请求的状态码&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;200: 请求
404: 未找到页面
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;监听 readystatachange 事件，并判断状态&lt;/p&gt;
&lt;p&gt;当 xmlhttp.readyState 为 4，xmlhttp.status 为 200 时，代表请求成功且响应就绪&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;xmlhttp.onreadystatechange=function() {
    if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200) {
        // ...
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;处理响应&lt;/p&gt;
&lt;p&gt;XMLHttpRequest 对象的 responseText 或 responseXML 属性用于接收服务端返回的数据&lt;/p&gt;
&lt;p&gt;顾名思义，respnseXML 用于接收 XML 格式的响应数据，responseText 用于接收一般数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;xmlhttp.onreadystatechange=function() {
    if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200) {
        console.log(xmlhttp.responseText);
        // 获得响应数据并使用
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;jsonp-的概念&quot;&gt;JSONP 的概念&lt;/h2&gt;
&lt;ol readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;跨域请求&lt;/p&gt;
&lt;p&gt;URL = 协议名 + 主机名 + 端口号 + 资源名称&lt;/p&gt;
&lt;p&gt;域 = 协议名 + 主机名 + 端口号&lt;/p&gt;
&lt;p&gt;出于安全性考虑，只有当页面所在域和请求的目的地址在同一域才允许访问&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;JSONP 是一种跨域解决方案&lt;/p&gt;
&lt;p&gt;目前解决浏览器跨域问题的方法有 JSONP、cors 策略等，cors 策略是 HTML5 的新特性，老版本浏览器可能不支持，JSONP 是最常用的处理方式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;jsonp-的原理&quot;&gt;JSONP 的原理&lt;/h2&gt;
&lt;ol readability=&quot;7.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在 HTML 众多标签中，有些标签具有跨域功能，如 script、img、iframe&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;11&quot;&gt;
&lt;p&gt;JSONP 就是利用 script 标签的跨域能力，动态生成一个 script 标签，指定 src 为请求地址&lt;/p&gt;
&lt;p&gt;页面中定义的方法&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-html&quot;&gt;&amp;lt;scrip type=&quot;text/javascript&quot;&amp;gt;
    funtion test(data) {
        console.log(data);
    }
&amp;lt;/scrip&amp;gt;
&amp;lt;!--动态生成的 script 标签--&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;htpp://localhost:8888&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;htpp://localhost:8888 地址返回的数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;test('这是请求返回的数据')
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将生成的 script 标签添加到 DOM 中，浏览器根据 src 请求目的地址，得到返回的数据，因为是 script 标签，浏览器会将返回的数据当成 JS 代码来执行，就是执行页面中定义的方法，刚好可以将其中的参数顺利带到页面中&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;我们在页面上定义一个函数，将其函数名通过 URL 查询字符串传到服务端，服务端拼接字符串，返回执行该函数的 JS 代码，并将要传递的数据放在参数中，这样在页面上定义好的函数就可以被执行，并且得到了服务端传来的数据，在该函数内执行成功回调，就可以对服务端数据进行处理了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;jsonp-回调函数&quot;&gt;JSONP 回调函数&lt;/h2&gt;
&lt;ol readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;对于普通 AJAX 请求我们可以通过监听 XMLHttpRequest 的 readystatechange 事件，判断 readystate 和 status 来知晓请求和响应是否完成，以执行成功回调或出错回调&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;JSONP 方式本质上是利用 script 标签的 src 进行请求，响应情况如下：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;ul readability=&quot;10.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;如果 src 指向资源存在，且其返回的字符串被当成 JS 代码成功执行&lt;/p&gt;
&lt;p&gt;即页面内定义好的函数被成功执行，该函数内的成功回调函数可以通过参数拿到数据进行处理&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;如果 src 指向的目的资源访问不到&lt;/p&gt;
&lt;p&gt;script 标签会触发 error 事件，监听此事件可以获得执行出错回调的时机&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var script = document.createElement('script');
script.onerror = funtion() {
    // 执行出错回调函数
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;12&quot;&gt;
&lt;p&gt;如果 src 指向资源存在，返回的字符串会因为是 script 标签而被执行，执行过程中出错&lt;/p&gt;
&lt;p&gt;在执行成功回调函数前，对 script 标签对象添加一个标记属性，监听 script 的 load 事件发生时对象是否有该标签属性&lt;/p&gt;
&lt;p&gt;因为 onload 函数在 script 标签加载完成后执行，script 标签在其引入的代码执行后，才会响应 onload 处理函数，通过判断标记属性是否添加成功，可以知晓 script 标签引入的代码是否成功执行，如果标记属性为 undefined，则执行出错回调&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var script = document.createElement('script');
window.callback = function (res) {
    script['jsonp'] = 1;
    // 执行成功回调函数
}
script.onload = function () {
    if (typeof script['jsonp'] === 'undefined') {
        // 执行出错回调函数
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ol start=&quot;3&quot; readability=&quot;7&quot;&gt;&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;需要注意的是，IE8 及以下 script 标签对象不支持 onerror，也不支持 onload，但支持 onreadystatechange&lt;/p&gt;
&lt;p&gt;通过判断 readystate 来知晓 script 标签的加载状态，当 readystate 为 loaded 或 complete 时，表示 script 标签加载完成，即 script 标签引入的代码已经执行，同样的，在成功回调函数前为 script 对象添加标记属性，通过判断标记属性是否添加成功，可以知晓 script 标签引入的代码是否成功执行，如果标记属性为 undefined，则执行出错回调&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;script.onreadystatechange = function () {
    // 正则表达式判断 readystate 是否为 loaded 或 complete
    if (/loaded|complete/i.test(this.readyState)) {
        if (typeof script['jsonp'] === 'undefined') {
            // 执行出错回调函数
        }
    }
}}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;函数名动态生成，利用 onload 配合 onreadystate 判断加载状态，执行完毕后 delete 对应函数，并 remove 对应 script 标签节点&lt;/p&gt;
&lt;p&gt;在自己封装 JSONP 函数时，我们可能会在 window 对象下动态添加函数如 callback，这样 script 的 src 指定资源返回形如 callback('数据') 的字符串数据，就可以直接执行此函数并获取数据，但是我们在优化 JSONP 函数时，会希望将动态创建的函数删除，在 IE8 中 delete window 下的属性会报不支持，我们可以在 Window.prototype 上添加函数，同样可以在直接执行，且支持 delete&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;ajax-与-jsonp-的封装&quot;&gt;AJAX 与 JSONP 的封装&lt;/h2&gt;
&lt;ol readability=&quot;18&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;封装一个 ajax 函数，支持 get、post、jsonp 三种形式的请求，以对象形式传入参数&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;配置项&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var opt = {
    type: 'get', 
        url: 'http://...',
        data: { // 数据使用对象形式
      name: 'zzh',
      age: '21'
    },
        async: true, // 默认 true
        success: function(res) {
        
    },
        error: function() {
        
    },
        timeout: 3000 // 默认 60000
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;25&quot;&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;function ajax(option) {
    // 设置默认参数
    var opt = {
        type: option.type.toUpperCase(),
        url: option.url,
        data: option.data || null,
        async: option.async || false,
        success: option.success,
        error: option.error,
        timeout: option.timeout || 60000
    };
    // 用于 jsonp 的回调函数名
    var callback = 'callback' + new Date().getTime();

    var type = opt.type,
        success = opt.success,
        error = opt.error,
        data = parseData(opt.data); // 将 data 对象装换成查询字符串

    if (type === 'GET' || type === 'POST') {
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 &amp;amp;&amp;amp; xhr.status === 200) {
                success &amp;amp;&amp;amp; success(xhr.responseText, xhr.status);
            } else {
                error &amp;amp;&amp;amp; error(xhr.status);
            }
        }
        if (type == 'GET') {
            opt.url += data;
            data = null;
        }
        xhr.open(type, opt.url, opt.async);
        xhr.send(data);
        setTimeout(function () {
            xhr.abort();
            console.error(opt.url + '请求超时');
        }, opt.timeout);
    } else if (type === 'JSONP') {
        var script = document.createElement('script');
        script.src = opt.url + data;
        // 选则存放在 Window 原型上，window 下可以使用
        // 如果直接存放在 window 上，IE8 window 属性不支持 dalete
        Window.prototype[callback] = function (res) {
            script['jsonp'] = 1;
            success &amp;amp;&amp;amp; success(res);
        }
        document.body.appendChild(script);

        // -[1,] 在 IE8 返回 NaN，IE9 及以上返回 -1
        if (-[1,]) {
            // IE9 及以上支持 onerror
            // onerror 用于请求失败，未执行 callback
            // onload 用于请求成功,但执行 callback 出错
            script.onerror = script.onload = function () {
                if (typeof script['jsonp'] === 'undefined') {
                    error &amp;amp;&amp;amp; error();
                }
                script.parentNode.removeChild(script);
                delete  Window.prototype[callback];
            }
        } else {
            // script.onreadystatechange 兼容 IE8
            script.onreadystatechange = function () {
                // -[1,] 在 IE8 返回 NaN，IE9 及以上返回 -1
                if (/loaded|complete/i.test(this.readyState)) {
                    if (typeof script['jsonp'] === 'undefined') {
                        error &amp;amp;&amp;amp; error();
                    }
                    script.parentNode.removeChild(script);
                    delete  Window.prototype[callback];
                }
            }
        }

    }

    function parseData(data) {
        var arr = [],
            str;
        if (type === 'GET') {
            str = '?';
        } else if (type === 'POST') {
            str = '';
        } else if (type === 'JSONP') {
            str = '?callback=' + callback + '&amp;amp;';
        }
        for (var k in data) {
            arr.push(k + '=' + data[k]);
        }
        return str + arr.join('&amp;amp;');
    }
}
// 使用示例
ajax({
    type: 'jsonp',
    url: 'http://127.0.0.1:8888/',
    data: {
        name: 'jett',
        age: 22
    },
    success: function (res) {
        console.log('接收数据：' + res);
    },
    error: function () {
        console.log('error() 执行了');
    }
})
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</description>
<pubDate>Sat, 04 Apr 2020 00:17:00 +0000</pubDate>
<dc:creator>pgjett</dc:creator>
<og:description>JavaScript JSON 与 AJAX JSON 是一种轻量的数据交互格式，与 AJAX 配合完成前端与服务端的信息传递，本文介绍 JSON 的使用、原生 AJAX 写法、JSONP 跨域解决方</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/pgjett/p/12630265.html</dc:identifier>
</item>
<item>
<title>netcore升级 - RickyLucky</title>
<link>http://www.cnblogs.com/rickylucky/p/12630255.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rickylucky/p/12630255.html</guid>
<description>&lt;!--[if IE]&gt;
    &lt;div class=&quot;unsupported-browser&quot;&gt;
        &amp;#35813;&amp;#39029;&amp;#38754;&amp;#19981;&amp;#25903;&amp;#25345; Internet Explorer &amp;#27983;&amp;#35272;&amp;#22120;&amp;#65292;&amp;#24314;&amp;#35758;&amp;#20351;&amp;#29992;
        &lt;a href=&quot;https://www.google.cn/intl/zh-CN/chrome/&quot;&gt;Google Chrome&lt;/a&gt;,
        &lt;a href=&quot;https://www.mozilla.org/zh-CN/firefox/&quot;&gt;Firefox&lt;/a&gt; &amp;#25110;
        &lt;a href=&quot;https://www.microsoftedgeinsider.com/zh-CN/&quot;&gt;Microsoft Edge&lt;/a&gt;
    &lt;/div&gt;
&lt;![endif]--&gt;
    &lt;div class=&quot;center-container &quot;&gt;
        &lt;div class=&quot;center-body card  h-sm-100&quot;&gt;
            &lt;div class=&quot;card-body&quot;&gt;
                


&lt;div class=&quot;login-top text-center&quot;&gt;
    &lt;span class=&quot;login-title&quot;&gt;博客园用户登录&lt;/span&gt;
    &lt;a href=&quot;https://www.cnblogs.com/&quot;&gt;
        &lt;svg class=&quot;login-sign&quot;&gt;&lt;use xlink:href=&quot;#icon-login-sign&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;
    &lt;p&gt;代码改变世界&lt;/p&gt;
&lt;/div&gt;
&lt;form id=&quot;loginForm&quot; method=&quot;post&quot; onsubmit=&quot;return false&quot;&gt;
    
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;input tabindex=&quot;1&quot; class=&quot;form-control&quot; placeholder=&quot;登录用户名 / 邮箱&quot; autofocus=&quot;&quot; type=&quot;text&quot; data-val=&quot;true&quot; data-val-required=&quot;请输入登录用户名&quot; id=&quot;LoginName&quot; name=&quot;LoginName&quot; value=&quot;&quot;/&gt;&lt;span class=&quot;invalid-feedback field-validation-valid&quot; data-valmsg-for=&quot;LoginName&quot; data-valmsg-replace=&quot;true&quot;/&gt;
            &lt;a class=&quot;txt-forget-sign&quot; href=&quot;https://account.cnblogs.com/forgotloginname&quot;&gt;忘记登录用户名&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-group&quot;&gt;
            &lt;input tabindex=&quot;2&quot; class=&quot;form-control&quot; placeholder=&quot;密码&quot; type=&quot;password&quot; data-val=&quot;true&quot; data-val-required=&quot;请输入密码&quot; id=&quot;Password&quot; name=&quot;Password&quot;/&gt;&lt;span class=&quot;invalid-feedback field-validation-valid&quot; data-valmsg-for=&quot;Password&quot; data-valmsg-replace=&quot;true&quot;/&gt;
            &lt;a class=&quot;txt-forget-sign&quot; href=&quot;https://account.cnblogs.com/resetpassword&quot;&gt;忘记密码&lt;/a&gt;
        &lt;/div&gt;
        &lt;p&gt;
            &lt;input tabindex=&quot;3&quot; type=&quot;checkbox&quot; id=&quot;IsRemember&quot; name=&quot;IsRemember&quot; value=&quot;true&quot; class=&quot;custom-control-input&quot;/&gt;&lt;label class=&quot;custom-control-label&quot; for=&quot;IsRemember&quot;&gt;记住我&lt;/label&gt;
        &lt;/p&gt;

        &lt;button tabindex=&quot;4&quot; id=&quot;submitBtn&quot; type=&quot;submit&quot; class=&quot;btn-login btn btn-primary btn-sm ladda-button px-4&quot; data-style=&quot;slide-down&quot;&gt;
            &lt;span class=&quot;ladda-label&quot;&gt;登录&lt;/span&gt;
        &lt;/button&gt;
        &lt;div class=&quot;login-footer&quot;&gt;
            &lt;div class=&quot;ajax-error-box&quot;&gt;
                
            &lt;/div&gt;
            &lt;span&gt;没有账户，&lt;a href=&quot;https://account.cnblogs.com/signup&quot;&gt;立即注册&lt;/a&gt;&lt;/span&gt;
        &lt;/div&gt;
    
&lt;input name=&quot;__RequestVerificationToken&quot; type=&quot;hidden&quot; value=&quot;CfDJ8Nf-Z6tqUPlNrwu2nvfTJEgt2qP8N-WMcwBHXVgvCpD5XjRPN0-3-bP_cEB14jEg8o3W_ywovC7qjqg-iWiBKyfs_NgsEv_NnGL5asPEtI-S7vNr87WjEI3IZDP8OlAS4C1e1jttOfpz_mRwzfYGCFA&quot;/&gt;&lt;/form&gt;

&lt;input type=&quot;hidden&quot; id=&quot;PublicKey&quot; name=&quot;PublicKey&quot; value=&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCp0wHYbg/NOPO3nzMD3dndwS0MccuMeXCHgVlGOoYyFwLdS24Im2e7YyhB0wrUsyYf0/nhzCzBK8ZC9eCWqd0aHbdgOQT6CuFQBMjbyGYvlVYU2ZP7kG9Ft6YV6oc9ambuO7nPZh+bvXH0zDKfi02prknrScAKC0XhadTHT3Al0QIDAQAB&quot;/&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    </description>
<pubDate>Sat, 04 Apr 2020 00:07:00 +0000</pubDate>
<dc:creator>RickyLucky</dc:creator>
<dc:language>zh</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://account.cnblogs.com/signin?ReturnUrl=https://www.cnblogs.com/rickylucky/p/12630255.html</dc:identifier>
</item>
<item>
<title>从零开始发布一个ArcGIS Server地图服务 - 三分恶</title>
<link>http://www.cnblogs.com/three-fighter/p/12630251.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/three-fighter/p/12630251.html</guid>
<description>&lt;p&gt;@&lt;/p&gt;&lt;p&gt;此前从未接触过ArcGIS，对Oracle和postGre SQL也比较陌生。本文介绍了从零开始，到搭建环境，再到发布第一个ArcGIS地图服务的完整过程。&lt;/p&gt;
&lt;p&gt;由于在地图制作时我们需要在 arcMap 中读取数据库中的地理数据，并且在发布地图服务时。arcGIS Server 也需要从数据库中读取数据并发布。所以我们需要建立起 arcMap----&amp;gt; 数据库 和 arcGIS Server-----&amp;gt;数据库的连接。并且，由于我们可以在 arcMap 对 arcGIS Server 进行管理，所以也需要建立起这两者的连接。具体关系如下（以 postgreSQL为例：）&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040316301752.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;本文中ArcGis相关软件版本为10.2，Oracle版本为11g，PostgreSQL版本为9.1。&lt;/p&gt;
&lt;p&gt;本文用到的软件下载地址：&lt;/p&gt;
&lt;blockquote readability=&quot;2.0625&quot;&gt;
&lt;p&gt;度盘：&lt;a href=&quot;https://pan.baidu.com/s/1fdAiJW1YSBlQcj7Siu4kpg&quot;&gt;https://pan.baidu.com/s/1fdAiJW1YSBlQcj7Siu4kpg&lt;/a&gt;    提取码：a41c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;在软件的安装过程中，有一些账号密码的配置，建议使用记事本等工具记录，以免忘记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;&lt;h2 id=&quot;1、数据库安装&quot;&gt;1、数据库安装&lt;/h2&gt;
&lt;p&gt;ArcGIS支持若干数据库，我们这里用了两种，Oracle和开源的postGre SQL，选用其中一种即可。相比较而言，使用Oracle作为地理数据库的搭建要简单一些，条件允许的话，推荐使用Oracle数据库。&lt;/p&gt;
&lt;h3 id=&quot;11、oracle（可选）&quot;&gt;1.1、Oracle（可选）&lt;/h3&gt;
&lt;h4 id=&quot;111、安装oracle服务端&quot;&gt;1.1.1、安装Oracle服务端&lt;/h4&gt;
&lt;p&gt;这里选择的是Oracle11g 64位。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;运行安装&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403093409168.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;出现下图警告，不用理会&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403093500637.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电子邮件可以不填&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403093538573.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;安装选项选择创建和配置数据库&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403093610255.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;根据机器的配置情况自行选择，这里选择的是桌面类&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403093711637.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;自定义Oracle的基目录，管理口令自行设置&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403094034605.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403094107571.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;安装产品，时间会比较长，喝杯茶慢慢等待吧&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403094222431.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403095133521.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;产品安装完成后记得要做口令管理&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403095658128.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;这里主要配置3个账户，sys账户，相当于MySQL的root账户；system账户，普通管理员，客户端配置的时候会用到；scott账户，普通账户。&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403100600554.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403100709964.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403100736297.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;测试Oracle是否安装完成：在Dos窗口里输入命令sqlplus，用户名和口令输入system账户的用户名和口令，如下，Oracle服务端安装完成。&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403100901465.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Oracle配置，由于这里Oracle和Arcgis是安装在一台机器上，所以配置基本不用变更&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403101232557.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;查看Oracle的配置：服务名、网络地址。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403101519545.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403101549998.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果要配置Oracle非本地的访问，可以查看参考【1】&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;h4 id=&quot;112、安装oracle客户端&quot;&gt;1.1.2、安装Oracle客户端&lt;/h4&gt;
&lt;p&gt;Oracle客户端需要安装32位客户端，因为ArcGIS DeskTop是32位。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;开始安装&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403101943763.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;警告不管&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403102021260.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择管理员&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040310205191.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择简体中文&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403102237964.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403102607388.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;客户端安装完成后，需要进行配置&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;进入配置界面&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403102743489.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;选择&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403103119676.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;测试未成功，选择更改登录&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403103151281.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;填入system的用户名、密码&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403103221388.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;连接测试成功&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403103244349.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;接下来选择下一步直到结束，至此，Oracle客户端安装配置完成。&lt;/p&gt;
&lt;h3 id=&quot;12、postgresql（可选）&quot;&gt;1.2、PostgreSQL（可选）&lt;/h3&gt;
&lt;p&gt;需要注意的是，PostgreSQL作为地理数据库的时候需要安装它的扩展postgis.&lt;/p&gt;
&lt;h4 id=&quot;121、安装postgresql&quot;&gt;1.2.1、安装PostgreSQL&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;点击安装包&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403190851156.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;选择安装路径,数据存放路径&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403191027680.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040319112846.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;设置超级用户postgres的密码&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403191303699.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;选择端口&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040319140378.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;postgresql语言环境(默认)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403191511381.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;取消勾选使用Stack Builder&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403191708340.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;完成安装后window菜单会有pgAdminⅢ的数据库管理程序，打开后使用刚才的密码成功连接数据库&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403193654603.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403193856223.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;h4 id=&quot;122、postgis安装&quot;&gt;1.2.2、postgis安装&lt;/h4&gt;
&lt;p&gt;PostgreSQL安装完成后，安装postgis。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;运行可安装文件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403194033852.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;勾选Create spatial database(完成安装后自动创建空间数据库检验安装)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403194214233.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403194357210.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;设置空间数据库模板名称(默认即可)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403194500537.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;安装即将完成时弹出三个确认框:都选择是&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403194631535.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;打开pgAdmin发现多了一个模板&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/202004031948259.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;postgis安装完成。&lt;/p&gt;
&lt;h2 id=&quot;2、arcgis相关软件安装&quot;&gt;2、ArcGIS相关软件安装&lt;/h2&gt;
&lt;p&gt;ArcGIS相关软件按照如下顺序安装。&lt;/p&gt;
&lt;br/&gt;&lt;h3 id=&quot;21、arcgis-server安装&quot;&gt;2.1、ArcGIS Server安装&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;点击&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403103903345.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下一步……&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403104005139.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403104023586.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;安装&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403104744436.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;选择许可文件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403105317824.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403105351216.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040310561799.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;h3 id=&quot;22、arcgis-license-manager安装&quot;&gt;2.2、ArcGIS License Manager安装&lt;/h3&gt;
&lt;p&gt;许可证管理器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403110721257.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;下一步……&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403110745220.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403110809723.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;自定义安装路径&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403110902430.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403110924370.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;安装中，时间也得一会儿&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403110943493.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403111002910.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;为了后面的破解ArcGis Desktop:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;进入许可证服务管理界面&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403111119292.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403111431676.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;23、arcgis-desktop安装&quot;&gt;2.3、ArcGIS Desktop安装&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;点击可执行文件&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112635694.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下一步……&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112732534.png?x#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112750150.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;
&lt;p&gt;选择Complete&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112812275.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择安装路径&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112843336.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择Python27路径&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112912635.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;不选&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403112938411.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;安装中，再喝一杯茶&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403113000385.png?#pic_pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403115027675.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;安装完成后，进入如下页面，选择如下&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403115118332.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在 License Manager看到如下，破解成功&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403115152613.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;点击下图所示图标，可以启动ArcMap&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403115250486.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;h2 id=&quot;1、创建空白地图&quot;&gt;1、创建空白地图&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;打开ArcMap后，创建空白地图。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403115937742.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;保存地图&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040311585222.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403120130485.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以直接把shp格式的文件给拉进去，会创建新的图层。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403135150324.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;到了这里，其实就已经可以发布地图服务了。&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403135615109.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;当然了，为了对数据进行管理，还是要进行接下来的操作。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;2、创建文件夹连接&quot;&gt;2、创建文件夹连接&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;在CateLog里选择文件夹连接&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403135451165.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403135704399.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;创建和我们的测试数据文件夹的连接&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403135752954.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;h2 id=&quot;3、创建与arcgis-server的连接&quot;&gt;3、创建与ArcGIS Server的连接&lt;/h2&gt;
&lt;p&gt;为了发布地图服务，得创建和Arcgis Server的连接&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;添加ArcGIS Server连接&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040314140110.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403141908184.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;连接上Arcgis Server，可以把Arcgis Server的地图直接拖进去&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403142148558.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;3、创建企业级地理数据库&quot;&gt;3、创建企业级地理数据库&lt;/h2&gt;
&lt;p&gt;可以从ArcGIS Desktop（Desktop Standard 或 Desktop Advanced）运行创建企业级地理数据库工具，或从 ArcGIS Desktop、ArcGIS Server 或 ArcGIS Engine 客户端运行 Python 脚本，来创建 sde 用户、方案、表空间和地理数据库。&lt;/p&gt;
&lt;p&gt;这里通过创建企业级地理数据库工具来创建企业级空间数据库，该工具位于“数据管理”工具箱的“地理数据库管理”工具集中：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403140108162.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;31、oracle&quot;&gt;3.1、Oracle&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;打开创建企业级地理数据库工具，从数据库平台下拉列表中选择 Oracle。&lt;br/&gt;需要填写连接到 Oracle 实例的相关信息：&lt;br/&gt;♦ 如果已经将 Oracle 客户端配置为使用 TNS 网络别名，则在实例文本框中输入 Net 服务别名。&lt;br/&gt;♦ 如果尚未配置 Oracle 客户端的网络别名，并且 Oracle 数据库和客户端均配置为使用 Easy Connect 字符串，则在实例文本框中提供 Oracle Easy Connect 字符串。&lt;br/&gt;♦ 必须以数据库管理员身份连接到数据库才能创建地理数据库管理员和表空间。因此，数据库管理员文本框中应填入sys 用户名。&lt;br/&gt;♦在数据库管理员密码文本框中输入 sys 用户的密码。&lt;br/&gt;♦在地理数据库管理员文本框中输入 sde——如果数据库中不存在 sde 用户，则该工具会创建此用户并授予其创建地理数据库所需的权限。如果用户已存在，则会向其授予所需的权限。&lt;br/&gt;♦在地理数据库管理员密码文本框中输入 sde 用户的密码——如果数据库中已存在 sde 用户，需要确保为现有用户输入正确的密码；此工具不会更改密码。如果创建的是 sde 用户，则输入的密码会在创建 sde 用户时使用。&lt;br/&gt;♦为 sde 用户指定表空间（可选）——如果拥有可用于地理数据库资料档案库的预配置表空间，则可在表空间名称文本框中输入其名称。&lt;br/&gt;♦如果想要此工具创建表空间，可在表空间名称文本框中输入有效的名称，该工具会在 Oracle 默认位置创建一个 400 MB 的表空间。如果不输入表空间名称，则会创建 SDE_TBS 表空间，并将其设置为 sde 用户的默认表空间。&lt;br/&gt;♦ 要指定授权文件，使用授权 ArcGIS Server Enterprise 的授权文件。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403140604388.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403140712208.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;创建中，得一会儿&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040314075963.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建完成&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403140906706.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;h3 id=&quot;32、postgresql&quot;&gt;3.2、PostgreSQL&lt;/h3&gt;
&lt;h4 id=&quot;321、st_geometrydll复制&quot;&gt;3.2.1、st_geometry.dll复制&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;在Desktop安装目录 --&amp;gt; DatabaseSupport文件夹 --&amp;gt; postgreSQL文件夹 --&amp;gt; 9.2文件夹 --&amp;gt; Window64文件夹中找到st_geometry.dll文件。&lt;/li&gt;
&lt;li&gt;将st_geometry.dll文件复制到postgresql安装目录 --&amp;gt; lib文件夹中。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403195522235.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403195644503.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;322、5个用于连接的dll文件复制&quot;&gt;3.2.2、5个用于连接的dll文件复制&lt;/h4&gt;
&lt;p&gt;由于desktop是32位，postgresql是64位,我们需要将：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403195955978.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403200115469.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4 id=&quot;323、创建postgresql数据库&quot;&gt;3.2.3、创建postgresql数据库&lt;/h4&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在pgAdmin中新建数据库名称为sample，所有者为postgres，模板为postgis_20&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403200831168.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;创建模式(从ArcGIS Catalog连接postgresql数据库导入数据时，数据库中必须有postgres模式)。执行如下语句并显示成功：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;language-java&quot;&gt;create schema postgres;

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403201129441.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;OK，PostgreSQL的相关配置完成了，可以创建创建企业级地理数据库。&lt;/p&gt;
&lt;h4 id=&quot;324、创建企业级地理数据库（postgresql）&quot;&gt;3.2.4、创建企业级地理数据库（postgresql）&lt;/h4&gt;
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;数据库平台选择PostgreSQL。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;实例填入localhost(本机)。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;数据库选择刚才创建的sample数据库。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;数据库管理员为超级用户postgres。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;数据库管理员密码为自己设置的密码&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;地理数据库管理员密码自己设定&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;授权文件选择arcgis server的授权文件。&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403201727450.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建成功：&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403201825370.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;h2 id=&quot;4、创建数据库连接&quot;&gt;4、创建数据库连接&lt;/h2&gt;
&lt;p&gt;企业级地理数据库创建完成之后，就可以连接了。&lt;/p&gt;
&lt;h3 id=&quot;41、oracle&quot;&gt;4.1、Oracle&lt;/h3&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;数据库连接中新建连接&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403141039592.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;输入上一步中的数据库相关配置&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403141140195.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;连接成功之后，可以看到数据库连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403141219374.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;h3 id=&quot;42、postgresql&quot;&gt;4.2、PostgreSQL&lt;/h3&gt;
&lt;p&gt;数据库平台选择PostgreSQL&lt;br/&gt;实例为localhost&lt;br/&gt;数据库身份验证：用户名为超级用户。密码为自己设置的密码&lt;br/&gt;数据库选择刚才创建的sample数据库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403202053388.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403202224188.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;h2 id=&quot;6、地理数据库导入数据&quot;&gt;6、地理数据库导入数据&lt;/h2&gt;
&lt;p&gt;地理数据库连接之后，可以为地理数据库导入数据了。这里有两种导入的方式。&lt;/p&gt;
&lt;h3 id=&quot;61、直接导入&quot;&gt;6.1、直接导入&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;数据库连接，右键，import，可以选择导入单个或多个&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040314312246.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;62、通过文件空间数据库导入&quot;&gt;6.2、通过文件空间数据库导入&lt;/h3&gt;
&lt;p&gt;上面的方式比较快捷，但是导入失败的概率相对要大一些，所以推荐用下面的方式。&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;在文件夹连接，右键，创建文件空间数据库&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403142346342.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;新建的文件空间数据库导入数据&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403152509926.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403152529956.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403152559461.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li&gt;
&lt;p&gt;导入成功&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040315264623.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;可以直接拖拽进地理空间数据库&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403152723344.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403152931722.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;直接拖入可能会因为空间坐标系不一致的原因失败，还可以在空间数据库上直接import&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153000465.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153028803.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040315305732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzQwNzcwNjU2,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153230650.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;7、发布地图服务&quot;&gt;7、发布地图服务&lt;/h2&gt;
&lt;p&gt;数据已经成功导入企业级地理数据库，接下里可以发布地图服务了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153623133.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153702226.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;选择之前创建的和Arcgis Server的连接&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153734306.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;选择服务目录，这里新建了一个目录&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403153823287.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;8、查看发布的地图服务&quot;&gt;8、查看发布的地图服务&lt;/h2&gt;
&lt;p&gt;成功发布的服务可以在Arc Map里预览，这里从Arcgis Server站点查看&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;登录站点，可以找到我们发布的地图服务&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403154433487.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在功能里可以看到地图服务提供给第三方调用的接口&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403154532945.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;点击进去，在这里可以选择通过ArcGis JavaScript的方式预览&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403154729954.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403155828376.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;&lt;h2 id=&quot;1、arcgis直连oracle失败&quot;&gt;1、ArcGIS直连Oracle失败&lt;/h2&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;Executing: CreateEnterpriseGeodatabase Oracle localhost/orcl # DATABASE_AUTH sys ***** SDE_SCHEMA sde ***** # D:\SoftwareFile\易智瑞版\arcgisserver10.2.ecp
Start Time: Thu Apr 02 18:07:32 2020
Cannot connect to database because the database client software failed to load.  Be sure the database client software is installed and configured correctly.
Failed to execute (CreateEnterpriseGeodatabase).
Failed at Thu Apr 02 18:07:32 2020 (Elapsed Time: 0.01 seconds)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200402180811298.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个问题通常是这些原因导致的：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在ArcGIS for Desktop计算机上未安装Oracle客户端&lt;/li&gt;
&lt;li&gt;尝试从ArcMap或ArcCatalog（这是32位应用程序）连接到Oracle时，仅安装64位客户端&lt;/li&gt;
&lt;li&gt;尝试从ArcGIS for Server或ArcGIS Pro（64位应用程序）连接到Oracle时，仅安装32位客户端。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;解决办法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;要解决此问题，请确保已安装Oracle客户端，并且客户端的位级别与连接的应用程序的位级别匹配。&lt;/li&gt;
&lt;li&gt;如果32位客户端和64位客户端都安装在同一台计算机上，则必须在Windows操作系统的PATH环境变量中首先列出64位客户端。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我的错误原因是只安装了64位的客户端，再装一个32位的客户端，把Path中64位的变量列在前面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020040218452474.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后，重启电脑，问题解决。&lt;/p&gt;
&lt;br/&gt;&lt;h2 id=&quot;2、postgresql作为数据库没有数据表&quot;&gt;2、PostgreSQL作为数据库没有数据表&lt;/h2&gt;
&lt;p&gt;PostgreSQL作为企业级地理数据库，刚连接的时候没有数据&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403202224188.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt;正常应该是这种：&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200403202729846.png?#pic_center&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;另外，PostgreSQL导入数据时，偶尔会失败，原因还未排查出来。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;End!&lt;/p&gt;
&lt;p&gt;ps:本人是一个Gis纯小白，文中有错漏之处，欢迎指出。希望能够相互学习，共同进步！&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;big&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;
&lt;p&gt;【1】：&lt;a href=&quot;https://blog.csdn.net/psp0001060/article/details/49231627&quot;&gt;Oracle 11g 服务端、客户端的安装配置&lt;/a&gt;&lt;br/&gt;【2】：&lt;a href=&quot;https://blog.csdn.net/qq_24641385/article/details/78623239&quot;&gt;arcgis链接oracle发布地图服务&lt;/a&gt;&lt;br/&gt;【3】：&lt;a href=&quot;https://www.w3cschool.cn/oraclejc/&quot;&gt;Oracle 教程&lt;/a&gt;&lt;br/&gt;【4】：&lt;a href=&quot;https://desktop.arcgis.com/zh-cn/arcmap/latest/manage-data/gdbs-in-oracle/setup-geodatabase-oracle.htm&quot;&gt;在 Oracle 中创建地理数据库&lt;/a&gt;&lt;br/&gt;【5】：&lt;a href=&quot;https://wenku.baidu.com/view/8873b15402020740be1e9ba2.html&quot;&gt;ArcSDE直连总结&lt;/a&gt;&lt;br/&gt;【6】：&lt;a href=&quot;https://support.esri.com/en/technical-article/000013240&quot;&gt;Error: Client software failed to load. Be sure the database client software is installed and configured correctly&lt;/a&gt;&lt;br/&gt;【7】：&lt;a href=&quot;https://blog.csdn.net/qq_36213352/article/details/80646940&quot;&gt;ArcGIS server 10.2安装教程详细版&lt;/a&gt;&lt;br/&gt;【8】：&lt;a href=&quot;https://www.cnblogs.com/chenxinjourney/p/11161739.html&quot;&gt;Arcgis License的安装及破解&lt;/a&gt;&lt;br/&gt;【9】：&lt;a href=&quot;https://blog.csdn.net/wdwyf999/article/details/86440793?depth_1-utm_source=distribute.pc_relevant.none-task&amp;amp;utm_source=distribute.pc_relevant.none-task&quot;&gt;ArcGIS Desktop 10.2 安装与破解图文教程&lt;/a&gt;&lt;br/&gt;【10】：&lt;a href=&quot;https://www.jianshu.com/p/c05c054860b1&quot;&gt;连接 arcMap、arcGIS Server 和 postgreSQL&lt;/a&gt;&lt;br/&gt;【11】：&lt;a href=&quot;https://blog.csdn.net/qq_39142804/article/details/104816331&quot;&gt;arcgis10.2与postgresql9.2.2从安装到发布服务教程&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 04 Apr 2020 00:04:00 +0000</pubDate>
<dc:creator>三分恶</dc:creator>
<og:description>@[Toc] 此前从未接触过ArcGIS，对Oracle和postGre SQL也比较陌生。本文介绍了从零开始，到搭建环境，再到发布第一个ArcGIS地图服务的完整过程。 一、软件环境搭建 由于在地图</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/three-fighter/p/12630251.html</dc:identifier>
</item>
<item>
<title>技术大佬：我去，你竟然还在用 try–catch-finally - 沉默王二</title>
<link>http://www.cnblogs.com/qing-gee/p/12630243.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qing-gee/p/12630243.html</guid>
<description>&lt;blockquote readability=&quot;7.7444717444717&quot;&gt;
&lt;p&gt;二哥，你之前那篇 &lt;a href=&quot;https://mp.weixin.qq.com/s/1BDDLDSKDGwQAfIFMyySdg&quot;&gt;我去 switch&lt;/a&gt; 的文章也特么太有趣了，读完后意犹未尽啊，要不要再写一篇啊？虽然用的是 Java 13 的语法，对旧版本不太友好。但谁能保证 Java 不会再来一次重大更新呢，就像 Java 8 那样，活生生地把 Java 6 拍死在了沙滩上。Java 8 是香，但早晚要升级，我挺你，二哥，别在乎那些反对的声音。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是读者 Alice 上周特意给我发来的信息，真令我动容。的确，上次的“我去”阅读量杠杠的，几个大号都转载了，包括 CSDN，次条当天都 1.5 万阅读。但比如“还以为你有什么新特技，没想到用的是 Java 13”这类批评的声音也不在少数。&lt;/p&gt;
&lt;p&gt;不过我的心一直很大。从我写第一篇文章至今，被喷的次数就好像头顶上茂密的发量一样，数也数不清。所以我决定再接再厉，带来新的一篇“我去”。&lt;/p&gt;
&lt;img src=&quot;http://www.itwanger.com/assets/images/2020/04/java-try-catch-finally-01.png&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;p&gt;这次不用远程 review 了，因为我们公司也复工了。这次 review 的代码仍然是小王的，他编写的大部分代码都很漂亮，严谨的同时注释也很到位，这令我非常满意。但当我看到他没用 try-with-resources 时，还是忍不住破口大骂：“我擦，小王，你丫的竟然还在用 try–catch-finally！”&lt;/p&gt;
&lt;p&gt;来看看小王写的代码吧。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Trycatchfinally&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;BufferedReader br = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;br = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileReader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/牛逼.txt&quot;&lt;/span&gt;));&lt;br/&gt;String str = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ((str =br.readLine()) != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;System.out.println(str);&lt;br/&gt;}&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (br != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;br.close();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;咦，感觉这段代码很完美无缺啊，try–catch-finally 用得中规中矩，尤其是文件名 &lt;code&gt;牛逼.txt&lt;/code&gt; 很亮。不用写注释都能明白这段代码是干嘛的：在 try 块中读取文件中的内容，并一行一行地打印到控制台。如果文件找不到或者出现 IO 读写错误，就在 catch 中捕获并打印错误的堆栈信息。最后，在 finally 中关闭缓冲字符读取器对象 BufferedReader，有效杜绝了资源未被关闭的情况下造成的严重性能后果。&lt;/p&gt;
&lt;p&gt;在 Java 7 之前，try–catch-finally 的确是确保资源会被及时关闭的最佳方法，无论程序是否会抛出异常。&lt;/p&gt;
&lt;p&gt;但是呢，有经验的读者会从上面这段代码中发现 2 个严重的问题：&lt;/p&gt;
&lt;p&gt;1）文件名“牛逼.txt”包含了中文，需要通过 &lt;code&gt;java.net.URLDecoder&lt;/code&gt; 类的 &lt;code&gt;decode()&lt;/code&gt; 方法对其转义，否则这段代码在运行时铁定要抛出文件找不到的异常。&lt;/p&gt;
&lt;p&gt;2）如果直接通过 &lt;code&gt;new FileReader(&quot;牛逼.txt&quot;)&lt;/code&gt; 创建 FileReader 对象，“牛逼.txt”需要和项目的 src 在同一级目录下，否则同样会抛出文件找不到的异常。但大多数情况下，（配置）文件会放在 resources 目录下，便于编译后文件出现在 classes 目录下，见下图。&lt;/p&gt;
&lt;img src=&quot;http://www.itwanger.com/assets/images/2020/04/java-try-catch-finally-02.png&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;p&gt;为了解决以上 2 个问题，我们需要对代码进行优化：&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;4&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrycatchfinallyDecoder&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;BufferedReader br = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;String path = TrycatchfinallyDecoder.class.getResource(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/牛逼.txt&quot;&lt;/span&gt;).getFile();&lt;br/&gt;String decodePath = URLDecoder.decode(path,&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;);&lt;br/&gt;br = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileReader(decodePath));&lt;p&gt;String str = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ((str =br.readLine()) != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;System.out.println(str);&lt;br/&gt;}&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (br != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;br.close();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行这段代码，程序就可以将文件中的内容正确输出到控制台。但如果你对“整洁”这个词心生向往的话，会感觉这段代码非常臃肿，尤其是 finally 中的代码，就好像一个灌了 12 瓶雪花啤酒的大肚腩。&lt;/p&gt;
&lt;p&gt;网上看到一幅 Python 程序员调侃 Java 程序员的神图，直接 copy 过来（侵删），逗你一乐：&lt;/p&gt;
&lt;img src=&quot;http://www.itwanger.com/assets/images/2020/04/java-try-catch-finally-03.png&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;p&gt;况且，try–catch-finally 至始至终存在一个严重的隐患：try 中的 &lt;code&gt;br.readLine()&lt;/code&gt; 有可能会抛出 &lt;code&gt;IOException&lt;/code&gt;，finally 中的 &lt;code&gt;br.close()&lt;/code&gt; 也有可能会抛出 &lt;code&gt;IOException&lt;/code&gt;。假如两处都不幸地抛出了 IOException，那程序的调试任务就变得复杂了起来，到底是哪一处出了错误，就需要花一番功夫，这是我们不愿意看到的结果。&lt;/p&gt;
&lt;p&gt;为了模拟上述情况，我们来自定义一个类 MyfinallyReadLineThrow，它有两个方法，分别是 &lt;code&gt;readLine()&lt;/code&gt; 和 &lt;code&gt;close()&lt;/code&gt;，方法体都是主动抛出异常。&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;2&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyfinallyReadLineThrow&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot;&gt;&quot;close&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot;&gt;&quot;readLine&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后我们在 &lt;code&gt;main()&lt;/code&gt; 方法中使用 try-finally 的方式调用 MyfinallyReadLineThrow 的 &lt;code&gt;readLine()&lt;/code&gt; 和 &lt;code&gt;close()&lt;/code&gt; 方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TryfinallyCustomReadLineThrow&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;MyfinallyReadLineThrow myThrow = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;myThrow = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MyfinallyReadLineThrow();&lt;br/&gt;myThrow.readLine();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {&lt;br/&gt;myThrow.close();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行上述代码后，错误堆栈如下所示：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;thread&lt;/span&gt; &quot;&lt;span class=&quot;hljs-selector-tag&quot;&gt;main&lt;/span&gt;&quot; &lt;span class=&quot;hljs-selector-tag&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.lang&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.Exception&lt;/span&gt;: &lt;span class=&quot;hljs-selector-tag&quot;&gt;close&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cmower&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dzone&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.trycatchfinally&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.MyfinallyOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.close&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;TryfinallyCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.java&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:17)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cmower&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dzone&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.trycatchfinally&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.TryfinallyCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.main&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;TryfinallyCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.java&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:10)&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;readLine()&lt;/code&gt; 方法的异常信息竟然被 &lt;code&gt;close()&lt;/code&gt; 方法的堆栈信息吃了，这必然会让我们误以为要调查的目标是 &lt;code&gt;close()&lt;/code&gt; 方法而不是 &lt;code&gt;readLine()&lt;/code&gt;——尽管它也是应该怀疑的对象。&lt;/p&gt;
&lt;p&gt;但自从有了 try-with-resources，这些问题就迎刃而解了，只要需要释放的资源（比如 BufferedReader）实现了 AutoCloseable 接口。有了解决方案之后，我们来对之前的 finally 代码块进行瘦身。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (BufferedReader br = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileReader(decodePath));) {&lt;br/&gt;String str = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ((str =br.readLine()) != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;System.out.println(str);&lt;br/&gt;}&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;你瞧，finally 代码块消失了，取而代之的是把要释放的资源写在 try 后的 &lt;code&gt;()&lt;/code&gt; 中。如果有多个资源（BufferedReader 和 PrintWriter）需要释放的话，可以直接在 &lt;code&gt;()&lt;/code&gt; 中添加。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (BufferedReader br = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileReader(decodePath));&lt;br/&gt;PrintWriter writer = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PrintWriter(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; File(writePath))) {&lt;br/&gt;String str = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ((str =br.readLine()) != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {&lt;br/&gt;writer.print(str);&lt;br/&gt;}&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果你想释放自定义资源的话，只要让它实现 AutoCloseable 接口，并提供 &lt;code&gt;close()&lt;/code&gt; 方法即可。&lt;/p&gt;
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;3&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustom&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (MyResource resource = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MyResource();) {&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyResource&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AutoCloseable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;关闭自定义资源&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;代码运行后输出的结果如下所示：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs&quot;&gt;关闭自定义资源&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;是不是很神奇？我们在 &lt;code&gt;try ()&lt;/code&gt; 中只是 new 了一个 MyResource 的对象，其他什么也没干，但偏偏 &lt;code&gt;close()&lt;/code&gt; 方法中的输出语句执行了。想要知道为什么吗？来看看反编译后的字节码吧。&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyResource&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AutoCloseable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;MyResource() {&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;关闭自定义资源&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustom&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustom&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;MyResource resource = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MyResource();&lt;br/&gt;resource.close();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception var2) {&lt;br/&gt;var2.printStackTrace();&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;咦，编译器竟然主动为 try-with-resources 进行了变身，在 try 中调用了 &lt;code&gt;close()&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;接下来，我们在自定义类中再添加一个 &lt;code&gt;out()&lt;/code&gt; 方法，&lt;/p&gt;
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;3&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyResourceOut&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AutoCloseable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;关闭自定义资源&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;{&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;沉默王二，一枚有趣的程序员&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这次，我们在 try 中调用一下 &lt;code&gt;out()&lt;/code&gt; 方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustomOut&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (MyResourceOut resource = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MyResourceOut();) {&lt;br/&gt;resource.out();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;再来看一下反编译的字节码：&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;hljs cs&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustomOut&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustomOut&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;MyResourceOut resource = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MyResourceOut();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;resource.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Throwable var5) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;resource.close();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Throwable var4) {&lt;br/&gt;var5.addSuppressed(var4);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; var5;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;resource.close();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception var6) {&lt;br/&gt;var6.printStackTrace();&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这次，&lt;code&gt;catch&lt;/code&gt; 块中主动调用了 &lt;code&gt;resource.close()&lt;/code&gt;，并且有一段很关键的代码 &lt;code&gt;var5.addSuppressed(var4)&lt;/code&gt;。它有什么用处呢？当一个异常被抛出的时候，可能有其他异常因为该异常而被抑制住，从而无法正常抛出。这时可以通过 &lt;code&gt;addSuppressed()&lt;/code&gt; 方法把这些被抑制的方法记录下来。被抑制的异常会出现在抛出的异常的堆栈信息中，也可以通过 &lt;code&gt;getSuppressed()&lt;/code&gt; 方法来获取这些异常。这样做的好处是不会丢失任何异常，方便我们开发人员进行调试。&lt;/p&gt;
&lt;p&gt;哇，有没有想到我们之前的那个例子——在 try-finally 中，&lt;code&gt;readLine()&lt;/code&gt; 方法的异常信息竟然被 &lt;code&gt;close()&lt;/code&gt; 方法的堆栈信息吃了。现在有了 try-with-resources，再来看看作用和 &lt;code&gt;readLine()&lt;/code&gt; 方法一致的 &lt;code&gt;out()&lt;/code&gt; 方法会不会被 &lt;code&gt;close()&lt;/code&gt; 吃掉。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;close()&lt;/code&gt; 和 &lt;code&gt;out()&lt;/code&gt; 方法中直接抛出异常：&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;2&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyResourceOutThrow&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AutoCloseable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot;&gt;&quot;close()&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot;&gt;&quot;out()&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;调用这 2 个方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TrywithresourcesCustomOutThrow&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (MyResourceOutThrow resource = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MyResourceOutThrow();) {&lt;br/&gt;resource.out();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;程序输出的结果如下所示：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.lang&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.Exception&lt;/span&gt;: &lt;span class=&quot;hljs-selector-tag&quot;&gt;out&lt;/span&gt;()&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cmower&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dzone&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.trycatchfinally&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.MyResourceOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.out&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;TrywithresourcesCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.java&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:20)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cmower&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dzone&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.trycatchfinally&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.TrywithresourcesCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.main&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;TrywithresourcesCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.java&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:6)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;Suppressed&lt;/span&gt;: &lt;span class=&quot;hljs-selector-tag&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.lang&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.Exception&lt;/span&gt;: &lt;span class=&quot;hljs-selector-tag&quot;&gt;close&lt;/span&gt;()&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cmower&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dzone&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.trycatchfinally&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.MyResourceOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.close&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;TrywithresourcesCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.java&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:16)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cmower&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dzone&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.trycatchfinally&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.TrywithresourcesCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.main&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;TrywithresourcesCustomOutThrow&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.java&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:5)&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;瞧，这次不会了，&lt;code&gt;out()&lt;/code&gt; 的异常堆栈信息打印出来了，并且 &lt;code&gt;close()&lt;/code&gt; 方法的堆栈信息上加了一个关键字 &lt;code&gt;Suppressed&lt;/code&gt;。一目了然，不错不错，我喜欢。&lt;/p&gt;
&lt;p&gt;总结一下，在处理必须关闭的资源时，始终有限考虑使用 try-with-resources，而不是 try–catch-finally。前者产生的代码更加简洁、清晰，产生的异常信息也更靠谱。答应我好不好？别再用 try–catch-finally 了。&lt;/p&gt;
&lt;img src=&quot;http://www.itwanger.com/assets/images/2020/04/java-try-catch-finally-04.png&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;&lt;h3 id=&quot;h&quot;&gt;&lt;span&gt;鸣谢&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;好了，我亲爱的读者朋友，以上就是本文的全部内容了，是不是感觉又学到了新知识？我是沉默王二，一枚有趣的程序员。&lt;strong&gt;原创不易，莫要白票，请你为本文点赞个吧&lt;/strong&gt;，这将是我写作更多优质文章的最强动力。&lt;/p&gt;
&lt;blockquote readability=&quot;6.8390804597701&quot;&gt;
&lt;p&gt;如果觉得文章对你有点帮助，请微信搜索「 &lt;strong&gt;沉默王二&lt;/strong&gt; 」第一时间阅读，回复【&lt;strong&gt;666&lt;/strong&gt;】更有我为你精心准备的 500G 高清教学视频（已分门别类）。本文 &lt;a href=&quot;https://github.com/qinggee/itwanger.github.io&quot;&gt;GitHub&lt;/a&gt; 已经收录，有大厂面试完整考点，欢迎 Star。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Fri, 03 Apr 2020 23:58:00 +0000</pubDate>
<dc:creator>沉默王二</dc:creator>
<og:description>二哥，你之前那篇 我去 switch 的文章也特么太有趣了，读完后意犹未尽啊，要不要再写一篇啊？虽然用的是 Java 13 的语法，对旧版本不太友好。但谁能保证 Java 不会再来一次重大更新呢，就像</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/qing-gee/p/12630243.html</dc:identifier>
</item>
<item>
<title>vscode下搭建typescript时提示&quot;无法将“npm”项识别为 cmdlet、函数、脚本文件或可运行程序的名称&quot;错误的解决方法  - 启天</title>
<link>http://www.cnblogs.com/kugar/p/12630178.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kugar/p/12630178.html</guid>
<description>&lt;p&gt;根据网上的教程,安装了node.js后,再安装了typescript,,,这时候编译生成或者在vscode的终端里调用npm或者tsc --version时,总是提示&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;npm : 无法将“npm”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。
所在位置 行:&lt;/span&gt;1 字符: 1
+ npm install typescript --save -&lt;span&gt;dev
&lt;/span&gt;+&lt;span&gt; ~~~
&lt;/span&gt;+&lt;span&gt; CategoryInfo : ObjectNotFound: (npm:String) [], CommandNotFoundException
&lt;/span&gt;+ FullyQualifiedErrorId : CommandNotFoundException
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;tsc : 无法将“tsc”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。
所在位置 行:&lt;/span&gt;1 字符: 1
+ tsc --&lt;span&gt;version
&lt;/span&gt;+&lt;span&gt; ~~~
&lt;/span&gt;+&lt;span&gt; CategoryInfo : ObjectNotFound: (tsc:String) [], CommandNotFoundException
&lt;/span&gt;+ FullyQualifiedErrorId : CommandNotFoundException
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但是,,在普通的powershell中,这两个命令行却是正常使用的,,在查找很多文章无果后,仔细查找,发觉,原来是我用vscode创建了&quot;工作区&quot;,,然后不知道为什么在.code-workspace文件中,居然是这样的:{&lt;/p&gt;
&lt;div readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; {   
   &lt;/span&gt;&quot;folders&quot;&lt;span&gt;: [
        {
            &lt;/span&gt;&quot;path&quot;: &quot;.&quot;&lt;span&gt;
        }
    ],
    &lt;/span&gt;&quot;settings&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;terminal.integrated.env.windows&quot;&lt;span&gt;: {
            &lt;/span&gt;&quot;PATH&quot;: &quot;C:\\Users\\xxx\\.platformio\\penv\\Scripts;此处省略N个路径&quot;, &lt;span&gt;//&lt;/span&gt;&lt;span&gt;最大问题出在这里&lt;/span&gt;
            &quot;PLATFORMIO_CALLER&quot;: &quot;vscode&quot;&lt;span&gt;
        },
        &lt;/span&gt;&quot;files.associations&quot;&lt;span&gt;: {
            &lt;/span&gt;&quot;user_config.h&quot;: &quot;c&quot;&lt;span&gt;
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;最大问题出在了PATH的值上,,由于我是先创建的工作区,后安装的npm和typescript,而创建工作区的时候,不知道为什么,vscode居然把环境变量的PATH复制一份进来,从而导致后来安装的npm和typescript的目录没在PATH中,导致了在vscode的终端里,不能直接使用tsc命令,,&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;解决的方法也很简单,把PATH去掉,,重新启动vscode或者新建一个终端就可以了,,,,&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 03 Apr 2020 19:37:00 +0000</pubDate>
<dc:creator>启天</dc:creator>
<og:description>根据网上的教程,安装了node.js后,再安装了typescript,,,这时候编译生成或者在vscode的终端里调用npm或者tsc --version时,总是提示 npm : 无法将“npm”项识</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/kugar/p/12630178.html</dc:identifier>
</item>
<item>
<title>记录一个不同的流媒体网站实现方法，和用Python爬虫爬它的坑 - lyj00912</title>
<link>http://www.cnblogs.com/lyj00912/p/12630122.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lyj00912/p/12630122.html</guid>
<description>&lt;p&gt;今天找到一片电影，想把它下载下来。&lt;/p&gt;
&lt;p&gt;先开Networks工具分析一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404010025350-1832263796.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;初步分析发现，视频加载时会拉取TS格式的文件，推测这是一个m3u8的索引，记录着几百段TS文件，这样方便快进时加载。&lt;/p&gt;


&lt;p&gt;但是实际分析m3u8文件时，发现这并不是一个有效的索引文件，应该只是载入一个形式，实际的handler在其他地方：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404010149784-1738445937.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;但这样分析js太麻烦了。通过几次尝试，发现了规律：视频文件名是由y8TL59oh4680xxx.ts组成的，xxx是序号，这样就简单多了！&lt;/p&gt;
&lt;p&gt;把之前爬音乐文件的爬虫改一改，得到这样一个程序：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; requests
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; re
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Tk
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter.simpledialog &lt;span&gt;import&lt;/span&gt;&lt;span&gt; askinteger, askfloat, askstring
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter.filedialog &lt;span&gt;import&lt;/span&gt;&lt;span&gt; askopenfilename, askopenfilenames, asksaveasfilename, askdirectory
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter.messagebox &lt;span&gt;import&lt;/span&gt;&lt;span&gt; showinfo, showwarning, showerror

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; downloadSong(SongID, FileName):
    headers &lt;/span&gt;= {&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user-agent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}
    r &lt;/span&gt;= requests.get(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://www.mmicloud.com/20190406/I1RrJf8s/2000kb/hls/y8TL59oh&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + str(SongID) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,headers=&lt;span&gt;headers);
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;print(&quot;State:&quot;)&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;print(r)&lt;/span&gt;
    filepath=os.path.join(str(SongID) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    with open(filepath,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wb&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;) as file:
        file.write(r.content)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(SongID)

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(4680000, 4680900&lt;span&gt;):
    downloadSong(i, str(i))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个程序循环爬取文件名从y8TL59oh4680000.ts到y8TL59oh4680899.ts的900个视频文件。&lt;/p&gt;
&lt;p&gt;程序中的循环最大值之所以定在4680900，是因为我发现影片有860多段，于是就多下载一些，如果下载不了就是下完了，出错倒也无所谓。&lt;/p&gt;
&lt;p&gt;让他开始运行，看起来工作良好，有在顺利的下载文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404010608146-122395071.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 于是我就放下手头的事，先休息去了。过了大约半个小时，他已经下载了300多个文件了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404010953014-1742249783.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;我就放下心来，这个爬虫应该是没什么问题了，于是我就用VSCode写了一些代码。当我再次看到任务栏时，爬虫已经不见了！&lt;/p&gt;
&lt;p&gt;我再次启动爬虫，过了一会又会有同样的问题！难道是变量i溢出了？试着debug一下，把i的范围缩小试试：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; requests
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; re
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Tk
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter.simpledialog &lt;span&gt;import&lt;/span&gt;&lt;span&gt; askinteger, askfloat, askstring
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter.filedialog &lt;span&gt;import&lt;/span&gt;&lt;span&gt; askopenfilename, askopenfilenames, asksaveasfilename, askdirectory
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; tkinter.messagebox &lt;span&gt;import&lt;/span&gt;&lt;span&gt; showinfo, showwarning, showerror

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; downloadSong(SongID, FileName):
    headers &lt;/span&gt;= {&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user-agent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}
    r &lt;/span&gt;= requests.get(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://www.mmicloud.com/20190406/I1RrJf8s/2000kb/hls/y8TL59oh4680&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + str(SongID) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,headers=&lt;span&gt;headers);
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;print(&quot;State:&quot;)&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;print(r)&lt;/span&gt;
    filepath=os.path.join(str(SongID) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    with open(filepath,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wb&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;) as file:
        file.write(r.content)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(SongID)

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(566, 900&lt;span&gt;):
    downloadSong(i, str(i))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;经过debug，发现程序应该是没有问题，只是因为控制台窗口最小化时，爬虫会被内存回收掉，所以导致了程序退出。&lt;/p&gt;
&lt;p&gt;折腾了半天！&lt;/p&gt;
&lt;p&gt;我换成用IDLE编辑器自带的Run Modules，有普通窗口的话就不容易被回收掉把：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404011514309-872251045.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;过了一阵子，爬虫终于把文件爬完了。一看文件夹，又出问题了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404011633128-356729198.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;文件名不一致！&lt;/p&gt;
&lt;p&gt;还记得之前我们debug的时候把变量i的范围改小了吗？这就是原因！&lt;/p&gt;
&lt;p&gt;那好吧，选中所有名字长的文件，右键，重命名，命名成a，然后文件就可以自动命名为a (1), a (2), a (3), a (4), a (5), ...这样。&lt;/p&gt;
&lt;p&gt;问题。。解决了？&lt;/p&gt;

&lt;p&gt;我拿着这些命名为a (1), a (2), a (3), a (4), a (5), ...的文件去转码，合并，来来回回整了一个小时多。当合并之后，才发现，&lt;/p&gt;

&lt;p&gt;啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊天煞的Windows！！！！！！！！！！&lt;/p&gt;

&lt;p&gt;没办法，有气出不来，只好继续写代码。。。&lt;/p&gt;
&lt;p&gt;还好我留了一份没有重命名过的文件夹，那就用python写一个批量重命名程序吧：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
PROJECT_DIR_PATH &lt;/span&gt;= os.path.dirname(os.path.abspath(os.path.abspath(&lt;span&gt;__file__&lt;/span&gt;&lt;span&gt;)))
DIR_PATH &lt;/span&gt;= os.path.join(PROJECT_DIR_PATH, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;data&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
files &lt;/span&gt;=&lt;span&gt; os.listdir(DIR_PATH)
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; filename &lt;span&gt;in&lt;/span&gt;&lt;span&gt; files:
    name, suffix &lt;/span&gt;=&lt;span&gt; os.path.splitext(filename)
    new_name &lt;/span&gt;= os.path.join(DIR_PATH, name[4:7&lt;span&gt;])
    old_name &lt;/span&gt;=&lt;span&gt; os.path.join(DIR_PATH, filename)
    os.rename(old_name, new_name)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把文件目录改成这样，就可以使用上面的程序了：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404012816679-627927562.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;爽爽快快的运行完程序，发现命名是成功了，但后缀名没有了。。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404014201644-355183815.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;失误失误！再写一个补救程序：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
PROJECT_DIR_PATH &lt;/span&gt;= os.path.dirname(os.path.abspath(os.path.abspath(&lt;span&gt;__file__&lt;/span&gt;&lt;span&gt;)))
DIR_PATH &lt;/span&gt;= os.path.join(PROJECT_DIR_PATH, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;data&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
files &lt;/span&gt;=&lt;span&gt; os.listdir(DIR_PATH)
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; filename &lt;span&gt;in&lt;/span&gt;&lt;span&gt; files:
    name, suffix &lt;/span&gt;=&lt;span&gt; os.path.splitext(filename)
    new_name &lt;/span&gt;= os.path.join(DIR_PATH, filename + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    old_name &lt;/span&gt;=&lt;span&gt; os.path.join(DIR_PATH, filename)
    os.rename(old_name, new_name)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;心惊胆战的运行完，目录终于正常了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404013133332-1906998725.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;然后又是转码、合并，又是一个多小时。最后，总算拿到了胜利的果实：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1748871/202004/1748871-20200404013340910-1852348228.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 太难了！&lt;/p&gt;

&lt;p&gt;下载这篇电影花费了我一整天的时间。上午和中午找片源，下午写代码+写爬虫+爬资源，晚上还得操心重命名和转码的问题，这中间都够我看6-7片电影了。ε=(´ο｀*)))唉。。。&lt;/p&gt;
&lt;p&gt;不多说了，电影只能明天看了。各位，晚安！&lt;/p&gt;

</description>
<pubDate>Fri, 03 Apr 2020 17:45:00 +0000</pubDate>
<dc:creator>lyj00912</dc:creator>
<og:description>今天找到一片电影，想把它下载下来。 先开Networks工具分析一下： 初步分析发现，视频加载时会拉取TS格式的文件，推测这是一个m3u8的索引，记录着几百段TS文件，这样方便快进时加载。 但是实际分</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/lyj00912/p/12630122.html</dc:identifier>
</item>
<item>
<title>ClickHouse学习系列之二【用户权限管理】 - jyzhou</title>
<link>http://www.cnblogs.com/zhoujinyi/p/12613026.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhoujinyi/p/12613026.html</guid>
<description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;      最近花了些时间看了下&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;说明&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;      &lt;a href=&quot;https://clickhouse.tech/&quot; target=&quot;_blank&quot;&gt;ClickHouse&lt;/a&gt;&lt;/strong&gt;作为一个分析类型（OLAP）的数据库系统，相对于MySQL数据库在用户管理方面有很大不同，它是通过修改配置文件来实现用户权限管理的。在安装好&lt;strong&gt;&lt;a href=&quot;https://clickhouse.tech/&quot; target=&quot;_blank&quot;&gt;ClickHouse&lt;/a&gt;&lt;/strong&gt;之后，其默认的配置文件在&lt;strong&gt;/etc/clickhouse-server&lt;/strong&gt;目录下，对应的配置文件为&lt;strong&gt;users.xml&lt;/strong&gt;，ClickHouse使用它来定义用户相关的配置项。现在开始对其进行说明，对应手册里的说明包含以下几个方面：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意一点，修改了user.xml的参数之后是即时生效的，如有问题可以查看其错误日志。好了，现在开始对这些进行说明，先熟悉用户权限管理这一方面的相关操作。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;※ &lt;a href=&quot;https://clickhouse.tech/docs/v20.3/zh/operations/settings/settings_profiles/#settings-profiles&quot; target=&quot;_blank&quot;&gt;Settings profiles&lt;/a&gt; ：设置用户配置文件&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;profile的作用类似于用户角色，可以在&lt;strong&gt;user.xml&lt;/strong&gt;中定义多组profile，并可以为每组profile定义不同的配置项，类限制资源的使用。多个profile的配置可以复用。咋眼一看有点和MySQL的Proxy权限类似。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;模板：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;strong&gt;    &amp;lt;profiles&amp;gt; --配置profile
        &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;  -- 自定义profile
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;strong&gt; &lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;  -- 自定义profile
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
　　　　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;strong&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
   &lt;span&gt;&lt;strong&gt; &amp;lt;/profiles&amp;gt;&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&amp;lt;default&amp;gt;：自定义profile，可以在它下面设置相关参数，如：最大内存使用、只读等等。更多的配置参数后续会介绍，也而已看&lt;a href=&quot;https://clickhouse.tech/docs/zh/operations/settings/settings/#settings-force_index_by_date&quot; target=&quot;_blank&quot;&gt;官网文档&lt;/a&gt;，可以设置多个profile。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;该示例指定了两个profile：default和readonly。 默认&amp;lt;default&amp;gt;有一个特殊用途：必须始终存在并且在启动服务器时应用。profile文件可以相互继承，只需要在配置文件中列出即可，如定义一个test的profile：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readonly&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;test的profile继承了readonly的profile，包含了其所有的配置，并且使用新参数来覆盖其原有的配置。设置了之后如何使用呢？有二种方法，第1是直接在终端命令行里进行设置，第2个是在users.xml中的users选项组里进行指定（后面会说明）。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('2b515f56-34ea-47f2-abe0-c4a1b3a3ba06')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_2b515f56-34ea-47f2-abe0-c4a1b3a3ba06&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2b515f56-34ea-47f2-abe0-c4a1b3a3ba06&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('2b515f56-34ea-47f2-abe0-c4a1b3a3ba06',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2b515f56-34ea-47f2-abe0-c4a1b3a3ba06&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[&lt;/span&gt;&lt;span&gt;root@dba clickhouse-server&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;# clickhouse&lt;span&gt;-&lt;/span&gt;&lt;span&gt;client
ClickHouse client version &lt;/span&gt;&lt;span&gt;20.3&lt;/span&gt;.&lt;span&gt;5.21&lt;/span&gt;&lt;span&gt; (official build).
Connecting &lt;/span&gt;&lt;span&gt;to&lt;/span&gt; localhost:&lt;span&gt;9000&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;span&gt;default&lt;/span&gt;&lt;span&gt;.
Connected &lt;/span&gt;&lt;span&gt;to&lt;/span&gt; ClickHouse server version &lt;span&gt;20.3&lt;/span&gt;.&lt;span&gt;5&lt;/span&gt; revision &lt;span&gt;54433&lt;/span&gt;&lt;span&gt;.

dba :) &lt;/span&gt;&lt;span&gt;set&lt;/span&gt; profile &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;

&lt;span&gt;SET&lt;/span&gt; profile &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

Ok.
rows &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;. Elapsed: &lt;span&gt;0.002&lt;/span&gt;&lt;span&gt; sec. 

dba :) &lt;/span&gt;&lt;span&gt;set&lt;/span&gt; max_memory_usage &lt;span&gt;=&lt;/span&gt; &lt;span&gt;123123&lt;/span&gt;

&lt;span&gt;SET&lt;/span&gt; max_memory_usage &lt;span&gt;=&lt;/span&gt; &lt;span&gt;123123&lt;/span&gt;&lt;span&gt;

Received exception &lt;/span&gt;&lt;span&gt;from&lt;/span&gt; server (version &lt;span&gt;20.3&lt;/span&gt;.&lt;span&gt;5&lt;/span&gt;&lt;span&gt;):
Code: &lt;/span&gt;&lt;span&gt;164&lt;/span&gt;. DB::Exception: Received &lt;span&gt;from&lt;/span&gt; localhost:&lt;span&gt;9000&lt;/span&gt;. DB::Exception: Cannot modify &lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; setting &lt;span&gt;in&lt;/span&gt;&lt;span&gt; readonly mode. 
rows &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;. Elapsed: &lt;span&gt;0.005&lt;/span&gt;&lt;span&gt; sec. 

dba :) Bye.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;测试说明已经把readonly的profile的参数（readonly）继承过来了。&lt;/span&gt; &lt;/p&gt;
&lt;h3&gt;※ &lt;a href=&quot;https://clickhouse.tech/docs/v20.3/zh/operations/settings/constraints_on_settings/&quot; target=&quot;_blank&quot;&gt;Constraints on Settings&lt;/a&gt;：约束&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;strong&gt;user.xml&lt;/strong&gt;配置文件的&lt;strong&gt;profile&lt;/strong&gt;选项组下&lt;strong&gt;constraints&lt;/strong&gt;选项组里定义对设置的约束，并禁止用户使用SET查询更改某些设置。constraints标签可以设置一组约束条件，以限制&lt;strong&gt;profile&lt;/strong&gt;内的参数值被随意修改，约束条件有如下三种规则：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;min：最小值约束，在设置相应参数的时候，取值不能小于该阈值；&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;max：最大值约束，在设置相应参数的时候，取值不能大于该阈值；&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;readonly：只读约束，该参数值不允许被修改。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;需要在&lt;strong&gt;profile&lt;/strong&gt;选项组里设置&lt;strong&gt;constraints&lt;/strong&gt;，模板：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;user_name&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;setting_name_1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;lower_boundary&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;setting_name_1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;setting_name_2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;upper_boundary&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;setting_name_2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;setting_name_3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;lower_boundary&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;upper_boundary&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;setting_name_3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;setting_name_4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;setting_name_4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;user_name&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：如果违反约束，则会引发异常，并且设置实际上不会更改。支持三种约束类型：最小，最大，只读。 最小和最大约束为数字设置指定上限和下限，并且可以组合使用。 只读约束指定用户完全不能更改相应的设置。如： &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;default&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;min&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;20000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;default&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：在&lt;strong&gt;default&lt;/strong&gt;默认&lt;strong&gt;profile&lt;/strong&gt;中定义的&lt;strong&gt;constraints&lt;/strong&gt;约束，将作为默认的全局约束，&lt;strong&gt;自动被其他profile继承&lt;/strong&gt;。例子中约束了参数max_memory_usage的最大最小值和参数force_index_by_date的只读属性，不能修改。关于更多的参数后续会再进行说明，也可以看&lt;a href=&quot;https://clickhouse.tech/docs/zh/operations/settings/settings/#settings-force_index_by_date&quot; target=&quot;_blank&quot;&gt;官方文档&lt;/a&gt;。如果违反约束则会报错：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('33edff0c-b776-4712-96c9-e1487c37e190')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_33edff0c-b776-4712-96c9-e1487c37e190&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_33edff0c-b776-4712-96c9-e1487c37e190&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('33edff0c-b776-4712-96c9-e1487c37e190',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_33edff0c-b776-4712-96c9-e1487c37e190&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
Code: &lt;span&gt;452&lt;/span&gt;. DB::Exception: Received from localhost:&lt;span&gt;9000&lt;/span&gt;. DB::Exception: Setting max_memory_usage shouldn&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t be less than 100000.&lt;/span&gt;
&lt;span&gt;
Code: &lt;/span&gt;&lt;span&gt;452&lt;/span&gt;. DB::Exception: Received from localhost:&lt;span&gt;9000&lt;/span&gt;. DB::Exception: Setting force_index_by_date should not be changed. 
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;※ &lt;a href=&quot;https://clickhouse.tech/docs/v20.3/zh/operations/quotas/#quotas&quot; target=&quot;_blank&quot;&gt;Quotas&lt;/a&gt;：配额，限制使用资源，限制有二种类型：一是在固定周期里的执行次数(quotas)，二是限制用户或则查询的使用资源（profiles）&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;strong&gt;user.xml&lt;/strong&gt;配置文件的选项组quotas里设置，限制该用户一段时间内的资源使用，即对一段时间内运行的一组查询施加限制，而不是限制单个查询。还具有限制单个查询的复杂性的功能。模板：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Quotas. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Name of quota. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt; --指定quotas名&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Limits for time interval. You could specify many intervals with different limits. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt; --时间间隔&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Length of interval. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt; --周期&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; No limits. Just calculate resource usage for time interval. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
        &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;默认情况下，配额仅跟踪每小时的资源消耗，而没有限制使用情况。在每个请求之后，将为每个时间间隔计算的资源消耗输出到服务器日志。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&amp;lt;default&amp;gt;：配额规则名。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;interval&amp;gt;：配置时间间隔，每个时间内的资源消耗限制。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;duration&amp;gt;：时间周期，单位秒。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;queries&amp;gt;：时间周期内允许的请求总数，0表示不限制。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;errors&amp;gt;：时间周期内允许的异常总数，0表示不限制。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;result_rows&amp;gt;：时间周期内允许返回的行数，0表示不限制。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;read_rows&amp;gt;：时间周期内允许在分布式查询中，远端节点读取的数据行数，0表示不限制。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;execution_time&amp;gt;：时间周期内允许执行的查询时间，单位是秒，0表示不限制。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;上面示例中的配置，属性值均为0，所以资源配额不做任何限制。现在继续声明另外一组配额：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;statbox&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;900&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;86400&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;500000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;7200&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;statbox&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：对于“ statbox”配额，每小时和每24小时（86,400秒）设置限制， 如果超过限制则会执行失败，并给出何时才能执行的错误：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a6339b01-ceb1-4e75-a296-c15300b967e2')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_a6339b01-ceb1-4e75-a296-c15300b967e2&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a6339b01-ceb1-4e75-a296-c15300b967e2&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a6339b01-ceb1-4e75-a296-c15300b967e2',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a6339b01-ceb1-4e75-a296-c15300b967e2&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
Code: &lt;span&gt;201&lt;/span&gt;. DB::Exception: Received from localhost:&lt;span&gt;9000&lt;/span&gt;. DB::Exception: Quota &lt;span&gt;for&lt;/span&gt; user `default` &lt;span&gt;for&lt;/span&gt; 10s has been exceeded: queries = &lt;span&gt;4&lt;/span&gt;/&lt;span&gt;3&lt;/span&gt;. Interval will end at &lt;span&gt;2020&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;02&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;29&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;. Name of quota template: `default`. 
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;从实施定义的固定时刻开始计算时间间隔。间隔结束时，将清除所有收集的值。 接下来的一个小时，配额计算将重新开始。&lt;/span&gt;&lt;span&gt;对于分布式查询处理，累积量存储在请求者服务器上。 因此，如果用户转到另一台服务器，则那里的配额将重新开始。重新启动服务器后，配额将重置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;quotas&lt;/strong&gt; 在配置的“用户”部分分配给用户，如果不是根据时间周期而是根据查询的资源消耗来进行限制，则在&lt;strong&gt;user.xml&lt;/strong&gt;里的&lt;strong&gt;profile&lt;/strong&gt;里进行设置，如参数：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;&lt;span&gt;：max_memory_usage：在单个ClickHouse服务进程中，运行一次查询限制使用的最大内存用量，默认值为10G；
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;：max_memory_usage_for_user：在单个ClickHouse服务进程中，以用户为单位进行统计，单个用户在运行查询时，限制使用的最大内存用量，默认值为0，即不做限制；
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;：max_memory_usage_for_all_queries：在单个ClickHouse服务进程中，所有运行的查询累加在一起，限制使用的最大内存用量，默认为0不做限制；
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;：max_partitions_per_insert_block：在单次INSERT写入的时候，限制创建的最大分区个数，默认值为100个。如果超出这个阈值数目，将会得到异常；
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;:max_rows_to_group_by：在执行GROUP BY聚合查询的时候，限制去重后的聚合KEY的最大个数，默认值为0，即不做限制。当超过阈值数量的时候，其处理方式由group_by_overflow_mode参数决定；
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;:group_by_overflow_mode：当max_rows_to_group_by熔断规则触发的时候，有三种处理形式: 
throw抛出异常，此乃默认值；
break立即停止查询，并返回当前部分的数据；
any仅以当前已存在的聚合KEY，继续完成聚合查询；
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;:max_bytes_before_external_group_by：在执行GROUP BY聚合查询的时候，限制使用的最大内存用量，默认值为0，即不做限制。当超过阈值数量的时候，聚合查询将会进一步借用本地磁盘。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;如果超过了限制则报错：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('1feb1ca0-c236-4147-aa5b-f974a24f0854')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_1feb1ca0-c236-4147-aa5b-f974a24f0854&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1feb1ca0-c236-4147-aa5b-f974a24f0854&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('1feb1ca0-c236-4147-aa5b-f974a24f0854',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1feb1ca0-c236-4147-aa5b-f974a24f0854&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
Code: &lt;span&gt;241&lt;/span&gt;. DB::Exception: Received from localhost:&lt;span&gt;9000&lt;/span&gt;. DB::Exception: Memory limit (&lt;span&gt;for&lt;/span&gt; user) exceeded: would use &lt;span&gt;4.81&lt;/span&gt; MiB (attempt to allocate chunk of &lt;span&gt;5045339&lt;/span&gt; bytes), maximum: &lt;span&gt;1.00&lt;/span&gt; B: While executing MergeTree
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;※ &lt;a href=&quot;https://clickhouse.tech/docs/v20.3/zh/operations/settings/settings_users/#user-settings&quot; target=&quot;_blank&quot;&gt;User settings&lt;/a&gt;：用户配置&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;strong&gt;user.xml&lt;/strong&gt;配置文件的&lt;strong&gt;users&lt;/strong&gt;选项组是配置自定义用户，定义一个新用户，必须包含以下几项属性：&lt;/span&gt;&lt;span&gt;用户名、密码、访问ip、数据库、表等等。它还可以应用上面的profile、quota。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;模板：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; If user name was not specified, 'default' user is used. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;user_name&lt;/span&gt;&lt;span&gt;&amp;gt; --配置的用户&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt; --明文密码&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Or &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_sha256_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_sha256_hex&lt;/span&gt;&lt;span&gt;&amp;gt; --加密密码，二选一&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt; --允许登录的地址，用于限制用户登录的客户端地址&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;profile_name&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;   --指定用户的profile&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;    -- 指定用户的quota，限制用户使用资源&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;               --指定数据库&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;database_name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table_name&lt;/span&gt;&lt;span&gt;&amp;gt;      --指定数据表&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;expression&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table_name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;database_name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;user_name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Other users settings &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：默认配置了default用户，在此之前的所有示例中，一直使用的是这个用户。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&amp;lt;user_name&amp;gt;：自定义用户&lt;/span&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.5&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;password&amp;gt;：用户密码&lt;br/&gt;密码可以以纯文本、SHA256（十六进制格式）、password_double_sha1_hex（和MySQL兼容）指定，设置方法如下：&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1.纯文本：
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;password&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
2.sha256:
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_sha256_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;password&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_sha256_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
从shell生成密码的示例：
&lt;/span&gt;&lt;span&gt;PASSWORD=$(base64 &amp;lt; /dev&lt;/span&gt;&lt;span&gt;&lt;span&gt;/urandom | head -c8); echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha256sum | tr -d '-'&lt;/span&gt;
第一行明文，第二行sha256
&lt;span&gt;3.sha1:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;password_double_sha1_hex&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;password&amp;lt;/password_double_sha1_hex&amp;gt;&lt;/span&gt;&lt;span&gt;
从shell生成密码的示例：
&lt;/span&gt;&lt;span&gt;PASSWORD=$(base64 &amp;lt; /dev&lt;/span&gt;&lt;span&gt;&lt;span&gt;/urandom | head -c8); echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha1sum | tr -d '-' | xxd -r -p | sha1sum | tr -d '-'&lt;/span&gt;
第一行明文，第二行sha1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;lt;networks&amp;gt;：限制用户登录的客户端地址&lt;br/&gt;可以通过IP，主机等进行限制&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;:IP地址，如10.0.0.1
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;：主机名，如example01.host.ru
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;host_regexp&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;：^example\d\d-\d\d-\d\.host\.ru$

来自任何IP：
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; :: / 0 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt; ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
来自本机：
&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;profile&amp;gt;：指定用户的profile&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;quota&amp;gt;：指定用户的quota，限制用户使用资源&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;database_name&amp;gt;：指定用户访问的数据库&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;table_name&amp;gt;：指定用户访问的表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;lt;filter&amp;gt;：指定用户访问的过滤器，限制返回符合条件的行。如：id = 1 ，即查询表只返回id=1的行&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;例子：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;123456&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;

        &lt;strong&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;database&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;database&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;  
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;id &amp;gt;= 500 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;  --行级限制&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;strong&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;该示例指定了两个用户：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;default：指定了密码、访问IP、profile、quota。
zhoujy ：指定了密码、访问IP、profile、quota，以及它只能使用test库，并且只能返回test库xx表id大于等于500的数据。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;※ &lt;a href=&quot;https://clickhouse.tech/docs/v20.3/zh/operations/settings/permissions_for_queries/#permissions_for_queries&quot; target=&quot;_blank&quot;&gt;Permissions for queries&lt;/a&gt;：查询权限管理&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;查询可以分为以下几种类型：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;读：SELECT，SHOW，DESCRIBE，EXISTS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;写：INSERT，OPTIMIZE。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;DDL：CREATE，ALTER，RENAME，ATTACH，DETACH，DROP TRUNCATE。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;设置：SET，USE。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;KILL&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;以上的权限通过配置标签来控制：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;readonly&lt;/strong&gt; ：&lt;/span&gt;&lt;span&gt;读权限、写权限和设置权限，由此标签控制，它有三种取值：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;0，不进行任何限制（默认值）；&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;1，只拥有读权限（只能执行SELECT、EXISTS、SHOW和DESCRIBE）；&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;2，拥有读权限和设置权限（在读权限基础上，增加了SET查询）。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;当设置readonly=1后，用户将无法在当前会话中更改readonly和allow_ddl设置；也可以通过约束来限制更改权限。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;allow_ddl&lt;/strong&gt;：&lt;/span&gt;&lt;span&gt;DDL权限由此标签控制，它有两种取值：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果当前会话的allow_ddl = 0，则无法执行SET allow_ddl = 1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;注意&lt;/strong&gt;：KILL QUERY可以在任何设置上执行，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;readonly&lt;/strong&gt;和&lt;strong&gt;allow_ddl&lt;/strong&gt;需要定义在用户&lt;strong&gt;profiles&lt;/strong&gt;中。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;   --在profiles里设置&lt;/span&gt;&lt;span&gt;
        ...
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;normal&lt;/span&gt;&lt;span&gt;&amp;gt; --只读，不能DDL&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;normal&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;normal_1&lt;/span&gt;&lt;span&gt;&amp;gt; --读且能set，不能DDL&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;normal_1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;normal_2&lt;/span&gt;&lt;span&gt;&amp;gt; --只读，即使DDL允许&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;normal_2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;normal_3&lt;/span&gt;&lt;span&gt;&amp;gt; --读写，能DDL&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_ddl&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;normal_3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

...
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;users&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        ...
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;123456&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;normal_3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt; --用户引用相关profile&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;strong&gt;&lt;span&gt;users&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;说明：在profiles里设置相应的权限角色，再在users里引用，继承这些参数的限制。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;※ &lt;a href=&quot;https://clickhouse.tech/docs/zh/operations/access_rights/&quot; target=&quot;_blank&quot;&gt;Access Rights&lt;/a&gt;：访问权限控制&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;访问权限在&lt;strong&gt;users.xml&lt;/strong&gt;中的&lt;strong&gt;users&lt;/strong&gt;选项组里设置，用于在群集中组合的服务器之间交换信息的用户不得有任何限制或配额-否则，分布式查询将失败。不能授予对一个数据库有完全访问权限，而对另一数据库具有只读访问权限。权限控制包含如下：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;网络访问控制：通过IP地址或则host主机名&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;数据库访问控制：通过read_only、allow_ddl来控制读、写、设置、DDL、KILL等&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;指定数据库访问：通过&amp;lt;allow_databases&amp;gt;指定访问数据库&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;指定表的访问：通过filter指定表达式来访问表中的数据行&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;在说明部分已经对ClickHouse的用户权限管理做了大致介绍，如果需要后续会继续更新相关知识点。好了，现在开始对各种场景进行生成相应的用户配置文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1）&lt;strong&gt;管理账号&lt;/strong&gt;：因为profiles里默认的profile是没有限制的，所以默认就是管理账号。因为ClickHouse的没有类似MySQL这样的管理权限，所以默认情况下管理账号也是读写账号。唯一的区别就是限制各个账号可以设置不同的使用资源。&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d46bce99-c71a-440c-88e1-55bd851c2a08')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_d46bce99-c71a-440c-88e1-55bd851c2a08&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d46bce99-c71a-440c-88e1-55bd851c2a08&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d46bce99-c71a-440c-88e1-55bd851c2a08',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d46bce99-c71a-440c-88e1-55bd851c2a08&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;2）&lt;strong&gt;只读账号&lt;/strong&gt;：在profiles里设置readonly，在users里给指定用户进行引用。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('594205d9-da85-4b6b-95a9-176643bf56ad')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_594205d9-da85-4b6b-95a9-176643bf56ad&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_594205d9-da85-4b6b-95a9-176643bf56ad&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('594205d9-da85-4b6b-95a9-176643bf56ad',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_594205d9-da85-4b6b-95a9-176643bf56ad&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readonly&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;3）&lt;strong&gt;读写账号&lt;/strong&gt;：如果非要和管理账号区分的话，就限制该账号不能使用set相关的操作，使用&lt;strong&gt;constraints&lt;/strong&gt;进行设置：&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7c1f78ed-c933-48ab-96b6-520789db3aa3')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_7c1f78ed-c933-48ab-96b6-520789db3aa3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7c1f78ed-c933-48ab-96b6-520789db3aa3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7c1f78ed-c933-48ab-96b6-520789db3aa3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7c1f78ed-c933-48ab-96b6-520789db3aa3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readwrite&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;4）&lt;strong&gt;限制账号&lt;/strong&gt;：限制方面有很多情况，这里逐步进行说明&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.1：限制IP访问，在&lt;strong&gt;users&lt;/strong&gt;选项组里进行设置ip：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;...
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;   --允许任何地址访问
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;  --允许本地访问
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; --允许该IP访问
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;设置多个IP访问，还支持&lt;span class=&quot;s1&quot;&gt;host、host_regexp等选项组。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.2：限制数据库访问，在&lt;strong&gt;users&lt;/strong&gt;选项组里进行设置allow_database：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;...
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;database&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;database&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;只允许访问test库，其他库不能使用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.3：限制表行访问，在&lt;strong&gt;users&lt;/strong&gt;选项组里进行设置database：&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;...
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;id &amp;gt;= 500 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;只能访问test库中表xx的id大于等于500的数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.4：&lt;/span&gt;&lt;span&gt;限制一定周期内的资源使用，在&lt;strong&gt;quotas&lt;/strong&gt;选项组里设置：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;...
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;   --quotas名称
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; --周期
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;  --周期时间，单位秒
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;   --查询限制，0不限制
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;       --错误限制，0不限制
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; --返回行限制，0不限制
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;  --读取行限制，0不限制
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; --执行时间限制，0不限制
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;设置好&lt;strong&gt;quotas&lt;/strong&gt;之后，需要在users下的每隔用户选项组里引用，如：&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;4.5：限制整体资源使用，需要在&lt;strong&gt;profiles&lt;/strong&gt;选项组里设置：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;...
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10000000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;  --限制查询最大使用内存&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;查询只能使用最大10000000000 &lt;span class=&quot;s1&quot;&gt;bytes&lt;/span&gt;的内存，还可以设置其他的&lt;a href=&quot;https://clickhouse.tech/docs/v19.16/zh/operations/settings/settings/#settings&quot; target=&quot;_blank&quot;&gt;参数&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5：常用模板设置&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;最后来配置一个日常经常使用的一个users.xml模板，大致的要求如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;①：只读账号：能从任何IP访问的账号 &lt;strong&gt;zhoujy_ro&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;②：读写账号，不能set：只能从192.168.163.132连接的账号 &lt;strong&gt;zhoujy_rw&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;③：管理账号，能读写能set：只能从192.168.163.132、192.168.163.133连接的账号 &lt;strong&gt;zhoujy_admin&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;④：限制账号：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;只能读写指定库：只能从192.168.163.132连接的账号 &lt;strong&gt;zhoujy_db&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;只能读指定库表中的行：只能从192.168.163.132连接的账号 &lt;strong&gt;zhoujy_tb&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;模板示例：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100000000&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;use_uncompressed_cache&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;random&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load_balancing&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;max_memory_usage&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;readonly&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;force_index_by_date&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constraints&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;readwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profiles&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;从任何IP访问的只读账号zhoujy_ro &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy_ro&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readonly&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy_ro&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;从指定IP访问的读写账号zhoujy_rw,指定不能set的参数 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy_rw&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readwrite&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy_rw&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;从指定IP访问的管理账号 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy_admin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.133&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy_admin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;从指定IP访问指定数据库 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy_db&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readwrite&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;database&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;database&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy_db&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;从指定IP访问指定数据库表的记录 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;zhoujy_tb&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6bb4837eb74329105ee4568dda7dc67ed2ca2ad9&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;password_double_sha1_hex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;networks &lt;/span&gt;&lt;span&gt;incl&lt;/span&gt;&lt;span&gt;=&quot;networks&quot;&lt;/span&gt;&lt;span&gt; replace&lt;/span&gt;&lt;span&gt;=&quot;replace&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;::/0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;127.0.0.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;192.168.163.132&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;readonly&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;default&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quota&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;database&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;database&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;allow_databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;id &amp;gt;= 500 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;databases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;zhoujy_tb&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;users&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3600&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;duration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;queries&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;errors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;read_rows&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;execution_time&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;interval&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quotas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;yandex&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;      &lt;a href=&quot;https://clickhouse.tech/&quot; target=&quot;_blank&quot;&gt;ClickHouse&lt;/a&gt;用户权限管理配置完全不同于MySQL数据库，其是通过修改文件来管理用权限的，本文只对一些常用的场景进行说明，后续遇到复杂情况，也会定期更新。特别需要注意的是，在修改完权限文件之后ClickHouse不需要重启，直接会生效，所以不影响其在线服务。如果出现问题，可以直接查看其错误日志，定位问题解决即可。&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 03 Apr 2020 16:47:00 +0000</pubDate>
<dc:creator>jyzhou</dc:creator>
<og:description>背景 最近花了些时间看了下ClickHouse文档，发现它在OLAP方面表现很优异，而且相对也比较轻量和简单，所以准备入门了解下该数据库系统。在安装完之后首先做的应该如何设置用户密码以及权限控制。因为</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zhoujinyi/p/12613026.html</dc:identifier>
</item>
<item>
<title>CSRF的几种防御方法的利弊分析 - Mysticbinary</title>
<link>http://www.cnblogs.com/mysticbinary/p/12630011.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mysticbinary/p/12630011.html</guid>
<description>&lt;p&gt;本文直接从防御方式开始讨论，防御CSRF有4种方法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;使用POST替代GET&lt;/li&gt;
&lt;li&gt;检验HTTP Referer&lt;/li&gt;
&lt;li&gt;验证码&lt;/li&gt;
&lt;li&gt;Token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些程序员在开发的时候都是用GET、POST通用的函数来接收客户端的数据，这样也是某些接口有CSRF的原因之一，但是将全部接口都改成只允许POST方式访问，就能防范CSRF了吗？答案是：不能。只能说提高了一些成本。&lt;/p&gt;
&lt;p&gt;原本是GET方式访问的接口，攻击者只需要构造接口的URL参数让受害者点击即可。现在改成使用POST方式访问，攻击者只需要利用其他站点，在站点上布置一个POST请求，让用户点击。&lt;/p&gt;
&lt;p&gt;HTTP Referer真是一个用于安全的字段，除了能防范CSRF，还能防JSONP劫持、盗链、站外提交等安全问题。但是HTTP Referer就一点问题都没有了吗？答案是：否定的，HTTP Referer只能检查点击的链接来源是来自站内还是站外，如果是GET方式的CSRF，那链接本身就是站内的，也就意味着检验HTTP Referer是无效的。&lt;/p&gt;
&lt;p&gt;上面说的两种防御CSRF的方式，都有一定缺陷。但是使用验证码是完全可以做到防止CSRF的，因为验证码是用户在提交表单的时候，必须输入图片验证码，保证了服务器收到的是来自预期的请求。这里我补充一下，验证码功能必须没有缺陷才行，我之前测试过很多WEB站点，验证码或多或少有问题，这样不但不能防止CSRF，甚至会引发出其他漏洞被利用。&lt;/p&gt;
&lt;p&gt;下面我用前端抓包的方式来观察百度的发送图片验证码的流程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1552062/202004/1552062-20200403231706781-333848208.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（假设我这里操作一个修改密码操作）我请求了一次修改密码接口后，该接口就会返回图片验证码资源回到浏览器并展示出来，发送修改密码表单时需要用户填写图片验证码，然后将修改的一起发送到服务器去校验。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1552062/202004/1552062-20200403232408207-1040758479.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样就保证了攻击者无法预知与伪造请求中的veritycode参数。&lt;/p&gt;
&lt;p&gt;那么验证码有什么缺点吗？在用户体验上，如果一个网站很多功能都需要输入验证码才能发送，那么无疑非常影响用户体验。&lt;/p&gt;
&lt;p&gt;Token和验证码的原理非常相似，只不过在使用上，验证码是非常需要用户交互的，但是Token基本是无感知的。&lt;br/&gt;根据Token加入请求的方式，又可以分为三种类型：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Cookie Token&lt;/li&gt;
&lt;li&gt;HTTP头自定义属性Token&lt;/li&gt;
&lt;li&gt;表单Token&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;cookie-token&quot;&gt;Cookie Token&lt;/h2&gt;
&lt;p&gt;类似图片验证码一样，每次请求的功能接口时，都通过响应头的Set-Cookie，将token存储到本地cookie中。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-html&quot;&gt;Set-Cookie: RePassToken=0123456789 expires=Thu, 04-Apr-2019 15:11:32 GMT; path=/; domain=passport.baidu.com; httponly
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;http头自定义属性token&quot;&gt;HTTP头自定义属性Token&lt;/h2&gt;
&lt;p&gt;先申明前端要在请求头里面添加自定义参数，必须后台允许，否则请求会报错。&lt;/p&gt;
&lt;p&gt;这里以vue-resource请求为例，前端的方法，全局配置请求头，在main.js里面设置：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;Vue.http.interceptors.push((request, next) =&amp;gt; {
        request.headers.set('HTTP_Token', '1234567890');   // 在请求里面添加了token
        next((response) =&amp;gt; { return response })
})
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里以PHP举例，服务器端将http头数据都放在全局数据_SERVER里，参数都以HTTP开头，例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;# 客户端在http头里添加了HTTP_Token参数， 服务器端可这样读取
if(array_key_exists('HTTP_Token', $_SERVER)) {
        $token = $_SERVER['HTTP_Token'];
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我直接讲这个方式的缺点，使用HTTP头定义属性的方式来修复CSRF还是比较少的，因为现在的前端和后端的开发基本都是两个独立的团队，安全部门为了修复一个低位漏洞CSRF就要沟通两个部门，还是修改前端和后端两处地方，显然不是一个最优解。毕竟还是有很多其他低成本的方式可以使用。&lt;/p&gt;
&lt;h2 id=&quot;表单token&quot;&gt;表单Token&lt;/h2&gt;
&lt;p&gt;这个表单可以是GET、POST，每个表单，请求都得包含一个token，才能使用功能。下面观察一下百度的个人中心的token使用流程。&lt;br/&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/1552062/202004/1552062-20200404002428047-79398833.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果修改了token发 请求，那么将不能得到正常的响应文了。&lt;/p&gt;
&lt;p&gt;以上说的几种防护方式各有利弊，需要注意的是，如果网站还存在着其他安全漏洞，比如XSS，那么攻击者还是能够通过JS取到Token进行攻击的。&lt;/p&gt;
</description>
<pubDate>Fri, 03 Apr 2020 16:27:00 +0000</pubDate>
<dc:creator>Mysticbinary</dc:creator>
<og:description>本文直接从防御方式开始讨论，防御CSRF有4种方法： 使用POST替代GET 检验HTTP Referer 验证码 Token 使用POST替代GET 一些程序员在开发的时候都是用GET、POST通用</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/mysticbinary/p/12630011.html</dc:identifier>
</item>
<item>
<title>Selenium系列（十三） - 自动化必备知识之Xpath的详细使用 - 小菠萝测试笔记</title>
<link>http://www.cnblogs.com/poloyy/p/12626196.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/poloyy/p/12626196.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;如果你还想从头学起Selenium，可以看看这个系列的文章哦！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/poloyy/category/1680176.html&quot;&gt;https://www.cnblogs.com/poloyy/category/1680176.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;其次，如果你不懂前端基础知识，需要自己去补充哦，博主暂时没有总结（虽然我也会，所以我学selenium就不用复习前端了哈哈哈...）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;什么是Xpah&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;官方：&lt;/strong&gt;XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中通过元素和属性进行导航&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;【XPath 使用路径表达式来选取 XML 文档中的节点或者节点集】&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Xpath的缺点&lt;/h2&gt;
&lt;p&gt;Xpath 这种定位方式， webdriver会将整个页面的所有元素进行扫描以定位我们所需要的元素， 这是个非常费时的操作，  如果脚本中大量使用xpath做元素定位的话， 脚本的执行速度可能会稍慢&lt;/p&gt;

&lt;h2&gt;Xpath在UI自动化中的应用场景&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;在Web UI自动化中，其实用Xpath的定位元素的优先级并不高，但它是万能的；所以如果用其他方式无法定位时，可以用Xpath进行定位&lt;/li&gt;
&lt;li&gt;在App UI自动化中，Xpath是唯一可以定位元素的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Xpath常见的表达式&lt;/h2&gt;
&lt;table class=&quot;reference&quot;&gt;&lt;tbody readability=&quot;5.5&quot;&gt;&lt;tr&gt;&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;等价于CSS&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;nodename&lt;/td&gt;
&lt;td&gt;标签&lt;/td&gt;
&lt;td&gt;选取此节点的所有子节点，类似 css 中的标签选择器&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;从根节点选取，也就是当前节点的最顶层（默认情况下当前节点是 html 最顶层，若从某元素开始，当前节点为此元素）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//&lt;/td&gt;
&lt;td&gt;空格，后代选择器&lt;/td&gt;
&lt;td&gt;从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;选取当前节点&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;..&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;选取当前节点的父节点&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;选取属性&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;通配符，代表任意类型的标签&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Xpath定位方式的简单栗子&lt;/h2&gt;
&lt;h3&gt;绝对路径定位&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/span&gt;从顶层 html 开始往下找，像文件夹一样写的完整路径；它是以 &lt;span class=&quot;cnblogs_code&quot;&gt;/&lt;/span&gt; 开头的，如： &lt;span class=&quot;cnblogs_code&quot;&gt;/html/body/div/ul/li&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/span&gt;一旦页面结构发生改变，路径也随之失效，必须重新定位。 所以不推荐使用绝对路径的写法&lt;/p&gt;

&lt;h3&gt;相对路径定位&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/span&gt;相对路径  以&quot;//&quot; 开头， 让xpath 从文档的任何元素节点开始解析（也就是说每个节点都作为起点找一下）&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;和绝对路径的区别：&lt;/strong&gt;&lt;/span&gt;绝对路径  以 &quot;/&quot;  开头，让xpath 从文档的根节点开始解析&lt;/p&gt;

&lt;h3&gt;索引定位&lt;/h3&gt;
&lt;p&gt;跟Python的列表一样，通过[ 1 ]下标去找，注意！它是从1开始的&lt;/p&gt;
&lt;p&gt;如： &lt;span class=&quot;cnblogs_code&quot;&gt;//input[2]&lt;/span&gt; ，表示任意节点下的第二个 input 标签&lt;/p&gt;

&lt;h2&gt;Xpath等价于CSS选择器的栗子&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;首先我们访问：https://www.51job.com/&lt;/li&gt;
&lt;li&gt;然后按F12，选中Elements，按Ctrl+F&lt;/li&gt;
&lt;li&gt;将下面的表达式放进去，逐一验证匹配出来的元素是否一致&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/span&gt;这里可能需要你懂CSS的各种选择器写法哦，不太了解的可以看这篇博文：&lt;/li&gt;
&lt;/ul&gt;&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;19.5&quot;&gt;&lt;tr&gt;&lt;td&gt;Xpath路径表达式&lt;/td&gt;
&lt;td&gt;CSS选择器表达式&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;只通过绝对路径、标签定位&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/html/body&lt;/td&gt;
&lt;td&gt;html&amp;gt;body&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;/html/body/div/div[@class=&quot;bar&quot;]&lt;/td&gt;
&lt;td&gt;html&amp;gt;body&amp;gt;div&amp;gt;div.bar&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/html//div&lt;/td&gt;
&lt;td&gt;html div&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/html//div/ul//li&lt;/td&gt;
&lt;td&gt;html div&amp;gt;ul li&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;通过相对路径、标签、属性值定位&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;//div[@class=&quot;header&quot;]&lt;/td&gt;
&lt;td&gt;div.header&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//div[@class=&quot;ush top_wrap&quot;]&lt;/td&gt;
&lt;td&gt;div.top_wrap&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//div[@class=&quot;ush top_wrap&quot;]/a[@class=&quot;more&quot;]&lt;/td&gt;
&lt;td&gt;div.top_wrap&amp;gt;a.more &lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;通过标签、属性值、通配符定位&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;//*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//*[@class=&quot;header&quot;]&lt;/td&gt;
&lt;td&gt;[class=&quot;header&quot;]或 .header&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//*[@id=&quot;languagelist&quot;]&lt;/td&gt;
&lt;td&gt;[id=&quot;languagelist&quot;]或 #languagelist&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//*[@id=&quot;languagelist&quot;]/li[2]&lt;/td&gt;
&lt;td&gt;#languagelist&amp;gt;li:nth-child(2)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//div[@class=&quot;header&quot;]//ul[@id=&quot;languagelist&quot;]/*&lt;/td&gt;
&lt;td&gt;div.header ul#languagelist &amp;gt;*&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;通过下标 或 属性定位&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;//@href&lt;/td&gt;
&lt;td&gt;[href]&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;//a[@href]&lt;/td&gt;
&lt;td&gt;a[href]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//div[@class=&quot;header&quot;]//ul/li[last()]&lt;/td&gt;
&lt;td&gt;div.header ul &amp;gt;li:last-child&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//div[@class=&quot;ush top_wrap&quot;]//ul[@id]/li[1]&lt;/td&gt;
&lt;td&gt;div.top_wrap ul[id]&amp;gt;li:first-child&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;若干路径&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;//body | //ul&lt;/td&gt;
&lt;td&gt;body , ul&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td&gt;//ul[@id=&quot;kwdTypeSelUl&quot;] | //ul[@id=&quot;area_channel_layer_list&quot;]&lt;/td&gt;
&lt;td&gt;ul#kwdTypeSelUl , ul#area_channel_layer_list&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Xpath一些常用函数和特殊写法&lt;/h2&gt;
&lt;p&gt;继续拿：https://www.51job.com/做小案例哦&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;18&quot;&gt;&lt;tr&gt;&lt;td&gt;表达式&lt;/td&gt;
&lt;td&gt;描述&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//title[@*]&lt;/td&gt;
&lt;td&gt;选取所有带有属性的 title 元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;条件表达式and、or、not&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//div[@id=&quot;zoomer&quot; and  @style=&quot;display:none;&quot;]&lt;/td&gt;
&lt;td&gt;找到id=&quot;zoomer&quot;和style=&quot;display:none&quot;的div元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//div[@class=&quot;cresume&quot; or @class=&quot;footer&quot;]&lt;/td&gt;
&lt;td&gt;找到class=&quot;cresume&quot;或 &quot;footer&quot;的div元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;//*[@id=&quot;showguide&quot; and not(@class=&quot;footer&quot;)]&lt;/td&gt;
&lt;td&gt;找到id=&quot;showguide&quot;且class != &quot;footer&quot;的任意元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;模糊匹配函数starts-with、contains&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;//*[starts-with(@id,&quot;s&quot;)]&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;找到id开头为 s 的任意元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;//*[ends-with(@id,&quot;s&quot;)]&lt;/td&gt;
&lt;td&gt;找到id结尾为 s 的任意元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;//*[contains(text(),'注册')]  &lt;/span&gt;&lt;/td&gt;
&lt;td&gt;找到标签间文本包含 注册 的任意元素&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;定位函数position&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;//*[contains(@id,&quot;languagelist&quot;)]/li[position()=3]&lt;/td&gt;
&lt;td&gt;找到第三个 li&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;//*[contains(@id,&quot;languagelist&quot;)]/li[position()&amp;lt;=2]&lt;/td&gt;
&lt;td&gt;找到前两个 li&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Xpath的其他定位方式&lt;/h2&gt;
&lt;table class=&quot;dataintable&quot;&gt;&lt;tbody readability=&quot;10&quot;&gt;&lt;tr&gt;&lt;th&gt;定位方式&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;ancestor&lt;/td&gt;
&lt;td&gt;选取当前节点的所有先辈（父、祖父等）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;ancestor-or-self&lt;/td&gt;
&lt;td&gt;选取当前节点的所有先辈（父、祖父等）以及当前节点本身&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;child&lt;/td&gt;
&lt;td&gt;选取当前节点的所有子元素&lt;span&gt;【&lt;/span&gt;&lt;span&gt;&lt;strong&gt;/可替代，略显多余】&lt;/strong&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;descendant&lt;/td&gt;
&lt;td&gt;选取当前节点的所有后代元素（子、孙等）&lt;span&gt;【&lt;strong&gt;//可替代，略显多余】&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;descendant-or-self&lt;/td&gt;
&lt;td&gt;选取当前节点的所有后代元素（子、孙等）以及当前节点本身&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;following&lt;/td&gt;
&lt;td&gt;选取当前节点的结束标签之后的所有节点&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;following-sibling&lt;/td&gt;
&lt;td&gt;选取当前节点之后的所有同级节点&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;选取当前节点的父节点&lt;span&gt;【&lt;strong&gt;../可替代，略显多余】&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;preceding&lt;/td&gt;
&lt;td&gt;选取文档中当前节点的开始标签之前的所有节点&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;preceding-sibling&lt;/td&gt;
&lt;td&gt;选取当前节点之前的所有同级节点&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Xpath其他方式的实际栗子&lt;/h2&gt;
&lt;p&gt;继续拿：https://www.51job.com/做小案例哦&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;16&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;其他定位方式&lt;/td&gt;
&lt;td&gt; 是否有等价写法？&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td&gt;//*[contains(@class,&quot;top_wrap&quot;)]/parent::div&lt;/td&gt;
&lt;td&gt;//*[contains(@class,&quot;top_wrap&quot;)]/..&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td&gt;//*[contains(@class,&quot;content&quot;)]/div/child::div&lt;/td&gt;
&lt;td&gt;//*[contains(@class,&quot;content&quot;)]/div/div&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td&gt;//*[contains(@id,&quot;userid&quot;)]/preceding-sibling::input&lt;/td&gt;
&lt;td&gt;//*[contains(@id,&quot;userid&quot;)]/../input[position()&amp;lt;=4]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td&gt;//*[contains(@id,&quot;userid&quot;)]/following-sibling::div&lt;/td&gt;
&lt;td&gt;//*[contains(@id,&quot;userid&quot;)]/../div[position()=2]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td&gt;//*[contains(@class,&quot;content&quot;)]/descendant::div&lt;/td&gt;
&lt;td&gt;//*[contains(@class,&quot;content&quot;)]//div&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</description>
<pubDate>Fri, 03 Apr 2020 16:04:00 +0000</pubDate>
<dc:creator>小菠萝测试笔记</dc:creator>
<og:description>如果你还想从头学起Selenium，可以看看这个系列的文章哦！ https://www.cnblogs.com/poloyy/category/1680176.html 其次，如果你不懂前端基础知识，</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/poloyy/p/12626196.html</dc:identifier>
</item>
</channel>
</rss>