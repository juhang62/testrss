<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>设计模式之代理模式--PHP - 青竹zzq</title>
<link>http://www.cnblogs.com/zzq919101/p/10370238.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zzq919101/p/10370238.html</guid>
<description>&lt;p&gt;代理模式是常用的设计模式之一，代理模式为对象的间接访问提供了一套方案，可以对对象访问进行控制，也能监控对象访问相关的数据信息。&lt;/p&gt;
&lt;p&gt;代理模式（Proxy）就是给某一个对象提供代理，在由代理控制原对象的访问。&lt;/p&gt;
&lt;p&gt;代理模式的UML图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1025278/201902/1025278-20190213154533931-1971465713.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;下面是代理模式的demo：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * @desc 代理模式
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * Created by PhpStorm.
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * User: zzq
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * Date: 2019-02-13
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * Time: 15:01
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义RealSubject 和 Proxy 共同具备的东西&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Subject{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; say();
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; run();
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;代理类&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Proxy &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Subject{
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;$realSubject&lt;/span&gt; = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; __construct(RealObject &lt;span&gt;$realObject&lt;/span&gt; = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; ( &lt;span&gt;empty&lt;/span&gt;(&lt;span&gt;$realObject&lt;/span&gt;&lt;span&gt;) ) {
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;             &lt;span&gt;$this&lt;/span&gt;-&amp;gt;realSubject = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RealObject();
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             &lt;span&gt;$this&lt;/span&gt;-&amp;gt;realSubject = &lt;span&gt;$realObject&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; say(){
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;realSubject-&amp;gt;&lt;span&gt;say();
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; run(){
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;realSubject-&amp;gt;&lt;span&gt;run();
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;真正的实体对象方法&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; RealObject &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Subject{
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;$name&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; __construct(&lt;span&gt;$name&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;name = &lt;span&gt;$name&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; say(){
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$this&lt;/span&gt;-&amp;gt;name.&quot;说：我饿了&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;PHP_EOL&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; run(){
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$this&lt;/span&gt;-&amp;gt;name.&quot;吃饱了，去跑步&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;         &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;PHP_EOL&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; 
&lt;span&gt;52&lt;/span&gt; &lt;span&gt;$subject&lt;/span&gt; = &lt;span&gt;new&lt;/span&gt; RealObject(&quot;李四&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;$proxy&lt;/span&gt; = &lt;span&gt;new&lt;/span&gt; Proxy(&lt;span&gt;$subject&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;$proxy&lt;/span&gt;-&amp;gt;&lt;span&gt;say();
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;$proxy&lt;/span&gt;-&amp;gt;run();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; demo的执行结果&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;李四说：我饿了
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; 李四吃饱了，去跑步
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其它帖子有说了很多代理模式的使用场景，如：图片代理、远程代理、虚拟代理、动态代理具体的模式可自行百度。&lt;/p&gt;
&lt;p&gt;下面列举代理模式具体的使用场景：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;要监控对象的访问次数&lt;/li&gt;
&lt;li&gt;要监控对象中方法的访问次数&lt;/li&gt;
&lt;li&gt;指定对象的权限控制，可在preRequest方法中去校验权限&lt;/li&gt;
&lt;li&gt;执行完指定方法后进入队列，可在afterRequest中去做入列动作&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Wed, 13 Feb 2019 07:54:00 +0000</pubDate>
<dc:creator>青竹zzq</dc:creator>
<og:description>代理模式是常用的设计模式之一，代理模式为对象的间接访问提供了一套方案，可以对对象访问进行控制，也能监控对象访问相关的数据信息。 代理模式（Proxy）就是给某一个对象提供代理，在由代理控制原对象的访问</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zzq919101/p/10370238.html</dc:identifier>
</item>
<item>
<title>JAVA学习（一）——基本语法 - 三页黎明</title>
<link>http://www.cnblogs.com/yang-shun/p/10366608.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yang-shun/p/10366608.html</guid>
<description>&lt;p&gt;&lt;em&gt;　　tips：前端开发写惯了弱类型语言，再来学强类型语言，真的是被各种修饰符、类型声明给整的云里雾里，而且java语法和javascript语言差别还是很大的，所以做好笔记，把一些需要注意的地方记下来是非常重要的，接下来就开始学习java啦。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;　&lt;strong&gt;一、&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;基本语法：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;1、大小写敏感&lt;/strong&gt;：Java是大小写敏感的，这就意味着标识符Hello与hello是不同的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　2、类名&lt;/strong&gt;：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 MyFirstJavaClass 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　3、方法名&lt;/strong&gt;：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　4、源文件名&lt;/strong&gt;：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记Java是大小写敏感的），文件名的后缀为.java。（如果文件名和类名不相同则会导致编译错误）。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;5、主方法入口&lt;/strong&gt;：所有的Java 程序由&lt;strong&gt;public static void main(String args[])&lt;/strong&gt;方法开始执行。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;备注一下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　5.1、public static void main(String args[]){}：为java主函数，java虚拟机会自动寻找到main方法，然后开始执行后面的程序，java程序的规定的格式写法；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　    5.2、public：可外部访问；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　5.3、static：标记为静态函数，将该函数存储在静态存储区，不需要实例化（new）即可使用；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　    5.4、void：无返回值；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　5.5、String args[]：可在命令行通过此参数给函数传值，可在其他类调用这个类的main函数时传值。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyFirstJavaProgram {
   &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 第一个Java程序.  
    * 它将打印字符串 Hello World
    &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String []args) {
       System.&lt;/span&gt;&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Hello World&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 打印 Hello World&lt;/span&gt;
&lt;span&gt;    }
} &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;二、类（class）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;1、局部变量&lt;/p&gt;
&lt;p&gt;　　　　2、成员变量：定义在类中，方法体之外的变量，和局部变量略有不同。&lt;/p&gt;
&lt;p&gt;　　　　3、类变量也声明在类中，方法体之外，但必须声明为static类型。&lt;/p&gt;
&lt;p&gt;　　　　4、构造方法：在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Puppy{
   &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Puppy(){
   }

   &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Puppy(String name){
      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这个构造器仅有一个参数：name&lt;/span&gt;
&lt;span&gt;   }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;三、类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　1、基本数据类型（内置基本类型，引用类型）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;byte a = 100；—— byte数据类型是8位、有符号的，以二进制补码表示的整数；&lt;/p&gt;
&lt;p&gt;　　　　short s = 1000；—— short数据类型是16位、有符号的以二进制补码表示的整数；&lt;/p&gt;
&lt;p&gt;　　　　int a = 100000；—— int数据类型是32位、有符号的以二进制补码表示的整数；&lt;/p&gt;
&lt;p&gt;　　　　long a = 100000L；—— long数据类型是64位、有符号的以二进制补码表示的整数；（后面加了L）&lt;/p&gt;
&lt;p&gt;　　　　float f1 = 234.5f；—— float数据类型是单精度、32位、符合IEEE 754标准的浮点数；（小数，后面加了f）&lt;/p&gt;
&lt;p&gt;　　　　double d1 = 123.4；——  double数据类型是双精度、64位、符合IEEE 754标准的浮点数；（小数）&lt;/p&gt;
&lt;p&gt;　　　　boolean one = true；——  boolean数据类型表示一位的信息；（true或false）&lt;/p&gt;
&lt;p&gt;　　　　char letter = ‘A’；—— char类型是一个单一的16位Unicode字符；&lt;/p&gt;
&lt;p&gt;　　　　Animal animal = new Animal(“giraffe”) ； —— 引用类型变量由类的构造函数创建，可以使用它们访问所引用的对象；&lt;/p&gt;
&lt;p&gt;　　　　&lt;span class=&quot;hljs-keyword&quot;&gt;final &lt;span class=&quot;hljs-keyword&quot;&gt;double PI = &lt;span class=&quot;hljs-number&quot;&gt;3.1415927；——  常量指不能改变的量。 在Java中用final标志，声明方式和变量类似；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;strong&gt;2、变量类型（局部变量，实例变量，类变量）&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;&lt;strong&gt;　　　　局部变量：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;&lt;strong&gt;　　　　　　&lt;/strong&gt;1、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;访问修饰符不能用于局部变量；（局部变量本身只能局部调用，外部没法调用，所以不需要修饰符private ,public protend，但是能加final）&lt;/p&gt;
&lt;p&gt;　　　　　　2、局部变量是在栈上分配的。（由于进程的栈空间是有限的，所以要避免申请占用空间过大的局部变量，以及避免函数嵌套层数过多。这些都可能引起栈空间不够导致程序崩溃。）&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;实例变量：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　1、实例变量声明在一个类中，但在方法、构造方法和语句块之外；&lt;/p&gt;
&lt;p&gt;　　　　　　2、实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；&lt;/p&gt;
&lt;p&gt;　　　　　　3、实例变量可以声明在使用前或者使用后；（有点类型js的变量提升）&lt;/p&gt;
&lt;p&gt;　　　　　　4、访问修饰符可以修饰实例变量；&lt;/p&gt;
&lt;p&gt;　　　　　　5、一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；&lt;/p&gt;
&lt;p&gt;　　　　　　6、实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；（局部变量没有默认值哦！）&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;类变量（静态变量）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　1、以static关键字声明，必须在方法、构造方法和语句块之外。&lt;/p&gt;
&lt;p&gt;　　　　　　2、无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。&lt;/p&gt;
&lt;p&gt;　　　　　　3、静态变量除了被声明为常量外很少使用。常量是指声明为public/private，final和static类型的变量。常量初始化后不可改变。&lt;/p&gt;
&lt;p&gt;　　　　　　4、静态变量储存在静态存储区。经常被声明为常量，很少单独使用static声明变量。&lt;/p&gt;
&lt;p&gt;　　　　　　5、类变量被声明为public static final类型时，类变量名称必须使用大写字母。如果静态变量不是public和final类型，其命名方式与实例变量以及局部变量的命名方式一致。&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;四、修饰符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　访问修饰符（private、public、protected）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　　&lt;/strong&gt;1、private —— 只能被所属类访问，并且类和接口不能声明为private。&lt;/p&gt;
&lt;p&gt;　　　　　　2、public —— Java程序的main() 方法必须设置成公有的，否则，Java解释器将不能运行该类。&lt;/p&gt;
&lt;p&gt;　　　　　　3、protected —— 能被同一个包中的任何其他类访问，也能够被不同包中的子类访问；不能修饰类和接口，方法和成员变量能够声明为protected，但是接口的成员变量和成员方法不能声明为protected。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;非访问修饰符（static、final、abstract、synchronized、volatile）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　　&lt;/strong&gt;1、static —— 局部变量不能被声明为static变量；可以直接使用classname.variablename和classname.methodname的方式访问。&lt;/p&gt;
&lt;p&gt;　　　　　　2、final —— final对象的引用不能改变，但是里面的值可以改变；final修饰符通常和static修饰符一起使用来创建类常量；类中的Final方法可以被子类继承，但是不能被子类修改；final类不能被继承。&lt;/p&gt;
&lt;p&gt;　　　　　　3、abstract —— 抽象类不能用来实例化对象；一个类不能同时被abstract和final修饰；抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。抽象方法不能被声明成final和static；任何继承抽象类的子类必须实现父类的所有抽象方法，除非该子类也是抽象类；抽象方法的声明以分号结尾，例如：public abstract sample();&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; SuperClass{
    &lt;/span&gt;&lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; m(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;抽象方法&lt;/span&gt;
&lt;span&gt;}
 
&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; SubClass extends SuperClass{
     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;实现抽象方法&lt;/span&gt;
      &lt;span&gt;void&lt;/span&gt;&lt;span&gt; m(){
          .........
      }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　　　4、synchronized —— 方法同一时间只能被一个线程访问。&lt;/p&gt;
&lt;p&gt;　　　　　　5、transient —— java虚拟机(JVM)将跳过transient修饰的实例变量。&lt;/p&gt;
&lt;p&gt;　　　　　　6、volatile —— volatile修饰的成员变量在每次被线程访问时，都强迫从共享内存中重读该成员变量的值。而且，当成员变量发生变化时，强迫线程将变化值回写到共享内存。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。（看得有点晕）&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;五、运算符（感觉所有语言都差不多，略）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　六、包装类或抽象类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　Number类：&lt;/strong&gt;内置数据类型，如：int、long、byte、double、float、short等对应了包装类Integer、Long、Byte、Double、Float、Short等，它们都是抽象类Number的子类。（包装类需要拆箱变成内置数据类型才能进行计算）&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;Math类：&lt;/strong&gt;Math 的方法都被定义为 static 形式，通过 Math 类可以在主函数中直接调用。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;Character类：&lt;/strong&gt;对应了内置数据类型char。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;String类：&lt;/strong&gt;String类是不可改变的，所以你一旦创建了String对象，那它的值就无法改变了。如果需要对字符串做很多修改，那么应该选择使用StringBuffer &amp;amp; StringBuilder类。输出格式化数字可以使用printf()和format()方法；&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;转 换 符&lt;/th&gt;
&lt;th&gt;说 明&lt;/th&gt;
&lt;th&gt;示 例&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr&gt;&lt;td&gt;%s&lt;/td&gt;
&lt;td&gt;字符串类型&lt;/td&gt;
&lt;td&gt;“mingrisoft”&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;字符类型&lt;/td&gt;
&lt;td&gt;‘m’&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%b&lt;/td&gt;
&lt;td&gt;布尔类型&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%d&lt;/td&gt;
&lt;td&gt;整数类型（十进制）&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%x&lt;/td&gt;
&lt;td&gt;整数类型（十六进制）&lt;/td&gt;
&lt;td&gt;FF&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%o&lt;/td&gt;
&lt;td&gt;整数类型（八进制）&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%f&lt;/td&gt;
&lt;td&gt;浮点类型&lt;/td&gt;
&lt;td&gt;99.99&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%a&lt;/td&gt;
&lt;td&gt;十六进制浮点类型&lt;/td&gt;
&lt;td&gt;FF.35AE&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%e&lt;/td&gt;
&lt;td&gt;指数类型&lt;/td&gt;
&lt;td&gt;9.38e+5&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%g&lt;/td&gt;
&lt;td&gt;通用浮点类型（f和e类型中较短的）&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%h&lt;/td&gt;
&lt;td&gt;散列码&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%%&lt;/td&gt;
&lt;td&gt;百分比类型&lt;/td&gt;
&lt;td&gt;％&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%n&lt;/td&gt;
&lt;td&gt;换行符&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%tx&lt;/td&gt;
&lt;td&gt;日期与时间类型（x代表不同的日期与时间转换符&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;　　　　&lt;strong&gt;StringBuffer和StringBuilder类：&lt;/strong&gt;StringBuilder相较于StringBuffer有速度优势，所以多数情况下建议使用StringBuilder类。然而在应用程序要求线程安全的情况下，则必须使用StringBuffer类。（线程安全就是多线程访问时，采用了加锁机制，当一个线程访问该类的某个数据时，进行保护，其他线程不能进行访问直到该线程读取完，其他线程才可使用。不会出现数据不一致或者数据污染。线程不安全就是不提供数据访问保护，有可能出现多个线程先后更改数据造成所得到的数据是脏数据）。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;数组：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre readability=&quot;9&quot;&gt;
//数组声明&lt;br/&gt;dataType[] arrayRefVar;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 首选的方法&lt;/span&gt;&lt;span&gt;
或
dataType arrayRefVar[];  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span readability=&quot;12&quot;&gt; 效果相同，但不是首选方法&lt;p&gt;//数组创建&lt;br/&gt;dataType[] arrayRefVar = &lt;span class=&quot;hljs-keyword&quot;&gt;new dataType[arraySize];&lt;/span&gt;&lt;br/&gt;或&lt;br/&gt;dataType[] arrayRefVar = {value0, value1, ..., valuek};&lt;/p&gt;&lt;p&gt;//foreach循环&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class &lt;span class=&quot;hljs-title&quot;&gt;TestArray {&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;static &lt;span class=&quot;hljs-keyword&quot;&gt;void &lt;span class=&quot;hljs-title&quot;&gt;main&lt;span class=&quot;hljs-params&quot;&gt;(String[] args) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;double[] myList = {&lt;span class=&quot;hljs-number&quot;&gt;1.9, &lt;span class=&quot;hljs-number&quot;&gt;2.9, &lt;span class=&quot;hljs-number&quot;&gt;3.4, &lt;span class=&quot;hljs-number&quot;&gt;3.5};       &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　&lt;strong&gt;Array类：&lt;/strong&gt;能方便地操作数组，它提供的所有方法都是静态的；（fill：给数组赋值，sort：对数组排序，equals：比较数组中元素值是否相等，binarySearch：对排序好的数组进行二分查找法查找数组元素）&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;七、异常处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;1、异常捕获：使用try和catch关键字可以捕获异常；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
{
   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 程序代码&lt;/span&gt;
}&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(ExceptionName e1)
{
   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Catch 块&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　2、throws/throw关键字：如果一个方法没有捕获一个检查性异常，那么该方法必须使用throws 关键字来声明。throws关键字放在方法签名的尾部；可以声明抛出多个异常，多个异常之间用逗号隔开。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
import java.io.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; className
{
   &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; withdraw(&lt;span&gt;double&lt;/span&gt;&lt;span&gt; amount) throws RemoteException,
                              InsufficientFundsException
   {
       &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Method implementation&lt;/span&gt;
&lt;span&gt;   }
   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Remainder of class definition&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　3、finally关键字：无论是否发生异常，finally代码块中的代码总会被执行；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;try&lt;/span&gt;&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 程序代码&lt;/span&gt;
 }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(异常类型1 异常的变量名1){
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 程序代码&lt;/span&gt;
 }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(异常类型2 异常的变量名2){
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 程序代码&lt;/span&gt;
 }&lt;span&gt;finally&lt;/span&gt;&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 程序代码&lt;/span&gt;
 }
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt; &lt;/h2&gt;
&lt;p&gt;　　　　&lt;em&gt;&lt;span&gt;最后&lt;/span&gt;，把上面的这些学懂，再来看java代码，已经不像开始时的那样陌生了，当然，还有一些知识点比较难，需要花更多的时间去学习研究，学得越多，越觉得java的知识体量很大，不过总算是入门了，再接再厉！&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 07:53:00 +0000</pubDate>
<dc:creator>三页黎明</dc:creator>
<og:description>tips：前端开发写惯了弱类型语言，再来学强类型语言，真的是被各种修饰符、类型声明给整的云里雾里，而且java语法和javascript语言差别还是很大的，所以做好笔记，把一些需要注意的地方记下来是非</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yang-shun/p/10366608.html</dc:identifier>
</item>
<item>
<title>36.QT-解决无边框界面拖动卡屏问题(附带源码) - NQian</title>
<link>http://www.cnblogs.com/lifexy/p/10370105.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lifexy/p/10370105.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;看到很多才学QT的人都会问为啥无边框拖动为啥会花屏？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;那是因为你每次拖动的过程中都一直在调用&lt;span&gt;&lt;strong&gt;move()函数&lt;/strong&gt;&lt;/span&gt;让QT重新绘制界面,&lt;span&gt;&lt;strong&gt;如果资源过大&lt;/strong&gt;&lt;/span&gt;,就会导致当前图形还未绘制完,便又重新改变坐标了&lt;span&gt;&lt;strong&gt;,从而导致花屏&lt;/strong&gt;&lt;/span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;2.如何解决&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;我们参考其它软件,比如&lt;span&gt;&lt;strong&gt;QQ,浏览器&lt;/strong&gt;&lt;/span&gt;等,可以看到我们如果在拖动它们的时候,会出现一个&lt;span&gt;&lt;strong&gt;虚线框&lt;/strong&gt;&lt;/span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;span&gt;如下图所示,可以看到在白色背景下,拖出的虚线框&lt;span&gt;是黑色的&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1182576/201902/1182576-20190213152102761-1787098234.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;而在黑色背景时,拖出的虚线框&lt;span&gt;是白色的&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1182576/201902/1182576-20190213152142121-1511078650.png&quot; alt=&quot;&quot; width=&quot;515&quot; height=&quot;367&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;显然这个虚线框会根据当前桌面的像素点而去取反(也就是255-currentRGB).&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;解决的过程有两种方法:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;1)&lt;/strong&gt;&lt;/span&gt; 调用win库来实现&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2)&lt;/strong&gt;&lt;/span&gt; 自己动手写一个&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;既然我们已经知道它的实现过程.那我们还是自己动手写一个,只需要写一个&lt;span&gt;&lt;strong&gt;虚线框类&lt;/strong&gt;&lt;/span&gt;即可&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.虚线框类代码&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DragShadow.h&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#ifndef DRAGSHADOW_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; DRAGSHADOW_H&lt;span&gt;
#include &lt;/span&gt;&amp;lt;QtGui&amp;gt;
&lt;span&gt;class&lt;/span&gt; DragShadow : &lt;span&gt;public&lt;/span&gt;&lt;span&gt; QWidget
{
　　Q_OBJECT
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
　　QImage m_image;
&lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt;:
　　&lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; getInvertColor(&lt;span&gt;int&lt;/span&gt; x, &lt;span&gt;int&lt;/span&gt; y, QColor &amp;amp;&lt;span&gt;color);
　　&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; paintEvent(QPaintEvent *&lt;span&gt;);
　　&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; showEvent( QShowEvent * &lt;span&gt;event&lt;/span&gt;&lt;span&gt; );
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
　　&lt;/span&gt;&lt;span&gt;explicit&lt;/span&gt; DragShadow(QWidget *parent = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
　　&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; setSizePos(&lt;span&gt;int&lt;/span&gt; x, &lt;span&gt;int&lt;/span&gt; y, &lt;span&gt;int&lt;/span&gt; w, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; h);
　　&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; setPos(&lt;span&gt;int&lt;/span&gt; x,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; y );
　　&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPos(QPoint pos );
signals:

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; slots:

};
&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; DRAGSHADOW_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DragShadow.cpp&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DragShadow.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
&lt;br/&gt;DragShadow::DragShadow(QWidget &lt;/span&gt;*&lt;span&gt;parent) :
QWidget(NULL)
{
　　setWindowFlags(Qt::FramelessWindowHint&lt;/span&gt;|&lt;span&gt;Qt::Tool);
　　setAttribute(Qt::WA_TranslucentBackground);
}&lt;br/&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; DragShadow::setSizePos(&lt;span&gt;int&lt;/span&gt; x, &lt;span&gt;int&lt;/span&gt; y, &lt;span&gt;int&lt;/span&gt; w, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; h)
{
　　&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(w%&lt;span&gt;2&lt;/span&gt;==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
　　　　w&lt;/span&gt;+=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
　　&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(h%&lt;span&gt;2&lt;/span&gt;==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
　　　　h&lt;/span&gt;+=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;setGeometry(x,y,w,h);
}&lt;br/&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; DragShadow::setPos(&lt;span&gt;int&lt;/span&gt; x,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; y )
{
　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;move(x,y);
　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;update();
}&lt;br/&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; DragShadow::setPos(QPoint pos )
{
　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;move(pos);
　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;update();
}&lt;br/&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; DragShadow::showEvent( QShowEvent * &lt;span&gt;event&lt;/span&gt;&lt;span&gt; )
{
　　m_image &lt;/span&gt;= QPixmap::grabWindow(QApplication::desktop()-&amp;gt;&lt;span&gt;winId()).toImage();
}&lt;br/&gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; DragShadow::paintEvent(QPaintEvent *&lt;span&gt;)
{
　　&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; LineCount=&lt;span&gt;4&lt;/span&gt;&lt;span&gt;;
　　QColor color;
　　QPainter painter(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
　　painter.setBrush(Qt::NoBrush);
　　QPen pen(Qt::SolidLine);
　　pen.setColor(Qt::black);
　　pen.setWidthF(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
　　painter.setPen(pen);
　　painter.drawPoint(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; current=&lt;span&gt;0&lt;/span&gt;;current&amp;lt;LineCount;current++&lt;span&gt;)
　　{
　　　　&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=current;i&amp;lt;(&lt;span&gt;this&lt;/span&gt;-&amp;gt;width()-current);i+=&lt;span&gt;2&lt;/span&gt;) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;
　　　　&lt;span&gt;{
　　　　　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;getInvertColor(&lt;span&gt;this&lt;/span&gt;-&amp;gt;x()+i,&lt;span&gt;this&lt;/span&gt;-&amp;gt;y()+&lt;span&gt;current,color);
　　　　　　pen.setColor(color);
　　　　　　painter.setPen(pen);
　　　　　　painter.drawPoint(i,current); 　　　　　　　　　　 &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;draw top&lt;/span&gt;
　　　　　　&lt;span&gt;this&lt;/span&gt;-&amp;gt;getInvertColor(i+&lt;span&gt;this&lt;/span&gt;-&amp;gt;x(),&lt;span&gt;this&lt;/span&gt;-&amp;gt;height()-current-&lt;span&gt;1&lt;/span&gt;+&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;y(),color);
　　　　　　pen.setColor(color);
　　　　　　painter.setPen(pen);
　　　　　　painter.drawPoint(i,&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;height()-current-&lt;span&gt;1&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;draw bottom&lt;/span&gt;
　　　　&lt;span&gt;}
　　　　&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=current;i&amp;lt;(&lt;span&gt;this&lt;/span&gt;-&amp;gt;height()-current);i+=&lt;span&gt;2&lt;/span&gt;) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;
　　　　&lt;span&gt;{
　　　　　　&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;getInvertColor(current+&lt;span&gt;this&lt;/span&gt;-&amp;gt;x(),i+&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;y(),color);
　　　　　　pen.setColor(color);
　　　　　　painter.setPen(pen);
　　　　　　painter.drawPoint(current,i); 　　　　　　　　　　&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;draw left&lt;/span&gt;
　　　　　　&lt;span&gt;this&lt;/span&gt;-&amp;gt;getInvertColor(&lt;span&gt;this&lt;/span&gt;-&amp;gt;width()-current-&lt;span&gt;1&lt;/span&gt;+&lt;span&gt;this&lt;/span&gt;-&amp;gt;x(),i+&lt;span&gt;this&lt;/span&gt;-&amp;gt;&lt;span&gt;y(),color);
　　　　　　pen.setColor(color);
　　　　　　painter.setPen(pen);
　　　　　　painter.drawPoint(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;-&amp;gt;width()-current-&lt;span&gt;1&lt;/span&gt;,i); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;draw right&lt;/span&gt;
&lt;span&gt;　　　　}
　　}
}&lt;br/&gt;&lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; DragShadow::getInvertColor(&lt;span&gt;int&lt;/span&gt; x, &lt;span&gt;int&lt;/span&gt; y, QColor &amp;amp;&lt;span&gt;color)
{
　　&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; ret=&lt;span&gt;m_image.valid(x,y);
　　&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(ret)
　　{
　　　　QRgb rgb &lt;/span&gt;=&lt;span&gt; m_image.pixel(x,y);
　　　　color.setRgb(rgb);
　　　　color.setRed(&lt;/span&gt;&lt;span&gt;255&lt;/span&gt;-&lt;span&gt;color.red());
　　　　color.setBlue(&lt;/span&gt;&lt;span&gt;255&lt;/span&gt;-&lt;span&gt;color.blue());
　　　　color.setGreen(&lt;/span&gt;&lt;span&gt;255&lt;/span&gt;-&lt;span&gt;color.green());
　　}
　　&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
　　{
　　　　color.setRed(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
　　　　color.setBlue(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
　　　　color.setGreen(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
　　}
　　&lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ret;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.测试UI界面如下图所示&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1182576/201902/1182576-20190213152531372-1724708826.png&quot; alt=&quot;&quot; width=&quot;512&quot; height=&quot;376&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.拖动时的效果图如下所示&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1182576/201902/1182576-20190213152551647-184889.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;6.针对WIN10系统的小伙伴补充&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;大家都知道WIN10拖动的话,实现的是&lt;span&gt;&lt;strong&gt;实线框&lt;/strong&gt;&lt;/span&gt;,如下图所示:&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1182576/201902/1182576-20190213152640170-1052992639.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果想要这种效果,就将上面代码的&lt;span&gt;&lt;strong&gt;paintEvent(QPaintEvent *)函数&lt;/strong&gt;&lt;/span&gt;的i+=2改为i++即可.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;修改后效果如下所示:&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1182576/201902/1182576-20190213153801331-901457317.png&quot; alt=&quot;&quot; width=&quot;501&quot; height=&quot;369&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(PS:在win7下用这个实线框感觉挺别扭的)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;上面的两个不同效果的demo源码还在上传中,等下提供下载地址哦.&lt;/span&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;如果觉得不错,点个赞呗~&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 13 Feb 2019 07:35:00 +0000</pubDate>
<dc:creator>NQian</dc:creator>
<og:description>1.简介 看到很多才学QT的人都会问为啥无边框拖动为啥会花屏？ 那是因为你每次拖动的过程中都一直在调用move()函数让QT重新绘制界面,如果资源过大,就会导致当前图形还未绘制完,便又重新改变坐标了,</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lifexy/p/10370105.html</dc:identifier>
</item>
<item>
<title>【react】使用 create-react-app 构建基于TypeScript的React前端架构----上 - 张泰峰</title>
<link>http://www.cnblogs.com/ztfjs/p/react_typescript_test.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ztfjs/p/react_typescript_test.html</guid>
<description>&lt;h2 id=&quot;w1&quot; class=&quot;wtitle&quot;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;一直在探寻，那优雅的美；一直在探寻，那精湛的技巧；一直在探寻，那简单又直白，优雅而美丽的代码。&lt;/p&gt;
&lt;p&gt;------ 但是在JavaScript的动态类型、有时尴尬的自动类型转换，以及 “0 == false” 是true的尴尬, 你知道 “[undefined] == 0“ 是什么返回结果吗？再然后&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; add (a, b) { 
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; a+&lt;span&gt;b 
}
add (&lt;/span&gt;&quot;1&quot;, 2&lt;span&gt;) // 12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个结果是返回是12。&lt;/p&gt;
&lt;p&gt;还记得某个深夜，当你望着万行代码流出千行热泪的时候吗？最后发现有一个if语句，条件为‘’ 判false了？ 或者发现忘记加parseInt导致的大坑？&lt;/p&gt;
&lt;p&gt;是时候亮出利器了。&lt;/p&gt;

&lt;h2 id=&quot;w1&quot; class=&quot;wtitle&quot;&gt;TypeScript的简单入门 &lt;/h2&gt;
&lt;p&gt;我们都知道JavaScript是动态类型，动态编译的网页脚本语言，“ 动态 ” 这个词语实现在一个纯粹的网页脚本语言身上来说，似乎并没有什么不妥。但现在，JavaScript要运行在node中，运行在服务端，甚至最初的网页脚本js都由webpack，gulp这类的自动化构建工具变成了一个具有工程化、大型化、交互复杂化、性能要求高的 ” 编程语言 “ 了。&lt;/p&gt;

&lt;p&gt;而这个时候，最初的动态类型，或者所谓的 ”object类型“，再或者双等号两边的尴尬，在构建这些 ” 大型软件系统 （大型屎山）“ 的时候，沉积的类型债务就真的是一座巨大的屎山了。&lt;/p&gt;

&lt;p&gt;TypeScript一定程度上解决了这个问题，它可以一股脑儿的将屎山上的一大坨清除，在各种中大型团队形形色色的开发者们中间获得一致的好评。&lt;/p&gt;

&lt;p&gt; --------------------------------------------------知识分割线----------------------------------------------------&lt;/p&gt;
&lt;p&gt;如果你希望能够一边看，一边敲，你可以先转到下面的&lt;strong&gt;React和TypeScript章节&lt;/strong&gt;，搭建一个基于create-react-app创建的typeScript的react架构，然后再回来看看&lt;strong&gt;这些示例，不多、很简单&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;TypeScript是JavaScript的超集，它是一门编译型语言，我个人认为，入门TypeScript从以下三个点入手，然后结合react的搭建、再到实际的项目应用，在应用中陆续接触更多的技巧，泛型、枚举、类型推论、命名空间等等。我们先看看最重要的三点。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;静态类型&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TypeScript可以实现静态的变量申明, 如下面的例子，注意在TypeScript中 string类型、 object类型的首字母也是小写。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
// 静态类型申明&lt;br/&gt;let isStatic: &lt;span&gt;boolean&lt;/span&gt; = &lt;span&gt;false&lt;/span&gt;;
&lt;/pre&gt;
&lt;pre&gt;
isStatic = 1; // error: Cannot convert 'number' to boolean
&lt;/pre&gt;
&lt;pre&gt;
let isString: string = 1;  // &lt;code&gt;Type '1' is not assignable to type 'string'.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型。如下面的例子&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
let a = 1&lt;span&gt;;
    a &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    alert(a); &lt;/span&gt;// error: Cannot convert 'boolean' to number
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;绝大多数情况类型推导就像上面那样的情况一样，a = 1 ，a就是number类型了。&lt;/p&gt;
&lt;p&gt;还有一些涉及更多的类型，入门可以暂时忽略。&lt;/p&gt;
&lt;p&gt;这里我们学习到的一点是：  &lt;strong&gt;TypeScript的变量类型是静态的，每一个变量都会有一个固定的类型。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;让我们再看看js中函数的定义：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; add (a, b) {
   &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; a +&lt;span&gt; b;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面这个函数实现了两数相加，在本文开篇我挂了这个代码上去，它的调用方式是这样的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
add (&quot;1&quot;, 2) &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;”1“ + 2 = 12 , 虽然这里的add函数看起来挺简单的，我们换个方式看看，就知道这个有多难受了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;add(testNumber(), &lt;/span&gt;2)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;谁能保证testNumber返回的一定是number ？&lt;/p&gt;

&lt;p&gt;TypeScript可以&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; add (a: number, b: number) : number {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; a +&lt;span&gt; b;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在TypeScript中可以通过类似变量申明那样的类型申明的方式，申明一个函数的入参，返回的具体类型格式，能够真正保证函数的输入输出的一致性。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
add(&quot;1&quot;, 2) &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Argument of type '&quot;1&quot;' is not assignable to parameter of type 'number' &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; testNumber () {
      let num &lt;/span&gt;= '1'&lt;span&gt;;
      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; num;
    }
    &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; add (a: number, b: number) : number {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; a +&lt;span&gt; b;
    }
    add(testNumber(), &lt;/span&gt;2); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Argument of type 'string' is not assignable to parameter of type 'number'.ts(2345)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在这些代码将直接报错，无法通过编译，这就是静态类型的强大之处。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;strong&gt;接口&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;接口是TypeScript的核心原则之一的实现，是对值所具有的&lt;em&gt;结构&lt;/em&gt;进行类型检查。&lt;/p&gt;
&lt;p&gt;这句话什么意思呢？说简单点，&lt;strong&gt;接口就是对象的属性，对象上的方法也可以做类型检查&lt;/strong&gt;，可以约束某个对象的值必须是预期的值。例如：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;interface IAddObj {
      a: number,
      b: number
}
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; add (addObj: IAddObj) : number {
      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; addObj.a +&lt;span&gt; addObj.b;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们定义add函数，希望传入一个addObj的对象值，然后对象上有a和b，这时候我想要规定这个对象必须有a和b，而且a和b是number类型的。&lt;/p&gt;
&lt;p&gt;这就是接口最简单，80%，最通用的用法：&lt;strong&gt;规定对象的属性&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;w1&quot; class=&quot;wtitle&quot;&gt;React&amp;amp;TypeScript的环境搭建&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;前提&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先你电脑上需要安装有nodejs、npm，怎么安装百度即可，其次你需要对react和webpack有一定的认知。这是前提。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第一步 工程创建&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、安装create-react-app&lt;/p&gt;
&lt;p&gt;安装create-react-app，打开命令行 输入命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
npm install -g create-react-app
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2、创建基于TypeScript的react环境&lt;/p&gt;
&lt;p&gt;打开命令行 输入 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
create-react-app apptest --scripts-version=react-scripts-ts
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3、为了能够自定义webpack打包配置，我们还要运行一个命令，进入项目目录/apptest运行    运行后提示输入y即可&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
 npm run eject
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4、在项目目录运行命令： npm run start 稍等片刻就可以看见react的欢迎界面啦&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/893115/201902/893115-20190212225612101-1196310562.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第二步 目录规整&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你想要直接获取规整后的源代码，在我的git可以下载到： &lt;a href=&quot;https://github.com/294678380/afr&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt;  下载完成在目录npm install 即可。&lt;/p&gt;

&lt;p&gt;创建完项目后，可以看见目前的目录结构还是比较混乱的，现在让我们来梳理一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/893115/201902/893115-20190212230244748-1109051104.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;主要规整 /src 主代码目录中的文件，我们依次新建几个文件夹&lt;/p&gt;
&lt;p&gt;assets 资源目录，存放css、image、字体文件等&lt;/p&gt;
&lt;p&gt;components   存放组件目录&lt;/p&gt;
&lt;p&gt;views 存放主视图目录&lt;/p&gt;
&lt;p&gt;utils 存放工具函数、工具类&lt;/p&gt;
&lt;p&gt;config  存放公共配置文件&lt;/p&gt;
&lt;p&gt;规整后的文件目录如下，我将示例代码分别分配到了其中&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/893115/201902/893115-20190212234317024-52321575.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是移动文件后，对应的资源引用目录的更改。&lt;/p&gt;
&lt;p&gt;然后需要修改根目录tslint.json为：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&quot;extends&quot;: [&quot;tslint:recommended&quot;, &quot;tslint-react&quot;, &quot;tslint-config-prettier&quot;&lt;span&gt;],
  &lt;/span&gt;&quot;linterOptions&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;exclude&quot;&lt;span&gt;: [
      &lt;/span&gt;&quot;config/**/*.js&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;node_modules/**/*.ts&quot;&lt;span&gt;,
      &lt;/span&gt;&quot;coverage/lcov-report/*.js&quot;&lt;span&gt;
    ]
  },
  &lt;/span&gt;&quot;rules&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;ordered-imports&quot;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
  },
  &lt;/span&gt;&quot;jsRules&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;ordered-imports&quot;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后重新运行 npm run start 就可以了，现在可以在App.vue里试一试TypeScript了&lt;/p&gt;
&lt;h2 id=&quot;w1&quot; class=&quot;wtitle&quot;&gt;小结&lt;/h2&gt;
&lt;p&gt;到这里，其实还远远没有完结，我们还需要引入其他的组件来开发一个真正的React项目，还需要制定一套规范去搭建一个React团队，拭目以待。&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 07:26:00 +0000</pubDate>
<dc:creator>张泰峰</dc:creator>
<og:description>写在前面 一直在探寻，那优雅的美；一直在探寻，那精湛的技巧；一直在探寻，那简单又直白，优雅而美丽的代码。 但是在JavaScript的动态类型、有时尴尬的自动类型转换，以及 “0 == false”</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ztfjs/p/react_typescript_test.html</dc:identifier>
</item>
<item>
<title>ASP.NET Core 打造一个简单的图书馆管理系统 (修正版)（一） 基本模型以及数据库的建立 - NanaseRuri</title>
<link>http://www.cnblogs.com/gokoururi/p/10369992.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gokoururi/p/10369992.html</guid>
<description>
&lt;p&gt;&lt;span&gt;&lt;strong&gt;前言：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;本系列文章主要为我之前所学知识的一次微小的实践，以我学校图书馆管理系统为雏形所作。&lt;/p&gt;
&lt;p&gt;本系列文章主要参考资料：&lt;/p&gt;
&lt;p&gt;微软文档：https://docs.microsoft.com/zh-cn/aspnet/core/getting-started/?view=aspnetcore-2.1&amp;amp;tabs=windows&lt;/p&gt;
&lt;p&gt;《Pro ASP.NET MVC 5》、《锋利的 jQuery》&lt;/p&gt;

&lt;p&gt;当此系列文章写完后会在一周内推出修正版。&lt;/p&gt;

&lt;p&gt;此系列皆使用 VS2017+C# 作为开发环境。如果有什么问题或者意见欢迎在留言区进行留言。 &lt;/p&gt;
&lt;p&gt;项目 github 地址：&lt;a href=&quot;https://github.com/NanaseRuri/LibraryDemo&quot; target=&quot;_blank&quot;&gt;https://github.com/NanaseRuri/LibraryDemo&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;本章内容：对图书馆系统组成的简要分析。以及对域模型以及相应数据库的建立。&lt;/p&gt;
&lt;p&gt;知识点：Code First、EF 基本使用方法、ASP.NET Core 使用 EF Core 的配置方法、EF 多对多关系的建立。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、对图书馆系统域模型的分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一个图书馆系统需要有管理员、 学生、书架以及书籍&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213143533553-1734275655.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;域模型，即用来存储数据的模型。&lt;/p&gt;
&lt;p&gt;在此域模型可以用以下结构创建：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213143502798-598989122.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt; 二、项目结构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后就可以开始建立该项目了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201811/1408470-20181127182503858-357470177.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、建立域模型&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;学位枚举：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt;&lt;span&gt; Degrees
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;本科生&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;        CollegeStudent,
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;研究生&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;        Postgraduate,
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;博士生&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; &lt;span&gt;        DoctorateDegree
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 图书借阅状态枚举：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt;&lt;span&gt; BookState
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 可借阅
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;正常&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        Normal,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 馆内阅览
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;馆内阅览&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        Readonly,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 已借出
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已借出&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        Borrowed,
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 被续借
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;被续借&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;        ReBorrowed,
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 被预约
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;被预约&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;        Appointed,
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;过期&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;        Expired
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;该项目准备使用一个数据库存储学生账户信息，另一个则用于存储学生借书信息：&lt;/p&gt;
&lt;p&gt;学生账户信息：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Student : IdentityUser
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 学号
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        [ProtectedPersonalData]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         [RegularExpression(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[UIA]\\d{9}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; UserName { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;手机号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         [StringLength(&lt;span&gt;14&lt;/span&gt;, MinimumLength = &lt;span&gt;11&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; PhoneNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;姓名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学历&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; Degrees Degree { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;最大借书数目&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; MaxBooksNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;书籍信息：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Book
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {                                
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 二维码
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        [Key]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;二维码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         [Required(ErrorMessage = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;未填写二维码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; BarCode { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ISBN { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 书名
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 取书号
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;取书号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; FetchBookNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 所在书架
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; Bookshelf Bookshelf { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书架号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; BookshelfId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 借出时间
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;借出时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? BorrowTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 到期时间
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;到期时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? MatureTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 预约最晚借书日期
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;预约取书时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? AppointedLatestTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; 
&lt;span&gt;51&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 借阅状态
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书籍状态&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; BookState State { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; 
&lt;span&gt;57&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 持有者，指定外键
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;60&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; StudentInfo Keeper { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;持有者学号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; KeeperId{ &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; 
&lt;span&gt;64&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;位置&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Location { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; 
&lt;span&gt;67&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;分类&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Sort { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; 
&lt;span&gt;70&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;AppointmentOrLending&amp;gt; Appointments { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;书架信息：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Bookshelf
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 书架ID
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        [Key]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;不自动增长&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        [DatabaseGenerated(DatabaseGeneratedOption.None)] 
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; BookshelfId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 书架的书籍类别
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Sort { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }               
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 最小取书号
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; MinFetchNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; MaxFetchNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 书架位置
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Location { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 全部藏书
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;Book&amp;gt; Books { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;由于一个学生可以借阅多本书籍，一本书籍可被多人预约，因此书籍和学生具有多对多的关系，在此引入中间类：&lt;/p&gt;
&lt;p&gt;其中的 AppointingDateTime 用来区分中间类包含的书籍是借阅书籍还是预约书籍：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; AppointmentOrLending
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; Book Book { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; BookId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; StudentInfo Student { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; StudentId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? AppointingDateTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;学生借书信息：&lt;/p&gt;
&lt;p&gt;在 EF 中多对多关系实际上是两个多对一关系。此处 ICollection 的属性成为导航属性，用来提示 EF  StudentInfo 和 AppointmentOrLending 之间存在着多对一的关系。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudentInfo
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        [Key]
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; UserName { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 学位，用来限制借书数目
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; Degrees Degree { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 最大借书数目
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;        [Required]
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; MaxBooksNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 已借图书
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;AppointmentOrLending&amp;gt; KeepingBooks { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; AppointingBookBarCode { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;         [StringLength(&lt;span&gt;14&lt;/span&gt;, MinimumLength = &lt;span&gt;11&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; PhoneNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 罚款
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;decimal&lt;/span&gt; Fine { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }               
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;外借/阅览书籍信息：&lt;/p&gt;
&lt;p&gt;在约定中，若不指定主键，则 EF 会使用 (类名)+ID 的方式指定或创建主键，在此使用 [Key] 指定主键，使用 [Required] 指定字段为必须，这种可以为属性添加在数据库中的约束或者在视图中的约束的修饰称为 DataAnnotations 。&lt;/p&gt;
&lt;p&gt;此处 ICollection 的属性成为导航属性，用来提示 EF  Book 和 AppointmentOrLending 之间存在着多对一的关系。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Book
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {                                
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 二维码
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        [Key]
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;二维码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         [Required(ErrorMessage = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;未填写二维码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; BarCode { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ISBN { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 书名
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 取书号
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;取书号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; FetchBookNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 所在书架
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; Bookshelf Bookshelf { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书架号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; BookshelfId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 借出时间
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;借出时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? BorrowTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 到期时间
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;到期时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? MatureTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 预约最晚借书日期
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;预约取书时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DateTime? AppointedLatestTime { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; 
&lt;span&gt;51&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 借阅状态
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书籍状态&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; BookState State { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; 
&lt;span&gt;57&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 持有者，指定外键
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;60&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; StudentInfo Keeper { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;持有者学号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; KeeperId{ &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; 
&lt;span&gt;64&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;位置&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Location { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; 
&lt;span&gt;67&lt;/span&gt;         [Display(Name = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;分类&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Sort { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; 
&lt;span&gt;70&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;AppointmentOrLending&amp;gt; Appointments { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、创建 DbContext &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;学生账户信息数据库：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; StudentIdentityDbContext:IdentityDbContext&amp;lt;Student&amp;gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; StudentIdentityDbContext(DbContextOptions&amp;lt;StudentIdentityDbContext&amp;gt; options) : &lt;span&gt;base&lt;/span&gt;&lt;span&gt;(options)
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;借阅信息数据库：&lt;/p&gt;
&lt;p&gt;为了使 StudentInfo 类的 UserName 和 Book 的 BarCode 共同作为 AppointmentOrLending 中间类的主键，需覆写 OnModelCreating 方法：&lt;/p&gt;
&lt;p&gt;至此 StudentInfo 和 Book 的多对多关系正式确立。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LendingInfoDbContext:DbContext
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; LendingInfoDbContext(DbContextOptions&amp;lt;LendingInfoDbContext&amp;gt; options) : &lt;span&gt;base&lt;/span&gt;&lt;span&gt;(options)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;Book&amp;gt; Books { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;BookDetails&amp;gt; BooksDetail { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;Bookshelf&amp;gt; Bookshelves { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;RecommendedBook&amp;gt; RecommendedBooks { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;StudentInfo&amp;gt; Students { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;AppointmentOrLending&amp;gt; AppointmentOrLendings { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnModelCreating(ModelBuilder modelBuilder)
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;&lt;span&gt;.OnModelCreating(modelBuilder);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             modelBuilder.Entity&amp;lt;AppointmentOrLending&amp;gt;&lt;span&gt;()
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 .HasKey(c =&amp;gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; { c.BookId, c.StudentId });
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;于是 Book 和 StudentInfo 之间的多对多关系确立完成。&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;五、根据约定配置数据库，进行依赖注入&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在  appsettings.json 中添加数据库连接字符串。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;   &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ConnectionStrings&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LendingInfoDbContext&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Server=(localdb)\\mssqllocaldb;Database=LendingInfoDbContext;Trusted_Connection=True;MultipleActiveResultSets=true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StudentIdentityDbContext&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Server=(localdb)\\mssqllocaldb;Database=StudentIdentityDbContext;Trusted_Connection=True;MultipleActiveResultSets=true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;  },
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;   &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Logging&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LogLevel&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;       &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Default&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Warning&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;  },
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;   &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AllowedHosts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在 Startup.cs 中的 ConfigureServices 方法中对数据库进行配置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;             services.AddDbContext&amp;lt;LendingInfoDbContext&amp;gt;(options =&amp;gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;                 options.UseSqlServer(Configuration.GetConnectionString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LendingInfoDbContext&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;             services.AddDbContext&amp;lt;StudentIdentityDbContext&amp;gt;(options =&amp;gt;
&lt;span&gt;6&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;                 options.UseSqlServer(Configuration.GetConnectionString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StudentIdentityDbContext&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;             });
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;六、数据库的迁移、创建及更新&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后在 pm控制台 中添加迁移：&lt;/p&gt;
&lt;p&gt;添加迁移的语法为 add-migration &amp;lt;迁移类名&amp;gt; -c &amp;lt;具体 DbContext 名&amp;gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;      cd LibraryDemo
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;       add-migration LendingInfo -&lt;span&gt;c LibraryDemo.Data.LendingInfoDbContext
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;       add-migration StudentIdentity -c LibraryDemo.Data.StudentIdentityDbContext
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213145933801-1356565427.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213145944501-924776109.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213145951826-948407490.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;运行 add-migration 命令会创建 Migrations 文件夹以及相应的迁移快照：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213150527603-680680399.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;显示的类名为 &amp;lt;创建时间&amp;gt;_&amp;lt;迁移类名&amp;gt;，而实际的类名为 add-migration 后的第一个参数名。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213150859961-1212284241.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在创建迁移时，EF 会自动为我们创建或更新对应 DbContext 的快照，即其中后缀为 Snapshot 的类。其中会包含当前对应的 DbCOntext 的结构，并会以代码保留相应的约束，如 LendingInfoDbContextModelSnapshot 类：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213151146314-37601777.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201811/1408470-20181127193707118-525575748.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;生成的迁移类 LendingInfo 和 Account 类则有两个方法—— 用于更新数据库的 Up 方法和用以回溯数据库的 Down 方法，可以在这两个方法或者在快照的 BuildModel 方法中使用 Fluent API 对数据库做进一步的改动，并且通过对 Fluent API 的使用可以使我们的类少用 DataAnnotations 以保证类的整洁。&lt;/p&gt;
&lt;p&gt;需要注意的是，生成的迁移类中的 Up 和 Down 方法是根据生成迁移之前的数据库快照生成的，如我在之后为 LendingInfoDbContext 添加 DbSet&amp;lt;RecommendedBook&amp;gt; 时，在以上的基础上运行了 add-migration AddRecommendedBook -c LibraryDemo.Data.LendingInfoDbContext ，生成的 Up 方法只包括添加表 RecommendedBooks 的行为，而 Down 方法只包括删除表 RecommendedBooks 的行为。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213151210429-261981245.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;随后在 pm控制台 执行以下创建或更新数据库：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;      update-database -&lt;span&gt;c LibraryDemo.Data.LendingInfoDbContext
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;      update-database -c LibraryDemo.Data.StudentIdentityDbContext
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后在 SQL server对象管理器 中可以看见创建的数据库以及对应的表：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190213151358604-632968738.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;至此域模型创建工作完成。&lt;/p&gt;




&lt;p&gt;补充：&lt;/p&gt;
&lt;p&gt;使用命令行对数据库进行迁移及更新有两种方式：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  dotnet ef migrations migrationName -&lt;span&gt;c TargetContext
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;  dotnet ef database update -c TargetContext
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  add-migration migrationName -&lt;span&gt;c TargetContext
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;  update-Database -c TargetContext
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;windows 命令行命令不区分大小写，其中 migrationName 为迁移类名，最好提供有意义的命名；而 TargetContext 为目标 DbContext 类名，需要使用带有命名空间的完全命名。&lt;/p&gt;
&lt;p&gt;如果需要删除数据库则使用 drop 方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
drop-database -c TargetContext
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;而为 update 方法指定迁移类则可以回溯数据库。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Update-Database LendingInfoDbContext -TargetMigration:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;20181127081115_LendingInfo.cs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 13 Feb 2019 07:17:00 +0000</pubDate>
<dc:creator>NanaseRuri</dc:creator>
<og:description>前言： 本系列文章主要为我之前所学知识的一次微小的实践，以我学校图书馆管理系统为雏形所作。 本系列文章主要参考资料： 微软文档：https://docs.microsoft.com/zh-cn/asp</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gokoururi/p/10369992.html</dc:identifier>
</item>
<item>
<title>JAVA WEB快速入门之从编写一个基于SpringBoot+Mybatis快速创建的REST API项目了解SpringBoot、SpringMVC REST API、Mybatis等相关知识 - 梦在旅途</title>
<link>http://www.cnblogs.com/zuowj/p/10335080.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zuowj/p/10335080.html</guid>
<description>&lt;p&gt;&lt;strong&gt;JAVA WEB快速入门系列之前的相关文章如下：（文章全部本人【梦在旅途原创】，文中内容可能部份图片、代码参照网上资源）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一篇：&lt;a href=&quot;https://www.cnblogs.com/zuowj/p/9930553.html&quot; target=&quot;_blank&quot;&gt;JAVA WEB快速入门之环境搭建&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二篇：&lt;a href=&quot;https://www.cnblogs.com/zuowj/p/9934463.html&quot; target=&quot;_blank&quot;&gt;JAVA WEB快速入门之从编写一个JSP WEB网站了解JSP WEB网站的基本结构、调试、部署&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三篇：&lt;a href=&quot;https://www.cnblogs.com/zuowj/p/10020536.html&quot; target=&quot;_blank&quot;&gt;JAVA WEB快速入门之通过一个简单的Spring项目了解Spring的核心（AOP、IOC）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第四篇：&lt;a href=&quot;https://www.cnblogs.com/zuowj/p/10095753.html&quot; target=&quot;_blank&quot;&gt;JAVA WEB快速入门之从编写一个基于SpringMVC框架的网站了解Maven、SpringMVC、SpringJDBC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;今天是第五篇，也是该系列文章的最后一篇，接上篇《&lt;a href=&quot;https://www.cnblogs.com/zuowj/p/10095753.html&quot; target=&quot;_blank&quot;&gt;JAVA WEB快速入门之从编写一个基于SpringMVC框架的网站了解Maven、SpringMVC、SpringJDBC&lt;/a&gt;》，通过上篇文章的详细介绍，知道如何使用maven来快速构建spring MVC应用，也能够使用spring MVC+springJDBC实现网站开发，而本文所涉及的知识则是在这基础之上继续提升，核心是讲解如何使用spring boot来更快速的构建spring MVC，并通过mybatis及代码生成相关DAO，同时利用VUE前端框架开发前后端分离的网站，用户体验更好，废话不多说，直接进入本文主题。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(提示：本文内容有点长，涉及的知识点也比较多，若是新手建议耐心看完！)&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;post_body_title&quot;&gt;&lt;strong&gt;一、创建Spring Boot+SpringMVC空项目&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1.1通过https://start.spring.io/官网快速生成一个Spring Boot+SpringMVC空项目&lt;/strong&gt;，如下图示：&lt;/p&gt;
&lt;p&gt;（当然也可以通过Eclipse或IDEA的Spring Boot插件来创建，可参见：&lt;a href=&quot;https://www.cnblogs.com/shaoniandream/p/9679942.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/shaoniandream/p/9679942.html&lt;/a&gt;，&lt;a href=&quot;https://blog.csdn.net/qq_32572497/article/details/62037873&quot; target=&quot;_blank&quot;&gt;https://blog.csdn.net/qq_32572497/article/details/62037873&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212162417023-421391321.png&quot; alt=&quot;&quot; width=&quot;774&quot; height=&quot;554&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　设置后点击页面的生成项目按钮，即可生成并下载spring boot项目代码压缩包，然后使用IDE导入存在的maven project即可。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1.2调整项目，解决一些踩坑点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　1.2.1.调整spring boot App启动类（如：SpringbootdemoApplication）到根包目录或在启动类上显式添加@ComponentScan注解，并指定包路径，如下代码所示，cn.zuowenjun.boot是根包目录，其余都是cn.zuowenjun.boot的子包&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package cn.zuowenjun.boot;

import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.transaction.annotation.EnableTransactionManagement;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;import org.springframework.context.annotation.ComponentScan;&lt;/span&gt;
&lt;span&gt;
@SpringBootApplication &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指定为Spring Boot启动入口，内含多个spring所需要的注解&lt;/span&gt;
@MapperScan(basePackages=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;cn.zuowenjun.boot.mapper&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置Mybaits扫描的mapper包路径
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;@ComponentScan(basePackages= {&quot;cn.zuowenjun.controller&quot;}) &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果不在根包目录，则需指定spring管理的相关包路径&lt;/span&gt;
@EnableTransactionManagement &lt;span&gt;//&lt;/span&gt;&lt;span&gt;启动事务管理&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; SpringbootdemoApplication {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        SpringApplication.run(SpringbootdemoApplication.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;, args);
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　1.2.2.解决POM文件报：&lt;/p&gt;
&lt;p&gt;Description Resource Path Location Type&lt;br/&gt;Execution default-resources of goal org.apache.maven.plugins:maven-resources-plugin:3.1.0:resources failed: Unable to load the mojo 'resources' (or one of its required components) from the plugin 'org.apache.maven.plugins:maven-resources-plugin:3.1.0'&lt;/p&gt;
&lt;p&gt;直接在POM中添加如下resources依赖：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;maven-resources-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　1.2.3.设置热编译启动模式，以便可以随时更改代码后即时生效&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-devtools&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;optional&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;optional&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;fork&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;fork&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置后项目的视图就有如下显示效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212165125548-198171412.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1.3演示请求REST API分别返回JSON、XML&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　创建好spring boot空项目环境后，我们就可以开始编写相关代码了，在此仅贴出实现了REST API分别响应返回JSON、XML格式的Controller，实现步骤如下：&lt;/p&gt;
&lt;p&gt; 　　1.3.1在cn.zuowenjun.boot.controller包中创建DemoController，并编写hellojson、helloxml Action方法，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;

@RestController
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; DemoController {

    @RequestMapping(value&lt;/span&gt;=&quot;/hello/json&quot;,produces=&quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; HelloDto hellojson()
    {
        HelloDto dto&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HelloDto();
        dto.setMessage(&lt;/span&gt;&quot;hello,zuowenjun.cn,hello java spring boot!&quot;&lt;span&gt;);
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; dto;
    }
    
    @RequestMapping(value&lt;/span&gt;=&quot;/hello/xml&quot;,produces=&quot;text/xml;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; HelloDto helloxml()
    {
        HelloDto dto&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HelloDto();
        dto.setMessage(&lt;/span&gt;&quot;hello,zuowenjun.cn,hello java spring boot!&quot;&lt;span&gt;);
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; dto;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上代码简要说明：@RestController相当于是：@Controller、@ResponseBody，这个可以查看@RestController注解类代码就知道；@RequestMapping指定请求映射，其中produces设置响应内容格式（可理解为服务端是生产者，而用户在浏览器端【客户端】是消费端），还有consumes属性，这个是指可接收请求的内容格式（可理解为用户在浏览器端发送请求是消息的生产者，而服务端接收并处理该请求为消息的消费者），当然还有其它一些属性，大家可以参见我上篇文章或网络其它大神的相关文章加以了解。&lt;/p&gt;
&lt;p&gt;另外需要注意，默认spring MVC只返回JSON格式，若需返回XML格式，还需添加XML JAR包依赖，如下：（可以看到version这里我指定了版本号区间，表示2.5.0及以上版本都可以，有些依赖spring-boot-starter-parent中都有提前配置依赖管理，我们只需要指定groupId、artifactId即可，version就会使用spring boot中的默认版本，当然也可以强制指定版本）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 如果项目中需要REST API响应（返回）XML格式的报文体则应添加该依赖 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.fasterxml.jackson.jaxrs&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jackson-jaxrs-xml-provider&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;[2.5.0,)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;$NO-MVN-MAN-VER$ &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于项目中同时添加JSON及XML的JAR包，按照spring MVC的默认响应处理流程是：如果未指定produces，则当请求的header中指定了accept类型，则自动格式化并返回该accept所需的类型，如果未指定accept类型，则优先是响应XML，当找不到XML依赖包时才会响应JSON，故如果项目中同时有JSON及XML，那么最好显式指定produces或者请求头上指明accept类型 这一点与ASP.NET WEB API原理相同，因为都是符合REST架构风格的。&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212173528512-226355166.png&quot; alt=&quot;&quot;/&gt;     &lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212173558788-695351371.png&quot; alt=&quot;&quot; width=&quot;373&quot; height=&quot;141&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;post_body_title&quot;&gt;&lt;strong&gt;二、使用Mybatis框架完成Domain层、DAO层(这里是Mapper层)&lt;/strong&gt; ---提示：由于篇幅有限，只贴出重点能体现不同知识点的代码，其余可以到GITHUB上查看下载源码进行详细了解&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.0：首先在application.properties配置mybatis的相关选项&lt;/strong&gt;，如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;mybatis.type-aliases-package=cn.zuowenjun.boot.domain #包类型别名，这样在XML中就可以简写成类名
mybatis.config-location=classpath:mybatis/mybatis-config.xml #指定mybatis的配置文件路径
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml #指定mapper XML的存放路径

#这里是使用SQL SERVER，如果是其它DB则使用其它驱动
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://DBIP:Port;DatabaseName=testDB
spring.datasource.username=dbuser
spring.datasource.password=dbpassword&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　其次添加mybatis-spring-boot-starter maven依赖,它会自动添加相关的mybatis依赖包，配置如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 添加 mybatis-spring-boot依赖，直接可以使用mybatis环境操作DB&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis.spring.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-spring-boot-starter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;2.1全手写JAVA代码实现Mybatis的CRUD；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　2.1.1.在cn.zuowenjun.boot.domain包【实体模型或称领域模型层，这里算不上真正的领域模型，最多算是贫血的领域模型】中定义数据实体模型（Goods:商品信息），代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ec4ab6bb-2974-4e27-8f94-7bdf8f92daa9')&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_ec4ab6bb-2974-4e27-8f94-7bdf8f92daa9&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ec4ab6bb-2974-4e27-8f94-7bdf8f92daa9&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ec4ab6bb-2974-4e27-8f94-7bdf8f92daa9',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ec4ab6bb-2974-4e27-8f94-7bdf8f92daa9&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.math.BigDecimal;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Goods {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String title;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String picture;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BigDecimal price;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String introduction;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryId;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String lastEditBy;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date lastEditTime;
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Goods() {
        
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Goods(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id,String title,String picture,
            BigDecimal price,String introduction,&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryId,String lastEditBy,Date lastEditTime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setId(id);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setTitle(title);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setPicture(picture);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setPrice(price);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setIntroduction(introduction);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setCategoryId(categoryId);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setLastEditBy(lastEditBy);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setLastEditTime(lastEditTime);
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setId(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getTitle() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; title;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setTitle(String title) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.title =&lt;span&gt; title;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPicture() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; picture;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPicture(String picture) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.picture =&lt;span&gt; picture;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; BigDecimal getPrice() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; price;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPrice(BigDecimal price) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.price =&lt;span&gt; price;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getIntroduction() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; introduction;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setIntroduction(String introduction) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.introduction =&lt;span&gt; introduction;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getCategoryId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; categoryId;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setCategoryId(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryId) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.categoryId =&lt;span&gt; categoryId;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getLastEditBy() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; lastEditBy;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setLastEditBy(String lastEditBy) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.lastEditBy =&lt;span&gt; lastEditBy;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getLastEditTime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; lastEditTime;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setLastEditTime(Date lastEditTime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.lastEditTime =&lt;span&gt; lastEditTime;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　2.1.2.在cn.zuowenjun.boot.mapper包【数据映射处理层或称DAO层】中定义数据映射处理接口及添加相应的SQL注解，以实现对数据进行CRUD，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; java.util.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; org.apache.ibatis.annotations.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; GoodsMapper {
    
    @Select(&lt;/span&gt;&quot;select * from TA_TestGoods order by id offset (${pageNo}-1)*${pageSize} rows fetch next ${pageSize} rows only&quot;&lt;span&gt;)
    List&lt;/span&gt;&amp;lt;Goods&amp;gt; getListByPage(&lt;span&gt;int&lt;/span&gt; pageSize,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; pageNo);
    
    @Select(&lt;/span&gt;&quot;select * from TA_TestGoods where categoryId=#{categoryId} order by id&quot;&lt;span&gt;)
    List&lt;/span&gt;&amp;lt;Goods&amp;gt; getList(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryId);
    
    @Select(&lt;/span&gt;&quot;&amp;lt;script&amp;gt;select * from TA_TestGoods where id in &quot; 
            +&quot;&amp;lt;foreach item='item' index='index' collection='ids' open='(' separator=',' close=')'&amp;gt;#{item}&amp;lt;/foreach&amp;gt;&quot;
            +&quot;order by id&amp;lt;/script&amp;gt;&quot;&lt;span&gt;)
    List&lt;/span&gt;&amp;lt;Goods&amp;gt; getListByMultIds(@Param(&quot;ids&quot;)&lt;span&gt;int&lt;/span&gt;&lt;span&gt;...ids);
    
    @Select(&lt;/span&gt;&quot;select * from TA_TestGoods where id=#{id}&quot;&lt;span&gt;)
    Goods get(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    

    @Insert(value&lt;/span&gt;=&quot;insert into TA_TestGoods(title, picture, price, introduction, categoryId, &quot;
            + &quot;lastEditBy, lastEditTime) values(#{title},#{picture},#{price},#{introduction},#{categoryId},#{lastEditBy},getdate())&quot;&lt;span&gt;)
    @Options(useGeneratedKeys&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;,keyProperty=&quot;id&quot;,keyColumn=&quot;id&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; insert(Goods goods);
    
    @Delete(value&lt;/span&gt;=&quot;delete from TA_TestGoods where id=#{id}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; delete(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    
    @Update(&lt;/span&gt;&quot;update TA_TestGoods set title=#{title},picture=#{picture},price=#{price},introduction=#{introduction},&quot; + 
            &quot;categoryId=#{categoryId},lastEditBy=#{lastEditBy},lastEditTime=getdate()  &quot; + 
            &quot;where id=#{id}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; update(Goods goods);
    
    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 如上代码重点说明：&lt;/p&gt;
&lt;p&gt;a.增删改查，对应的注解是：insert、delete、update、select；&lt;/p&gt;
&lt;p&gt;b.SQL注解中的参数占位符有两种，一种是：#{xxx}，最后会生成?的参数化执行，另一种是：${xxx} 则最后会直接替换成参数的值，即拼SQL（除非信任参数或一些时间、数字类型，否则不建议这种，存在SQL注入风险）；&lt;/p&gt;
&lt;p&gt;c.insert时如果有自增ID，则可以通过添加Options注解，并指定useGeneratedKeys=true,keyProperty=&quot;数据实体类的属性字段名&quot;,keyColumn=&quot;表自增ID的字段名&quot;，这样当insert成功后会自动回填到数据实体类的自增ID对应的属性上；&lt;/p&gt;
&lt;p&gt;d.如果想要生成in子句查询，则如上代码getListByMultIds方法上的select注解中使用&amp;lt;script&amp;gt;xxx&amp;lt;foreach&amp;gt;xx&amp;lt;/foreach&amp;gt;xx&amp;lt;/script&amp;gt;格式实现，如果想用实现复杂的一对一，一对多，多对多等复杂的查询，则需要添加results注解并指定相应的关联关系，同时select SQL语句也应关联查询，可参见：&lt;a href=&quot;https://blog.csdn.net/desert568/article/details/79079151&quot; target=&quot;_blank&quot;&gt;https://blog.csdn.net/desert568/article/details/79079151&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上2步即完成一个mapper操作类；&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.2全手写AVA代码+Mapper XML实现Mybatis的CRUD；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　2.2.1.仍然是在cn.zuowenjun.boot.domain包中定义一个数据实体模型类（ShoppingCart：购物车信息），代码如下：【注意这里有一个关联商品信息的属性：inGoods】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('050f398f-6b1a-44cd-adcc-6bf0bbf53fc3')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_050f398f-6b1a-44cd-adcc-6bf0bbf53fc3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_050f398f-6b1a-44cd-adcc-6bf0bbf53fc3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('050f398f-6b1a-44cd-adcc-6bf0bbf53fc3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_050f398f-6b1a-44cd-adcc-6bf0bbf53fc3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShoppingCart {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String shopper;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; goodsId;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; qty;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date addedTime;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Goods inGoods;
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ShoppingCart() {
        
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ShoppingCart(&lt;span&gt;int&lt;/span&gt; id,String shopper,&lt;span&gt;int&lt;/span&gt; goodsId,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; qty,Date addedTime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id=&lt;span&gt;id;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.shopper=&lt;span&gt;shopper;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.goodsId=&lt;span&gt;goodsId;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.qty=&lt;span&gt;qty;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addedTime=&lt;span&gt;addedTime;
    }
    
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setId(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getShopper() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shopper;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setShopper(String shopper) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.shopper =&lt;span&gt; shopper;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getGoodsId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsId;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setGoodsId(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; goodsId) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.goodsId =&lt;span&gt; goodsId;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getQty() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; qty;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setQty(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; qty) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.qty =&lt;span&gt; qty;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getAddedTime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; addedTime;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAddedTime(Date addedTime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addedTime =&lt;span&gt; addedTime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Goods getInGoods() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; inGoods;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setInGoods(Goods inGoods) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.inGoods =&lt;span&gt; inGoods;
    }

    

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　2.2.2.仍然是在cn.zuowenjun.boot.mapper包中定义数据操作接口（interface），注意这里只是定义接口，并不包含SQL注解部份，因为这部份将在Mapper的XML代码中进行配置实现，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Param;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ShoppingCartMapper {
    
    List&lt;/span&gt;&amp;lt;ShoppingCart&amp;gt;&lt;span&gt; getList(String shopper);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; insert(ShoppingCart shoppingCart);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; update(ShoppingCart shoppingCart);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteItem(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; delete(String shopper);
    
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; getBuyCount(String shopper);
    
    ShoppingCart get(@Param(&lt;/span&gt;&quot;shopper&quot;) String shopper,@Param(&quot;goodsId&quot;) &lt;span&gt;int&lt;/span&gt;&lt;span&gt; goodsId); 
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上代码有一个重点说明：get方法有两个参数（多个参数也类似），为了mybatis能够自动映射到这些参数，必需为每个参数添加Param注解，并指定参数名，这个参数名是与对应的Mapper XML中的SQL语句中定义的参数名相同。&lt;/p&gt;
&lt;p&gt;　　2.2.3.在mybatis.mapper-locations设置的mapper xml存放的路径中创建XML文件，并手动编写映射的SQL语句，如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.mapper.ShoppingCartMapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;resultMap &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;shoppingCartMap&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;ShoppingCart&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;shopper&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;shopper&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;NVARCHAR&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;goodsId&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;goodsId&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;qty&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;qty&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;addedTime&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;addedTime&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;DATE&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; referseee https://www.cnblogs.com/ysocean/p/7237499.html &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;association &lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;=&quot;inGoods&quot;&lt;/span&gt;&lt;span&gt; javaType&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.domain.Goods&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; jdbcType&lt;/span&gt;&lt;span&gt;=&quot;INTEGER&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;title&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;title&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;picture&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;picture&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;price&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;price&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;introduction&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;introduction&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;categoryId&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;categoryId&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;lastEditBy&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;lastEditBy&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;lastEditTime&quot;&lt;/span&gt;&lt;span&gt; property&lt;/span&gt;&lt;span&gt;=&quot;lastEditTime&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;association&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;resultMap&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 如果返回的结果与某个实体类完全相同，其实完全不需要上面的resultMap，而是直接使用resultType=类名，
        如：resultType=cn.zuowenjun.boot.domain.ShoppingCart(简写别名：ShoppingCart),此处是示例用法，故采取指定映射 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;getList&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;string&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;shoppingCartMap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        select * from TA_TestShoppingCart a inner join TA_TestGoods b  on a.goodsId=b.id  
        where shopper=#{shopper} order by addedTime
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;getBuyCount&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;string&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;int&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        select count(1) from (select goodsId from TA_TestShoppingCart where shopper=#{shopper} 
        group by goodsId) as t
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;get&quot;&lt;/span&gt;&lt;span&gt;  resultMap&lt;/span&gt;&lt;span&gt;=&quot;shoppingCartMap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
         select * from TA_TestShoppingCart a inner join TA_TestGoods b  on a.goodsId=b.id  
         where shopper=#{shopper} and goodsId=#{goodsId}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;insert&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;ShoppingCart&quot;&lt;/span&gt;&lt;span&gt; 
        useGeneratedKeys&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; keyProperty&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; keyColumn&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        insert into TA_TestShoppingCart(shopper, goodsId, qty, addedTime) 
        values(#{shopper},#{goodsId},#{qty},getdate())
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;update&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;ShoppingCart&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        update TA_TestShoppingCart set shopper=#{shopper},goodsId=#{goodsId},qty=#{qty},addedTime=getdate() 
        where id=#{id}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteItem&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;int&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        delete from TA_TestShoppingCart where id=#{id}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;delete&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;string&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        delete from TA_TestShoppingCart where shopper=#{shopper}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上XML重点说明：&lt;/p&gt;
&lt;p&gt;a.凡是使用到类型的地方，可以在mybatis-config.xml中提前配置类型别名，以简化配置，当然mybatis已默认设置了一些别名以减少大家配置的工作量，如：string，对应的类型是String等，详见：&lt;a href=&quot;http://www.mybatis.org/mybatis-3/zh/configuration.html#typeAliases&quot; target=&quot;_blank&quot;&gt;http://www.mybatis.org/mybatis-3/zh/configuration.html#typeAliases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;b.由于这个ShoppingCart有关联属性：inGoods，故在查询时都会关联查询goods表并通过在resultMap中通过association 元素来指定关联关系，更多复杂的XML配置详见：&lt;a href=&quot;http://www.mybatis.org/mybatis-3/zh/sqlmap-xml.html&quot; target=&quot;_blank&quot;&gt;http://www.mybatis.org/mybatis-3/zh/sqlmap-xml.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上3步即完成一个mapper操作类，相比直接使用mapper接口+SQL注解多了一个步骤，但这样的好处是由于没有写死在代码中，可以很容易的更改mapper的相关SQL语句，减少代码改动量。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.3使用Mybatis Generator的Maven插件自动生成Mybatis的CRUD；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　通过上面的介绍，我们知道有2种方法来实现一个mapper数据操作类（dao），显然第2种更能适应更改的情况，但由于手写mapper xml文件非常的麻烦，故可以通过&lt;strong&gt;Mybatis Generator组件，自动生成相关的代码及xml（一般是：数据实体类domain、数据处理接口mapper、mapper XML）&lt;/strong&gt;，具体实现步骤如下：(可以单独一个项目来生成这些文件，也可以集成在一个项目中，由于是演示，我这里是集成在一个项目中)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;2.3.1.由于要使用&lt;strong&gt;Mybatis Generator组件&lt;/strong&gt;，故需要添加对应的JAR包依赖，如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;SQL SERVER 数据驱动，以提供数据访问支持&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.microsoft.sqlserver&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mssql-jdbc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;7.0.0.jre8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;$NO-MVN-MAN-VER$ &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 添加mybatis生成器，以便通过maven build自动生成model、mapper及XML &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis.generator&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-generator-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.7&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同时需要添加对应的maven插件，以便通过maven命令可执行生成过程，如下：（通过configurationFile元素指定生成器的配置路径，overwrite元素指定是否覆盖生成，这里有个坑，后面会介绍到，此处略）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;            
　　　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;ref: https://gitee.com/free/Mybatis_Utils/blob/master/MybatisGeneator/MybatisGeneator.md &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;ref: https://www.cnblogs.com/handsomeye/p/6268513.html &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis.generator&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-generator-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.7&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configurationFile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;src/main/resources/mybatis/generatorconfig.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configurationFile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;verbose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;verbose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;overwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;overwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　2.3.2.在cn.zuowenjun.boot.domain包中定义相关的数据实体模型类，我这里演示的类是：ShoppingOrder（购物订单信息），代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('63dcac70-53f8-47b6-a06a-034a208c110f')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_63dcac70-53f8-47b6-a06a-034a208c110f&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_63dcac70-53f8-47b6-a06a-034a208c110f&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('63dcac70-53f8-47b6-a06a-034a208c110f',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_63dcac70-53f8-47b6-a06a-034a208c110f&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.math.BigDecimal;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShoppingOrder {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String shopper;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer totalqty;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BigDecimal totalprice;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Boolean iscompleted;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String createby;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date createtime;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getShopper() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shopper;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setShopper(String shopper) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.shopper = shopper == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : shopper.trim();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getTotalqty() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; totalqty;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setTotalqty(Integer totalqty) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.totalqty =&lt;span&gt; totalqty;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; BigDecimal getTotalprice() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; totalprice;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setTotalprice(BigDecimal totalprice) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.totalprice =&lt;span&gt; totalprice;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Boolean getIscompleted() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; iscompleted;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setIscompleted(Boolean iscompleted) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.iscompleted =&lt;span&gt; iscompleted;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCreateby() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createby;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreateby(String createby) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createby = createby == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : createby.trim();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getCreatetime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createtime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreatetime(Date createtime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createtime =&lt;span&gt; createtime;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　2.3.3.配置generatorconfig.xml，指定生成的各个细节，由于generatorconfig的配置节点比较多,如下只是贴出当前示例的配置信息，有一点要说明，注意配置节点的顺序，如果顺序不对就会报错，完整的配置方法详情介绍可参见：&lt;a href=&quot;https://gitee.com/free/Mybatis_Utils/blob/master/MybatisGeneator/MybatisGeneator.md&quot; target=&quot;_blank&quot;&gt;https://gitee.com/free/Mybatis_Utils/blob/master/MybatisGeneator/MybatisGeneator.md&lt;/a&gt; 或 &lt;a href=&quot;https://www.cnblogs.com/handsomeye/p/6268513.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/handsomeye/p/6268513.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b173506f-e2fd-4efc-b9ac-ca42a1e5b1fb')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_b173506f-e2fd-4efc-b9ac-ca42a1e5b1fb&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b173506f-e2fd-4efc-b9ac-ca42a1e5b1fb&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b173506f-e2fd-4efc-b9ac-ca42a1e5b1fb',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b173506f-e2fd-4efc-b9ac-ca42a1e5b1fb&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE generatorConfiguration
        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;
        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;generatorConfiguration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties &lt;/span&gt;&lt;span&gt;resource&lt;/span&gt;&lt;span&gt;=&quot;application.properties&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; https://blog.csdn.net/zsy3313422/article/details/53190613 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;classPathEntry
        &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;E:/LocalMvnRepositories/com/microsoft/sqlserver/mssql-jdbc/7.0.0.jre8/mssql-jdbc-7.0.0.jre8.jar&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;my&quot;&lt;/span&gt;&lt;span&gt; targetRuntime&lt;/span&gt;&lt;span&gt;=&quot;MyBatis3Simple&quot;&lt;/span&gt;&lt;span&gt; defaultModelType&lt;/span&gt;&lt;span&gt;=&quot;flat&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;javaFileEncoding&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

        
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;commentGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suppressAllComments&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suppressDate&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;commentGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jdbcConnection
            &lt;/span&gt;&lt;span&gt;driverClass&lt;/span&gt;&lt;span&gt;=&quot;${spring.datasource.driverClassName}&quot;&lt;/span&gt;&lt;span&gt;
            connectionURL&lt;/span&gt;&lt;span&gt;=&quot;${spring.datasource.url}&quot;&lt;/span&gt;&lt;span&gt;
            userId&lt;/span&gt;&lt;span&gt;=&quot;${spring.datasource.username}&quot;&lt;/span&gt;&lt;span&gt;
            password&lt;/span&gt;&lt;span&gt;=&quot;${spring.datasource.password}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jdbcConnection&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 生成model实体类文件位置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;javaModelGenerator
            &lt;/span&gt;&lt;span&gt;targetPackage&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.domain&quot;&lt;/span&gt;&lt;span&gt;
            targetProject&lt;/span&gt;&lt;span&gt;=&quot;src/main/java&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;enableSubPackages&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;trimStrings&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;javaModelGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 生成mapper.xml配置文件位置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; targetPackage这里指定包名，则会在如下的路径中生成多层级目录 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sqlMapGenerator &lt;/span&gt;&lt;span&gt;targetPackage&lt;/span&gt;&lt;span&gt;=&quot;mybatis.mapper&quot;&lt;/span&gt;&lt;span&gt;
            targetProject&lt;/span&gt;&lt;span&gt;=&quot;src/main/resources&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;enableSubPackages&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sqlMapGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 生成mapper接口文件位置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;javaClientGenerator
            &lt;/span&gt;&lt;span&gt;targetPackage&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.mapper&quot;&lt;/span&gt;&lt;span&gt;
            targetProject&lt;/span&gt;&lt;span&gt;=&quot;src/main/java&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;XMLMAPPER&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;enableSubPackages&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;javaClientGenerator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;tableName&lt;/span&gt;&lt;span&gt;=&quot;TA_TestShoppingOrder&quot;&lt;/span&gt;&lt;span&gt;
            domainObjectName&lt;/span&gt;&lt;span&gt;=&quot;ShoppingOrder&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;generatedKey &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; sqlStatement&lt;/span&gt;&lt;span&gt;=&quot;JDBC&quot;&lt;/span&gt;&lt;span&gt;  identity&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 指示ID为自增ID列，并在插入后返回该ID &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;



    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;generatorConfiguration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;由于涉及的知识点比较多，在此就不作介绍，请参见我给出的链接加以了解。&lt;/p&gt;
&lt;p&gt;　　2.3.4.通过maven 插件来执行生成代码（生成代码有很多种方法，详见：&lt;a href=&quot;https://blog.csdn.net/qq_32786873/article/details/78226925&quot; target=&quot;_blank&quot;&gt;https://blog.csdn.net/qq_32786873/article/details/78226925&lt;/a&gt;），这里我使用最为方便的一种，步骤如下：&lt;/p&gt;
&lt;p&gt;　　项目右键-》RunAs或者DeBug-》Maven Build...-》在goals（阶段）中输入：mybatis-generator:generate，即：设置生成阶段，最后点击Apply或直接Run即可，如图示：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212191524835-322594469.png&quot; alt=&quot;&quot; width=&quot;375&quot; height=&quot;373&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　执行生成后，会在控制台中显示最终的结果，如下图示：如果成功会显示buid success，并会在相应的目录中生成对应的文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212191635901-1267007073.png&quot; alt=&quot;&quot; width=&quot;587&quot; height=&quot;168&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.4进阶用法：自定义Mybatis Generator的生成过程中的插件类，以便添加额外自定义的方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;虽然使用&lt;strong&gt;Mybatis Generator&lt;/strong&gt;减少了手工编写代码及XML的工作量，但由于生成的CRUD方法都是比较简单的，稍微复杂或灵活一点的方法都不能简单生成，如果单纯的在生成代码后再人工手动添加其它自定义的方法，又担心如果执行一次自动生成又会覆盖手动添加的自定义代码，那有没有办法解决呢？当然是有的，我（梦在旅途,zuowenjun.cn）在网络上了解到的方法大部份都是说获取&lt;strong&gt;Mybatis Generator&lt;/strong&gt;源代码，然后进行二次开发，最后使用“定制版”的&lt;strong&gt;Mybatis Generator，&lt;/strong&gt;我个人觉得虽然能解决问题，但如果能力不足，可能会出现意想不到的问题，而且进行定制也不是那么简单的，故我这里采取&lt;strong&gt;Mybatis Generator&lt;/strong&gt;框架提供的可扩展插件plugin来实现扩展，具体步骤如下：&lt;/p&gt;
&lt;p&gt;　　2.4.1.在项目新创建一个包cn.zuowenjun.boot.mybatis.plugin,然后在包里面先创建一个泛型通用插件基类（CustomAppendMethodPlugin），这个基类主要是用于附加自定义方法，故取名CustomAppendMethodPlugin，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5fe7e36c-93fe-4f36-a5f8-8cdd04f40fec')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_5fe7e36c-93fe-4f36-a5f8-8cdd04f40fec&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5fe7e36c-93fe-4f36-a5f8-8cdd04f40fec&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5fe7e36c-93fe-4f36-a5f8-8cdd04f40fec',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5fe7e36c-93fe-4f36-a5f8-8cdd04f40fec&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mybatis.plugin;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.IntrospectedTable;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.PluginAdapter;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.Interface;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.TopLevelClass;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.xml.Document;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.codegen.mybatis3.javamapper.elements.AbstractJavaMapperMethodGenerator;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.codegen.mybatis3.xmlmapper.elements.AbstractXmlElementGenerator;

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
 * 自定义通用可添加生成自定义方法插件类
 * Author:zuowenjun
 * Date:2019-1-29
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; CustomAppendMethodPlugin&amp;lt;TE &lt;span&gt;extends&lt;/span&gt; AbstractXmlElementGenerator,TM &lt;span&gt;extends&lt;/span&gt; AbstractJavaMapperMethodGenerator&amp;gt;  
&lt;span&gt;extends&lt;/span&gt;&lt;span&gt; PluginAdapter {

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Class&amp;lt;TE&amp;gt;&lt;span&gt; teClass;
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Class&amp;lt;TM&amp;gt;&lt;span&gt; tmClass;
    
    
    @SuppressWarnings(&lt;/span&gt;&quot;unchecked&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; CustomAppendMethodPlugin(Class&amp;lt;? &lt;span&gt;extends&lt;/span&gt; AbstractXmlElementGenerator&amp;gt;&lt;span&gt; teClass,
            Class&lt;/span&gt;&amp;lt;? &lt;span&gt;extends&lt;/span&gt; AbstractJavaMapperMethodGenerator&amp;gt;&lt;span&gt; tmClass) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.teClass=(Class&amp;lt;TE&amp;gt;&lt;span&gt;) teClass;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.tmClass=(Class&amp;lt;TM&amp;gt;&lt;span&gt;) tmClass;
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; sqlMapDocumentGenerated(Document document,
            IntrospectedTable introspectedTable) {
            
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                AbstractXmlElementGenerator elementGenerator &lt;/span&gt;=&lt;span&gt; teClass.newInstance();
                elementGenerator.setContext(context);
                elementGenerator.setIntrospectedTable(introspectedTable);
                elementGenerator.addElements(document.getRootElement());
                
            } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt; (InstantiationException |&lt;span&gt; IllegalAccessException e) {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated catch block&lt;/span&gt;
&lt;span&gt;                e.printStackTrace();
            }
            

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;&lt;span&gt;.sqlMapDocumentGenerated(document, introspectedTable);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; clientGenerated(Interface interfaze,
            TopLevelClass topLevelClass,
            IntrospectedTable introspectedTable) {
        
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            AbstractJavaMapperMethodGenerator methodGenerator &lt;/span&gt;=&lt;span&gt; tmClass.newInstance();
            methodGenerator.setContext(context);
            methodGenerator.setIntrospectedTable(introspectedTable);
            methodGenerator.addInterfaceElements(interfaze);
            
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt; (InstantiationException |&lt;span&gt; IllegalAccessException e) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated catch block&lt;/span&gt;
&lt;span&gt;            e.printStackTrace();
        }
        

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;&lt;span&gt;.clientGenerated(interfaze, topLevelClass, introspectedTable);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; validate(List&amp;lt;String&amp;gt;&lt;span&gt; warnings) {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　代码比较简单，主要是重写了sqlMapDocumentGenerated（生成mapper xml方法）、clientGenerated（生成mapper 接口方法），在这里面我通过把指定泛型类型（分别继承自 AbstractXmlElementGenerator、AbstractJavaMapperMethodGenerator）加入到生成XML和接口的过程中，以实现生成过程的抽象。&lt;/p&gt;
&lt;p&gt;　　2.4.2.我这里由于默认生成的ShoppingOrderDetailMapper（实体类：ShoppingOrderDetail是购物订单详情）无法满足需要，我需要额外再增加两个方法：&lt;/p&gt;
&lt;p&gt;　　List&amp;lt;ShoppingOrderDetail&amp;gt; selectByOrderId(int shoppingOrderId); 、void deleteByOrderId(int shoppingOrderId); 故在这里自定义继承自CustomAppendMethodPlugin的插件类：ShoppingOrderDetailMapperPlugin，具体实现代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mybatis.plugin;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Set;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.TreeSet;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.FullyQualifiedJavaType;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.Interface;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.JavaVisibility;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.Method;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.java.Parameter;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.xml.Attribute;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.xml.TextElement;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.dom.xml.XmlElement;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.codegen.mybatis3.javamapper.elements.AbstractJavaMapperMethodGenerator;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.codegen.mybatis3.xmlmapper.elements.AbstractXmlElementGenerator;

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
 * ref see &lt;/span&gt;&lt;span&gt;https://www.cnblogs.com/se7end/p/9293755.html&lt;/span&gt;&lt;span&gt;
 * Author:zuowenjun
 * Date:2019-1-29
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShoppingOrderDetailMapperPlugin 
&lt;/span&gt;&lt;span&gt;extends&lt;/span&gt; CustomAppendMethodPlugin&amp;lt;ShoppingOrderDetailXmlElementGenerator, AbstractJavaMapperMethodGenerator&amp;gt;&lt;span&gt; {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ShoppingOrderDetailMapperPlugin() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;(ShoppingOrderDetailXmlElementGenerator.&lt;span&gt;class&lt;/span&gt;,ShoppingOrderDetailJavaMapperMethodGenerator.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
    }

}


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt; ShoppingOrderDetailXmlElementGenerator &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; AbstractXmlElementGenerator{

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addElements(XmlElement parentElement) {
        
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!introspectedTable.getAliasedFullyQualifiedTableNameAtRuntime().equalsIgnoreCase(&quot;TA_TestShoppingOrderDetail&quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }

        TextElement selectText &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; TextElement(&quot;select * from &quot; +&lt;span&gt; introspectedTable.getAliasedFullyQualifiedTableNameAtRuntime()
        &lt;/span&gt;+ &quot; where shoppingOrderId=#{shoppingOrderId}&quot;&lt;span&gt;);
        
         XmlElement selectByOrderId &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; XmlElement(&quot;select&quot;&lt;span&gt;);
         selectByOrderId.addAttribute(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Attribute(&quot;id&quot;, &quot;selectByOrderId&quot;&lt;span&gt;));
         selectByOrderId.addAttribute(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Attribute(&quot;resultMap&quot;, &quot;BaseResultMap&quot;&lt;span&gt;));
         selectByOrderId.addAttribute(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Attribute(&quot;parameterType&quot;, &quot;int&quot;&lt;span&gt;));
         selectByOrderId.addElement(selectText);
         parentElement.addElement(selectByOrderId);
         
            TextElement deleteText &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; TextElement(&quot;delete from &quot; +&lt;span&gt; introspectedTable.getAliasedFullyQualifiedTableNameAtRuntime()
            &lt;/span&gt;+ &quot; where shoppingOrderId=#{shoppingOrderId}&quot;&lt;span&gt;);
            
             XmlElement deleteByOrderId &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; XmlElement(&quot;delete&quot;&lt;span&gt;);
             deleteByOrderId.addAttribute(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Attribute(&quot;id&quot;, &quot;deleteByOrderId&quot;&lt;span&gt;));
             deleteByOrderId.addAttribute(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Attribute(&quot;parameterType&quot;, &quot;int&quot;&lt;span&gt;));
             deleteByOrderId.addElement(deleteText);
             parentElement.addElement(deleteByOrderId);
    }
    
}


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt; ShoppingOrderDetailJavaMapperMethodGenerator &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; AbstractJavaMapperMethodGenerator{

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addInterfaceElements(Interface interfaze) {
        
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!introspectedTable.getAliasedFullyQualifiedTableNameAtRuntime().equalsIgnoreCase(&quot;TA_TestShoppingOrderDetail&quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        
        addInterfaceSelectByOrderId(interfaze);
        addInterfaceDeleteByOrderId(interfaze);
    }
    
       &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addInterfaceSelectByOrderId(Interface interfaze) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 先创建import对象&lt;/span&gt;
            Set&amp;lt;FullyQualifiedJavaType&amp;gt; importedTypes = &lt;span&gt;new&lt;/span&gt; TreeSet&amp;lt;FullyQualifiedJavaType&amp;gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加Lsit的包&lt;/span&gt;
&lt;span&gt;            importedTypes.add(FullyQualifiedJavaType.getNewListInstance());
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建方法对象&lt;/span&gt;
            Method method = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Method();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置该方法为public&lt;/span&gt;
&lt;span&gt;            method.setVisibility(JavaVisibility.PUBLIC);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置返回类型是List&lt;/span&gt;
            FullyQualifiedJavaType returnType =&lt;span&gt; FullyQualifiedJavaType.getNewListInstance();
            FullyQualifiedJavaType listArgType &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; FullyQualifiedJavaType(introspectedTable.getBaseRecordType());
            returnType.addTypeArgument(listArgType);
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 方法对象设置返回类型对象&lt;/span&gt;
&lt;span&gt;            method.setReturnType(returnType);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置方法名称为我们在IntrospectedTable类中初始化的 “selectByOrderId”&lt;/span&gt;
            method.setName(&quot;selectByOrderId&quot;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置参数类型是int类型&lt;/span&gt;
&lt;span&gt;            FullyQualifiedJavaType parameterType;
            parameterType &lt;/span&gt;=&lt;span&gt; FullyQualifiedJavaType.getIntInstance();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; import参数类型对象(基本类型其实可以不必引入包名)
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;importedTypes.add(parameterType);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 为方法添加参数，变量名称record&lt;/span&gt;
            method.addParameter(&lt;span&gt;new&lt;/span&gt; Parameter(parameterType, &quot;shoppingOrderId&quot;)); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;$NON-NLS-1$
            &lt;/span&gt;&lt;span&gt;//
&lt;/span&gt;&lt;span&gt;            context.getCommentGenerator().addGeneralMethodComment(method, introspectedTable);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (context.getPlugins().clientSelectByPrimaryKeyMethodGenerated(method, interfaze, introspectedTable)) {
                interfaze.addImportedTypes(importedTypes);
                interfaze.addMethod(method);
            }
        }
       
       &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addInterfaceDeleteByOrderId(Interface interfaze) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建方法对象&lt;/span&gt;
            Method method = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Method();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置该方法为public&lt;/span&gt;
&lt;span&gt;            method.setVisibility(JavaVisibility.PUBLIC);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置方法名称为我们在IntrospectedTable类中初始化的 “deleteByOrderId”&lt;/span&gt;
            method.setName(&quot;deleteByOrderId&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置参数类型是int类型&lt;/span&gt;
&lt;span&gt;            FullyQualifiedJavaType parameterType;
            parameterType &lt;/span&gt;=&lt;span&gt; FullyQualifiedJavaType.getIntInstance();
            method.addParameter(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Parameter(parameterType, &quot;shoppingOrderId&quot;)); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;$NON-NLS-1$&lt;/span&gt;
&lt;span&gt;            
            context.getCommentGenerator().addGeneralMethodComment(method, introspectedTable);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (context.getPlugins().clientSelectByPrimaryKeyMethodGenerated(method, interfaze, introspectedTable)) {
                interfaze.addMethod(method);
            }
            
       }
        
    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从如上代码所示，核心点是自定义继承自AbstractXmlElementGenerator、AbstractJavaMapperMethodGenerator的ShoppingOrderDetailXmlElementGenerator（XML生成器类）、ShoppingOrderDetailJavaMapperMethodGenerator（mapper接口生成器类），然后分别在addElements、addInterfaceElements添加自定义生成XML及接口方法的逻辑（如上代码中使用的是反射，若想学习了解反射请自行网上查找相关资料，C#也有反射哦，应该好理解），注意由于插件在生成过程中每个实体类都会调用一次，故必需作相应的判断（判断当前要附加的自定义方法是符与当前实体类生成过程相符，如果不相符则忽略退出）&lt;/p&gt;
&lt;p&gt;如下是ShoppingOrderDetail实体类的代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('875d72a3-7519-4841-8e13-15bbbda54e21')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_875d72a3-7519-4841-8e13-15bbbda54e21&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_875d72a3-7519-4841-8e13-15bbbda54e21&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('875d72a3-7519-4841-8e13-15bbbda54e21',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_875d72a3-7519-4841-8e13-15bbbda54e21&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.math.BigDecimal;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShoppingOrderDetail {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer shoppingorderid;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer goodsid;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer qty;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BigDecimal totalprice;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String createby;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date createtime;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getShoppingorderid() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shoppingorderid;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setShoppingorderid(Integer shoppingorderid) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.shoppingorderid =&lt;span&gt; shoppingorderid;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getGoodsid() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsid;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setGoodsid(Integer goodsid) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.goodsid =&lt;span&gt; goodsid;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getQty() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; qty;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setQty(Integer qty) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.qty =&lt;span&gt; qty;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; BigDecimal getTotalprice() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; totalprice;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setTotalprice(BigDecimal totalprice) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.totalprice =&lt;span&gt; totalprice;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCreateby() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createby;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreateby(String createby) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createby = createby == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : createby.trim();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getCreatetime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createtime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreatetime(Date createtime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createtime =&lt;span&gt; createtime;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;另外顺便解决一个踩坑点：&lt;/strong&gt;上面提到了，我们在POM文件配置mybatis-generator-maven-plugin插件时，overwrite设为true，目的是确保每次执行生成时，生成的代码能够覆盖已经存在的，理想是美好的，但现实总会有点小意外，我们这样配置，只能解决生成的mapper 接口类文件不会重复，但生成的mapper xml文件仍然会附加代码导致重复，故我们需要解决这个问题，而解决这个问题的关键是：GeneratedXmlFile.isMergeable，如果isMergeable为true则会合并，目前默认都是false，所以我们只需实现将GeneratedXmlFile.isMergeable设为true即可，由于isMergeable是私有字段，只能采取插件+反射动态改变这个值了，自定义合并代码插件OverIsMergeablePlugin实现如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mybatis.plugin;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Field;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.GeneratedXmlFile;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.IntrospectedTable;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.generator.api.PluginAdapter;

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
 * 修复mybatis-generator重复执行时生成的XML有重复代码(核心：isMergeable=false)
 * Author:&lt;/span&gt;&lt;span&gt;https://blog.csdn.net/zengqiang1/article/details/79381418&lt;/span&gt;&lt;span&gt;
 * Editor:zuowenjun
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; OverIsMergeablePlugin &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; PluginAdapter {

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; validate(List&amp;lt;String&amp;gt;&lt;span&gt; warnings) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }
    

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; sqlMapGenerated(GeneratedXmlFile sqlMap,
            IntrospectedTable introspectedTable) {
        
          &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
              Field field &lt;/span&gt;= sqlMap.getClass().getDeclaredField(&quot;isMergeable&quot;&lt;span&gt;);
              field.setAccessible(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
              field.setBoolean(sqlMap, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
          } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
              e.printStackTrace();
          }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.4.3.在generatorconfig.xml配置文件中增加plugin配置，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.mybatis.plugin.OverIsMergeablePlugin&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.mybatis.plugin.ShoppingOrderDetailMapperPlugin&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

... ...省略中间过程

        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;tableName&lt;/span&gt;&lt;span&gt;=&quot;TA_TestShoppingOrderDetail&quot;&lt;/span&gt;&lt;span&gt;
            domainObjectName&lt;/span&gt;&lt;span&gt;=&quot;ShoppingOrderDetail&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;generatedKey &lt;/span&gt;&lt;span&gt;column&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; sqlStatement&lt;/span&gt;&lt;span&gt;=&quot;JDBC&quot;&lt;/span&gt;&lt;span&gt; identity&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.4.4.由于不能在同一个项目中直接使用plugin类（具体原因请上网查询，在此了解即可），故还需把cn.zuowenjun.boot.mybatis.plugin这个包中的文件单独导出生成JAR包，然后把这个JAR包复制到项目的指定目录下（本示例是放在libs目录下），然后再在POM为mybatis-generator-maven-plugin单独添加system本地依赖才行，maven添加依赖如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;ref: https://gitee.com/free/Mybatis_Utils/blob/master/MybatisGeneator/MybatisGeneator.md &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;ref: https://www.cnblogs.com/handsomeye/p/6268513.html &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis.generator&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-generator-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.7&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configurationFile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;src/main/resources/mybatis/generatorconfig.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configurationFile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;verbose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;verbose&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;overwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;overwrite&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 为mybatis-generator增加自定义插件依赖 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;cn.zuowenjun.boot.mybatis.plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;cn.zuowenjun.boot.mybatis.plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;system&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;systemPath&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${basedir}/src/main/libs/cn.zuowenjun.boot.mybatis.plugin.jar&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;systemPath&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果4步完成后，最后执行maven buid的生成mybatis代码过程即可，最后查看生成的mapper及xml都会有对应的自定义方法，在此就不再贴出结果了。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.5进阶用法：利用Mybatis的继承机制实现添加额外自定义方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　如2.4节所述，我们可以通过自定义plugin来实现添加额外自定义的方法，而且不用担心被覆盖，但可能实现有点麻烦（里面用到了反射），有没有简单一点的办法呢？当然有，即可以先使用&lt;strong&gt;Mybatis Generator&lt;/strong&gt;框架生成默代代码，然后再结合使用2.2所述方法（手写mapper接口类及mapper XML），利用mapper XML的继承特性完成添加自定义方法的过程中，具体步骤与2.2相同，在此贴出（注意前提是先自动生成代码，然后再操作如下步骤）&lt;/p&gt;
&lt;p&gt;　　2.5.1.定义扩展mapper接口类（ShoppingOrderExtMapper，扩展ShoppingOrderMapper，它们之间无需继承），代码如下：（很简单，就是定义了一个特殊用途的方法）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain.ShoppingOrder;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ShoppingOrderExtMapper {
    
    List&lt;/span&gt;&amp;lt;ShoppingOrder&amp;gt;&lt;span&gt; selectAllByShopper(String shopper);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　2.5.2.编写对应的ShoppingOrderExtMapper.xml，这里面就要用到继承，继承主要是resultMap【实现继承用：extends=要继承的mapper xml resultMap】，这样就不用两个地方都为一个实体类写结果映射配置了，其余的都按一个新的mapper XML配置来设计即可，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.mapper.ShoppingOrderExtMapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;resultMap &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.domain.ShoppingOrder&quot;&lt;/span&gt;&lt;span&gt; 
    extends&lt;/span&gt;&lt;span&gt;=&quot;cn.zuowenjun.boot.mapper.ShoppingOrderMapper.BaseResultMap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;resultMap&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectAllByShopper&quot;&lt;/span&gt;&lt;span&gt; resultMap&lt;/span&gt;&lt;span&gt;=&quot;BaseResultMap&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;string&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        select * from TA_TestShoppingOrder where shopper=#{shopper}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上两步即完成扩展添加额外自定义的方法，又不用担心重复执行生成代码会被覆盖掉，只是使用时需要单独注册到spring，单独实例，虽不完美但弥补了默认生成代码的不足也是可行的。&lt;/p&gt;
&lt;p&gt;　　2.6 &lt;strong&gt;使用SpringBootTest + junit测试基于Mybatis框架实现的DAO类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　在此不详情说明junit测试的用法，网上大把资源，只是单独说明结合&lt;strong&gt;SpringBootTest 注解，&lt;/strong&gt;完成单元测试，先看单元测试代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5a3c1071-7063-4f55-a362-37b011566c39')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_5a3c1071-7063-4f55-a362-37b011566c39&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5a3c1071-7063-4f55-a362-37b011566c39&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5a3c1071-7063-4f55-a362-37b011566c39',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5a3c1071-7063-4f55-a362-37b011566c39&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.springbootdemo;


&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.math.BigDecimal;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.Assert;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.Test;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.RunWith;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.test.context.SpringBootTest;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.test.annotation.Rollback;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.test.context.junit4.SpringRunner;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Transactional;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.SpringbootdemoApplication;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper.GoodsMapper;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper.ShoppingOrderDetailMapper;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper.ShoppingOrderMapper;

@RunWith(SpringRunner.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
@SpringBootTest(classes&lt;/span&gt;=SpringbootdemoApplication.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShoppingOrderMapperTests {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingOrderMapper shoppingOrderMapper;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingOrderDetailMapper shoppingOrderDetailMapper;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; GoodsMapper goodsMapper;
    
    @Transactional
    @Rollback(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;不加这个，默认测试完后自动回滚&lt;/span&gt;
&lt;span&gt;    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testInsertShoppingOrder() {

        Goods goods&lt;/span&gt;= goodsMapper.get(1&lt;span&gt;);
        
        ShoppingOrder shoppingOrder&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ShoppingOrder();
        shoppingOrder.setShopper(&lt;/span&gt;&quot;zuowenjun&quot;&lt;span&gt;);
        shoppingOrder.setIscompleted(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        shoppingOrder.setTotalprice(BigDecimal.valueOf(&lt;/span&gt;0&lt;span&gt;));
        shoppingOrder.setTotalqty(&lt;/span&gt;1&lt;span&gt;);
        shoppingOrder.setCreateby(&lt;/span&gt;&quot;zuowenjun&quot;&lt;span&gt;);
        shoppingOrder.setCreatetime(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
        
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; orderId=&lt;span&gt; shoppingOrderMapper.insert(shoppingOrder);
        shoppingOrder.setId(orderId);
        
        ShoppingOrderDetail shoppingOrderDetail&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ShoppingOrderDetail();
        shoppingOrderDetail.setGoodsid(goods.getId());
        shoppingOrderDetail.setShoppingorderid(shoppingOrder.getId());
        shoppingOrderDetail.setQty(&lt;/span&gt;10&lt;span&gt;);
        shoppingOrderDetail.setTotalprice(BigDecimal.valueOf(shoppingOrderDetail.getQty()).multiply(goods.getPrice()));
        shoppingOrderDetail.setCreateby(&lt;/span&gt;&quot;zuowenjun&quot;&lt;span&gt;);
        shoppingOrderDetail.setCreatetime(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
        
        shoppingOrderDetailMapper.insert(shoppingOrderDetail);
        
        List&lt;/span&gt;&amp;lt;ShoppingOrderDetail&amp;gt; orderDetails=&lt;span&gt; shoppingOrderDetailMapper.selectByOrderId(shoppingOrder.getId());
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(orderDetails!=&lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; orderDetails.size()&amp;gt;0&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(ShoppingOrderDetail od:orderDetails) {
                System.out.println(&lt;/span&gt;&quot;id:&quot; + od.getId() + &quot;,goodsid:&quot; +&lt;span&gt; od.getGoodsid());
            }
        }
        
        Assert.assertTrue(orderDetails.size()&lt;/span&gt;&amp;gt;0&lt;span&gt;); 
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　与Junit单元测试用法基本相同，唯 一的区别就是在单元测试的类上添加@SpringBootTest，并指定启动类（如代码中所示：@SpringBootTest(classes=SpringbootdemoApplication.class)），另外注意一点：如果测试方法使用@Transactional注解，那么当测试完成后会回滚（即并不会提交事务），如果想完成事务的提交，则需如代码中所示添加@Rollback(false)，其中false指不回滚，true则为回滚。&lt;/p&gt;
&lt;p class=&quot;post_body_title&quot;&gt;&lt;strong&gt;三、简单演示集成Thymeleaf模板引擎（这里只是用一个简单的页面演示效果，由于现在都流行前后端分离，故只需了解即可）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;说明：Thymeleaf是spring MVC的端视图引擎，与JSP视图引擎类似，只不过在spring boot项目中默认支持Thymeleaf（Thymeleaf最大的优点是视图中不含JAVA代码，不影响UI美工及前端设计），而JSP不建议使用，当然也可以通过添加相关的JSP的JAR包依赖，实现JSP视图，具体请自行网上查找资源，同时spring MVC +JSP视图的用法可以参见该系列的上篇文章&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;3.1.添加Thymeleaf的maven依赖，POM配置如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 添加thymeleaf模板引擎（用于springMVC模式，如果是rest API项目，则无需引用） &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-thymeleaf&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;3.2.编写后端controller，以便响应用户请求&lt;/strong&gt;，代码如下：（这个与普通spring MVC+JSP相同，区别在VIEW）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.ui.Model;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.GetMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.service.*&lt;span&gt;;

@Controller
@RequestMapping(&lt;/span&gt;&quot;/test&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TestController {
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShopUserService shopUserService;
    
    @GetMapping(&lt;/span&gt;&quot;/userlist&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String list(Model model) {
        
        List&lt;/span&gt;&amp;lt;ShopUser&amp;gt; users=&lt;span&gt; shopUserService.getAll();
        model.addAttribute(&lt;/span&gt;&quot;title&quot;, &quot;测试使用thymeleaf模板引擎展示数据&quot;&lt;span&gt;);
        model.addAttribute(&lt;/span&gt;&quot;users&quot;&lt;span&gt;, users);
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;可以在application.properties添加如下配置，以改变thymeleaf的默认设置
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;spring.thymeleaf.prefix=&quot;classpath:/templates/&quot; 模板查找路径
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;spring.thymeleaf.suffix=&quot;.html&quot; 模板后缀名&lt;/span&gt;
        
        &lt;span&gt;return&lt;/span&gt; &quot;/test&quot;;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;默认自动查找路径：src/main/resources/templates/*.html&lt;/span&gt;
&lt;span&gt;    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;3.3编写前端视图html模板页面，最后演示效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　HTML视图页面代码：（th:XXX为Thymeleaf的模板特有的标识符，${xxx}这是SP EL表达式，这个之前讲过的，很简单，不展开说明）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('16db0337-bb89-42ea-9ba0-25352c0ac16d')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_16db0337-bb89-42ea-9ba0-25352c0ac16d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_16db0337-bb89-42ea-9ba0-25352c0ac16d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('16db0337-bb89-42ea-9ba0-25352c0ac16d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_16db0337-bb89-42ea-9ba0-25352c0ac16d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;xmlns:th&lt;/span&gt;&lt;span&gt;=&quot;http://www.thymeleaf.org&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test User List -power by thymeleaf&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    table&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;2px solid blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        border-collapse&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;collapse&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;98%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    
    table *&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    
    thead&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;yellow&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    
    th,td&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    
    #copy&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1 &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${title}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;SeqNo&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;userId&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;nickName&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;depositAmount&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;th:if&lt;/span&gt;&lt;span&gt;=&quot;${users}!=null&quot;&lt;/span&gt;&lt;span&gt; th:each&lt;/span&gt;&lt;span&gt;=&quot;user,iterStat:${users}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${iterStat.index}+1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${user.userid}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;www.zuowenjun.cn&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${user.nickname}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;梦在旅途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${user.depositamount}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;520&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;th:unless&lt;/span&gt;&lt;span&gt;=&quot;${users.size()} gt 0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;colspan&lt;/span&gt;&lt;span&gt;=&quot;4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;暂无相关记录！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;copy&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    Copyright &lt;/span&gt;&lt;span&gt;&amp;amp;copy;&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${#dates.format(#dates.createToday(),'yyyy')}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    www.zuowenjun.cn and zuowj.cnblogs.com demo all rights.
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;最后浏览：http://localhost:8080/test/userlist，效果如下图示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190212223022899-138344480.png&quot; alt=&quot;&quot; width=&quot;921&quot; height=&quot;176&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;post_body_title&quot;&gt;&lt;strong&gt;四、利用VUE+SpringMVC Rest API编写实现前后端分离的电商购物Demo（浏览商品、添加购物车、下单、完成）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;说明：由于数据访问层（或称：数据持久层）已由&lt;strong&gt;Mybatis Generator&lt;/strong&gt;完成了，现在就只要编写业务领域服务层（接口层、实现层），API接入层即可完成后端开发，然后再开发设计前端页面即可（前端与后端交互使用AJAX）&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;4.1.在cn.zuowenjun.boot.service包中定义相关的业务领域服务接口&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('2c43024a-077c-47b5-9339-e3063c6ad576')&quot; readability=&quot;35&quot;&gt;&lt;img id=&quot;code_img_closed_2c43024a-077c-47b5-9339-e3063c6ad576&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2c43024a-077c-47b5-9339-e3063c6ad576&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('2c43024a-077c-47b5-9339-e3063c6ad576',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2c43024a-077c-47b5-9339-e3063c6ad576&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ShopUserService.java&lt;/span&gt;

&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain.ShopUser;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ShopUserService {

    List&lt;/span&gt;&amp;lt;ShopUser&amp;gt;&lt;span&gt; getAll();
    
    ShopUser get(String userId);
    
    String getCurrentLoginUser();
    
    String login(String uid,String pwd);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; logout();
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;GoodsService.java&lt;/span&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.multipart.MultipartFile;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;


&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; GoodsService {
    
    List&lt;/span&gt;&amp;lt;Goods&amp;gt; getGoodsListByPage(&lt;span&gt;int&lt;/span&gt; pageSize,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; pageNo);
    
    List&lt;/span&gt;&amp;lt;Goods&amp;gt; getGoodsListByCategory(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryId);
    
    List&lt;/span&gt;&amp;lt;Goods&amp;gt; getGoodsListByMultIds(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;...goodsIds);
    
    Goods getGoods(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; insertGoods(Goods goods,MultipartFile uploadGoodsPic);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateGoods(Goods goods,MultipartFile uploadGoodsPic);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteGoods(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    
    List&lt;/span&gt;&amp;lt;GoodsCategory&amp;gt;&lt;span&gt; getAllGoodsCategoryList();
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; insertGoodsCategory(GoodsCategory goodsCategory);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateGoodsCategory(GoodsCategory goodsCategory);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteGoodsCategory(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ShoppingOrderService.java&lt;/span&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ShoppingOrderService {
    
    ShoppingOrder getShoppingOrder(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id);
    
    List&lt;/span&gt;&amp;lt;ShoppingOrder&amp;gt;&lt;span&gt; getShoppingOrderList(String shopper);
    
    List&lt;/span&gt;&amp;lt;ShoppingOrderDetail&amp;gt; getShoppingOrderDetail(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; orderId);
    
    &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; createShoppingOrderByShopper(String shopper);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; insertShoppingOrderWithDetail(ShoppingOrder order,List&amp;lt;ShoppingOrderDetail&amp;gt;&lt;span&gt; orderDetails);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteShoppingOrderDetail(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; orderDetailId);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteShoppingOrderWithDetail(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; orderId);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateShoppingOrder(ShoppingOrder order);
    
    List&lt;/span&gt;&amp;lt;ShoppingCart&amp;gt;&lt;span&gt; getShoppingCartList(String shopper);
    
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; getShoppingCartBuyCount(String shopper);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; insertShoppingCart(ShoppingCart shoppingCart);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteShoppingCart(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; shoppingCartId);
    
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; clearShoppingCart(String shopper);
    
    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　如上代码示，我仅定义了三个service接口，分别是：ShopUserService（用户服务）、GoodsService（商品服务【含：商品类别、商品信息】）、ShoppingOrderService（购物订单服务【含：购物车、购物订单、购物订单明细】），我说过服务层不一定是与DB中的表一 一对应的，而是应该体现服务内聚（即：业务领域），如果单纯的与DAO层一样，一个service与一个dao对应，那就失去了分层的意义，而且还增加了复杂度。个人看法。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;4.2在cn.zuowenjun.boot.service.impl包中实现4.1中相关的业务领域服务接口&lt;/strong&gt;（代码很简单，主要是实现接口的一些方法，唯一有点特别是文件上传，事务，记录日志，这些通过代码就能看明白就不再详情描述了）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('9e60c9f3-12e9-49f4-843b-de009f487033')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_9e60c9f3-12e9-49f4-843b-de009f487033&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_9e60c9f3-12e9-49f4-843b-de009f487033&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('9e60c9f3-12e9-49f4-843b-de009f487033',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_9e60c9f3-12e9-49f4-843b-de009f487033&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ShopUserServiceImpl.java&lt;/span&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service.impl;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.context.request.RequestContextHolder;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.context.request.ServletRequestAttributes;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.EShopProperties;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain.ShopUser;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper.ShopUserMapper;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service.ShopUserService;

@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ShopUserServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; ShopUserService {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShopUserMapper shopUserMapper;
    
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; EShopProperties shopProperties;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ShopUserServiceImpl(ShopUserMapper shopUserMapper,EShopProperties shopProperties) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.shopUserMapper=&lt;span&gt;shopUserMapper;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.shopProperties=&lt;span&gt;shopProperties;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;ShopUser&amp;gt;&lt;span&gt; getAll() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shopUserMapper.selectAll();
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ShopUser get(String userId) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shopUserMapper.selectByPrimaryKey(userId);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCurrentLoginUser() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(getRequest().getSession().getAttribute(&quot;loginUser&quot;)==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; getRequest().getSession().getAttribute(&quot;loginUser&quot;&lt;span&gt;).toString();
        
    }
    

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String login(String uid, String pwd) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(shopProperties.getShopUserId().equalsIgnoreCase(uid) &amp;amp;&amp;amp;&lt;span&gt; 
                shopProperties.getShopUserPwd().equals(pwd)) {
            getRequest().getSession().setAttribute(&lt;/span&gt;&quot;loginUser&quot;&lt;span&gt;, uid);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;用户名或密码不正确！&quot;&lt;span&gt;;
        }
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; logout() {
        getRequest().getSession().removeAttribute(&lt;/span&gt;&quot;loginUser&quot;&lt;span&gt;);
    }
    
    
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; HttpServletRequest getRequest() {
        HttpServletRequest  request&lt;/span&gt;=&lt;span&gt; ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; request;
    }


    
    
}



&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;GoodsServiceImpl.java&lt;/span&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service.impl;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.File;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.UUID;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.ServletContext;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Transactional;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.context.ContextLoader;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.context.WebApplicationContext;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.context.request.RequestContextHolder;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.context.request.ServletRequestAttributes;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.multipart.MultipartFile;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper.GoodsCategoryMapper;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.mapper.GoodsMapper;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service.GoodsService;

@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; GoodsServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; GoodsService {
    
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Logger logger=LoggerFactory.getLogger(GoodsServiceImpl.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; GoodsMapper goodsMapper;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; GoodsCategoryMapper categoryMapper;
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Goods&amp;gt; getGoodsListByPage(&lt;span&gt;int&lt;/span&gt; pageSize,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; pageNo){
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsMapper.getListByPage(pageSize, pageNo);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Goods&amp;gt; getGoodsListByCategory(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryId) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsMapper.getList(categoryId);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Goods&amp;gt; getGoodsListByMultIds(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;... goodsIds) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsMapper.getListByMultIds(goodsIds);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Goods getGoods(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsMapper.get(id);
    }
    
    @Transactional
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; insertGoods(Goods goods, MultipartFile uploadGoodsPic) {
        String picPath&lt;/span&gt;=&lt;span&gt; saveGoodsPic(uploadGoodsPic);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(picPath!=&lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span&gt;picPath.isEmpty()) {
            
            goods.setPicture(picPath);
        }
        goodsMapper.insert(goods);
        
        GoodsCategory gcate&lt;/span&gt;=&lt;span&gt; categoryMapper.get(goods.getCategoryId());
        gcate.setGoodsCount(gcate.getGoodsCount()&lt;/span&gt;+1&lt;span&gt;);
        categoryMapper.update(gcate);
        
        logger.info(&lt;/span&gt;&quot;inserted new goods - id:&quot; +&lt;span&gt; goods.getId());
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateGoods(Goods goods,MultipartFile uploadGoodsPic) {
        String picPath&lt;/span&gt;=&lt;span&gt; saveGoodsPic(uploadGoodsPic);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(picPath!=&lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span&gt;picPath.isEmpty()) {
            
            goods.setPicture(picPath);
        }
         goodsMapper.update(goods);
         
         logger.info(&lt;/span&gt;&quot;update goods - id:&quot; +&lt;span&gt; goods.getId());
    }
    
    @Transactional
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteGoods(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id) {
        Goods g&lt;/span&gt;=&lt;span&gt; goodsMapper.get(id);
        goodsMapper.delete(g.getId());
        
        GoodsCategory gcate&lt;/span&gt;=&lt;span&gt; categoryMapper.get(g.getCategoryId());
        gcate.setGoodsCount(gcate.getGoodsCount()&lt;/span&gt;-1&lt;span&gt;);
        categoryMapper.update(gcate);
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果有图片，则同时删除图片&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(g.getPicture()!=&lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span&gt;g.getPicture().isEmpty()) {
            
            String picPath&lt;/span&gt;= getRequest().getServletContext().getRealPath(&quot;/&quot;) +&lt;span&gt; g.getPicture();
            File file &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; File(picPath);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(file.exists()) {
                file.delete();
            }
        }
        
        logger.info(&lt;/span&gt;&quot;deleted goods - id:&quot; +&lt;span&gt; g.getId());
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;GoodsCategory&amp;gt;&lt;span&gt; getAllGoodsCategoryList(){
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; categoryMapper.getAll();
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; insertGoodsCategory(GoodsCategory goodsCategory) {
        categoryMapper.insert(goodsCategory);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateGoodsCategory(GoodsCategory goodsCategory) {
        categoryMapper.update(goodsCategory);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteGoodsCategory(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id) {
        categoryMapper.delete(id);
    }


    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String saveGoodsPic(MultipartFile uploadGoodsPic) {
        
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(uploadGoodsPic==&lt;span&gt;null&lt;/span&gt; ||&lt;span&gt; uploadGoodsPic.isEmpty()) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }
        
        String fileName &lt;/span&gt;=&lt;span&gt; uploadGoodsPic.getOriginalFilename();
        
        String extName &lt;/span&gt;= fileName.substring(fileName.lastIndexOf(&quot;.&quot;&lt;span&gt;));
        
        String newFileName&lt;/span&gt;=UUID.randomUUID().toString()+&lt;span&gt;extName;
        File file &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; File(getFileSavePath(newFileName));
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;file.exists()) {
            file.getParentFile().mkdirs();
        }
        
        
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            uploadGoodsPic.transferTo(file);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;return file.toURI().toURL().toString();&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt;&lt;span&gt; getUrlPath(file.getAbsolutePath());
            
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IllegalStateException e) {
            e.printStackTrace();
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
            e.printStackTrace();
        }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }



    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String getFileSavePath(String fileName) {
        String realPath &lt;/span&gt;=getRequest().getServletContext().getRealPath(&quot;/uploadimgs/&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; realPath +&lt;span&gt; fileName;
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String getUrlPath(String filePath) {
        String rootPath&lt;/span&gt;= getRequest().getServletContext().getRealPath(&quot;/&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; filePath.replace(rootPath, &quot;&quot;).replaceAll(&quot;\\\\&quot;, &quot;/&quot;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; HttpServletRequest getRequest() {
        HttpServletRequest  request&lt;/span&gt;=&lt;span&gt; ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; request;
    }
    
    
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ShoppingOrderServiceImpl.java&lt;/span&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service.impl;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.math.BigDecimal;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Transactional;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.mapper.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.service.ShoppingOrderService;

@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ShoppingOrderServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; ShoppingOrderService  {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingOrderMapper  orderMapper;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingOrderDetailMapper orderDetailMapper;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingCartMapper shoppingCartMapper;
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingOrderExtMapper shoppingOrderExtMapper;
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; insertShoppingCart(ShoppingCart shoppingCart) {
        ShoppingCart cart&lt;/span&gt;=&lt;span&gt;shoppingCartMapper.get(shoppingCart.getShopper(), shoppingCart.getGoodsId());
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(cart==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            shoppingCartMapper.insert(shoppingCart);
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            cart.setQty(cart.getQty()&lt;/span&gt;+&lt;span&gt;shoppingCart.getQty());
            shoppingCartMapper.update(cart);
        }
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteShoppingCart(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; shoppingCartId) {
        shoppingCartMapper.deleteItem(shoppingCartId);
    }
    
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ShoppingOrder getShoppingOrder(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; orderMapper.selectByPrimaryKey(id);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;ShoppingOrder&amp;gt;&lt;span&gt; getShoppingOrderList(String shopper) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shoppingOrderExtMapper.selectAllByShopper(shopper);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;ShoppingOrderDetail&amp;gt; getShoppingOrderDetail(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; orderId) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; orderDetailMapper.selectByOrderId(orderId);
    }

    @Transactional
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; createShoppingOrderByShopper(String shopper) {
        
        List&lt;/span&gt;&amp;lt;ShoppingCart&amp;gt; carts=&lt;span&gt; shoppingCartMapper.getList(shopper);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(carts==&lt;span&gt;null&lt;/span&gt; || carts.size()&amp;lt;=0&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
        
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; totalQty=0&lt;span&gt;;
        BigDecimal totalPrc&lt;/span&gt;=BigDecimal.valueOf(0&lt;span&gt;);
        List&lt;/span&gt;&amp;lt;ShoppingOrderDetail&amp;gt; orderDetails=&lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;&lt;span&gt;();
        
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(ShoppingCart c:carts) {
            totalQty&lt;/span&gt;+=&lt;span&gt;c.getQty();
            BigDecimal itemPrc&lt;/span&gt;=&lt;span&gt;c.getInGoods().getPrice().multiply(BigDecimal.valueOf(c.getQty()));
            totalPrc&lt;/span&gt;=&lt;span&gt;totalPrc.add(itemPrc);
            ShoppingOrderDetail od&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ShoppingOrderDetail();
            od.setGoodsid(c.getGoodsId());
            od.setQty(c.getQty());
            od.setTotalprice(itemPrc);
            od.setCreateby(shopper);
            od.setCreatetime(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
            
            orderDetails.add(od);
        }
        
        ShoppingOrder order&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ShoppingOrder();
        order.setShopper(shopper);
        order.setTotalqty(totalQty);
        order.setTotalprice(totalPrc);
        order.setCreateby(shopper);
        order.setCreatetime(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
        order.setIscompleted(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        
        insertShoppingOrderWithDetail(order,orderDetails);
        
        clearShoppingCart(shopper);
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }
    
    @Transactional
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; insertShoppingOrderWithDetail(ShoppingOrder order, List&amp;lt;ShoppingOrderDetail&amp;gt;&lt;span&gt; orderDetails) {
        
        orderMapper.insert(order);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; orderId=&lt;span&gt;order.getId();
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(ShoppingOrderDetail od:orderDetails) {
            od.setShoppingorderid(orderId);
            orderDetailMapper.insert(od);
        }
    }
    

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteShoppingOrderDetail(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; orderDetailId) {
        
        orderDetailMapper.deleteByPrimaryKey(orderDetailId);
    }

    @Transactional
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteShoppingOrderWithDetail(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; orderId) {
        
        orderMapper.deleteByPrimaryKey(orderId);
        orderDetailMapper.deleteByOrderId(orderId);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateShoppingOrder(ShoppingOrder order) {
        orderMapper.updateByPrimaryKey(order);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;ShoppingCart&amp;gt;&lt;span&gt; getShoppingCartList(String shopper) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shoppingCartMapper.getList(shopper);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getShoppingCartBuyCount(String shopper) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shoppingCartMapper.getBuyCount(shopper);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; clearShoppingCart(String shopper) {
        shoppingCartMapper.delete(shopper);
    }





}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;4.3编写基于VUE前端框架实现的相关UI界面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　4.3.1.VUE是什么？如何使用VUE前端框架设计页面？认真阅读官方中文教程就可以了：&lt;a href=&quot;https://cn.vuejs.org/v2/guide/index.html&quot; target=&quot;_blank&quot;&gt;https://cn.vuejs.org/v2/guide/index.html&lt;/a&gt; ，这里只是着重说明一下，VUE是实现了MVVM框架，使用VUE的核心组件：&lt;strong&gt;模板、路由、数据双向绑定&lt;/strong&gt;等特性能够设计出很牛逼的SPA（单WEB页面的多UI交互的应用），本人（梦在旅途）VUE只是初学者，故在本示例中我只是使用VUE的最基本的一些功能属性（如：el：指定VUE的渲染范围（绑定的作用域）、data（数据模型MODEL）、computed（动态计算属性）、created（VUE初始化后触发的事件）、methods（绑定自定义方法））&lt;/p&gt;
&lt;p&gt;　　4.3.2.由于采用前后端分离，完全可以一个项目全是静态的VUE HTML模板，另一个项目是基于spring boot REST Api项目，但这里是演示，故采取在同一个项目中，我这里是在webapp目录下创建相关的HTML视图页面，如果不在同一个项目中，注意基于spring boot REST Api项目中需要设置能够允许跨域访问，所有HTML视图代码如下：&lt;/p&gt;
&lt;p&gt;index.html（商品列表，主页）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d0a6d80f-308b-41ac-b7fc-4ad7ea2e565c')&quot; readability=&quot;41.5&quot;&gt;&lt;img id=&quot;code_img_closed_d0a6d80f-308b-41ac-b7fc-4ad7ea2e565c&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d0a6d80f-308b-41ac-b7fc-4ad7ea2e565c&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d0a6d80f-308b-41ac-b7fc-4ad7ea2e565c',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d0a6d80f-308b-41ac-b7fc-4ad7ea2e565c&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;78&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;梦在旅途的电商小店Demo-Power by Spring Boot+MyBatis-Boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;author&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;www.zuowenjun.cn&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    #catesbox ul li&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid green&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;cursor&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;pointer&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .clfx &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;clear&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;both&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .gpic&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    #goodsbox table &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-collapse&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;collapse&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    #goodsbox table tr &amp;gt;*&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    li.active&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;orange&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;font-weight&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;bold&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    #copy&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    body&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;padding-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;51px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    #topbar&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;WhiteSmoke&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; fixed&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid darkgray&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;topbar&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/cartlist.html&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;购物车(已加入商品数量：{{cartCount}})&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/orderlist.html&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;订单中心&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/admin.html&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;管理后台&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品类目：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;catesbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;c in cates&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;v-on:click&lt;/span&gt;&lt;span&gt;=&quot;getGoodsListByCategory(c)&quot;&lt;/span&gt;&lt;span&gt; v-bind:class&lt;/span&gt;&lt;span&gt;=&quot;{active:c.categoryName==curcate}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{c.categoryName}}({{c.goodsCount}})&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;clfx&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;当前浏览的商品分类：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{curcate}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;goodsbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品图片&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;g in goods&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;v-bind:src&lt;/span&gt;&lt;span&gt;=&quot;g.picture&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;gpic&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;v-bind:href&lt;/span&gt;&lt;span&gt;=&quot;'/detail.html?gid=' + g.id&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.title}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;￥{{g.price}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;v-on:click&lt;/span&gt;&lt;span&gt;=&quot;addToShoppingCart(g)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;加入购物车&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;copy&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    Copyright &lt;/span&gt;&lt;span&gt;&amp;amp;copy;&lt;/span&gt;2019 &lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;
    www.zuowenjun.cn and zuowj.cnblogs.com demo all rights.
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
            el:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            data:{
                cartCount:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,
                cates:[],
                goods:[],
                curcate:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ALL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
            },
            created:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                 &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/categorys&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     self.cates&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.cates));&lt;/span&gt;
&lt;span&gt;                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取categorys失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
                 
                 &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/cartlist&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     self.cartCount&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body.length;  
                     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.goods));&lt;/span&gt;
&lt;span&gt;                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取购物车信息失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
                 
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;按分页检索商品列表&lt;/span&gt;
                 &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.getGoodsListByPage(&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
            },
            methods:{
                getGoodsListByCategory:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(cate){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;按类别检索商品列表&lt;/span&gt;
                     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/goods/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; cate.id).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         self.goods&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;   
                         self.curcate&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;cate.categoryName;
                         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.goods));&lt;/span&gt;
&lt;span&gt;                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取goods失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                },
                getGoodsListByPage:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(ps,pno){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;按分页检索商品列表&lt;/span&gt;
                     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/goods&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;?pagesize=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;ps &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;amp;page=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; pno).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         self.goods&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                         self.curcate&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ALL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.goods));&lt;/span&gt;
&lt;span&gt;                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取goods失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                },
                addToShoppingCart:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(goods){
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;加入购物车&lt;/span&gt;
                    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; qty&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;prompt(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;请输入购买数量&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/addToShoppingCart&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,{goodsid:goods.id,goodsqty:qty}).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; rs&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;
                         alert(rs.msg);
                         self.cartCount&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;rs.data.cartCount;
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;加入购物车失败&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                }
            }
        });

    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;detail.html（商品详情）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b612f14d-a15f-4ad1-9b98-7f83f27e7422')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_b612f14d-a15f-4ad1-9b98-7f83f27e7422&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b612f14d-a15f-4ad1-9b98-7f83f27e7422&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b612f14d-a15f-4ad1-9b98-7f83f27e7422',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b612f14d-a15f-4ad1-9b98-7f83f27e7422&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品详情 -梦在旅途的电商小店&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;author&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;www.zuowenjun.cn&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .clfx &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;clear&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;both&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .row&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;10px 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .lbox&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;40%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .rbox&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;right&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .rbox ul li&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50px auto&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        body&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;padding-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;51px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        #topbar&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;WhiteSmoke&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; fixed&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid darkgray&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;topbar&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/cartlist.html&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;购物车(已加入商品数量：{{cartCount}})&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;/admin.html&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;管理后台&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;:src&lt;/span&gt;&lt;span&gt;=&quot;goods.picture&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:100%;height:100%;margin:0;padding:0;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;rbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;strong&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{goods.title}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;strong&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格：￥{{goods.price}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;购买数量：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&quot;buyqty&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;购买价格：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{buyprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;addToShoppingCart&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;加入购物车&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;clfx&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品详细描述：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{goods.introduction}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
            el:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            data:{
                cartCount:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,
                buyqty:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
                goods:{}
            },
            created:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; gid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; getQueryString(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gid&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;

                 &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/goods-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; gid).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     self.goods&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.goods));&lt;/span&gt;
&lt;span&gt;                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取goods失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
                 
                 &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/cartlist&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     self.cartCount&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body.length;  
                     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.goods));&lt;/span&gt;
&lt;span&gt;                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取购物车信息失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
                 
            },
            computed:{
                buyprice:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.buyqty &lt;/span&gt;&lt;span&gt;*&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.goods.price).toFixed(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
                }
            },
            methods:{
                addToShoppingCart:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(this.buyqty);&lt;/span&gt;
                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;加入购物车&lt;/span&gt;
                    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/addToShoppingCart&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,{goodsid:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.goods.id,goodsqty:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.buyqty}).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; rs&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;
                         alert(rs.msg);
                         self.cartCount&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;rs.data.cartCount;
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;加入购物车失败&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                }
            }
        });
        
        &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; getQueryString(name) { 
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; reg &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RegExp(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;(^|&amp;amp;)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; name &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=([^&amp;amp;]*)(&amp;amp;|$)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;); 
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; r &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; window.location.search.substr(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;).match(reg); 
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (r &lt;/span&gt;&lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; unescape(r[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]); 
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;; 
        }
        
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;cartlist.html（购物车）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3a250422-82cd-4017-814e-7ef594c8b551')&quot; readability=&quot;40&quot;&gt;&lt;img id=&quot;code_img_closed_3a250422-82cd-4017-814e-7ef594c8b551&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3a250422-82cd-4017-814e-7ef594c8b551&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3a250422-82cd-4017-814e-7ef594c8b551',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3a250422-82cd-4017-814e-7ef594c8b551&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;75&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;购物车详情 -梦在旅途的电商小店&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;author&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;www.zuowenjun.cn&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    .toolbar&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;10px 5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .carttable&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid gray&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .carttable tr &amp;gt;*&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid gray&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .buybtn&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;green&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;280px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;white&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20pt&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    #copy&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;toolbar&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;deleteItem()&quot;&lt;/span&gt;&lt;span&gt; :disabled&lt;/span&gt;&lt;span&gt;=&quot;carts.length==0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;移出购物车&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;clearCart()&quot;&lt;/span&gt;&lt;span&gt; :disabled&lt;/span&gt;&lt;span&gt;=&quot;carts.length==0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;清空购物车&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;carttable&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;选择&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品ID&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;预购买数量&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;添加时间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;c in carts&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;chkitem&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;checkitem(c,$event.target)&quot;&lt;/span&gt;&lt;span&gt; :checked&lt;/span&gt;&lt;span&gt;=&quot;chkedItemIds.indexOf(c.id)&amp;gt;-1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{c.goodsId}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{c.inGoods.title}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{c.qty}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;￥{{(c.inGoods.price * c.qty).toFixed(2)}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{c.addedTime}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;span&gt;=&quot;carts.length==0&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;text-align: center;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;colspan&lt;/span&gt;&lt;span&gt;=&quot;6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;空空如也，赶紧选购商品吧！~&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;text-align: center;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;buybtn&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;createOrder()&quot;&lt;/span&gt;&lt;span&gt; :disabled&lt;/span&gt;&lt;span&gt;=&quot;carts.length==0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;立即下单&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;copy&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    Copyright &lt;/span&gt;&lt;span&gt;&amp;amp;copy;&lt;/span&gt;2019 &lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;
    www.zuowenjun.cn and zuowj.cnblogs.com demo all rights.
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
            el:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            data:{
                carts:[],
                chkedItemIds:[]
            },
            created:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;

                 &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/cartlist&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     self.carts&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.carts));&lt;/span&gt;
&lt;span&gt;                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取购物车信息失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
                 
            },
            methods:{
                checkitem:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(cart,chk){
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(chk.checked);&lt;/span&gt;
                    &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(chk.checked){
                        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.chkedItemIds.push(cart.id);
                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.chkedItemIds.remove(cart.id);
                    }
                },
                deleteItem:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.chkedItemIds));&lt;/span&gt;
                     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/deletecartitems-many&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,self.chkedItemIds).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){ 
                         self.carts&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; self.carts.filter(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(e){ &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.chkedItemIds.indexOf(e.id)&lt;/span&gt;&lt;span&gt;&amp;lt;=-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;});
                         alert(res.body.msg);
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;删除失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                },
                clearCart:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/deletecartitems-all&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){ 
                         self.carts&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[];
                         alert(res.body.msg);
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;删除失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                },
                createOrder:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/createorder&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){ 
                         alert(res.body.msg);
                         &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(res.body.code&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如查下单成功，则清空购物车&lt;/span&gt;
&lt;span&gt;                             self.carts&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[];
                         }
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;下单失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                }
            }
        });
        
        Array.prototype.remove &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(val) { 
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; index &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.indexOf(val); 
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (index &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) { 
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.splice(index, &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;); 
                } 
            };
                
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;orderlist.html（订单中心）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('eb2a118c-f0c7-4964-87fc-4d0abd3d824a')&quot; readability=&quot;39.5&quot;&gt;&lt;img id=&quot;code_img_closed_eb2a118c-f0c7-4964-87fc-4d0abd3d824a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_eb2a118c-f0c7-4964-87fc-4d0abd3d824a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('eb2a118c-f0c7-4964-87fc-4d0abd3d824a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_eb2a118c-f0c7-4964-87fc-4d0abd3d824a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;74&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;订单详情 -梦在旅途的电商小店&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    table&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;solid 1px blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-collapse&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; collapse&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;10px 1px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    table tr &amp;gt;*&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;solid 1px blue,padding:5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;dotted 1px gray&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .cfmbar&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .cfmbar button&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#ffffff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;10px 50px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    #copy&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;订单列表：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;订单号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品数量&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;订单价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;完成否(收货确认)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;创建时间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;查看订单详情&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;o in shoppingOrders&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{o.id}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{o.totalqty}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{o.totalprice.toFixed(2)}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{o.iscompleted?&quot;已收货&quot;:&quot;待收货&quot;}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{o.createtime}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;showOrderDetail(o)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;查看&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;span&gt;=&quot;shoppingOrders.length==0&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;text-align: center;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;colspan&lt;/span&gt;&lt;span&gt;=&quot;6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;没有任何订单信息！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;span&gt;=&quot;viewOrder!=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;订单号【{{viewOrder.id}}】详情：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品ID&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;购买数量&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;费用&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;od in viewOrderDetails.details&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{od.goodsid}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{goodsName(od)}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{od.qty}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;￥{{od.totalprice.toFixed(2)}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;cfmbar&quot;&lt;/span&gt;&lt;span&gt; v-if&lt;/span&gt;&lt;span&gt;=&quot;!viewOrder.iscompleted&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;confirmOrderCompleted(viewOrder)&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;确认完成（已收货）&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;copy&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    Copyright &lt;/span&gt;&lt;span&gt;&amp;amp;copy;&lt;/span&gt;2019 &lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;
    www.zuowenjun.cn and zuowj.cnblogs.com demo all rights.
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
            el:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            data:{
                shoppingOrders:[],
                viewOrder:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                viewOrderDetails:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;
            },
            created:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                
                 &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/orders&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     self.shoppingOrders&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.shoppingOrders));&lt;/span&gt;
&lt;span&gt;                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取orders失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
            },
            computed:{
                goodsName(){&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;利用JS闭包实现传参&lt;/span&gt;
                    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(od){
                        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; goods&lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.viewOrderDetails.goodss.filter(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(g){&lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; g.id&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;od.goodsid })[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(od.goodsid);&lt;/span&gt;
                        &lt;span&gt;return&lt;/span&gt;&lt;span&gt; goods.title;
                    }
                }
            },
            methods:{
                showOrderDetail:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(o){
                     &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/orderdetail&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,{orderId:o.id}).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(res.body.code&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                             self.viewOrderDetails&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body.data;  
                             &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.viewOrderDetails));&lt;/span&gt;
&lt;span&gt;                         }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                             alert(res.body.msg);
                             self.viewOrderDetails&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
                             o&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
                         }
                         self.viewOrder&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;o;
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取orderdetail失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                },
                confirmOrderCompleted:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(o){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/confirmOrderCompleted&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,{orderId:o.id}).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                        alert(res.body.msg);
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(res.body.code&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                            self.viewOrder.iscompleted&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                        }
                    }),&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;确认订单完成失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    };
                }
            }
        });
        
        &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; getQueryString(name) { 
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; reg &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RegExp(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;(^|&amp;amp;)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; name &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=([^&amp;amp;]*)(&amp;amp;|$)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;); 
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; r &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; window.location.search.substr(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;).match(reg); 
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (r &lt;/span&gt;&lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; unescape(r[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]); 
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;; 
        }
        
        
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;admin.html（管理后台，由于DEMO，故只实现商品的增、删功能，其余管理功能未实现，仅作演示）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('088bb95e-f5ac-44d8-90d4-140805a26847')&quot; readability=&quot;54&quot;&gt;&lt;img id=&quot;code_img_closed_088bb95e-f5ac-44d8-90d4-140805a26847&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_088bb95e-f5ac-44d8-90d4-140805a26847&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('088bb95e-f5ac-44d8-90d4-140805a26847',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_088bb95e-f5ac-44d8-90d4-140805a26847&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;103&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;管理后台 -梦在旅途的电商小店&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;author&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;www.zuowenjun.cn&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    table&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;solid 1px blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-collapse&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; collapse&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;10px 1px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    table tr &amp;gt;*&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;solid 1px blue,padding:5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;dotted 1px gray&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .gpic&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;fieldset&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;legend&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;管理商品：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;legend&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;colgroup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:100px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:300px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;col &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;colgroup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品ID&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品图片&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;商品介绍&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;单价&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别ID&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;最后编辑者&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;最后编辑时间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;background-color:orange;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{editgoods.id}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;editgoods.title&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;v-bind:src&lt;/span&gt;&lt;span&gt;=&quot;editgoods.picture&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;gpic&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;upload&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;gpicfile&quot;&lt;/span&gt;&lt;span&gt; @change&lt;/span&gt;&lt;span&gt;=&quot;selectimg($event.target)&quot;&lt;/span&gt;&lt;span&gt; accept&lt;/span&gt;&lt;span&gt;=&quot;image/png,image/gif,image/jpeg&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;textarea &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&quot;editgoods.introduction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;textarea&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;editgoods.price&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&quot;editgoods.categoryId&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;c in categorys&quot;&lt;/span&gt;&lt;span&gt; v-bind:value&lt;/span&gt;&lt;span&gt;=&quot;c.id&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{c.categoryName}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{editgoods.lastEditBy}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{editgoods.lastEditTime}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;savegoods(editgoods)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;保存&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;g in goodss&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.id}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.title}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;v-bind:src&lt;/span&gt;&lt;span&gt;=&quot;g.picture&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;gpic&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.introduction}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.price}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.categoryId}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.lastEditBy}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{g.lastEditTime}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;editgoods(g)&quot;&lt;/span&gt;&lt;span&gt; disabled&lt;/span&gt;&lt;span&gt;=&quot;disabled&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; UI暂不实现修改，禁用 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&quot;delgoods(g)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;fieldset&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
            el:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            data:{
                categorys:[],
                goodss:[],
                editgoods:{
                    id:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                    title:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                    picture:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                    price:&lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;,
                    introduction:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                    categoryId:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
                    lastEditBy:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;zuowenjun&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    lastEditTime:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;
                }
            },
            created:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/categorys&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.categorys&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                    },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取categorys失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    });
                
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.getGoodsListByPage(&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;DEMO,只加载第1页&lt;/span&gt;
&lt;span&gt;                 
            },
            methods:{
                getGoodsListByPage:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(ps,pno){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; self &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;按分页检索商品列表&lt;/span&gt;
                     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/goods&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;?pagesize=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;ps &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;amp;page=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; pno).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         self.goodss&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;  
                         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;alert(JSON.stringify(self.goods));&lt;/span&gt;
&lt;span&gt;                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;获取goods失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                },
                selectimg:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(el){
                    
                    let gpic&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;el.files[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
                    let type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;gpic.type;&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;文件的类型，判断是否是图片&lt;/span&gt;
&lt;span&gt;                    let size&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;gpic.size;&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;文件的大小，判断图片的大小&lt;/span&gt;
                    &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;image/gif, image/jpeg, image/png, image/jpg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.indexOf(type) &lt;/span&gt;&lt;span&gt;==&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;){
                        alert(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;请选择我们支持的图片格式！&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                    }
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(size&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;3145728&lt;/span&gt;&lt;span&gt;){
                        alert(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;请选择3M以内的图片！&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                    }
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; uri &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;;
                    
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods.picture&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;URL.createObjectURL(gpic);
                },
                savegoods:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(g){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; fileDom&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;document.getElementById(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gpicfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    let formData &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; FormData();
                    formData.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods.id);
                    formData.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods.title);
                    formData.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;picture&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, fileDom.files[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
                    formData.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;price&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods.price);
                    formData.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;introduction&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods.introduction);
                    formData.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;categoryId&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods.categoryId);
                    
                    let config &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
                              headers: {
                                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Content-Type&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;multipart/form-data&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                              }
                            }
                    
                      &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/savegoods&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, formData, config).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (res) {
                          alert(res.body.msg);
                          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(res.body.code&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                              &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.goodss.unshift(res.body.data);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;插入到数组最新面&lt;/span&gt;
                              &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.editgoods&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;重新初始化，以便实现清空所有编辑框&lt;/span&gt;
&lt;span&gt;                                      id:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                                    title:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                                    picture:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                                    price:&lt;/span&gt;&lt;span&gt;0.00&lt;/span&gt;&lt;span&gt;,
                                    introduction:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                                    categoryId:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
                                    lastEditBy:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;zuowenjun&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                                    lastEditTime:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;
                                };
                          }
                        });
                },
                delgoods:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(g){
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.get(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/delgoods/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; g.id).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         alert(res.body.msg); 
                         &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(res.body.code&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                             &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.goodss.remove(g);
                         }
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;删除goods失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                }
            }
        });
    
        
        Array.prototype.remove &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(val) { 
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; index &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.indexOf(val); 
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (index &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) { 
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.splice(index, &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;); 
            } 
        };
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;前端交互所需要API（因为是DEMO，故所有的API ACTION方法都在Apicontroller中），代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('2a7ee73b-769d-4933-b0ec-5478a187c1fe')&quot; readability=&quot;56&quot;&gt;&lt;img id=&quot;code_img_closed_2a7ee73b-769d-4933-b0ec-5478a187c1fe&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2a7ee73b-769d-4933-b0ec-5478a187c1fe&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('2a7ee73b-769d-4933-b0ec-5478a187c1fe',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2a7ee73b-769d-4933-b0ec-5478a187c1fe&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;107&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.math.BigDecimal;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Map;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.GetMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.PathVariable;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.PostMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestBody;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMethod;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestParam;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RestController;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.multipart.MultipartFile;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.domain.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; cn.zuowenjun.boot.service.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
 * ALL REST API 
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@RestController
@RequestMapping(&lt;/span&gt;&quot;/api&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ApiController {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; GoodsService goodsService;

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShoppingOrderService shoppingOrderService;

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ShopUserService shopUserService;
    
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String getCurrentShopper() {
        String shopper &lt;/span&gt;=&lt;span&gt; shopUserService.getCurrentLoginUser();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shopper;
    }
    
    @PostMapping(value&lt;/span&gt;=&quot;/login&quot;,produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ApiResultMsg login(@RequestBody Map&amp;lt;String,String&amp;gt;&lt;span&gt; requestMap) {
        String userid&lt;/span&gt;=requestMap.get(&quot;userid&quot;&lt;span&gt;);
        String upwd&lt;/span&gt;=requestMap.get(&quot;upwd&quot;&lt;span&gt;);
        String loginResult&lt;/span&gt;=&lt;span&gt; shopUserService.login(userid, upwd);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(loginResult==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ApiResultMsg(0,&quot;OK&quot;,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ApiResultMsg(-1,&quot;登录失败：&quot; + loginResult,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        }
        
    }

    @GetMapping(value &lt;/span&gt;= &quot;/categorys&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;GoodsCategory&amp;gt;&lt;span&gt; getAllGoodsCategorys() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsService.getAllGoodsCategoryList();
    }

    @GetMapping(value &lt;/span&gt;= &quot;/goods/{cateid}&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Goods&amp;gt; getGoodsList(@PathVariable(name = &quot;cateid&quot;) &lt;span&gt;int&lt;/span&gt;&lt;span&gt; categoryid) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsService.getGoodsListByCategory(categoryid);
    }

    @GetMapping(value &lt;/span&gt;= &quot;/goods&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Goods&amp;gt; getGoodsList(@RequestParam(name = &quot;pagesize&quot;, required = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;) String spageSize,
            @RequestParam(name &lt;/span&gt;= &quot;page&quot;, required = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;) String spageNo) {

        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; pageSize =&lt;span&gt; tryparseToInt(spageSize);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; pageNo =&lt;span&gt; tryparseToInt(spageNo);

        pageSize &lt;/span&gt;= pageSize &amp;lt;= 0 ? 10&lt;span&gt; : pageSize;
        pageNo &lt;/span&gt;= pageNo &amp;lt;= 1 ? 1&lt;span&gt; : pageNo;
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsService.getGoodsListByPage(pageSize, pageNo);
    }

    @GetMapping(value &lt;/span&gt;= &quot;/goodsmany&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Goods&amp;gt; getGoodsListByMultIds(@RequestBody &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] ids) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsService.getGoodsListByMultIds(ids);
    }

    @PostMapping(value &lt;/span&gt;= &quot;/addToShoppingCart&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ApiResultMsg addToShoppingCart(@RequestBody Map&amp;lt;String, Integer&amp;gt;&lt;span&gt; json) {
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; goodsId = json.get(&quot;goodsid&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; qty = json.get(&quot;goodsqty&quot;&lt;span&gt;);
        ApiResultMsg msg &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ApiResultMsg();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (goodsId &amp;lt;= 0&lt;span&gt;) {
            msg.setCode(&lt;/span&gt;101&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;该商品ID无效&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;
        }

        String shopper &lt;/span&gt;=&lt;span&gt; getCurrentShopper();
        ShoppingCart shoppingCart &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ShoppingCart(0, shopper, goodsId, qty, &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());

        shoppingOrderService.insertShoppingCart(shoppingCart);

        msg.setCode(&lt;/span&gt;0&lt;span&gt;);
        msg.setMsg(&lt;/span&gt;&quot;添加购物车成功！&quot;&lt;span&gt;);

        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; cartCount =&lt;span&gt; shoppingOrderService.getShoppingCartBuyCount(shopper);
        HashMap&lt;/span&gt;&amp;lt;String, Object&amp;gt; data = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
        data.put(&lt;/span&gt;&quot;cartCount&quot;&lt;span&gt;, cartCount);

        msg.setData(data);

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;
    }

    @GetMapping(value &lt;/span&gt;= &quot;/goods-{gid}&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Goods getGoods(@PathVariable(&quot;gid&quot;) &lt;span&gt;int&lt;/span&gt;&lt;span&gt; goodsId) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; goodsService.getGoods(goodsId);
    }

    @GetMapping(value &lt;/span&gt;= &quot;/cartlist&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;ShoppingCart&amp;gt;&lt;span&gt; getShoppingCartList() {
        String shopper &lt;/span&gt;=&lt;span&gt; getCurrentShopper();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shoppingOrderService.getShoppingCartList(shopper);
    }

    @PostMapping(value &lt;/span&gt;= &quot;/deletecartitems-{mode}&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ApiResultMsg deleteShoppingCartItems(@PathVariable(&quot;mode&quot;&lt;span&gt;) String mode,
            @RequestBody(required &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;) &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[] cartIds) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (mode.equalsIgnoreCase(&quot;all&quot;&lt;span&gt;)) {
            String shopper &lt;/span&gt;=&lt;span&gt; getCurrentShopper();
            shoppingOrderService.clearShoppingCart(shopper);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id : cartIds) {
                shoppingOrderService.deleteShoppingCart(id);
            }
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ApiResultMsg(0, &quot;删除成功！&quot;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
    }

    @PostMapping(value &lt;/span&gt;= &quot;/createorder&quot;, produces = &quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ApiResultMsg createShoppingOrder() {

        String shopper &lt;/span&gt;=&lt;span&gt; getCurrentShopper();
        ApiResultMsg msg &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ApiResultMsg();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (shoppingOrderService.createShoppingOrderByShopper(shopper)) {
            msg.setCode(&lt;/span&gt;0&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;恭喜你，下单成功！&quot;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            msg.setCode(&lt;/span&gt;101&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;对不起，下单失败，请重试！&quot;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;

    }

    @RequestMapping(path &lt;/span&gt;= &quot;/orders&quot;, produces = &quot;application/json;charset=utf-8&quot;, method = RequestMethod.GET) &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 等同于@GetMapping&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; List&amp;lt;ShoppingOrder&amp;gt;&lt;span&gt; getShoppingOrderList() {
        String shopper &lt;/span&gt;=&lt;span&gt; getCurrentShopper();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shoppingOrderService.getShoppingOrderList(shopper);
    }

    @RequestMapping(path &lt;/span&gt;= &quot;/orderdetail&quot;, produces = &quot;application/json;charset=utf-8&quot;, method = RequestMethod.POST) &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 等同于@PostMapping&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; ApiResultMsg getShoppingOrderDetail(@RequestBody Map&amp;lt;String, String&amp;gt;&lt;span&gt; requestJosn) {
        String orderId &lt;/span&gt;= requestJosn.get(&quot;orderId&quot;&lt;span&gt;);
        List&lt;/span&gt;&amp;lt;ShoppingOrderDetail&amp;gt; orderDetails =&lt;span&gt; shoppingOrderService.getShoppingOrderDetail(tryparseToInt(orderId));
        ApiResultMsg msg &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ApiResultMsg();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (orderDetails.size() &amp;gt; 0&lt;span&gt;) {

            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;[] goodsIds = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;[orderDetails.size()];
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; orderDetails.size(); i++&lt;span&gt;) {
                goodsIds[i] &lt;/span&gt;=&lt;span&gt; orderDetails.get(i).getGoodsid();
            }

            List&lt;/span&gt;&amp;lt;Goods&amp;gt; goodsList =&lt;span&gt; goodsService.getGoodsListByMultIds(goodsIds);
            HashMap&lt;/span&gt;&amp;lt;String, Object&amp;gt; data = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
            data.put(&lt;/span&gt;&quot;details&quot;&lt;span&gt;, orderDetails);
            data.put(&lt;/span&gt;&quot;goodss&quot;&lt;span&gt;, goodsList);
            
            msg.setCode(&lt;/span&gt;0&lt;span&gt;);
            msg.setData(data);

        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            msg.setCode(&lt;/span&gt;101&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;获取订单详情信息失败！&quot;&lt;span&gt;);
        }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;

    }
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这里示例配置多个URL请求路径&lt;/span&gt;
    @PostMapping(path= {&quot;/confirmOrderCompleted&quot;,&quot;/cfmordercompl&quot;},produces=&quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ApiResultMsg confirmOrderCompleted(@RequestBody Map&amp;lt;String, String&amp;gt;&lt;span&gt; requestJosn) {
        String reqOrderId &lt;/span&gt;= requestJosn.get(&quot;orderId&quot;&lt;span&gt;);
        ApiResultMsg msg&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ApiResultMsg();
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; orderId=&lt;span&gt;tryparseToInt(reqOrderId);
            ShoppingOrder  order&lt;/span&gt;=&lt;span&gt; shoppingOrderService.getShoppingOrder(orderId);
            order.setIscompleted(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            shoppingOrderService.updateShoppingOrder(order);
            msg.setCode(&lt;/span&gt;0&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;确认订单完成成功（已收货）&quot;&lt;span&gt;);
        }&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            msg.setCode(&lt;/span&gt;101&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;确认订单完成失败：&quot; +&lt;span&gt; e.getMessage());
        }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;
    }
    
    
    @PostMapping(path&lt;/span&gt;=&quot;/savegoods&quot;,produces=&quot;application/json;charset=utf-8&quot;,consumes=&quot;multipart/form-data&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ApiResultMsg saveGoods(@RequestParam(&quot;picture&quot;&lt;span&gt;) MultipartFile gpic,HttpServletRequest request) {
        ApiResultMsg msg&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ApiResultMsg();
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
        {
            Goods goods&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Goods();
            goods.setId(tryparseToInt(request.getParameter(&lt;/span&gt;&quot;id&quot;&lt;span&gt;)));
            goods.setTitle(request.getParameter(&lt;/span&gt;&quot;title&quot;&lt;span&gt;));
            goods.setPrice(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; BigDecimal(request.getParameter(&quot;price&quot;&lt;span&gt;)));
            goods.setIntroduction(request.getParameter(&lt;/span&gt;&quot;introduction&quot;&lt;span&gt;));
            goods.setCategoryId(tryparseToInt(request.getParameter(&lt;/span&gt;&quot;categoryId&quot;&lt;span&gt;)));
            goods.setLastEditBy(getCurrentShopper());
            goods.setLastEditTime(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
            
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(goods.getId()&amp;lt;=0&lt;span&gt;) {
                goodsService.insertGoods(goods, gpic);
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                goodsService.updateGoods(goods, gpic);
            }
            
            msg.setCode(&lt;/span&gt;0&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;保存成功！&quot;&lt;span&gt;);
            msg.setData(goods);
            
        }&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            msg.setCode(&lt;/span&gt;101&lt;span&gt;);
            msg.setMsg(&lt;/span&gt;&quot;保存失败：&quot; +&lt;span&gt; e.getMessage());
        }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;
        
    }
    
    @GetMapping(path&lt;/span&gt;=&quot;/delgoods/{gid}&quot;,produces=&quot;application/json;charset=utf-8&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ApiResultMsg deleteGoods(@PathVariable(&quot;gid&quot;) &lt;span&gt;int&lt;/span&gt;&lt;span&gt; goodsId) {
        goodsService.deleteGoods(goodsId);
        ApiResultMsg msg&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ApiResultMsg();
        msg.setCode(&lt;/span&gt;0&lt;span&gt;);
        msg.setMsg(&lt;/span&gt;&quot;删除商品成功！&quot;&lt;span&gt;);
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;
    }
    

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; tryparseToInt(String str) {
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Integer.parseInt(str);
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; -1&lt;span&gt;;
        }
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;REST API controller与普通的MVC controller用法上基本相同，只是REST API ACTION返回的是数据内容本身(@RestController或@Controller+@ResponseBody)，而MVC ACTION一般返回view&lt;/p&gt;
&lt;p&gt;　&lt;strong&gt;4.4添加身份认证拦截器、日志记录等&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　因为演示的是电商购物场景，既有下单又有后台管理，故这里我增加了登录视图及登录拦截器，以完成对部份页面及API的权限控制，实现代码如下：&lt;/p&gt;
&lt;p&gt;　　4.4.1.设计login.html（登录）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('0aa05392-7cbe-4e22-b993-6cf51f2efd3c')&quot; readability=&quot;35.5&quot;&gt;&lt;img id=&quot;code_img_closed_0aa05392-7cbe-4e22-b993-6cf51f2efd3c&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_0aa05392-7cbe-4e22-b993-6cf51f2efd3c&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('0aa05392-7cbe-4e22-b993-6cf51f2efd3c',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_0aa05392-7cbe-4e22-b993-6cf51f2efd3c&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;66&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;登录入口  -梦在旅途的电商小店&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;author&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;www.zuowenjun.cn&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt; @submit.prevent&lt;/span&gt;&lt;span&gt;=&quot;loginsubmit&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户ID：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;uid&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;密码：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;pwd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;登录&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
            el:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            data:{
                uid:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,
                pwd:&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;
            },
            methods:{
                loginsubmit:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    
                     &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.$http.post(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/api/login&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,{userid:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.uid,upwd:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.pwd}).then(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
                         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; rs&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;res.body;
                         &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(rs.code&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                             window.location.href&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;index.html&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                         }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                             alert(rs.msg);
                         }
                        },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;登录请求失败！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        });
                }
            }
        });
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　4.4.2.自定义实现HandlerInterceptor的登录验证拦截器：LoginInterceptor，代码如下：（注意我是将该拦截器放在根包中cn.zuowenjun.boot）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d899e87e-cec0-482f-b636-dd083d7b5f6f')&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_d899e87e-cec0-482f-b636-dd083d7b5f6f&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d899e87e-cec0-482f-b636-dd083d7b5f6f&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d899e87e-cec0-482f-b636-dd083d7b5f6f',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d899e87e-cec0-482f-b636-dd083d7b5f6f&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.PrintWriter;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletResponse;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpSession;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Component;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.HandlerInterceptor;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.databind.ObjectMapper;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot.domain.ApiResultMsg;

@Component
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; LoginInterceptor &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; HandlerInterceptor {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Logger logger = LoggerFactory.getLogger(LoginInterceptor.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
            &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {

        HttpSession session &lt;/span&gt;=&lt;span&gt; request.getSession();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (session.getAttribute(&quot;loginUser&quot;) == &lt;span&gt;null&lt;/span&gt;) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 未登录则转到登录页面&lt;/span&gt;
            &lt;span&gt;boolean&lt;/span&gt; isAjaxRequest = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt; isAcceptJSON = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (request.getHeader(&quot;x-requested-with&quot;) != &lt;span&gt;null&lt;/span&gt;
                    &amp;amp;&amp;amp; request.getHeader(&quot;x-requested-with&quot;).equalsIgnoreCase(&quot;XMLHttpRequest&quot;&lt;span&gt;)) {
                isAjaxRequest &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (request.getHeader(&quot;Accept&quot;) != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; request.getHeader(&quot;Accept&quot;).contains(&quot;application/json&quot;&lt;span&gt;)) {
                isAcceptJSON &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isAjaxRequest ||&lt;span&gt; isAcceptJSON) {
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;使用jackson序列化JSON&lt;/span&gt;
                ApiResultMsg msg=&lt;span&gt;new&lt;/span&gt; ApiResultMsg(-1,&quot;未登录，禁止访问&quot;,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                ObjectMapper mapper &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ObjectMapper();
                String msgJson&lt;/span&gt;=&lt;span&gt; mapper.writeValueAsString(msg);
                
                responseJson(response,msgJson);
                
            }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                
                response.sendRedirect(&lt;/span&gt;&quot;/login.html&quot;&lt;span&gt;);
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; responseJson(HttpServletResponse response, String json) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
        PrintWriter writer &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        response.setCharacterEncoding(&lt;/span&gt;&quot;UTF-8&quot;&lt;span&gt;);
        response.setContentType(&lt;/span&gt;&quot;applcation/json; charset=utf-8&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            writer &lt;/span&gt;=&lt;span&gt; response.getWriter();
            writer.print(json);

        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
            logger.error(&lt;/span&gt;&quot;response error&quot;&lt;span&gt;, e);
        } &lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (writer != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                writer.close();
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　代码比较简单，主要是判断session中是否有记录登录的用户名，如果没有则表示未登录，然后根据是AJAX请求或需要返回JSON的情况则返回JSON，否则直接跳转到login.html页面。&lt;/p&gt;
&lt;p&gt;　　4.4.3.自定义实现WebMvcConfigurer的配置类：SpringbootdemoAppConfigurer，重写addInterceptors方法，在该方法中把LoginInterceptor实例加入到拦截器管道中，以便交由spring MVC进行管理，代码如下：（同样放在根包中）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('57b082bf-1cb1-421f-878d-37fabcb6d0d7')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_57b082bf-1cb1-421f-878d-37fabcb6d0d7&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_57b082bf-1cb1-421f-878d-37fabcb6d0d7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('57b082bf-1cb1-421f-878d-37fabcb6d0d7',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_57b082bf-1cb1-421f-878d-37fabcb6d0d7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.zuowenjun.boot;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Configuration;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.servlet.config.annotation.*&lt;span&gt;;

@Configuration
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; SpringbootdemoAppConfigurer &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; WebMvcConfigurer {
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; LoginInterceptor loginInterceptor;
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addInterceptors(InterceptorRegistry registry) {
        InterceptorRegistration registration &lt;/span&gt;=&lt;span&gt; registry.addInterceptor(loginInterceptor);
        registration.addPathPatterns(&lt;/span&gt;&quot;/**&quot;&lt;span&gt;);
        registration.excludePathPatterns(&lt;/span&gt;&quot;/*.html&quot;,&quot;/uploadimgs/*&quot;,&quot;/error&quot;,&quot;/api/login&quot;,&quot;/api/categorys&quot;,&quot;/api/goods*&quot;,&quot;/api/goods/*&quot;&lt;span&gt;,
                &lt;/span&gt;&quot;/hello/*&quot;,&quot;/test/*&quot;&lt;span&gt;);
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;注意我这里是拦截所有路径，然后使用excludePathPatterns来排除不需要拦截的路径，如果需要拦截的路径比较少，可以直接指定拦截的具体路径，这样就不用排除了。&lt;/p&gt;
&lt;p&gt;　　4.4.4.另外补充一个功能点说明：一般一个应用程度都会有日志记录，这里也不能少，spring boot中默认实现了：slf4j+logback（slf4j是一个日志门面接口，logback是slf4j接口的实现，这样搭配比较好，可以随时更换日志实现框架），先在application.properties配置日志的基本参数，如下所示：(详细集成配置，可参见：&lt;a href=&quot;https://www.jianshu.com/p/88b03b03570c&quot; target=&quot;_blank&quot;&gt;https://www.jianshu.com/p/88b03b03570c&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#logging.config=xxxx  #可以指定单独的日志配置XML文件，进行更丰富的设置，这里未采用
logging.level.root=info
logging.level.cn.zuowenjun.boot.mapper=debug
logging.file=springbootdemo.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置好后，然后在相应的类中直接使用即可，用法如下：（具体可见上面的GoodsServiceImpl代码）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Logger logger=LoggerFactory.getLogger(GoodsServiceImpl.&lt;span&gt;class&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;通过日志工厂获得一个日志记录实例&lt;/span&gt;
&lt;span&gt;
logger.info(&lt;/span&gt;&quot;日志信息&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;有多个日志级别可用，但注意需要配置中的root级别相对应，比如目前是配置了info，如果使用debug，可能就不会输出日志到文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;4.5效果展示：(全部采用HTML+AJAX静态交互)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　通过以上的后端API代码+基于VUE的前端HTML，就完成了一个简单的电商物购DEMO，效果截图如下：&lt;/p&gt;
&lt;p&gt;　　主页：（加入购物车后，右上角的”购物车(已加入商品数量：0)“ 数字变自动同步更新）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190213131522407-735339920.png&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;商品详情：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190213134625974-1648942187.png&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;购物车：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190213133720361-1106042148.png&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;订单管理：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190213133832743-788966006.png&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;后台管理（商品管理）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190213134220955-560869113.png&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;添加商品后，自动加入到列表第一行，如果删除则移除删除的商品所在行&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/458152/201902/458152-20190213134315523-213071901.png&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;

&lt;p&gt;本文示例项目源码，请参见GIT:&lt;a href=&quot;https://github.com/zuowj/springbootdemo&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;strong&gt;https://github.com/zuowj/springbootdemo&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 13 Feb 2019 06:22:00 +0000</pubDate>
<dc:creator>梦在旅途</dc:creator>
<og:description>JAVA WEB快速入门系列之前的相关文章如下：（文章全部本人【梦在旅途原创】，文中内容可能部份图片、代码参照网上资源） 第一篇：JAVA WEB快速入门之环境搭建 第二篇：JAVA WEB快速入门之</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zuowj/p/10335080.html</dc:identifier>
</item>
<item>
<title>一篇你看了就懂的DNS详解 - anyhoo</title>
<link>http://www.cnblogs.com/anyhoo/p/10369589.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/anyhoo/p/10369589.html</guid>
<description>&lt;p&gt;DNS（Domain Name System，&lt;a href=&quot;https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F/2251573&quot; target=&quot;_blank&quot;&gt;域名系统&lt;/a&gt;），万维网上作为域名和&lt;a href=&quot;https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80&quot; target=&quot;_blank&quot;&gt;IP地址&lt;/a&gt;相互映射的一个&lt;a href=&quot;https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93/1238109&quot; target=&quot;_blank&quot;&gt;分布式数据库&lt;/a&gt;，能够使用户更方便的访问&lt;a href=&quot;https://baike.baidu.com/item/%E4%BA%92%E8%81%94%E7%BD%91&quot; target=&quot;_blank&quot;&gt;互联网&lt;/a&gt;，而不用去记住IP。&lt;/p&gt;
&lt;p&gt;通过域名，最终得到该域名对应的IP地址的过程叫做域名解析（或主机名解析）。&lt;/p&gt;

&lt;p&gt;为什么需要DNS解析域名为IP地址？&lt;/p&gt;
&lt;p&gt;　　首先计算机在网络上通讯时只能识别IP地址（网络通讯大部分是基于TCP/IP协议，而TCP/IP是基于IP地址的），比如我要在浏览器中访问百度的地址，我可以在地址栏直接输入14.215.177.39就能访问到百度的首页。但是我们无法记住更多的IP地址。那么域名就出现了，域名是由一串用”.”分隔的唯一名字。所以现在我们访问网站的时候，就可以在浏览器地址栏中输入域名（www.baidu.com），那么DNS就会把域名翻译成IP，然后访问IP&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141114056-1622697614.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;域名&lt;/p&gt;
&lt;p&gt;　　域名按照从右到左的顺序来划分优先等级，最右边的是最高级的根域，根域就是所谓的”.”，其实我们的域名www.baidu.com在配置当中应该是www.baidu.com.（最后有一个点），一般我们在浏览器里输入时会省略后面的点。接下来就是顶级域又称一级域，一级域之后还有二级三级域。如何区分当前域名是几级域，可以参考域名中有几个点来判断（除了根域外），比如baidu.com就是个一级域，而www.baidu.com就是个二级域（它是在baidu.com这个域里面有一个叫做www的主机）&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141129233-1727145983.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　每一层域都会有一堆域名（DNS）服务器，DNS服务器是能提供域名解析的服务器，记录类型可以是A（address）记录，NS（name server）记录，MX（mail），CNAME等，这些记录类型后续会一一介绍到。&lt;/p&gt;
&lt;p&gt;这里有个知识点，百科中说全世界只有13台根DNS服务器，但其实这是错误的观点，根DNS服务器只有具体的13个IP地址，但机器的数量不止13台。&lt;/p&gt;
&lt;p&gt;　　DNS服务器一般分三种，根DNS服务器，顶级DNS服务器，权威DNS服务器&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141151378-1282103174.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　接下来会讲到这些DNS服务器和我们今天说的DNS解析有什么关系，在讲述DNS解析流程前先要理解什么是本地DNS&lt;/p&gt;
&lt;p&gt; 　　本地DNS一般是指你电脑上网时IPv4或者IPv6设置中填写的那个DNS。这个有可能是手工指定的或者是自动分配的。&lt;/p&gt;
&lt;p&gt;　　如果你的电脑是直连运营商（ISP）网络，一般默认设置情况下DNS为ISP的服务器地址。&lt;/p&gt;
&lt;p&gt;　　如果你的电脑和ISP之间还加了无线或者有线路由（一般的路由器本身还会内置DNS转发器），它的作用是将发往它所有的DNS请求转发到上层DNS，但最终会转发到ISP的DNS。&lt;/p&gt;
&lt;p&gt;　　如果手动修改了DNS，比如改成8.8.8.8这样的公用DNS服务器，那么指的就是这个服务器。&lt;/p&gt;
&lt;p&gt;　　本地DNS不是权威服务器，相当于一个代理的DNS解析服务器，他会帮你迭代权威服务器返回的回答，然后把最终查到的IP返回给你。&lt;/p&gt;
&lt;p&gt;　　如下图所示，就是之后我们讲到的本地DNS服务器。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141219480-952723697.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;现在我有一台电脑，在浏览器中输入&lt;a href=&quot;http://www.baidu.com/&quot;&gt;www.baidu.com&lt;/a&gt;域名，浏览器会从浏览器的DNS缓存中检查是否有这个网址的映射关系，如果有，就返回IP，完成域名解析&lt;/li&gt;
&lt;li&gt;如果没有，操作系统会先检查自己本地的hosts文件是否有这个网址的映射关系，如果有，就返回IP，完成域名解析。看到这里大家应该都猜到了，有DNS的地方，就有缓存。浏览器、操作系统、本地DNS、根域名服务器，它们都会对DNS结果做一定程度的缓存。&lt;/li&gt;
&lt;li&gt;如果还没有，我的电脑就要向本地DNS服务器发起请求查询&lt;a href=&quot;http://www.baidu.com/&quot;&gt;www.baidu.com&lt;/a&gt;这个域名。&lt;/li&gt;
&lt;li&gt;本地DNS服务器拿到请求后，先检查一下自己的缓存中有没有这个地址，有的话直接返回。这个时候拿到的IP地址，会被标记为非权威服务器的应答&lt;/li&gt;
&lt;li&gt;如果本地DNS服务器的缓存中没有的话，本地DNS服务器会从配置文件中读取13个根DNS服务器的地址，然后向其中一台发起请求&lt;/li&gt;
&lt;li&gt;根DNS服务器拿到请求后，知道他是com.这个顶级域名下的，所以会返回com域名中的NS记录（用来表明哪台服务器对该域名进行解析），其实就是一个IP（com对应的服务器IP）&lt;/li&gt;
&lt;li&gt;本地DNS服务器根据返回的IP（com DNS服务器）发起请求，com DNS服务器发现你这请求的是baidu.com这个域，查到这个域的NS记录，然后返回IP（baidu.com）&lt;/li&gt;
&lt;li&gt;本地DNS服务器在根据IP（baidu.com DNS服务器）访问这些权威服务器，baidu.com服务器在A记录（正向解析记录，域名到IP地址的映射）中查找到www.baidu.com的IP地址，返回IP（&lt;a href=&quot;http://www.baidu.com/&quot;&gt;www.baidu.com&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;最终本地DNS服务器拿到用户想访问的&lt;a href=&quot;http://www.baidu.com/&quot;&gt;www.baidu.com&lt;/a&gt;的IP，返回给客户端，并进行缓存操作，以便下次使用。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141232088-1179043432.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;         看上面的图，再理解一遍：&lt;/p&gt;
&lt;p&gt;         浏览器：@浏览器缓存，你知道&lt;a href=&quot;http://www.baidu.xn--comip-py8it9my61d/&quot;&gt;www.baidu.com对应的IP&lt;/a&gt;么?&lt;/p&gt;
&lt;p&gt;         浏览器缓存:知道，是xxxx&lt;/p&gt;
&lt;p&gt;         浏览器：好的，我去访问啦！&lt;/p&gt;

&lt;p&gt;         浏览器缓存：不知道&lt;/p&gt;
&lt;p&gt;         浏览器：@系统缓存，你知道&lt;a href=&quot;http://www.baidu.xn--comip-py8it9my61d/&quot;&gt;www.baidu.com对应的IP&lt;/a&gt;么?&lt;/p&gt;
&lt;p&gt;         系统缓存：我看下hosts哦，找到了，是xxxx&lt;/p&gt;
&lt;p&gt;         浏览器：好的，我去访问啦~&lt;/p&gt;

&lt;p&gt;         系统缓存：我看下hosts哦，哎呀没有找到哎&lt;/p&gt;
&lt;p&gt;         浏览器：好的，我无能为力了，@客户机想想办法&lt;/p&gt;
&lt;p&gt;         客户机：我去问问@本地DNS服务器，你知道&lt;a href=&quot;http://www.baidu.xn--comip-py8it9my61d/&quot;&gt;www.baidu.com对应的IP&lt;/a&gt;么?&lt;/p&gt;
&lt;p&gt;         本地DNS服务器：我去DNS服务器缓存中找找，找到了，是xxxx&lt;/p&gt;
&lt;p&gt;         客户机：@浏览器，是xxxx，你去访问吧&lt;/p&gt;
&lt;p&gt;　　  浏览器：好的，我去访问啦#&lt;/p&gt;

&lt;p&gt;本地DNS服务器：我去DNS服务器缓存中找找，哎呀没有找到哎&lt;/p&gt;
&lt;p&gt;本地DNS服务器：想个办法，先去找大哥@根DNS服务器，你知道&lt;a href=&quot;http://www.baidu.xn--comip-py8it9my61d/&quot;&gt;www.baidu.com对应的IP&lt;/a&gt;么?&lt;/p&gt;
&lt;p&gt;根DNS服务器：我知道com DNS服务器的IP，你叫他给你查&lt;/p&gt;
&lt;p&gt;本地DNS服务器：好的，@com DNS服务器，你知道&lt;a href=&quot;http://www.baidu.xn--comip-py8it9my61d/&quot;&gt;www.baidu.com对应的IP&lt;/a&gt;么?&lt;/p&gt;
&lt;p&gt;com DNS服务器：我知道baidu.com DNS服务器的IP，你叫他给你查&lt;/p&gt;
&lt;p&gt;本地DNS服务器：怎么开始踢皮球了，@baidu.com DNS服务器，你知道&lt;a href=&quot;http://www.baidu.xn--comip-py8it9my61d/&quot;&gt;www.baidu.com对应的IP&lt;/a&gt;么?&lt;/p&gt;
&lt;p&gt;baidu.com DNS服务器：我这里查到了，IP是xxxx&lt;/p&gt;
&lt;p&gt;本地DNS服务器：太开心了@客户机IP是xxxx。这么麻烦，先记到DNS服务器缓存，免得下次又这么折腾。&lt;/p&gt;
&lt;p&gt;客户机：@浏览器 IP是xxxx&lt;/p&gt;
&lt;p&gt;浏览器：好的，我去访问啦&lt;/p&gt;

&lt;p&gt;　　上面就把正常的DNS解析流程讲解完毕了，其中有提到的迭代查询，在整个DNS解析过程中会存在递归查询过程和迭代查询过程。&lt;/p&gt;
&lt;p&gt;　　我的电脑向本地DNS服务器的查询一般都是采用递归查询&lt;/p&gt;
&lt;p&gt;　　本地DNS服务器向其他DNS服务器的查询是迭代查询&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141314407-1226589726.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　总结下就是发起查询的机器改变了就是递归查询，反之，发起查询的机器不变就是迭代查询。&lt;/p&gt;
&lt;p&gt;DNS解析过程中也解释了DNS服务器记录中的NS记录和A记录，那么接下来就看下DNS服务器中的这些记录的作用&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141338574-28215011.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　其实在上面DNS解析www.baidu.com域名的时候，在实际操作中就有遇到CNAME记录。&lt;/p&gt;
&lt;p&gt;当我们向baidu.com请求www.baidu.com的时候，返回了一个别名www.a.shifen.com&lt;/p&gt;
&lt;p&gt;        &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141358058-1806542763.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　一般解析过程中遇到CNAME，查询会终止，重新向根DNS服务器发起查询别名的请求，最终返回给电脑www.baidu.com 的CNAME以及别名的IP。&lt;/p&gt;
&lt;p&gt;以上所有流程可以使用nslookup或dig（linux自带，windows可装）命令查询验证&lt;/p&gt;

&lt;p&gt;DNS劫持&lt;/p&gt;
&lt;p&gt;　　DNS决定的是我们的域名将解析到哪一个IP地址的记录，是基于UDP协议的一种应用层协议。这种攻击的前提是攻击者掌控了你的本地DNS服务器&lt;/p&gt;
&lt;p&gt;攻击者劫持了DNS服务器，通过某些手段取得某域名的解析记录控制权，进而修改此域名的解析结果，导致用户对该域名地址进行访问的时候，由原来的IP地址转入到修改后的IP地址。结果就是让正确的网址不能解析或者是被解析到另一个网址的IP，实现获取用户资料或者破坏原有网址正常服务的目的。&lt;/p&gt;
&lt;p&gt;　　原理如下图所示：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141413497-439978351.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　由于域名劫持往往只能在特定的被劫持的网络范围内进行，所以在此范围外的DNS服务器能够返回正常的IP地址，或者修改DNS以及直接IP访问。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141429875-1135579423.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　一般而言，用户上网的DNS服务器都是运营商分配的，所以在这个节点上，运营商可以做一些事情，比如，你去访问&lt;a href=&quot;http://www.a.com/&quot;&gt;www.a.com&lt;/a&gt;，正常DNS应该返回10.0.0.1，而运营商劫持后，会返回一个运营商的中间服务器IP，访问该服务器会一致性的返回302（暂时重定向），让用户浏览器跳转到预处理好的带广告的网页，在该网页中再通过iframe打开用户原先访问的地址。&lt;/p&gt;

&lt;p&gt;DNS污染&lt;/p&gt;
&lt;p&gt;　　又称域名服务器缓存投毒（DNS cache poisoning），它和DNS劫持的不同之处，在于污染针对的是DNS缓存，是在查询信息到达目标DNS服务器前，经过的节点上做手脚，而劫持是DNS服务器中记录的是错误的内容。&lt;/p&gt;
&lt;p&gt;总结下就是DNS劫持是修改DNS服务器，DNS污染是修改DNS缓存。&lt;/p&gt;
&lt;p&gt;　　看下图举个例子：对于GFW来说，DNS劫持用于国内服务器，因为可以修改服务器中的DNS记录，而对于国外服务器GFW无法更改其内容，故采用DNS污染的方式篡改用户收到的信息。其中的过程是，当你向国外DNS服务器查询DNS记录时，这些流量走到国际出口带宽的时候会遇到GFW的关键字审查，如果上了黑名单，GFW会立即向你返回一个虚假的DNS记录。上面也说到DNS走的是UDP协议，加上DNS查询结果只认最快返回的，所以一定是先收到了GFW给你返回的虚假DNS记录，就算马上你收到了真正的来自国外DNS的回复，也会被你的系统无视掉。这种攻击也被称为中间人攻击。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000047/201902/1000047-20190213141445782-1397897006.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 13 Feb 2019 06:16:00 +0000</pubDate>
<dc:creator>anyhoo</dc:creator>
<og:description>DNS（Domain Name System，域名系统），万维网上作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住IP。 通过域名，最终得到该域名对应的IP地址</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/anyhoo/p/10369589.html</dc:identifier>
</item>
<item>
<title>使用libimobiledevice + ifuse提取iOS沙盒文件 - 周希</title>
<link>http://www.cnblogs.com/zhouxihi/p/10369580.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhouxihi/p/10369580.html</guid>
<description>&lt;h2&gt;简介&lt;/h2&gt;

&lt;p&gt;libimobiledevice：一个开源包，可以让Linux支持连接iPhone/iPod Touch等iOS设备。&lt;/p&gt;
&lt;p&gt;Git仓库: &lt;a href=&quot;https://github.com/libimobiledevice/libimobiledevice.git&quot; target=&quot;_blank&quot;&gt;https://github.com/libimobiledevice/libimobiledevice.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ifuse: 也是一个开源包，可以用来访问iDevice的工具&lt;/p&gt;
&lt;p&gt;Git仓库: &lt;a href=&quot;https://github.com/libimobiledevice/ifuse.git&quot; target=&quot;_blank&quot;&gt;https://github.com/libimobiledevice/ifuse.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们可以利用libimobiledevice与ifuse进行shell封装，辅助实现自动化的测试过程。&lt;/p&gt;
&lt;p&gt;这里我们用来提取iOS设备上APP沙盒中的日志文件&lt;/p&gt;



&lt;p&gt;MacOS上安装libimobiledevice&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;sudo brew update
sudo brew install libimobiledevice
#libimobiledevice中并不包含ipa的安装命令，所以还需要安装
sudo brew install ideviceinstaller&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ubuntu下安装libimobiledevice&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
sudo add-apt-repository ppa:pmcenery/&lt;span&gt;ppa
sudo apt&lt;/span&gt;-&lt;span&gt;get&lt;/span&gt;&lt;span&gt; update
apt&lt;/span&gt;-&lt;span&gt;get&lt;/span&gt; install libimobiledevice-&lt;span&gt;utils
sudo apt&lt;/span&gt;-&lt;span&gt;get&lt;/span&gt; install ideviceinstaller
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;1. 获取设备已安装app的bundleID&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
ideviceinstaller -l
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-Pro:/ jackey$ ideviceinstaller -&lt;span&gt;l
Total: &lt;/span&gt;&lt;span&gt;13&lt;/span&gt;&lt;span&gt; apps
com.zhouxi.xiaoailiteios &lt;/span&gt;- 小米同学 &lt;span&gt;20&lt;/span&gt;&lt;span&gt;
com.apple.test.WebDriverAgentRunner&lt;/span&gt;-Runner - WebDriverAgentRunner-Runner &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
com.apple.store.Jolly &lt;/span&gt;- Apple Store &lt;span&gt;5.0&lt;/span&gt;.&lt;span&gt;0.0302&lt;/span&gt;&lt;span&gt;
com.apple.clips &lt;/span&gt;- 可立拍 &lt;span&gt;4141.1&lt;/span&gt;.&lt;span&gt;91&lt;/span&gt;&lt;span&gt;
com.apple.mobilegarageband &lt;/span&gt;- 库乐队 &lt;span&gt;4878.17&lt;/span&gt;&lt;span&gt;
com.apple.Keynote &lt;/span&gt;- Keynote 讲演 &lt;span&gt;5625&lt;/span&gt;&lt;span&gt;
com.apple.Numbers &lt;/span&gt;- Numbers 表格 &lt;span&gt;5625&lt;/span&gt;&lt;span&gt;
com.apple.Pages &lt;/span&gt;- Pages 文稿 &lt;span&gt;5625&lt;/span&gt;&lt;span&gt;
com.apple.iMovie &lt;/span&gt;- iMovie &lt;span&gt;3709.9&lt;/span&gt;.&lt;span&gt;72&lt;/span&gt;&lt;span&gt;
com.apple.itunesu &lt;/span&gt;- iTunes U &lt;span&gt;2360&lt;/span&gt;&lt;span&gt;
com.sogou.sogouinput &lt;/span&gt;- 搜狗输入法 &lt;span&gt;148198&lt;/span&gt;&lt;span&gt;
com.tencent.xin &lt;/span&gt;- 微信 &lt;span&gt;6.7&lt;/span&gt;.&lt;span&gt;4.44&lt;/span&gt;&lt;span&gt;
com.ss.iphone.ugc.AwemeInhouse &lt;/span&gt;- 抖音短视频内测 &lt;span&gt;43006&lt;/span&gt;&lt;span&gt;
Jackeys&lt;/span&gt;-MacBook-Pro:/ jackey$ 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2. 安装ipa包，卸载应用&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;命令安装一个ipa文件到手机上，如果是企业签名的，非越狱机器也可以直接安装了。&lt;/span&gt;
ideviceinstaller -&lt;span&gt;i xxx.ipa

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;命令卸载应用，需要知道此应用的bundleID&lt;/span&gt;
ideviceinstaller -U [bundleID]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;卸载演示:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-Pro:/ jackey$ ideviceinstaller -&lt;span&gt;U com.zhouxi.xiaoailiteios
Uninstalling &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;com.zhouxi.xiaoailiteios&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
 - RemovingApplication (&lt;span&gt;50&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- GeneratingApplicationMap (&lt;span&gt;90&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;-&lt;span&gt; Complete
Jackeys&lt;/span&gt;-MacBook-Pro:/ jackey$ 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装演示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-Pro:Code jackey$ ideviceinstaller -i QQ音乐\ &lt;span&gt;8.9&lt;/span&gt;.&lt;span&gt;7&lt;/span&gt;&lt;span&gt;.ipa 
Copying &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;QQ音乐 8.9.7.ipa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; to device... DONE.
Installing &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;com.tencent.QQMusic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
 - CreatingStagingDirectory (&lt;span&gt;5&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- ExtractingPackage (&lt;span&gt;15&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- InspectingPackage (&lt;span&gt;20&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- TakingInstallLock (&lt;span&gt;20&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- PreflightingApplication (&lt;span&gt;30&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- VerifyingApplication (&lt;span&gt;40&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- CreatingContainer (&lt;span&gt;50&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- InstallingApplication (&lt;span&gt;60&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- PostflightingApplication (&lt;span&gt;70&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- SandboxingApplication (&lt;span&gt;80&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;- GeneratingApplicationMap (&lt;span&gt;90&lt;/span&gt;%&lt;span&gt;)
 &lt;/span&gt;-&lt;span&gt; Complete
Jackeys&lt;/span&gt;-MacBook-Pro:Code jackey$ 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里补充一个: ipa我们可以通过itunes来进行下载， 下载完后可以在iTunnes偏好设置中看到存放目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1048098/201902/1048098-20190213110726732-769827014.png&quot; alt=&quot;&quot; width=&quot;440&quot; height=&quot;430&quot;/&gt;&lt;/p&gt;

&lt;p&gt;3. 查看系统日志&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
idevicesyslog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4. 查看当前已连接的设备的UUID&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
idevice_id --list
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5. 截图&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
idevicescreenshot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6. 查看设备信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
ideviceinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;7. 获取设备时间&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
idevicedate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;8. 设置代理&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
iproxy
&lt;/pre&gt;
&lt;p&gt;　usage: iproxy LOCAL_TCP_PORT DEVICE_TCP_PORT [UDID]&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;9. 获取设备名称&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
idevicename
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;10. 查看和操作设备的描述文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
ideviceprovision list
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;11. 挂载DeveloperDiskImage，用于调试(这个在我的机器上面不能用， 应该是缺少什么东西了)&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
ideviceimagemounter
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;12. 调试程序&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
idevicedebug
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果在运行上面指令出现以下错误:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Could not connect to lockdownd. Exiting.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用以下方式重新安装&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;brew uninstall ideviceinstaller
brew uninstall libimobiledevice
brew install &lt;/span&gt;--&lt;span&gt;HEAD libimobiledevice
brew link &lt;/span&gt;--&lt;span&gt;overwrite libimobiledevice
brew install ideviceinstaller
brew link &lt;/span&gt;--overwrite ideviceinstaller
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新安装过程中如果出现以下错误:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
A recent change to libimobiledevice bumped the constraint on libusbmuxd to &amp;gt;= version &lt;span&gt;1.1&lt;/span&gt;.&lt;span&gt;0&lt;/span&gt;. The current usbmuxd homebrew package &lt;span&gt;is&lt;/span&gt; version &lt;span&gt;1.0&lt;/span&gt;.&lt;span&gt;10&lt;/span&gt;&lt;span&gt;.
As a result, homebrew &lt;/span&gt;--HEAD installs of libimobiledevice no longer build without a --HEAD install of usbmuxd.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用以下指令升级usbmuxd：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;brew update
brew uninstall &lt;/span&gt;--ignore-&lt;span&gt;dependencies usbmuxd
brew install &lt;/span&gt;--&lt;span&gt;HEAD usbmuxd
brew link &lt;/span&gt;--overwrite usbmuxd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;升级后接着安装libimobiledevice&lt;/p&gt;


&lt;p&gt;安装方式:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
brew install ifuse
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者通过官网安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://osxfuse.github.io/&quot; target=&quot;_blank&quot;&gt;https://osxfuse.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1. 安装好后使用ifuse -h会打印详细使用说明&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Usage: ifuse MOUNTPOINT [OPTIONS]
Mount directories of an iOS device locally &lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; fuse.

  &lt;/span&gt;-&lt;span&gt;o opt,[opt...]    mount options
  &lt;/span&gt;-u, --udid UDID    mount specific device by its &lt;span&gt;40&lt;/span&gt;-&lt;span&gt;digit device UDID
  &lt;/span&gt;-h, --&lt;span&gt;help        print usage information
  &lt;/span&gt;-V, --&lt;span&gt;version        print version
  &lt;/span&gt;-d, --&lt;span&gt;debug        enable libimobiledevice communication debugging
  &lt;/span&gt;--documents APPID    mount &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Documents&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; folder of app identified by APPID
  &lt;/span&gt;--&lt;span&gt;container APPID    mount sandbox root of an app identified by APPID
  &lt;/span&gt;--&lt;span&gt;root        mount root file system (jailbroken device required)

Example:

  $ ifuse &lt;/span&gt;/media/iPhone --&lt;span&gt;root

  This mounts the root filesystem of the first attached device on
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt; computer &lt;span&gt;in&lt;/span&gt; the directory /media/&lt;span&gt;iPhone.

Jackeys&lt;/span&gt;-MacBook-Pro:Code jackey$ 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2. 挂在媒体文件目录:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注意，此处的挂载点必须要真实存在，需要预先创建好目录，否则挂载失败&lt;/span&gt;
&lt;span&gt;
ifuse [挂载点]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示: &lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
sudo mkdir /myapp
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-Pro:/ jackey$ sudo ifuse myapp/&lt;span&gt;
Password:
Jackeys&lt;/span&gt;-MacBook-Pro:/ jackey$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;卸载挂载点&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
fusermount -u [挂载点]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个指令在我的电脑上不行， 我改用的sudo umount /myapp&lt;/p&gt;

&lt;p&gt;3. 挂载某个应用的documents目录&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
ifuse --&lt;span&gt;documents [要挂载的应用的bundleID] [挂载点]

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注意，iOS 8.3之后要求应用的UIFileSharingEnabled权限要开启，否则可能没有权限访问，会有如下的错误提示&lt;/span&gt;
&lt;span&gt;
ERROR: InstallationLookupFailed
The App &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;com.wsgh.test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; either not present on the device, or the &lt;span&gt;'&lt;/span&gt;&lt;span&gt;UIFileSharingEnabled&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; key &lt;span&gt;is&lt;/span&gt; not &lt;span&gt;set&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; its Info.plist. Starting with iOS &lt;span&gt;8.3&lt;/span&gt; &lt;span&gt;this&lt;/span&gt; key &lt;span&gt;is&lt;/span&gt; mandatory to allow access to an app&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s Documents folder.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-Pro:/ jackey$ sudo ifuse --documents com.zhouxi.xiaoailiteios /&lt;span&gt;myapp
Password:
ERROR: InstallationLookupFailed
Jackeys&lt;/span&gt;-MacBook-Pro:/ jackey$ 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;报这个错是因为我们app没有开启文件共享，需要在app的info.plist添加一下字段&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1048098/201902/1048098-20190213114120047-488955882.png&quot; alt=&quot;&quot; width=&quot;416&quot; height=&quot;22&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们再试试&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-Pro:/ jackey$ sudo ifuse --documents com.zhouxi.xiaoailiteios /&lt;span&gt;myapp
Password:
mount_osxfuse: mount point &lt;/span&gt;/myapp &lt;span&gt;is&lt;/span&gt; itself on a OSXFUSE volume
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里报错的原因是我们不能把文件挂在到根目录, 我们先删除之前的挂载&lt;/p&gt;
&lt;p&gt;重新挂在到Document目录下我们自己的文件夹中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ifuse --documents com.zhouxi.xiaoailiteios /Users/jackey/Documents/Xiaomi/myapp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK, 这次没有出错， 打开Finder进入所在目录发现myapp文件夹没有了， 但增加了一个OSXFUSE Volume的目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1048098/201902/1048098-20190213135855480-583443091.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;打开里面就是我们的Documents目录&lt;/p&gt;
&lt;p&gt;使用umount可卸载&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
umount /Users/jackey/Documents/Xiaomi/myapp
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4. 挂在某应用的整个沙盒目录&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ifuse --container [要挂载的应用的bundleID] [挂载点]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ifuse --container com.zhouxi.xiaoailiteios /Users/jackey/Documents/Xiaomi/myapp/xiaoailite
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开finder可以看到整个沙盒目录都挂在上来了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1048098/201902/1048098-20190213141123050-1220860523.png&quot; alt=&quot;&quot; width=&quot;701&quot; height=&quot;397&quot;/&gt;&lt;/p&gt;

&lt;p&gt;如果需要自动提取沙盒日志，这里我们还是可以使用挂在的目录去获取里面的内容&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
Jackeys-MacBook-&lt;span&gt;Pro:xiaoailite jackey$ pwd
&lt;/span&gt;/Users/jackey/Documents/Xiaomi/myapp/&lt;span&gt;xiaoailite
Jackeys&lt;/span&gt;-MacBook-&lt;span&gt;Pro:xiaoailite jackey$ ls
Documents    Library        SystemData    tmp
Jackeys&lt;/span&gt;-MacBook-Pro:xiaoailite jackey$ 
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Wed, 13 Feb 2019 06:14:00 +0000</pubDate>
<dc:creator>周希</dc:creator>
<og:description>简介 libimobiledevice：一个开源包，可以让Linux支持连接iPhone/iPod Touch等iOS设备。 Git仓库: https://github.com/libimo</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhouxihi/p/10369580.html</dc:identifier>
</item>
<item>
<title>自己写一个java的mvc框架吧（五） - 何白白</title>
<link>http://www.cnblogs.com/hebaibai/p/10369564.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hebaibai/p/10369564.html</guid>
<description>&lt;h2 id=&quot;给框架添加注解的支持&quot;&gt;给框架添加注解的支持&lt;/h2&gt;
&lt;h3 id=&quot;一段废话&quot;&gt;一段废话&lt;/h3&gt;
&lt;p&gt;上一章本来是说这一章要写视图处理的部分，但是由于我在测试代码的时候&lt;strong&gt;需要频繁的修改配置文件&lt;/strong&gt;，&lt;strong&gt;太麻烦了&lt;/strong&gt;。所以这一章先把支持注解的功能加上，这样就不需要经常地修改配置文件了。&lt;/p&gt;
&lt;p&gt;至于视图处理的地方，就还是先用json吧，找时间再写。&lt;/p&gt;
&lt;p&gt;项目地址在：https://github.com/hjx601496320/aMvc 。&lt;/p&gt;
&lt;p&gt;测试代码在：https://github.com/hjx601496320/amvc-test 。&lt;/p&gt;
&lt;h2 id=&quot;怎么写呢&quot;&gt;怎么写呢？&lt;/h2&gt;
&lt;p&gt;因为在之前写代码的时候，我把每个类要做的事情分的比较清楚，所以在添加这个功能的时候写起来还是比较简单的，需要修改的地方也比较小。&lt;/p&gt;
&lt;p&gt;这一章里我们需要干的事情有：&lt;/p&gt;
&lt;ol readability=&quot;3&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;定义一个注解，标识某一个class中的被添加注解的方法是一个&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;修改配置文件，添加需要扫描的&lt;strong&gt;package&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;写一个方法，根据&lt;strong&gt;package&lt;/strong&gt;中值找到其中&lt;strong&gt;所有的class&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;在&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;的工厂类&lt;strong&gt;UrlMethodMappingFactory&lt;/strong&gt;中新加一个根据注解创建&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;在&lt;strong&gt;Application&lt;/strong&gt;中的&lt;strong&gt;init()&lt;/strong&gt;方法中，根据是否开启注解支持，执行新的工厂类方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完了。&lt;/p&gt;
&lt;p&gt;多么简单呀～～～&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;现在开始写&quot;&gt;现在开始写&lt;/h2&gt;
&lt;h3 id=&quot;定义一个注解request&quot;&gt;定义一个注解Request&lt;/h3&gt;
&lt;p&gt;关于怎样自定义注这件事，大家可以上网搜一下，比较简单。我这里只是简单的说一下。我先把代码贴出来：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;import com.hebaibai.amvc.RequestType;
import java.lang.annotation.*;

/**
 * 表示这个类中的，添加了@Request注解的method被映射为一个http地址。
 *
 * @author hjx
 */
@Documented
@Target({ElementType.METHOD, ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
public @interface Request {

    /**
     * 请求类型
     * 支持GET，POST，DELETE，PUT
     *
     * @return
     */
    RequestType[] type() default {RequestType.GET, RequestType.POST, RequestType.DELETE, RequestType.PUT};

    /**
     * 请求地址
     * 添加在class上时，会将value中的值添加在其他方法上的@Request.value()的值前，作为基础地址。
     *
     * @return
     */
    String value() default &quot;/&quot;;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;定义一个注解，需要用到一下几个东西：&lt;/p&gt;
&lt;p&gt;1：&lt;strong&gt;@interface&lt;/strong&gt;：说明这个类是一个注解。&lt;/p&gt;
&lt;p&gt;2：&lt;strong&gt;@Retention&lt;/strong&gt;：注解的保留策略，有这么几个取值范围：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;@Retention(RetentionPolicy.SOURCE)&lt;/td&gt;
&lt;td&gt;注解仅存在于源码中&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;@Retention(RetentionPolicy.CLASS)&lt;/td&gt;
&lt;td&gt;注解会在class字节码文件中存在&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;@Retention(RetentionPolicy.RUNTIME)&lt;/td&gt;
&lt;td&gt;注解会在class字节码文件中存在，运行时可以通过反射获取到&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;因为我们在程序中&lt;strong&gt;需要取到自定义的注解&lt;/strong&gt;，所以使用：&lt;strong&gt;RetentionPolicy.RUNTIME&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;3：&lt;strong&gt;@Target&lt;/strong&gt;：作用目标，表示注解可以添加在什么地方，取值范围有：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;9&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;@Target(ElementType.TYPE)&lt;/td&gt;
&lt;td&gt;接口、类、枚举、注解&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.FIELD)&lt;/td&gt;
&lt;td&gt;字段、枚举的常量&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.METHOD)&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.PARAMETER)&lt;/td&gt;
&lt;td&gt;方法参数&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.CONSTRUCTOR)&lt;/td&gt;
&lt;td&gt;构造函数&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.LOCAL_VARIABLE)&lt;/td&gt;
&lt;td&gt;局部变量&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.ANNOTATION_TYPE)&lt;/td&gt;
&lt;td&gt;注解&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;@Target(ElementType.PACKAGE)&lt;/td&gt;
&lt;td&gt;包&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;3：&lt;strong&gt;@Documented&lt;/strong&gt;：这个主要是让自定义注解保留在文档中，没啥实际意义，一般都给加上。&lt;/p&gt;
&lt;p&gt;4：&lt;strong&gt;default&lt;/strong&gt;：是给注解中的属性（看起来像是一个方法，也可能就是一个方法，但是我就是叫属性，略略略～～～）一个默认值。&lt;/p&gt;
&lt;p&gt;上面大致上讲了一下怎么定义一个注解，现在注解写完了，&lt;strong&gt;讲一下这个注解的用处吧&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;首先这个注解可以加在&lt;strong&gt;class&lt;/strong&gt;和&lt;strong&gt;method&lt;/strong&gt;上。&lt;strong&gt;加在class上&lt;/strong&gt;的时候表示这个类中会有method将要被处理成为一个&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;，然后其中的&lt;strong&gt;value&lt;/strong&gt;属性将作为这个class中所有&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;的基础地址，&lt;strong&gt;type属性不起作用&lt;/strong&gt;。&lt;strong&gt;加在method&lt;/strong&gt;上的时候，就是说明这个method将被处理成一个&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;，注解的两个属性发挥其正常的作用。&lt;/p&gt;
&lt;p&gt;注解写完了，下面把配置文件改一改吧。&lt;/p&gt;
&lt;h3 id=&quot;修改框架的配置文件&quot;&gt;修改框架的配置文件&lt;/h3&gt;
&lt;p&gt;只需要添加一个属性就好了，修改完的配置文件这个样子：&lt;/p&gt;
&lt;pre class=&quot;json&quot;&gt;
&lt;code&gt;{
  &quot;annotationSupport&quot;: true,
  &quot;annotationPackage&quot;: &quot;com.hebaibai.demo.web&quot;,
//  &quot;mapping&quot;: [
//    {
//      &quot;url&quot;: &quot;/index&quot;,
//      &quot;requestType&quot;: [
//        &quot;get&quot;
//      ],
//      &quot;method&quot;: &quot;index&quot;,
//      &quot;objectClass&quot;: &quot;com.hebaibai.demo.web.IndexController&quot;,
//      &quot;paramTypes&quot;: [
//        &quot;java.lang.String&quot;,
//        &quot;int&quot;
//      ]
//    }
//  ]
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;1：&lt;strong&gt;annotationSupport&lt;/strong&gt; 值是&lt;strong&gt;true&lt;/strong&gt;的时候表示开启注解。&lt;/p&gt;
&lt;p&gt;2：&lt;strong&gt;annotationPackage&lt;/strong&gt; 表示需要扫描的包的路径。&lt;/p&gt;
&lt;p&gt;3：因为开了注解支持，&lt;strong&gt;为了防止重复注册&lt;/strong&gt; &lt;strong&gt;UrlMethodMapping&lt;/strong&gt;，所以我把下面的配置注释掉了。&lt;/p&gt;
&lt;h3 id=&quot;写一个包扫描的方法&quot;&gt;写一个包扫描的方法&lt;/h3&gt;
&lt;p&gt;这个方法需要将项目中&lt;strong&gt;jar文件&lt;/strong&gt;和&lt;strong&gt;文件夹&lt;/strong&gt;下所有符合条件的class找到，会用到递归，代码在&lt;strong&gt;ClassUtils.java&lt;/strong&gt;中，由三个方法构成，分别是：&lt;/p&gt;
&lt;p&gt;1：&lt;strong&gt;void getClassByPackage(String packageName, Set&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个方法接收两个参数，一个是包名&lt;strong&gt;packageName&lt;/strong&gt;，一个是一个空的&lt;strong&gt;Set&lt;/strong&gt;(不是null)，在方法执行完毕会将包下的所有class填充进Set中。这里主要是判断了一下这个包中有那些类型的文件，并根据文件类型分别处理。&lt;/p&gt;
&lt;p&gt;注意：如果是&lt;strong&gt;jar文件&lt;/strong&gt;的类型，获取到的&lt;strong&gt;filePath&lt;/strong&gt;是这样的：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;file:/home/hjx/idea-IU/lib/idea_rt.jar!/com&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;需要去掉头和尾，然后就可以吃了，鸡肉味！嘎嘣脆～～ 处理之后的是这个样子：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/home/hjx/idea-IU/lib/idea_rt.jar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;下面是方法代码：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 从给定的报名中找出所有的class
 *
 * @param packageName
 * @param classes
 */
@SneakyThrows({IOException.class})
public static void getClassByPackage(String packageName, Set&amp;lt;Class&amp;gt; classes) {
    Assert.notNull(classes);
    String packagePath = packageName.replace(DOT, SLASH);
    Enumeration&amp;lt;URL&amp;gt; resources = ClassUtils.getClassLoader().getResources(packagePath);
    while (resources.hasMoreElements()) {
        URL url = resources.nextElement();
        //文件类型
        String protocol = url.getProtocol();
        String filePath = URLDecoder.decode(url.getFile(), CHARSET_UTF_8);
        if (TYPE_FILE.equals(protocol)) {
            getClassByFilePath(packageName, filePath, classes);
        }
        if (TYPE_JAR.equals(protocol)) {
            //截取文件的路径
            filePath = filePath.substring(filePath.indexOf(&quot;:&quot;) + 1, filePath.indexOf(&quot;!&quot;));
            getClassByJarPath(packageName, filePath, classes);
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2：&lt;strong&gt;void getClassByFilePath(String packageName, String filePath, Set&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将文件夹中的全部符合条件的class找到，用到递归。&lt;strong&gt;需要将class文件的绝对路径截取成class的全限定名&lt;/strong&gt;，代码这个样子：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 在文件夹中递归找出该文件夹中在package中的class
 *
 * @param packageName
 * @param filePath
 * @param classes
 */
static void getClassByFilePath(
    String packageName,
    String filePath,
    Set&amp;lt;Class&amp;gt; classes
) {
    File targetFile = new File(filePath);
    if (!targetFile.exists()) {
        return;
    }
    if (targetFile.isDirectory()) {
        File[] files = targetFile.listFiles();
        for (File file : files) {
            String path = file.getPath();
            getClassByFilePath(packageName, path, classes);
        }
    } else {
        //如果是一个class文件
        boolean trueClass = filePath.endsWith(CLASS_MARK);
        if (trueClass) {
            //提取完整的类名
            filePath = filePath.replace(SLASH, DOT);
            int i = filePath.indexOf(packageName);
            String className = filePath.substring(i, filePath.length() - 6);
            //不是一个内部类
            boolean notInnerClass = className.indexOf(&quot;$&quot;) == -1;
            if (notInnerClass) {
                //根据类名加载class对象
                Class aClass = ClassUtils.forName(className);
                if (aClass != null) {
                    classes.add(aClass);
                }
            }
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3：&lt;strong&gt;void getClassByJarPath(String packageName, String filePath, Set&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将&lt;strong&gt;jar文件&lt;/strong&gt;中的全部符合条件的class找到。没啥说的，下面是代码：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 在jar文件中找出该文件夹中在package中的class
 *
 * @param packageName
 * @param filePath
 * @param classes
 */
@SneakyThrows({IOException.class})
static void getClassByJarPath(
    String packageName,
    String filePath,
    Set&amp;lt;Class&amp;gt; classes
) {
    JarFile jarFile = new URLJarFile(new File(filePath));
    Enumeration&amp;lt;JarEntry&amp;gt; entries = jarFile.entries();
    while (entries.hasMoreElements()) {
        JarEntry jarEntry = entries.nextElement();
        String jarEntryName = jarEntry.getName().replace(SLASH, DOT);
        //在package下的class
        boolean trueClass = jarEntryName.endsWith(CLASS_MARK) &amp;amp;&amp;amp; jarEntryName.startsWith(packageName);
        //不是一个内部类
        boolean notInnerClass = jarEntryName.indexOf(&quot;$&quot;) == -1;
        if (trueClass &amp;amp;&amp;amp; notInnerClass) {
            String className = jarEntryName.substring(0, jarEntryName.length() - 6);
            System.out.println(className);
            //根据类名加载class对象
            Class aClass = ClassUtils.forName(className);
            if (aClass != null) {
                classes.add(aClass);
            }
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样，获取包名下的class就写完了～&lt;/p&gt;
&lt;h3 id=&quot;修改urlmethodmappingfactory&quot;&gt;修改UrlMethodMappingFactory&lt;/h3&gt;
&lt;p&gt;这里新添加一个方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;List&lt;/strong&gt;，将扫描包之后获取到的Class对象作为参数，返回一个&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;集合就好了。代码如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 通过解析Class 获取映射
 *
 * @param aClass
 * @return
 */
public List&amp;lt;UrlMethodMapping&amp;gt; getUrlMethodMappingListByClass(Class&amp;lt;Request&amp;gt; aClass) {
    List&amp;lt;UrlMethodMapping&amp;gt; mappings = new ArrayList&amp;lt;&amp;gt;();
    Request request = aClass.getDeclaredAnnotation(Request.class);
    if (request == null) {
        return mappings;
    }
    String basePath = request.value();
    for (Method classMethod : aClass.getDeclaredMethods()) {
        UrlMethodMapping urlMethodMapping = getUrlMethodMappingListByMethod(classMethod);
        if (urlMethodMapping == null) {
            continue;
        }
        //将添加在class上的Request中的path作为基础路径
        String url = UrlUtils.makeUrl(basePath + &quot;/&quot; + urlMethodMapping.getUrl());
        urlMethodMapping.setUrl(url);
        mappings.add(urlMethodMapping);
    }
    return mappings;
}

/**
 * 通过解析Method 获取映射
 * 注解Request不存在时跳出
 *
 * @param method
 * @return
 */
private UrlMethodMapping getUrlMethodMappingListByMethod(Method method) {
    Request request = method.getDeclaredAnnotation(Request.class);
    if (request == null) {
        return null;
    }
    Class&amp;lt;?&amp;gt; declaringClass = method.getDeclaringClass();
    String path = request.value();
    for (char c : path.toCharArray()) {
        Assert.isTrue(c != ' ', declaringClass + &quot;.&quot; + method.getName() + &quot;请求路径异常：&quot; + path + &quot; ！&quot;);
    }
    return getUrlMethodMapping(
            path,
            request.type(),
            declaringClass,
            method,
            method.getParameterTypes()
    );
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在这里校验了一下注解Request中的value的值，如果中间有空格的话会抛出异常。&lt;strong&gt;UrlUtils.makeUrl()&lt;/strong&gt; 这个方法主要是将url中的多余&lt;strong&gt;”/”&lt;/strong&gt;去掉，代码长这个样子：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;private static final String SLASH = &quot;/&quot;;

/**
 * 处理url
 * 1：去掉连接中相邻并重复的“/”,
 * 2：链接开头没有“/”,则添加。
 * 3：链接结尾有“/”，则去掉。
 *
 * @param url
 * @return
 */
public static String makeUrl(@NonNull String url) {
    char[] chars = url.toCharArray();
    StringBuilder newUrl = new StringBuilder();
    if (!url.startsWith(SLASH)) {
        newUrl.append(SLASH);
    }
    for (int i = 0; i &amp;lt; chars.length; i++) {
        if (i != 0 &amp;amp;&amp;amp; chars[i] == chars[i - 1] &amp;amp;&amp;amp; chars[i] == '/') {
            continue;
        }
        if (i == chars.length - 1 &amp;amp;&amp;amp; chars[i] == '/') {
            continue;
        }
        newUrl.append(chars[i]);
    }
    return newUrl.toString();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样通过注解获取&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;的工厂方法就写完了，下面开始修改加载框架的代码。&lt;/p&gt;
&lt;h3 id=&quot;修改application中的init&quot;&gt;修改Application中的init&lt;/h3&gt;
&lt;p&gt;这里因为添加了一种使用注解方式获取&lt;strong&gt;UrlMethodMapping&lt;/strong&gt;的方法，所以新建一个方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;void addApplicationUrlMappingByAnnotationConfig(JSONObject configJson)&lt;/strong&gt; 。在这里获取框架配置中的包名以及做一些配置上的校验，代码如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 使用注解来加载UrlMethodMapping
 *
 * @param configJson
 */
private void addApplicationUrlMappingByAnnotationConfig(JSONObject configJson) {
    String annotationPackage = configJson.getString(ANNOTATION_PACKAGE_NODE);
    Assert.notNull(annotationPackage, ANNOTATION_PACKAGE_NODE + NOT_FIND);
    //获取添加了@Request的类
    Set&amp;lt;Class&amp;gt; classes = new HashSet&amp;lt;&amp;gt;();
    ClassUtils.getClassByPackage(annotationPackage, classes);
    Iterator&amp;lt;Class&amp;gt; iterator = classes.iterator();
    while (iterator.hasNext()) {
        Class aClass = iterator.next();
        List&amp;lt;UrlMethodMapping&amp;gt; mappings = urlMethodMappingFactory.getUrlMethodMappingListByClass(aClass);
        if (mappings.size() == 0) {
            continue;
        }
        for (UrlMethodMapping mapping : mappings) {
            addApplicationUrlMapping(mapping);
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;之后把先前写的读取json配置生成urlMappin的代码摘出来，单独写一个方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;void addApplicationUrlMappingByJsonConfig(JSONObject configJson)&lt;/strong&gt;，这样使代码中的&lt;strong&gt;每个方法的功能都独立出来&lt;/strong&gt;，看起来比较整洁，清楚。代码如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 使用文件配置来加载UrlMethodMapping
 * 配置中找不到的话不执行。
 *
 * @param configJson
 */
private void addApplicationUrlMappingByJsonConfig(JSONObject configJson) {
    JSONArray jsonArray = configJson.getJSONArray(MAPPING_NODE);
    if (jsonArray == null || jsonArray.size() == 0) {
        return;
    }
    for (int i = 0; i &amp;lt; jsonArray.size(); i++) {
        UrlMethodMapping mapping = urlMethodMappingFactory.getUrlMethodMappingByJson(jsonArray.getJSONObject(i));
        addApplicationUrlMapping(mapping);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后只要吧&lt;strong&gt;init()&lt;/strong&gt;稍微修改一下就好了，修改完之后是这样的：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * 初始化配置
 */
@SneakyThrows(IOException.class)
protected void init() {
    String configFileName = applicationName + &quot;.json&quot;;
    InputStream inputStream = ClassUtils.getClassLoader().getResourceAsStream(configFileName);
    byte[] bytes = new byte[inputStream.available()];
    inputStream.read(bytes);
    String config = new String(bytes, &quot;utf-8&quot;);
    //应用配置
    JSONObject configJson = JSONObject.parseObject(config);

    //TODO:生成对象的工厂类（先默认为每次都new一个新的对象）
    this.objectFactory = new AlwaysNewObjectFactory();
    //TODO:不同的入参名称获取类（当前默认为asm）
    urlMethodMappingFactory.setParamNameGetter(new AsmParamNameGetter());
    //通过文件配置加载
    addApplicationUrlMappingByJsonConfig(configJson);
    //是否开启注解支持
    Boolean annotationSupport = configJson.getBoolean(ANNOTATION_SUPPORT_NODE);
    Assert.notNull(annotationSupport, ANNOTATION_SUPPORT_NODE + NOT_FIND);
    if (annotationSupport) {
        addApplicationUrlMappingByAnnotationConfig(configJson);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里只是根据配置做了一下判断就好了。这样就写完了。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;是不是很简单啊～～～&lt;/p&gt;
&lt;p&gt;关于视图处理的部分看看下一章再写吧～～～&lt;/p&gt;

&lt;p&gt;拜拜～～&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 06:11:00 +0000</pubDate>
<dc:creator>何白白</dc:creator>
<og:description>自己写一个mvc框架吧（五） 给框架添加注解的支持 一段废话 上一章本来是说这一章要写视图处理的部分，但是由于我在测试代码的时候 需要频繁的修改配置文件 ， 太麻烦了 。所以这一章先把支持注解的功能加</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hebaibai/p/10369564.html</dc:identifier>
</item>
<item>
<title>Python中的可迭代对象/迭代器/For循环工作机制/生成器 - szjshuffle</title>
<link>http://www.cnblogs.com/szjshuffle/p/10368481.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/szjshuffle/p/10368481.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;本文分成6个部分：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.iterable iterator区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.iterable的工作机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.iterator的工作机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.for循环的工作机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.generator的原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;6.总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.iterable iterator区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;要了解两者区别，先要了解一下&lt;/span&gt;迭代器协议：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;迭代器协议&lt;/strong&gt;是指：对象需要提供__next__()方法，它返回迭代中的元素，在没有更多元素后，抛出StopIteration异常，终止迭代。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可迭代对象&lt;/strong&gt;就是：实现了迭代器协议的对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt;是一种约定，可迭代对象实现迭代器协议，Python的内置工具(如for循环，sum，min，max函数等)通过迭代器协议访问对象,因此，for循环并不需要知道对象具体是什么，只需要知道对象能够实现迭代器协议即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;迭代器(iterator)与可迭代对象(iterable)&lt;/strong&gt;并不是同一个概念。&lt;/p&gt;
&lt;p&gt;直观上：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.可迭代对象(iterable):&lt;/strong&gt;凡是具有__iter__的方法的类，都是可迭代的类。可迭代类创建的对象实现了__iter__方法，因此就是可迭代对象。用list、tuple等容器创建的对象，都是可迭代对象。&lt;strong&gt;可迭代对象通过__iter__方法返回一个迭代器&lt;/strong&gt;，然后在内部调用__next__方法进行迭代，最后没有元素时，抛出异常(这个异常python自己会处理，不会让开发者看见)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 2.迭代器(iterator):&lt;/strong&gt;迭代器对象必须同时实现__iter__和__next__方法才是迭代器。&lt;strong&gt;对于迭代器来说，&lt;code&gt;__iter__&lt;/code&gt; 返回的是它自身 self&lt;/strong&gt;，&lt;code&gt;__next__&lt;/code&gt; 则是返回迭代器中的下一个值,最后没有元素时，抛出异常(异常可以被开发者看到)。&lt;/p&gt;
&lt;p&gt;从上面2点可以看出：&lt;/p&gt;
&lt;p&gt;1.迭代器一定是可迭代对象，因为它实现了__iter__()方法；&lt;/p&gt;
&lt;p&gt;2.通过iter()方法(在类的内部就是__iter__)能够使一个可迭代对象返回一个迭代器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.迭代器的 &lt;code&gt;__iter__&lt;/code&gt; 方法返回的是自身，并不产生新的迭代器对象。而可迭代对象的 &lt;code&gt;__iter__&lt;/code&gt; 方法通常会返回一个新的迭代器对象。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第3点性质正是可迭代对象可以重复遍历的原因(每次返回一个独立的迭代器，就可以保证不同的迭代过程不会互相影响)；&lt;/strong&gt;&lt;strong&gt;而迭代器由于返回自身，因此只能遍历一次。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;上面3点可以通过下面的例子看出来：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;from&lt;/span&gt; collections &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Iterable
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; collections &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Iterator
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; isinstance(iter([1,2&lt;span&gt;]),Iterator)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; isinstance(iter([1,2&lt;span&gt;]),Iterable)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; isinstance([1,2&lt;span&gt;],Iterator)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; isinstance([1,2&lt;span&gt;],Iterable)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
&lt;span&gt;True
True
False
True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#id可以查看一个对象在内存中的地址&lt;/span&gt;
test=[1,2,3&lt;span&gt;]
testIter&lt;/span&gt;=&lt;span&gt;iter(test)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; id(testIter)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; id(testIter)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; id(iter(test))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; id(iter(test))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; id(test.&lt;span&gt;__iter__&lt;/span&gt;&lt;span&gt;())
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; id(test.&lt;span&gt;__iter__&lt;/span&gt;&lt;span&gt;())

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result:&lt;/span&gt;可迭代对象每次调用iter方法都会返回一个新的迭代器对象，而迭代器对象调用iter方法返回自身
&lt;/pre&gt;
&lt;pre&gt;
67162576 &lt;br/&gt;67162576 &lt;br/&gt;67162688 &lt;br/&gt;67162632 &lt;br/&gt;67162856 &lt;br/&gt;67163024
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2.iterable的工作机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拿一个例子看看，首先定义一个有__iter__方法,但是没有next()方法的类 (PS：在python2中是next()，python3是__next__())：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;from&lt;/span&gt;&lt;span&gt; collections import Iterable, Iterator

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt; Student(&lt;span&gt;object&lt;/span&gt;&lt;span&gt;):
    def __init__(self,score):
        self.score&lt;/span&gt;=&lt;span&gt;score

    def __iter__(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; iter(self.score)
    
test&lt;/span&gt;= Student([&lt;span&gt;80&lt;/span&gt;,&lt;span&gt;90&lt;/span&gt;,&lt;span&gt;95&lt;/span&gt;&lt;span&gt;])
print isinstance(test,  Iterable)
print isinstance(test,  Iterator)
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; test:
    print i

##result
True
False
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;
&lt;span&gt;90&lt;/span&gt;
&lt;span&gt;95&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;##可重复遍历&lt;/span&gt;&lt;br/&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; test:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; i

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
80
90
95
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面代码的结果印证了定义中提到的：&lt;/p&gt;
&lt;p&gt;缺少了next()方法，可迭代对象就不是迭代器。&lt;/p&gt;
&lt;p&gt;此外，注意到：&lt;strong&gt;可迭代对象通过__iter__方法每次都返回了一个独立的迭代器，这样就可以保证不同的迭代过程不会互相影响。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也就是说，通过iterable可以实现重复遍历，而迭代器是无法重复遍历的！&lt;/p&gt;
&lt;p&gt;因此，如果想要把可迭代对象转变为迭代器，可以先调用iter()方法返回一个迭代器。然后就可以用next()不断迭代了！&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(iter(test),Iterator)
testIter&lt;/span&gt;=&lt;span&gt;iter(test)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; testIter.next()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; testIter.next()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; testIter.next()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
&lt;span&gt;True
&lt;/span&gt;80
90
95

&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#一旦取完了可迭代对象中所有的元素，再次调用next就会发生异常&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;&lt;span&gt; testIter.next()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
StopIteration: 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3.迭代器Iterator的工作机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看下面这个例子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Student(object):
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self,score):
        self.score&lt;/span&gt;=&lt;span&gt;score

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__iter__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; self
    
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; next(self):
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; self.score&amp;lt;100&lt;span&gt;:
            self.score&lt;/span&gt;+=1
            &lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.score
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt;&lt;span&gt; StopIteration()
    
test&lt;/span&gt;= Student(90&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(test,  Iterable)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(test,  Iterator)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; test.next()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; test.next()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; test.next()
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; test:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; i

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
&lt;span&gt;True
True
&lt;/span&gt;91
92
93
94
95
96
97
98
99
100
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#如果此时再对test这个迭代器调用next方法，就会抛出异常&lt;/span&gt;
&lt;span&gt;test.next()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
StopIteration: 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个例子印证了定义中的：迭代器对象必须同时实现__iter__和__next__方法才是迭代器。&lt;/p&gt;
&lt;p&gt;那么，使用迭代器好处在哪呢?&lt;/p&gt;
&lt;p&gt;Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。&lt;/p&gt;
&lt;p&gt;一个很常见的应用就是：Python在处理列表的时候，是直接把整个列表读进内存的，当遇到大量样本时的时候会变得很慢。而迭代器的优势在于只把需要的元素读进内存，因此占用内存更少。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;换句话说，迭代器是一种惰性求值模式，它是有状态的，只有在调用时才返回值，没有调用的时候就等待下一次调用。这样就节省了大量内存空间。&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;4.for循环的工作机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有了上面2个例子，就可以总结一下在可迭代对象与迭代器中的For循环工作机制了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当对象本身就是迭代器时，For循环工作机制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.调用 __iter__方法，返回自身self,也就是返回迭代器。&lt;/p&gt;
&lt;p&gt;2.不断地调用迭代器的next()方法，每次按序返回迭代器中的一个值。&lt;/p&gt;
&lt;p&gt;3.迭代到最后没有元素时，就抛出异常 StopIteration。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在可迭代对象中，for循环工作机制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.先判断对象是否为可迭代对象(等价于判断有没有__iter__或__getitem__方法)，没有的话直接报错，抛出TypeError异常。有的话，调用 __iter__方法，返回一个迭代器。&lt;/p&gt;
&lt;p&gt;2.在python内部不断地调用迭代器的__next__方法，每次按序返回迭代器中的一个值。&lt;/p&gt;
&lt;p&gt;3.迭代到最后没有元素时，就抛出异常 StopIteration，这个异常 python 自己会处理，不会暴露给开发者。 &lt;/p&gt;
&lt;p&gt;借用网络上的一张图直观理解一下：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1585054/201902/1585054-20190213115719461-1542925275.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;此外，还要注意，&lt;strong&gt;python中的for循环其实兼容了两种机制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.如果对象有__iter__会返回一个迭代器。&lt;/p&gt;
&lt;p&gt;2.如果对象没有__iter__，但是实现了__getitem__，会改用下标迭代的方式。&lt;/p&gt;
&lt;p&gt;__getitem__可以帮助一个对象进行取数和切片操作。&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;当for发现没有__iter__但是有__getitem__的时候，会从0开始依次读取相应的下标，直到发生IndexError为止，这是一种旧的迭代协议。iter方法也会处理这种情况，在不存在__iter__的时候，返回一个下标迭代的iterator对象来代替。&lt;strong&gt;一个重要的例子是str，字符串就是没有__iter__方法的，但是却依然可以迭代，原因就是其在for循环时调用了__getitem__方法。&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;看一个例子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;from&lt;/span&gt; collections &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Iterable, Iterator

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Student(object):
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self,score):
        self.score&lt;/span&gt;=&lt;span&gt;score

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__getitem__&lt;/span&gt;&lt;span&gt;(self,n):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.score[n]
    
test&lt;/span&gt;= Student([80,90,95&lt;span&gt;])
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(test,  Iterable)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(test,  Iterator)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(iter(test),  Iterable)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; isinstance(iter(test),  Iterator)
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; test:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; i

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
&lt;span&gt;False
False
True
True
&lt;/span&gt;80
90
95
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(0,3&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; test[i]

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
80
90
95
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; iter(test):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt; i

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#result&lt;/span&gt;
80
90
95
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到，实现了__getitem__方法的对象本身，尽管不是iterable与iterator，仍旧是可以调用for循环的。&lt;/p&gt;
&lt;p&gt;通过iter方法，返回一个下标迭代的iterator对象。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.generator的原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后说一下生成器，生成器是一种特殊的迭代器，当然也是可迭代对象。&lt;/p&gt;
&lt;p&gt;对于生成器，&lt;span lang=&quot;EN-US&quot;&gt;Python会自动实现迭代器协议，以便应用到迭代中（如&lt;span lang=&quot;EN-US&quot;&gt;for循环，&lt;span lang=&quot;EN-US&quot;&gt;sum函数）。由于生成器自动实现了迭代器协议，所以，我们可以调用它的&lt;span lang=&quot;EN-US&quot;&gt;next方法，并且，在没有值可以返回的时候，生成器自动产生&lt;span lang=&quot;EN-US&quot;&gt;StopIteration异常。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;创建生成器的方法：将return 改为yield。具体的实现网络上教程很多，不细说了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;6.总结&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;看到一幅图片很好的描述了本文的所有内容，就拿它作为文末的总结吧！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1585054/201902/1585054-20190213135322228-539686124.png&quot; alt=&quot;&quot; width=&quot;658&quot; height=&quot;297&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;几篇觉得还不错的相关教程：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;https://nvie.com/posts/iterators-vs-generators/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;https://www.jb51.net/article/117554.htm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;https://zhuanlan.zhihu.com/p/55098524?utm_source=wechat_session&amp;amp;utm_medium=social&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 13 Feb 2019 05:55:00 +0000</pubDate>
<dc:creator>szjshuffle</dc:creator>
<og:description>本文分成6个部分： 1.iterable iterator区别 2.iterable的工作机制 3.iterator的工作机制 4.for循环的工作机制 5.generator的原理 6.总结 1.i</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/szjshuffle/p/10368481.html</dc:identifier>
</item>
</channel>
</rss>