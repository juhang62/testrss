<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>手动添加Servlet构造函数出现的问题及猜想 - 刷书小将</title>
<link>http://www.cnblogs.com/zh1996/p/10353351.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zh1996/p/10353351.html</guid>
<description>&lt;p&gt;我们需要用到servlet的时候，都是右键，新建一个servlet，但是有人注意到一个细节没有，当我们手动给我们的servlet添加一个构造函数时候，会出现什么状况呢？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.尝试添加无参构造函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;直接上代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Test &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; HttpServlet {

    Test(String a){
        System.out.println(&lt;/span&gt;&quot;这是构造函数&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doGet(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doPost(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好了，一个我们都熟悉的基本的servlet，它的名字叫做Test。&lt;/p&gt;
&lt;p&gt;为了方便起见，我们重写接口Servlet中的&lt;strong&gt;&lt;span&gt;init()&lt;/span&gt;&lt;/strong&gt;函数，并配置这个Servlet预加载，更直观的帮助我们理解。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Test &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; HttpServlet {&lt;br/&gt;&lt;/span&gt;&lt;span&gt;
    Test(){
        System.out.println(&lt;/span&gt;&quot;这是构造函数&quot;&lt;span&gt;);
    }&lt;br/&gt;@Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; init() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException {
        System.out.println(&lt;/span&gt;&quot;这是Init函数&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doGet(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doPost(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;好了，关于预加载，简单说，就是服务器运行的的时候，就会实例化这个servlet并且走完init()函数，这样，我们只需开启服务器，不需要进行请求，就可以看出这个servlet'是否被正确实例化。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;好了，测试开始，启动服务器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;实验结果：手动写的Test()构造函数没有被执行，init()函数也没被执行。浏览器访问此Servlet时，404错误。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;实验结论：当我们手动一个无参Servlet构造函数时，服务器就不会创建我们请求的servlet实例，当然也不会走servlet的生命周期&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.尝试有参构造函数&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Test &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; HttpServlet {

    Test(String a){
        System.out.println(&lt;/span&gt;&quot;这是构造函数&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; init() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException {
        System.out.println(&lt;/span&gt;&quot;这是Init函数&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doGet(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doPost(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果同无参构造函数一样：服务器不会创建servlet实例。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.web.xml给出错误提示&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1121293/201902/1121293-20190205235143357-1128501017.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;错误说，我们的servlet没有默认的构造函数。&lt;/p&gt;
&lt;p&gt;我们现在证明了，手动写一个有参和无参构造函数后，服务器都不会创建这个实例，根据xml错误，我们保留默认无参构造函数，并重载一个有参构造函数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Test &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; HttpServlet {

    Test(){}

    Test(String a){
        System.out.println(&lt;/span&gt;&quot;这是构造函数&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; init() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException {
        System.out.println(&lt;/span&gt;&quot;这是Init函数&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doGet(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doPost(HttpServletRequest req, HttpServletResponse resp) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {

    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实验结果：构造函数仍无法输出任何内容，init()方法也不输出，说明servlet仍未被创建实例。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.结果猜想：我们都知道，当我们请求servlet时候，服务器会根据servlet的servlet-class，反射创建servlet对象，并且会将一切参数传入到实例中（例如request，response，servletConfig等），&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;大致流程就是Class.from(&quot;我们的servlet-class&quot;).getDeclaredConstructor(上述说的参数类型...).newInstance(上述说的参数的值...)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;因为，只有这样构造实例，才能把一些必要的数据（&lt;/strong&gt;request，response，servletConfig&lt;/span&gt;），封装到实例里面。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;况且，这个有参构造函数，第一句又调用了无参构造函数，也就是 this();&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;这样，通过有参构造函数将参数传递过来并保存，然后在无参构造函数中，进行初始化servlet，因此，当我们重写了无参构造，服务器就无法完成这些流程，因此，服务器直接做一个判断，如果你手动写了构造函数，直接让这个servlet无法初始化。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 15:56:00 +0000</pubDate>
<dc:creator>刷书小将</dc:creator>
<og:description>我们需要用到servlet的时候，都是右键，新建一个servlet，但是有人注意到一个细节没有，当我们手动给我们的servlet添加一个构造函数时候，会出现什么状况呢？ 1.尝试添加无参构造函数 直接</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zh1996/p/10353351.html</dc:identifier>
</item>
<item>
<title>多媒体文件格式（三）：M3U8 格式 - 灰色飘零</title>
<link>http://www.cnblogs.com/renhui/p/10351870.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/renhui/p/10351870.html</guid>
<description>&lt;p&gt;M3U8文件是指UTF-8编码格式的M3U文件。M3U文件是记录了一个索引纯文本文件，打开它时播放软件并不是播放它，而是根据它的索引找到对应的音视频文件的网络地址进行在线播放。&lt;/p&gt;
&lt;p&gt;M3U8是一种常见的流媒体格式，主要以文件列表的形式存在，既支持直播又支持点播，尤其在Android、iOS等平台最为常用。&lt;/p&gt;
&lt;p&gt;下面是CCTV6直播播放地址：&lt;a id=&quot;url&quot; href=&quot;http://ivi.bupt.edu.cn/hls/cctv6hd.m3u8&quot; target=&quot;_blank&quot;&gt;http://ivi.bupt.edu.cn/hls/cctv6hd.m3u8&lt;/a&gt;的M3U8的文件列表：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#EXTM3U
#EXT&lt;/span&gt;-X-VERSION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-MEDIA-SEQUENCE:&lt;span&gt;35232&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-TARGETDURATION:&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000&lt;/span&gt;&lt;span&gt;,
cctv6hd&lt;/span&gt;-&lt;span&gt;1549272376000&lt;/span&gt;&lt;span&gt;.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000&lt;/span&gt;&lt;span&gt;,
cctv6hd&lt;/span&gt;-&lt;span&gt;1549272386000&lt;/span&gt;&lt;span&gt;.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000&lt;/span&gt;&lt;span&gt;,
cctv6hd&lt;/span&gt;-&lt;span&gt;1549272396000&lt;/span&gt;&lt;span&gt;.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000&lt;/span&gt;&lt;span&gt;,
cctv6hd&lt;/span&gt;-&lt;span&gt;1549272406000&lt;/span&gt;&lt;span&gt;.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000&lt;/span&gt;&lt;span&gt;,
cctv6hd&lt;/span&gt;-&lt;span&gt;1549272416000&lt;/span&gt;&lt;span&gt;.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000&lt;/span&gt;&lt;span&gt;,
cctv6hd&lt;/span&gt;-&lt;span&gt;1549272426000&lt;/span&gt;.ts
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面我们来分别说明一下相关的几个字段：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;EXTM3U：这个是M3U8文件必须包含的标签，并且必须在文件的第一行，所有的M3U8文件中必须包含这个标签。&lt;/li&gt;
&lt;li&gt;EXT-X-VERSION：M3U8文件的版本，常见的是3（目前最高版本应该是7）。&lt;/li&gt;
&lt;li&gt;EXT-X-TARGETDURATION：该标签指定了媒体文件持续时间的最大值，播放文件列表中的媒体文件在EXTINF标签中定义的持续时间必须小于或者等于该标签指定的持续时间。该标签在播放列表文件中必须出现一次。&lt;/li&gt;
&lt;li&gt;EXT-X-MEDIA-SEQUENCE：M3U8直播是的直播切换序列，当播放打开M3U8时，以这个标签的值作为参考，播放对应的序列号的切片。&lt;/li&gt;
&lt;li&gt;EXTINF：EXTINF为M3U8列表中每一个分片的duration，如上面例子输出信息中的第一片的duration为10秒。在EXTINF标签中，除了duration值，还可以包含可选的描述信息，主要为标注切片信息，使用逗号分隔开。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;关于客户端播放M3U8的标准还有更多的讲究，下面我们来介绍一些：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;分片必须是动态改变的，序列不能相同，并且序列必须是增序的。&lt;/li&gt;
&lt;li&gt;当M3U8没有出现EXT-X-ENDLIST标签时，无论这个M3U8列表中有多少分片，播放分片都是从倒数第三片开始播放，如果不满三片则不应该播放。当然如果有些播放器做了特别定制了，则可以不遵照这个原则。&lt;/li&gt;
&lt;li&gt;以播放当前分片的duration时间刷新M3U8列表，然后做对应的加载动作。&lt;/li&gt;
&lt;li&gt;前一片分片和后一片分片有不连续的时候，播放可能会出错，那么需要X-DISCONTINUTY标签来解决这个错误。&lt;/li&gt;
&lt;li&gt;如果播放列表在刷新之后与之前的列表相同，那么在播放当前分片duration一半的时间内在刷新一次。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;在上面，我们提到了，一些上面例子没有出现的一些标签字段，下面我们针对一些额外的标签做一些补充说明：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;EXT-X-ENDLIST：若出现EXT-X-ENDLIST标签，则表明M3U8文件不会再产生更多的切片，可以理解为该M3U8已停止更新，并且播放分片到这个标签后结束。M3U8不仅仅是可以作为直播，也可以作为点播存在，在M3U8文件中保存所有切片信息最后使用EXT-X-ENDLIST结尾，这个M3U8即为点播M3U8。EXT-X-ENDLIST标签可能会出现在播放列表文件的任何地方，但是不能出现两次或以上。&lt;/li&gt;
&lt;li&gt;EXT-X-STREAM-INF：EXT-X-STREAM-INF标签出现在M3U8时，主要是出现在多级M3U8文件中时，例如M3U8中包含子M3U8列表，或者主M3U8中包含多码率M3U8时；该标签后需要跟一些属性，下面就来逐一说明一下这些属性：&lt;/li&gt;
&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;
&lt;ol&gt;&lt;li&gt;BANDWIDTH：BANDWIDTH的值为最高码率值，当播放EXT-X-STREAM-INF下对应的M3U8时占用的最大码率（必要参数）。&lt;/li&gt;
&lt;li&gt;AVERAGE-BANDWIDTH：AVERAGE-BANDWIDTH的值为平均码率值，当播放EXT-X-STREAM-INF下对应的M3U8时占用的平均码率。（可选参数）。&lt;/li&gt;
&lt;li&gt;CODECS：CODECS的值用于声明EXT-X-STREAM-INF下面对应M3U8里面的音视频编码、视频编码的信息（可选参数）。&lt;/li&gt;
&lt;li&gt;RESOLUTION：M3U8中视频的宽高信息描述（可选参数）。&lt;/li&gt;
&lt;li&gt;FRAME-RATE：子M3U8中的视频帧率（可选参数）。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;HLS（全称：Http Live Streaming）是由Apple公司定义的用于实时流传输的协议，HLS基于HTTP协议实现，传输内容包括两部分，一是M3U8描述文件，二是TS媒体文件。&lt;/p&gt;
&lt;p&gt;HLS的优势为：自适应码率流播（adaptive streaming）。效果就是客户端会根据网络状况自动选择不同码率的视频流，条件允许的情况下使用高码率，网络繁忙的时候使用低码率，并且能够自动在二者之间随意切换。这对移动设备网络状况不稳定的情况下保障流畅播放非常有帮助。实现方法是服务器端提供多码率视频流，并且在列表文件中注明，播放器根据播放进度和下载速度进行自动调整。&lt;/p&gt;
&lt;p&gt;为什么要用 TS 而不是 MP4？这是因为两个 TS 片段可以无缝拼接，播放器能连续播放，而 MP4 文件由于编码方式的原因，两段 MP4 不能无缝拼接，播放器连续播放两个 MP4 文件会出现破音和画面间断，影响用户体验。而且如果要在一段长达一小时的视频中跳转，如果使用单个 MP4 格式的视频文件，并且也是用 HTTP 协议，那么需要代理服务器支持 HTTP range request 获取大文件中的一部分。这样的话，对于代理服务器的性能来说要求较高。而 HTTP Live Streaming 则只需要根据列表文件中的时间轴找出对应的 TS 片段下载即可，不需要 range request，对代理服务器的要求小很多。所有代理服务器都支持小文件的高效缓存。&lt;/p&gt;

&lt;h3&gt;1. FFmpeg转MP4为HLS(M3U8)文件&lt;/h3&gt;
&lt;p&gt;将MP4文件转换成HLS(M3U8)命令行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ffmpeg -re -i 好汉歌.mp4 -c copy -f hls -bsf:v h264_mp4toannexb output.m3u8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到生成的M3U8及相应的ts文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/682616/201902/682616-20190205171531524-1337912163.png&quot; alt=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;查看一下生成的M3U8文件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#EXTM3U
#EXT&lt;/span&gt;-X-VERSION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-TARGETDURATION:&lt;span&gt;10&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-MEDIA-SEQUENCE:&lt;span&gt;19&lt;/span&gt;&lt;span&gt;
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000000&lt;/span&gt;&lt;span&gt;,
output19.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;10.000000&lt;/span&gt;&lt;span&gt;,
output20.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;9.280000&lt;/span&gt;&lt;span&gt;,
output21.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;4.120000&lt;/span&gt;&lt;span&gt;,
output22.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;2.440000&lt;/span&gt;&lt;span&gt;,
output23.ts
#EXT&lt;/span&gt;-X-ENDLIST
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;细心的人可能发现一个问题，就是生成的m3u8文件里只有最后的五个片段的信息。这是因为ffmpeg 默认的list size 为5，所以只获得最后的5个片段。为了解决这个问题，需要指定参数-hls_list_size 0，这样就能包含所有的片段。&lt;/p&gt;
&lt;p&gt;下面是优化后的命令行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ffmpeg -re -i 好汉歌.mp4 -c copy -f hls -hls_list_size &lt;span&gt;0&lt;/span&gt; -bsf:v h264_mp4toannexb output.m3u8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这时，我们可以看到从output0.ts到output23.ts的文件列表了。&lt;/p&gt;
&lt;p&gt;可能有人会发现，无论是优化之前的命令行，还是优化后的命令行都有一个参数-bsf:v h264_mp4toannexb，这个参数的作用是将MP4中的H.264数据转换成为H.264 AnnexB标准的编码，AnnexB标准的编码常见于实时传输流中。如果源文件为FLV、TS等可以作为直播传输流的视频，则不需要这个参数。&lt;/p&gt;
&lt;p&gt;下面我们逐一介绍下使用FFmpeg生成HLS时还可以配置的其他参数。&lt;/p&gt;

&lt;h3&gt;1. start_number 参数&lt;/h3&gt;
&lt;p&gt;start_number 参数用于设置M3U8列表中的第一片的序列数。&lt;/p&gt;
&lt;p&gt;下面的例子中，我们使用start_number参数设置M3U8中的第一片序列书为100，命令行如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
ffmpeg -re -i huijia.mp4 -c copy -f hls -start_number &lt;span&gt;100&lt;/span&gt; -hls_list_size &lt;span&gt;0&lt;/span&gt; -bsf:v h264_mp4toannexb output.m3u8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出的M3U8内容如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#EXTM3U
#EXT&lt;/span&gt;-X-VERSION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-TARGETDURATION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-MEDIA-SEQUENCE:&lt;span&gt;100&lt;/span&gt;&lt;span&gt;
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output100.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output101.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output102.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output103.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output104.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output105.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output106.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;1.000000&lt;/span&gt;&lt;span&gt;,
output107.ts
#EXT&lt;/span&gt;-X-ENDLIST
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从输出可以看出，切片的第一片编号是100，上面的命令行参数的-start_number参数已生效。&lt;/p&gt;
&lt;h3&gt;2. hls_time 参数&lt;/h3&gt;
&lt;p&gt;hls_time参数用于设置M3U8列表中切片的duration。&lt;/p&gt;
&lt;p&gt;下面的例子中，我们使用hls_time参数设置M3U8的TS文件的每一片时长为9秒左右。命令行如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
ffmpeg -re -i huijia.mp4 -c copy -f hls -hls_time &lt;span&gt;9&lt;/span&gt; -hls_list_size &lt;span&gt;0&lt;/span&gt; -bsf:v h264_mp4toannexb output.m3u8 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后查看输出的M3U8内容如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#EXTM3U
#EXT&lt;/span&gt;-X-VERSION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-TARGETDURATION:&lt;span&gt;9&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-MEDIA-SEQUENCE:&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
#EXTINF:&lt;/span&gt;&lt;span&gt;9.000000&lt;/span&gt;&lt;span&gt;,
output0.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;9.000000&lt;/span&gt;&lt;span&gt;,
output1.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;4.000000&lt;/span&gt;&lt;span&gt;,
output2.ts
#EXT&lt;/span&gt;-X-ENDLIST
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到TS的文件每一片的时常都是9秒左右，hls_time参数生效。&lt;/p&gt;
&lt;p&gt;( 注意：hls_time设置后效果不一定准确，会受到关键帧大小及其他因素影响。)&lt;/p&gt;
&lt;h3&gt;3. hls_list_size 参数&lt;/h3&gt;
&lt;p&gt;hls_list_size参数用于为M3U8列表中的TS切片的个数。其中设置为0的时候，将包含所有。&lt;/p&gt;
&lt;p&gt;这个命令，我们在第3节优化MP4转HLS文件的命令行时使用到了。&lt;/p&gt;
&lt;p&gt;下面的例子中，我们使用hls_list_size参数设置只保留2片TS切片。命令行如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ffmpeg -re -i huijia.mp4 -c copy -f hls -hls_list_size &lt;span&gt;2&lt;/span&gt; -bsf:v h264_mp4toannexb output.m3u8 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看输出的M3U8内容如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#EXTM3U
#EXT&lt;/span&gt;-X-VERSION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-TARGETDURATION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-MEDIA-SEQUENCE:&lt;span&gt;6&lt;/span&gt;&lt;span&gt;
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
output6.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;1.000000&lt;/span&gt;&lt;span&gt;,
output7.ts
#EXT&lt;/span&gt;-X-ENDLIST
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从输出的M3U8内容可以看出，在M3U8文件中只保留了2片TS的文件信息，可以看出hls_list_size设置生效了。&lt;/p&gt;
&lt;h3&gt;4. hls_base_url参数&lt;/h3&gt;
&lt;p&gt;hls_base_url 参数用于为M3U8列表的文件路径设置前置基本路径参数，因为在FFmpeg中生成M3U8时写入的TS切片路径默认为M3U8生成的路径相同，但是实际上TS所存储的路径既可以为本地绝对路径，也可以为相对路径，还可以为网络路径，因此使用hls_base_url参数可以达到该效果，命令行如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
ffmpeg -re -i huijia.mp4 -c copy -f hls -hls_base_url /Users/renhui/Desktop/test/ -bsf:v h264_mp4toannexb output.m3u8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看输出的M3U8内容如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#EXTM3U
#EXT&lt;/span&gt;-X-VERSION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-TARGETDURATION:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXT&lt;/span&gt;-X-MEDIA-SEQUENCE:&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;/Users/renhui/Desktop/test/&lt;span&gt;output3.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;/Users/renhui/Desktop/test/&lt;span&gt;output4.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;/Users/renhui/Desktop/test/&lt;span&gt;output5.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;3.000000&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;/Users/renhui/Desktop/test/&lt;span&gt;output6.ts
#EXTINF:&lt;/span&gt;&lt;span&gt;1.000000&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;/Users/renhui/Desktop/test/&lt;span&gt;output7.ts
#EXT&lt;/span&gt;-X-ENDLIST
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到，TS的路径变为绝对路径了，使用ffplay output.m3u8播放，看到播放是能够正常播放的。这样就可以说明hls_base_url生效了。&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 15:38:00 +0000</pubDate>
<dc:creator>灰色飘零</dc:creator>
<og:description>一、M3U8 格式标准介绍 M3U8文件是指UTF-8编码格式的M3U文件。M3U文件是记录了一个索引纯文本文件，打开它时播放软件并不是播放它，而是根据它的索引找到对应的音视频文件的网络地址进行在线播</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/renhui/p/10351870.html</dc:identifier>
</item>
<item>
<title>大年初一，我在写年终总结 - 孤独的居士</title>
<link>http://www.cnblogs.com/sting2me/p/10353321.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sting2me/p/10353321.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;| &lt;/strong&gt;&lt;/span&gt;版权：本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接。如有问题，可以邮件：wangxu198709@gmail.com&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;我的2018&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;又到了一年一度的年终总结时间了，这次不太想写技术上的文章，主要聊聊“猿”生。并且这次我决定在网上写，借以表达自己的一些真实想法和感悟，同时也希望对大家有所借鉴意义；之前都是迫于无奈写给老板的（有么有同感^_^）&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;换工作&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;去年年中换了份工作，这应该是工作上最大的改变了，接受这个offer之前也是犹豫了一段时间的，主要就是能否适应新的环境和新的工作氛围，还有就是当时有了小朋友才几个月，没人带（后面会说到）。最后还是顶住压力，接受了。接受的主要原因可以列下来，供大家参考下&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;1. 公司因素&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;我是从13年底就开始做（OpenStack相关），从最初的愣头青到后面技术上差不多可以独当一面，自己也是吃了不少苦，是来之不易的，还有就是老板也是比较重视。但是从另一个层面讲，可以预见的很长一段时间，公司不会投入太多资源在OpenStack上，随着社区的日益成熟，社区的活跃度持续下降，对开发人员来讲，就是你能贡献和参与的机会大幅度减少。对个人来讲，持续提升的机会也就没有了，这个确实是产生离开想法的最大因素。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2. 个人因素&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;之前是在外资公司，按惯例，每年都会有组织架构调整，不过本人还是比较幸运，一直是在做OpenStack方面的东西，所以在这方面有比较深的积累或者说大大开阔自己在IAAS层面的视野。这也是我非常感激前公司（或者说上级领导）的地方。成也萧何败也萧何，接近5年固定在这个领域，确实会有疲惫感，老板也多次有意无意地提到是否有厌倦感，可以调配到其他小组。我是没直接跟老板表达过类似的要求，不知道老板是怎么觉察到的😓。不希望内部转岗的主要考虑还是技术积累，我还是希望之前几年的积累学有所用，而其他组的技术体系相差比较大，并且使用的都是很&quot;古老&quot;的成熟技术，对我的吸引力聊聊。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3. 家庭因素&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;由于有了小朋友，老婆一个人带，经济上的压力陡然增大。为啥是老婆一个人带呢？一个是老婆性格非常独立，更多希望是自己带，还有一个因素是没搞定两家父母，一家都没有搞定！这个真的是相当大的个人失败了！中间两方父母都分别过来跟老婆带过一段时间，但是都没坚持多久就回归到老婆一个人带的状态了。回到换公司的事，经济上的压力倒不是眼前的，一个小孩的开销还是抗的住，关键是对未来的期许会突然加大，虽然老婆一再强调等小朋友大些再考虑跳槽的事（小朋友真的是会消耗人的很多精力，老婆希望离家近，不加班的状态持续久一些的😄），我自己内心其实很早就在琢磨；机会永远留给有准备的人，我也留意一些外面的机会，同时认真总结这几年下来的收获和个人“卖点”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;比较了些机会，最终还是选择了现在的公司，互联网行业，在获得较高薪水的同时，也就意味着失去了更多的个人时间，同时工作压力也会大增，这个我在入职前跟老婆认真讨论过，最后还是决定加入现在的公司。个人心态调整好，再跟家里人（就我老婆一人了，小朋友太小，暂时没法征求他的意见😂）沟通好，一切就水到渠成了。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;开启新征途&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;虽然在加入之前，也是看了不少资料，觉得自己做好了十足的心理准备，非常自信能够快速适应新环境，可是在第一周，我都快不适应到窒息！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;首先，节奏相差太大&lt;/strong&gt;。新的岗位是容器和K8S相关，虽然说不能说是全新的东西，但是上手第2天就去改现有的代码，真的是错愕的不行，真正理解了什么是 『每行代码都认识，就是不知道干啥的』。还有就是沟通方式的变化，之前外资企业，沟通都是邮件，基本上白天发好邮件第二天或者当天晚上看情况处理都是很OK的，但是这边的沟通都是IM，一言不合电话就过来跟你讨论了：你什么时候能交付？这个bug什么时候能修复好？下午可以吗？有个东西不懂，现在有空吗？。。。。等等，完全没把我当新人啊。而这些在外企这辈子都不可能有的，新人入职少则一周，多则一个月的培训或者学习那是必须的。造成的后果是，我加入的前一周，我感觉我在这边都工作了一个月了，每天都很累。当然也可能仅仅是因为我在自己的舒适区待太久了，这些可能在老员工看来是再正常不过的事了&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;其次，观念上的巨大冲击&lt;/strong&gt;。之前是没有对快速迭代有具体的认识，来了后慢慢有了感受。可能你几天前的代码，你还没意识到，就已经在线上或者客户环境跑起来了；这个其实意味着你需要快速实现你的想法，同时你要尽量考虑到最多的场景，不然错误的代码会很快扩散，最终造成远超你可以想象的损失和范围。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;最后，技术上新的认识&lt;/strong&gt;。之前一直的理解是：作为技术人员，要竭尽所能写出最牛逼的代码，实现最最牛逼哄哄的功能，哪怕牺牲很多时间也在所不惜。现在慢慢地，认为技术很重要的一面是要兼顾其价值，技术必须要有变现的能力，否则不能落地的技术不能很好的实现让更多人收益的目的，说到底，技术是为人类造福的。不知道在哪儿看到的一句话“推动人类进步的从来都是资本而不是技术”。只有能带来价值，能惠及更多人的技术才具有更大的价值&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;一些感悟&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;2019，我已经不是一个年轻的“码农”了，希望下面的几条对各位有帮助。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一定要在固定的领域有自己的积累&lt;/strong&gt;：不管怎样，一定要锚定在一个领域，长期的耕耘，有了自己的积累，学习新的相关领域的东西都是很快速的；在夯实了自己的强项后，再去拓展新的领域完全没问题。虽然现在fullstack很火，但是我想说。在精力有限的情况下，还是要抓住主要矛盾！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;发现自己的兴趣点&lt;/strong&gt;：俗话说，兴趣是最好的老师，一点不假，唯一能让你持续在一个领域耕耘的恐怕只有它了。如何发现自己的兴趣，因人而异，如果没有明确，建议是多尝试差异很大的不同东西，每个都尝试一段时间，通过比较“择其善者而从之”即可&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;关键时刻，果断选择&lt;/strong&gt;：人的第六感很准，我一直这么认为，当你觉得需要改变时，及时改变方向，果断决定，有时候选择比努力关键的多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;期望大家在新的一年努力实现自己的目标，我们一起奋斗，2019我们一起加油。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;最后在这里打个硬广，欢迎有理想，有追求的同学加入我们，我们团队需要优秀的你！邮箱地址参见文字第一行&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 15:26:00 +0000</pubDate>
<dc:creator>孤独的居士</dc:creator>
<og:description>| 版权：本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接。如有问题，可以邮件：wangxu198709@gmail.com 我的201</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sting2me/p/10353321.html</dc:identifier>
</item>
<item>
<title>读书笔记——职业规划之《远见》 - 行者孙</title>
<link>http://www.cnblogs.com/sunchaothu/p/10353282.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sunchaothu/p/10353282.html</guid>
<description>&lt;ul&gt;&lt;li&gt;书名： 远见——如何规划生涯三大阶段&lt;/li&gt;
&lt;li&gt;作者：【加】布莱恩·费瑟斯通豪 Brain Fetherstonhaugh；&lt;br/&gt;奥美互动全球首席执行官&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;见文后附录&lt;/p&gt;

&lt;p&gt;18年夏天我从清华毕业，加入了一家还不成熟的创业公司，这个决定可能是稍稍欠考量的；因为工作了半年以来一方面感觉自己确实进步有限，另外一方面某些压力让我对于成功有更加强烈的渴望；好在公司确实在往好的方向发展，发展前景更加明朗，制度也更加健全，另外一方面经过半年的工作，我对于自己有了更多认知，明白自己需要真正严肃地考虑一下职业规划这件事情。《远见》是我读的第一部比较系统的讲述职业规划的书，豆瓣上有人说他说的都是普世的价值观，没什么用；我却觉得书中最重要的还是告诉了我们需要思考哪些问题，提高认知这件事情本身比较重要，而具体到个人自然需要有每个人的解法。&lt;/p&gt;
&lt;p&gt;作者首先提出职业生涯一般40年以上，是一场漫长的马拉松，需要可持续的、能够应对时代、社会和各种冲击的 职业规划的框架。作者的核心观点需要是有远见思维，把职业生涯分为三个阶段，第一阶段(约15年)是强势开局的阶段，需要为后面的职业生涯积累力量，学习曲线将会更加重要，还应该找到自己的甜蜜区（擅长的、喜欢的和社会需要的交集）；第二阶段一般在40岁以后，作为一个领导者，应该做差异化竞争，发扬自己的长板；第三阶段（60岁）是优化长尾，发挥影响力。作者还顺便讨论了如何平衡家庭与职业、面临跨国调动还有危机时如何处理等议题。&lt;/p&gt;
&lt;p&gt;在第一阶段，首先需要有&lt;strong&gt;远见&lt;/strong&gt;，多行动，少焦虑。考虑到40岁以前赚的钱在一辈子的比例，还有在某些技能上达到精通需要的时间等，以及为了人生的终极高度考虑，最重要的或许并不是一时的金钱、职位和影响力，更重要的是学习曲线。在这个阶段，需要积累的东西有&lt;strong&gt;可迁移的技能、有意义的经验和持久的关系。&lt;/strong&gt;作者称之为三大职场燃料，认为一个人在后两个职业阶段能达到怎样的高度，跟这一阶段的开局非常相关。作者还提供了些策略和清单来帮助我们厘清这些问题。个人认为正常一个人进入职场后，可能都会意识到职业技能的重要性，但是如果只考虑到当前工作所需要的技能，可能只见树木不见森林，还需要更加具有普遍适用性的技能的提升（例如表达和沟通，公众演讲的能力，情商，“人才引力”等），这可能也属于公司里技术老大常说的系统能力；而有意义的经验是作者认为人得经历很多种不同的背景的工作，如大公司、创业公司、跨国公司甚至是国外工作经验还有完成可能失败的甚至是失败的经验，在这些经历中弥补短板，这样的多样性使得人更有适应性或者按照我们程序员的理解为鲁棒性。而持久的关系可能是最值得我们理工科男生好好去领会的，因为除了自身价值以外，&lt;strong&gt;一个人能通过自己的影响力获得多少支持也是这个人的价值&lt;/strong&gt;，包括愿意跟着你干的下属，对你信任的上司还有支持引导你的导师一样的角色。&lt;/p&gt;
&lt;p&gt;第二阶段，一般是从执行者变为一个领导者了，甚至很多人这个时候创业自己当老板了；如果第一阶段做的比较好，应当能够知道自己的甜蜜区在哪里，成为一个专家，所以应该发挥自己的长板，而短板则依靠可靠的帮手来补足。关于如何成为一个好的领导者或者说一个领导者应该有怎样的素质，作者谈得或许并不深入，不过我们可以有个总体的印象，这部分知识我觉得还需要再去找专门的论述来补充。&lt;/p&gt;
&lt;p&gt;第三阶段，这个时候人一般是快退休了，或者在精力上不如壮年时候，这个时候的任务主要是选定接班人；还有凭借影响力和关联性成为顾问或者进入委员会这样子；还有就是在其他领域如非营利性机构、社区或者自己开始新的生意等。最精彩的事情就是本来以为到那个时候会很无聊，却仍然还有很多可能性。&lt;/p&gt;
&lt;p&gt;总结一下,这本书比较适合还在学校的学生或者刚开始工作的人士看，这个时候大多比较迷茫，对于职业规划的认知还没有形成体系，这本书比较系统地引导我们在职业生涯上进行思考，这正是我们所亟需的——提高认知，学会思考。!&lt;/p&gt;

&lt;p&gt;思维导图&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1472264/201902/1472264-20190205225505074-1811531468.png&quot; alt=&quot;思维导图&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 14:53:00 +0000</pubDate>
<dc:creator>行者孙</dc:creator>
<og:description>[toc] 书名及作者 书名： 远见——如何规划生涯三大阶段 作者：【加】布莱恩·费瑟斯通豪 Brain Fetherstonhaugh； 奥美互动全球首席执行官 思维导图 见文后附录 我的心得 18</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sunchaothu/p/10353282.html</dc:identifier>
</item>
<item>
<title>大数据技术之_04_Hadoop学习_01_HDFS_HDFS概述+HDFS的Shell操作(开发重点)+HDFS客户端操作(开发重点)+HDFS的数据流(面试重点)+NameNode和SecondaryNameNode(面试开发重点) - 黑泽君</title>
<link>http://www.cnblogs.com/chenmingjun/p/10353274.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenmingjun/p/10353274.html</guid>
<description>&lt;p id=&quot;tocid_0&quot; class=&quot;toc&quot;&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h1hdfs&quot;&gt;第1章 HDFS概述&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h11hdfs&quot;&gt;1.1 HDFS产出背景及定义&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h12hdfs&quot;&gt;1.2 HDFS优缺点&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h13hdfs&quot;&gt;1.3 HDFS组成架构&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h14hdfs&quot;&gt;1.4 HDFS文件块大小（面试重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h2hdfsshell&quot;&gt;第2章 HDFS的Shell操作（开发重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h3hdfs&quot;&gt;第3章 HDFS客户端操作（开发重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h31hdfs&quot;&gt;3.1 HDFS客户端环境准备&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h32hdfsapi&quot;&gt;3.2 HDFS的API操作&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h321hdfs&quot;&gt;3.2.1 HDFS文件上传（测试参数优先级）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h322hdfs&quot;&gt;3.2.2 HDFS文件下载&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h323hdfs&quot;&gt;3.2.3 HDFS文件夹删除&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h324hdfs&quot;&gt;3.2.4 HDFS文件名更改&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h325hdfs&quot;&gt;3.2.5 HDFS文件详情查看&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h326hdfs&quot;&gt;3.2.6 HDFS文件和文件夹判断&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h33hdfsio&quot;&gt;3.3 HDFS的I/O流操作（自定义框架使用）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h331hdfs&quot;&gt;3.3.1 HDFS文件上传&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h332hdfs&quot;&gt;3.3.2 HDFS文件下载&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h333&quot;&gt;3.3.3 定位文件读取&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h4hdfs&quot;&gt;第4章 HDFS的数据流（面试重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h41hdfs&quot;&gt;4.1 HDFS写数据流程&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h411&quot;&gt;4.1.1 剖析文件写入&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h412&quot;&gt;4.1.2 网络拓扑-节点距离计算&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h413&quot;&gt;4.1.3 机架感知（副本存储节点选择）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h42hdfs&quot;&gt;4.2 HDFS读数据流程&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h5namenodesecondarynamenode&quot;&gt;第5章 NameNode和SecondaryNameNode（面试开发重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h51nn2nn&quot;&gt;5.1 NN和2NN工作机制&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h52fsimageedits&quot;&gt;5.2 Fsimage和Edits解析&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h53checkpoint&quot;&gt;5.3 CheckPoint时间设置&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h54namenode&quot;&gt;5.4 NameNode故障处理（开发重点：偏运维）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h55&quot;&gt;5.5 集群安全模式&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10353274.html#h56namenode&quot;&gt;5.6 NameNode多目录配置&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;h1hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;第1章 HDFS概述&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h11hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;1.1 HDFS产出背景及定义&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1wKx.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;其他文件管理系统：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1GaF.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h12hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;1.2 HDFS优缺点&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;优点&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY11bT.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;缺点&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY18VU.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h13hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;1.3 HDFS组成架构&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;1）NameNode(nn)和DataNode(dn)&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1lrV.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;2）Client和Secondary NameNode(2nn)&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1J54.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h14hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;1.4 HDFS文件块大小（面试重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1NG9.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;思考：为什么块的大小不能设置太小，也不能设置太大？&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY10r6.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;传统硬盘HDD（Hard Disk Drive）传输速率：100MB/s&lt;br/&gt;固态硬盘SSD（Solid State Drive）传输速率：500MB/s&lt;br/&gt;混合硬盘HHD（Hybrid Harddrive）传输速率：300MB/s&lt;br/&gt;PCIe固态硬盘SSD（Solid State Drive）传输速率：1500MB/s
&lt;h2 id=&quot;h2hdfsshell&quot;&gt;&lt;span&gt;&lt;strong&gt;第2章 HDFS的Shell操作（开发重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1、基本语法&lt;/strong&gt;&lt;br/&gt;  bin/hadoop fs 具体命令 OR bin/hdfs dfs 具体命令&lt;br/&gt;  dfs是fs的实现类。&lt;br/&gt;&lt;strong&gt;2、命令大全&lt;/strong&gt;&lt;/p&gt;
&lt;pre readability=&quot;7.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;9&quot;&gt;[[atguigu@hadoop102 hadoop-2.7.2]$ bin/hadoop fs&lt;br/&gt;Usage: hadoop fs [generic options]&lt;br/&gt;[-appendToFile &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localsrc&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-cat [-ignoreCrc] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-checksum &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-chgrp [-R] GROUP PATH...]&lt;br/&gt;[-chmod [-R] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;MODE[,MODE]...&lt;/span&gt; | &lt;span class=&quot;hljs-attr&quot;&gt;OCTALMODE&lt;/span&gt;&amp;gt;&lt;/span&gt; PATH...]&lt;br/&gt;[-chown [-R] [OWNER][:[GROUP]] PATH...]&lt;br/&gt;[-copyFromLocal [-f] [-p] [-l] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localsrc&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-copyToLocal [-p] [-ignoreCrc] [-crc] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localdst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-count [-q] [-h] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-cp [-f] [-p | -p[topax]] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-createSnapshot &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;snapshotDir&lt;/span&gt;&amp;gt;&lt;/span&gt; [&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;snapshotName&lt;/span&gt;&amp;gt;&lt;/span&gt;]]&lt;br/&gt;[-deleteSnapshot &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;snapshotDir&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;snapshotName&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-df [-h] [&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]]&lt;br/&gt;[-du [-s] [-h] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-expunge]&lt;br/&gt;[-find &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;expression&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-get [-p] [-ignoreCrc] [-crc] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localdst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-getfacl [-R] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-getfattr [-R] {-n name | -d} [-e en] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-getmerge [-nl] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localdst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-help [cmd ...]]&lt;br/&gt;[-ls [-d] [-h] [-R] [&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]]&lt;br/&gt;[-mkdir [-p] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-moveFromLocal &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localsrc&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-moveToLocal &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localdst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-mv &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-put [-f] [-p] [-l] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;localsrc&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dst&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-renameSnapshot &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;snapshotDir&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;oldName&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;newName&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-rm [-f] [-r|-R] [-skipTrash] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-rmdir [--ignore-fail-on-non-empty] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dir&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-setfacl [-R] [{-b|-k} {-m|-x &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;acl_spec&lt;/span&gt;&amp;gt;&lt;/span&gt;} &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;]|[--set &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;acl_spec&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;]]&lt;br/&gt;[-setfattr {-n name [-v value] | -x name} &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-setrep [-R] [-w] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;rep&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-stat [format] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-tail [-f] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;file&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-test -[defsz] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;]&lt;br/&gt;[-text [-ignoreCrc] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;src&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-touchz &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-truncate [-w] &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;length&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt; ...]&lt;br/&gt;[-usage [cmd ...]]&lt;p&gt;Generic options supported are&lt;br/&gt;-conf &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;file&lt;/span&gt;&amp;gt;&lt;/span&gt;     specify an application configuration file&lt;br/&gt;-D &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property=value&lt;/span&gt;&amp;gt;&lt;/span&gt;            use value for given property&lt;br/&gt;-fs &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;local|namenode:port&lt;/span&gt;&amp;gt;&lt;/span&gt;      specify a namenode&lt;br/&gt;-jt &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;local|resourcemanager:port&lt;/span&gt;&amp;gt;&lt;/span&gt;    specify a ResourceManager&lt;br/&gt;-files &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;comma&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;separated&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;files&lt;/span&gt;&amp;gt;&lt;/span&gt;    specify comma separated files to be copied to the map reduce cluster&lt;br/&gt;-libjars &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;comma&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;separated&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;jars&lt;/span&gt;&amp;gt;&lt;/span&gt;    specify comma separated jar files to include in the classpath.&lt;br/&gt;-archives &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;comma&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;separated&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;archives&lt;/span&gt;&amp;gt;&lt;/span&gt;    specify comma separated archives to be unarchived on the compute machines.&lt;/p&gt;&lt;p&gt;The general command line syntax is&lt;br/&gt;bin/hadoop command [genericOptions] [commandOptions]&lt;/p&gt;&lt;p&gt;[atguigu@hadoop102 hadoop-2.7.2]$ &lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3．常用命令实操&lt;/strong&gt;&lt;br/&gt;（0）启动Hadoop集群（方便后续的测试）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/start-dfs.sh&lt;br/&gt;[atguigu@hadoop103 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/start-yarn.sh&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（1）-help：输出这个命令参数&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -help rm&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）-ls: 显示目录信息&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -ls /&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）-mkdir：在HDFS上创建目录&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;[atguigu@hadoop102 hadoop&lt;span class=&quot;hljs-number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]$ hadoop fs -mkdir -p &lt;span class=&quot;hljs-regexp&quot;&gt;/sanguo/shuguo/&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（4）-moveFromLocal：从本地系统中剪切粘贴文件到HDFS上（本地系统中不存在该文件）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ touch kongming.txt&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -moveFromLocal ./kongming.txt /sanguo/shuguo/&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（5）-appendToFile：追加一个文件到已经存在的文件末尾&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;hljs ruby&quot; readability=&quot;2&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ touch liubei.txt&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ vim liubei.txt&lt;br/&gt;输入&lt;br/&gt;san gu mao lu&lt;p&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -appendToFile liubei.txt /sanguo/shuguo/kongming.txt&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（6）-cat：显示文件内容&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -cat /sanguo/shuguo/kongming.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（7）-chgrp 、-chmod、-chown：跟Linux文件系统中的用法一样，修改文件所属权限&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs perl&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -&lt;span class=&quot;hljs-keyword&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;666&lt;/span&gt; /sanguo/shuguo/kongming.txt&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -&lt;span class=&quot;hljs-keyword&quot;&gt;chown&lt;/span&gt; atguigu:atguigu /sanguo/shuguo/kongming.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（8）-copyFromLocal：从本地文件系统中拷贝文件到HDFS路径中去（本地系统中还存在该文件）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -copyFromLocal README.txt /&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（9）-copyToLocal：从HDFS拷贝到本地系统中&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;[atguigu@hadoop102 hadoop&lt;span class=&quot;hljs-number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]$ hadoop fs -copyToLocal &lt;span class=&quot;hljs-regexp&quot;&gt;/sanguo/shuguo/kongming.txt ./&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（10）-cp：从HDFS的一个路径拷贝到HDFS的另一个路径（文件还在旧的HDFS中）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -cp /sanguo/shuguo/kongming.txt /zhuge.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（11）-mv：在HDFS目录中移动文件（文件不在旧的HDFS中，在新的HDFS中）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;[atguigu@hadoop102 hadoop&lt;span class=&quot;hljs-number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]$ hadoop fs -mv &lt;span class=&quot;hljs-regexp&quot;&gt;/zhuge.txt /sanguo/shuguo/&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（12）-get：等同于copyToLocal，就是从HDFS下载文件到本地系统中&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;[atguigu@hadoop102 hadoop&lt;span class=&quot;hljs-number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]$ hadoop fs -get &lt;span class=&quot;hljs-regexp&quot;&gt;/sanguo/shuguo/kongming.txt ./&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（13）-getmerge：合并下载多个文件，比如HDFS的目录 /user/atguigu/test/ 下有多个文件:log.1,log.2,log.3,……&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;[atguigu@hadoop102 hadoop&lt;span class=&quot;hljs-number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]$ hadoop fs -getmerge &lt;span class=&quot;hljs-regexp&quot;&gt;/sanguo/shuguo/&lt;/span&gt;* ./zaiyiqi.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（14）-put：等同于copyFromLocal，就是从本地文件系统中拷贝文件到HDFS路径中去&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;[atguigu@hadoop102 hadoop&lt;span class=&quot;hljs-number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]$ hadoop fs -put .&lt;span class=&quot;hljs-regexp&quot;&gt;/zaiyiqi.txt /sanguo/shuguo/&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（15）-tail：显示一个文件的末尾几行（因为日志文件一般是在文件的末尾不断地追加，即监控新产生的数据变化）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -tail /sanguo/shuguo/kongming.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（16）-rm：删除文件或文件夹&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -rm /sanguo/shuguo/zaiyiqi.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（17）-rmdir：删除空目录&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs perl&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -&lt;span class=&quot;hljs-keyword&quot;&gt;mkdir&lt;/span&gt; /test&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -&lt;span class=&quot;hljs-keyword&quot;&gt;rmdir&lt;/span&gt; /test&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（18）-du：统计文件夹的大小信息&lt;/p&gt;
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;hljs bash&quot; readability=&quot;3&quot;&gt;[atguigu@hadoop102 hadoop-2.7.2]$ hadoop fs -du -s -h /user/atguigu/&lt;span class=&quot;hljs-built_in&quot;&gt;test&lt;/span&gt;/&lt;br/&gt;2.7 K  /user/atguigu/&lt;span class=&quot;hljs-built_in&quot;&gt;test&lt;/span&gt;&lt;p&gt;[atguigu@hadoop102 hadoop-2.7.2]$ hadoop fs -du -h /user/atguigu/&lt;span class=&quot;hljs-built_in&quot;&gt;test&lt;/span&gt;/&lt;br/&gt;1.3 K  /user/atguigu/&lt;span class=&quot;hljs-built_in&quot;&gt;test&lt;/span&gt;/README.txt&lt;br/&gt;1.4 K  /user/atguigu/&lt;span class=&quot;hljs-built_in&quot;&gt;test&lt;/span&gt;/zaiyiqi.txt&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（19）-setrep：设置HDFS中文件的副本数量&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ hadoop fs -setrep &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; /kongming.txt&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;HDFS副本数量&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1tPJ.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;这里设置的副本数只是记录在NameNode的元数据中，是否真的会有这么多副本，还得看DataNode的数量。因为目前只有3台设备，最多也就3个副本，只有节点数的增加到10台时，副本数才能达到10。
&lt;h2 id=&quot;h3hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;第3章 HDFS客户端操作（开发重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h31hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 HDFS客户端环境准备&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;1、根据自己电脑的操作系统拷贝对应的编译后的hadoop jar包到非中文路径（例如：D:\Develop\hadoop-2.7.2），如下图所示。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1U2R.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;2、配置HADOOP_HOME环境变量，如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1ax1.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;3、配置Path环境变量，如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1rVO.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;4、创建一个Maven工程HdfsClientDemo&lt;br/&gt;5、导入相应的依赖坐标+日志添加
&lt;pre&gt;
&lt;code class=&quot;xml language-xml hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;junit&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;RELEASE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.logging.log4j&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;log4j-core&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.8.2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.hadoop&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;hadoop-common&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.7.2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.hadoop&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;hadoop-client&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.7.2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.hadoop&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;hadoop-hdfs&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.7.2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;jdk.tools&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jdk.tools&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;system&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;systemPath&lt;/span&gt;&amp;gt;&lt;/span&gt;${JAVA_HOME}/lib/tools.jar&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;systemPath&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意：如果Eclipse/Idea打印不出日志，在控制台上只显示&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs go&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1.l&lt;/span&gt;og4j:WARN No appenders could be found &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; logger (org.apache.hadoop.util.Shell).  &lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;2.l&lt;/span&gt;og4j:WARN Please initialize the log4j system properly.  &lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;3.l&lt;/span&gt;og4j:WARN See http:&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;需要在项目的src/main/resources目录下，新建一个文件，命名为“log4j.properties”，在文件中填入以下内容：&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;xml language-xml hljs&quot; readability=&quot;7&quot;&gt;log4j.rootLogger=INFO, stdout&lt;p&gt;log4j.appender.stdout=org.apache.log4j.ConsoleAppender&lt;br/&gt;log4j.appender.stdout.layout=org.apache.log4j.PatternLayout&lt;br/&gt;log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n&lt;/p&gt;&lt;p&gt;log4j.appender.logfile=org.apache.log4j.FileAppender&lt;br/&gt;log4j.appender.logfile.File=target/spring.log&lt;br/&gt;log4j.appender.logfile.layout=org.apache.log4j.PatternLayout&lt;br/&gt;log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;6、创建包名：com.atguigu.hdfs&lt;br/&gt;7、创建HdfsClient类&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;6&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HdfsClient&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testMkdirs&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;p&gt;&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;configuration.set(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fs.defaultFS&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;);&lt;br/&gt;FileSystem fs = FileSystem.get(configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;fs.mkdirs(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/0529/dashen&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;8、执行程序&lt;br/&gt;运行时需要配置用户名称，右键 -&amp;gt; Run Configurations，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1saD.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;客户端去操作HDFS时，是有一个用户身份的。默认情况下，HDFS客户端API会从JVM中获取一个参数来作为自己的用户身份：-DHADOOP_USER_NAME=atguigu，atguigu为用户名称。&lt;br/&gt;9、另一种【配置在集群上运行】的方式，可以不用手动配置用户名称
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HdfsClient&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testMkdirs&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;p&gt;&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;fs.mkdirs(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/0529/dashen&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h32hdfsapi&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 HDFS的API操作&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h321hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2.1 HDFS文件上传（测试参数优先级）&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、编写源代码&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testCopyFromLocalFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;br/&gt;configuration.set(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dfs.replication&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;);&lt;br/&gt;fs.copyFromLocalFile(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/temp/atguigu/0529/banzhang.txt&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/banzhang.txt&quot;&lt;/span&gt;));&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、在/HdfsClientDemo/src/main/resources/目录下新建hdfs-site.xml文件，文件内容如下，然后再次执行上传文件操作&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;xml language-xml hljs&quot; readability=&quot;2&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3．参数优先级&lt;br/&gt;参数优先级排序：（1）客户端代码中设置的值 &amp;gt;（2）ClassPath下的用户自定义配置文件设置的值 &amp;gt;（3）hdfs服务器的默认配置的值&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1BqK.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;效果如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1cPH.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h322hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2.2 HDFS文件下载&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testCopyToLocalFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;br/&gt;fs.copyToLocalFile(&lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/bancao.txt&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/temp/atguigu/0529/bancao.txt&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h323hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2.3 HDFS文件夹删除&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testDelete&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;br/&gt;fs.delete(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/0529/&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h324hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2.4 HDFS文件名更改&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testRename&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;br/&gt;fs.rename(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/banzhang.txt&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/yanjing.txt&quot;&lt;/span&gt;));&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h325hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2.5 HDFS文件详情查看&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;查看文件名称、权限、长度、块信息&lt;br/&gt;示例代码如下：&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;4&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testListFiles&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;br/&gt;RemoteIterator&amp;lt;LocatedFileStatus&amp;gt; listFiles = fs.listFiles(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (listFiles.hasNext()) {&lt;br/&gt;LocatedFileStatus fileStatus = listFiles.next();&lt;br/&gt;System.out.println(fileStatus.getPath().getName()); &lt;br/&gt;System.out.println(fileStatus.getPermission()); &lt;br/&gt;System.out.println(fileStatus.getLen()); &lt;br/&gt;System.out.println(fileStatus.getGroup()); &lt;p&gt;&lt;br/&gt;BlockLocation[] blockLocations = fileStatus.getBlockLocations();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (BlockLocation blockLocation : blockLocations) {&lt;br/&gt;String[] hosts = blockLocation.getHosts();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (String host : hosts) {&lt;br/&gt;System.out.println(host);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---------------------&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h326hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2.6 HDFS文件和文件夹判断&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;java language-java hljs&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;testListStatus&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;br/&gt;FileStatus[] listStatus  = fs.listStatus(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;));&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (FileStatus fileStatus : listStatus) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fileStatus.isFile()) {&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;f:&quot;&lt;/span&gt; + fileStatus.getPath().getName());&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;d:&quot;&lt;/span&gt; + fileStatus.getPath().getName());&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h33hdfsio&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3 HDFS的I/O流操作（自定义框架使用）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;  上面我们学的API操作HDFS系统都是框架封装好的。那么如果我们想自己实现上述API的操作该怎么实现呢？&lt;br/&gt;  我们可以采用IO流的方式实现数据的上传和下载。&lt;/p&gt;
&lt;h4 id=&quot;h331hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3.1 HDFS文件上传&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求：把本地&lt;code&gt;D:\temp\atguigu\0529\&lt;/code&gt;上的banhua.txt文件上传到HDFS根目录&lt;br/&gt;2、编写代码&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;10&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;putFileToHDFS&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;p&gt;&lt;br/&gt;FileInputStream fis = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/temp/atguigu/0529/banhua.txt&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FSDataOutputStream fos = fs.create(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/banzhang.txt&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.copyBytes(fis, fos, configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.closeStream(fos);&lt;br/&gt;IOUtils.closeStream(fis);&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h332hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3.2 HDFS文件下载&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求：从HDFS上下载banhua.txt文件到本地&lt;code&gt;D:\temp\atguigu\0529\&lt;/code&gt;上&lt;br/&gt;2、编写代码&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;10&quot;&gt;     * 从HDFS上下载banhua.txt文件到本地 D:\temp\atguigu\&lt;span class=&quot;hljs-number&quot;&gt;0529&lt;/span&gt;\ 上&lt;br/&gt;*/&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getFileFromHDFS&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;p&gt;&lt;br/&gt;FSDataInputStream fis = fs.open(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/banhua.txt&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileOutputStream fos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/temp/atguigu/0529/banhua.txt&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.copyBytes(fis, fos, configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.closeStream(fos);&lt;br/&gt;IOUtils.closeStream(fis);&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h333&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3.3 定位文件读取&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求：分块读取HDFS上的大文件，比如根目录下的/hadoop-2.7.2.tar.gz&lt;br/&gt;2、编写代码&lt;br/&gt;（1）下载第一块&lt;/p&gt;
&lt;pre readability=&quot;7.5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;9&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;readFileSeek1&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;p&gt;&lt;br/&gt;FSDataInputStream fis = fs.open(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/hadoop-2.7.2.tar.gz&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileOutputStream fos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/temp/atguigu/0529/hadoop-2.7.2.tar.gz.part1&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;byte&lt;/span&gt;[] buf = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;byte&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt;];&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;128&lt;/span&gt;; i++) {&lt;br/&gt;fis.read(buf);&lt;br/&gt;fos.write(buf);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.closeStream(fis);&lt;br/&gt;IOUtils.closeStream(fos);&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）下载第二块&lt;/p&gt;
&lt;pre readability=&quot;8.5&quot;&gt;
&lt;code class=&quot;java language-java hljs&quot; readability=&quot;11&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;readFileSeek2&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, URISyntaxException &lt;/span&gt;{&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;FileSystem fs = FileSystem.get(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; URI(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hdfs://hadoop102:9000&quot;&lt;/span&gt;), configuration, &lt;span class=&quot;hljs-string&quot;&gt;&quot;atguigu&quot;&lt;/span&gt;);&lt;p&gt;&lt;br/&gt;FSDataInputStream fis = fs.open(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/hadoop-2.7.2.tar.gz&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;fis.seek(&lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt;*&lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt;*&lt;span class=&quot;hljs-number&quot;&gt;128&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileOutputStream fos = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/temp/atguigu/0529/hadoop-2.7.2.tar.gz.part2&quot;&lt;/span&gt;));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.copyBytes(fis, fos, configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.closeStream(fis);&lt;br/&gt;IOUtils.closeStream(fos);&lt;br/&gt;fs.close();&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）合并文件&lt;br/&gt;在Window命令窗口中进入到目录 D:\temp\atguigu\0529\，然后执行如下命令，对数据进行合并&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;hadoop-2&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.gz&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.part2&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;hadoop-2&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.gz&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.part1&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;合并完成后，将hadoop-2.7.2.tar.gz.part1重新命名为hadoop-2.7.2.tar.gz。解压发现该tar包非常完整。&lt;/p&gt;
&lt;h2 id=&quot;h4hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;第4章 HDFS的数据流（面试重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h41hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1 HDFS写数据流程&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h411&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1.1 剖析文件写入&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;HDFS写数据流程，如下图所示。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1yIe.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;详解如下：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;1）客户端通过Distributed FileSystem模块向NameNode请求上传文件，NameNode检查目标文件是否已存在，父目录是否存在。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;2）NameNode返回是否可以上传。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;3）客户端请求第一个Block上传到哪几个DataNode服务器上。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;4）NameNode返回3个DataNode节点，分别为dn1、dn2、dn3。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;5）客户端通过FSDataOutputStream模块请求dn1上传数据，dn1收到请求会继续调用dn2，然后dn2调用dn3，将这个通信管道建立完成。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;6）dn1、dn2、dn3逐级应答客户端。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;7）客户端开始往dn1上传第一个Block（先从磁盘读取数据放到一个本地内存缓存），以Packet为单位，dn1收到一个Packet就会传给dn2，dn2传给dn3；dn1每传一个packet会放入一个应答队列等待应答。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;8）当一个Block传输完成之后，客户端再次请求NameNode上传第二个Block的服务器。（重复执行3-7步）。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;h412&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1.2 网络拓扑-节点距离计算&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;  在HDFS写数据的过程中，NameNode会选择距离待上传数据最近距离的DataNode接收数据。那么这个最近距离怎么计算呢？&lt;br/&gt;  &lt;code&gt;节点距离：&lt;/code&gt;两个节点到达最近的共同祖先的距离总和。&lt;br/&gt;网络拓扑概念：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY12RA.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;例如，假设有数据中心d1机架r1中的节点n1。该节点可以表示为/d1/r1/n1。利用这种标记，这里给出四种距离描述，如上图所示。&lt;br/&gt;大家算一算每两个节点之间的距离，如下图所示。&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1gGd.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h413&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1.3 机架感知（副本存储节点选择）&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、官方ip地址&lt;br/&gt;机架感知说明：http://hadoop.apache.org/docs/r2.7.2/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html#Data_Replication&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs delphi&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;For&lt;/span&gt; the common &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt;, when the replication factor &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; three, HDFS’s placement policy &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; put one replica &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; one node &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; the &lt;span class=&quot;hljs-keyword&quot;&gt;local&lt;/span&gt; rack, another &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; a different node &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; the &lt;span class=&quot;hljs-keyword&quot;&gt;local&lt;/span&gt; rack, &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; the last &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; a different node &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a different rack. This policy cuts the inter-rack &lt;span class=&quot;hljs-keyword&quot;&gt;write&lt;/span&gt; traffic which generally improves &lt;span class=&quot;hljs-keyword&quot;&gt;write&lt;/span&gt; performance. The chance &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; rack failure &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;far&lt;/span&gt; less than that &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; node failure; this policy does &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; impact data reliability &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; availability guarantees. However, it does reduce the aggregate network bandwidth used when reading data since a block &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; placed &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; only two unique racks rather than three. &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt; this policy, the replicas &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; a &lt;span class=&quot;hljs-keyword&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; evenly distribute across the racks. One third &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; replicas are &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; one node, two thirds &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; replicas are &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; one rack, &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; the other third are evenly distributed across the remaining racks. This policy improves &lt;span class=&quot;hljs-keyword&quot;&gt;write&lt;/span&gt; performance without compromising data reliability &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;read&lt;/span&gt; performance.&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;翻译如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs&quot;&gt;对于常见情况，当复制因子为3时，HDFS的放置策略是将一个副本放在本地机架中的一个节点上，另一个放在本地机架中的另一个节点上，将最后一个放在另一个机架中的另一个节点上。此策略可以减少机架间写入流量，从而提高写入性能。机架故障的可能性远小于节点故障的可能性; 此策略不会影响数据可靠性和可用性保证。但是，它确实减少了读取数据时使用的聚合网络带宽，因为块只放在两个唯一的机架而不是三个。使用此策略时，文件的副本不会均匀分布在机架上。三分之一的副本位于一个节点上，三分之二的副本位于一个机架上，另外三个副本均匀分布在剩余的机架上。&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、Hadoop2.7.2副本节点选择&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1fMt.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h42hdfs&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2 HDFS读数据流程&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;HDFS的读数据流程，如下图所示。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1RxI.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;详解如下：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;1）客户端通过Distributed FileSystem向NameNode请求下载文件，NameNode通过查询元数据，找到文件块所在的DataNode地址。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;2）挑选一台DataNode（就近原则，然后随机）服务器，请求读取数据。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;3）DataNode开始传输数据给客户端（从磁盘里面读取数据输入流，以Packet为单位来做校验）。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;4）客户端以Packet为单位接收，先在本地缓存，然后写入目标文件。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h5namenodesecondarynamenode&quot;&gt;&lt;span&gt;&lt;strong&gt;第5章 NameNode和SecondaryNameNode（面试开发重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h51nn2nn&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1 NN和2NN工作机制&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;code&gt;思考：&lt;/code&gt;NameNode中的元数据是存储在哪里的？&lt;br/&gt;  首先，我们做个假设，如果存储在NameNode节点的磁盘中，因为经常需要进行随机访问，还有响应客户请求，必然是效率过低。因此，元数据需要存放在内存中。但如果只存在内存中，一旦断电，元数据丢失，整个集群就无法工作了。&lt;code&gt;因此产生在磁盘中备份元数据的FsImage。&lt;/code&gt;&lt;br/&gt;  这样又会带来新的问题，当在内存中的元数据更新时，如果同时更新FsImage，就会导致效率过低，但如果不更新，就会发生一致性问题，一旦NameNode节点断电，就会产生数据丢失。&lt;code&gt;因此，引入Edits文件(只进行追加操作，效率很高)。每当元数据有更新或者添加元数据时，修改内存中的元数据并追加到Edits中。&lt;/code&gt;这样，一旦NameNode节点断电，可以通过FsImage和Edits的合并，合成元数据。&lt;br/&gt;  但是，如果长时间添加数据到Edits中，会导致该文件数据过大，效率降低，而且一旦断电，恢复元数据需要的时间过长。因此，需要定期进行FsImage和Edits的合并，如果这个操作由NameNode节点完成，又会效率过低。&lt;code&gt;因此，引入一个新的节点SecondaryNamenode，专门用于FsImage和Edits的合并。&lt;/code&gt;&lt;br/&gt;  NN和2NN工作机制，如下图所示。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1hsP.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;详解如下：&lt;br/&gt;&lt;strong&gt;1、第一阶段：NameNode启动&lt;/strong&gt;&lt;br/&gt;  （1）第一次启动NameNode格式化后，创建Fsimage和Edits文件。如果不是第一次启动，直接加载编辑日志和镜像文件到内存。&lt;br/&gt;  （2）客户端对元数据进行增删改的请求。&lt;br/&gt;  （3）NameNode先记录操作日志，更新滚动日志。&lt;br/&gt;  （4）NameNode然后在内存中对数据进行增删改。&lt;br/&gt;&lt;strong&gt;2、第二阶段：Secondary NameNode工作&lt;/strong&gt;&lt;br/&gt;  （1）Secondary NameNode询问NameNode是否需要CheckPoint。直接带回NameNode是否检查结果。&lt;br/&gt;  （2）Secondary NameNode请求执行CheckPoint。&lt;br/&gt;  （3）NameNode滚动正在写的Edits日志。&lt;br/&gt;  （4）将滚动前的编辑日志和镜像文件拷贝到Secondary NameNode。&lt;br/&gt;  （5）Secondary NameNode加载编辑日志和镜像文件到内存，并合并。&lt;br/&gt;  （6）生成新的镜像文件fsimage.chkpoint。&lt;br/&gt;  （7）拷贝fsimage.chkpoint到NameNode。&lt;br/&gt;  （8）NameNode将fsimage.chkpoint重新命名成fsimage。&lt;br/&gt;&lt;strong&gt;NN和2NN工作机制详解：&lt;/strong&gt;&lt;br/&gt;  Fsimage：NameNode内存中元数据序列化后形成的文件。&lt;br/&gt;  Edits：记录客户端更新元数据信息的每一步操作（可通过Edits运算出元数据）。&lt;br/&gt;  NameNode启动时，先滚动Edits并生成一个空的edits.inprogress，然后加载Edits和Fsimage到内存中，此时NameNode内存就持有最新的元数据信息。Client开始对NameNode发送元数据的增删改的请求，这些请求的操作首先会被记录到edits.inprogress中（查询元数据的操作不会被记录在Edits中，因为查询操作不会更改元数据信息），如果此时NameNode挂掉，重启后会从Edits中读取元数据的信息。然后，NameNode会在内存中执行元数据的增删改的操作。&lt;br/&gt;  由于Edits中记录的操作会越来越多，Edits文件会越来越大，导致NameNode在启动加载Edits时会很慢，所以需要对Edits和Fsimage进行合并（所谓合并，就是将Edits和Fsimage加载到内存中，照着Edits中的操作一步步执行，最终形成新的Fsimage）。SecondaryNameNode的作用就是帮助NameNode进行Edits和Fsimage的合并工作。&lt;br/&gt;  SecondaryNameNode首先会询问NameNode是否需要CheckPoint（触发CheckPoint需要满足两个条件中的任意一个，定时时间到和Edits中数据写满了）。直接带回NameNode是否检查结果。SecondaryNameNode执行CheckPoint操作，首先会让NameNode滚动Edits并生成一个空的edits.inprogress，滚动Edits的目的是给Edits打个标记，以后所有新的操作都写入edits.inprogress，其他未合并的Edits和Fsimage会拷贝到SecondaryNameNode的本地，然后将拷贝的Edits和Fsimage加载到内存中进行合并，生成fsimage.chkpoint，然后将fsimage.chkpoint拷贝给NameNode，重命名为Fsimage后替换掉原来的Fsimage。NameNode在启动时就只需要加载之前未合并的Edits和Fsimage即可，因为合并过的Edits中的元数据信息已经被记录在Fsimage中。

&lt;/blockquote&gt;
&lt;h3 id=&quot;h52fsimageedits&quot;&gt;&lt;span&gt;&lt;strong&gt;5.2 Fsimage和Edits解析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1、概念&lt;/strong&gt;&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1IZ8.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;strong&gt;2、oiv查看Fsimage文件&lt;/strong&gt;&lt;br/&gt;（1）查看oiv和oev命令&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;hljs vbnet&quot; readability=&quot;2&quot;&gt;[atguigu@hadoop102 current]$ hdfs&lt;br/&gt;Usage: hdfs [--config confdir] [--loglevel loglevel] COMMAND&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; COMMAND &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; one &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt;:&lt;br/&gt;dfs                  run a filesystem command &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; the file systems supported &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; Hadoop.&lt;br/&gt;classpath            prints the classpath&lt;br/&gt;namenode -format     format the DFS filesystem&lt;br/&gt;secondarynamenode    run the DFS secondary namenode&lt;br/&gt;namenode             run the DFS namenode&lt;br/&gt;journalnode          run the DFS journalnode&lt;br/&gt;zkfc                 run the ZK Failover Controller daemon&lt;br/&gt;datanode             run a DFS datanode&lt;br/&gt;dfsadmin             run a DFS admin client&lt;br/&gt;haadmin              run a DFS HA admin client&lt;br/&gt;fsck                 run a DFS filesystem checking utility&lt;br/&gt;balancer             run a cluster balancing utility&lt;br/&gt;jmxget               &lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt; JMX exported values &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; NameNode &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; DataNode.&lt;br/&gt;mover                run a utility &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; move block replicas across&lt;br/&gt;storage types&lt;br/&gt;oiv                  apply the offline fsimage viewer &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; an fsimage&lt;br/&gt;oiv_legacy           apply the offline fsimage viewer &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; an legacy fsimage&lt;br/&gt;oev                  apply the offline edits viewer &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; an edits file&lt;br/&gt;fetchdt              fetch a delegation token &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; the NameNode&lt;br/&gt;getconf              &lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt; config values &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; configuration&lt;br/&gt;groups               &lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt; the groups which users belong &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt;&lt;br/&gt;snapshotDiff         diff two snapshots &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; a directory &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; diff the&lt;br/&gt;current directory contents &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; a snapshot&lt;br/&gt;lsSnapshottableDir   list all snapshottable dirs owned &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; the current user&lt;br/&gt;Use -help &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; see options&lt;br/&gt;portmap              run a portmap service&lt;br/&gt;nfs3                 run an NFS version &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; gateway&lt;br/&gt;cacheadmin           configure the HDFS cache&lt;br/&gt;crypto               configure HDFS encryption zones&lt;br/&gt;storagepolicies      list/&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;/&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; block storage policies&lt;br/&gt;version              print the version&lt;p&gt;Most commands print help &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; invoked w/o parameters.&lt;br/&gt;[atguigu@hadoop102 current]$ &lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）基本语法&lt;br/&gt;  hdfs oiv -p 文件类型 -i 镜像文件 -o 转换后文件输出路径&lt;br/&gt;（3）案例实操&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 current]$ pwd&lt;br/&gt;/opt/&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;hadoop&lt;/span&gt;-2.7.2/&lt;span class=&quot;hljs-title&quot;&gt;data&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;tmp&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;dfs&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;name&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;current&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;[atguigu@hadoop102 current]$ hdfs oiv -p XML -i fsimage_0000000000000000124 -o fsimage.xml&lt;br/&gt;[atguigu@hadoop102 current]$ cat fsimage.xml &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将显示的xml文件内容拷贝到Eclipse中创建的xml文件中，并格式化。部分显示结果如下。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml language-xml hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16385&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;DIRECTORY&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549193480818&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rwxr-xr-x&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;nsquota&lt;/span&gt;&amp;gt;&lt;/span&gt;9223372036854775807&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;nsquota&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dsquota&lt;/span&gt;&amp;gt;&lt;/span&gt;-1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dsquota&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16386&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;wc.input&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549109263472&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191451377&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741825&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1001&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;43&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16394&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;kongming.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;10&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549172409335&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549172409063&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741832&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1009&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;28&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16398&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yanjing.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549182842815&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191453687&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741833&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1010&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;29&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16399&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;banhua.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549183347279&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191440485&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741834&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1011&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;29&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16400&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;bancao.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549183571406&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191438143&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741835&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1012&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;29&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16401&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;banzhang.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549192955364&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549192955243&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741836&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1013&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;12&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;16402&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;FILE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;hadoop-2.7.2.tar.gz&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;replication&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549193480811&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;mtime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;1549193471067&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;atime&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;perferredBlockSize&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;atguigu:supergroup:rw-r--r--&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;permission&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741837&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1014&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;134217728&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;1073741838&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;1015&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;genstamp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;63439959&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;numBytes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;block&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;blocks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;inode&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;思考：&lt;/code&gt;可以看出，Fsimage中没有记录块所对应DataNode，为什么？&lt;br/&gt;答：是因为在集群启动后，要求DataNode上报数据块信息，并间隔一段时间后再次上报。所以我们要先启动集群。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、oev查看Edits文件&lt;/strong&gt;&lt;br/&gt;（1）基本语法&lt;br/&gt;  hdfs oev -p 文件类型 -i 编辑日志 -o 转换后文件输出路径&lt;br/&gt;（2）案例实操&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 current]$ hdfs oev -p XML -i edits_0000000000000000103-&lt;span class=&quot;hljs-number&quot;&gt;000000000000000010&lt;/span&gt;8 -o edits.xml&lt;br/&gt;[atguigu@hadoop102 current]$ cat edits.xml&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将显示的xml文件内容拷贝到Eclipse中创建的xml文件中，并格式化。显示结果如下。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml language-xml hljs&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;EDITS&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;EDITS_VERSION&lt;/span&gt;&amp;gt;&lt;/span&gt;-63&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;EDITS_VERSION&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;OP_START_LOG_SEGMENT&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;103&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;OP_TIMES&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;104&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;/bancao.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;-1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191438143&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;OP_TIMES&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;105&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;/banhua.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;-1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191440485&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;OP_TIMES&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;106&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;/wc.input&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;-1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191451377&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;OP_TIMES&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;107&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;LENGTH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;/yanjing.txt&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;PATH&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;-1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;MTIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;1549191453687&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ATIME&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;OP_END_LOG_SEGMENT&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;OPCODE&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;108&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TXID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;DATA&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;RECORD&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;EDITS&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;思考：&lt;/code&gt;NameNode如何确定下次开机启动的时候合并哪些Edits？&lt;br/&gt;答：根据&lt;code&gt;seen_txid&lt;/code&gt;里面记录最新的&lt;code&gt;Fsimage(镜像文件)&lt;/code&gt;的值去合并&lt;code&gt;Edits(编辑日志)&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;h53checkpoint&quot;&gt;&lt;span&gt;&lt;strong&gt;5.3 CheckPoint时间设置&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;（1）通常情况下，SecondaryNameNode每隔一小时执行一次。&lt;br/&gt;[hdfs-default.xml]&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml language-xml hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.checkpoint.period&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;3600&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;SecondaryNameNode每隔一小时执行一次&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）当操作次数达到1百万时，SecondaryNameNode执行一次。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml language-xml hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.checkpoint.txns&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1000000&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;操作动作次数&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）一分钟检查一次操作次数。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml language-xml hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.checkpoint.check.period&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;60&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;1分钟检查一次操作次数&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;该文件截图如下：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY14qf.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h54namenode&quot;&gt;&lt;span&gt;&lt;strong&gt;5.4 NameNode故障处理（开发重点：偏运维）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;  NameNode故障后，可以采用如下两种方法恢复数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法一：将SecondaryNameNode中数据拷贝到NameNode存储数据的目录。&lt;/strong&gt;&lt;br/&gt;1、kill -9 NameNode进程&lt;br/&gt;2、删除NameNode存储的数据目录中的数据（目录位置：/opt/module/hadoop-2.7.2/data/tmp/dfs/name/）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ rm -rf /opt/&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;hadoop&lt;/span&gt;-2.7.2/&lt;span class=&quot;hljs-title&quot;&gt;data&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;tmp&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;dfs&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;name&lt;/span&gt;/*&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3、拷贝SecondaryNameNode中数据到原NameNode存储数据目录&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 name]$ pwd&lt;br/&gt;/opt/&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;hadoop&lt;/span&gt;-2.7.2/&lt;span class=&quot;hljs-title&quot;&gt;data&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;tmp&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;dfs&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;[atguigu@hadoop102 name]$ scp -r atguigu@hadoop104&lt;span class=&quot;hljs-symbol&quot;&gt;:/opt/module/hadoop-&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;/data/tmp/dfs/namesecondary/* ./&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4、重新启动NameNode&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/hadoop-daemon.sh start namenode&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;方法二：使用&lt;code&gt;-importCheckpoint&lt;/code&gt;选项启动NameNode守护进程，从而将SecondaryNameNode中数据拷贝到NameNode目录中。&lt;/strong&gt;&lt;br/&gt;1、修改hdfs-site.xml中的内容，新增如下，然后分发到其他节点&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;7&quot;&gt;[atguigu@hadoop102 hadoop-2.7.2]$ vim etc/hadoop/hdfs-site.xml&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.checkpoint.period&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;120&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;/opt/module/hadoop-2.7.2/data/tmp/dfs/name/&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;[atguigu@hadoop102 hadoop-2.7.2]$ xsync etc/hadoop/&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、kill -9 NameNode进程&lt;br/&gt;3、删除NameNode存储的数据目录中的数据（目录位置：/opt/module/hadoop-2.7.2/data/tmp/dfs/name/）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ rm -rf /opt/&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;hadoop&lt;/span&gt;-2.7.2/&lt;span class=&quot;hljs-title&quot;&gt;data&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;tmp&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;dfs&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;name&lt;/span&gt;/*&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4、如果SecondaryNameNode不和NameNode在一个主机节点上，需要将&lt;code&gt;SecondaryNameNode存储数据的目录namesecondary&lt;/code&gt;拷贝到&lt;code&gt;NameNode存储数据的平级目录name&lt;/code&gt;，并删除in_use.lock文件&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 dfs]$ pwd&lt;br/&gt;/opt/&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;hadoop&lt;/span&gt;-2.7.2/&lt;span class=&quot;hljs-title&quot;&gt;data&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;tmp&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;dfs&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;[atguigu@hadoop102 dfs]$ ll&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;drwx------. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt; data&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt; name&lt;br/&gt;[atguigu@hadoop102 dfs]$ scp -r atguigu@hadoop104&lt;span class=&quot;hljs-symbol&quot;&gt;:/opt/module/hadoop-&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;/data/tmp/dfs/namesecondary/ ./&lt;br/&gt;[atguigu@hadoop102 dfs]$ ll&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;drwx------. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt; data&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt; name&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;04&lt;/span&gt; namesecondary&lt;br/&gt;[atguigu@hadoop102 dfs]$&lt;br/&gt;[atguigu@hadoop102 dfs]$ rm -rf namesecondary/in_use.lock &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;5、导入检查点数据（设置的是2分钟，等待一会ctrl+c结束掉）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ bin/hdfs namenode -importCheckpoint&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;6、启动NameNode&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/hadoop-daemon.sh start namenode&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;方式二比方式一要检查的东西多一些，方式一比较直接。&lt;/p&gt;
&lt;h3 id=&quot;h55&quot;&gt;&lt;span&gt;&lt;strong&gt;5.5 集群安全模式&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1、概述&lt;/strong&gt;&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1odS.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;strong&gt;2、基本语法&lt;/strong&gt;&lt;br/&gt;集群处于安全模式，不能执行重要操作（写操作）。集群启动完成后，自动退出安全模式。&lt;br/&gt;（1）bin/hdfs dfsadmin -safemode get （功能描述：[查看/获取]安全模式状态）&lt;br/&gt;（2）bin/hdfs dfsadmin -safemode enter （功能描述：[进入/开启]安全模式状态）&lt;br/&gt;（3）bin/hdfs dfsadmin -safemode leave （功能描述：[离开]安全模式状态）&lt;br/&gt;（4）bin/hdfs dfsadmin -safemode wait （功能描述：[等待]安全模式状态）&lt;br/&gt;演示如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/05/kY1TIg.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;strong&gt;3、案例&lt;/strong&gt;&lt;br/&gt;模拟等待安全模式&lt;br/&gt;（1）查看当前模式&lt;br/&gt;（2）先进入安全模式&lt;br/&gt;（3）创建并执行下面的脚本&lt;br/&gt;在/opt/module/hadoop-2.7.2路径上，编辑一个脚本safemode.sh&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ bin/hdfs dfsadmin -safemode get&lt;br/&gt;Safe mode is OFF&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ bin/hdfs dfsadmin -safemode enter&lt;br/&gt;Safe mode is ON&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ touch safemode.sh&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ vim safemode.sh &lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ cat safemode.sh &lt;br/&gt;hdfs dfsadmin -safemode wait&lt;br/&gt;hdfs dfs -put /opt/&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt;/&lt;span class=&quot;hljs-title&quot;&gt;hadoop&lt;/span&gt;-2.7.2/&lt;span class=&quot;hljs-title&quot;&gt;README&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;txt&lt;/span&gt; /&lt;/span&gt;&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ bash ./safemode.sh &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（4）再打开一个窗口，执行该脚本&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ bin/hdfs dfsadmin -safemode leave&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（5）观察&lt;br/&gt;  （a）再观察上一个窗口&lt;br/&gt;    Safe mode is OFF&lt;br/&gt;  （b）HDFS集群上已经有上传的数据了。&lt;/p&gt;
&lt;h3 id=&quot;h56namenode&quot;&gt;&lt;span&gt;&lt;strong&gt;5.6 NameNode多目录配置&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;1、NameNode的本地目录可以配置成多个，且每个目录存放内容相同，增加了可靠性。&lt;br/&gt;2、具体配置如下：&lt;br/&gt;（1）在hdfs-site.xml文件中增加如下内容，保存退出后，然后进行分发操作&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;2&quot;&gt;[atguigu@hadoop102 hadoop-2.7.2]$ vim etc/hadoop/hdfs-site.xml&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;file:///${hadoop.tmp.dir}/dfs/name1,file:///${hadoop.tmp.dir}/dfs/name2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;[atguigu@hadoop102 hadoop-2.7.2]$ xsync etc/hadoop/&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）停止集群，删除data和logs中所有数据。&lt;/p&gt;
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;hljs ruby&quot; readability=&quot;3&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/stop-dfs.sh         关闭全部 NameNode 和 DataNode &lt;br/&gt;[atguigu@hadoop103 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/stop-yarn.sh                关闭全部 ResourceManager 和 NodeManager &lt;p&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ rm -rf data/ logs/&lt;br/&gt;[atguigu@hadoop103 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ rm -rf data/ logs/&lt;br/&gt;[atguigu@hadoop104 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ rm -rf data/ logs/&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）格式化集群并启动。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ bin/hdfs namenode –format&lt;br/&gt;[atguigu@hadoop102 hadoop-&lt;span class=&quot;hljs-number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]$ sbin/start-dfs.sh     开启全部 NameNode 和 DataNode &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（4）查看结果&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs ruby&quot;&gt;[atguigu@hadoop102 dfs]$ ll&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; name1&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; name2&lt;br/&gt;[atguigu@hadoop102 dfs]$ cd name1/&lt;br/&gt;[atguigu@hadoop102 name1]$ cd current/&lt;br/&gt;[atguigu@hadoop102 current]$ ll&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;354&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu  &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.md5&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; seen_txid&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;205&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; VERSION&lt;br/&gt;[atguigu@hadoop102 current]$ cd ..&lt;br/&gt;[atguigu@hadoop102 name1]$ cd ..&lt;br/&gt;[atguigu@hadoop102 dfs]$ cd name2/&lt;br/&gt;[atguigu@hadoop102 name2]$ cd current/&lt;br/&gt;[atguigu@hadoop102 current]$ ll&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;354&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu  &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.md5&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; seen_txid&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;205&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; VERSION&lt;br/&gt;[atguigu@hadoop102 current]$ cd ..&lt;br/&gt;[atguigu@hadoop102 name2]$ cd ..&lt;br/&gt;[atguigu@hadoop102 dfs]$ ll&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;drwx------. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt; data&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt; name1&lt;br/&gt;drwxrwxr-x. &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt; name2&lt;br/&gt;[atguigu@hadoop102 dfs]$ ll name1/current/&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;1052&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu      &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; edits_0000000000000000001-&lt;span class=&quot;hljs-number&quot;&gt;0000000000000000002&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;1048576&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt; edits_inprogress_0000000000000000003&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu     &lt;span class=&quot;hljs-number&quot;&gt;354&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu      &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.md5&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu     &lt;span class=&quot;hljs-number&quot;&gt;354&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; fsimage_0000000000000000002&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu      &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; fsimage_0000000000000000002.md5&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu       &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; seen_txid&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu     &lt;span class=&quot;hljs-number&quot;&gt;205&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; VERSION&lt;br/&gt;[atguigu@hadoop102 dfs]$ ll name2/current/&lt;br/&gt;总用量 &lt;span class=&quot;hljs-number&quot;&gt;1052&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu      &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; edits_0000000000000000001-&lt;span class=&quot;hljs-number&quot;&gt;0000000000000000002&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu &lt;span class=&quot;hljs-number&quot;&gt;1048576&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt; edits_inprogress_0000000000000000003&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu     &lt;span class=&quot;hljs-number&quot;&gt;354&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu      &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; fsimage_000000000000000000&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.md5&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu     &lt;span class=&quot;hljs-number&quot;&gt;354&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; fsimage_0000000000000000002&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu      &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; fsimage_0000000000000000002.md5&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu       &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt; seen_txid&lt;br/&gt;-rw-rw-r--. &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; atguigu atguigu     &lt;span class=&quot;hljs-number&quot;&gt;205&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;月   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; VERSION&lt;br/&gt;[atguigu@hadoop102 dfs]$ &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 05 Feb 2019 14:48:00 +0000</pubDate>
<dc:creator>黑泽君</dc:creator>
<og:description>第1章 HDFS概述1.1 HDFS产出背景及定义1.2 HDFS优缺点1.3 HDFS组成架构1.4 HDFS文件块大小（面试重点）第2章 HDFS的Shell操作（开发重点）第3章 HDFS客户端</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenmingjun/p/10353274.html</dc:identifier>
</item>
<item>
<title>Java反射+简单工厂模式总结 - dashuai的博客</title>
<link>http://www.cnblogs.com/kubixuesheng/p/10344427.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kubixuesheng/p/10344427.html</guid>
<description>&lt;p&gt;通过 new 创建对象，会使得程序面向实现编程，先举个例子，某个果园里现在有两种水果，一种是苹果，一种是香蕉，有客户想采摘园子里的水果，要求用get()方法表示即可&lt;/p&gt;
&lt;p&gt;一般情况下，最直接的写法为：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Apple {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;得到苹果&quot;&lt;span&gt;);
    }
}
 
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Banana {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;得到香蕉&quot;&lt;span&gt;);
    }
}
 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户端&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; one() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实例化一个apple&lt;/span&gt;
        Apple apple = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Apple();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实例化一个banana&lt;/span&gt;
        Banana banana = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Banana();
        apple.get();
        banana.get();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上代码，一堆的水果类，必须等到运行时才能知道实例化哪一个。一旦水果类有变化或者扩展，还要重新修改客户端类，一旦代码量多了，或者系统复杂了，修改的成本是很大的。&lt;/p&gt;
&lt;p&gt;那么可以用一种方法替代，就是工厂模式——把实例化的具体代码从应用中抽离，或者封装。工厂模式的变形比较多，本文只引申简单工厂模式。&lt;/p&gt;

&lt;p&gt;教科书的定义：&lt;/p&gt;
&lt;blockquote class=&quot;ct-blockquote&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;简单工厂模式属于类的创建型模式，也叫静态工厂方法模式。它通过专门定义一个类来负责创建其他类的实例，目的是为了隐藏具体类的对象的创建过程，既不耽误对象的创建，也隐藏了创建过程，被创建的实例通常都具有共同父类&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继续看水果的例子，后来果园有了新需求——用采摘到的水果做果汁，要求使用 doJuice(对应的水果)生产果汁。水果类的代码可以保持不变，客户端新加的其他代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户端&lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; doJuice(Apple apple) {
    apple.get();
    System.out.println(&lt;/span&gt;&quot;做成果汁&quot;&lt;span&gt;);
}

&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; doJuice(Banana banana) {
    banana.get();
    System.out.println(&lt;/span&gt;&quot;做成果汁&quot;&lt;span&gt;);
}
 
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; one() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实例化一个apple&lt;/span&gt;
        Apple apple = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Apple();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实例化一个banana&lt;/span&gt;
        Banana banana = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Banana();
        doJuice(apple);
        doJuice(banana);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;随着业务发展，后来果园又引进了大量新水果，比如橘子，西瓜，柿子，荔枝，葡萄，哈密瓜，火龙果等。如果继续用之前的代码，那么除了必须新加水果类之外，在客户端里还要分别为每一类水果添加对应的doJuice（水果）方法，然而水果那么多……使得代码的维护性，稳定性变差&lt;/p&gt;
&lt;h2&gt;面向接口编程&lt;/h2&gt;
&lt;p&gt;为了增加程序的灵活性，可以做一些抽象，即把各个具体的水果都抽象化，可以选择抽象类或者接口去实现，现在要创建不带任何方法定义和成员变量的抽象化的类，首选的应该是接口&lt;/p&gt;
&lt;p&gt;如图1所示，接口有扩展能力，也就是旧的接口能 extends 新接口，从而使得代码的扩展行为是可行的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/682679/201902/682679-20190204115521417-508259998.png&quot; alt=&quot;&quot; width=&quot;462&quot; height=&quot;229&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用接口的另一个原因和抽象类一样，都是为了避免某个类被实例化，可以告诉编译器，以及一起协作开发的程序员，这个类不需要实例化，它只是为了对某些行为做出规范，谁想用，谁就去遵守这个规则即可。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Fruit {
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; get();
}
 
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AppleA &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Fruit {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;苹果&quot;&lt;span&gt;);
    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BananaA &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Fruit {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;香蕉&quot;&lt;span&gt;);
    }
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户端 &lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doJuiceB(Fruit fruit) { &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Fruit 是接口，只需要一个方法 doJuiceB&lt;/span&gt;
&lt;span&gt;    fruit.get();
    System.out.println(&lt;/span&gt;&quot;做成果汁&quot;&lt;span&gt;);
}
 
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; two() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用接口的引用指向子类的对象，向上转型过程，用到了多态&lt;/span&gt;
        Fruit apple = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AppleA();
        Fruit banana &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; BananaA();
        Fruit orange &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; OrangeA();

        doJuiceB(apple);
        doJuiceB(banana);
        doJuiceB(orange);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;综上，接口的作用可以概括为两个：&lt;/p&gt;
&lt;p&gt;1、避免客户端去实例化某个类&lt;/p&gt;
&lt;p&gt;2、向上转型的使用（多态） &lt;/p&gt;
&lt;h2&gt;分离变的部分&lt;/h2&gt;
&lt;p&gt;继续看这个例子，客户只是想把果园采摘的水果做出果汁，客户作为调用者，只需要水果去做出果汁，而水果具体怎么得到的，其实客户不需要也没必要关心，调用者没必要为了喝果汁还花代价去亲自采摘水果……&lt;/p&gt;
&lt;p&gt;之前的设计，客户端有一个传入接口类型参数的 doJuiceB(Fruit fruit); 方法。客户端调用该方法可以动态的做出不同水果的果汁，现在把采集水果的代码单独放到一个类里，隐藏起来，分离变化的部分，我们叫它工厂类，下面是代码实现。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 工厂生产水果
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 对于客户端来说，不再直接简单粗暴的 new 一个水果的实例，而是把生成水果的实例的过程放到一个单独的类，把这个实例化的过程隐藏了起来……我们叫它工厂类&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FruitFactory {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; FruitC getApple() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AppleC();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; FruitC getBanana() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; BananaC();
    }
}
 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户端&lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; doJuice(FruitC fruit) {
    fruit.get();
    System.out.println(&lt;/span&gt;&quot;做成果汁&quot;&lt;span&gt;);
}
 
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; three() {
    FruitC apple &lt;/span&gt;=&lt;span&gt; FruitFactory.getApple();
    FruitC banana &lt;/span&gt;=&lt;span&gt; FruitFactory.getBanana();

    doJuice(apple);
    doJuice(banana);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;简单工厂模式解决的问题是如何去实例化一个合适的对象，简单工厂模式的核心思想就是有一个专门的类来负责创建实例。具体来说，把产品看为是一系列的类的集合，这些类由某个抽象类或者接口派生出一个对象树，工厂类产生一个合适的对象来满足客户的要求，从而把对象的创建过程进行封装&lt;/p&gt;
&lt;p&gt;如果简单工厂模式所涉及到的具体产品之间没有共同的逻辑，那么就可以使用接口来扮演抽象产品的角色，如果具体产品之间有逻辑上的联系，就把这些共同的东西提取出来，放在一个抽象类中，然后让具体产品继承抽象类，以实现代码复用，如图2所示。借用高斯林（Java之父）所说：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;共同的东西总是应该抽象出来。在实际的的使用中，抽象产品和具体产品之间往往是多层次的产品结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;引入简单工厂模式&lt;/h2&gt;
&lt;p&gt;上面的设计，对于客户端来说，不再直接简单粗暴的 new 一个水果的实例，而是把生成水果的实例的过程放到一个单独的类，把这个实例化的过程隐藏了起来……我们叫它工厂类，这个设计也叫简单工厂模式——它解决的问题是如何去实例化一个合适的对象。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;简单工厂模式的核心思想就是：有一个专门的类来负责创建实例。&lt;/strong&gt;&lt;/span&gt;具体来说，把产品看着是一系列的类的集合，这些类是由某个抽象类或者接口派生出来的一个对象树，而工厂类用来产生一个合适的对象来满足客户的要求，从而把对象的创建过程进行封装，如果简单工厂模式所涉及到的具体产品之间没有共同的逻辑，那么我们就可以使用接口来扮演抽象产品的角色，如果具体产品之间有逻辑上的联系，我们就把这些共同的东西提取出来，放在一个抽象类中，然后让具体产品继承抽象类，为实现更好复用的目的，共同的东西总是应该抽象出来的。在实际的的使用中，抽象产品和具体产品之间往往是多层次的产品结构，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/682679/201902/682679-20190204132100296-67354811.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面看看教科书的定义：简单工厂模式属于类的创建型模式，也叫静态工厂方法模式，通过专门定义一个类来负责创建其他类的实例，目的是为了隐藏具体类的对象的创建过程，既不耽误对象的创建，也隐藏了创建过程。被创建的实例通常都具有共同父类&lt;/p&gt;
&lt;p&gt;本例子里，苹果和香蕉都有一个共同的父类——水果，此时我们专门定义一个类，负责创建其他类的实例，这个类叫简单工厂类，它有三个角色：&lt;/p&gt;
&lt;p&gt;1、工厂（Creator）角色：简单工厂模式的核心，它负责实现创建所有实例的内部逻辑。工厂类可以被外界直接调用，创建所需的产品对象。&lt;/p&gt;
&lt;p&gt;2、抽象产品（Product）角色：简单工厂模式所创建的所有对象的父类，它负责描述所有实例所共有的公共接口，或者抽象类。&lt;/p&gt;
&lt;p&gt;3.具体产品（Concrete Product）角色：简单工厂模式所创建的具体实例对象，这些对象去继承或者实现抽象角色&lt;/p&gt;
&lt;p&gt;不过，细细体味下，在工厂类里针对每一个水果都有一个对应的获取水果的操作，这是一种很粗糙的设计，还可以更好，就是把每个get方法抽象为一个公用的get方法，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; FruitD {
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; get();
}
&lt;/span&gt;&lt;span&gt;//////////////////////////////
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AppleD &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; FruitD {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;苹果&quot;&lt;span&gt;);
    }
}
&lt;/span&gt;&lt;span&gt;//////////////////////////////&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BananaD &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; FruitD {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;香蕉&quot;&lt;span&gt;);
    }
}
&lt;/span&gt;&lt;span&gt;//////////////////////////////
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FruitFactoryFour {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; FruitD getFruit(String type) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&quot;apple&quot;&lt;span&gt;.equalsIgnoreCase(type)) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AppleD();
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&quot;banana&quot;&lt;span&gt;.equalsIgnoreCase(type)) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; BananaD();
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            System.out.print(&lt;/span&gt;&quot;error!&quot;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样稍微好了点儿，把每个水果对应的get方法抽象为一个公用的get方法，工厂类里根据传入的参数，去判断应该生成哪个水果的对象，并把这个对象返回（依然是向上转型的使用），客户端只需简单的进行调用即可。&lt;/p&gt;
&lt;p&gt;非常方便，也隐藏了具体产品的实例化过程，完美的完成了客户和水果厂的需求。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;可以认为&lt;/strong&gt;&lt;strong&gt;简单工厂模式的核心是工厂类，这个类含有必要的逻辑判断（if-else），可以决定在什么时候创建哪一个类的实例，而调用者则可以免除直接创建对象的责任。简单工厂模式通过这种做法实现了对责任的分割，当系统引入新的产品的时候无需修改调用者。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;虽然简单工厂模式分离了产品的创建者和消费者，有利于软件系统结构的优化，但是由于一切产品创建的业务逻辑都集中在一个工厂类中，导致了没有很高的内聚性，同时也违背了开闭原则。另外，简单工厂模式的方法一般都是静态的，而静态工厂方法让子类继承是可能被隐藏的，因此，简单工厂模式无法形成基于基类的继承树结构。&lt;/p&gt;
&lt;p&gt;到了这里，其实又要想，不要过度的优化，不要为了使用设计模式而使用设计模式，如果是业务比较简单的场景，这样的简单工厂模式还是非常好用的。但无论如何，繁琐的if-else判断还是不太好，一旦判断条件稍微多点儿，if-else写起来就非常繁琐。&lt;/p&gt;
&lt;p&gt;观察一些开源框架实现类似场景的代码，发现它们使用了 Java 的反射机制省去了判断的步骤，比之前的繁琐的 if-else 判断要好一些，如下代码。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; FruitE {
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; get();
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BananaE &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; FruitE {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;香蕉&quot;&lt;span&gt;);
    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; AppleE &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; FruitE {
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; get() {
        System.out.println(&lt;/span&gt;&quot;苹果&quot;&lt;span&gt;);
    }
}
 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 新的工厂类&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FruitFactoryFive {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; FruitE getFruit(String type) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ClassNotFoundException, IllegalAccessException, InstantiationException {
        Class fruit &lt;/span&gt;=&lt;span&gt; Class.forName(type);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (FruitE) fruit.newInstance();
    }
}
 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户端&lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; five() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; IllegalAccessException, InstantiationException, ClassNotFoundException {
        FruitE apple &lt;/span&gt;= FruitFactoryFive.getFruit(&quot;simpleFactory.five.AppleE&quot;&lt;span&gt;);
        FruitE banana &lt;/span&gt;= FruitFactoryFive.getFruit(&quot;simpleFactory.five.BananaE&quot;&lt;span&gt;);

        apple.get();
        banana.get();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如此一来，使得工厂的扩展性变强了。&lt;/p&gt;
&lt;h2 id=&quot;id-1、forName方法和newInstance方法&quot;&gt;补充：forName 方法和 newInstance 方法&lt;/h2&gt;
&lt;p&gt;从 JVM 的角度看，使用 new 的时候，这个要 new 的类可以没有被 JVM 加载，但是使用 newInstance，就必须保证这个类已经加载且这个类已经链接，而完成这两个步骤的正是 Class 的静态方法 forName(......)，该方法调用了启动类加载器（bootstrap加载器）去加载类（不初始化）。&lt;/p&gt;
&lt;p&gt;Class 类的对象方法 newInstance 与静态方法 forName 实际上是把 new 关键字做的事情分解为了两步：&lt;/p&gt;
&lt;p&gt;1、加载某个类&lt;/p&gt;
&lt;p&gt;2、初始化&lt;/p&gt;
&lt;p&gt;这样分步调用构造器的好处是显而易见的，因为它的粒度更细，所以程序可以在实例化类的时候获得更好的灵活性，催生一些降耦手段。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;事实上，Class 类的 newinstance 方法经常被各种框架使用，它是解耦合的利器之一，比如设计模式中最最常见的工厂模式。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;当然，一些知名的开源框架使用了更高级的asm等字节码框架，能使反射操作的性能非常高效，并且还能修改已经编译的字节码，使得程序的灵活性变得很强。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;依托配置文件（注解）完全解耦&lt;/h2&gt;
&lt;p&gt;但是依然不完美—客户端缺少调用的灵活性，客户端必须传入严格对应类名的字符串，甚至还要包含完整的包名，才能实例化对应的类，稍微差一点儿，都会失败。故还是前面说的，简单的业务一般使用if-else的方式传入字符串即可，而稍微复杂的，可以变为反射的方式实现，而反射实现工厂类，对于客户端又显得调用上不方便。一些开源框架使用了配置文件或者注解解决了该问题，现在Java世界的主流是约定优于配置，注解是主流。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
String className = readConfig(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 从配置文件中获得类的句柄&lt;/span&gt;
Class c =&lt;span&gt; Class.forName(className);
factory &lt;/span&gt;= (FruitE)c.newInstance();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用配置文件消灭了写死的产品类名称，无论产品怎么变化，代码不会再修改，甚至可以更换类的子类，只要他们继承该类（实现接口）就可以。&lt;/p&gt;
&lt;p&gt;当然进一步就是自定义注解处理器，实现自己系统的注解&lt;/p&gt;

&lt;p&gt;JDBC是SUN公司提供的一套数据库编程接口。它能提供简单、一致的方式访问各种关系型数据库。Java通过JDBC可以执行SQL语句，并能对获取的数据进行处理，将变化了的数据存回数据库。用JDBC进行数据库访问时，要使用数据库厂商提供的驱动程序接口与DBMS进行交互。客户端要使用使用数据时，只需要和工厂交互即可，这就是典型的简单工厂模式的应用。使得程序员的代码量得到极大的简化。&lt;/p&gt;
&lt;p&gt;操作步骤按照顺序依次为：&lt;/p&gt;
&lt;p&gt;1、注册并加载数据库驱动，一般使用Class.forName();&lt;/p&gt;
&lt;p&gt;2、创建与数据库的链接Connection对象&lt;/p&gt;
&lt;p&gt;3、创建SQL语句对象preparedStatement(sql)；&lt;/p&gt;
&lt;p&gt;4、提交SQL语句，根据实际情况使用executeQuery()或者executeUpdate()；&lt;/p&gt;
&lt;p&gt;5、显示相应的结果&lt;/p&gt;
&lt;p&gt;6、关闭数据库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/682679/201902/682679-20190204212915456-542304475.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;优点&lt;/h2&gt;
&lt;p&gt;工厂类是整个模式的关键所在，它包含必要的判断逻辑，能够根据外界给定的信息，决定究竟应该创建哪个具体类的对象。&lt;/p&gt;
&lt;p&gt;用户在使用时可以直接根据工厂类去创建所需的实例，而无需了解这些对象是如何创建以及如何组织的，有利于整个软件体系结构的优化&lt;/p&gt;
&lt;h2&gt;缺点&lt;/h2&gt;
&lt;p&gt;由于工厂类集中了所有实例的创建逻辑，这就直接导致一旦这个工厂出了问题，所有的客户端都会受到牵连；&lt;/p&gt;
&lt;p&gt;由于简单工厂模式的产品基于一个共同的抽象类或者接口，这样一来，产品的种类增加的时候，即有不同的产品接口或者抽象类的时候，工厂类就需要判断何时创建何种种类的产品，这就和创建何种种类产品的产品相互混淆在了一起，违背了单一职责，导致系统丧失灵活性和可维护性。&lt;/p&gt;
&lt;p&gt;简单工厂模式违背了“开放封闭原则”，因为当新增加一个产品的时候必须修改工厂类，相应的工厂类就需要重新编译一遍。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一句话：虽然简单工厂模式分离产品的创建者和消费者，有利于软件系统结构的优化，但由于一切逻辑都集中在一个工厂类中，导致了没有很高的内聚性，同时也违背了“开放封闭原则”。另外，简单工厂模式的方法一般都是静态的，而静态工厂方法是无法让子类继承的，因此，简单工厂模式无法形成基于基类的继承树结构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Java中有5类创建对象的方式&lt;/p&gt;
&lt;p&gt;1、new&lt;/p&gt;
&lt;p&gt;2、反射，Class.newInstance()或Contructor.newInstance()，其本质是一样的，都采用了反射机制&lt;/p&gt;
&lt;p&gt;3、clone方法&lt;/p&gt;
&lt;p&gt;4、反序列化&lt;/p&gt;
&lt;p&gt;5、JNI &lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 14:41:00 +0000</pubDate>
<dc:creator>dashuai的博客</dc:creator>
<og:description>除了 new 之外的创建对象的方法 通过 new 创建对象，会使得程序面向实现编程，先举个例子，某个果园里现在有两种水果，一种是苹果，一种是香蕉，有客户想采摘园子里的水果，要求用get()方法表示即可</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kubixuesheng/p/10344427.html</dc:identifier>
</item>
<item>
<title>SpringMVC源码阅读：拦截器 - Rest探路者</title>
<link>http://www.cnblogs.com/Java-Starter/p/10352802.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Java-Starter/p/10352802.html</guid>
<description>&lt;h2&gt;1.前言&lt;/h2&gt;
&lt;p&gt;SpringMVC是目前J2EE平台的主流Web框架，不熟悉的园友可以看&lt;span&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/10304896.html&quot;&gt;&lt;span&gt;SpringMVC源码阅读入门&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;postTitle2&quot;&gt;,它交代了SpringMVC的基础知识和源码阅读的技巧&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;postTitle2&quot;&gt;本文将通过源码(基于Spring4.3.7)分析，弄清楚SpringMVC拦截器的工作原理&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;2.源码分析&lt;/h2&gt;
&lt;p&gt;进入SpringMVC核心类DispatcherServlet的doDispatch方法，在&lt;span&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/10310565.html&quot;&gt;&lt;span&gt;SpringMVC源码阅读：核心分发器DispatcherServlet&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;postTitle2&quot;&gt;曾经&lt;/span&gt;&lt;span class=&quot;postTitle2&quot;&gt;分析过，这里再分析一遍&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205165053850-1042059676.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;936行获得HandlerExecutionChain,含有HandlerMethod和interceptorList&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;943行根据HandlerExecutionChain获取RequestMappingHandlerAdapter&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205165828167-1913035755.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;958行如果HandlerExecutionChain需要执行下一个拦截器，则返回True&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;963HandlerAdapter调用Handler处理请求，可以看到，请求方法夹在&lt;span&gt;applyPreHandle&lt;/span&gt;和&lt;span&gt;applyPostHandle之间&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;&lt;span&gt;980行processDispatchResult会调用&lt;span&gt;triggerAfterCompletion&lt;/span&gt;，不抛出异常&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;&lt;span&gt;983和986行调用&lt;span&gt;triggerAfterCompletion&lt;/span&gt;会抛出异常&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;重点看下936行getHandler方法，点进去&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205174022410-2135145074.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1156行HandlerMapping调用getHandler方法获取HandlerExecutionChain&lt;/p&gt;
&lt;p&gt;对着getHandler ctrl+alt+b跳转到HandlerMapping接口方法实现处，在AbstractHandlerMapping类中&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205175213908-2145460367.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;352行获取HandlerMethod&lt;/p&gt;
&lt;p&gt;365行获取&lt;span&gt;HandlerExecutionChain&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;366行对跨域请求进行拦截处理&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;点进去365行的getHandlerExecutionChain方法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205180555151-2045308596.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;417行获取requestmapping请求路径&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;419行判断HandlerInterceptor是不是MappedInterceptor类型，不是则直接向HandlerExecutionChain加入HandlerInterceptor&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HandlerInterceptor是MappedInterceptor类型，需要检验是否匹配，最后向HandlerExecutionChain加入HandlerInterceptor&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;getCorsHandlerExecutionChain方法获取跨域的HandlerExecutionChain和getHandlerExecutionChain同理，园友可自行分析&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;现在看看HandlerExecutionChain&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;postTitle2&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205170127476-480936956.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;主要看applyPostHandle、applyPreHandle和triggerAfterCompletion方法&lt;/p&gt;
&lt;p&gt;打开applyPostHandle方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205172437432-1586595948.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;130行接收HandlerInterceptor数组&lt;/p&gt;
&lt;p&gt;134行HandlerInterceptor的preHandle方法执行失败依然会执行HandlerExecutionChain的&lt;span&gt;triggerAfterCompletion&lt;/span&gt;方法 &lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205172628213-1331053944.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;triggerAfterCompletion方法在所有拦截器preHandle方法成功执行返回True后才会执行（触发afterCompletion）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205172702936-224211764.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;3.实例&lt;/h2&gt;
&lt;p&gt;设置自定义拦截器，继承&lt;span&gt;HandlerInterceptorAdapter&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205200251936-2079441117.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; LoginInterceptor &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; HandlerInterceptorAdapter {

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; preHandle(HttpServletRequest request, HttpServletResponse response,
                             Object handler) &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获得请求路径的uri&lt;/span&gt;
        String uri =&lt;span&gt; request.getRequestURI();

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 判断路径是登出还是登录验证，是这两者之一的话执行Controller中定义的方法&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(uri.endsWith(&quot;/login/auth&quot;) || uri.endsWith(&quot;/login/out&quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 进入登录页面，判断session中是否有key，有的话重定向到首页，否则进入登录界面&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(uri.endsWith(&quot;/login/&quot;) || uri.endsWith(&quot;/login&quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(request.getSession() != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; request.getSession().getAttribute(&quot;loginUser&quot;) != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                response.sendRedirect(request.getContextPath() &lt;/span&gt;+ &quot;/index&quot;&lt;span&gt;);
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 其他情况判断session中是否有key，有的话继续用户的操作&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(request.getSession() != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; request.getSession().getAttribute(&quot;loginUser&quot;) != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 最后的情况就是进入登录页面&lt;/span&gt;
        response.sendRedirect(request.getContextPath() + &quot;/login/login&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试Controller&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
@RequestMapping(value &lt;/span&gt;= &quot;/login&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LoginController {

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;@RequestMapping(value = {&quot;/&quot;, &quot;&quot;})&lt;/span&gt;
    @RequestMapping(value = {&quot;login&quot;&lt;span&gt;})
    @ResponseBody
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String login() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;login&quot;&lt;span&gt;;
    }

    @RequestMapping(&lt;/span&gt;&quot;/auth&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String auth(@RequestParam String username, HttpServletRequest req) {
        req.getSession().setAttribute(&lt;/span&gt;&quot;loginUser&quot;&lt;span&gt;, username);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;redirect:/&quot;&lt;span&gt;;
    }

    @RequestMapping(&lt;/span&gt;&quot;/out&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String out(HttpServletRequest req) {
        req.getSession().removeAttribute(&lt;/span&gt;&quot;loginUser&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;redirect:/login/login&quot;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在dispatcher-servlet.xml配置拦截器&lt;/p&gt;
&lt;p&gt;因为我们使用了&lt;span&gt;&amp;lt;&lt;span&gt;mvc&lt;span&gt;:annotation-driven/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;注解,&lt;span&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/10342909.html&quot;&gt;&lt;span&gt;SpringMVC源码阅读：Json，Xml自动转换&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;postTitle2&quot;&gt;提到过&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;lt;mvc:annotation-driven/&amp;gt;自动帮我们注册了&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;RequestMappingHandlerMapping&lt;/li&gt;
&lt;li&gt;RequestMappingHandlerAdapter&lt;/li&gt;
&lt;li&gt;ExceptionHandlerExceptionResolver&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;所以只要在RequestMappingHandlerMapping中配置interceptors属性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205200954998-1650788056.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;interceptors属性来自于RequestMappingHandlerMapping的父类AbstractHandlerMapping&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;interceptors&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.format.demo.interceptor.LoginInterceptor&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在浏览器输入任何路径，都会跳转到http://localhost:8080/springmvcdemo/login/login，说明拦截器已经生效&lt;/p&gt;
&lt;p&gt;浏览器输入http://localhost:8080/springmvcdemo/login/auth?username=ss，给HttpSession设置Attribute，返回主界面&lt;/p&gt;
&lt;p&gt;浏览器输入http://localhost:8080/springmvcdemo/login/out，将HttpSession的Attribute移除，重定向到http://host:port/contextPath/login/login&lt;/p&gt;

&lt;p&gt;我们还可以通过&lt;span&gt;&amp;lt;&lt;span&gt;mvc&lt;span&gt;:interceptors&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;标签来配置拦截器，此时不需要再配置RequestMappingHandlerMapping的interceptors属性&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:interceptors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:interceptor&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:mapping &lt;/span&gt;&lt;span&gt;path&lt;/span&gt;&lt;span&gt;=&quot;/**&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:exclude-mapping &lt;/span&gt;&lt;span&gt;path&lt;/span&gt;&lt;span&gt;=&quot;/login/out&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:exclude-mapping &lt;/span&gt;&lt;span&gt;path&lt;/span&gt;&lt;span&gt;=&quot;/login/auth&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.format.demo.interceptor.LoginInterceptor&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mvc:interceptor&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mvc:interceptors&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;LoginInterceptor这段代码和mvc:exclude-mapping功能一致，是指不拦截的请求路径,可以注释掉&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205203332230-781924597.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;运行效果和刚才一致&lt;/p&gt;

&lt;p&gt;讲一下为什么可以这么配置拦截器,mvc:interceptors由&lt;span&gt;InterceptorsBeanDefinitionParser&lt;/span&gt;解析，该类实现了&lt;span&gt;BeanDefinitionParser，我在&lt;span&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/10342909.html&quot;&gt;&lt;span&gt;SpringMVC源码阅读：Json，Xml自动转换&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;分析过mvc:annotation-driven如何由AnnotationDrivenBeanDefinitionParser解析，道理是类似的，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;核心方法是parse，在InterceptorsBeanDefinitionParser的parse方法打断点验证一下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190205203759502-1883264912.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和我们用mvc:interceptors标签配置的内容一致&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;postTitle2&quot;&gt;4.总结&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;postTitle2&quot;&gt;HandlerExecutionChain由Handler对象和Handler拦截器组成，由HandlerMapping的getHandler方法返回,RequestMappingHandlerMapping将adaptedInterceptors传递给HandlerExecutionChain的interceptorList&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;postTitle2&quot;&gt;HandlerInterceptor接口允许自定义Handler执行链，并为Handler注册已存在或者自定义的拦截器&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AbstractHandlerMapping是HandlerMapping的抽象类，支持优先级排序、默认的Handler和handler拦截器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HandlerMapping根据请求信息调用getHandler方法获取HandlerExecutionChain&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DispatcherServlet的doDispatch方法处理&lt;span class=&quot;postTitle2&quot;&gt;HandlerExecutionChain,该类含有HandlerMethod和interceptorList，在applyPreHandle和applyPostHandle方法之间调用Handler，triggerAfterCompletion最后运行&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;5.参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.spring.io/spring/docs/4.3.7.RELEASE/spring-framework-reference/htmlsingle/#beans-beans-conversion&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://docs.spring.io/spring/docs/4.3.7.RELEASE/spring-framework-reference/htmlsingle/#beans-beans-conversion&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.spring.io/spring/docs/current/javadoc-api/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://docs.spring.io/spring/docs/current/javadoc-api/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-framework&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://github.com/spring-projects/spring-framework&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;文中难免有不足，还望指出&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 12:58:00 +0000</pubDate>
<dc:creator>Rest探路者</dc:creator>
<og:description>1.前言 SpringMVC是目前J2EE平台的主流Web框架，不熟悉的园友可以看SpringMVC源码阅读入门,它交代了SpringMVC的基础知识和源码阅读的技巧 本文将通过源码(基于Spring</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Java-Starter/p/10352802.html</dc:identifier>
</item>
<item>
<title>raft算法解析 - 宁静方能致远</title>
<link>http://www.cnblogs.com/justinli/p/raft.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/justinli/p/raft.html</guid>
<description>&lt;p&gt;      在寻找一种易于理解的一致性算法的研究(In Search of an Understandable Consensus Algorithm-extended version) 论文中,作者提出raft算法主要用来在分布式环境下管理日志的状态复制。为了解决paxos算法的难于理解，raft算法中给server引入了三个角色（状态），分别为: Leader、follower、cadidate。并将一致性算法划分成三个子问题来解决：Leader 选举、日志复制、安全性。集群中任何一个server在某一时刻只能处于一种角色状态且只能有一个server处于Leader角色状态。客户端所有的写请求都发送给Leader或由follower转发给leader，由Leader将写请求日志复制到所有follower结点来保证结点间数据的一致性。当Leader结点出现故障，或者follower与Leader之间的心跳检测中断时，进行Leader的重新选择。下面将分别从三个方面来详细讨论raft算法的处理流程以及在安全性上采取的应对策略。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;二、leader 选举&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;2.1  leader选举面临的问题&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　Raft算法通过选举的方式，选出一个高贵的领导人来协调多结点数据的一致性。所有客户端的请求日志条目（写请求）都转发到leader服务器上，由leader将日志条目复制到其他的服务器上，从而达到数据的一致性。这样做大大简化了数据一致性的管理。通过这种方式需要面临若干问题：&lt;/p&gt;
&lt;p&gt;     1. 当leader宕机后，如何保证集群继续对外提供服务。（leader选举）&lt;/p&gt;
&lt;p&gt;     2. 如何能够尽快选出可用的leader。(通过大多数者同意能够保证不受少数结点网络延迟的影响，并行发送RPC选举请求进一步提高性能）&lt;/p&gt;
&lt;p&gt;     3. leader将请求日志复制到集群中所有机器上时，性能问题如何解决。有些结点可能响应很慢或者挂掉。&lt;/p&gt;
&lt;p&gt;     4. follower宕机及宕机恢复后，日志如何同步&lt;/p&gt;
&lt;p&gt;       针对问题1.  Raft 使用心跳机制来触发领导人选举，如果一个follower在一段时间里没有接收到leader的心跳检测消息，此时他就会认为系统中没有可用的领导者，并且发起选举以选出新的领导者。&lt;/p&gt;
&lt;p&gt;      针对问题2. Raft采取的策略是大多数者同意的策略。即得到集群中大多数者的投票同意，即认为选举成功。这样做有两个好处，首先可以保证集群中即使部分结点挂掉，或者部分结点响应很慢，不至于影响系统的可用性以及性能，为了进一步提高发送投票请求的性能，集群中server向其他服务器发送投票请求时通过并行RPC的方式来进行发送请求。&lt;/p&gt;
&lt;p&gt;其次，采用大多数者同意策略可以保证在发生网络分区的情况下，不会产生多个Leader结点（即脑裂问题产生），从而可能导致数据的不一致问题。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;2.2  集群中server的三种状态&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下图为raft中，集群server的状态转换图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/595328/201812/595328-20181209161857149-1191982330.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt; 初始时，集群server启动，server状态为follower。follower因超时时间未收到leader 或candidate的消息而转变为candidate，开始进入leader选主过程。&lt;/li&gt;
&lt;li&gt; cadidate状态的server由于在当前一轮任期的选主过程中，未能选出leader重新进入下一轮任期leader选举。&lt;/li&gt;
&lt;li&gt; cadidate在选举的过程中可能收到leader已经选出的消息或当前的自己记录的任期信息已经过期而进入follower状态。&lt;/li&gt;
&lt;li&gt; cadidate由于收到大多数者的投票而成为leader，成为leader后会定期给其他server发送心跳信息以维护其领导者的权威。如果leader发现自己的任期号过期了，则进入follower角色状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;     raft算法选举的过程中，有个很重要的概念，即任期号（term）每个server都有一个term变量，该变量自增，每产生一个新的leader，term都会自增，用于表示，当前Leader是在该任期内产生的。&lt;/p&gt;
&lt;p&gt;当follower转变成cadidate时会自增当前的任期号，给自己投票，重置选举超时计时器，然后通过并行RPC调用向其他server 发送投票请求，请求过程中&lt;/p&gt;
&lt;p&gt;携带4个参数：分别为 term（候选人任期号）、cadidateId（请求选票的候选人ID）、LastLogIndex（候选人的最后日志条目的索引值）、LastLogTerm（候选人最后日志条目任期号，即该条日志请求命令是由哪个leader同步的）。返回值分别为：term （当前任期号，以便于候选人去更新自己的任期号），voteGranted（候选人赢得了此张选票时为真，否则为假）&lt;/p&gt;
&lt;p&gt;如果cadidate获得大多数者的同意，就变成leader，如果接收到新的leader的附加日志RPC，转变成follower。如果选举过程超时即一段时间后没有任何一个获胜，再次发起新一轮选举。cadidate获得其他cadidate同意的条件是term最大，当term相同时，比较 cadidate之间的LastLogIndex，LastLogIndex大的获胜。 &lt;/p&gt;
&lt;p&gt;当集群中所有candidate状态的server选举超时，即该cadidate即没有赢得选举也没有输，会进行下一轮的选举，这种情况可能重复一直发生，以至于选票总是被瓜分从而没有赢得大多数server的支持。raft算法采用了随机选举超时时间的方式来确保选票瓜分的情况很少发生。选举超时时间从一个固定区间（例如150-300毫秒）随机选择，进而使得每台服务器的超时时间尽量不相同，最先超时的cadidate，会新增term，进行新的投票，赢得投票，并在其他server超时前发送心跳包。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;三、日志复制&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;     3.1 状态机&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　一致性算法是从复制状态机的背景下提出的。复制状态机的结构如下图所示。&lt;/p&gt;

&lt;p&gt;　　　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/595328/201812/595328-20181219220623920-1951535114.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　集群中每台server都通过复制状态机来保持各server状态的一致性。server中的一致性模块接收客户端的日志命令请求，并将其按照顺序写入到日志中，然后server与其他server一致性模块通信，将日志中的指令按照对应的顺序复制到其他server，一旦复制完成，每个服务器的状态机按照日志顺序执行指令，并最终返回客户端结果 ，因此服务器集群看起来像一个高可靠的状态机&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;      3.2 日志&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;      &lt;/strong&gt;&lt;/em&gt;&lt;strong&gt; &lt;/strong&gt;Leader处理客户端的请求时，首先是将请求指令写入到 Entrys日志中。日志如下所示：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/595328/201812/595328-20181219225334068-1756488045.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;      图中的每一个Entry日志项包含了状态机待执行的指令，以及该指令当前所处的任期。只有日志条目被应用到状态机中的时候，才能认为该日志是已提交，即持久化。当Leader将日志条目&lt;/p&gt;
&lt;p&gt;复制到大多数机器的时候，该日志条目即可被提交，并且该日志条目之前的所有未提交的日志条目也会被提交（包括其他领导人创建的条目，这主要是从安全性的角度考虑，加了这条规则，会在安全章节探讨），并且在最终会被可用的状态机执行&lt;/p&gt;
&lt;p&gt;      Raft日志复制具有以下特性：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果在不同的日志中的两个条目拥有相同的索引和任期号，那么他们存储了相同的指令。&lt;/li&gt;
&lt;li&gt;如果在不同的日志中的两个条目拥有相同的索引和任期号，那么他们之前的所有日志条目也全部相同。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;即领导人在该任期内创建的日志条目存放在指定的日志索引处，且该日志条目的索引位置不会发生改变。&lt;/p&gt;
&lt;p&gt;即Leader中的索引位置处的日志条目与follower中对应索引处的日志条目相同的话，则其索引之前的日志条目同样相同。这一点是通过follower的一致性检查来保证的。&lt;/p&gt;
&lt;p&gt;Leader在向follower发送日志复制请求时，会把之前日志条目的索引与任期号一同包含在请求里。如果follower未找到包含相同索引位置和任期号的条目，那么他就会拒绝接收&lt;/p&gt;
&lt;p&gt;新的日志条目。&lt;/p&gt;
&lt;p&gt;      在Raft算法中，领导人处理日志不一致的方式是通过强制跟随者复制自己的日志来解决。这意味着跟随者发生冲突的日志会被领导者日志所覆盖。具体的处理方式。跟随者会根据一致性检查比较&lt;/p&gt;
&lt;p&gt;领导者发送上次日志与索引位置是否相等，不相等，则会拒绝。领导者会修改nextIndex（领导者针对每一个跟随者维护了一个nextIndex），将其值减1.在向follower发送附加日志请求。直到日志匹配上后，直接将follower冲突的日志覆盖掉。&lt;/p&gt;

&lt;p&gt;   请求处理流程 &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;client 连接follower 或 leader ，如果client连接follower，则follower 将 client的（写）请求转发到leader，读请求follower直接处理。&lt;/li&gt;
&lt;li&gt;leader接收到client请求，将该请求转换成entry，写入到自己的日志中，得到在日志中的index，然后会将该entry发送给所有的follower（实际上是批量的entries）&lt;/li&gt;
&lt;li&gt;follower接收到leader的AppendEntries RPC请求后，会将leader传过来的批量entires写入到文件中（通常并没有立即刷新到磁盘），然后向leader回复OK&lt;/li&gt;
&lt;li&gt;leader收到过半的follower的OK回复之后，就可以认为命令可以提交，然后根据日志条目更新状态机，leader更新commitIndex，更新状态机完成后，回复客户端。&lt;/li&gt;
&lt;li&gt;在下一次leader发给follower的心跳中，会将leader的commitIndex传递给follower，follower发现commitIndex更新了则也将commitIndex之前的日志都进行提交并更新状态机。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;四、安全性&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;      下面通过分析一种情行来看Raft是如何保证日志复制的安全性的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/595328/201902/595328-20190205195744291-1520492585.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;      在a这个时间点，S1为Leader，进入b时间点后，复制日志索引2位置日志到S2，这时如果S1挂了，S5被选举为Leader（通过S3，S4，S5的选票）。从客户端接收了不一样的日志条目存放在索引2位置，进入到阶段C，这时S5挂掉，S1已经恢复了，S1重新被选举为Leader（通过S1，S2，S3），并复制任期2阶段的日志条目到大多数结点且未提交，这时S1挂了，s5重新被选举为leader，进入阶段d，并将自己任期内的日志条目复制到集群中其他结点，并覆盖了索引2处的日志。反之，如果在崩溃之前，S1 把自己主导的新任期里产生的日志条目复制到了大多数机器上，就如 (e) 中那样，那么在后面任期里面这些新的日志条目就会被提交（因为S5 就不可能选举成功）。 这样在同一时刻就同时保证了，之前的所有老的日志条目就会被提交。&lt;/p&gt;
&lt;p&gt;      为了消除上图中描述的情况，Raft 永远不会通过计算副本数目的方式去提交一个之前任期内的日志条目。只有领导人当前任期里的日志条目通过计算副本数目可以被提交；一旦当前任期的日志条目以这种方式被提交，那么由于日志匹配特性，之前的日志条目也都会被间接的提交。即在日志复制的过程中，会从当前领导人当前的任期的日志条目开始复制直到最近一次提交的日志条目处。这样能够保证旧的任期的日志不会被更新的任期的日志条目所覆盖。&lt;/p&gt;


&lt;p&gt;参考：https://ramcloud.atlassian.net/wiki/download/attachments/6586375/raft.pdf&lt;/p&gt;

</description>
<pubDate>Tue, 05 Feb 2019 12:37:00 +0000</pubDate>
<dc:creator>宁静方能致远</dc:creator>
<og:description>一、raft算法引入 在寻找一种易于理解的一致性算法的研究(In Search of an Understandable Consensus Algorithm-extended version)</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/justinli/p/raft.html</dc:identifier>
</item>
<item>
<title>面向Java应用的方法调用链分析插件 - 像风一样i</title>
<link>http://www.cnblogs.com/yueshutong/p/10353058.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yueshutong/p/10353058.html</guid>
<description>&lt;p&gt;新人熟悉项目必备工具！基于Java字节码开发的一款方法调用链分析插件，优点是代码侵入低，启用方便，异步非阻塞，完美嵌入Spring项目！再也不用担心搞不懂项目。体验网址：&lt;a href=&quot;http://116.85.23.6:8521/projecttree&quot; class=&quot;uri&quot;&gt;http://116.85.23.6:8521/projecttree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/zyzpp/Spring-Project-Tree/raw/master/picture/220619.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;很多新人进入一家新公司后，最头疼的就是如何快速了解公司的业务和项目架构。&lt;/p&gt;
&lt;p&gt;因为文档很少，没有文档，或者是文档严重落伍， 根本没法看；如果你碰到一个特别热心的老员工，事无巨细地给你讲，随时在你身边答疑解惑， 那简直是天大的好运气， 现实是大家都很忙，没人给你讲解。&lt;/p&gt;
&lt;p&gt;很快就要深入项目做开发了，怎么办呢？&lt;/p&gt;
&lt;p&gt;我在加入新公司后，就遇到了悲催的情况。在那时，我就诞生了做一款可视化方法调用链分析插件的想法！帮助更多像我一样的新人！&lt;/p&gt;
&lt;h2 id=&quot;下载使用&quot;&gt;下载使用&lt;/h2&gt;
&lt;p&gt;项目暂时没有加入Maven中央仓库，所以还需要你clone或download到本地。&lt;/p&gt;
&lt;p&gt;在本地计算机进入项目的pom.xml文件所在目录，打开命令行（CMD）,执行install命令安装到本地。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mvn install&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;以后使用时，只需要导入依赖&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;cn.yueshutong&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-project-tree&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;spring-boot安装插件&quot;&gt;1.1 Spring Boot安装插件&lt;/h3&gt;
&lt;p&gt;如果你的项目是Spring Boot，那么使用会非常简单，只需要两步！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一步&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在SpingBootApplication启动类注解&lt;code&gt;@EnableProjectTree&lt;/code&gt;开启。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二步&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在main函数里首先运行&lt;code&gt;ProjectTree.make()&lt;/code&gt;方法，这个方法的传入的参数有两个，第一个是要进行方法监控的类，书写类似import，也就是说，要么是一个类的全限定名，要么是 * 通配符结尾的形式，完整代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@SpringBootApplication
@EnableProjectTree //第一步：注入Spring Bean
public class SpringbootApplication {

    public static void main(String[] args) {
        ProjectTree.make(new String[]{&quot;com.example.springboot.demo.*&quot;}
        ,new String[]{&quot;com.example.springboot.demo.entity.MyEntity&quot;});//第二步：参数1是要进行方法监控的类，参照import形式，参数2是要排除监控的类
        SpringApplication.run(SpringbootApplication.class, args);
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注：参数2的作用是排除如Entity类等易出错且无意义的类。&lt;/p&gt;
&lt;h3 id=&quot;spring安装插件&quot;&gt;1.2 Spring安装插件&lt;/h3&gt;
&lt;p&gt;Spring和Spring Boot安装上的不同只有第一步的注解了，在Spring项目中，可以在Xml配置文件增加对&lt;code&gt;cn.yueshutong.springprojecttree&lt;/code&gt;包的自动扫描即可。&lt;/p&gt;
&lt;h3 id=&quot;访问网页&quot;&gt;1.3 访问网页&lt;/h3&gt;
&lt;p&gt;启动你的项目，首先访问你项目的某个接口，使其执行被监控的方法。然后访问&lt;code&gt;localhost:8080/projecttree&lt;/code&gt;查看网页。&lt;/p&gt;
&lt;h4 id=&quot;其它接口&quot;&gt;其它接口&lt;/h4&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;/json/projecttree&lt;/td&gt;
&lt;td&gt;JSON形式的返回结果&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;/json/projecttree/{methodId}&lt;/td&gt;
&lt;td&gt;对某一方法的分析结果&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;注意事项&quot;&gt;注意事项&lt;/h3&gt;
&lt;p&gt;1.使用Shiro、Spring Securit等安全框架时，需要注意对此URL的权限控制。&lt;/p&gt;
&lt;p&gt;2.如果同时使用 spring-boot-devtools 进行热部署,必须调用makeHaveDevtool方法，而不是make。&lt;/p&gt;
&lt;p&gt;3.出现Bug一般是一些特殊类与本框架的冲突，排除这部分类即可。&lt;/p&gt;
&lt;h3 id=&quot;优势&quot;&gt;优势&lt;/h3&gt;
&lt;p&gt;使用上通过注解开启+方法调用的形式，代码侵入性低。&lt;/p&gt;
&lt;p&gt;使用单例线程池实现异步非阻塞模型，降低对主流程的性能影响。&lt;/p&gt;
&lt;p&gt;基于内存的内嵌数据库实现数据的快速读写，这里不用担心数据过大问题，本插件基于&lt;strong&gt;方法调用链分析&lt;/strong&gt;进行选择性保存，理论上说，从接口开始，有多少流程分支，就有多少条数据记录，占用内存极小。&lt;/p&gt;
&lt;p&gt;如何实现方法调用分析？&lt;/p&gt;
&lt;p&gt;基于栈数据结构设计算法。&lt;/p&gt;
&lt;h2 id=&quot;关于作者&quot;&gt;关于作者&lt;/h2&gt;
&lt;p&gt;博客：&lt;a href=&quot;http://www.yueshutong.cn&quot; class=&quot;uri&quot;&gt;http://www.yueshutong.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;邮箱：yster@foxmail.com&lt;/p&gt;
&lt;p&gt;Github：&lt;a href=&quot;https://github.com/yueshutong/Spring-Project-Tree&quot; class=&quot;uri&quot;&gt;https://github.com/yueshutong/Spring-Project-Tree&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitee：&lt;a href=&quot;https://gitee.com/zyzpp/Spring-Project-Tree&quot; class=&quot;uri&quot;&gt;https://gitee.com/zyzpp/Spring-Project-Tree&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 12:24:00 +0000</pubDate>
<dc:creator>像风一样i</dc:creator>
<og:description>新人熟悉项目必备工具！基于Java字节码开发的一款方法调用链分析插件，优点是代码侵入低，启用方便，异步非阻塞，完美嵌入Spring项目！再也不用担心搞不懂项目。体验网址： 'http://116.85</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yueshutong/p/10353058.html</dc:identifier>
</item>
<item>
<title>多线程的知识 - 书酥</title>
<link>http://www.cnblogs.com/itcores/p/10352977.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/itcores/p/10352977.html</guid>
<description>&lt;p&gt;今天复习了下关于多线程方面的知识具体如下&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一&amp;gt;&amp;gt;多线程的创建分别：①继承Thread类②实现Runable接口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用方法有&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.start();启动线程并执行相应的run方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.run();子线程要执行 的代码放入run()方法中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.currentThread();静态的调取当前的线程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.getname();获取线程名字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.setname();设置此 线程的名字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.yield();调用此方法的线程释放当前cpu的执行权&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.join();在A线程中调用B线程   join()方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.isalive();判断此线程是否还存活&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.sleep();让当前线程睡眠多少毫秒&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二&amp;gt;&amp;gt;对比一下继承的方式和实现的方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现的方式优于继承&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.实现的方式避免了单继承的局限性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.如果多个线程要操作同一份资源（或数据）更适合用实现的方式 同时共享数据所在的类可以作为Runable接口的实现类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三&amp;gt;&amp;gt;线程安全问题出现的原因&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于一个线程在操作共享数据过程中未执行完毕的情况下，另外的线程参与进来，导致共享数据存在安全问题。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四&amp;gt;&amp;gt;如何解决线程安全问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;必须让一个线程操作共享数据完毕后其他线程才有机会参与共享的操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五&amp;gt;&amp;gt;java如何实现线程的安全&amp;gt;线程的同步机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方式一：同步代码块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;synchronized（同步监视器）{&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　需要被同步的代码块（即为操作共享数据的代码）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.共享数据：多个线程共同操作的同一个数据量（变量）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.同步监视器：由一个类对象来充当， 哪个线程获取监视器谁就执行大括号里被同步的代码，俗称锁 。要求所有的线程必须公用同一把锁。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：在实现的方式中，考虑同步问题的话可以使用this。但是在继承的方式中慎用this&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方式二：同步方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将操作共享数据的方法声明为synchronized既此方法认为同步方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;能够保证当其中一个线程执行此方法时其他线程在外等候直至此线程执行完此方法。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同步方法的锁：this（既当前对象）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对于静态方法如果使用同步默认的锁为当前类本身，以单列的懒汉式为例（singleton.class）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六&amp;gt;&amp;gt;线程同步的弊端&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于同一个时间只能有一个线程访问共享数据效率变低了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;七&amp;gt;&amp;gt;线程通信&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三个关键词：wait()：一旦一个线程执行到wait()，就释放当前的锁&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;notify(),notifyall();唤醒wait()的一个或所有的线程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;线程通信必须在同步代码块中 ，wait等待，notify解除。&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 05 Feb 2019 10:51:00 +0000</pubDate>
<dc:creator>书酥</dc:creator>
<og:description>今天复习了下关于多线程方面的知识具体如下 一&gt;&gt;多线程的创建分别：①继承Thread类②实现Runable接口 常用方法有 1.start();启动线程并执行相应的run方法 2.run(</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/itcores/p/10352977.html</dc:identifier>
</item>
</channel>
</rss>