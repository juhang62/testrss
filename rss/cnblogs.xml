<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>设计模式之空对象模式 - 牛牛的编程之路</title>
<link>http://www.cnblogs.com/hujingnb/p/10171634.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hujingnb/p/10171634.html</guid>
<description>&lt;p&gt;空对象模式是通过实现一个默认的无意义对象来避免null值出现, 简单地说,就是为了避免在程序中出现null值判断而诞生的一种常用设计方法.&lt;/p&gt;
&lt;p&gt;举个简单的例子, 一个听动物叫声的模拟程序:&lt;/p&gt;
&lt;p&gt;动物代码:&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot;&gt;&lt;img src=&quot;http://p99.pstatp.com/large/pgc-image/1534216108430c2573e66ea&quot; alt=&quot;设计模式之空对象模式&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;听叫声的人:&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot;&gt;&lt;img src=&quot;http://p9.pstatp.com/large/pgc-image/1534216016111683822364f&quot; alt=&quot;设计模式之空对象模式&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;现在我们想, 能不能把 animal 的空值判断去掉呢?我们增加一个 NullAnimal 类:&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot;&gt;&lt;img src=&quot;http://p9.pstatp.com/large/pgc-image/15342161396486b21135e65&quot; alt=&quot;设计模式之空对象模式&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;增加了NullAnimal类后, 在Person类中就不需要&quot;animal != null&quot;这句话了, 因为我们提供了一个实现接口的所有方法, 不会再产生null对象. 想象一个web项目中, animal对象可能由MVC框架映射产生, 我们只要定义一个默认的映射对象是NullAnimal, 就可以解决控制判断的问题, 提升代码的可读性. 这就是空对象模式, 非常简单, 但非常实用.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;空对象模式是通过空代码实现一个接口或抽象类的所有方法, 以满足开发需求, 简化程序.&lt;/p&gt;
&lt;p&gt;它如此简单, 以至于我们经常在代码中看到或使用, 对它已经熟视无睹了, 而它无论是 事前规划或事后重构, 都不会对我们的代码产生太大的冲击.&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;可以关注一下鄙人的公众号, 谢谢各位了!&lt;img src=&quot;https://img2018.cnblogs.com/blog/1457859/201812/1457859-20181224224508758-2106722284.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 15:38:00 +0000</pubDate>
<dc:creator>牛牛的编程之路</dc:creator>
<og:description>空对象模式 空对象模式是通过实现一个默认的无意义对象来避免null值出现, 简单地说,就是为了避免在程序中出现null值判断而诞生的一种常用设计方法. 举个简单的例子, 一个听动物叫声的模拟程序: 动</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hujingnb/p/10171634.html</dc:identifier>
</item>
<item>
<title>2018即将过去,立个flag - 房东家的猫</title>
<link>http://www.cnblogs.com/fangdongdemao/p/10198346.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fangdongdemao/p/10198346.html</guid>
<description>&lt;h3 id=&quot;过去的2018&quot;&gt;过去的2018&lt;/h3&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;自己有没有值得有意义的地方呢?&lt;/p&gt;
&lt;p&gt;自己有没有认识新的异性朋友呢?&lt;/p&gt;
&lt;p&gt;自己都在忙啥呢?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;敲代码,然后发现敲坏了一个键盘,换了HHKB,一个字舒服,还有就是通宵把一部电视剧看完了&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;觉得有没有遗憾的事？&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;有，太多了，比如生了一场大病，写代码不要命，不注意身体，要钱不要命，跟人打交道太少，去健身太少，一天的时间太短，一年的时间太短，没有完成自己年初计划，经济负增长，没有好好孝敬父母，还让父母为我操心，自己太笨，技术还是这么菜.......&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;有没有觉得自己变了&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;变了,比如脾气比以前好了很多,比较有耐心了点,与人交流太少了,想多站在大佬的肩膀下学习,还有自己太懒了,通宵是常态,分不清白天黑夜, 沉浸在自己的世界中,没有达到自己的要求很失望&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;有没有发现自己变厉害了,那么一点点&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;应该有吧,又或许没有,呵呵呵,我也不知道,不过感觉还是那么菜&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;​ 在这过去的一年来我都干了什么,注意广度,忽略了深度,对于一个小白来说是多么可怕的时候,就一直在天上飘,没有认识到自己实际上自己菜的原因,竟然有了自己转行去搞大数据的想法,自己前端都是囫囵吞枣,java基础学的都够呛,飘来飘去没有做什么实事,不过发现好多讲师技术博客写的真的不错,没事还是多看看视频,无聊的时候就看看博客吧,后来发现老男孩的linux讲的不错也看了下,这是教人做事,哪里是讲课,后来linux实在没时间学,意外接触到了python被这门语言迷住了,代码这的好简洁,能说自己能算上入门了,剩下的时间就是能把django框架看能不能啃完吧,那是有时间的情况吧,后来因为一个女老师讲的go语言,意外地接触下go,听说go语言开发的性能是python的几十倍,在这竞争力这么大的环境下,我的想法是如果有时间好好啃啃这两个python+go,那java呢?暂时放放吧,如果要搞算法方面可以去看看,不过我还是想保持持续学习的心,虽然自己是大专,智商没有那些大佬高,不过至少自己还在努力吧,希望自己不要抱着恐惧的心去学习,而是抱着热爱友好的心去学习,别因为别人说这个很难就不去学他,谁说java学起来很难,还好吧,没别人说的那么恐怖&lt;/p&gt;
&lt;p&gt;​ 放回脚下,自己终于知道为什么还是这么菜了,很多以前不理解的东西也理解了,比如在学习ES6的时候,能够跟python的一些知识联系起来,node也没有想象中那么难,现在看看一年前看的珠峰的相关视频,竟然真正的看的懂了,能理解他为什么这么做了, 还是再三提醒自己别以抵制的心去学习,在学习前一定要觉得它很简单,这么才能真正的有信心去学,对于学习,我觉得最重要的是是自信和自律,这是老男孩的讲师说的,觉得挺不错了就记录下来,那么这么样才能正常,在长达的一段时间类,我一直在看别人的博客,把ES6,css88,掘金...的博客看了很多,慢慢重新找回了,前端的美妙,还是那句话,回归基础,老板说的&quot;好好回顾你的原生&quot;,&lt;/p&gt;
&lt;h3 id=&quot;即将到来的2019&quot;&gt;即将到来的2019&lt;/h3&gt;
&lt;p&gt;​ 应该给自己定定目标,虽然18年的目标,也以笑笑而过无奈的表情飘过了&lt;/p&gt;
&lt;blockquote readability=&quot;35&quot;&gt;
&lt;p&gt;能撸完lodash源码&lt;/p&gt;
&lt;p&gt;能把react学会&lt;/p&gt;
&lt;p&gt;node看上去不是那么陌生&lt;/p&gt;
&lt;p&gt;还有那句回归基础,回归基础,&lt;/p&gt;
&lt;p&gt;继续保持好奇的心去学习&lt;/p&gt;
&lt;p&gt;犀牛书能不能啃完&lt;/p&gt;
&lt;p&gt;能去成都去吃吃吃&lt;/p&gt;
&lt;p&gt;别跳跳跳,要稳稳稳,能不能稳一年,稳住能赢&lt;/p&gt;
&lt;p&gt;坚持写博客,博客通过博客才会知道自己都在干嘛,不忘初心&lt;/p&gt;
&lt;p&gt;别让父母那么辛苦,虽然还是扛起来家里的大梁,但是也希望自己能够为家里分担点&lt;/p&gt;
&lt;p&gt;不去外地了,抽出时间陪陪妈妈, 给弟弟多来来鸡汤&lt;/p&gt;
&lt;p&gt;别把工资看的那么重,成长很重要(命重要!important)&lt;/p&gt;
&lt;p&gt;能不能有腹肌(不忘初心,健身还是要拾起来)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Sat, 29 Dec 2018 15:27:00 +0000</pubDate>
<dc:creator>房东家的猫</dc:creator>
<og:description>过去的2018 自己有没有值得有意义的地方呢? 没有, 自己有没有认识新的异性朋友呢? 没有, 自己都在忙啥呢? 敲代码,然后发现敲坏了一个键盘,换了HHKB,一个字舒服,还有就是通宵把一部电视剧看完</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fangdongdemao/p/10198346.html</dc:identifier>
</item>
<item>
<title>MySQL order by的实现 - Jia-Xin</title>
<link>http://www.cnblogs.com/YangJiaXin/p/10198275.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/YangJiaXin/p/10198275.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;filesort相关的参数&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em&gt;sort_buffer_size&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;/em&gt;&lt;br/&gt;算法排序缓冲区的大小，线程级缓存&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;br/&gt;&lt;em&gt;max_length_for_sort_data&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;决定选择那种不同的策略进行排序（两种排序算法）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;1、two-pass算法&lt;/em&gt;(全字段排序)&lt;/strong&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;br/&gt;当查询语句所取出的所有字段的长度大于max_length_for_sort_data，第一次从表中取出排序字段和行指针，第二次根据排好序的行指针从表中取出其它字段的值。优点行数据进行了压缩，缺点需要两次访问表数据&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2、single-pass算法(rowid排序)&lt;/em&gt;&lt;/strong&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;br/&gt;当max_length_for_sort_data小于查询语句所取出的所有字段的长度，一次性从表中取出所查询的所有字段，在排序缓冲区中进行排序操作。优点只访问了一次表数据，缺点数据没有进行压缩，会耗用更多排序缓冲区的空间&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Sat, 29 Dec 2018 15:07:00 +0000</pubDate>
<dc:creator>Jia-Xin</dc:creator>
<og:description>1、使用索引的已有顺序 2、filesort算法 filesort算法的执行流程 filesort相关的参数 sort_buffer_size 算法排序缓冲区的大小，线程级缓存 m</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/YangJiaXin/p/10198275.html</dc:identifier>
</item>
<item>
<title>python 爬虫分析30年香港电影 - 恰到好处</title>
<link>http://www.cnblogs.com/DBCicada/p/10193487.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/DBCicada/p/10193487.html</guid>
<description>&lt;p&gt;　　 &lt;span&gt;前言　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　 &lt;span&gt;上个礼拜接触爬虫，本身对香港电影比较感兴趣，这2天就去拿豆瓣数据做了份香港近30年电影的分析&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;正文&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;数据来源豆瓣&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181228231919121-320791279.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181228232008229-1322537941.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　&lt;span&gt;　这些路径是有规律 ，设置好循环条件，拿到电影url在进行下一步，在这之前有一部分电影我们过滤掉，典型的就是没有评分的电影，没有评分电影大部分是演出晚会，B级片等电影，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;读者有兴趣可以查下,这些电影的数据可用性差我不来拿分析，香港上世纪90-99电影总数2700+，过滤后拿到的1100+。近30年电影初步得到是2500+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181228235907197-781055403.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　然后分析页面结构，电影名会有多的 ，我是空格分开后取的第一个，简体字电影名排在首位，静态页面的数据爬取比较简单这里有几个注意点&lt;/p&gt;
&lt;p&gt;　　　　一：页面结构要多种预计 （有点页面没有导演或者编剧这些情况）&lt;/p&gt;
&lt;p&gt;　　　　二:遇到ip封禁的 设定时 ，登陆后拿自己账号cookies加入headers, 或者自己定义ip(r=requests.get(url,proxies={'http':random.choice(pro)},headers=head))&lt;/p&gt;
&lt;p&gt;　　多线程分配url任务时 ，因为我用的是mysql，遇到一个锁表的问题，这个作为以后学习点，不过使用MongoDB这种非关系数据库就没有这种问题&lt;/p&gt;
&lt;p&gt;　&lt;span&gt;　数据结果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　可视化的有的是echarts：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　一：香港历年电影&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181229215231902-1276586349.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　在1993-1995年和 2000-2001是香港电影的鼎盛时期 ，前者有霸王别姬，东邪西毒，活着，与大话西游系列，后者有花样年华，卧虎藏龙，无间道这些优秀&lt;/p&gt;
&lt;p&gt;影片,在94,95巅峰后年电影有下降的趋势应该是97香港回归的影响，在回归后的2000左右稳定，并且再次有峰值。&lt;/p&gt;
&lt;p&gt;　　二：导演&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181229222258553-89646094.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　三：演员&lt;/p&gt;
&lt;p&gt;　　张国荣(2008年的为东西吸毒终极版)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181229223837250-1635614821.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 周星驰&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181229224236045-342846006.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;刘德华&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1566947/201812/1566947-20181229224517838-1630906199.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;还有很多蛮有趣的数据就不都展示，这段时间体会到爬虫的乐趣，后面往图像处理方向学习&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　　　　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 29 Dec 2018 14:50:00 +0000</pubDate>
<dc:creator>恰到好处</dc:creator>
<og:description>前言 上个礼拜接触爬虫，本身对香港电影比较感兴趣，这2天就去拿豆瓣数据做了份香港近30年电影的分析 正文 数据来源豆瓣 这些路径是有规律 ，设置好循环条件，拿到电影url在进行下一步，在这之前有一部分</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/DBCicada/p/10193487.html</dc:identifier>
</item>
<item>
<title>2018年终总结暨这些年的折腾 - ytkah</title>
<link>http://www.cnblogs.com/ytkah/p/i2018.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ytkah/p/i2018.html</guid>
<description>&lt;p&gt;　　２０１８马上就要走向尾声了，在这辞旧迎新的日子里适合发表一些感慨，回顾这一年走过的路和这些年的历程，然后展望一下２０１９年以及往后的时光。&lt;/p&gt;
&lt;p&gt;　　2018年，离开呆了好多年的厦门来到深圳，节奏更快了，竞争也更大了，但是水平也可以提升很快了。一线城市有很多高手可以交流学习，但是你得想好要学什么、怎么去提问，不能问太低级的问题，高手愿意回答你问题也是需要时间的，所以要把问题准备得充分一些具体一点。还有接触新项目先去看文档，到网上找找有没相关的解决方法。希望你能去问google而不是BD，去问Stack Overflow而不是BD，这是在网上看到的一句标语，很有个性，也很好用。&lt;/p&gt;
&lt;p&gt;　　2018学了很多Linux运维的技能，几个命令就能让你提升很多的开发速度；2018学了全球最流行的PHP框架Laravel，还用它搭建了电商系统，包括高性能无限级分类、众筹商品管理、众筹商品下单逻辑、众筹商品结束逻辑、使用分期付款支付订单、计算分期付款逾期费、分期付款订单的退款、给商品增加属性、使用 Elasticsearch 重构商品搜索模块、分面搜索、相似商品查询（类似于亚马逊的『商品推荐』功能）、Elasticsearch 的索引迁移、秒杀商品管理、秒杀商品下单逻辑、秒杀接口性能优化、编写部署脚本、多机部署实现负载均衡等。&lt;/p&gt;
&lt;p&gt;　　2018参与了ERP的制作与实施，感受了它复杂的业务和缜密的逻辑，企业正是需要建立完善的系统才能做大做强走得更远！肯德基麦当劳等那些大型企业哪个没有自己一套健全的系统来支撑她们的成长？把那些流程正规化、系统化、电子化，减少时间成本/提高效率不正是资本寒冬中企业所渴求的吗？&lt;/p&gt;
&lt;p&gt;　　回望这些年的折腾&lt;/p&gt;
&lt;p&gt;　　09 - 10年 第三方博客平台&lt;br/&gt;　　那时刚从学校出来，还带着一点文艺气息，喜欢发表一点自己的思想，那段时间不定时更新了一些文章，自我感觉有些成就感，可惜后面那个网站改版下线还是怎么的，好像是博客中国，后面账号密码都忘记了。&lt;/p&gt;
&lt;p&gt;　　那时还接触了淘宝店铺，感觉好神奇，居然可以在业余时间通过网上卖东西赚了点小钱，虽然不多但还是很兴奋。年轻气盛想着做点更宏伟的事情就没继续经营了，如果坚持到现在至少也有皇冠了吧？&lt;/p&gt;
&lt;p&gt;　　10 -13年 Zencart、Magento、Wordpress、Drupal、Joomla&lt;br/&gt;　　那段时间从事外贸行业，通过Zencart、Magento自建站建商城，做好站内优化，在第三方博客、论坛等平台发布外部链接提升排名。还用Wordpress、Drupal、Joomla搭建博客站引流，然后把流量导给商城进行转化。那时候谷歌排名相对比较容易做上去，可是支付通道不是很稳定，账号被冻结，有点心灰意冷。加上一些其他因素后面就转战国内市场了。&lt;/p&gt;
&lt;p&gt;　　13 - 18年 Dedecms、帝国cms、ThinkPHP、CI&lt;br/&gt;　　机缘巧合进了一家比较大型的集团，从dedecms的改造到帝国cms的深度开发，从移动网页加速器MIP改造到熊掌号搭建，从单站到CI框架多站管理系统，从Excel批量操作到ThinkPHP营销系统的开发，从不算特别酷炫的PPT到逻辑清晰的思维导图制作，从公众平台二次开发到TP后台API开发，从https部署到小程序上线，一路走来，踩了不少坑，也填了很多坑，都记录在这个博客里www.cnblogs.com/ytkah，满满当当地记录了5年3个月，总算有了一点小成就，在465228个开发者博客中排第262位，感谢各位一直以来对我不离不弃的支持，我会继续记录点点滴滴，我们一起成长，一同进步！&lt;/p&gt;
&lt;p&gt;　　展望2019及未来，移动互联网将继续进化，APP还是一个重要的承载体，虽然流量都被全球各大科技公司瓜分，但是守住细分领域自己一亩三分地还是很有必要的，积累用户，做好服务，变现逐步！Webapp可能作为一个衍生品得到广泛发展。它们共同的点是通过API来连接，所以写好接口才是硬道理。&lt;br/&gt;　　Python的运用。大数据经常被人谈及，数据从何而来？通过各个平台、app、网站数据的收集，分析，过滤，生成报告，这些都可以用python来处理，并且有很多成熟的库可以直接用了。那还不赶紧深入得学习？&lt;br/&gt;　　AI人工智能。最了解你的以后可能不是你自己或别人，因为机器更懂你！让AI帮你处理问题比你自己做得更好！&lt;/p&gt;
&lt;p&gt;　　Fighting！！！&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;　　- 2018.12.29晚&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 14:16:00 +0000</pubDate>
<dc:creator>ytkah</dc:creator>
<og:description>２０１８马上就要走向尾声了，在这辞旧迎新的日子里适合发表一些感慨，回顾这一年走过的路和这些年的历程，然后展望一下２０１９年以及往后的时光。 2018年，离开呆了好多年的厦门来到深圳，节奏更快了，竞争也</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ytkah/p/i2018.html</dc:identifier>
</item>
<item>
<title>编程：从前有一个傻呆程序员，老婆交给他一项任务，他办了四次才满意 - 石桥码农</title>
<link>http://www.cnblogs.com/sban/p/10198086.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sban/p/10198086.html</guid>
<description>&lt;p&gt;从前有一个傻呆程序员，他老婆交给他一项任务：“去买3斤橙子，买最大最甜最便宜的脐橙”。&lt;/p&gt;

&lt;p&gt;普通人买水果直接去店里就买了，但程序员不同。程序员心道：“大，好分辨，甜，不好分辩。水果店老板肯定不让每个橙子都试吃一下的”。于是问Siri，Siri说：“一般橙子屁股上有脐圈的，是母橙，母橙比较甜”。就这样通过调研，甜度辨别的技术难题解决了。&lt;/p&gt;

&lt;p&gt;接下来程序员开始策划去哪里买。经Siri调查，小区里共有4家水果店。程序员心道：“这4家店每家都可能卖橙子，也都有可能是最便宜的。如果冒然去了A店买，而C店才是最便宜的，就失去了做事的严谨性，回来可能挨骂。严谨的做法应该是货比三家，每家都看看并把价格记下来，然后选一家价格最低的购买。但是，应该先去哪家看价格呢？理论上应该先去离家的店，最后去离家最远的店。”&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic1.zhimg.com/80/v2-e65ce847cbe93558208566d253f80124_hd.jpg&quot; alt=&quot;&quot; width=&quot;694&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;694&quot; data-rawheight=&quot;459&quot; data-original=&quot;https://pic1.zhimg.com/v2-e65ce847cbe93558208566d253f80124_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-e65ce847cbe93558208566d253f80124_b.jpg&quot;/&gt;&lt;/p&gt;

&lt;p&gt;经大致估算，4家店按离家距离排序，依次是ABCD。程序员应该先去A店。但估算毕竟是不严谨的，于是程序员请出百度地图，在地图上一一标上家和4家店的GPS坐标，再以水果店的GPS坐标分别计算离家的距离。最后得出结论，顺序依次是CABD（因为C店是直接距离，店距离排序逻辑略）。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic4.zhimg.com/80/v2-5b89b3c35f6ccbe26554aa3e83f41853_hd.jpg&quot; alt=&quot;&quot; width=&quot;599&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;599&quot; data-rawheight=&quot;314&quot; data-original=&quot;https://pic4.zhimg.com/v2-5b89b3c35f6ccbe26554aa3e83f41853_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-5b89b3c35f6ccbe26554aa3e83f41853_b.jpg&quot;/&gt;&lt;/p&gt;

&lt;p&gt;于是程序员去C店，得到一个结果，然后又分别去ABD各店，最终得出A店返回无穷大。A店可能没有脐橙或有效货存不足。其它3家店，B店最便宜。程序员决定去B店购买。此时程序员老婆打来了电话，说“叫你买个橙子怎么去这么半天！”，程序员道：“目标已经锁定，即将完成任务”。&lt;/p&gt;

&lt;p&gt;程序员到了B店，不敢耽搁，马上开始了选脐橙的逻辑：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic3.zhimg.com/80/v2-721b1db8bd1faa9035c394ef96451d9a_hd.jpg&quot; alt=&quot;&quot; width=&quot;621&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;621&quot; data-rawheight=&quot;665&quot; data-original=&quot;https://pic3.zhimg.com/v2-721b1db8bd1faa9035c394ef96451d9a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-721b1db8bd1faa9035c394ef96451d9a_b.jpg&quot;/&gt;&lt;/p&gt;

&lt;p&gt;半小时后，程序员拎着水果回到了家。老婆骂他：“怎么买水果比种果树都慢！”程序员开始反思，这个买水果的流程是不是还有很多优化的空间？&lt;/p&gt;

&lt;p&gt;第二次买橙子时，净化数据源与冒泡排序这两个循环，程序员将它们合在了一起：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/567788/201812/567788-20181229220026776-18016021.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;由于减少了时间复杂度，并且略去了第一次技术调研、系统架构的时间，这一次只用了20分钟，但老婆大人还是嫌慢：“别人买水果几分种，你买水果20分钟！”&lt;/p&gt;

&lt;p&gt;第三次买水果，程序员不再使用单只手的冒泡排序，而使用两只手的快速排序法，左手向右比较，右手向左比较（算法过于复杂，不作伪码展示了）。这次用了15分钟，但老婆大人仍然不满意。&lt;/p&gt;

&lt;p&gt;第四次买水果，程序员优化了进店询价逻辑。前几次买水果，程序员要了老板的微信，这次出发前先给4家老板群发了一条微信息：“老板，今天脐橙还有没有，多少钱一斤？”&lt;/p&gt;

&lt;p&gt;这次用多线程问询，替代了之前的单线程走路问询，只用了5分钟就完成了任务。老婆满意了。&lt;/p&gt;

&lt;p&gt;程序员感叹道：“程序优化果然是无止境啊！但貌似目前的逻辑还可以再优化，譬如历次购买水果第一优先选择基本都是B店，下次可以直接去B店。在去的路上向4家老板发微信询价，大概率答案还是B店。如果不是，进店前还有时间调整路线，这是执行与问询的多线程。”&lt;/p&gt;

&lt;p&gt;你能从这个程序员买橙子的故事中，看出编程难在哪里吗？&lt;/p&gt;

&lt;p&gt;2018年12月29日&lt;/p&gt;

&lt;p&gt;本文首发于微信公众号“艺述思维”：&lt;a class=&quot; wrap external&quot; href=&quot;http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/5-dRz2u1od76sG8eT0ClgA&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;从前有一个傻呆程序员，老婆交给他一项任务，他办了四次才满意&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 13:57:00 +0000</pubDate>
<dc:creator>石桥码农</dc:creator>
<og:description>从前有一个傻呆程序员，他老婆交给他一项任务：“去买3斤橙子，买最大最甜最便宜的脐橙”。 普通人买水果直接去店里就买了，但程序员不同。程序员心道：“大，好分辨，甜，不好分辩。水果店老板肯定不让每个橙子都</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sban/p/10198086.html</dc:identifier>
</item>
<item>
<title>python的partial()用法说明 - 骏马金龙</title>
<link>http://www.cnblogs.com/f-ck-need-u/p/10198013.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/f-ck-need-u/p/10198013.html</guid>
<description>&lt;p&gt;在functools模块中有一个工具partial()，可以用来&quot;冻结&quot;一个函数的参数，并返回&quot;冻结&quot;参数后的新函数。&lt;/p&gt;
&lt;p&gt;很简单的解释，也是&lt;a href=&quot;https://docs.python.org/3/library/functools.html#functools.partial&quot;&gt;官方手册&lt;/a&gt;给的示例。对于int()函数，它可以将给定的数值转换成十进制整数，转换时可以指定以几进制的方式解析给定的数。例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# 以10进制解析123，并转换成10进制整数
&amp;gt;&amp;gt;&amp;gt; int(&quot;123&quot;)
123

# 以2进制解析10101，并转换成10进制整数
&amp;gt;&amp;gt;&amp;gt; int(&quot;10101&quot;, base=2)
21

# 以13进制解析&quot;abc12c&quot;，并转换成10进制整数
&amp;gt;&amp;gt;&amp;gt; int(&quot;abc12c&quot;, base=13)
4053672&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;现在不想这样指定&lt;code&gt;base=2&lt;/code&gt;参数来将二进制转换为10进制整数了，而是像普通函数一样，直接指定待转换的值即可。于是，定义另外一个函数来封装int()，例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def inttwo(x):
    return int(x, base=2)

inttwo(&quot;10101&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;functools中提供的partial()就是做类似事情的：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;inttwo = partial(int, base=2)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;它表示int()中指定参数base=2，也就是&quot;冻结&quot;了这个参数。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from functools import partial
&amp;gt;&amp;gt;&amp;gt; inttwo = partial(int,base=2)
&amp;gt;&amp;gt;&amp;gt; inttwo(&quot;10101&quot;)
21&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;之所以&quot;冻结&quot;加上了引号，是因为可以在inttwo()中再次指定参数来覆盖partial()中&quot;冻结&quot;的参数：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; inttwo(&quot;10101&quot;,base=10)
10101&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;回头再看partial()的定义：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;functools.partial(func, *args, **keywords)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;从它的定义不难知道，不仅仅是像int()中base这样的kw参数格式，位置参数args也一样能&quot;冻结&quot;。&lt;/p&gt;
&lt;p&gt;partial()返回的其实是一个partial对象，这个对象包含了3个特殊的属性：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dir(inttwo)
[...... 'args', 'func', 'keywords']&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;func&lt;/code&gt;表示该对象所封装的原始函数&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;args&lt;/code&gt;表示&quot;冻结&quot;的位置参数列表&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keywords&lt;/code&gt;表示&quot;冻结&quot;的关键字参数&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; inttwo.func
&amp;lt;class 'int'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; inttwo.args
()
&amp;gt;&amp;gt;&amp;gt; inttwo.keywords
{'base': 2}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;另外需要注意的是，partial()不会保留封装函数的元数据，比如注释文档、注解等。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; def myfunc(x:int, y:int) -&amp;gt; int:
...     ''' sum x + y '''
...     return x + y


# 函数元数据信息
&amp;gt;&amp;gt;&amp;gt; myfunc.__doc__
' sum x + y '
&amp;gt;&amp;gt;&amp;gt; myfunc.__annotations__
{'x': &amp;lt;class 'int'&amp;gt;, 'y': &amp;lt;class 'int'&amp;gt;, 'return': &amp;lt;class 'int'&amp;gt;}

# partial()包装后的函数，没有函数元数据
&amp;gt;&amp;gt;&amp;gt; newfunc = functools.partial(myfunc,y=3)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;所以如果需要这些元数据，必须自己手动将元数据赋值给partial对象：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; newfunc.__doc__ = myfunc.__doc__
&amp;gt;&amp;gt;&amp;gt; newfunc.__annotations__ = myfunc.__annotations__
&amp;gt;&amp;gt;&amp;gt; newfunc.__doc__
' sum x + y '
&amp;gt;&amp;gt;&amp;gt; newfunc.__annotations__
{'x': &amp;lt;class 'int'&amp;gt;, 'y': &amp;lt;class 'int'&amp;gt;, 'return': &amp;lt;class 'int'&amp;gt;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后，除了partial()可以将函数的参数&quot;冻结&quot;，functools还提供了partialmethod()将方法的参数&quot;冻结&quot;，但基本上用不上，就连partial()也很少用。&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 13:32:00 +0000</pubDate>
<dc:creator>骏马金龙</dc:creator>
<og:description>在functools模块中有一个工具partial()，可以用来</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/f-ck-need-u/p/10198013.html</dc:identifier>
</item>
<item>
<title>我是如何将页面加载时间从6S降到2S的？ - 我的世界只因有你</title>
<link>http://www.cnblogs.com/yuyong970919/p/10197754.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yuyong970919/p/10197754.html</guid>
<description>&lt;h3&gt;写在前面&lt;/h3&gt;
&lt;p&gt;生活在信息爆炸的今天，我们每天不得不面对和过滤海量的信息--无疑是焦躁和浮动的，这就意味着用户对你站点投入的时间可能是及其吝啬的（当然有一些刚需站点除外）。&lt;/p&gt;
&lt;p&gt;如何给用户提供迅速的响应就显得十分重要了，这可能成为你留住用户的关键。即使网站设计的再优秀，功能再完美，但是响应的巨慢，用户的耐心很快会被耗光，这可能成为他最后一次访问，这绝对不是危言耸听，最近有幸参与到了公司海外站点项目，对于这点深有体会。&lt;/p&gt;
&lt;h3&gt;问题的复盘&lt;/h3&gt;
&lt;p&gt;某一天海外运营告知说最近几天的海外站点pv,uv下降严重，希望技术帮忙查看一下原因。WTF，这跟技术有毛线关系，该用的都用了，TM的页面不吸引人，用户不想来，我能怎么办？事实证明不要太自信。&lt;/p&gt;
&lt;p&gt;搬来梯子，熟练的打开海外站点，速度还可以，这个时候差点就给pass了，幸好去看了一下世界各个地区的加载时间后发现，有些地区的加载时间简直不能看。好吧，实锤。&lt;/p&gt;
&lt;p&gt;在查找慢速过程中收获很多决定记录下来。（在这里强烈安利一个可以检测站点 全球各个地区加载时间的网站 https://www.dotcom-tools.com/website-speed-test.aspx ，真的强烈推荐）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文章不包含压缩文件、图片，增加资源域名等等雅虎军规中提到的内容，因为是这些都是必须的。如果你还没有实践的话，建议先遵循再来看。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;预备知识&lt;/h3&gt;
&lt;p&gt;在开始分析和解决之前，惯例先来简单介绍一下涉及的知识点，这样大家可能更加有代入感，也算有个铺垫。&lt;/p&gt;
&lt;h4&gt;DNS&lt;/h4&gt;
&lt;p&gt;这个大家应该是很熟悉的，每天都在用的东西&lt;/p&gt;
&lt;p&gt;说的通俗点，它就是一个用来将ip地址和域名相互映射的数据库，帮助人们更加方便的使用互联网，再也不用记住那些复杂的服务器地址，直接输入服务器地址所绑定域名就可以访问，例如 juejin.im，多好记。&lt;/p&gt;
&lt;h4&gt;CDN&lt;/h4&gt;
&lt;p&gt;内容分发网络（Content delivery network）其实就是一种透过互联网互相连接的计算机网络系统。利用最靠近每位用户的服务器，更快、更可靠地将资源发送给用户。&lt;strong&gt;特点就是高性能、可扩展性及低成本&lt;/strong&gt;。国内两云的这项服务打的不可开胶。&lt;/p&gt;
&lt;p&gt;由于篇幅的原因这里就不详细介绍了。对它不熟悉的或者想要温习一下的 https://zh.wikipedia.org/wiki/%E5%85%A7%E5%AE%B9%E5%82%B3%E9%81%9E%E7%B6%B2%E8%B7%AF 。我觉得主要有两个因素来判断CDN服务的优劣---命中率和节点数量。&lt;/p&gt;
&lt;p&gt;命中率意味着是否回源，回源的请求会打到你的服务器上，那么加载时间就取决与用户与你服务器的通讯状态了，说白了就是听天由命。&lt;/p&gt;
&lt;p&gt;节点数多意味着可供用户选择的响应节点多，优中选优，不必多说了，优秀。&lt;/p&gt;
&lt;h4&gt;网页加载时间&lt;/h4&gt;
&lt;p&gt;网页加载时间其实可以看作是页面响应时间。那么，它是由哪些部分组成的？影响因素都有哪些？哪些我们是可以优化的？ 上一张神图，帮助理解（这是优化过后的截图）&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd88v7hSIiay85Zb7EPJwIS6PCv9nRibTYDBZ2KDibzS1OY70F0P9JEdzicelw/640?wx_fmt=other&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; vspace=&quot;0&quot; data-ratio=&quot;1.2175925925925926&quot; data-type=&quot;other&quot; data-w=&quot;432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd88v7hSIiay85Zb7EPJwIS6PCv9nRibTYDBZ2KDibzS1OY70F0P9JEdzicelw/640?wx_fmt=other&quot; data-fail=&quot;0&quot;/&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/12/5/1677ea8ab4fb7a01?imageView2/0/w/1280/h/960/format/webp/ignore-error/1&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;开始分析&lt;/h3&gt;
&lt;p&gt;说完了预备的知识点，我们开始按照上图开始撸一遍吧&lt;/p&gt;
&lt;h4&gt;DNS Time&lt;/h4&gt;
&lt;p&gt;DNS lookup time，就是寻找域名对应ip地址的过程，这个过程时间长短与选择的服务商有关。&lt;strong&gt;在查慢速问题这个可能会被忽略，但是不同服务商差距那是相当大&lt;/strong&gt;，我们原来选择的那家，简直不要太坑（就不点名了），后来换了 Cloudflare，瞬间清爽了。&lt;/p&gt;
&lt;p&gt;这里再次安利，推荐一个网站 https://www.dnsperf.com/ ，&lt;strong&gt;既可以查看不同服务商的DNS lookup time，还可以查看具体的波动，更加可以通过域名查看它在各个地区的DNS lookup time&lt;/strong&gt;，简直太好用了，赶紧保存吧。&lt;/p&gt;
&lt;p&gt;上一组换之前和之后的对比图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/12/6/16781bd1bdc4bc66?imageView2/0/w/1280/h/960/format/webp/ignore-error/1&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/12/6/16781b453cbc04be?imageView2/0/w/1280/h/960/format/webp/ignore-error/1&quot; alt=&quot;&quot;/&gt;&lt;img title=&quot;&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd885rYClk8opHWylicOycRbJRNVByCHguCkqDXNSdCGs11djejRBqqSUyA/640?wx_fmt=other&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; vspace=&quot;0&quot; data-ratio=&quot;0.8147368421052632&quot; data-type=&quot;other&quot; data-w=&quot;950&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd885rYClk8opHWylicOycRbJRNVByCHguCkqDXNSdCGs11djejRBqqSUyA/640?wx_fmt=other&quot; data-fail=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd88VrJhvgrKaz93AMjDhknXLLVUrdElXs05iaPV6VLATMqHRujI0A6o8Ug/640?wx_fmt=other&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; vspace=&quot;0&quot; data-ratio=&quot;0.8163265306122449&quot; data-type=&quot;other&quot; data-w=&quot;1176&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd88VrJhvgrKaz93AMjDhknXLLVUrdElXs05iaPV6VLATMqHRujI0A6o8Ug/640?wx_fmt=other&quot; data-fail=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;全绿色了有没有，看着有种很爽的感觉，你可以看一看这一项为我们省了多少时间&lt;/p&gt;
&lt;h4&gt;Connect Time and SSl Time&lt;/h4&gt;
&lt;p&gt;一个是http网络连接用时，另一个是SSl协议用时，优化空间不大，pass。&lt;/p&gt;
&lt;h4&gt;Request Time&lt;/h4&gt;
&lt;p&gt;见名知意系列。&lt;/p&gt;
&lt;h4&gt;First Byte Time&lt;/h4&gt;
&lt;p&gt;表示浏览器在从服务器接收第一个字节数据之前需要等待多长时间。获取该数据所需的时间越长, 显示页面所需的时间就越长。&lt;/p&gt;
&lt;p&gt;这部分主要能做的就是使用CDN和优化后端性能。&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;CDN 原来使用的是某云的服务，查看日志发现命中率较低，回源较多，在加上节点数量一般。换成了aws，同样为我们节省了很多加载时间（注册和开通相对麻烦，但是为了用户体验这些都是值得的）&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;后端性能优化 如何进行后端优化可以写几本书毫不夸张，但是我们做的就是加配置，有钱人性。啊哈哈哈哈&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Response Time&lt;/h3&gt;
&lt;p&gt;这部分做的就是页面的静态化还有就是开启服务端的gzip功能，具体方法请google。别小看这个功能，真真可以节约时间。&lt;/p&gt;
&lt;h3&gt;dig&lt;/h3&gt;
&lt;p&gt;想要深入理解DNS查询过程和原理，这个命令是不可或缺的 。通过它你可以灵活、清晰的查看域名DNS解析及其过程，帮助理解。&lt;/p&gt;
&lt;p&gt;下面以taobao为例，说一下过程（这里指的是没有缓存的情况下）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/12/6/16782011e14f3ffc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1&quot; alt=&quot;&quot;/&gt;&lt;img title=&quot;&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd88SlNT7ib9W9oZl1CqpE8HHBicGcdiaPKeq5iaxUkdUoiaxQlp5u1JkCuL7EA/640?wx_fmt=other&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; width=&quot;16&quot; height=&quot;16&quot; border=&quot;0&quot; vspace=&quot;0&quot; data-ratio=&quot;1.372375690607735&quot; data-type=&quot;other&quot; data-w=&quot;905&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/MpGQUHiaib4ib6n0WBiaCgTRWCaQVqlBjd88SlNT7ib9W9oZl1CqpE8HHBicGcdiaPKeq5iaxUkdUoiaxQlp5u1JkCuL7EA/640?wx_fmt=other&quot; data-fail=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.输入taobao.com后，直接为你服务的DNS（简称为H吧）会将请求报告给最高等级服务器&quot;.&quot; &lt;strong&gt;(这些最高等级DNS服务器称为root, 就是图中最开始站在食物链顶端的13个，但并不是13台机器，它们使用了任播https://zh.wikipedia.org/zh/%E4%BB%BB%E6%92%AD 技术可以在全球设立镜像节点，想想以现在的网络请求的量级来说13台肯定不现实。具体的镜像分布可以参考这里https://zh.wikipedia.org/wiki/%E6%A0%B9%E7%B6%B2%E5%9F%9F%E5%90%8D%E7%A8%B1%E4%BC%BA%E6%9C%8D%E5%99%A8 ，这些主机的内容都是同步的）&lt;/strong&gt; ，然后最高等级服务器告诉它你去找.com的DNS，我不管。&lt;/p&gt;
&lt;p&gt;2.得到这个响应后，H又将请求报告给 .com，.com告诉它，你去找taobao的DNS吧，我不管&lt;/p&gt;
&lt;p&gt;3.得到这个响应后，H又将请求报告给taobao,taobao告诉它，我不管，你去找我四个小弟吧。&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;
&lt;p&gt;ns4.taobao.com.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ns5.taobao.com.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ns6.taobao.com.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ns7.taobao.com.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;最后被分配给了ns4，从这得到了最终ip，完成了DNS lookup&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;看到评论中有疑问，其实可以多试几次，会分配到不同的小弟，但是都有淘宝的A记录，所以都可以解析 也可以dig不同的ns4，ns5，ns6，ns7 具像化的看一看。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;最后&lt;/h3&gt;
&lt;p&gt;通过这次排查慢速的过程，不止学到了技术方面可以改进的地方，也真正认识到了对于网站来说，时间就是生命。加载时间长，用户真的是不惯着你。 优秀的站点之所以优秀，就在于把每个细节都做的很优雅。&lt;/p&gt;

&lt;p&gt;转载：&lt;a href=&quot;http://www.xjqyc.cn/contents/2/43.html&quot; target=&quot;_blank&quot;&gt;http://www.xjqyc.cn/contents/2/43.html&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 12:02:00 +0000</pubDate>
<dc:creator>我的世界只因有你</dc:creator>
<og:description>写在前面 生活在信息爆炸的今天，我们每天不得不面对和过滤海量的信息--无疑是焦躁和浮动的，这就意味着用户对你站点投入的时间可能是及其吝啬的（当然有一些刚需站点除外）。 如何给用户提供迅速的响应就显得十</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yuyong970919/p/10197754.html</dc:identifier>
</item>
<item>
<title>打开这个文档，你就被控制 - yuleitest</title>
<link>http://www.cnblogs.com/yuleitest/p/10197720.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yuleitest/p/10197720.html</guid>
<description>&lt;p&gt;对于攻击者或渗透测试者来说，最大的挑战是绕过一个目标的安全控制。&lt;/p&gt;
&lt;p&gt;想要攻击目标网络中的系统往往很困难，通常要绕过防火墙，代理服务器，入侵检测系统等等防护体系。&lt;/p&gt;
&lt;p&gt;一个最好的解决思路就是：将客户端作为攻击目标，与网络中的客户端进行交互，客户端防护相对薄弱。借助客户端访问目标系统的便利性、通过社会工程的方法，一旦攻击成功并且建立了稳定的通信，攻击者便能连接到目标网络。事实证明这种类型的攻击是绕过网络安全控制最有效的方法之一。&lt;/p&gt;
&lt;p&gt;通过本文你将学到——客户端攻击技术—宏攻击&lt;/p&gt;

&lt;h2&gt;VBScript宏攻击&lt;/h2&gt;
&lt;p&gt;    VBScript是一个微软开发的脚本语言。它目前已经集成在了Windows中，最典型的就是Office，因此，它成为了客户端攻击首选语言。&lt;/p&gt;
&lt;p&gt;    下面我们将用到Msfvnom命令行为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195921449-650807860.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;执行后我们收到了payload，该payload分为两部分&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195922048-2077013881.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第一部分是宏代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195922590-642203834.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第二部分是shellcode代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195923275-1286153423.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们新建一个WORD/PPT/EXCEL&lt;/p&gt;
&lt;p&gt;打开&lt;span&gt;工具-视图-宏&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195923853-1384356132.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;创建一个名为test的宏，再将宏代码拷贝到Sub test()到End Sub区间&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195924178-590767520.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后将shellcode代码拷贝至文档主体&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195924519-579456504.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了使攻击成为可能，最后通过改变字体颜色，加入适当内容等等以混淆隐藏shellcode&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195924889-523927851.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后我们将在Metasoloit中设置一个监听会话&lt;/p&gt;
&lt;p&gt;将文件发送给目标，一旦打开，就会在攻击者控制台生成一个反向Shell&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195925315-523807290.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;目标上的Windows上没有任何感知&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195925842-1576669345.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最重要的是它会在你打开所有文档中运行，而且无需启用宏。之所以会如此，因为它已经在所有文档中生效，它将生成一个后门在C盘用户临时文件中，关掉文档也无济于事，因为它已经运行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195926188-264375659.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195926462-867289749.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;宏当前的设置情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195926759-1905500703.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;分析&lt;/h2&gt;
&lt;p&gt;通过木马查杀，效果感人。大部分杀毒引擎都无法检测到。因此它具有很强的免杀能力&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195927093-835047030.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过查看本地资源监视器，我们可以找到一个通讯进程，指向的则是刚才设置的主机IP和8080端口&lt;/p&gt;
&lt;p&gt;根据pid查找文件路径的命令&lt;/p&gt;
&lt;p&gt;wmic process get name,executablepath,processid|findstr 5256找到文件在C盘USERS下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195927434-1160097782.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;宏病毒清理&lt;/h2&gt;
&lt;p&gt;在生成宏的位置删除宏，找到文件删除该后门文件即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195927728-1469451044.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/741432/201812/741432-20181229195928022-1815125723.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 11:52:00 +0000</pubDate>
<dc:creator>yuleitest</dc:creator>
<og:description>前言： 对于攻击者或渗透测试者来说，最大的挑战是绕过一个目标的安全控制。 想要攻击目标网络中的系统往往很困难，通常要绕过防火墙，代理服务器，入侵检测系统等等防护体系。 一个最好的解决思路就是：将客户端</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yuleitest/p/10197720.html</dc:identifier>
</item>
<item>
<title>Bootstrap - 伍萬磊</title>
<link>http://www.cnblogs.com/wanlei/p/10197657.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wanlei/p/10197657.html</guid>
<description>&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;一、简介&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;
&lt;h4&gt;&lt;span&gt;Bootstrap是美国Twitter公司的设计师Mark Otto和Jacob Thornton合作基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的前端开发框架，使得 Web 开发更加快捷。&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;凡是使用过Bootstrap的开发者，都不在乎做这么两件事情：复制and粘贴。&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;它用于开发响应式布局、移动设备优先的 WEB 项目&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;二、安装&lt;/span&gt;&lt;/h2&gt;
&lt;h4 class=&quot;md-end-block md-heading md-focus&quot;&gt;&lt;span class=&quot;md-expand&quot;&gt;1、本地链接&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/releases/download/v3.3.7/bootstrap-3.3.7-dist.zip&quot;&gt;&lt;span&gt;官网下载&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;2、CDN&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('0e30141d-caeb-4868-bc34-12c7ce755ff3')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_0e30141d-caeb-4868-bc34-12c7ce755ff3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_0e30141d-caeb-4868-bc34-12c7ce755ff3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('0e30141d-caeb-4868-bc34-12c7ce755ff3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_0e30141d-caeb-4868-bc34-12c7ce755ff3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&amp;lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot; integrity=&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&lt;span&gt;
​
&lt;/span&gt;&amp;lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css&quot; integrity=&quot;sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&lt;span&gt;
​
&lt;/span&gt;&amp;lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&amp;gt;
&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot; integrity=&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;引入：&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 在head标签上部导入bs的css &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;bootstrap-3.3.7-dist/css/bootstrap.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 再导入自定义修改的css &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;css/my.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; html代码结构 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;&lt;span&gt;
    ...
    
&lt;/span&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;bs的脚本依赖于jq, 所以要提前导入jq&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;脚本逻辑尽量放在html结构之下&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;js/jquery-3.3.1.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;bootstrap-3.3.7-dist/js/bootstrap.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;三、布局容器&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Bootstrap 需要为页面内容和栅格系统包裹一个 .container 容器。我们提供了两个作此用处的类。&lt;span&gt;注意，由于 padding 等属性的原因，这两种 容器类不能互相嵌套。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;.container 类用于固定宽度并支持响应式布局的容器&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;div class=&quot;container&quot;&amp;gt;&lt;span&gt;
  ...
&lt;/span&gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;div class=&quot;container-fluid&quot;&amp;gt;&lt;span&gt;
  ...
&lt;/span&gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class=&quot;ul-list&quot; data-mark=&quot;-&quot;&gt;&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;固定宽度：.container&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;流式布局：.container-fluid&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;总结; 两种容器(container | container-fluid)默认都有左右15px padding&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;固定宽度容器(采用响应式布局)&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 行: .row, 可以取消容器的默认左右15px padding&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;bg-info&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;动态宽度布局(采用流式布局)&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container-fluid&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;bg-info&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;四、响应式布局&lt;/span&gt;&lt;/h2&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;概念：开发了一种自适应写法，即一次开发，处处显示！&lt;/h3&gt;
&lt;ul class=&quot;ul-list&quot; data-mark=&quot;-&quot;&gt;&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;超小屏幕：小于 768px&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;小屏幕：大于等于 768px&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;中等屏幕：大于等于 992px&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;大屏幕：大于等于 1200px&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;五、删格系统&lt;/span&gt;&lt;/h2&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;1、概念&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;&lt;span&gt;&lt;span&gt;将父级可用宽度(content)均分为12等份！&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Bootstrap 提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列&lt;/p&gt;
&lt;p&gt;栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。下面就介绍一下 Bootstrap 栅格系统的工作原理：&lt;/p&gt;
&lt;pre class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;
&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1442172/201812/1442172-20181229190840277-71462083.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;span&gt;栅格参数：&lt;/span&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1442172/201812/1442172-20181229190927022-953604575.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;使用单一的一组 .col-md-* 栅格类，就可以创建一个基本的栅格系统，在手机和平板设备上一开始是堆叠在一起的（超小屏幕到小屏幕这一范围），在桌面（中等）屏幕设备上变为水平排列。所有“列（column）必须放在 ” .row 内。&lt;/p&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;2、列比&lt;/span&gt;&lt;/h3&gt;
&lt;ul class=&quot;ul-list&quot; data-mark=&quot;-&quot;&gt;&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;超小屏幕：.col-xs-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;小屏幕：.col-sm-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;中等屏幕：.col-md-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;大屏幕：.col-lg-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h6 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;只设置小屏列比会影响大屏列比；只设置大屏列比小屏时会撑满屏幕&lt;/span&gt;&lt;/h6&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;3、行&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;div class=&quot;row&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;span&gt;...
&lt;/span&gt;&amp;lt;div class=&quot;row&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;4、列偏移&lt;/span&gt;&lt;/h3&gt;
&lt;ul class=&quot;ul-list&quot; data-mark=&quot;-&quot;&gt;&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;超小屏幕：.col-xs-offset-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;小屏幕：.col-sm-offset-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;中等屏幕：.col-md-offset-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;h4 class=&quot;md-end-block&quot;&gt;&lt;span&gt;大屏幕：.col-lg-offset-*&lt;/span&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;六、辅助类&lt;/span&gt;&lt;/h2&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;1、 情境背景色&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;lt;p class=&quot;bg-primary&quot;&amp;gt;...&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;bg-success&quot;&amp;gt;...&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;bg-info&quot;&amp;gt;...&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;bg-warning&quot;&amp;gt;...&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;bg-danger&quot;&amp;gt;...&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;2、快速浮动&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;div class=&quot;pull-left&quot;&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;pull-right&quot;&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;3、快速清浮动&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;div class=&quot;clearfix&quot;&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;4、显隐&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;div class=&quot;show&quot;&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;hidden&quot;&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;七、字体图标&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;i class=&quot;glyphicon glyphicon-*&quot;&amp;gt;&amp;lt;/i&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;八、组件&lt;/span&gt;&lt;/h2&gt;
&lt;pre class=&quot;md-fences md-end-block ty-contain-cm&quot;&gt;
&lt;a title=&quot;官方文档&quot; href=&quot;https://v3.bootcss.com/components/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;官方文档&lt;/span&gt;&lt;/a&gt;
&lt;/pre&gt;</description>
<pubDate>Sat, 29 Dec 2018 11:35:00 +0000</pubDate>
<dc:creator>伍萬磊</dc:creator>
<og:description>Bootstrap 一、简介 Bootstrap是美国Twitter公司的设计师Mark Otto和Jacob Thornton合作基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wanlei/p/10197657.html</dc:identifier>
</item>
</channel>
</rss>