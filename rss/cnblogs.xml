<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>孙悟空的七十二变是那般？--java类型的七十二变揭秘 - 一天不进步，就是退步</title>
<link>http://www.cnblogs.com/davidwang456/p/11623889.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/davidwang456/p/11623889.html</guid>
<description>&lt;p&gt;&lt;strong&gt;故事背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在《西游记》原著第六回，孙悟空大闹天宫反下界，玉帝派十万天兵围剿，却被打得落花流水。玉帝不得不放下架子，请自己外甥二郎神回来支援。孙悟空与二郎神本事差不多，两人斗得不分胜负，但二郎神有梅山六兄弟助阵，而孙的阵营只是乌合之众。两人战斗正酣时，孙悟空闻后方阵营攻破，猴子被打散，心中发慌败下阵来。&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot;&gt;&lt;img src=&quot;http://p1.pstatp.com/large/pgc-image/c2849d2f81394abf92f4ab151306b01c&quot; alt=&quot;孙悟空的七十二变是那般？--java类型的七十二变揭秘&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　　为了逃脱梅山六兄弟的围追堵截，孙悟空摇身一变，变作一个麻雀，飞在树桃头钉住。这个变化太low了，二郎神一眼就识破假象，立即变成饿鹰扑了过来。孙悟空只得又变成大鹚老冲天而起，二郎神则变成大海鹤，钻上云宵来嗛……&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot;&gt;&lt;img src=&quot;http://p1.pstatp.com/large/pgc-image/93f180ea0af948bd87e9616d813ec779&quot; alt=&quot;孙悟空的七十二变是那般？--java类型的七十二变揭秘&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　　几经斗法，孙悟空最后变成一座土地庙，牙齿作门扇，舌头变菩萨，眼睛变窗棂，但尾巴却不好收拾，只得竖在后面，变成一根旗竿。这个变化迷惑性很大，一般神仙还真看不破。不料二郎神赶到，见一根旗竿立在后面，顿时笑了：“是这猢狲了！他今又在那里哄我。我也曾见庙宇，更不曾见一个旗竿竖在后面的。断是这畜生弄谊！他若哄我进去，他便一口咬住。我怎肯进去？等我掣拳先捣窗棂，后踢门扇！”孙悟空一听，妈妈呀，这二郎神好狠！“门扇是我牙齿，窗棂是我眼睛；若打了牙，捣了眼，却怎么是好？”于是赶紧收了法相，逃命去了。&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot;&gt;&lt;img src=&quot;http://p3.pstatp.com/large/pgc-image/e7ff7b948fbf4cd5a9f180ef0f168b48&quot; alt=&quot;孙悟空的七十二变是那般？--java类型的七十二变揭秘&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　　这七十二变的最大缺陷是：若是变飞禽、走兽、花木、器皿、昆虫之类，可以连身子一起变；但如果变人物，却只是头脸变了，身子变不过来，还有一身黄毛，两块红股，一条尾巴。原因：七十二变化本身就是人研制出来的，也是为人量身打造的,故孙悟空学会后会存在缺陷。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;java中的七十二变&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们看一下，java的七十二般变化吧！&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Multicast{
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main (String[] args){
System.out.println((&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;)(&lt;span&gt;char&lt;/span&gt;)(&lt;span&gt;byte&lt;/span&gt;) -1&lt;span&gt;);
}
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的程序以int 数值-1 开始，然后从int转型为byte，之后转型为char，最后转型回int。第一个转型将数值从32 位窄化到了8 位，第二个转型将数值从8 位拓宽到了16 位，最后一个转型又将数值从16 位拓宽回了32 位。这个数值最终是回到了起点吗？&lt;/p&gt;
&lt;p&gt;是不是想起了《看我七十二变》：&lt;/p&gt;
&lt;p&gt;　　看我七十二变&lt;/p&gt;
&lt;p&gt;　　今天新鲜改变再见&lt;/p&gt;
&lt;p&gt;　　美丽极限爱漂亮没有终点&lt;/p&gt;
&lt;p&gt;　　追求完美的境界&lt;/p&gt;
&lt;p&gt;　　人不爱美天诛地灭&lt;/p&gt;
&lt;p&gt;　　别气馁旧观念抛到一边&lt;/p&gt;
&lt;p&gt;　　现在就开始改变&lt;/p&gt;
&lt;p&gt;　　麻雀也能飞上青天&lt;/p&gt;
&lt;p&gt;运行看结果吧&lt;/p&gt;

&lt;p&gt;为什么会这样呢？我们将程序一步步分开来看：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main (String[] args){
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; i=-1&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;byte&lt;/span&gt; b=(&lt;span&gt;byte&lt;/span&gt;)-1; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;
        &lt;span&gt;char&lt;/span&gt; c=(&lt;span&gt;char&lt;/span&gt;)b; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;
        &lt;span&gt;int&lt;/span&gt; r=(&lt;span&gt;int&lt;/span&gt;)c; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;
&lt;span&gt;        System.out.println(r);
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一步：int转byte&lt;/p&gt;
&lt;p&gt;　　byte b=-1 窄化后没有改变值&lt;/p&gt;
&lt;p&gt;第二步：byte转char&lt;/p&gt;
&lt;p&gt;　　从byte 到char 的转型稍微麻烦一点，因为byte 是一个有符号类型，而char是一个无符号类型。在将一个整数类型转换成另一个宽度更宽的整数类型时，通常是可以保持其数值的，但是却不可能将一个负的byte 数值表示成一个char。因此，从byte 到char 的转换被认为不是一个拓宽原始类型的转换，而是一个拓宽并窄化原始类型的转换（widening and narrowing primitive conversion）：byte 被转换成了int，而这个int 又被转换成了char&lt;/p&gt;
&lt;p&gt;char c=65535//符号扩展&lt;/p&gt;
&lt;p&gt;第三步：char转int&lt;/p&gt;
&lt;p&gt;　　int r=65535//零扩展&lt;/p&gt;
&lt;p&gt;因为byte 是一个有符号的类型，所以在将byte 数值-1 转换成char 时，会发生符号扩展。作为结果的char 数值的16 个位就都被置位了，因此它等于2的16次方-1，即65535。&lt;/p&gt;
&lt;p&gt;从char 到int 的转型也是一个拓宽原始类型转换，它将执行零扩展而不是符号扩展。作为结果的int 数值也就成了65535，&lt;/p&gt;
&lt;p&gt;这正是程序打印出的结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;深入：java如何七十二变？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;jls-5强制类型转换，定义标识如下：&lt;/p&gt;
&lt;p&gt;- 表示不运行任何强制类型转换&lt;/p&gt;
&lt;p&gt;≈ 表示标识抓获(§5.1.1)&lt;/p&gt;
&lt;p&gt;ω 表示拓宽基本类型转换 (§5.1.2)&lt;/p&gt;
&lt;p&gt;η 表示窄化基本类型转换 (§5.1.3)&lt;/p&gt;
&lt;p&gt;ωη 表示拓宽和窄化类型转换 (§5.1.4)&lt;/p&gt;
&lt;p&gt;⇑ 表示拓宽引用类型转换 (§5.1.5)&lt;/p&gt;
&lt;p&gt;⇓ 表示窄化引用类型转换(§5.1.6)&lt;/p&gt;
&lt;p&gt;⊕ 表示装箱转换 (§5.1.7)&lt;/p&gt;
&lt;p&gt;⊗表示拆卸类型转换 (§5.1.8)&lt;/p&gt;
&lt;div class=&quot;pgc-img&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;http://p1.pstatp.com/large/pgc-image/9f1d4dabf1ef4ac88ad1a37b62399cc1&quot; alt=&quot;孙悟空的七十二变是那般？--java类型的七十二变揭秘&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt;到基本类型的强制类型转换&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pgc-img&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;http://p1.pstatp.com/large/pgc-image/d01be04a4774448d87a214caca0494c7&quot; alt=&quot;孙悟空的七十二变是那般？--java类型的七十二变揭秘&quot;/&gt;&lt;p class=&quot;pgc-img-caption&quot;&gt;到引用类型的强制类型转换&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;更详细的资料请参照JSL5描述，链接地址见参考资料【3】&lt;/p&gt;
&lt;p&gt;参考资料&lt;/p&gt;
&lt;p&gt;【1】https://baike.baidu.com/tashuo/browse/content?id=1275b5b5f23ff153017f164c&amp;amp;fr=qingtian&amp;amp;lemmaId=11061&lt;/p&gt;
&lt;p&gt;【2】https://baike.baidu.com/item/%E4%B8%83%E5%8D%81%E4%BA%8C%E5%8F%98/11061?fr=aladdin#2_2&lt;/p&gt;
&lt;p&gt;【3】https://docs.oracle.com/javase/specs/jls/se12/html/jls-5.html&lt;/p&gt;
&lt;p&gt;【4】java解惑&lt;/p&gt;
</description>
<pubDate>Sat, 05 Oct 2019 00:01:00 +0000</pubDate>
<dc:creator>一天不进步，就是退步</dc:creator>
<og:description>故事背景 在《西游记》原著第六回，孙悟空大闹天宫反下界，玉帝派十万天兵围剿，却被打得落花流水。玉帝不得不放下架子，请自己外甥二郎神回来支援。孙悟空与二郎神本事差不多，两人斗得不分胜负，但二郎神有梅山六</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/davidwang456/p/11623889.html</dc:identifier>
</item>
<item>
<title>Spring Boot认证：整合Jwt - 风尘博客</title>
<link>http://www.cnblogs.com/vandusty/p/11623753.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/vandusty/p/11623753.html</guid>
<description>&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Jwt&lt;/code&gt;全称是：&lt;code&gt;json web token&lt;/code&gt;。它将用户信息加密到&lt;code&gt;token&lt;/code&gt;里，服务器不保存任何用户信息。服务器通过使用保存的密钥验证&lt;code&gt;token&lt;/code&gt;的正确性，只要正确即通过验证。&lt;/p&gt;
&lt;h3 id=&quot;优点&quot;&gt;优点&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;简洁: 可以通过&lt;code&gt;URL&lt;/code&gt;、&lt;code&gt;POST&lt;/code&gt;参数或者在&lt;code&gt;HTTP header&lt;/code&gt;发送，因为数据量小，传输速度也很快；&lt;/li&gt;
&lt;li&gt;自包含：负载中可以包含用户所需要的信息，避免了多次查询数据库；&lt;/li&gt;
&lt;li&gt;因为&lt;code&gt;Token&lt;/code&gt;是以&lt;code&gt;JSON&lt;/code&gt;加密的形式保存在客户端的，所以&lt;code&gt;JWT&lt;/code&gt;是跨语言的，原则上任何&lt;code&gt;web&lt;/code&gt;形式都支持；&lt;/li&gt;
&lt;li&gt;不需要在服务端保存会话信息，特别适用于分布式微服务。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;缺点&quot;&gt;缺点&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;无法作废已颁布的令牌；&lt;/li&gt;
&lt;li&gt;不易应对数据过期。&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;一jwt消息构成&quot;&gt;一、&lt;code&gt;Jwt&lt;/code&gt;消息构成&lt;/h2&gt;
&lt;h3 id=&quot;组成&quot;&gt;1.1 组成&lt;/h3&gt;
&lt;p&gt;一个&lt;code&gt;token&lt;/code&gt;分3部分，按顺序为&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;头部（&lt;code&gt;header&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;载荷（&lt;code&gt;payload&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;签证（&lt;code&gt;signature&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;三部分之间用&lt;code&gt;.&lt;/code&gt;号做分隔。例如：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYzdiY2IzMS02ODFlLTRlZGYtYmU3Yy0wOTlkODAzM2VkY2UiLCJleHAiOjE1Njk3Mjc4OTF9.wweMzyB3tSQK34Jmez36MmC5xpUh15Ni3vOV_SGCzJ8&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Jwt&lt;/code&gt;的头部承载两部分信息：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;声明类型，这里是&lt;code&gt;Jwt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;声明加密的算法 通常直接使用 &lt;code&gt;HMAC SHA256&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;code&gt;Jwt&lt;/code&gt;里验证和签名使用的算法列表如下：&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;HS256&lt;/td&gt;
&lt;td&gt;HMAC256&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;HS384&lt;/td&gt;
&lt;td&gt;HMAC384&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;HS512&lt;/td&gt;
&lt;td&gt;HMAC512&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;RS256&lt;/td&gt;
&lt;td&gt;RSA256&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;RS384&lt;/td&gt;
&lt;td&gt;RSA384&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;RS512&lt;/td&gt;
&lt;td&gt;RSA512&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;ES256&lt;/td&gt;
&lt;td&gt;ECDSA256&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;ES384&lt;/td&gt;
&lt;td&gt;ECDSA384&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;ES512&lt;/td&gt;
&lt;td&gt;ECDSA512&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;playload&quot;&gt;1.3 playload&lt;/h3&gt;
&lt;p&gt;载荷就是存放有效信息的地方。基本上填&lt;code&gt;2&lt;/code&gt;种类型数据&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;标准中注册的声明的数据；&lt;/li&gt;
&lt;li&gt;自定义数据。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;由这2部分内部做&lt;code&gt;base64&lt;/code&gt;加密。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;标准中注册的声明 (建议但不强制使用)&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;iss: jwt签发者
sub: jwt所面向的用户
aud: 接收jwt的一方
exp: jwt的过期时间，这个过期时间必须要大于签发时间
nbf: 定义在什么时间之前，该jwt都是不可用的.
iat: jwt的签发时间
jti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;自定义数据:存放我们想放在&lt;code&gt;token&lt;/code&gt;中存放的&lt;code&gt;key-value&lt;/code&gt;值&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;signature&quot;&gt;1.4 signature&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Jwt&lt;/code&gt;的第三部分是一个签证信息，这个签证信息由三部分组成&lt;br/&gt;&lt;code&gt;base64&lt;/code&gt;加密后的&lt;code&gt;header&lt;/code&gt;和&lt;code&gt;base64&lt;/code&gt;加密后的&lt;code&gt;payload&lt;/code&gt;连接组成的字符串，然后通过&lt;code&gt;header&lt;/code&gt;中声明的加密方式进行加盐&lt;code&gt;secret&lt;/code&gt;组合加密，然后就构成了&lt;code&gt;Jwt&lt;/code&gt;的第三部分。&lt;/p&gt;
&lt;h2 id=&quot;二spring-boot和jwt集成示例&quot;&gt;二、&lt;code&gt;Spring Boot&lt;/code&gt;和&lt;code&gt;Jwt&lt;/code&gt;集成示例&lt;/h2&gt;
&lt;p&gt;示例代码采用：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.auth0&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;java-jwt&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;项目依赖&quot;&gt;2.1 项目依赖&lt;/h3&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;jjwt&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;0.9.1&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;com.auth0&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;java-jwt&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;!-- redis --&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-data-redis&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;!-- lombok --&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt;
        &amp;lt;scope&amp;gt;1.8.4&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.2.47&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;自定义注解jwttoken&quot;&gt;2.2 自定义注解&lt;code&gt;@JwtToken&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;加上该注解的接口需要登录才能访问&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Target({ElementType.METHOD, ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
public @interface JwtToken {
    boolean required() default true;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;jwt-认证工具类jwtutil.java&quot;&gt;2.3 Jwt 认证工具类&lt;code&gt;JwtUtil.java&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;主要用来生成签名、校验签名和通过签名获取信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class JwtUtil {

    /**
     * 过期时间5分钟
     */
    private static final long EXPIRE_TIME = 5 * 60 * 1000;
    /**
     * jwt 密钥
     */
    private static final String SECRET = &quot;jwt_secret&quot;;

    /**
     * 生成签名，五分钟后过期
     * @param userId
     * @return
     */
    public static String sign(String userId) {
        try {
            Date date = new Date(System.currentTimeMillis() + EXPIRE_TIME);
            Algorithm algorithm = Algorithm.HMAC256(SECRET);
            return JWT.create()
                    // 将 user id 保存到 token 里面
                    .withAudience(userId)
                    // 五分钟后token过期
                    .withExpiresAt(date)
                    // token 的密钥
                    .sign(algorithm);
        } catch (Exception e) {
            return null;
        }
    }

    /**
     * 根据token获取userId
     * @param token
     * @return
     */
    public static String getUserId(String token) {
        try {
            String userId = JWT.decode(token).getAudience().get(0);
            return userId;
        } catch (JWTDecodeException e) {
            return null;
        }
    }

    /**
     * 校验token
     * @param token
     * @return
     */
    public static boolean checkSign(String token) {
        try {
            Algorithm algorithm = Algorithm.HMAC256(SECRET);
            JWTVerifier verifier = JWT.require(algorithm)
                    // .withClaim(&quot;username&quot;, username)
                    .build();
            DecodedJWT jwt = verifier.verify(token);
            return true;
        } catch (JWTVerificationException exception) {
            throw new RuntimeException(&quot;token 无效，请重新获取&quot;);
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;拦截器拦截带有注解的接口&quot;&gt;2.4 拦截器拦截带有注解的接口&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;JwtInterceptor.java&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class JwtInterceptor implements HandlerInterceptor {

    @Override
    public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object object) {
        // 从 http 请求头中取出 token
        String token = httpServletRequest.getHeader(&quot;token&quot;);
        // 如果不是映射到方法直接通过
        if(!(object instanceof HandlerMethod)){
            return true;
        }
        HandlerMethod handlerMethod=(HandlerMethod)object;
        Method method=handlerMethod.getMethod();
        //检查有没有需要用户权限的注解
        if (method.isAnnotationPresent(JwtToken.class)) {
            JwtToken jwtToken = method.getAnnotation(JwtToken.class);
            if (jwtToken.required()) {
                // 执行认证
                if (token == null) {
                    throw new RuntimeException(&quot;无token，请重新登录&quot;);
                }
                // 获取 token 中的 userId
                String userId = JwtUtil.getUserId(token);
                System.out.println(&quot;用户id:&quot; + userId);

                // 验证 token
                JwtUtil.checkSign(token);
            }
        }
        return true;
    }

    @Override
    public void postHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView) throws Exception {

    }
    @Override
    public void afterCompletion(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e) throws Exception {

    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;注册拦截器：&lt;code&gt;WebConfig.java&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Configuration
public class WebConfig implements WebMvcConfigurer {

    /**
     * 添加jwt拦截器
     * @param registry
     */
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(jwtInterceptor())
                // 拦截所有请求，通过判断是否有 @JwtToken 注解 决定是否需要登录
                .addPathPatterns(&quot;/**&quot;);
    }

    /**
     * jwt拦截器
     * @return
     */
    @Bean
    public JwtInterceptor jwtInterceptor() {
        return new JwtInterceptor();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;全局异常捕获&quot;&gt;2.5 全局异常捕获&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RestControllerAdvice
public class GlobalExceptionHandler {
    @ResponseBody
    @ExceptionHandler(Exception.class)
    public Object handleException(Exception e) {
        String msg = e.getMessage();
        if (msg == null || msg.equals(&quot;&quot;)) {
            msg = &quot;服务器出错&quot;;
        }
        JSONObject jsonObject = new JSONObject();
        jsonObject.put(&quot;message&quot;, msg);
        return jsonObject;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;接口&quot;&gt;2.6 接口&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;JwtController.java&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RestController
@RequestMapping(&quot;/jwt&quot;)
public class JwtController {

    /**
     * 登录并获取token
     * @param userName
     * @param passWord
     * @return
     */
    @PostMapping(&quot;/login&quot;)
    public Object login( String userName, String passWord){
        JSONObject jsonObject=new JSONObject();
        // 检验用户是否存在(为了简单，这里假设用户存在，并制造一个uuid假设为用户id)
        String userId = UUID.randomUUID().toString();
        // 生成签名
        String token= JwtUtil.sign(userId);
        Map&amp;lt;String, String&amp;gt; userInfo = new HashMap&amp;lt;&amp;gt;();
        userInfo.put(&quot;userId&quot;, userId);
        userInfo.put(&quot;userName&quot;, userName);
        userInfo.put(&quot;passWord&quot;, passWord);
        jsonObject.put(&quot;token&quot;, token);
        jsonObject.put(&quot;user&quot;, userInfo);
        return jsonObject;
    }

    /**
     * 该接口需要带签名才能访问
     * @return
     */
    @JwtToken
    @GetMapping(&quot;/getMessage&quot;)
    public String getMessage(){
        return &quot;你已通过验证&quot;;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;postman测试接口&quot;&gt;2.7 &lt;code&gt;Postman&lt;/code&gt;测试接口&lt;/h3&gt;
&lt;h4 id=&quot;在没token的情况下访问jwtgetmessage接口&quot;&gt;2.7.1 在没&lt;code&gt;token&lt;/code&gt;的情况下访问&lt;code&gt;jwt/getMessage&lt;/code&gt;接口&lt;/h4&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;{
    &quot;message&quot;: &quot;无token，请重新登录&quot;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;先登录在访问jwtgetmessage接口&quot;&gt;2.7.2 先登录，在访问&lt;code&gt;jwt/getMessage&lt;/code&gt;接口&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;登录请求及结果，详见下图：&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1768363/201910/1768363-20191005000349767-1444133982.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;登录后得到签名如箭头处&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在请求头加上签名，然后再请求&lt;code&gt;jwt/getMessage&lt;/code&gt;接口&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1768363/201910/1768363-20191005000414382-1181888871.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;请求通过，测试成功！&lt;/p&gt;
&lt;h4 id=&quot;过期后再次访问&quot;&gt;2.7.3 过期后再次访问&lt;/h4&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;我们设置的签名过期时间是五分钟，五分钟后再次访问&lt;code&gt;jwt/getMessage&lt;/code&gt;接口,结果如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1768363/201910/1768363-20191005000430989-132485460.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过结果，我们发现时间到了，签名失效，说明该方案通过。&lt;/p&gt;
&lt;h2 id=&quot;三总结&quot;&gt;三、总结&lt;/h2&gt;
&lt;h3 id=&quot;示例源码&quot;&gt;3.1 示例源码&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vanDusty/SpringBoot-Home/tree/master/springboot-demo-certification/jwt-demo&quot;&gt;Github 源码&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;技术交流&quot;&gt;3.2 技术交流&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.dustyblog.cn/&quot;&gt;风尘博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_42036952&quot;&gt;风尘博客-CSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.im/user/5d5ea68e6fb9a06afa328f56/posts&quot;&gt;风尘博客-掘金&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Fri, 04 Oct 2019 16:08:00 +0000</pubDate>
<dc:creator>风尘博客</dc:creator>
<og:description>本文主要讲解Spring Boot 整合Jwt 认证的示例，详细内容，详见文末源码。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/vandusty/p/11623753.html</dc:identifier>
</item>
<item>
<title>Lxde添加触摸板双击功能、防误触 - 东北小狐狸</title>
<link>http://www.cnblogs.com/hellxz/p/linux_touchpad_settings.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hellxz/p/linux_touchpad_settings.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;本文链接：&lt;a href=&quot;https://www.cnblogs.com/hellxz/p/linux_touchpad_settings.html&quot; class=&quot;uri&quot;&gt;https://www.cnblogs.com/hellxz/p/linux_touchpad_settings.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这时简单记录一下最近两天折腾Lxde的触摸板功能的设置，留待日后查阅&lt;/p&gt;
&lt;p&gt;本文主要记录一下APT系Linux开启Lxde触摸板双击功能，以及一些关于触摸板防误触方面的设置&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;PS: Arch Linux可以直接参考官方wiki&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;解决lxde没有双击功能&quot;&gt;解决Lxde没有双击功能&lt;/h2&gt;
&lt;h3 id=&quot;安装驱动包&quot;&gt;安装驱动包&lt;/h3&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;sudo apt-get install xserver-xorg-input-synaptics&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;复制-usrsharex11xorg.conf.d-到-etcx11&quot;&gt;复制 &lt;code&gt;/usr/share/X11/xorg.conf.d&lt;/code&gt; 到 &lt;code&gt;/etc/X11&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;sudo cp -R /usr/share/X11/xorg.conf.d /etc/X11/.
cd /etc/X11/xorg.conf.d
sudo vim 10-edev.conf #添加edev.conf配置文件，添加自定义配置&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;新建usrsharex11xorg.conf.d10-edev.conf&quot;&gt;新建&lt;code&gt;/usr/share/X11/xorg.conf.d/10-edev.conf&lt;/code&gt;&lt;/h3&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;sudo vim /usr/share/X11/xorg.conf.d/10-edev.conf #添加edev.conf配置文件，添加自定义配置&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;文件内容如下：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;# To overwrite 70-synaptics.conf default configuration.
# The Options are useful for diy
Section &quot;InputClass&quot;  
        Identifier &quot;evdev touchpad catchall&quot;  
        MatchIsTouchpad &quot;on&quot;  
        MatchDevicePath &quot;/dev/input/event*&quot;  
        Driver &quot;synaptics&quot;  
        Option &quot;TapButton1&quot; &quot;1&quot;
        Option &quot;TapButton2&quot; &quot;2&quot;
        Option &quot;TapButton3&quot; &quot;3&quot;
EndSection

# if touchpad has duplicates, will ignore operation what you have done with touchpad.
Section &quot;InputClass&quot;
        Identifier &quot;touchpad ignore duplicates&quot;
        MatchIsTouchpad &quot;on&quot;
        MatchOS &quot;Linux&quot;
        MatchDevicePath &quot;/dev/input/mouse*&quot;
        Option &quot;Ignore&quot; &quot;on&quot;
EndSection&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;这里开启单击、双击、三指的操作功能，如果不想再使用某一功能，可以设置其值为0或移除此Option&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;重启系统&quot;&gt;重启系统&lt;/h3&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;重启系统后，我们会发现双指操作可以正常使用了，但是我发现打字的时候，大拇指会碰到掌托，鼠标乱跑，基本没法正常打字，这样也是不合需要的。所有有了下边的打字等场景禁用触摸板的记录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;打字时禁用触摸板&quot;&gt;打字时禁用触摸板&lt;/h2&gt;
&lt;p&gt;这里有三种方案，其一是开启手掌探测，其二是打字时禁用触摸板，其三是直接禁用触摸板（提供切换脚本）&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;查看当前触摸板设置可以参考&lt;code&gt;synclient -l&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;开启手掌探测palm-detect&quot;&gt;开启手掌探测(Palm Detect)&lt;/h3&gt;
&lt;p&gt;以下为测试数据，可以使用如下参数在本次会话中测试，如果一切正常且满足需要，可以添加到自启脚本中&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;synclient PalmDetect=1 #开启手掌探测
synclient PalmMinWidth=8 # 手掌最小宽度
synclient PalmMinZ=100 #手掌用力最小力度（z坐标轴方向）&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;以上的&lt;code&gt;PalmMinWidth&lt;/code&gt;和&lt;code&gt;PalmMinZ&lt;/code&gt;的数值可以通过evtest软件进行测试，使用方法如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1149398/201910/1149398-20191004230718307-310108320.png&quot;/&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后我们得到的参数，也可以添加到&lt;code&gt;/usr/share/X11/xorg.conf.d/10-edev.conf&lt;/code&gt;中，接续在Option下方&lt;/p&gt;
&lt;p&gt;例如刚才的配置应写为：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;Option &quot;PalmDetect&quot; &quot;1&quot;
Option &quot;PalmMinWidth&quot; &quot;8&quot;
Option &quot;PalmMinZ&quot; &quot;100&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;打字时禁用触摸板-1&quot;&gt;打字时禁用触摸板&lt;/h3&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;syndaemon -m 300 -d  #300ms是暂停时间，更多详情参考syndaemon -h&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;可以添加到自启（auto_start）中，禁用时间可以按需调整，如果不写-m指定毫秒数默认200ms，-i指定秒数，默认2s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;禁用触摸板&quot;&gt;禁用触摸板&lt;/h3&gt;
&lt;p&gt;实现思路是通过脚本去切换当前禁用触摸板的状态&lt;/p&gt;
&lt;p&gt;创建shell脚本&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;sudo vim /usr/local/bin/touchpad_toggle.sh &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;内容如下：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;#!/bin/bash

ts=`synclient -l|grep TouchpadOff`
ts=${ts#*= }

if [ &quot;$ts&quot; == 0 ]; then
    synclient TouchpadOff=1
else
    synclient TouchpadOff=0
fi&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当然脚本还可以简写为：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;#!/bin/bash
synclient TouchpadOff=$(synclient -l | grep -c 'TouchpadOff.*=.*0')&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;引用文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Touchpad_Synaptics&quot;&gt;Arch Linux Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.ubuntu.org.cn/%E8%A7%A6%E6%91%B8%E6%9D%BF&quot;&gt;Ubuntu Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.linuxidc.com/Linux/2013-07/87680.htm&quot;&gt;Linux公社&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Fri, 04 Oct 2019 15:43:00 +0000</pubDate>
<dc:creator>东北小狐狸</dc:creator>
<og:description>前言 本文链接：https://www.cnblogs.com/hellxz/p/linux_touchpad_settings.html 这时简单记录一下最近两天折腾Lxde的触摸板功能的设置，留待</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/hellxz/p/linux_touchpad_settings.html</dc:identifier>
</item>
<item>
<title>国庆佳节第四天，谈谈我月收入增加 4K 的故事 - 沉默王二</title>
<link>http://www.cnblogs.com/qing-gee/p/11623646.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qing-gee/p/11623646.html</guid>
<description>&lt;h3 id=&quot;h01&quot;&gt;01、起承&lt;/h3&gt;
&lt;p&gt;在我下定决心改变的这将近 1 年的时间里，遇到了很多很多有故事的人，以及有趣的事。自我的认知改变特别大！尤其是收入，比去年同时期增加了 4K。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4K，可能也就买 100 斤猪肉&lt;/strong&gt;。但是对于身处九朝古都——洛阳的我来说，算得上一笔可观的收入了。强调一下，洛阳是一个不折不扣的三线城市；之前我想带高帽子说洛阳是二线城市，结果我在郑州的同学们不乐意了：凭啥洛阳是二线城市，你是要把我们河南省府郑州抬举到一线城市吗，还是想和我们平起平坐？&lt;/p&gt;
&lt;p&gt;可能有不少读者在北京、上海、深圳、杭州，觉得 4K 也太少了，完全没必要拿出来炫耀啊！给各位普及一个概念：小区认识一位年轻貌美的宝妈，在王府井上班，一个月底薪也就不到 2K，还比我累！&lt;/p&gt;
&lt;p&gt;我说这话不是为了炫耀什么，而是给大家一个心平气和的理由。这样大家就能安静地听我讲完这段故事了。&lt;/p&gt;
&lt;h3 id=&quot;h02&quot;&gt;02、转机&lt;/h3&gt;
&lt;p&gt;那我究竟干了什么，能一个月多挣 4K 呢？&lt;/p&gt;
&lt;p&gt;先说答案吧，就不做过多铺垫了。我跟对了一位大佬，他的网名叫纯洁的微笑（下文就称呼他“微笑哥”）——估计很多读者看到这，就恍然大悟了。&lt;/p&gt;
&lt;p&gt;最初在 CSDN 上见到过几次微笑哥写的文章，感觉就那样吧。不过，他的那个头像，真的是和笔名形成了强烈的反差，这让我记忆犹新。感兴趣的可以关注一下他的同名公众号，感受一下。&lt;/p&gt;
&lt;p&gt;后来嘛，我们发生了第一次的“邂逅”。微笑哥主动加了我的微信（这件事要炫耀一辈子了），说他是某某公司的研发总监，名叫 XX，然后呢，我就冷冷地回了一句：“X 总好。”&lt;/p&gt;
&lt;p&gt;后来的一天，微信上好多人加我，当天达到了两百多人。由于是周六，我没拿手机，在小区里面带娃。回到家后看到微信上那么多红点我都惊呆了！在这之前，我微信上总共也就六十多个好友吧，不是亲戚就是一些偶尔还联系的大学同学。&lt;/p&gt;
&lt;p&gt;再后来一天，有个大学同学石磊发微信说：“小青（大学同学给我的外号），你看这个号，他转发了你的文章耶，你真牛逼。”&lt;/p&gt;
&lt;p&gt;我看他推的文章题目叫《&lt;a href=&quot;https://www.cnblogs.com/qing-gee/p/9880901.html&quot;&gt;为了月入三万，我都做了哪些准备？&lt;/a&gt;》（写于去年十月底），正是我发在博客园的那篇爆文，当时两百多人加微信的那篇。&lt;/p&gt;
&lt;p&gt;哦，我才明白：微笑哥加我微信让我开白是这个原因啊！哦，我好傻，微信公众号开白是为了别的号转载，保护原创啊！&lt;/p&gt;
&lt;p&gt;微笑哥发这篇文章的当天，我发现「沉默王二」公众号多了一百多个读者，他公号发这篇文章的阅读量也直逼 1W。我后悔了，原来“纯洁的微笑”真的就是传说中的大佬啊，我当初那么冷冰冰真有点有眼不识泰山啊！&lt;/p&gt;
&lt;h3 id=&quot;h03&quot;&gt;03、改变&lt;/h3&gt;
&lt;p&gt;再后来，我入了微笑哥的知识星球（有一个叫《就聊挣钱》），当时感觉好贵，对于三线城市的我来说，对知识付费一直不大情愿，总觉得付了费，自己就是那颗韭菜。&lt;/p&gt;
&lt;p&gt;可后来发现，我竟然把圈费赚回来了！我分享的文字能够不断地冲在作业榜的前三名，榜上有名的分享会得到微笑哥的大额赞赏。查看星球第一期精华的朋友应该会看到我的身影。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实话实说，产生金钱的交往后，我们的熟络度也逐渐升温了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我知道，有这样一批人，“拔一毛而利天下不为也”；但遇到抽奖活动的时候比谁都积极，遇到抢红包的时候点的比谁都快。以前的我，也属于这种。任何付费课程，我就是不买；任何原创文章，我就是不打赏。&lt;/p&gt;
&lt;p&gt;但在知识付费时代，付费是进入一个圈子的最佳捷径。&lt;/p&gt;
&lt;p&gt;拿我来说吧，我购买“纯洁的微笑”相关的付费产品累计不超过 200 元，但我的收益呢，就像标题写的那样，一个月的收益就有 200 * 200。&lt;/p&gt;
&lt;p&gt;这个还只是单纯的，金钱上的收益。&lt;strong&gt;你说神奇不神奇！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;记得有个大佬曾说过这样一句话：越穷的人越不舍得投资，所以他越来越穷；越富的人越舍得投资，所以他越来越富。&lt;/p&gt;
&lt;h3 id=&quot;h04&quot;&gt;04、坚持&lt;/h3&gt;
&lt;p&gt;当然了，在你加入一个圈子后，如果什么也不做，显然是不会获得圈主青睐的。&lt;/p&gt;
&lt;p&gt;来看看我都做了哪些才脱颖而出的吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1）坚持做作业&lt;/strong&gt;。我并不是一个富有想法的人，但是微笑哥布置的每一个作业，我都会积极地参与，认真地作答，力求通过自己的真情实意去打动球友们。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1117051/201910/1117051-20191004231236769-1122354088.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;2）坚持早就是优势&lt;/strong&gt;。记得微笑哥在群里喊：“我新建了一个公号，名叫《Java 极客技术》，投稿超过 6 篇就可以加入创始团队，以后可以参与分成。”我是第一个响应组织号召的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1117051/201910/1117051-20191004231303765-484724861.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;交付 6 篇文章并不难，难的是一如既往地坚持，难的是在利益的驱动下依然保持本心，交付高质量的文章。记得 4 月份的时候，&lt;a href=&quot;https://mp.weixin.qq.com/s/TYKok0cd1hlXyMTp3EqrVg&quot;&gt;我父亲因为意外的脑出血住进了 ICU&lt;/a&gt;，在医院陪护的那段煎熬的日子里，我依然没有放弃，坚持每周输出一篇。&lt;/p&gt;
&lt;p&gt;Java 极客技术团队的成员子悠对我的评价蛮到位的：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;认识二哥这么久，最大的感触就是二哥很真诚，做事的执行力强到吓人，团队中很多事情都是二哥带头，做的好的地方二哥点名表扬，做的不对的地方二哥都会及时反馈，很荣幸能跟二哥合作，向二哥看齐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我身上的缺点其实蛮多的，但我懂得扬长避短，会在一个圈子内把自己做到极致。&lt;strong&gt;我的想法少，所以当别人提出方案的时候，我就第一个先跑起来；我跑的慢，我就坚持得更久&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;h05&quot;&gt;05、最后&lt;/h3&gt;
&lt;p&gt;赚钱对于有些人来说，就好像摘天上的星星一样难；对于有些人来说，容易到拽一根头发。对于我来说，算不上容易，但把握住了机会，也就不会特别难。&lt;/p&gt;
&lt;p&gt;谢谢大家的阅读，原创不易，喜欢就点个赞，这将是我最强的写作动力。如果你觉得文章对你有所帮助，也蛮有趣的，就关注一下我的公众号，谢谢。&lt;/p&gt;

</description>
<pubDate>Fri, 04 Oct 2019 15:14:00 +0000</pubDate>
<dc:creator>沉默王二</dc:creator>
<og:description>01、起承 在我下定决心改变的这将近 1 年的时间里，遇到了很多很多有故事的人，以及有趣的事。自我的认知改变特别大！尤其是收入，比去年同时期增加了 4K。 4K，可能也就买 100 斤猪肉。但是对于身</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/qing-gee/p/11623646.html</dc:identifier>
</item>
<item>
<title>计算机 编码 解码 - 一杯热咖啡AAA</title>
<link>http://www.cnblogs.com/AdaiCoffee/p/11623557.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/AdaiCoffee/p/11623557.html</guid>
<description>&lt;p&gt;&lt;span&gt;在阅读本文章之前，我建议你首先看阮一峰的博客：&lt;/span&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&quot; class=&quot;uri&quot;&gt;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;字符：&lt;/p&gt;
&lt;p&gt;是文字和符号的总称。一个汉字、标点符号、英文字母、数字，这都是字符&lt;/p&gt;
&lt;p&gt;字符集：&lt;/p&gt;
&lt;p&gt;是多个字符的集合。我们可以理解为一本大字典。字符集种类很多，每个字符集包含的字符个数也不同。常见的字符集有：ASCII字符集、Unicode字符集、GB2312字符集、ISO-8859-1字符集等&lt;/p&gt;
&lt;p&gt;字符编码：&lt;/p&gt;
&lt;p&gt;计算机只能识别二进制1和0。字符集中的字符，计算机是不能直接识别的，所以要将字符集转换为计算机可以识别的二进制，&lt;span&gt;这个转换过程就是编码&lt;/span&gt;，而字符编码就是将二进制的数与字符集中的字符对应起来的一套规则&lt;/p&gt;
&lt;p&gt;全角和半角（针对中文字符集）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1222538/201910/1222538-20191004223045009-804633174.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;中文字符集将ASCII里本来就有的大小写英文字母、阿拉伯数字、标点符号&lt;span&gt;重新编写了一套两个字节长的编码&lt;/span&gt;，这就是 “ 全角 ”字符，而原来在127以下的那些就叫 “ 半角 ”字符了。全角和半角只针对于字母、数字和标点而言的，对于中文字是没有全角和半角区分的。&lt;/p&gt;
&lt;p&gt;全角字符：字母和数字与汉字占等宽位置的字并且占2个字节 半角字符：正常ASCII字体宽度且占一个字节&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;全角字符：ａｂｃｄｅｆ１２３  -- 字体要宽一点   总共有18个字节
半角字符：abcedf123        -- 字体要窄一点   总共有 9个字节&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;GB2312、GBK、GB18030区别：&lt;/p&gt;
&lt;p&gt;GB2312支持的汉字太少。1995年的汉字扩展规范GBK1.0收录了21886个符号，它分为汉字区和图形符号区。汉字区包括21003个字符。2000年的GB18030是取代GBK1.0的正式国家标准。该标准收录了27484个汉字，同时还收录了藏文、蒙文、维吾尔文等主要的少数民族文字。现在的PC平台必须支持GB18030，对嵌入式产品暂不作要求。所以手机、MP3一般只支持GB2312。&lt;/p&gt;
&lt;p&gt;从ASCII、GB2312、GBK到GB18030，这些编码方法是向下兼容的，即同一个字符在这些方案中总是有相同的编码，后面的标准支持更多的字符。在这些编码中，英文和中文可以统一地处理。区分中文编码的方法是高字节的最高位不为0。按照程序员的称呼，GB2312、GBK到GB18030都属于双字节字符集 (DBCS)。&lt;/p&gt;
&lt;p&gt;Unicode汉字范围：&lt;/p&gt;
&lt;p&gt;Unicode采用两字节表示，因此总共能表示65536个字符，汉字的开始编号是 19968，十六进制表示 \u4E00，最后一个汉字的位置编号是40869，十六进制表示 \u9FA5。&lt;span&gt;[\u4E00-\u9FA5]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Unicode中每个字符的编码都是2个字节，包括英文字母、数字。&lt;/p&gt;

&lt;p&gt;我们知道在window下记事本，输入联通，然后保存再打开，会出现乱码情况，以前只知道是GB2312和UTF-8编码冲撞了，并没有认真研究底层原理，今天我们就一起来看看真正的原因是什么。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1222538/201910/1222538-20191004223121298-1541354071.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当新建一个文本文件的时候，记事本的编码默认是ANSI编码&lt;/p&gt;
&lt;p&gt;ANSI是一种字符编码标准，其实就是各个国家或地区的国标。对于中国地区就是GB2312编码，中国台湾地区就是BIG5编码，对于日本就是JIS编码，对于美国自然就是ASCII码等等。&lt;/p&gt;
&lt;p&gt;如果在ANSI的编码输入汉字，那么他实际就是GB2312系列的编码，在这种编码下，”联通“的十六进制和二进制编码是：&lt;/p&gt;
&lt;p&gt;C1 1100 0001&lt;/p&gt;
&lt;p&gt;AA 1010 1010&lt;/p&gt;
&lt;p&gt;CD 1100 1101&lt;/p&gt;
&lt;p&gt;AB 1010 1000&lt;/p&gt;
&lt;p&gt;如果大家不知道如何获取指定编码字符的二进制，可以通过程序来处理，也可以通过文本编辑器查看。这里我是通过Java程序来获取 “联通” 在GB2312下的二进制&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class Demo {
    public static void main(String[] args) throws Exception {
        String str = &quot;联通&quot;;
        byte[] bytes = str.getBytes(&quot;GB2312&quot;);
        for (byte b : bytes) {
            System.out.print(Integer.toBinaryString(b) +&quot;\r\n&quot;);
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出结果：&lt;/p&gt;
&lt;p&gt;1111111111111111111111111 1000001&lt;br/&gt;1111111111111111111111111 0101010&lt;br/&gt;1111111111111111111111111 1001101&lt;br/&gt;1111111111111111111111111 0101000&lt;/p&gt;
&lt;p&gt;这里要注意，因为调用的是&lt;code&gt;Integer.toBinaryString(b)&lt;/code&gt;，而一个&lt;code&gt;int&lt;/code&gt;在Java中占4个字节，byte只占一个字节，所以前三个字节全都是1，我们只用关注后面8位即可。&lt;/p&gt;
&lt;p&gt;如果你看了 阮一峰 的博客，那么你现在已经知道了UTF-8的编码规则&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Unicode符号范围     |        UTF-8编码方式
(十六进制)          |              （二进制）
----------------------+---------------------------------------------
0000 0000-0000 007F | 0xxxxxxx           ！！！第一类
0000 0080-0000 07FF | 110xxxxx 10xxxxxx  ！！！第二类
0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;记事本保存联通的二进制为：&lt;/p&gt;
&lt;p&gt;1100 0001 1010 1010&lt;/p&gt;
&lt;p&gt;1100 1101 1010 1000&lt;/p&gt;
&lt;p&gt;这刚好和UTF-8&lt;span&gt;第二类&lt;/span&gt;编码一致，所以这个时候，记事本就会误以为该文件应该以UTF-8编码的方式打开，然后就按照UTF-8的方式处理这些二进制，因为前两个字节 &lt;span&gt;110&lt;/span&gt;0 0001 &lt;span&gt;10&lt;/span&gt;10 1010的实际有效位数是00001 101010，转换成十六进制是6a，但是6a却属于&lt;span&gt;第一类&lt;/span&gt;，这个时候就产生乱码了。因此，平常开发尽可能少使用txt。&lt;/p&gt;

&lt;p&gt;有一个UTF-8编码的文本，文本内容如下：&lt;/p&gt;
&lt;p&gt;aá一&lt;/p&gt;
&lt;p&gt;分别是英文字母a，发育字母á，中文汉字一&lt;/p&gt;
&lt;p&gt;一：获取十六进制编码&lt;/p&gt;
&lt;p&gt;通过16进制工具，查看16进制编码(我本人使用的是Sublime 插件 hexViewer)&lt;/p&gt;
&lt;p&gt;61 c3 a1 e4 b8 80&lt;/p&gt;
&lt;p&gt;二：计算二进制编码&lt;/p&gt;
&lt;p&gt;01100001&lt;/p&gt;
&lt;p&gt;11000011&lt;/p&gt;
&lt;p&gt;10100001&lt;/p&gt;
&lt;p&gt;11100100&lt;/p&gt;
&lt;p&gt;10111000&lt;/p&gt;
&lt;p&gt;10000000&lt;/p&gt;
&lt;p&gt;三：根据UTF-8编码规则将字节分组后：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;0&lt;/span&gt;1100001&lt;/p&gt;
&lt;p&gt;&lt;span&gt;110&lt;/span&gt;00011&lt;/p&gt;
&lt;p&gt;&lt;span&gt;10&lt;/span&gt;100001&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1110&lt;/span&gt;0100&lt;/p&gt;
&lt;p&gt;&lt;span&gt;10&lt;/span&gt;111000&lt;/p&gt;
&lt;p&gt;&lt;span&gt;10&lt;/span&gt;000000&lt;/p&gt;
&lt;p&gt;四：重新计算，得出对应的Unicode字符集的二进制编码&lt;/p&gt;
&lt;p&gt;00000000 01100001 &lt;span&gt;注意在Unicode中是两个字节表示一个字符，因此这里会补 00000000&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;00000000 11111001&lt;/p&gt;
&lt;p&gt;01001110 00000000&lt;/p&gt;
&lt;p&gt;五： 计算机从Unicode中查询出字符集为&lt;/p&gt;
&lt;p&gt;a&lt;/p&gt;
&lt;p&gt;á&lt;/p&gt;
&lt;p&gt;一&lt;/p&gt;

&lt;p&gt;aá一 这三个字符，不过这次是用UTF-16 BE保存的，及大头模式，如果对大头和小头方式不清楚的，请先看阮一峰的博客&lt;/p&gt;
&lt;p&gt;一：获取十六进制编码&lt;/p&gt;
&lt;p&gt;通过16进制工具，查看16进制编码(我本人使用的是Sublime 插件 hexViewer)&lt;/p&gt;
&lt;p&gt;fe ff 00 61 00 e1 4e 00&lt;/p&gt;
&lt;p&gt;fe ff表示的是UTF-16 大头模式，仅仅用于标记字节顺序，不表示具体的字符。&lt;/p&gt;
&lt;p&gt;二：计算二进制编码&lt;/p&gt;
&lt;p&gt;00000000&lt;/p&gt;
&lt;p&gt;01100001&lt;/p&gt;
&lt;p&gt;00000000&lt;/p&gt;
&lt;p&gt;11100001&lt;/p&gt;
&lt;p&gt;01001110&lt;/p&gt;
&lt;p&gt;00000000&lt;/p&gt;
&lt;p&gt;三：根据UTF-16编码规则将字节分组后：&lt;/p&gt;
&lt;p&gt;UTF-16两个字节表示一个字符，即使是ASCII也是这样。&lt;/p&gt;
&lt;p&gt;00000000 01100001&lt;/p&gt;
&lt;p&gt;00000000 11100001&lt;/p&gt;
&lt;p&gt;01001110 00000000&lt;/p&gt;
&lt;p&gt;因为Unicode定义的标准就是两个字节表示一个字符，而UTF-16具体实现刚好就是用两个字节表示一个字符，因此这里就不需要再进行处理了&lt;/p&gt;
&lt;p&gt;四：计算机从Unicode中查询出字符集为&lt;/p&gt;
&lt;p&gt;a&lt;/p&gt;
&lt;p&gt;á&lt;/p&gt;
&lt;p&gt;一&lt;/p&gt;
&lt;p&gt;Unicode将世界上的文字和二进制一一对应起来，并规定2个字节表示一个字符。&lt;/p&gt;
&lt;p&gt;但是没有规定这个二进制代码应该如何存储，并且在网络上如何传输。&lt;/p&gt;
&lt;p&gt;而UTF-8和UTF-16定义了这些二进制代码应该如何存储，并且在网络上如何传输。不过最后，程序都会按照UTF-8和UTF-16的规则去解析这些二进制，然后转换成Unicode，然后再通过一一对应，查找到该字符。&lt;/p&gt;
&lt;p&gt;无论是UTF-8还是UTF-16编码的字符，最后转换成Unicode字符的二进制都是一样的，因为他们遵循同一个Unicode标准。&lt;/p&gt;


&lt;p&gt;以前开发JSP的时候，默认就是ISO-8859-1编码。&lt;/p&gt;
&lt;p&gt;ASCII只能表示128个字符，而一个字节能够表示256种字符，ASCII编码浪费了一个字节接近一半的空间。&lt;/p&gt;
&lt;p&gt;所以ISO-8859-1扩展了ASCII编码，在ASCII编码之上又增加了西欧语言、希腊语、泰语、阿拉伯语、希伯来语对应的文字符号，它是向下兼容ASCII编码的。&lt;/p&gt;
&lt;p&gt;因为ISO-8859-1编码范围使用了单字节内的所有空间，在支持ISO-8859-1的系统中传输和存储其他任何编码的字节流都不会被抛弃。换言之，把其他任何编码的字节流当作ISO-8859-1编码看待都没有问题。这是个很重要的特性，MySQL数据库默认编码是Latin1就是利用了这个特性。ASCII编码是一个7位的容器，ISO-8859-1编码是一个8位的容器。&lt;/p&gt;

&lt;p&gt;在整理字符研究的时候，发现一个问题&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class Demo {
    public static void main(String[] args) throws Exception {
        String str = &quot;联通&quot;;
        byte[] bytes = str.getBytes(&quot;GB2312&quot;);
        for (byte b : bytes) {
            System.out.println(b);
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;p&gt;-63&lt;br/&gt;-86&lt;br/&gt;-51&lt;br/&gt;-88&lt;/p&gt;
&lt;p&gt;刚开始的时候，不是很理解为什么Java程序会输出负值。想了一下，忽然想起在Java中&lt;/p&gt;
&lt;p&gt;byte范围 -128-127&lt;/p&gt;
&lt;p&gt;而bytes中保存的二进制是&lt;/p&gt;
&lt;p&gt;1100 0001&lt;/p&gt;
&lt;p&gt;1010 1010&lt;/p&gt;
&lt;p&gt;1100 1101&lt;/p&gt;
&lt;p&gt;1010 1000&lt;/p&gt;
&lt;p&gt;最高位的1，Java中的byte无法处理，只能当做符号位，以补码存储。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;参考资料：&lt;br/&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&quot; class=&quot;uri&quot;&gt;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pcedu.pconline.com.cn/empolder/gj/other/0505/616631_all.html#content_page_2&quot; class=&quot;uri&quot;&gt;https://pcedu.pconline.com.cn/empolder/gj/other/0505/616631_all.html#content_page_2&lt;/a&gt;&lt;/p&gt;
&lt;div readability=&quot;7.8628158844765&quot;&gt;作者：&lt;span&gt;一杯热咖啡AAA&lt;/span&gt;&lt;br/&gt;出处：&lt;a href=&quot;https://www.cnblogs.com/AdaiCoffee/&quot;&gt;https://www.cnblogs.com/AdaiCoffee/&lt;/a&gt;&lt;br/&gt;本文以学习、研究和分享为主，欢迎转载。如果文中有不妥或者错误的地方还望指出，以免误人子弟。如果你有更好的想法和意见，可以留言讨论，谢谢！&lt;/div&gt;
</description>
<pubDate>Fri, 04 Oct 2019 14:51:00 +0000</pubDate>
<dc:creator>一杯热咖啡AAA</dc:creator>
<og:description>[TOC] 在阅读本文章之前，我建议你首先看阮一峰的博客： 1 字符 &amp; 编码 字符： 是文字和符号的总称。一个汉字、标点符号、英文字母、数字，这都是字符 字符集： 是多个字符的集合。我们可以理解为一</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/AdaiCoffee/p/11623557.html</dc:identifier>
</item>
<item>
<title>Redis 的主从同步（复制） - LastSun</title>
<link>http://www.cnblogs.com/wdy1184/p/11623543.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wdy1184/p/11623543.html</guid>
<description>&lt;p&gt;Redis 的主从同步（复制）&lt;/p&gt;

&lt;div class=&quot;page-body&quot; readability=&quot;74.826835685243&quot;&gt;

&lt;p id=&quot;d61a7189-6883-4e6e-946b-d639a5c6e736&quot;&gt;假设有两个 redis 实例 ⇒ A 和 B&lt;/p&gt;
&lt;p id=&quot;78834636-3026-4e25-a00b-a32563ec979b&quot;&gt;B 实例的内容与 A 实例的内容保持同步&lt;/p&gt;
&lt;p id=&quot;b8f80fb4-d664-4b9d-ad2a-e202e024b617&quot;&gt;那么称 A 实例是主数据库，B 实例是从数据库&lt;/p&gt;
&lt;p id=&quot;5f7f5d5f-7895-4ee8-9840-a9d4d14cc4dd&quot;&gt;这个过程称为主从同步&lt;/p&gt;

&lt;ol id=&quot;11ef0a3d-b32c-44ae-84cc-2acdf8e940a3&quot; class=&quot;numbered-list&quot; start=&quot;1&quot;&gt;&lt;li&gt;防止发生单点故障&lt;/li&gt;
&lt;/ol&gt;&lt;ol id=&quot;0286ac07-aebd-4a1e-942e-0b629bf5e6f3&quot; class=&quot;numbered-list&quot; start=&quot;2&quot;&gt;&lt;li&gt;扩展内存&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;fb822e6d-7098-4ce9-9f26-83126cfa8a1b&quot;&gt;开启同步&lt;/h2&gt;
&lt;ul id=&quot;eb9b57ab-3bf2-4903-9a0c-f30132c1c579&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;配置文件中加入&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code&quot;&gt;
&lt;code&gt;slaveof 主数据库地址 主数据库端口&lt;/code&gt;
&lt;/pre&gt;
&lt;ul id=&quot;27167dbf-25f8-44c2-a5d4-db7958670ee8&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;在命令行中执行上述命令&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code&quot;&gt;
&lt;code&gt;redis&amp;gt; slaveof 主数据库地址 主数据库端口&lt;/code&gt;
&lt;/pre&gt;
&lt;ul id=&quot;e0a5c1f4-0559-44fe-96a8-2390fba4b397&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;在开启从服务器时执行命令&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code&quot;&gt;
&lt;code&gt;$ reids-server --port 6380 --slaveof 主数据库地址 主数据库端口&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;5a3c0c6a-4670-4ee1-9bfd-9e0799268bbe&quot;&gt;关闭同步，并成为主数据库&lt;/h2&gt;
&lt;pre class=&quot;code&quot;&gt;
&lt;code&gt;redis&amp;gt; slaveof no one&lt;/code&gt;
&lt;/pre&gt;

&lt;p id=&quot;0b3a7c87-73e5-4a91-b2c6-022ee0c4cf00&quot;&gt;复制分为连接建立，数据同步（sync）和命令传播（command propagate）三个阶段&lt;/p&gt;
&lt;p id=&quot;30a820d0-f4f2-4cc9-aa98-0ee0da87331f&quot;&gt;连接建立这里不说，与复制原理无关&lt;/p&gt;
&lt;p id=&quot;bb238c4b-52a2-4fe9-b3c0-e022861e1fa5&quot;&gt;下面主要讲数据同步与命令传播两个阶段&lt;/p&gt;
&lt;p id=&quot;7abd80c4-e16d-48a4-8c3b-71fc8a8e2913&quot;&gt;redis 从 2.8 版本之后优化了复制功能，咱们先从旧版本的复制说起：&lt;/p&gt;
&lt;div id=&quot;fdeeaf5e-8780-4c67-9be2-69271e2aac21&quot; class=&quot;collection-content&quot;&gt;
&lt;h4 class=&quot;collection-title&quot;&gt;旧版复制过程&lt;/h4&gt;
&lt;table class=&quot;collection-content&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;主服务器&lt;/th&gt;
&lt;th&gt;从服务器&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;8.124513618677&quot;&gt;&lt;tr id=&quot;310216a9-79a1-4653-b390-e106a44fa5cb&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/310216a979a14653b390e106a44fa5cb&quot;&gt;同步流程&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;976594c0-0566-421b-9332-0bba35baf716&quot; readability=&quot;1.9473684210526&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/1-976594c00566421b93320bba35baf716&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt;向主服务器发送 SYNC 命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;60ba3bc7-36a0-43e1-b6d0-ec9c4635e381&quot; readability=&quot;1.9649122807018&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/2-60ba3bc736a043e1b6d0ec9c4635e381&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt;收到 SYNC 命令，执行 BGSAVE 生成 RDB 文件&lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;62c4d3b9-c357-4d6d-8bc5-ad24c42cec7e&quot; readability=&quot;1.9574468085106&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/3-62c4d3b9c3574d6d8bc5ad24c42cec7e&quot;&gt;3&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt;使用缓冲区记录从现在的写命令&lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;8e709d31-b838-49e2-84f1-29e240eab37e&quot; readability=&quot;1.9591836734694&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/4-8e709d31b83849e284f129e240eab37e&quot;&gt;4&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt;将生成的 RDB 文件发送给从服务器&lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;07df6d8d-2466-4d83-a4ac-9299f85d8aa9&quot; readability=&quot;3.9459459459459&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/5-07df6d8d24664d83a4ac9299f85d8aa9&quot;&gt;5&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt;将缓冲区内的写命令发给从服务器&lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt;接收并载入 RDB 文件&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;323d973a-4aeb-40c1-9d8f-495c7fb11535&quot; readability=&quot;1.9622641509434&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/6-323d973a4aeb40c19d8f495c7fb11535&quot;&gt;6&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt;接收并执行主服务器发送来的写命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;7656b50a-a2f7-401d-badc-a08c7cd05ec9&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/7656b50aa2f7401dbadca08c7cd05ec9&quot;&gt;命令传播流程&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;b1659497-ba22-4d6f-938f-2f35c4fe1315&quot; readability=&quot;1.9512195121951&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/1-b1659497ba224d6f938f2f35c4fe1315&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt;发送客户端发过来的写命令&lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;45b4aa83-9471-41ed-9242-1e62d196aca9&quot; readability=&quot;1.9574468085106&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/2-45b4aa83947141ed92421e62d196aca9&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt;执行主服务器发送过来的写命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;29f96c43-7727-4274-b9db-1a846318f784&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/29f96c4377274274b9db1a846318f784&quot;&gt;断线重连&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-O^*R&quot;&gt;与同步流程一致&lt;/td&gt;
&lt;td class=&quot;cell-r!\d&quot;&gt;与同步流程一致&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p id=&quot;dc173662-b968-4c51-83e4-4bb1d122a703&quot;&gt;经过上述步骤之后主从服务器的状态可以始终保持一致。&lt;/p&gt;
&lt;p id=&quot;4b4d2011-aa2b-43b7-9d27-0c37b2ebb593&quot;&gt;细心的读者已经发现了旧版复制的一些问题：&lt;/p&gt;
&lt;p id=&quot;1c295eb0-d117-4f09-b45a-53da9db32ea9&quot;&gt;断线重连需要重新走一次同步的流程，而同步流程中的主服务器生成 RDB 文件和从服务器执行 RDB 文件都是特别密集的 IO 操作，这会让断线重连的成本很高&lt;/p&gt;
&lt;p id=&quot;82231198-5f54-409e-b788-8dd83dc48e55&quot;&gt;于是从 2.8 版本之后，redis 使用了新的技术来防止重新执行同步流程&lt;/p&gt;
&lt;div id=&quot;4e00f431-416d-46c3-b7d3-94caff91bf2c&quot; class=&quot;collection-content&quot;&gt;
&lt;h4 class=&quot;collection-title&quot;&gt;新版复制过程&lt;/h4&gt;
&lt;table class=&quot;collection-content&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;主服务器&lt;/th&gt;
&lt;th&gt;从服务器&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;8.8983050847458&quot;&gt;&lt;tr id=&quot;d0db7b17-a1b8-439f-b935-e92f3ed0d101&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/d0db7b17a1b8439fb935e92f3ed0d101&quot;&gt;完整同步流程&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;387e9a3c-0d54-4e9c-8a5b-ebaf40061b58&quot; readability=&quot;1.9487179487179&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/1-387e9a3c0d544e9c8a5bebaf40061b58&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt;向主服务器发送 PSYNC 命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;b4075047-0317-4256-94d7-f6dc19ab060e&quot; readability=&quot;1.9655172413793&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/2-b40750470317425694d7f6dc19ab060e&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt;收到 PSYNC 命令，执行 BGSAVE 生成 RDB 文件&lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;10954b91-ac4b-485b-a9c5-1dced923c1d6&quot; readability=&quot;1.9574468085106&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/3-10954b91ac4b485ba9c51dced923c1d6&quot;&gt;3&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt;使用缓冲区记录从现在的写命令&lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;f2586338-be52-44c7-9c1f-6a6ef41f778b&quot; readability=&quot;1.9622641509434&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/4-f2586338be5244c79c1f6a6ef41f778b&quot;&gt;4&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt;接收并执行主服务器发送来的写命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;dd7528f7-9cde-4bde-a8a4-ca10dd68b6a9&quot; readability=&quot;3.9459459459459&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/5-dd7528f79cde4bdea8a4ca10dd68b6a9&quot;&gt;5&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt;将缓冲区内的写命令发给从服务器&lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt;接收并载入 RDB 文件&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;145ee2df-fc78-436d-9344-75e3757cdafc&quot; readability=&quot;1.9591836734694&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/6-145ee2dffc78436d934475e3757cdafc&quot;&gt;6&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt;将生成的 RDB 文件发送给从服务器&lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;38a8ac82-65bb-47d2-8e88-a43c258fbb28&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/38a8ac8265bb47d28e88a43c258fbb28&quot;&gt;命令传播流程&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;23ea8c2c-991c-449e-a631-145e6c3a5b09&quot; readability=&quot;1.9512195121951&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/1-23ea8c2c991c449ea631145e6c3a5b09&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt;发送客户端发过来的写命令&lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;6bc43355-6b45-4dce-a0e0-734623dcbd9a&quot; readability=&quot;1.9574468085106&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/2-6bc433556b454dcea0e0734623dcbd9a&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt;执行主服务器发送过来的写命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;11105f2b-2c2a-4779-952f-d81535e53444&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/11105f2b2c2a4779952fd81535e53444&quot;&gt;断线重连过程&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;fa5adcde-3125-4338-bd77-bb6f4ffe419f&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/1-fa5adcde31254338bd77bb6f4ffe419f&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt;发送 PSYNC 命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;1a149181-2d8d-4410-b0ed-bdf57fbdb358&quot; readability=&quot;1.9622641509434&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/2-1a1491812d8d4410b0edbdf57fbdb358&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt;向从服务器发送断线过程中的写命令&lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;add12e4d-6e42-404f-ba6d-929a397c0bef&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/3-add12e4d6e42404fba6d929a397c0bef&quot;&gt;3&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-na13&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-)6cM&quot;&gt;执行写命令&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p id=&quot;ec5c47ff-1c74-4e2b-baa4-1c6b28583e0b&quot;&gt;新版复制经过上述步骤，也可以实现主从数据库状态的一致。&lt;/p&gt;
&lt;p id=&quot;b9897831-c6d7-47fe-bba3-e32960391f68&quot;&gt;在断线重连过程中，只需要重新执行断线过程中未同步的命令即可，这样就比旧版的复制节省了很多 IO 操作&lt;/p&gt;
&lt;p id=&quot;b6352b06-dac3-42cd-b2e3-c52b6e0c1cf1&quot;&gt;那么这个断线重连的是怎么实现的呢？&lt;/p&gt;
&lt;h2 id=&quot;e07117b1-9833-4bac-9bde-a976b38d04b5&quot;&gt;部分重同步（断线重连）的实现&lt;/h2&gt;
&lt;p id=&quot;689678bd-db45-4625-9067-9c86536b03cd&quot;&gt;redis 的部分重同步借助了4个变量：&lt;/p&gt;
&lt;ol id=&quot;71b29d84-dbbf-4e63-8a41-042c3e4a2bde&quot; class=&quot;numbered-list&quot; start=&quot;1&quot;&gt;&lt;li&gt;服务器的运行 ID （run ID）
&lt;ul id=&quot;55a61d7b-25cc-4439-876b-a672172e2cfd&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;当实例重启时，会生成40个随机的十六进制字符&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ol id=&quot;1559b6fb-f95f-47f7-b451-c3cf9a5ae4fa&quot; class=&quot;numbered-list&quot; start=&quot;2&quot;&gt;&lt;li&gt;主服务器的复制积压缓冲区（replication backlog）
&lt;ul id=&quot;8023f94f-2987-4bbc-8d05-2fd49434e82e&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;主服务器每将一个命令传送给从数据库，都会将命令放到一个积压队列（固定长度的循环队列）中&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ol id=&quot;fdecb627-c0f0-45b3-b4a0-6e9e655a2601&quot; class=&quot;numbered-list&quot; start=&quot;3&quot;&gt;&lt;li&gt;主服务器的复制偏移量（replication offset）
&lt;ul id=&quot;f33cfd88-6da8-447c-973d-df910bb3acb8&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;主服务器将命令放到积压队列中时，会记录下当前命令的偏移量，并发送给从服务器&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ol id=&quot;e33d491d-def3-4399-93bd-33acdcc2852b&quot; class=&quot;numbered-list&quot; start=&quot;4&quot;&gt;&lt;li&gt;从服务器的复制偏移量
&lt;ul id=&quot;370f99aa-d978-42c6-a2c2-3b55d499a3b0&quot; class=&quot;bulleted-list&quot;&gt;&lt;li&gt;从服务器接收到主服务器发送过来的命令与偏移量&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p id=&quot;19d07493-698c-46e3-b374-59e121f1ec56&quot;&gt; &lt;/p&gt;
&lt;p id=&quot;2f875650-12cf-4aec-8bcf-e2476eea7735&quot;&gt;也许将这4个变量列出来之后，有读者就可以直接想象出来是怎么实现的了，对，没错，就是这么实现的&lt;/p&gt;
&lt;h3 id=&quot;1b21b517-1b0f-4ead-b8e5-63fbef3e6cb4&quot;&gt;过程：&lt;/h3&gt;
&lt;div id=&quot;6e5ab180-376f-49e9-a987-117324598791&quot; class=&quot;collection-content&quot;&gt;
&lt;h4 class=&quot;collection-title&quot;&gt;部分重同步流程&lt;/h4&gt;
&lt;table class=&quot;collection-content&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;主服务器&lt;/th&gt;
&lt;th&gt;从服务器&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;3.4672897196262&quot;&gt;&lt;tr id=&quot;3a6c3581-dc79-4cd0-88df-39d8f229acd8&quot; readability=&quot;1.9753086419753&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/1-3a6c3581dc794cd088df39d8f229acd8&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-(kt;&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-t&amp;amp;eG&quot;&gt;发送命令 PSYNC 主数据库的运行ID 断开前最新的命令偏移量&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;dfc4a1cf-a706-419d-85f9-04f26c62f96f&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-(kt;&quot;&gt;判断 1. 运行ID是否能够对应 2. 断开前最新的命令偏移量是否在队列中 满足上述条件可以执行部分重同步，否则执行完全同步&lt;/td&gt;
&lt;td class=&quot;cell-t&amp;amp;eG&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;46933d96-03f6-4be3-987c-2f631d1d33a7&quot; readability=&quot;1.96&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/2-46933d9603f64be3987c2f631d1d33a7&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-(kt;&quot;&gt;发送给从数据库偏移量之后的命令&lt;/td&gt;
&lt;td class=&quot;cell-t&amp;amp;eG&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;f2fac37c-ed8b-4563-808a-dd739b9f8bc6&quot;&gt;&lt;td class=&quot;cell-title&quot;&gt;&lt;a href=&quot;https://www.notion.so/3-f2fac37ced8b4563808add739b9f8bc6&quot;&gt;3&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;cell-(kt;&quot;&gt; &lt;/td&gt;
&lt;td class=&quot;cell-t&amp;amp;eG&quot;&gt;执行命令&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p id=&quot;1cfba1b7-1ab5-4aed-849f-9f54a01325cc&quot;&gt;redis 在很多细节上优化了性能，主从同步（复制）的优化只是其中的一方面。&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 04 Oct 2019 14:35:00 +0000</pubDate>
<dc:creator>LastSun</dc:creator>
<og:description>Redis 的主从同步（复制） Redis 的主从同步（复制） 什么是主从同步（复制） 假设有两个 redis 实例 ⇒ A 和 B B 实例的内容与 A 实例的内容保持同步 那么称 A 实例是主数据</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/wdy1184/p/11623543.html</dc:identifier>
</item>
<item>
<title>WebGL简易教程(五)：图形变换(模型、视图、投影变换) - charlee44</title>
<link>http://www.cnblogs.com/charlee44/p/11623502.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/charlee44/p/11623502.html</guid>
<description>&lt;p&gt;通过之前的教程，对WebGL中可编程渲染管线的流程有了一定的认识。但是只有前面的知识还不足以绘制真正的三维场景，可以发现之前我们绘制的点、三角形的坐标都是[-1,1]之间，Z值的坐标都是采用的默认0值，而一般的三维场景都是很复杂的三维坐标。为了在二维视图中绘制复杂的三维场景，需要进行相应的的图形变换；这一篇教程，就是详细讲解WebGL的图形变换的过程，这个过程同样也适合OpenGL/OpenGL ES，甚至其他3D图形接口。&lt;/p&gt;
&lt;p&gt;可以用照相机拍摄照片来模拟这个图形变换的过程，如果要对某个物体拍摄照片，大致过程如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;准备物体，把物体放置在某个合适的位置；这个过程就是模型变换（model transform）。&lt;/li&gt;
&lt;li&gt;准备照相机，把照相机移动到准备拍摄的位置；这个过程就是视图变换（view transform）。&lt;/li&gt;
&lt;li&gt;设置相机的焦距，或者调整缩放比例；这个过程就是投影变换（projection transform）。&lt;/li&gt;
&lt;li&gt;对结果图形进行拉伸或者挤压，确定最终照片的大小；这个过程就是视口变换(viewport transform)。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;而在WebGL/OpenGL中，具体的图形变换流程如下所示&lt;sup&gt;[3]&lt;/sup&gt;：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221023636-994154531.jpg&quot; alt=&quot;1&quot;/&gt;&lt;br/&gt;其中模型变换、视图变换、投影变换是我们自己在着色器里定义和实现的，而视口变换一般是WebGL/OpenGL自动完成的。这就好像我们拍照的时候，需要自己去调整位置，相机镜头焦距，而成像的过程就交给相机。所以模型变换、视图变换、投影变换这三者特别重要，另外附一张WebGL/OpenGL矩阵变换的流程图&lt;sup&gt;[4]&lt;/sup&gt;：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221040903-1972012022.jpg&quot; alt=&quot;2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上两图中可以发现，场景中的物体总是从一个坐标系空间转换到另外一个坐标系空间。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;局部坐标系（Local Space）指的是物体最初开始的坐标系；而世界坐标系（World Space）指的是物体与WebGL/OpenGL相机建立联系时的坐标系。这里的局部坐标系与世界坐标系跟通常意义的不同，只有与WebGL/OpenGL相机建立了联系，才是这里规定的世界坐标系。为了建立联系，经过的就是模型变换。&lt;/li&gt;
&lt;li&gt;进入世界坐标系空间之后，物体与WebGL/OpenGL相机虽然建立了联系，但是并没有进一步确定观察物体的状态。这个时候就需要调整相机位置姿态，也就是视图变换，转换成视图坐标系（View Space），也可以简称为人眼坐标系（Eye Space），或者照相机坐标系（Camera Space）。&lt;/li&gt;
&lt;li&gt;在人眼坐标系空间中，虽然物体就在眼前了，但是还需要进一步去确定可视空间。就像人眼是把水平视角大约200度左右的场景投影到视网膜中，人才能看清物体的那样，WebGL/OpenGL需要经过投影变换，才能正确的显示场景。这个过程通常还顺带进行了场景的裁剪，将可视空间范围外的东西去掉，所以投影变换后的坐标系就是裁剪坐标系（Clip Space）。&lt;/li&gt;
&lt;li&gt;最后一步就是通过视口变换，从裁剪坐标系转换成屏幕坐标系，得到渲染结果。这一步由WebGL/OpenGL自动完成。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;在参考文献[2]中描述的WebGL/OpenGL整个图形变换过程的坐标系和单位：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221100224-116415633.png&quot; alt=&quot;3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其流程与前文论述的基本一致，可以看到投影变换之后的过程不是那么简单，还需要将得到的齐次裁剪坐标做透视除法（除以w），做剪切和视口/深度范围变换，光栅化等。&lt;/p&gt;
&lt;p&gt;其中，用户/着色器变换（也就是教程要具体详述的模型变换、视图变换和投影变换）包含坐标系和单位如下所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221120395-522462971.png&quot; alt=&quot;4&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在一个三维软件中浏览一个三维物体时候，总是会提供给用户平移、缩放和旋转的交互操作，而这正是模型变换的内容。在图形学的范畴当中，平移变换、旋转变换属于刚体变换，缩放和旋转属于线性变换，刚体变换和线性变换又属于仿射变换，而仿射变换也可以看成投影变换的一种&lt;sup&gt;[5]&lt;/sup&gt;。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221139025-1323577690.png&quot; alt=&quot;5&quot;/&gt;&lt;/p&gt;
&lt;p&gt;也就是说这些图形变换，本质上可以看成是同一种变换；在数学上，可以使用矩阵来描述这种变换。并且，为了兼容各种变换的特殊性，会在3维的基础上再加一维，使用4维的向量和矩阵。4维向量表述一个点（x,y,z,w）等价于三维向量（x/w,y/w,z/w），这就是前面提到的齐次坐标。&lt;/p&gt;
&lt;p&gt;具体来说，对于空间某个点v0(x0,y0,z0,1),经过空间图像变换后得到新的点v1(x1,y1,z1,1),那么存在这样一个4行4列的矩阵M：&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ M= \left[ \begin{matrix} a &amp;amp; b &amp;amp; c &amp;amp; d \\ e &amp;amp; f &amp;amp; g &amp;amp; h\\ i &amp;amp; j &amp;amp; k &amp;amp; l\\ m &amp;amp; n &amp;amp; o &amp;amp; p\\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;满足：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ M*V0=V1 \]&lt;/span&gt;&lt;br/&gt;展开这个式子，有式(1)：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \left[ \begin{matrix} a &amp;amp; b &amp;amp; c &amp;amp; d \\ e &amp;amp; f &amp;amp; g &amp;amp; h\\ i &amp;amp; j &amp;amp; k &amp;amp; l\\ m &amp;amp; n &amp;amp; o &amp;amp; p\\ \end{matrix} \right] * \left[ \begin{matrix} x0\\y0\\z0\\1\\ \end{matrix} \right] = \left[ \begin{matrix} x1\\y1\\z1\\1\\ \end{matrix} \right] \tag{1} \]&lt;/span&gt;&lt;br/&gt;根据矩阵乘法，有方程组式(2):&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} a*x0 +b*y0 +c*z0 + d =x1\\ e*x0 +f*y0 +g*z0 +h =y1\\ i*x0 +j*y0 +k*z0 + l =z1\\ m*x0 +n*y0 +o*z0 + p =1 \end{cases} \tag{2} \]&lt;/span&gt;&lt;br/&gt;通过以上式子，就可以求得各种不同图形变换矩阵。
&lt;h2 id=&quot;模型变换&quot;&gt;1) 模型变换&lt;/h2&gt;
&lt;p&gt;模型变换包括平移变换、缩放变换和旋转变换。从内容上来讲，这几种变换正好应对的三维交互操作的平移、变换和缩放。通过鼠标操作调整模型变换矩阵就可以实现一种简单三维交互操作。&lt;/p&gt;
&lt;h3 id=&quot;平移变换&quot;&gt;(1) 平移变换&lt;/h3&gt;
&lt;p&gt;对于一个点(x,y,z,1)，平移之后，得到的点就是（x+Tx,y+Ty,z+Tz,1），其中Tx、Ty、Tz分别表示点在X轴、Y轴、Z轴方向上移动的距离。那么将其代入方程组式(2)的两边，有：&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} a*x +b*y +c*z + d =x+Tx\\ e*x +f*y +g*z +h =y+Ty\\ i*x +j*y +k*z + l =z+Tz\\ m*x +n*y +o*z + p =1 \end{cases} \]&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;那么根据多项式相等的原理，可以求得每个多项式系数，继而可得平移矩阵T：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ T= \left[ \begin{matrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; Tx \\ 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; Ty\\ 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; Tz\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] \]&lt;/span&gt;
&lt;h3 id=&quot;缩放变换&quot;&gt;(2) 缩放变换&lt;/h3&gt;
&lt;p&gt;对于一个点(x,y,z,1)，以原点为中心缩放，在X方向缩放Sx倍，在Y方向缩放Sy倍，在Z方向缩放Sz倍，那么新的坐标值为（x*Sx,y*Sy,z*Sz,1）。将其代入方程组式(2)的两边，有：&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} a*x +b*y +c*z + d =x*Sx\\ e*x +f*y +g*z +h =y*Sy\\ i*x +j*y +k*z + l =z*Sz\\ m*x +n*y +o*z + p =1 \end{cases} \]&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;同样根据多项式相等的原理，求得缩放矩阵S：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ S= \left[ \begin{matrix} Sx &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; Sy &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; Sz &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] \]&lt;/span&gt;
&lt;h3 id=&quot;旋转变换&quot;&gt;(3) 旋转变换&lt;/h3&gt;
&lt;p&gt;旋转变换就稍微复杂一点，对旋转变换而言，必须知道旋转轴、旋转方向和旋转角度。可以绕X轴，Y轴和Z轴旋转，所以一般都会有三个旋转矩阵。以绕Z轴旋转为例，在Z轴正半轴沿着Z轴负方向进行观察，如果看到的物体是逆时针旋转的，那么就是正旋转，旋转方向就是正的，旋转值就是正数；反之如果旋转值为负数，说明旋转方向就是负的，沿着顺时针旋转。用更加通用的说法来说，正旋转就是右手法则旋转：右手握拳，大拇指伸直并使其指向旋转轴的正方向，那么右手其余几个手指就指明了旋转的方向。&lt;/p&gt;
&lt;p&gt;对于一个点p(x,y,z,1),绕Z轴旋转，因为旋转后的Z值不变，所以可以忽略Z值的变换，只考虑XY空间的变化。此时设r为原点到点p的距离，α是X轴旋转到该点的角度。如图所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221203875-186783337.png&quot; alt=&quot;6&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那么p点的坐标表示为式(3)：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} x=r*cosα\\ y=r*sinα\\ \end{cases} \tag{3} \]&lt;/span&gt;&lt;br/&gt;同样的绕Z轴旋转后，得到新的点p’，X轴旋转到该点的角度为(α+β),其坐标值为：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} x'=r*cos⁡(α+β)\\ y'=r*sin⁡(α+β)\\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;根据三角函数两脚和公式，可得式(4):&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} x'=r*(cos⁡α*cosβ-sinα*sinβ)\\ y'=r*(sin⁡α*cosβ+cosα*sinβ)\\ \end{cases} \tag{4} \]&lt;/span&gt;&lt;br/&gt;将式(3)代入到式(4),可得式(5)：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} x'=x*cosβ-y*sinβ\\ y'=x*sinβ+y*cosβ\\ z'=z \end{cases} \tag{5} \]&lt;/span&gt;&lt;br/&gt;将式(5)代入到方程组式(2)的两边，有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[\begin{cases} a*x +b*y +c*z + d =x*cosβ - y*sinβ\\ e*x +f*y +g*z +h = x*sinβ + y*cosβ\\ i*x +j*y +k*z + l = z\\ m*x +n*y +o*z + p =1\\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;同样根据多项式相等的原理，求得绕Z轴旋转β角度时的旋转矩阵Rz：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ Rz= \left[ \begin{matrix} cosβ &amp;amp; -sinβ &amp;amp; 0 &amp;amp; 0 \\ sinβ &amp;amp; cosβ &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 1&amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;用同样的方式可以推导，绕X轴旋转β角度时的旋转矩阵Rx：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ Rx= \left[ \begin{matrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; cosβ &amp;amp; -sinβ &amp;amp; 0\\ 0 &amp;amp; sinβ &amp;amp; cosβ &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;绕Y轴旋转β角度时的旋转矩阵Ry：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ Ry= \left[ \begin{matrix} cosβ &amp;amp; 0 &amp;amp; sinβ &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\ -sinβ &amp;amp; 0 &amp;amp; cosβ &amp;amp; 0\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] \]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;组合变换&quot;&gt;(4) 组合变换&lt;/h3&gt;
&lt;p&gt;使用矩阵来描述图形变换的好处之一就是能够将以上所有的变换组合起来，例如如下式(6)：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ v1=S*(R*(T*v0)) \tag{6} \]&lt;/span&gt;&lt;br/&gt;表达的图形变换是对于点v0，首先经过平移变换，再经过旋转变换，最后再进行缩放，得到新的点v1。&lt;br/&gt;根据矩阵乘法的结合律，式(6)可以写成：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ v1=(S*R*T)*v0 \]&lt;/span&gt;&lt;br/&gt;那么模型矩阵M就可以表示为：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ M=S*R*T \]&lt;/span&gt;&lt;br/&gt;注意上述模型矩阵的SRT顺序并不是固定的，需要根据实际的情况采取合适的矩阵，否则会达不到想要的效果。一个重要的原则就是记住缩放变换总是基于原点的，旋转变换总是基于旋转轴的，在进行缩放变换和旋转变换之前往往需要先平移变换至原点位置(不是绝对)。&lt;/p&gt;
&lt;h2 id=&quot;视图变换&quot;&gt;2) 视图变换&lt;/h2&gt;
&lt;h3 id=&quot;原理&quot;&gt;(1) 原理&lt;/h3&gt;
&lt;p&gt;视图变换其实就是模型变换的逆变换。试想一下，拿一个物体给相机拍摄，其实也就是拿相机去拍摄一个物体，视图变换和模型变换的结果并没有显著的区别，有些情况下两者甚至可以合并成一个模型-视图变换（model-view transform）。两者之所以需要分开进行完全是由实际的交互操作决定的：旋转、缩放到合适的位置其实是很难设置的，很多交互操作需要在视空间/摄像机空间中设置才比较合适，这个时候就需要视图变换了。&lt;/p&gt;
&lt;p&gt;视图变换其实就是构建一个视空间/摄像机空间，需要三个条件量：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;视点eye：也就是观察者/摄像机的位置；&lt;/li&gt;
&lt;li&gt;观察目标点at：被观察者目标所在的点，确定了视线方向；&lt;/li&gt;
&lt;li&gt;上方向up：最终绘制在屏幕上的影像中的向上的方向，通俗来讲，就是用来控制是正着拍、横着拍还是斜着拍。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;通过上述三个条件量，就可以构建一个视图矩阵。这个矩阵一般可以通过图形矩阵库的LookAt()函数进行设置，例如在WebGL的cuon-matrix.js中，其设置函数为：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221233854-1823999061.png&quot; alt=&quot;7&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;推导&quot;&gt;(2) 推导&lt;/h3&gt;
&lt;p&gt;由前文得知，视图变换构建了一个视空间/摄像机空间坐标系，为了对应于世界坐标系的XYZ，可以将其命名为UVN坐标系，它由之前提到的三个条件量构建而成：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;选取视线的方向为N轴：N = eye–at；并归一化N。&lt;/li&gt;
&lt;li&gt;选取up和N的叉积为U轴： U= up×N，并归一化U。&lt;/li&gt;
&lt;li&gt;选取N和U叉积得到V轴：V = N×U，并归一化V。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;如图所示&lt;sup&gt;[7]&lt;/sup&gt;：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221313012-1500402877.png&quot; alt=&quot;8&quot;/&gt;&lt;br/&gt;由于视图变换是模型变换的逆变换，以上视图变换的效果，等价于进行一个旋转变换，再进行一个平移变换。故有视图矩阵V：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ V=M^{-1}=(TR)^{-1}=R^{-1}T^{-1} \]&lt;/span&gt;&lt;br/&gt;根据之前平移矩阵的定义，那么有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ T^{-1}= \left[ \begin{matrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; -Tx \\ 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; -Ty\\ 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; -Tz\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;这里的(Tx,Ty,Tz)就是视点eye(eyeX, eyeY, eyeZ)。经过平移变换之后，相机的原点就和世界原点重合，剩下的操作就是通过旋转矩阵R，将世界坐标系XYZ的点转换到成UVN坐标系上的点。令：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ X=(1,0,0),Y=(0,1,0),Z=(0,0,1)\\ U=(Ux,Uy,Uz),V=(Vx,Vy,Vz),N=(Nx,Ny,Nz) \]&lt;/span&gt;&lt;br/&gt;则有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \left[ \begin{matrix} U &amp;amp; V &amp;amp; N \\ \end{matrix} \right] = \left[ \begin{matrix} X &amp;amp; Y &amp;amp; Z \\ \end{matrix} \right] * R = \left[ \begin{matrix} X &amp;amp; Y &amp;amp; Z \\ \end{matrix} \right] * \left[ \begin{matrix} Ux &amp;amp; Vx &amp;amp; Nx \\ Uy &amp;amp; Vy &amp;amp; Ny \\ Uz &amp;amp; Vz &amp;amp; Nz \\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;又由旋转矩阵R为正交矩阵，所以有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ R^{-1} = \left[ \begin{matrix} Ux &amp;amp; Uy &amp;amp; Uz \\ Vx &amp;amp; Vy &amp;amp; Vz \\ Nx &amp;amp; Ny &amp;amp; Nz \\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;最后即可得视图矩阵：&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ V=R^{-1} T^{-1}= \left[ \begin{matrix} Ux &amp;amp; Uy &amp;amp; Uz &amp;amp; 0 \\ Vx &amp;amp; Vy &amp;amp; Vz &amp;amp; 0 \\ Nx &amp;amp; Ny &amp;amp; Nz &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \\ \end{matrix} \right] * \left[ \begin{matrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; -Tx \\ 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; -Ty\\ 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; -Tz\\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\ \end{matrix} \right] = \left[ \begin{matrix} Ux &amp;amp; Uy &amp;amp; Uz &amp;amp; -U·T \\ Vx &amp;amp; Vy &amp;amp; Vz &amp;amp; -V·T \\ Nx &amp;amp; Ny &amp;amp; Nz &amp;amp; -N·T \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2 id=&quot;投影变换&quot;&gt;3) 投影变换&lt;/h2&gt;
&lt;p&gt;投影变换定义的是一个可视空间，决定了哪些物体显示，哪些物体不显示，以及物体如何显示。常用的可视空间有两种：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;四棱椎/金字塔可视空间，由透视投影产生；&lt;/li&gt;
&lt;li&gt;长方体可视空间，由正射投影产生。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;透视投影&quot;&gt;(1) 透视投影&lt;/h3&gt;
&lt;h4 id=&quot;a-原理&quot;&gt;a) 原理&lt;/h4&gt;
&lt;p&gt;投影投影模拟的就是人眼成像或者摄像机成像的过程，试想一下，摄像机拍摄的总是取景器方位内的物体，并且呈现近大远小的效果。在WebGL/OpenGL中，透视投影就决定了一个视点、视线、近裁剪面、远裁剪面组成的四棱椎可视空间。如图所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221335181-2047570556.png&quot; alt=&quot;9&quot;/&gt;&lt;br/&gt;在实际使用中，图形矩阵库(我这里用的WebGL的cuon-matrix.js)一般都会提供类似setPerspective()的函数，具体定义如下：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221354939-1588850381.png&quot; alt=&quot;10&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;b-推导&quot;&gt;b) 推导&lt;/h4&gt;
&lt;p&gt;如图所示，已知视空间坐标系XYZ，坐标系原点（视点）为O，视椎体近截面与视点距离为n，远平面与视点的距离为f。已知视椎体空间中有一点为P(x0,y0,z0),那么要求的就是射线OP与近截面的投影点P1(x1,y1,z1)。如图所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221419195-759218205.jpg&quot; alt=&quot;13&quot;/&gt;&lt;br/&gt;近截面与平面XOY平行，那么z1 = -near，那么问题可以简化为：已知空间上点P的坐标，存在点P与坐标O连线上一点P1，P1的Z值已知，求P1坐标。如图所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221438700-548607635.jpg&quot; alt=&quot;14&quot;/&gt;&lt;br/&gt;显然这是一个三角形相似的问题,P1点在视空间坐标系的XY坐标为：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} x1'=-n/z0*x0\\ y1'=-n/z0*y0\\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;根据前文论述，投影变换得到的4维度齐次坐标(x1,y1,z1,w1),会除以w1使得x1和y1的值归一化到-1到1之间。那么可设l和r分别为近截面左、右边框的x坐标，那么就是l映射到-1，r映射到1。这是一个线性变换问题:存在两组点（l，-1）（r，1）满足方程y=kx+b。&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} kl+b=-1\\ kr+b=1\\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;解方程组：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} k=\frac{2}{r-l}\\ b=-\frac{r+l}{r-l}\\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;那么P1归一化后的x坐标xn为：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ xn=\frac{2}{r-l}*x1'-\frac{r+l}{r-l}=-\frac{1}{z0}*(\frac{2n}{r-l}*x0+\frac{r+l}{r-l}*z0) \]&lt;/span&gt;&lt;br/&gt;同理可得，P1归一化之后y 坐标yn为：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ yn=-\frac{1}{z0}*(\frac{2n}{t-b}*y0+\frac{t+b}{t-b}*z0) \]&lt;/span&gt;&lt;br/&gt;可以发现，归一化的坐标xn、yn都存在一个乘数因子（-1/z0），那么可以令投影变换后的w1=-z0，这样就可以满足归一化之后的wn=1，并且满足上面xn、yn的表达式。即有裁剪坐标系的点P1(x1,y1,z1,w1)：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} x1= \frac{2n}{r-l}*x0+\frac{r+l}{r-l}*z0 \\ y1= \frac{2n}{t-b}*y0+\frac{t+b}{t-b}*z0 \\ w1= -z0 \\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;代入到式(2)中，得：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \left[ \begin{matrix} \frac{2n}{r-l} &amp;amp; 0 &amp;amp; \frac{r+l}{r-l} &amp;amp; 0 \\ 0 &amp;amp; \frac{2n}{t-b} &amp;amp; \frac{t+b}{t-b} &amp;amp; 0 \\ I &amp;amp; J &amp;amp; K &amp;amp; L \\ 0 &amp;amp; 0 &amp;amp; -1 &amp;amp; 0 \\ \end{matrix} \right] * \left[ \begin{matrix} x0 \\ y0 \\ z0 \\ 1 \\ \end{matrix} \right] = \left[ \begin{matrix} x1 \\ y1 \\ z1 \\ w1 \\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;继续求上式的投影矩阵的第三行。投影转换后得到的z1是一个深度值，它是一个与x0，y0无关的值，所以I=0，J=0。并且在归一化之后，z1会成为一个-1到1之间的值：当z0=-n时（近截面），z1=-1；当 z0=-f时（远截面），z1=1。代入上式，有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} (K*(-n)+L)/n=-1 \\ (K*(-f)+L)/f=1 \\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;得到：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} K=(f+n)/(n-f) \\ L=2fn/(n-f) \\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;综合，可得透视投影矩阵P：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ P= \left[ \begin{matrix} \frac{2n}{r-l} &amp;amp; 0 &amp;amp; \frac{r+l}{r-l} &amp;amp; 0 \\ 0 &amp;amp; \frac{2n}{t-b} &amp;amp; \frac{t+b}{t-b} &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; \frac{f+n}{n-f} &amp;amp; \frac{2fn}{n-f} \\ 0 &amp;amp; 0 &amp;amp; -1 &amp;amp; 0 \\ \end{matrix} \right] \]&lt;/span&gt;&lt;br/&gt;注意，通过类似setPerspective()的函数定义的矩阵是对称的视锥体，视点在近截面的投影点为近截面的中心，因而有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} r=-l \\ t=-b \\ t-b=height \\ width= height*aspect \\ tan⁡(\frac{fovy}{2})=\frac{height/2}{n} \end{cases} \]&lt;/span&gt;&lt;br/&gt;代入透视投影矩阵P，得到对称透视投影矩阵P：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ P= \left[ \begin{matrix} \frac{1}{aspect*tan⁡(\frac{fovy}{2})} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; \frac{1}{tan⁡(\frac{fovy}{2})} &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; \frac{f+n}{n-f} &amp;amp; \frac{2fn}{n-f} \\ 0 &amp;amp; 0 &amp;amp; -1 &amp;amp; 0 \\ \end{matrix} \right] \]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;正射投影&quot;&gt;(2) 正射投影&lt;/h3&gt;
&lt;h4 id=&quot;a-原理-1&quot;&gt;a) 原理&lt;/h4&gt;
&lt;p&gt;正射投影一个很常见的应用就是地图。无论是纸质地图还是谷歌地图，甚至于室内设计的户型图、工程设计的工程图，无一例外全部都是正射投影。正射投影能够很方便的比较场景中物体的大小，并且每个地方的所代表的大小都是一样的（分辨率一致）。当然，在这种投影下是没有深度感的，就像你在卫星地图上是看不出一座山有多高的。&lt;/p&gt;
&lt;p&gt;正射投影同样也是近裁剪面和远裁剪面组成的可视空间，只不过这个可视空间是个长方体，如图所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221504129-1237908125.png&quot; alt=&quot;11&quot;/&gt;&lt;br/&gt;同样的，可以使用类似setOrtho()函数来设置正射投影：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1000410/201910/1000410-20191004221518749-1003773470.png&quot; alt=&quot;12&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;b-推导-1&quot;&gt;b) 推导&lt;/h4&gt;
&lt;p&gt;在正射投影的盒状可视空间中，XYZ三个方向上都是等比例的。设盒状可视空间中某一物体点P(x0,y0,z0)，那么P点在近截面的投影点为P1(x0,y0,z0’),仅仅只是Z值不同。&lt;/p&gt;
&lt;p&gt;同透视变换的推导一样，将P1的X、Y坐标(x0,y0)映射到-1到1的范围(xn,yn)。即有两组点(l,-1)和(r,1)满足式子(线性关系y=kx+b):&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ Xn=Kx*x0+Bx \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有两组点(b,−1)和(t,1)满足式子(线性关系y=kx+b)：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ Yn=Ky*y0+By \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;分别代入解方程组，可得：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} xn=2/(r-l)*x0-(r+l)/(r-l) \\ yn=2/(t-b)*y0-(t+b)/(t-b) \\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;同样的，在Z方向上，将z0映射成-1到1直接的值：当点在近截面时，映射成-1；当点在远截面时，映射成1。故也有两组点(-n,-1)和(-f,1)满足线性关系y=kx+b，同理可求得：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ zn=(-2)/(f-n)*z0-(f+n)/(f-n) \]&lt;/span&gt;&lt;br/&gt;对于正射变换而言，w变量是不必要的，可直接令w=1。那么裁剪坐标P1(x1,y1,z1,w1)就是经过透视除法的标准化设备坐标(xn,yn,zn,1)。故有：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{cases} x1=2/(r-l)*x0-(r+l)/(r-l) \\ y1=2/(t-b)*y0-(t+b)/(t-b) \\ z1=(-2)/(f-n)*z0-(f+n)/(f-n) \\ w1=1 \\ \end{cases} \]&lt;/span&gt;&lt;br/&gt;代入到式(2)的两边，可得正射投影矩阵：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ O = \left[ \begin{matrix} \frac{2}{r-l} &amp;amp; 0 &amp;amp; 0 &amp;amp; -\frac{r+l}{r-l} \\ 0 &amp;amp; \frac{2}{t-b} &amp;amp; 0 &amp;amp; -\frac{t+b}{t-b} \\ 0 &amp;amp; 0 &amp;amp; -\frac{2}{f-n} &amp;amp; -\frac{f+n}{f-n} \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \\ \end{matrix} \right] \]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;综上所述，模型矩阵M，视图矩阵V，投影矩阵P，同时作用于物体的顶点，使得最终的物体能后被看见或者进行UI操作。根据之前教程内容，逐顶点的操作可以将其放入到顶点着色器。一般而言，先进行模型变换，再进行视图变换，最后进行投影变换：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ v1=P*V*M*v0 \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据矩阵乘法的结合律：&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ v1=(P*V*M)*v0 \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这个P*V*M矩阵合并得到的模型视图投影矩阵（model view projection matrix），简称为MVP矩阵。在实际使用过程中，只需要将这个MVP矩阵传入到顶点着色器，就能根据设置的矩阵得到想要的渲染效果：&lt;/p&gt;
&lt;pre class=&quot;c&quot;&gt;
&lt;code&gt;gl_Position = u_MvpMatrix * a_Position;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这一篇教程是纯理论知识，相对来说不太容易理解。如果是初次接触，至少应该先做大致的了解，后续会大量用到这里的知识。&lt;/p&gt;

&lt;p&gt;[1]《WebGL编程指南》&lt;br/&gt;[2]《OpenGL编程指南》第八版&lt;br/&gt;[3] &lt;a href=&quot;https://blog.csdn.net/wangdingqiaoit/article/details/51589825&quot;&gt;OpenGL学习脚印: 投影矩阵和视口变换矩阵(math-projection and viewport matrix)&lt;/a&gt;&lt;br/&gt;[4] &lt;a href=&quot;https://cloud.tencent.com/developer/article/1389550&quot;&gt;OpenGL矩阵变换的数学推导&lt;/a&gt;&lt;br/&gt;[5] &lt;a href=&quot;https://blog.csdn.net/andylei777/article/details/78333817&quot;&gt;基本图像变换：线性变换,仿射变换，投影变换&lt;/a&gt;&lt;br/&gt;[6] &lt;a href=&quot;https://www.cnblogs.com/zhoug2020/p/7842808.html&quot;&gt;旋转变换（一）旋转矩阵&lt;/a&gt;&lt;br/&gt;[7] &lt;a href=&quot;https://www.cnblogs.com/mikewolf2002/archive/2012/11/25/2787636.html&quot;&gt;视图矩阵的推导&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 04 Oct 2019 14:17:00 +0000</pubDate>
<dc:creator>charlee44</dc:creator>
<og:description>详细讲解了OpenGL\WebGL关于绘制场景的图形变换过程，并推导了其图形变换矩阵。主要包括模型变换、视图变换以及投影变换。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/charlee44/p/11623502.html</dc:identifier>
</item>
<item>
<title>IPv6系列-彻底弄明白有状态与无状态配置IPv6地址 - 小慢哥</title>
<link>http://www.cnblogs.com/fzxiaomange/p/ipv6-autoconf-stateless-stateful.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fzxiaomange/p/ipv6-autoconf-stateless-stateful.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://fzxiaomange.com/img/ipv6/autoconf-cover.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;深入研究自动分配IPv6地址的Stateless(无状态)与Stateful(有状态)方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小慢哥的原创文章，欢迎转载&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;▪ 一. Link-Local Address的生成方式&lt;br/&gt;▪ 二. Global Address的生成方式&lt;br/&gt;▪ 三. RA报文中3个关键的Flag&lt;br/&gt;▪ 四. 流程示意图&lt;br/&gt;▪ 五. 测试获得IP效果&lt;br/&gt;▪ 六. 应用场景（选择无状态还是有状态）&lt;br/&gt;▪ 七. 后续内容&lt;br/&gt;▪ 附. 参考文档&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;生成“链路本地地址”，有2种方式&lt;/p&gt;
&lt;p&gt;▷ 手动配置&lt;br/&gt;▷ 自动配置&lt;/p&gt;
&lt;p&gt;其中“自动配置”根据算法，又分为&lt;/p&gt;
&lt;p&gt;▷ eui64：根据mac地址换算而来&lt;br/&gt;▷ stable_secret：跟随网络环境的变化而变化，处于固定网络环境时其值将固定&lt;br/&gt;▷ random：随机生成&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;生成“全球单播地址”（或者“唯一本地地址”），有2种方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;▷ 手动配置&lt;br/&gt;▷ 自动配置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其中“自动配置”根据获取方式，又分为&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;▷ 无状态（Stateless）：根据路由通告报文RA（Router Advertisement）包含的prefix前缀信息自动配置IPv6地址，组成方式是Prefix + (EUI64 or 随机)。Stateless也可以称为SLAAC（Stateless address autoconfiguration）&lt;br/&gt;▷ 有状态（Stateful）：通过DHCPv6方式获得IPv6地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其中“有状态”又分为2种&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;▷ 有状态DHCPv6（Stateful DHCPv6）：IPv6地址、其他参数（如DNS）均通过DHCPv6获取&lt;br/&gt;▷ 无状态DHCPv6（Stateless DHCPv6）：IPv6地址依然通过路由通告RA方式生成，其他参数（如DNS）通过DHCPv6获取&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了避免混淆，在此解释下有状态、无状态到底是什么意思&lt;/strong&gt;：首先，请明确一点，有状态、无状态仅针对于IPv6地址分配方式，并不包含其他参数&lt;/p&gt;
&lt;p&gt;▷ 有状态：可控、可管理。在网络中存在一个IP地址管理者，它能够识别客户端，根据不同的客户端，分配对应的IPv6地址，客户端与服务端之间需要维护IP地址的租期及续约。目前实现这种效果的，就是DHCPv6协议，IP地址管理者就是DHCPv6 Server&lt;br/&gt;▷ 无状态：不可控、难管理。在网络中只有网关，没有IP地址管理者。因此无人去识别客户端，每个客户端根据网关发送的相同的RA报文内容，自行配置IPv6地址&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;RA报文中存在3个关键的flag bit：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fzxiaomange.com/img/ipv6/ra-packet.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;▷ &lt;strong&gt;Autonomous flag&lt;/strong&gt;（简称A flag）：表示是否配置无状态IP。在一个RA报文中，可存在多个prefix，比如2401::/64、2402::/64、2403::/64，每个prefix都可以独立配置A flag&lt;/p&gt;
&lt;p&gt;▪ 为on时（对应bit位为1）：表示客户端应当在该prefix范围内自动生成IPv6地址（客户端通过DAD自行保证地址可用），并配置子网路由条目、网关&lt;br/&gt;▪ 为off时（对应bit位为0）：表示客户端不应当在该prefix范围内自动生成IPv6地址，但是可以配置子网路由条目、网关&lt;/p&gt;
&lt;p&gt;▷ &lt;strong&gt;Managed flag&lt;/strong&gt;（简称M flag）：表示是否配置有状态IP。M flag是RA报文的全局参数，一个RA报文只有一个M flag&lt;/p&gt;
&lt;p&gt;▪ 为on时（对应bit位为1）：表示在stateless流程结束后开始stateful流程，也就是告诉客户端可以通过DHCPv6来获得IPv6地址和其他参数（如DNS列表）&lt;br/&gt;▪ 为off时（对应bit位为0）：表示不通过DHCPv6来获得IPv6地址。&lt;/p&gt;
&lt;p&gt;▷ &lt;strong&gt;Other flag&lt;/strong&gt;（简称O flag）：表示是否通过DHCPv6获得除IP以外的其他参数（如DNS列表）。O flag也是RA报文中的全局参数，一个RA报文只有一个O flag。注意：仅当M flag为off时，该参数才会被读取。&lt;/p&gt;
&lt;p&gt;▪ 为on时（对应bit位为1）：当M flag为on，或者M flag为off且至少有一个A flag为on时，将通过DHCPv6获得其他参数&lt;br/&gt;▪ 为off时（对应bit位为0）：当M flag为on时，依然将通过DHCPv6获得其他参数；当M flag也为off时，将不通过DHCPv6获得其他参数&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;无状态和有状态并不是相互对立的，他们可以同时存在，也就是一张网卡上可以同时出现通过RA生成的IP以及通过DHCPv6获得的IP。通过下面这张笔者绘制的流程图可知晓其中奥秘。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fzxiaomange.com/img/ipv6/ipv6-addr-flow.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看到，顺序为：&lt;/p&gt;
&lt;p&gt;1️⃣ Stateless自动配置“链路本地地址”&lt;br/&gt;2️⃣ Stateless自动配置“全球地址”（或“唯一本地地址”）&lt;br/&gt;3️⃣ Stateful自动配置“全球地址”（或“唯一本地地址”）和其他参数，其中Stateful阶段中存在Stateful DHCPv6或Stateless DHCPv6&lt;/p&gt;
&lt;p&gt;注意：部分客户端操作系统或网络管理器当Stateless阶段没有收到RA报文后，就到此结束，不会走Stateful阶段，比如CentOS 7、Ubuntu 17的默认逻辑都是这样，而windows server 2012就会继续走Stateful阶段。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;测试环境&lt;/strong&gt;：客户端基于CentOS 7+NetworkManager（即系统默认的网络管理方式）进行测试&lt;/p&gt;
&lt;p&gt;▪ 网关会发送RA报文，包含一个prefix&lt;br/&gt;▪ DHCPv6 Server会分配IP、DNS&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试内容&lt;/strong&gt;：测试M、O、A flag在所有排列组合的情况下&lt;/p&gt;
&lt;p&gt;▪ 客户端是否会通过RA报文配置无状态IP&lt;br/&gt;▪ 客户端是否会通过RA报文配置prefix子网路由&lt;br/&gt;▪ 客户端是否会通过RA报文配置gateway&lt;br/&gt;▪ 客户端是否会通过DHCPv6获得有状态IP&lt;br/&gt;▪ 客户端是否会通过DHCPv6获得DNS&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试结果&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fzxiaomange.com/img/ipv6/ipv6-ra-dhcpv6-table.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;何时采用无状态、何时采用有状态，关键看应用场景。核心在于是否需要控制IP地址，比如保持IP不变，如果需要控制，就采用有状态；如果无需控制，就采用无状态。&lt;/p&gt;
&lt;p&gt;▷ 服务端领域：如对外提供服务，通常需要采用有状态IP。因为业务IP的突然变化容易导致业务中断（除非做好服务发现）&lt;br/&gt;▷ 客户端领域：如移动设备、办公室内PC机，只需要上IPv6互联网，并不需要对外提供服务，可以采用无状态IP&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;由于篇幅有限，本文尚未贴出实验的详细配置。将会在《IPv6系列》后续文章里，贴出实验的完整信息，包括RA、DHCPv6的配置，以及客户端的配置，敬请关注。&lt;/p&gt;
&lt;hr/&gt;
&lt;pre&gt;
&lt;code&gt;http://www.6deploy.eu/tutorials/080-6deploy_ipv6_autoconfiguration_mechs_v0_4.pdf
https://cshihong.github.io/2018/02/01/DHCPv6基础/&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 04 Oct 2019 13:50:00 +0000</pubDate>
<dc:creator>小慢哥</dc:creator>
<og:description>深入研究自动分配IPv6地址的Stateless(无状态)与Stateful(有状态)方式</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/fzxiaomange/p/ipv6-autoconf-stateless-stateful.html</dc:identifier>
</item>
<item>
<title>profile文件的错误加载与基本命令间的映射 - 王者★孤傲</title>
<link>http://www.cnblogs.com/Raodi/p/11623403.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Raodi/p/11623403.html</guid>
<description>&lt;h2&gt;一、绪论&lt;/h2&gt;
&lt;p&gt;　　【因为这篇心得是原创的，所以如果有哪处总结或者意见不足的地方，欢迎各位大神的批评和意见，共同学习，谢谢了！】&lt;/p&gt;
&lt;p&gt;　　早些时候，需要在centos6.4系统中配置单机版和集群版单节点的hadoop HDFS，由于那时候一边跟老师学hadoop一边自学Linux。初学的自己懂得也不多，别人都用普通用户登录，在需要root权限时才sudo或者切换root用户进行配置，而我呢？ 从一开始就使用了root登录，在给java和hadoop配置了profile文件环境变量，等到重启之后，出现了下图的现象：&lt;span&gt;进入系统用户登录界面后，原本的鼠标小指针一直都是小时钟的样子，无论怎么点击都是能移动但是指针的形状偏偏就变不回来，也无法登录。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004201107735-1153380566.png&quot; alt=&quot;&quot; width=&quot;960&quot; height=&quot;543&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　那无法登陆了，肿么办？下意识就问老师吧，可他说他也没碰到过这种奇怪的现象。也对，但凡是规范的操作又怎么会碰到我的这种现象呢？想必极为少数吧！没有了老师的帮助，那时候我一贯的做法就是：强制关机-重启=不行，正常关机-重启=不行，之后便干脆直接放弃了整个系统，启用新系统从头开始配置HDFS。这个鼠标指针变成小时钟而无法登陆的现象，到现在前前后后碰到不下十遍，也由此令我一直耿耿于心，希望这篇心得能帮到更多与我类似困窘的人吧！&lt;/p&gt;
&lt;p&gt;　　这几个月来，其实，我一直都在追寻是什么原因导致的系统用户无法登陆，以及系统的各个配置文件都有些什么作用？下面先讲该怎么恢复系统的登录先吧！&lt;/p&gt;
&lt;h2&gt;二、恢复正常登录&lt;/h2&gt;
&lt;p&gt;　　&lt;span&gt;profile文件的错误加载而导致系统用户无法登录的现象，主要有两类：profile文件的内容配置错误、profile文件在进行vi时被挂起。如果是profile文件的内容配置错误，解决的办法：一是删除所有自定义配置的内容，但这种方法个人很不推荐；二是没有加载系统变量。至于profile文件在进行vi时被挂起，解决的办法就是恢复该文件，再删除生成的临时挂起文件。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;（1）加载系统变量恢复&lt;/h3&gt;
&lt;p&gt;　　1、切换到字符界面。可按Ctrl+Alt+F6，由用户图形界面切换到字符界面。&lt;/p&gt;
&lt;p&gt;　　2、登陆用户。这里由于&lt;span&gt;用户图形界面本身就是一个应用程序，而不是Linux内核的一部分，&lt;/span&gt;所以即使图形用户界面完完全全地崩溃了，也是丝毫不影响我们使用字符界面进行常规的操作。这里，因为是系统的登录界面损坏，所以建议登录最高权限用户root。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004201008495-2106661979.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;　　3、编辑profile文件。执行如下错误，查找并修改错误配置内容：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
/usr/bin/vim /etc/profile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004195108540-652729182.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　可以看到我这里缺少了明显的系统传递参数：$PATH   。需要注意的是：如果 export PATH=  后面有多个变量值，在值与值之间需要使用英文的“ ： ”符号隔开。具体修改如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004195323379-239873721.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　如果打开的profile文件中，已经存在了$PATH，&lt;span&gt;那么导致图形界面无法进行用户登录的原因，很可能就是自定义部分的内容存在手动输入错误。如：缺少某个字符或者字符错误。&lt;/span&gt;倘若，仍然无法找到错误的根源，建议将所有自定义配置的内容进行删除。&lt;/p&gt;
&lt;p&gt;　　4、保存退出后，输入一下内容进行重启，重启后便可恢复正常登录。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
/usr/bin/reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　如果不进行&lt;span&gt;重启&lt;/span&gt;的话，也可以使用source命令让profile文件进行生效，但是不建议。因为这种方式容易导致profile文件的配置生效不完全。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004200915221-1776901005.png&quot; alt=&quot;&quot; width=&quot;1012&quot; height=&quot;299&quot;/&gt;&lt;/p&gt;



&lt;h3&gt; （2）恢复挂起的profile文件&lt;/h3&gt;
&lt;p&gt;　　 如果在配置profile文件内容时，中途断电或者强迫退出vim编辑，那么就会在/etc/目录下，&lt;span&gt;临时生成profile.swp的隐藏文件，可以使用ll -a或者ls -a来查看是否存在.swp文件。在确保profile配置信息没有错误之后，记得删除该文件。删除的命令不再是&quot; rm -rf profile.swp &quot;，因为在profile文件错误加载的情况下rm命令不可直接使用，要在前面加上路径名称。具体的步骤类似上面的过程，区别在于第3步后，需要删除该隐藏文件再重启。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;三、基本映射作用&lt;/h2&gt;
&lt;p&gt;　　没错，前面所执行的命令，如简单的重启：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
/usr/bin/reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;都在命令前加了路径名称。那么为什么需要加路径名称而不能直接使用呢？这和profile配置文件又有什么关联呢？如果每个命令都需要加前缀路径，这些前缀都相同吗？&lt;/span&gt;如果命令相同那么为什么执行下面的命令，会提示“No such file or directory”呢？&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#/usr/bin/ls /etc/profile 
bash: /usr/bin/ls: No such file or directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;（1）profile文件的映射类型&lt;/h3&gt;
&lt;p&gt;　　　我们知道profile文件可进行环境变量的配置，那么对于命令的映射类型有两种：用户变量和系统变量，类似于我们win10的系统环境一样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004203356046-1483273017.png&quot; alt=&quot;&quot; width=&quot;747&quot; height=&quot;427&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　我们先看一下Linux系统下的$PATH都有哪些内容？使用前面修复过的系统，登录并进入命令终端，输入如下命令并查看返回信息：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#which $PATH
/usr/bin/which: no bin in (/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/java/jdk1.8.0_161/bin:/home/yang)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可见，“which”这个命令是属于/usr/bin/ 目录下的。至于每个常用的命令都在哪个目录下，这里先不讨论。我想说的是，我这里需要提出两个概念词，或许早有人为此下过定义，这里姑且暂用。我提出的概念是：权限比重、优先度。在权限比重方面，例如：“ /bin ”要比 “ /usr/local/bin ”权限大的多，但是“ /usr/local/bin ”的优先度级别比“ /bin ”还大。简而言之，就是用户登录系统后先使用的命令默认是 “ /usr/local/bin ”下的，当 “ /usr/local/bin ”找不到才到第二级别更高权限的“ /bin ”去找，这对于“/sbin”和“usr/sbin”一样的道理。&lt;span&gt;这是对于单用户来说，如果我这里的yang用户需要root的权限，当sudo一下时，会跳出这些目录而去使用root用户“ /bin ”、 “ /usr/local/bin ”目录下的命令等等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　我们&lt;span&gt;完全可以这样来假设，“ /bin ”和“/sbin”是系统环境下的指令库，而“ /usr/local/bin ”和“usr/sbin”为用户环境下的指令集。&lt;/span&gt;也就是，可以大胆地假设：每个Linux用户都存在一个系统环境和一个用户环境。&lt;/p&gt;

&lt;h3&gt;（2）profile文件的映射作用&lt;/h3&gt;
&lt;p&gt;　　1、root用户所定义下的profile环境内容，其他用户环境可继承性较大；&lt;/p&gt;
&lt;p&gt;　　2、profile文件用于登录设置的全系统环境和启动程序。利用vi查看一下profile文件，内容如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a45959e5-cbc1-4b91-8c09-5eb517e4b792')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_a45959e5-cbc1-4b91-8c09-5eb517e4b792&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a45959e5-cbc1-4b91-8c09-5eb517e4b792&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a45959e5-cbc1-4b91-8c09-5eb517e4b792',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a45959e5-cbc1-4b91-8c09-5eb517e4b792&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;# /etc/profile

# System wide environment and startup programs, for login setup
# Functions and aliases go in /etc/bashrc

# It's NOT a good idea to change this file unless you know what you
# are doing. It's much better to create a custom.sh shell script in
# /etc/profile.d/ to make custom changes to your environment, as this
# will prevent the need for merging in future updates.

pathmunge () {
    case &quot;:${PATH}:&quot; in
        *:&quot;$1&quot;:*)
            ;;
        *)
            if [ &quot;$2&quot; = &quot;after&quot; ] ; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}


if [ -x /usr/bin/id ]; then
    if [ -z &quot;$EUID&quot; ]; then
        # ksh workaround
        EUID=`id -u`
        UID=`id -ru`
    fi
    USER=&quot;`id -un`&quot;
    LOGNAME=$USER
    MAIL=&quot;/var/spool/mail/$USER&quot;
fi

# Path manipulation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;profile文件部分信息&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　将“# /etc/profile# System wide environment and startup programs, for login setup# Functions and aliases go in /etc/bashrc# It's NOT a good idea to change this file unless you know what you# are doing. It's much better to create a custom.sh shell script in# /etc/profile.d/ to make custom changes to your environment, as this# will prevent the need for merging in future updates.”粘贴到百度翻译一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1669870/201910/1669870-20191004211042402-1178367413.png&quot; alt=&quot;&quot; width=&quot;909&quot; height=&quot;327&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　这也恰恰说明了，为什么profile文件配置不好，会出现鼠标指针变成小时钟而无法登陆的现象。&lt;/p&gt;
&lt;p&gt;　　3、profile配置文件所自定义的内容，如&lt;span&gt;：export PATH= 后面必须必须跟随传递参数：$PATH 。&lt;/span&gt;当不配置export PATH=的值时，$PATH为隐藏属性。当export PATH=的值被配置时，$PATH的作用是将“ /bin ”、“/sbin”、“ /usr/local/bin ”和“usr/sbin”等目录下的命令进行聚集和简化路径。这也正是，为什么当profile配置文件损坏时，必须在命令前加路径名称的缘故。但是每个命令的路径名称又是什么呢？&lt;/p&gt;

&lt;h3&gt; （3）常用命令的映射目录&lt;/h3&gt;
&lt;p&gt;　　还记得前边说到的，在profile文件不起作用时，要删除profile挂起的临时文件，必须要在rm命令的前面加了上命令的路径名称，不然会提示No such file or directory相类似的错误。当which $PATH一下，也看到过列举了一些路径，我们逐个进去看看：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('da657294-e6f4-4d96-98b5-bde596266d9d')&quot; readability=&quot;31&quot;&gt;&lt;img id=&quot;code_img_closed_da657294-e6f4-4d96-98b5-bde596266d9d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_da657294-e6f4-4d96-98b5-bde596266d9d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('da657294-e6f4-4d96-98b5-bde596266d9d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_da657294-e6f4-4d96-98b5-bde596266d9d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /usr/local/bin
total 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /usr/local/bin&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('989b814c-3acc-4262-9603-d605a31564c0')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_989b814c-3acc-4262-9603-d605a31564c0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_989b814c-3acc-4262-9603-d605a31564c0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('989b814c-3acc-4262-9603-d605a31564c0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_989b814c-3acc-4262-9603-d605a31564c0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;-rwxr-xr-x. 1 root root      87352 Jul 11  2012 pulseaudio
-rwxr-xr-x. 1 root root       1420 Sep 11  2012 pv.sh
-rwxr-xr-x. 1 root root      10152 Nov 15  2012 pwdx
-rwxr-xr-x. 1 root root         78 Feb 21  2013 pydoc
-rwxr-xr-x. 1 root root        188 Aug 20  2010 pygtk-demo
-rwxr-xr-x. 2 root root       9032 Feb 21  2013 python
lrwxrwxrwx. 1 root root          6 May 14  2018 python2 -&amp;gt; python
-rwxr-xr-x. 2 root root       9032 Feb 21  2013 python2.6
-rwxr-xr-x. 1 root root      82752 Nov 20  2012 quota
-rwxr-xr-x. 1 root root      65856 Nov 20  2012 quotasync
-rwxr-xr-x. 1 root root      60984 Feb 21  2013 ranlib
-rwxr-xr-x. 1 root root      10168 Aug 18  2010 rarian-example
-rwxr-xr-x. 1 root root       1495 Aug 18  2010 rarian-sk-config
-rwxr-xr-x. 1 root root        563 Aug 18  2010 rarian-sk-extract
-rwxr-xr-x. 1 root root       9288 Aug 18  2010 rarian-sk-gen-uuid
-rwxr-xr-x. 1 root root      80856 Aug 18  2010 rarian-sk-get-cl
-rwxr-xr-x. 1 root root        399 Aug 18  2010 rarian-sk-get-content-list
-rwxr-xr-x. 1 root root        419 Aug 18  2010 rarian-sk-get-extended-content-list
-rwxr-xr-x. 1 root root        382 Aug 18  2010 rarian-sk-get-scripts
-rwxr-xr-x. 1 root root       1171 Aug 18  2010 rarian-sk-install
-rwxr-xr-x. 1 root root      89280 Aug 18  2010 rarian-sk-migrate
-rwxr-xr-x. 1 root root      78568 Aug 18  2010 rarian-sk-preinstall
-rwxr-xr-x. 1 root root        821 Aug 18  2010 rarian-sk-rebuild
-rwxr-xr-x. 1 root root       9525 Aug 18  2010 rarian-sk-update
-rwxr-xr-x. 1 root root      14672 Dec 18  2012 ras2tiff
-rwxr-xr-x. 1 root root      20056 Dec 18  2012 raw2tiff
lrwxrwxrwx. 1 root root         28 Jun  6  2018 rcs2log -&amp;gt; ../share/cvs/contrib/rcs2log
-rwxr-xr-x. 1 root root      13560 Nov 11  2010 rdate
-rwxr-xr-x. 1 root root      12480 Feb 21  2013 rdjpgcom
lrwxrwxrwx. 1 root root         33 May 14  2018 readcd -&amp;gt; /etc/alternatives/cdrecord-readcd
-rwxr-xr-x. 1 root root     303984 Feb 21  2013 readelf
lrwxrwxrwx. 1 root root         18 May 14  2018 readlink -&amp;gt; ../../bin/readlink
-rwxr-xr-x. 1 root root        800 Nov 12  2012 readmult
-rwxr-xr-x. 1 root root     195632 Nov 12  2012 readom
lrwxrwxrwx. 1 root root         13 May 14  2018 reboot -&amp;gt; consolehelper
-rwxr-xr-x. 1 root root      15528 Jun  2  2014 recode-sr-latin
-rwxr-xr-x. 1 root root     128936 Nov 11  2010 refer
-rwxr-xr-x. 1 root root       9896 Feb 21  2013 rename
-rwxr-xr-x. 1 root root      10624 Feb 21  2013 renice
-rwxr-xr-x. 1 root root      11619 Jun 22  2012 repoclosure
-rwxr-xr-x. 1 root root      11707 Jun 22  2012 repodiff
-rwxr-xr-x. 1 root root       4196 Jun 22  2012 repo-graph
-rwxr-xr-x. 1 root root       7048 Jun 22  2012 repomanage
-rwxr-xr-x. 1 root root      45778 Jun 22  2012 repoquery
-rwxr-xr-x. 1 root root      10225 Jun 22  2012 repo-rss
-rwxr-xr-x. 1 root root      10952 Feb 22  2013 report
-rwxr-xr-x. 1 root root      31144 Feb 22  2013 report-cli
-rwxr-xr-x. 1 root root      22896 Feb 22  2013 reporter-kerneloops
-rwxr-xr-x. 1 root root      14656 Feb 22  2013 reporter-mailx
-rwxr-xr-x. 1 root root      13528 Feb 22  2013 reporter-print
-rwxr-xr-x. 1 root root      40272 Feb 22  2013 reporter-rhtsupport
-rwxr-xr-x. 1 root root      26744 Feb 22  2013 reporter-upload
-rwxr-xr-x. 1 root root     127784 Feb 22  2013 report-gtk
-rwxr-xr-x. 1 root root      20960 Feb 22  2013 report-newt
-rwxr-xr-x. 1 root root      13626 Jun 22  2012 reposync
-rwxr-xr-x. 1 root root       8740 Jun 22  2012 repotrack
lrwxrwxrwx. 1 root root          4 May 14  2018 reset -&amp;gt; tset
-rwxr-xr-x. 1 root root      19520 Nov 11  2010 resizecons
-rwxr-xr-x. 1 root root      10168 Feb 21  2013 rev
-rwxr-xr-x. 1 root root      36136 Nov 10  2010 rfcomm
-rwxr-xr-x. 1 root root      16072 Dec 18  2012 rgb2ycbcr
lrwxrwxrwx. 1 root root         18 May 14  2018 rhgb-client -&amp;gt; ../../bin/plymouth
-rwxr-xr-x. 1 root root      54984 Nov 11  2010 rhythmbox
-rwxr-xr-x. 1 root root      33144 Nov 11  2010 rhythmbox-client
lrwxrwxrwx. 1 root root         27 May 14  2018 rmail -&amp;gt; /etc/alternatives/mta-rmail
-rwxr-xr-x. 1 root root        262 Dec  2  2011 rmail.postfix
lrwxrwxrwx. 1 root root         22 Jul  5  2018 rmic -&amp;gt; /etc/alternatives/rmic
lrwxrwxrwx. 1 root root         22 Jul  5  2018 rmid -&amp;gt; /etc/alternatives/rmid
lrwxrwxrwx. 1 root root         29 Jul  5  2018 rmiregistry -&amp;gt; /etc/alternatives/rmiregistry
lrwxrwxrwx. 1 root root         15 May 14  2018 rnano -&amp;gt; ../../bin/rnano
-rwxr-xr-x. 1 root root      16848 Dec 17  2011 rngtest
-rwxr-xr-x. 1 root root      95704 Feb 21  2013 rpcgen
-rwxr-xr-x. 1 root root      16040 Feb 21  2013 rpm2cpio
lrwxrwxrwx. 1 root root         13 May 14  2018 rpmdb -&amp;gt; ../../bin/rpm
lrwxrwxrwx. 1 root root         13 May 14  2018 rpmquery -&amp;gt; ../../bin/rpm
lrwxrwxrwx. 1 root root         13 May 14  2018 rpmsign -&amp;gt; ../../bin/rpm
lrwxrwxrwx. 1 root root         13 May 14  2018 rpmverify -&amp;gt; ../../bin/rpm
-rwxr-xr-x. 1 root root       2500 Feb 24  2012 rsvg
-rwxr-xr-x. 1 root root      28896 Feb 24  2012 rsvg-convert
-rwxr-xr-x. 1 root root      44080 Feb 24  2012 rsvg-view
-rwxr-xr-x. 1 root root     415000 Apr 11  2012 rsync
-rwxr-xr-x. 1 root root      31888 Jun 22  2012 runcon
-rwxr-xr-x. 1 root root       1411 Sep 26  2011 run-parts
lrwxrwxrwx. 1 root root          3 May 14  2018 rvim -&amp;gt; vim
-rwxr-xr-x. 2 root root      53325 Mar 22  2017 s2p
-rwxr-xr-x. 1 root root     111496 Jun 22  2012 sadf
-rwxr-xr-x. 1 root root     139480 Nov 11  2010 sane-find-scanner
-rwxr-xr-x. 1 root root      81192 Jun 22  2012 sar
-rwxr-xr-x. 1 root root       5896 Nov 10  2010 saytime
-rwxr-xr-x. 1 root root      52304 Nov 11  2010 scanimage
lrwxrwxrwx. 1 root root         27 Jul  5  2018 schemagen -&amp;gt; /etc/alternatives/schemagen
-rwxr-xr-x. 1 root root      15640 Feb 21  2013 scl
-rwxr-xr-x. 1 root root        258 Feb 21  2013 scl_enabled
-rwxr-xr-x. 1 root root      59456 Feb 21  2013 scp
-rwxr-xr-x. 1 root root      16632 Feb 21  2013 script
-rwxr-xr-x. 1 root root      11176 Feb 21  2013 scriptreplay
lrwxrwxrwx. 1 root root         16 May 14  2018 scrollkeeper-config -&amp;gt; rarian-sk-config
lrwxrwxrwx. 1 root root         17 May 14  2018 scrollkeeper-extract -&amp;gt; rarian-sk-extract
lrwxrwxrwx. 1 root root         18 May 14  2018 scrollkeeper-gen-seriesid -&amp;gt; rarian-sk-gen-uuid
lrwxrwxrwx. 1 root root         16 May 14  2018 scrollkeeper-get-cl -&amp;gt; rarian-sk-get-cl
lrwxrwxrwx. 1 root root         26 May 14  2018 scrollkeeper-get-content-list -&amp;gt; rarian-sk-get-content-list
lrwxrwxrwx. 1 root root         35 May 14  2018 scrollkeeper-get-extended-content-list -&amp;gt; rarian-sk-get-extended-content-list
lrwxrwxrwx. 1 root root         21 May 14  2018 scrollkeeper-get-index-from-docpath -&amp;gt; rarian-sk-get-scripts
lrwxrwxrwx. 1 root root         21 May 14  2018 scrollkeeper-get-toc-from-docpath -&amp;gt; rarian-sk-get-scripts
lrwxrwxrwx. 1 root root         21 May 14  2018 scrollkeeper-get-toc-from-id -&amp;gt; rarian-sk-get-scripts
lrwxrwxrwx. 1 root root         17 May 14  2018 scrollkeeper-install -&amp;gt; rarian-sk-install
lrwxrwxrwx. 1 root root         20 May 14  2018 scrollkeeper-preinstall -&amp;gt; rarian-sk-preinstall
lrwxrwxrwx. 1 root root         17 May 14  2018 scrollkeeper-rebuilddb -&amp;gt; rarian-sk-rebuild
lrwxrwxrwx. 1 root root         17 May 14  2018 scrollkeeper-uninstall -&amp;gt; rarian-sk-install
lrwxrwxrwx. 1 root root         16 May 14  2018 scrollkeeper-update -&amp;gt; rarian-sk-update
-rwxr-xr-x. 1 root root      29000 Nov 10  2010 sdiff
-rwxr-xr-x. 1 root root      81048 Nov 10  2010 sdptool
-rwxr-xr-x. 1 root root     819768 Aug 22  2010 seahorse
-rwxr-xr-x. 1 root root     668224 Aug 22  2010 seahorse-daemon
-rwxr-xr-x. 1 root root      18832 Feb 21  2013 secon
-rwxr-xr-x. 1 root root     173496 Nov 10  2010 sedismod
-rwxr-xr-x. 1 root root     145400 Nov 10  2010 sedispol
-rwxr-xr-x. 1 root root     195536 Feb 21  2013 semodule_deps
-rwxr-xr-x. 1 root root      10584 Feb 21  2013 semodule_expand
-rwxr-xr-x. 1 root root      10512 Feb 21  2013 semodule_link
-rwxr-xr-x. 1 root root      14944 Feb 21  2013 semodule_package
-rwxr-xr-x. 1 root root      13576 Aug 16  2010 sendiso
-rwxr-xr-x. 1 root root        238 Mar 27  2018 sentry
-rwxr-xr-x. 1 root root      43944 Jun 22  2012 seq
lrwxrwxrwx. 1 root root         27 Jul  5  2018 serialver -&amp;gt; /etc/alternatives/serialver
lrwxrwxrwx. 1 root root         28 Jul  5  2018 servertool -&amp;gt; /etc/alternatives/servertool
-rwxr-xr-x. 1 root root      14720 Feb 23  2013 sessreg
-rwxr-xr-x. 1 root root      13920 Feb 21  2013 setarch
-rwxr-xr-x. 1 root root      37016 Dec  7  2011 setfacl
-rwxr-xr-x. 1 root root      18448 Sep 23  2011 setfattr
-rwxr-xr-x. 1 root root      10472 Nov 11  2010 setkeycodes
-rwxr-xr-x. 1 root root      12272 Nov 11  2010 setleds
-rwxr-xr-x. 1 root root       9976 Nov 11  2010 setmetamode
-rwxr-xr-x. 1 root root       8800 Feb 21  2013 setsid
-rwxr-xr-x. 1 root root      25704 Feb 21  2013 setterm
lrwxrwxrwx. 1 root root         13 May 14  2018 setup -&amp;gt; consolehelper
-rwxr-xr-x. 1 root root       1539 Feb 22  2013 setup-nsssysinit.sh
-rwxr-xr-x. 1 root root      23880 Feb 23  2013 setxkbmap
-rwxr-xr-x. 1 root root      96328 Feb 21  2013 sftp
lrwxrwxrwx. 1 root root          6 May 14  2018 sg -&amp;gt; newgrp
-rwxr-xr-x. 1 root root        265 Nov 17  2000 sgmlwhich
-rwxr-xr-x. 1 root root      39920 Jun 22  2012 sha1sum
-rwxr-xr-x. 1 root root      45776 Jun 22  2012 sha224sum
-rwxr-xr-x. 1 root root      45776 Jun 22  2012 sha256sum
-rwxr-xr-x. 1 root root      51112 Jun 22  2012 sha384sum
-rwxr-xr-x. 1 root root      51112 Jun 22  2012 sha512sum
-rwxr-xr-x. 1 root root      10353 Jun 22  2012 show-changed-rco
-rwxr-xr-x. 1 root root       2567 Aug 22  2010 showchar
-rwxr-xr-x. 1 root root      17672 Nov 11  2010 showconsolefont
-rwxr-xr-x. 1 root root      16570 Jun 22  2012 show-installed
-rwxr-xr-x. 1 root root      14112 Nov 11  2010 showkey
-rwxr-xr-x. 1 root root       9464 Feb 23  2013 showrgb
-rwxr-xr-x. 1 root root      51432 Jun 22  2012 shred
-rwxr-xr-x. 1 root root      38944 Jun 22  2012 shuf
-rwxr-xr-x. 1 root root     171768 Feb 22  2013 signtool
-rwxr-xr-x. 1 root root      91664 Feb 22  2013 signver
-rwxr-xr-x. 1 root root      33728 Feb 21  2013 size
-rwxr-xr-x. 2 root root      18752 Nov 15  2012 skill
-rwxr-xr-x. 1 root root      17568 Nov 15  2012 slabtop
-rwxr-xr-x. 1 root root       2034 Nov 10  2010 sliceprint
lrwxrwxrwx. 1 root root          5 May 14  2018 slogin -&amp;gt; ./ssh
-rwxr-xr-x. 1 root root    1635136 Feb 21  2013 smbcontrol
-rwxr-xr-x. 1 root root    6221904 Feb 21  2013 smbcquotas
-rwxr-xr-x. 1 root root    6246408 Feb 21  2013 smbpasswd
-rwxr-xr-x. 1 root root      32512 Nov 11  2010 smp_conf_general
-rwxr-xr-x. 1 root root      32608 Nov 11  2010 smp_conf_route_info
-rwxr-xr-x. 1 root root      45368 Nov 11  2010 smp_discover
-rwxr-xr-x. 1 root root      48832 Nov 11  2010 smp_discover_list
-rwxr-xr-x. 1 root root      33936 Nov 11  2010 smp_phy_control
-rwxr-xr-x. 1 root root      32856 Nov 11  2010 smp_phy_test
-rwxr-xr-x. 1 root root      32920 Nov 11  2010 smp_read_gpio
-rwxr-xr-x. 1 root root      34144 Nov 11  2010 smp_rep_exp_route_tbl
-rwxr-xr-x. 1 root root      35392 Nov 11  2010 smp_rep_general
-rwxr-xr-x. 1 root root      32416 Nov 11  2010 smp_rep_manufacturer
-rwxr-xr-x. 1 root root      32416 Nov 11  2010 smp_rep_phy_err_log
-rwxr-xr-x. 1 root root      32896 Nov 11  2010 smp_rep_phy_sata
-rwxr-xr-x. 1 root root      33728 Nov 11  2010 smp_rep_route_info
-rwxr-xr-x. 1 root root      33816 Nov 11  2010 smp_write_gpio
-rwxr-xr-x. 1 root root      10672 Sep 23  2011 sndfile-cmp
-rwxr-xr-x. 1 root root      19280 Sep 23  2011 sndfile-convert
-rwxr-xr-x. 1 root root      14536 Sep 23  2011 sndfile-info
-rwxr-xr-x. 1 root root      12920 Sep 23  2011 sndfile-metadata-get
-rwxr-xr-x. 1 root root      18608 Sep 23  2011 sndfile-metadata-set
-rwxr-xr-x. 1 root root      18208 Sep 23  2011 sndfile-play
-rwxr-xr-x. 1 root root      20008 Sep 23  2011 sndfile-regtest
-rwxr-xr-x. 1 root root      14448 Aug 19  2010 sndfile-resample
-rwxr-xr-x. 2 root root      18752 Nov 15  2012 snice
-rwxr-xr-x. 1 root root      26137 Feb 21  2013 snmpconf
-rwxr-xr-x. 1 root root      26192 Nov 11  2010 soelim
-rwxr-xr-x. 1 root root        247 Mar 27  2018 solrctl
-rwxr-xr-x. 1 root root     210576 Nov 11  2010 sound-juicer
-rwxr-xr-x. 1 root root        140 Mar 27  2018 spark-shell
-rwxr-xr-x. 1 root root        141 Mar 27  2018 spark-submit
-rwxr-xr-x. 1 root root      31296 Feb 21  2013 speaker-test
-rwxr-xr-x. 1 root root      48336 Feb 21  2013 spice-vdagent
-rwxr-xr-x. 1 root root      17452 Mar 22  2017 splain
-rwxr-xr-x. 1 root root      55360 Jun 22  2012 split
-rwxr-xr-x. 1 root root      26832 Feb 21  2013 sprof
-rwxr-xr-x. 1 root root      59552 Aug 17  2010 sqlite3
-rwxr-xr-x. 1 root root        486 Mar 27  2018 sqoop
-rwxr-xr-x. 1 root root        494 Mar 27  2018 sqoop-codegen
-rwxr-xr-x. 1 root root        504 Mar 27  2018 sqoop-create-hive-table
-rwxr-xr-x. 1 root root        491 Mar 27  2018 sqoop-eval
-rwxr-xr-x. 1 root root        493 Mar 27  2018 sqoop-export
-rwxr-xr-x. 1 root root        491 Mar 27  2018 sqoop-help
-rwxr-xr-x. 1 root root        493 Mar 27  2018 sqoop-import
-rwxr-xr-x. 1 root root        504 Mar 27  2018 sqoop-import-all-tables
-rwxr-xr-x. 1 root root        490 Mar 27  2018 sqoop-job
-rwxr-xr-x. 1 root root        501 Mar 27  2018 sqoop-list-databases
-rwxr-xr-x. 1 root root        498 Mar 27  2018 sqoop-list-tables
-rwxr-xr-x. 1 root root        492 Mar 27  2018 sqoop-merge
-rwxr-xr-x. 1 root root        496 Mar 27  2018 sqoop-metastore
-rwxr-xr-x. 1 root root        494 Mar 27  2018 sqoop-version
-rwxr-xr-x. 1 root root     376920 Feb 21  2013 ssh
-rwxr-xr-x. 1 root root     130288 Feb 21  2013 ssh-add
-rwxr-sr-x. 1 root nobody   112704 Feb 21  2013 ssh-agent
-rwxr-xr-x. 1 root root       1389 Feb 21  2013 ssh-copy-id
-rwxr-xr-x. 1 root root     154864 Feb 21  2013 ssh-keygen
-rwxr-xr-x. 1 root root     216864 Feb 21  2013 ssh-keyscan
-rwxr-xr-x. 1 root root      44952 Feb 22  2013 ssltap
-rwxr-xr-x. 1 root root      10264 Feb 21  2013 stap-merge
-rwxr-xr-x. 1 root root        912 Feb 21  2013 stap-report
---s--x---. 1 root stapusr  162584 Feb 21  2013 staprun
-rwxr-xr-x. 1 root root      18480 Feb 21  2013 stapsh
-rwxr-xr-x. 1 root root       1184 Jul 11  2012 start-pulseaudio-x11
-rwxr-xr-x. 1 root root       4423 Aug 16  2010 startx
-rwxr-xr-x. 1 root root      50400 Jun 22  2012 stat
-rwxr-xr-x. 1 root root      97840 Nov 10  2010 states
-rwxr-xr-x. 1 root root      63464 Jun 22  2012 stdbuf
-rwxr-xr-x. 1 root root     309088 Feb 21  2013 strace
-rwxr-xr-x. 1 root root      32464 Feb 21  2013 strings
-rwxr-xr-x. 1 root root     219064 Feb 21  2013 strip
---s--x--x. 1 root root     123832 Feb 21  2013 sudo
lrwxrwxrwx. 1 root root          4 May 14  2018 sudoedit -&amp;gt; sudo
---x--x--x. 1 root root      59744 Feb 21  2013 sudoreplay
-rwxr-xr-x. 1 root root      34632 Jun 22  2012 sum
-rwxr-xr-x. 1 root root      23536 Feb 23  2013 synclient
-rwxr-xr-x. 1 root root      19096 Feb 23  2013 syndaemon
lrwxrwxrwx. 1 root root         13 May 14  2018 system-config-authentication -&amp;gt; consolehelper
lrwxrwxrwx. 1 root root         13 May 14  2018 system-config-date -&amp;gt; consolehelper
-rwxr-xr-x. 1 root root       1217 Sep 23  2011 system-config-firewall
-rwxr-xr-x. 1 root root       1155 Sep 23  2011 system-config-firewall-tui
lrwxrwxrwx. 1 root root         13 May 14  2018 system-config-keyboard -&amp;gt; consolehelper
lrwxrwxrwx. 1 root root         13 May 14  2018 system-config-network -&amp;gt; consolehelper
lrwxrwxrwx. 1 root root         13 May 14  2018 system-config-network-cmd -&amp;gt; consolehelper
-rwxr-xr-x. 1 root root         95 Apr  3  2012 system-config-printer
-rwxr-xr-x. 1 root root         80 Apr  3  2012 system-config-printer-applet
lrwxrwxrwx. 1 root root         13 May 14  2018 system-config-users -&amp;gt; consolehelper
-rwxr-xr-x. 1 root root      17792 Nov 11  2010 system-setup-keyboard
-rwxr-xr-x. 1 root root      14480 Aug 18  2010 tabs
-rwxr-xr-x. 1 root root      96256 Jun 22  2012 tac
-rwxr-xr-x. 1 root root      59696 Jun 22  2012 tail
-rwxr-xr-x. 1 root root      11936 Feb 21  2013 tailf
-rwxr-xr-x. 1 root root     105704 Nov 11  2010 tbl
-rwxr-xr-x. 1 root root      27752 Jun 22  2012 tee
-rwxr-xr-x. 1 root root      33808 Jun 22  2012 test
-rwxr-xr-x. 1 root root      14360 Aug 16  2010 testlibraw
-rwxr-xr-x. 1 root root    1614264 Feb 21  2013 testparm
-rwxr-xr-x. 1 root root       6843 Aug 22  2010 test_ppa
-rwxr-xr-x. 1 root root      23280 Nov 11  2010 test-speech
-rwxr-xr-x. 1 root root       6465 Nov 10  2010 text2wave
-rwxr-xr-x. 1 root root      30888 Nov 11  2010 tfmtodit
-rwxr-xr-x. 1 root root       2295 Aug 16  2010 tgz
-rwxr-xr-x. 1 root root      19784 Dec 18  2012 thumbnail
-rwxr-xr-x. 1 root root      53784 Aug 18  2010 tic
-rwxr-xr-x. 1 root root      16304 Dec 18  2012 tiff2bw
-rwxr-xr-x. 1 root root      69064 Dec 18  2012 tiff2pdf
-rwxr-xr-x. 1 root root      46056 Dec 18  2012 tiff2ps
-rwxr-xr-x. 1 root root      15840 Dec 18  2012 tiff2rgba
-rwxr-xr-x. 1 root root      19088 Dec 18  2012 tiffcmp
-rwxr-xr-x. 1 root root      36000 Dec 18  2012 tiffcp
-rwxr-xr-x. 1 root root     103296 Dec 18  2012 tiffcrop
-rwxr-xr-x. 1 root root      14712 Dec 18  2012 tiffdither
-rwxr-xr-x. 1 root root      20944 Dec 18  2012 tiffdump
-rwxr-xr-x. 1 root root      18384 Dec 18  2012 tiffinfo
-rwxr-xr-x. 1 root root      19280 Dec 18  2012 tiffmedian
-rwxr-xr-x. 1 root root      13072 Dec 18  2012 tiffset
-rwxr-xr-x. 1 root root      15208 Dec 18  2012 tiffsplit
-rwxr-xr-x. 1 root root      17944 Aug 18  2010 time
-rwxr-xr-x. 1 root root      50176 Jun 22  2012 timeout
-rwxr-xr-x. 1 root root      11808 Nov 15  2012 tload
lrwxrwxrwx. 1 root root         23 May 14  2018 tmpwatch -&amp;gt; ../../usr/sbin/tmpwatch
lrwxrwxrwx. 1 root root         27 Jul  5  2018 tnameserv -&amp;gt; /etc/alternatives/tnameserv
-rwxr-xr-x. 1 root root     228568 Nov 10  2010 toc2cddb
-rwxr-xr-x. 1 root root     229096 Nov 10  2010 toc2cue
-rwxr-xr-x. 1 root root      15496 Aug 18  2010 toe
-rwxr-xr-x. 1 root root      68392 Nov 15  2012 top
-rwxr-xr-x. 1 root root     522584 Nov 11  2010 totem
-rwxr-xr-x. 1 root root     175176 Nov 11  2010 totem-audio-preview
-rwxr-xr-x. 1 root root     175104 Nov 11  2010 totem-video-indexer
-rwxr-xr-x. 1 root root     187008 Nov 11  2010 totem-video-thumbnailer
-rwxr-xr-x. 1 root root      15272 Aug 18  2010 tput
lrwxrwxrwx. 1 root root         35 Jun  7  2018 tpvmlp -&amp;gt; /usr/lib/vmware-tools/bin/appLoader
lrwxrwxrwx. 1 root root         35 Jun  7  2018 tpvmlpd -&amp;gt; /usr/lib/vmware-tools/bin/appLoader
-rwxr-xr-x. 1 root root      41424 Jun 22  2012 tr
-rwxr-xr-x. 1 root root     363616 Nov 11  2010 troff
-rwxr-xr-x. 1 root root      51160 Jun 22  2012 truncate
-rwxr-xr-x. 1 root root      22464 Aug 18  2010 tset
-rwxr-xr-x. 1 root root      35864 Jun 22  2012 tsort
-rwxr-xr-x. 1 root root      25464 Jun 22  2012 tty
-rwxr-xr-x. 1 root root       7131 Feb 21  2013 tzselect
-rwxr-xr-x. 1 root root      21856 Dec  7  2011 ucs2any
-rwxr-xr-x. 1 root root      48648 Dec  7  2011 udisks
-rwxr-xr-x. 1 root root      17528 Feb 21  2013 ul
lrwxrwxrwx. 1 root root         20 May 14  2018 ulockmgr_server -&amp;gt; /bin/ulockmgr_server
-rwxr-xr-x. 1 root root      31752 Jun 22  2012 unexpand
-rwxr-xr-x. 1 root root      39008 Jun 22  2012 uniq
-rwxr-xr-x. 1 root root       4206 Sep 11  2012 unix-lpr.sh
lrwxrwxrwx. 1 root root          2 May 14  2018 unlzma -&amp;gt; xz
lrwxrwxrwx. 1 root root         27 Jul  5  2018 unpack200 -&amp;gt; /etc/alternatives/unpack200
-rwxr-xr-x. 1 root root      61592 Feb 21  2013 unprotoize
-rwxr-xr-x. 1 root root      10208 Feb 21  2013 unshare
lrwxrwxrwx. 1 root root          2 May 14  2018 unxz -&amp;gt; xz
-rwxr-xr-x. 2 root root     164128 Nov 11  2010 unzip
-rwxr-xr-x. 1 root root      76784 Nov 11  2010 unzipsfx
-rwxr-xr-x. 1 root root      40720 Oct 10  2012 updatedb
-rwxr-xr-x. 1 root root      17584 Aug 25  2010 update-desktop-database
-rwxr-xr-x. 1 root root       1275 Feb 21  2013 update-gdk-pixbuf-loaders
-rwxr-xr-x. 1 root root       1260 Feb 21  2013 update-gtk-immodules
-rwxr-xr-x. 1 root root      50360 Nov 11  2010 update-mime-database
-rwxr-xr-x. 1 root root       8360 Nov 15  2012 uptime
-rwxr-xr-x. 1 root root      12437 Jul 19  2011 urlgrabber
-rwxr-xr-x. 1 root root       4202 Mar 17  2010 usb-devices
-rwxr-xr-x. 1 root root      23952 Dec  7  2011 usbhid-dump
lrwxrwxrwx. 1 root root          9 May 14  2018 userformat -&amp;gt; usermount
-rwxr-xr-x. 1 root root      45720 Aug 22  2010 userinfo
-rwxr-xr-x. 1 root root      29896 Aug 22  2010 usermount
-rwxr-xr-x. 1 root root      39176 Aug 22  2010 userpasswd
-rwxr-xr-x. 1 root root      27712 Jun 22  2012 users
-rwxr-xr-x. 1 root root      14192 Jul 19  2011 utmpdump
-rwxr-xr-x. 1 root root       9360 Feb 21  2013 uuidgen
-rwxr-xr-x. 1 root root       2220 Aug 16  2010 uz
-rwxr-xr-x. 1 root root     117024 Jun 22  2012 vdir
-rwxr-xr-x. 1 root root       9096 Dec  7  2011 verify_blkparse
-rwxr-xr-x. 1 root root       9415 Jun 22  2012 verifytree
-rwxr-xr-x. 1 root root    1967072 Apr  5  2012 vim
lrwxrwxrwx. 1 root root          3 May 14  2018 vimdiff -&amp;gt; vim
-rwxr-xr-x. 1 root root       2084 Apr  5  2012 vimtutor
-rwxr-xr-x. 1 root root      16520 Jan 21  2013 vino-passwd
-rwxr-xr-x. 1 root root      75688 Jan 21  2013 vino-preferences
lrwxrwxrwx. 1 root root         37 Jun  7  2018 vmhgfs-fuse -&amp;gt; /usr/lib/vmware-tools/bin64/appLoader
-rwxr-xr-x. 1 root root       8328 Feb 23  2013 vmmouse_detect
-rwxr-xr-x. 1 root root      24880 Nov 15  2012 vmstat
-rwxr-xr-x. 1 root root       9202 Jun  7  2018 vm-support
-rwxr-xr-x. 1 root root     421976 Jun  7  2018 vmware-config-tools.pl
lrwxrwxrwx. 1 root root         37 Jun  7  2018 vmware-guestproxycerttool -&amp;gt; /usr/lib/vmware-tools/bin64/appLoader
lrwxrwxrwx. 1 root root         37 Jun  7  2018 vmware-hgfsclient -&amp;gt; /usr/lib/vmware-tools/bin64/appLoader
lrwxrwxrwx. 1 root root         37 Jun  7  2018 vmware-toolbox-cmd -&amp;gt; /usr/lib/vmware-tools/bin64/appLoader
-rwxr-xr-x. 1 root root     221099 Jun  7  2018 vmware-uninstall-tools.pl
lrwxrwxrwx. 1 root root         52 Jun  7  2018 vmware-user -&amp;gt; /usr/lib/vmware-tools/bin64/vmware-user-suid-wrapper
lrwxrwxrwx. 1 root root         43 Jun  7  2018 vmware-xferlogs -&amp;gt; /usr/lib/vmware-tools/bin64/vmware-xferlogs
-rwxr-xr-x. 1 root root       8912 Nov 10  2010 volname
-rwxr-xr-x. 1 root root      31776 Aug 17  2010 vorbiscomment
-rwxr-xr-x. 1 root root      15096 Nov 15  2012 w
-r-xr-sr-x. 1 root tty       15224 Jul 19  2011 wall
-rwxr-xr-x. 1 root root      16792 Nov 15  2012 watch
-rwxr-xr-x. 1 root root      14176 Nov 11  2010 watchgnupg
-rwxr-xr-x. 1 root root      46328 Aug 18  2010 wavpack
-rwxr-xr-x. 1 root root    1729376 Feb 21  2013 wbinfo
-rwxr-xr-x. 1 root root      36408 Jun 22  2012 wc
-rwxr-xr-x. 1 root root      68640 Feb 21  2013 wdaemon
-rwxr-xr-x. 1 root root        284 Sep 11  2012 wftopfa
-rwxr-xr-x. 1 root root     362456 Oct 10  2012 wget
-rwxr-xr-x. 1 root root       1784 Feb 21  2013 whatis
-rwxr-xr-x. 1 root root      14616 Feb 21  2013 whereis
-rwxr-xr-x. 1 root root      25528 Sep 23  2011 which
-rwxr-xr-x. 1 root root      30304 Sep 23  2011 whiptail
-rwxr-xr-x. 1 root root      48952 Jun 22  2012 who
-rwxr-xr-x. 1 root root      26280 Jun 22  2012 whoami
-rwxr-xr-x. 1 root root      18368 Jul 18  2011 wnck-urgency-monitor
-rwxr-xr-x. 1 root root     410728 Nov 12  2012 wodim
-rwxr-sr-x. 1 root tty       12016 Feb 21  2013 write
-rwxr-xr-x. 1 root root      13200 Feb 21  2013 wrjpgcom
lrwxrwxrwx. 1 root root         23 Jul  5  2018 wsgen -&amp;gt; /etc/alternatives/wsgen
lrwxrwxrwx. 1 root root         26 Jul  5  2018 wsimport -&amp;gt; /etc/alternatives/wsimport
-rwxr-xr-x. 1 root root      32720 Aug 18  2010 wvgain
-rwxr-xr-x. 1 root root      44128 Aug 18  2010 wvunpack
lrwxrwxrwx. 1 root root          4 May 14  2018 X -&amp;gt; Xorg
lrwxrwxrwx. 1 root root          7 May 14  2018 x86_64 -&amp;gt; setarch
-rwxr-xr-x. 2 root root     268160 Feb 21  2013 x86_64-redhat-linux-gcc
-rwxr-xr-x. 1 root root      46648 Nov 10  2010 xargs
-rwxr-xr-x. 1 root root      43176 Aug 18  2010 xauth
-rwxr-xr-x. 1 root root      15050 Sep 23  2011 xdg-desktop-icon
-rwxr-xr-x. 1 root root      37949 Sep 23  2011 xdg-desktop-menu
-rwxr-xr-x. 1 root root      19059 Sep 23  2011 xdg-email
-rwxr-xr-x. 1 root root      24459 Sep 23  2011 xdg-icon-resource
-rwxr-xr-x. 1 root root      29569 Sep 23  2011 xdg-mime
-rwxr-xr-x. 1 root root      11201 Sep 23  2011 xdg-open
-rwxr-xr-x. 1 root root      21062 Sep 23  2011 xdg-screensaver
-rwxr-xr-x. 1 root root      25055 Sep 23  2011 xdg-settings
-rwxr-xr-x. 1 root root        234 Nov 11  2010 xdg-user-dir
-rwxr-xr-x. 1 root root      26936 Aug 24  2010 xdg-user-dirs-gtk-update
-rwxr-xr-x. 1 root root      21768 Nov 11  2010 xdg-user-dirs-update
-rwxr-xr-x. 1 root root      38112 Feb 23  2013 xdpyinfo
-rwxr-xr-x. 1 root root      12800 Feb 21  2013 xdriinfo
-rwxr-xr-x. 1 root root      25976 Feb 23  2013 xev
-rwxr-xr-x. 1 root root      13072 Feb 23  2013 xgamma
-rwxr-xr-x. 1 root root     224960 Jun  2  2014 xgettext
-rwxr-xr-x. 1 root root      17736 Feb 23  2013 xhost
-rwxr-xr-x. 1 root root      22576 Aug 16  2010 xinit
-rwxr-xr-x. 1 root root      51072 Feb 23  2013 xinput
lrwxrwxrwx. 1 root root         21 Jul  5  2018 xjc -&amp;gt; /etc/alternatives/xjc
-rwxr-xr-x. 1 root root     183296 Feb 23  2013 xkbcomp
-rwxr-xr-x. 1 root root      15368 Feb 23  2013 xkill
-rwxr-xr-x. 1 root root      12720 Feb 23  2013 xlsatoms
-rwxr-xr-x. 1 root root      16576 Feb 23  2013 xlsclients
-rwxr-xr-x. 1 root root      21208 Feb 23  2013 xlsfonts
-rwxr-xr-x. 1 root root      19552 Nov 29  2012 xmlcatalog
-rwxr-xr-x. 1 root root      64864 Nov 29  2012 xmllint
-rwxr-xr-x. 1 root root      26080 Jun 13  2012 xmlwf
-rwxr-xr-x. 1 root root      35744 Feb 23  2013 xmodmap
-rwsr-xr-x. 1 root root    2261800 Feb 22  2013 Xorg
-rwxr-xr-x. 1 root root      40544 Feb 23  2013 xprop
-rwxr-xr-x. 1 root root      53336 Feb 23  2013 xrandr
-rwxr-xr-x. 1 root root      28368 Feb 23  2013 xrdb
-rwxr-xr-x. 1 root root      13336 Feb 23  2013 xrefresh
-rwxr-xr-x. 1 root root      34064 Feb 23  2013 xset
-rwxr-xr-x. 1 root root      10784 Feb 23  2013 xsetmode
-rwxr-xr-x. 1 root root      11544 Feb 23  2013 xsetpointer
-rwxr-xr-x. 1 root root      19776 Feb 23  2013 xsetroot
-rwxr-xr-x. 1 root root      46592 Feb 23  2013 xsetwacom
-rwxr-xr-x. 1 root root      29568 Sep 13  2012 xsltproc
-rwxr-xr-x. 1 root root      16600 Feb 23  2013 xstdcmap
-rwxr-xr-x. 1 root root       4093 Mar 22  2017 xsubpp
-rwxr-xr-x. 1 root root       1573 Jan  8  2013 xulrunner
-rwxr-xr-x. 1 root root      12752 Aug 22  2010 xvattr
-rwxr-xr-x. 1 root root      15000 Feb 23  2013 xvinfo
-rwxr-xr-x. 1 root root      44176 Feb 23  2013 xwininfo
-rwxr-xr-x. 1 root root      17592 Apr  5  2012 xxd
-rwxr-xr-x. 1 root root      51840 Aug 22  2010 xz
lrwxrwxrwx. 1 root root          2 May 14  2018 xzcat -&amp;gt; xz
lrwxrwxrwx. 1 root root          6 May 14  2018 xzcmp -&amp;gt; xzdiff
-rwxr-xr-x. 1 root root      15464 Aug 22  2010 xzdec
-rwxr-xr-x. 1 root root       5220 Aug 22  2010 xzdiff
lrwxrwxrwx. 1 root root          6 May 14  2018 xzegrep -&amp;gt; xzgrep
lrwxrwxrwx. 1 root root          6 May 14  2018 xzfgrep -&amp;gt; xzgrep
-rwxr-xr-x. 1 root root       5207 Aug 22  2010 xzgrep
-rwxr-xr-x. 1 root root       1806 Aug 22  2010 xzless
-rwxr-xr-x. 1 root root       2167 Aug 22  2010 xzmore
-rwxr-xr-x. 1 root root        245 May 24  2018 yarn
-rwxr-xr-x. 1 root root     329320 Feb 24  2012 yelp
-rwxr-xr-x. 1 root root      25664 Jun 22  2012 yes
-rwxr-xr-x. 1 root root        801 Feb 22  2013 yum
-rwxr-xr-x. 1 root root       9056 Jun 22  2012 yum-builddep
-rwxr-xr-x. 1 root root       8007 Jun 22  2012 yum-config-manager
-rwxr-xr-x. 1 root root       7603 Jun 22  2012 yum-debug-dump
-rwxr-xr-x. 1 root root       7931 Jun 22  2012 yum-debug-restore
-rwxr-xr-x. 1 root root      13580 Jun 22  2012 yumdownloader
-rwxr-xr-x. 1 root root      11030 Jun 22  2012 yum-groups-manager
-rwxr-xr-x. 1 root root         67 Nov 11  2010 zcmp
-rwxr-xr-x. 1 root root       4441 Nov 11  2010 zdiff
-rwxr-xr-x. 1 root root         62 Nov 11  2010 zegrep
-rwxr-xr-x. 1 root root      92296 Aug 16  2010 zenity
-rwxr-xr-x. 1 root root         62 Nov 11  2010 zfgrep
-rwxr-xr-x. 1 root root       2022 Nov 11  2010 zforce
-rwxr-xr-x. 1 root root       4975 Nov 11  2010 zgrep
-rwxr-xr-x. 1 root root     216008 Nov 11  2010 zip
-rwxr-xr-x. 1 root root     110376 Nov 11  2010 zipcloak
-rwxr-xr-x. 1 root root       2953 Oct 10  2008 zipgrep
-rwxr-xr-x. 2 root root     164128 Nov 11  2010 zipinfo
-rwxr-xr-x. 1 root root     101856 Nov 11  2010 zipnote
-rwxr-xr-x. 1 root root     105280 Nov 11  2010 zipsplit
-rwxr-xr-x. 1 root root       1731 Nov 11  2010 zless
-rwxr-xr-x. 1 root root       2605 Nov 11  2010 zmore
-rwxr-xr-x. 1 root root       5246 Nov 11  2010 znew
-rwxr-xr-x. 1 root root        413 Mar 27  2018 zookeeper-client
-rwxr-xr-x. 1 root root        739 Mar 27  2018 zookeeper-server
-rwxr-xr-x. 1 root root        740 Mar 27  2018 zookeeper-server-cleanup
-rwxr-xr-x. 1 root root        750 Mar 27  2018 zookeeper-server-initialize
lrwxrwxrwx. 1 root root          6 May 14  2018 zsoelim -&amp;gt; soelim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /usr/bin部分内容&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('e894207e-cc36-48fd-a1ab-ad0ed6b9d250')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_e894207e-cc36-48fd-a1ab-ad0ed6b9d250&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_e894207e-cc36-48fd-a1ab-ad0ed6b9d250&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('e894207e-cc36-48fd-a1ab-ad0ed6b9d250',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_e894207e-cc36-48fd-a1ab-ad0ed6b9d250&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /bin
total 7800
-rwxr-xr-x. 1 root root    123 Feb 21  2013 alsaunmute
-rwxr-xr-x. 1 root root  27776 Jun 22  2012 arch
lrwxrwxrwx. 1 root root      4 May 14  2018 awk -&amp;gt; gawk
-rwxr-xr-x. 1 root root  26264 Jun 22  2012 basename
-rwxr-xr-x. 1 root root 938768 Feb 21  2013 bash
-rwxr-xr-x. 1 root root  48568 Jun 22  2012 cat
-rwxr-xr-x. 1 root root  55472 Jun 22  2012 chgrp
-rwxr-xr-x. 1 root root  52472 Jun 22  2012 chmod
-rwxr-xr-x. 1 root root  57464 Jun 22  2012 chown
-rwxr-xr-x. 1 root root 122736 Jun 22  2012 cp
-rwxr-xr-x. 1 root root 135744 Oct 30  2012 cpio
lrwxrwxrwx. 1 root root      4 May 14  2018 csh -&amp;gt; tcsh
-rwxr-xr-x. 1 root root  45408 Jun 22  2012 cut
-rwxr-xr-x. 1 root root 109672 Oct 17  2012 dash
-rwxr-xr-x. 1 root root  59488 Jun 22  2012 date
-rwxr-xr-x. 1 root root  12600 Sep 13  2012 dbus-cleanup-sockets
-rwxr-xr-x. 1 root root 339080 Sep 13  2012 dbus-daemon
-rwxr-xr-x. 1 root root  18560 Sep 13  2012 dbus-monitor
-rwxr-xr-x. 1 root root  22456 Sep 13  2012 dbus-send
-rwxr-xr-x. 1 root root  11008 Sep 13  2012 dbus-uuidgen
-rwxr-xr-x. 1 root root  53944 Jun 22  2012 dd
-rwxr-xr-x. 1 root root  77424 Jun 22  2012 df
-rwxr-xr-x. 1 root root   9944 Feb 21  2013 dmesg
lrwxrwxrwx. 1 root root      8 May 14  2018 dnsdomainname -&amp;gt; hostname
lrwxrwxrwx. 1 root root      8 May 14  2018 domainname -&amp;gt; hostname
-rwxr-xr-x. 1 root root  81120 Nov 11  2010 dumpkeys
-rwxr-xr-x. 1 root root  28176 Jun 22  2012 echo
-rwxr-xr-x. 2 root root  53400 Nov 10  2010 ed
-rwxr-xr-x. 1 root root 106400 Mar  7  2012 egrep
-rwxr-xr-x. 1 root root  26368 Jun 22  2012 env
lrwxrwxrwx. 1 root root      2 May 14  2018 ex -&amp;gt; vi
-rwxr-xr-x. 1 root root  25120 Jun 22  2012 false
-rwxr-xr-x. 1 root root  71392 Mar  7  2012 fgrep
-rwxr-xr-x. 1 root root 238952 Nov 10  2010 find
-rwxr-xr-x. 1 root root  41896 Feb 21  2013 findmnt
-rwsr-x---. 1 root fuse  32336 Dec  7  2011 fusermount
-rwxr-xr-x. 1 root root 382456 Aug  7  2012 gawk
-rwxr-xr-x. 1 root root  33488 Jun  2  2014 gettext
-rwxr-xr-x. 1 root root 111360 Mar  7  2012 grep
lrwxrwxrwx. 1 root root      3 May 14  2018 gtar -&amp;gt; tar
-rwxr-xr-x. 1 root root     61 Nov 11  2010 gunzip
-rwxr-xr-x. 1 root root  68616 Nov 11  2010 gzip
-rwxr-xr-x. 1 root root  17848 May 10  2012 hostname
-rwxr-xr-x. 1 root root  14920 Feb 22  2013 ipcalc
lrwxrwxrwx. 1 root root     41 May 14  2018 iptables-xml -&amp;gt; /etc/alternatives/bin-iptables-xml.x86_64
lrwxrwxrwx. 1 root root     20 May 14  2018 iptables-xml-1.4.7 -&amp;gt; /sbin/iptables-multi
-rwxr-xr-x. 1 root root  11296 Nov 11  2010 kbd_mode
-rwxr-xr-x. 1 root root  15224 Feb 21  2013 kill
-rwxr-xr-x. 1 root root  26256 Jun 22  2012 link
-rwxr-xr-x. 1 root root  49504 Jun 22  2012 ln
-rwxr-xr-x. 1 root root 112208 Nov 11  2010 loadkeys
-rwxr-xr-x. 1 root root  31592 Feb 21  2013 login
-rwxr-xr-x. 1 root root 117024 Jun 22  2012 ls
-rwxr-xr-x. 1 root root  59848 Feb 21  2013 lsblk
lrwxrwxrwx. 1 root root      5 May 14  2018 mail -&amp;gt; mailx
-rwxr-xr-x. 1 root root 391224 Aug 22  2010 mailx
-rwxr-xr-x. 1 root root  49384 Jun 22  2012 mkdir
-rwxr-xr-x. 1 root root  32496 Jun 22  2012 mknod
-rwxr-xr-x. 1 root root  38048 Jun 22  2012 mktemp
-rwxr-xr-x. 1 root root  41216 Feb 21  2013 more
-rwsr-xr-x. 1 root root  77208 Feb 21  2013 mount
-rwxr-xr-x. 1 root root   9848 Jul 19  2011 mountpoint
-rwxr-xr-x. 1 root root 113328 Jun 22  2012 mv
-rwxr-xr-x. 1 root root 178896 Nov 11  2010 nano
-rwxr-xr-x. 1 root root 128192 May 10  2012 netstat
-rwxr-xr-x. 1 root root  28784 Jun 22  2012 nice
lrwxrwxrwx. 1 root root      8 May 14  2018 nisdomainname -&amp;gt; hostname
-rwsr-xr-x. 1 root root  40760 Jul 18  2011 ping
-rwsr-xr-x. 1 root root  36488 Jul 18  2011 ping6
-rwxr-xr-x. 1 root root  36808 Feb 22  2013 plymouth
-rwxr-xr-x. 1 root root  87088 Nov 15  2012 ps
-rwxr-xr-x. 1 root root  31656 Jun 22  2012 pwd
-rwxr-xr-x. 1 root root  11576 Feb 21  2013 raw
-rwxr-xr-x. 1 root root  40056 Jun 22  2012 readlink
-rwxr-xr-x. 2 root root  53400 Nov 10  2010 red
-rwxr-xr-x. 1 root root    576 Apr 16  2008 redhat_lsb_init
-rwxr-xr-x. 1 root root  57440 Jun 22  2012 rm
-rwxr-xr-x. 1 root root  40480 Jun 22  2012 rmdir
lrwxrwxrwx. 1 root root      4 May 14  2018 rnano -&amp;gt; nano
-rwxr-xr-x. 1 root root  30600 Feb 21  2013 rpm
lrwxrwxrwx. 1 root root      2 May 14  2018 rvi -&amp;gt; vi
lrwxrwxrwx. 1 root root      2 May 14  2018 rview -&amp;gt; vi
-rwxr-xr-x. 1 root root  72248 Jun 22  2012 sed
-rwxr-xr-x. 1 root root  42384 Nov 11  2010 setfont
-rwxr-xr-x. 1 root root  23672 Aug 22  2010 setserial
lrwxrwxrwx. 1 root root      4 May 14  2018 sh -&amp;gt; bash
-rwxr-xr-x. 1 root root  27848 Jun 22  2012 sleep
-rwxr-xr-x. 1 root root  98968 Jun 22  2012 sort
-rwxr-xr-x. 1 root root  65032 Jun 22  2012 stty
-rwsr-xr-x. 1 root root  34904 Jun 22  2012 su
-rwxr-xr-x. 1 root root  25432 Jun 22  2012 sync
-rwxr-xr-x. 1 root root 395472 Feb 21  2013 tar
-rwxr-xr-x. 1 root root  14880 Feb 21  2013 taskset
-rwxr-xr-x. 1 root root 387328 Feb 21  2013 tcsh
-rwxr-xr-x. 1 root root  52656 Jun 22  2012 touch
-rwxr-xr-x. 1 root root  11392 Jul 18  2011 tracepath
-rwxr-xr-x. 1 root root  12288 Jul 18  2011 tracepath6
-rwxr-xr-x. 1 root root  57480 Nov 11  2010 traceroute
lrwxrwxrwx. 1 root root     10 May 14  2018 traceroute6 -&amp;gt; traceroute
-rwxr-xr-x. 1 root root  25120 Jun 22  2012 true
-rwxr-xr-x. 1 root root  15008 Dec  7  2011 ulockmgr_server
-rwsr-xr-x. 1 root root  53472 Feb 21  2013 umount
-rwxr-xr-x. 1 root root  27776 Jun 22  2012 uname
-rwxr-xr-x. 1 root root   2555 Nov 11  2010 unicode_start
-rwxr-xr-x. 1 root root    363 Nov 11  2010 unicode_stop
-rwxr-xr-x. 1 root root  25760 Jun 22  2012 unlink
-rwxr-xr-x. 1 root root  10256 Feb 22  2013 usleep
-rwxr-xr-x. 1 root root 770248 Apr  5  2012 vi
lrwxrwxrwx. 1 root root      2 May 14  2018 view -&amp;gt; vi
lrwxrwxrwx. 1 root root      8 May 14  2018 ypdomainname -&amp;gt; hostname
-rwxr-xr-x. 1 root root     62 Nov 11  2010 zcat&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /bin&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f8996d22-4fb1-497d-99f2-a1267b52e25e')&quot; readability=&quot;31&quot;&gt;&lt;img id=&quot;code_img_closed_f8996d22-4fb1-497d-99f2-a1267b52e25e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f8996d22-4fb1-497d-99f2-a1267b52e25e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f8996d22-4fb1-497d-99f2-a1267b52e25e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f8996d22-4fb1-497d-99f2-a1267b52e25e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /usr/local/sbin
total 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /usr/local/sbin&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('106fd735-d92e-4f76-910c-8a0b32947d18')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_106fd735-d92e-4f76-910c-8a0b32947d18&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_106fd735-d92e-4f76-910c-8a0b32947d18&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('106fd735-d92e-4f76-910c-8a0b32947d18',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_106fd735-d92e-4f76-910c-8a0b32947d18&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /usr/sbin
total 28472
-rwxr-xr-x. 1 root root       28488 Feb 22  2013 abrtd
-rwxr-xr-x. 1 root root       24224 Feb 22  2013 abrt-dbus
-rwxr-xr-x. 1 root root        2832 Feb 22  2013 abrt-install-ccpp-hook
-rwxr-xr-x. 1 root root       19208 Feb 22  2013 abrt-server
lrwxrwxrwx. 1 root root          10 May 14  2018 accept -&amp;gt; cupsaccept
lrwxrwxrwx. 1 root root          17 May 14  2018 accton -&amp;gt; ../../sbin/accton
-rwxr-x---. 1 root root       27312 Aug 18  2010 acpid
-rwxr-xr-x. 1 root root        3126 Sep 21  2009 addgnupghome
lrwxrwxrwx. 1 root root           7 May 14  2018 adduser -&amp;gt; useradd
lrwxrwxrwx. 1 root root          18 May 14  2018 alsactl -&amp;gt; ../../sbin/alsactl
-rwxr-xr-x. 1 root root       18199 Sep 12  2012 alsa-delay
-rwxr-xr-x. 1 root root       27496 Jun 22  2012 alternatives
-rwxr-xr-x. 1 root root       38968 Jul 18  2011 anacron
-rwxr-xr-x. 1 root root        3916 Feb 22  2013 apachectl
-rwxr-xr-x. 1 root root        2264 Dec 18  2009 applygnupgdefaults
-rwxr-xr-x. 1 root root       42704 Feb 21  2013 arpd
lrwxrwxrwx. 1 root root          12 May 14  2018 arping -&amp;gt; /sbin/arping
-rwxr-xr-x. 1 root root       23968 Jan 30  2012 atd
-rwxr-xr-x. 1 root root          67 Jan 30  2012 atrun
lrwxrwxrwx. 1 root root          35 May 14  2018 authconfig -&amp;gt; /usr/share/authconfig/authconfig.py
lrwxrwxrwx. 1 root root          39 May 14  2018 authconfig-gtk -&amp;gt; /usr/share/authconfig/authconfig-gtk.py
lrwxrwxrwx. 1 root root          39 May 14  2018 authconfig-tui -&amp;gt; /usr/share/authconfig/authconfig-tui.py
-rwxr-xr-x. 1 root root       38688 Feb 21  2013 avahi-autoipd
-rwxr-xr-x. 1 root root       13968 Jun 22  2012 avcstat
-rwxr-xr-x. 1 root root      109472 Nov 10  2010 bccmd
-rwxr-xr-x. 1 root root       18200 Dec  7  2011 biosdecode
-rwxr-xr-x. 1 root root      500176 Nov 10  2010 bluetoothd
-rwxr-xr-x. 1 root root       18984 Jun 22  2012 bonobo-activation-sysconf
-rwxr-xr-x. 1 root root       37696 Feb 21  2013 brctl
-rwx------. 1 root root      753736 Feb 21  2013 build-locale-archive
-rwxr-xr-x. 1 root root         644 Feb 21  2013 cacertdir_rehash
-rwxr-xr-x. 1 root root       16616 Dec  7  2011 capsh
-rwxr-xr-x. 1 root root       27936 Aug 22  2010 chat
-rwxr-xr-x. 1 root root       42616 Dec  7  2011 chpasswd
-rwxr-xr-x. 1 root root       31776 Jun 22  2012 chroot
-rwxr-xr-x. 1 root root       18936 Nov 10  2010 ck-log-system-restart
-rwxr-xr-x. 1 root root       19232 Nov 10  2010 ck-log-system-start
-rwxr-xr-x. 1 root root       18936 Nov 10  2010 ck-log-system-stop
-rwxr-xr-x. 1 root root       15520 Jul 18  2011 clockdiff
-rwxr-xr-x. 1 root root      155016 Nov 10  2010 console-kit-daemon
-rwxr-xr-x. 1 root root       70056 Nov 20  2012 convertquota
-rwxr-xr-x. 1 root root       22576 Feb 21  2013 cpuspeed
-rwxr-xr-x. 1 root root        9008 Jun 24  2011 cracklib-check
-rwxr-xr-x. 1 root root         218 Jun 24  2011 cracklib-format
-rwxr-xr-x. 1 root root        9536 Jun 24  2011 cracklib-packer
-rwxr-xr-x. 1 root root        8648 Jun 24  2011 cracklib-unpacker
-rwxr-xr-x. 1 root root         990 Jun 24  2011 create-cracklib-dict
-rwxr-xr-x. 1 root root       59832 Jul 18  2011 crond
-rwxr-xr-x. 1 root root       10488 Nov 20  2012 cupsaccept
-rwxr-xr-x. 1 root root       10544 Nov 20  2012 cupsaddsmb
-rwxr-xr-x. 1 root root       10528 Nov 20  2012 cupsctl
-rwxr-xr-x. 1 root root      435896 Nov 20  2012 cupsd
lrwxrwxrwx. 1 root root          10 May 14  2018 cupsdisable -&amp;gt; cupsaccept
lrwxrwxrwx. 1 root root          10 May 14  2018 cupsenable -&amp;gt; cupsaccept
-rwxr-xr-x. 1 root root       28728 Nov 20  2012 cupsfilter
-rwxr-xr-x. 1 root root       65912 Nov 11  2010 cups-genppd.5.2
-rwxr-xr-x. 1 root root       35062 Nov 11  2010 cups-genppdupdate
lrwxrwxrwx. 1 root root          10 May 14  2018 cupsreject -&amp;gt; cupsaccept
-rwxr-xr-x. 1 root root       80856 Dec  7  2011 dmidecode
-rwxr-xr-x. 1 root root      185888 Feb 21  2013 dnsmasq
-rwxr-xr-x. 1 root root       14632 Jul 17  2012 dump-acct
-rwxr-xr-x. 1 root root       14712 Jul 17  2012 dump-utmp
-rwxr-xr-x. 1 root root       14456 Feb 21  2013 e2freefrag
-rwxr-xr-x. 1 root root       78560 Nov 20  2012 edquota
-rwxr-xr-x. 1 root root       50984 Jun 21  2012 efibootmgr
-rwxr-xr-x. 1 root root       32112 Nov 10  2010 eject
lrwxrwxrwx. 1 root root          18 May 14  2018 ethtool -&amp;gt; ../../sbin/ethtool
-rwxr-xr-x. 1 root root       11416 Feb 21  2013 fdformat
-rwxr-xr-x. 1 root root       13608 Feb 21  2013 filefrag
-rwxr-xr-x. 1 root root        8538 Feb 21  2013 firstboot
-rwxr-xr-x. 1 root root       29858 Sep 23  2011 foomatic-addpjloptions
-rwxr-xr-x. 1 root root        1371 Sep 23  2011 foomatic-cleanupdrivers
-rwxr-xr-x. 1 root root        4570 Sep 23  2011 foomatic-extract-text
-rwxr-xr-x. 1 root root        1539 Sep 23  2011 foomatic-fix-xml
-rwxr-xr-x. 1 root root        2140 Sep 23  2011 foomatic-getpjloptions
-rwxr-xr-x. 1 root root        3247 Sep 23  2011 foomatic-kitload
-rwxr-xr-x. 1 root root        4497 Sep 23  2011 foomatic-nonumericalids
-rwxr-xr-x. 1 root root        9322 Sep 23  2011 foomatic-preferred-driver
-rwxr-xr-x. 1 root root        5105 Sep 23  2011 foomatic-printermap-to-gutenprint-xml
-rwxr-xr-x. 1 root root        2606 Sep 23  2011 foomatic-replaceoldprinterids
-rwxr-xr-x. 1 root root         388 Feb 21  2013 gdm
-rwxr-xr-x. 1 root root      170784 Feb 21  2013 gdm-binary
-rwxr-xr-x. 1 root root          33 Feb 21  2013 genhomedircon
-rwxr-xr-x. 1 root root       10264 Dec  7  2011 getcap
-rwxr-xr-x. 1 root root        8728 Jun 22  2012 getenforce
-rwxr-xr-x. 1 root root        9272 Dec  7  2011 getpcaps
-rwxr-xr-x. 1 root root       10648 Jun 22  2012 getsebool
-rwx------. 1 root root      686480 Feb 21  2013 glibc_post_upgrade.x86_64
-rwxr-x---. 1 root root       54968 Dec  7  2011 groupadd
-rwxr-x---. 1 root root       46512 Dec  7  2011 groupdel
-rwxr-x---. 1 root root       50800 Dec  7  2011 groupmems
-rwxr-x---. 1 root root       61360 Dec  7  2011 groupmod
-rwxr-xr-x. 1 root root       50600 Dec  7  2011 grpck
-rwxr-xr-x. 1 root root       42416 Dec  7  2011 grpconv
-rwxr-xr-x. 1 root root       42416 Dec  7  2011 grpunconv
-rwxr-xr-x. 1 root root      359064 Jul 19  2011 hald
-rwxr-xr-x. 1 root root       33416 Nov 10  2010 hciattach
-rwxr-xr-x. 1 root root      115032 Nov 10  2010 hciconfig
-rwxr-xr-x. 1 root root       19984 Feb 22  2013 htcacheclean
-rwxr-xr-x. 1 root root      354816 Feb 22  2013 httpd
-rwxr-xr-x. 1 root root      368168 Feb 22  2013 httpd.event
-rwxr-xr-x. 1 root root      367240 Feb 22  2013 httpd.worker
-rwxr-xr-x. 1 root root       11192 Feb 22  2013 httxt2dbm
lrwxrwxrwx. 1 root root          18 May 14  2018 hwclock -&amp;gt; ../../sbin/hwclock
-rwxr-xr-x. 2 root root       26520 Feb 21  2013 iconvconfig
-rwxr-xr-x. 2 root root       26520 Feb 21  2013 iconvconfig.x86_64
-rwxr-xr-x. 1 root root       39952 Feb 21  2013 irqbalance
-rwxr-xr-x. 1 root root       31800 Apr  5  2012 lchage
-rwxr-xr-x. 1 root root       13552 Feb 21  2013 ldattach
-rwxr-xr-x. 1 root root       52808 Feb 21  2013 ledctl
-rwxr-xr-x. 1 root root       55168 Feb 21  2013 ledmon
-rwxr-xr-x. 1 root root       27976 Apr  5  2012 lgroupadd
-rwxr-xr-x. 1 root root       26888 Apr  5  2012 lgroupdel
-rwxr-xr-x. 1 root root       32800 Apr  5  2012 lgroupmod
-rwxr-xr-x. 1 root root       16024 Apr  5  2012 lid
-rwxr-xr-x. 1 root root       32632 Apr  5  2012 lnewusers
-rwxr-xr-x. 1 root root       18064 Feb 21  2013 lnstat
lrwxrwxrwx. 1 root root          17 May 14  2018 load_policy -&amp;gt; /sbin/load_policy
-rwx--s--x. 1 root lock       15808 Aug 18  2010 lockdev
-rwxr-xr-x. 1 root root       59744 Aug 15  2012 logrotate
-rwxr-xr-x. 1 root root        2197 Sep 23  2011 lokkit
-rwxr-xr-x. 1 root root       27208 Nov 20  2012 lpadmin
-rwxr-xr-x. 1 root root       30800 Apr  5  2012 lpasswd
lrwxrwxrwx. 1 root root          27 May 14  2018 lpc -&amp;gt; /etc/alternatives/print-lpc
-rwxr-xr-x. 1 root root       14688 Nov 20  2012 lpc.cups
-rwxr-xr-x. 1 root root       14576 Nov 20  2012 lpinfo
-rwxr-xr-x. 1 root root       10560 Nov 20  2012 lpmove
-rwxr-xr-x. 1 root root      145872 Apr  3  2012 lsof
lrwxrwxrwx. 1 root root          14 May 14  2018 lsusb -&amp;gt; /usr/bin/lsusb
-rwxr-xr-x. 1 root root       33040 Apr  5  2012 luseradd
-rwxr-xr-x. 1 root root       28784 Apr  5  2012 luserdel
-rwxr-xr-x. 1 root root       35144 Apr  5  2012 lusermod
-rwxr-xr-x. 1 root root      248760 Feb 21  2013 makedumpfile
-rwxr-xr-x. 1 root root       14118 Feb 21  2013 makewhatis
lrwxrwxrwx. 1 root root          23 May 14  2018 matchpathcon -&amp;gt; ../../sbin/matchpathcon
lrwxrwxrwx. 1 root root          15 May 14  2018 mkdict -&amp;gt; cracklib-format
-rwxr-xr-x. 1 root root        9624 Feb 21  2013 mklost+found
-rwxr-xr-x. 1 root root       10640 Nov 10  2010 mksock
-rwxr-xr-x. 1 root root      317096 Nov 10  2010 modem-manager
-rwxr-xr-x. 1 root root       64512 Aug 16  2010 mtr
-rwxr-xr-x. 1 root root      112912 Nov 12  2012 netscsid
-rwxr-xr-x. 1 root root      858456 Feb 21  2013 NetworkManager
-rwxr-xr-x. 1 root root       65432 Dec  7  2011 newusers
-rwxr-xr-x. 1 root root       20352 Feb 21  2013 nstat
-rwxr-xr-x. 1 root root      614144 Feb 22  2013 ntpd
-rwxr-xr-x. 1 root root       70864 Feb 22  2013 ntpdate
-rwxr-xr-x. 1 root root      190160 Feb 22  2013 ntpdc
-rwxr-xr-x. 1 root root      107456 Feb 22  2013 ntp-keygen
-rwxr-xr-x. 1 root root      179728 Feb 22  2013 ntpq
-rwxr-xr-x. 1 root root       19896 Feb 22  2013 ntptime
-rwxr-xr-x. 1 root root       31192 Jun 22  2012 ntsysv
-rwxr-xr-x. 1 root root       14632 Feb 21  2013 open_init_pty
-rwxr-xr-x. 1 root root       12144 Dec  7  2011 ownership
-rwxr-xr-x. 1 root root      353928 Feb 21  2013 packagekitd
lrwxrwxrwx. 1 root root          15 May 14  2018 packer -&amp;gt; cracklib-packer
-rwxr-xr-x. 1 root root        9156 Feb 21  2013 pethtool
-rwxr-xr-x. 1 root root        2932 Feb 21  2013 pifconfig
lrwxrwxrwx. 1 root root          10 May 14  2018 ping6 -&amp;gt; /bin/ping6
-rwxr-xr-x. 1 root root       15536 Feb 21  2013 pk-device-rebind
-rwxr-xr-x. 1 root root       18704 Nov 27  2012 pluginviewer
-rwxr-xr-x. 1 root root        6349 Feb 22  2013 plymouth-set-default-theme
lrwxrwxrwx. 1 root root          33 May 14  2018 pm-hibernate -&amp;gt; /usr/lib64/pm-utils/bin/pm-action
-rwxr-xr-x. 1 root root        1570 Jul 18  2012 pm-powersave
lrwxrwxrwx. 1 root root          33 May 14  2018 pm-suspend -&amp;gt; /usr/lib64/pm-utils/bin/pm-action
lrwxrwxrwx. 1 root root          33 May 14  2018 pm-suspend-hybrid -&amp;gt; /usr/lib64/pm-utils/bin/pm-action
-rwxr-xr-x. 1 root root      213736 Dec  2  2011 postalias
-rwxr-xr-x. 1 root root      119400 Dec  2  2011 postcat
-rwxr-xr-x. 1 root root      304200 Dec  2  2011 postconf
-rwxr-sr-x. 1 root postdrop  180808 Dec  2  2011 postdrop
-rwxr-xr-x. 1 root root      110536 Dec  2  2011 postfix
-rwxr-xr-x. 1 root root      118792 Dec  2  2011 postkick
-rwxr-xr-x. 1 root root      114664 Dec  2  2011 postlock
-rwxr-xr-x. 1 root root      110728 Dec  2  2011 postlog
-rwxr-xr-x. 1 root root      217800 Dec  2  2011 postmap
-rwxr-xr-x. 1 root root      127400 Dec  2  2011 postmulti
-rwxr-sr-x. 1 root postdrop  213736 Dec  2  2011 postqueue
-rwxr-xr-x. 1 root root      127400 Dec  2  2011 postsuper
-r-xr-xr-x. 1 root root      359592 Aug 22  2010 pppd
-rwxr-xr-x. 1 root root       53512 Aug 22  2010 pppdump
-r-xr-xr-x. 1 root root       19672 Aug 22  2010 pppoe-discovery
-rwxr-xr-x. 1 root root       17088 Aug 22  2010 pppstats
-rwxr-xr-x. 1 root root     1320696 Dec  7  2011 prelink
-rwxr-xr-x. 1 root root       42416 Dec  7  2011 pwck
-rwxr-xr-x. 1 root root       38296 Dec  7  2011 pwconv
-rwxr-xr-x. 1 root root       29016 Dec  7  2011 pwunconv
-rwxr-xr-x. 1 root root       74400 Nov 20  2012 quota_nld
-rwxr-xr-x. 1 root root       11480 Nov 20  2012 quotastats
-rwxr-xr-x. 1 root root        3443 Dec  6  2012 raid-check
-rwxr-xr-x. 1 root root       15616 Feb 21  2013 readprofile
-rwx------. 1 root root        2896 Feb 22  2013 redhat_lsb_trigger.x86_64
lrwxrwxrwx. 1 root root          10 May 14  2018 reject -&amp;gt; cupsaccept
-rwxr-xr-x. 1 root root       70304 Nov 20  2012 repquota
-rwxr-xr-x. 1 root root       31648 Feb 21  2013 restorecond
-rwxr-xr-x. 1 root root       16744 Feb 22  2013 rotatelogs
-rwxr-xr-x. 1 root root       74664 Nov 20  2012 rpc.rquotad
-rwxr-xr-x. 1 root root       36416 Feb 21  2013 rtacct
-rwxr-xr-x. 1 root root       17856 Feb 21  2013 rtcwake
-rwxr-xr-x. 1 root root       12432 Aug 20  2010 rtkitctl
-rwxr-xr-x. 1 root root       10568 Feb 21  2013 run_init
-rwxr-xr-x. 1 root root       32288 Jul 17  2012 sa
-rwxr-xr-x. 1 root root        8896 Dec  7  2011 safe_finger
-rwxr-xr-x. 1 root root       75784 Nov 11  2010 saned
-rwxr-xr-x. 1 root root       88496 Nov 27  2012 saslauthd
-rwxr-xr-x. 1 root root       20320 Nov 27  2012 sasldblistusers2
-rwxr-xr-x. 1 root root       18088 Nov 27  2012 saslpasswd2
-rwxr-xr-x. 1 root root       10256 Jun 22  2012 selinuxconlist
-rwxr-xr-x. 1 root root       10616 Jun 22  2012 selinuxdefcon
-rwxr-xr-x. 1 root root        7968 Jun 22  2012 selinuxenabled
-rwxr-xr-x. 1 root root       19352 Feb 21  2013 semodule
lrwxrwxrwx. 1 root root          21 May 14  2018 sendmail -&amp;gt; /etc/alternatives/mta
-rwxr-xr-x. 1 root root      213616 Dec  2  2011 sendmail.postfix
-rwxr-xr-x. 1 root root       14784 Feb 21  2013 sestatus
-rwxr-xr-x. 1 root root       11032 Dec  7  2011 setcap
-rwxr-xr-x. 1 root root        9296 Jun 22  2012 setenforce
-rwxr-xr-x. 1 root root       82720 Nov 20  2012 setquota
-rwxr-xr-x. 1 root root       14720 Feb 21  2013 setsebool
-rwxr-xr-x. 1 root root       15976 Aug 25  2010 setup
-rwxr-xr-x. 1 root root       15184 May 31  2012 skdump
-rwxr-xr-x. 1 root root        9544 May 31  2012 sktest
-rwxr-xr-x. 1 root root      525072 Feb 21  2013 smartctl
-rwxr-xr-x. 1 root root      500400 Feb 21  2013 smartd
-rwxr-xr-x. 1 root root       82472 Dec  2  2011 smtp-sink
-rwxr-xr-x. 1 root root       69168 Dec  2  2011 smtp-source
-rwxr-xr-x. 1 root root       30744 Feb 21  2013 snmpd
-rwxr-xr-x. 1 root root       30776 Feb 21  2013 snmptrapd
-rwxr-xr-x. 1 root root         926 Feb 22  2013 sosreport
-rwxr-xr-x. 1 root root       42480 Feb 21  2013 spice-vdagentd
-rwxr-xr-x. 1 root root       75056 Feb 21  2013 ss
-rwxr-xr-x. 1 root root      526008 Feb 21  2013 sshd
-r-s--x---. 1 root apache     13984 Feb 22  2013 suexec
lrwxrwxrwx. 1 root root          39 May 14  2018 system-config-authentication -&amp;gt; /usr/share/authconfig/authconfig-gtk.py
-rwxr-xr-x. 1 root root         142 Jun 22  2012 system-config-keyboard
-rwxr-xr-x. 1 root root         188 Nov 11  2010 system-config-network
lrwxrwxrwx. 1 root root          45 May 14  2018 system-config-network-cmd -&amp;gt; ../share/system-config-network/netconf_cmd.py
lrwxrwxrwx. 1 root root          45 May 14  2018 system-config-network-tui -&amp;gt; ../share/system-config-network/netconf_tui.py
-rwxr-xr-x. 1 root root         180 Feb 22  2013 sys-unconfig
-rwxr-xr-x. 1 root root       35648 Dec  7  2011 tcpd
-rwxr-xr-x. 1 root root      742032 Mar 26  2012 tcpdump
-rwxr-xr-x. 1 root root       24568 Mar 26  2012 tcpslice
-rwxr-xr-x. 1 root root       14824 Nov 27  2012 testsaslauthd
-rwxr-xr-x. 1 root root      248872 Jun 22  2012 thin_check
-rwxr-xr-x. 1 root root      365240 Jun 22  2012 thin_dump
-rwxr-xr-x. 1 root root      370200 Jun 22  2012 thin_restore
-rwxr-xr-x. 1 root root        5816 Feb 22  2013 tickadj
-rwxr-xr-x. 1 root root       21656 Sep 23  2011 tmpwatch
-rwxr-xr-x. 1 root root       10656 Jun 22  2012 togglesebool
lrwxrwxrwx. 1 root root          14 May 14  2018 tracepath -&amp;gt; /bin/tracepath
lrwxrwxrwx. 1 root root          15 May 14  2018 tracepath6 -&amp;gt; /bin/tracepath6
-rwxr-xr-x. 1 root root       19680 Dec  7  2011 try-from
-rwxr-xr-x. 1 root root       12536 Feb 21  2013 tunelp
-rwx------. 1 root root        3784 Feb 21  2013 tzdata-update
lrwxrwxrwx. 1 root root          12 May 14  2018 update-alternatives -&amp;gt; alternatives
-rwxr-xr-x. 1 root root        1755 Feb 21  2013 update-pciids
-rwxr-xr-x. 1 root root        3582 Feb 21  2013 update-smart-drivedb
-rwxr-xr-x. 1 root root       51560 Aug 22  2010 usbmuxd
-rwxr-x---. 1 root root      103096 Dec  7  2011 useradd
-rwxr-x---. 1 root root       69560 Dec  7  2011 userdel
-rws--x--x. 1 root root       41112 Aug 22  2010 userhelper
-rwxr-x---. 1 root root       98680 Dec  7  2011 usermod
-rwsr-xr-x. 1 root root        9000 Feb 22  2013 usernetctl
lrwxrwxrwx. 1 root root           4 May 14  2018 vigr -&amp;gt; vipw
-rwxr-xr-x. 1 root root       53160 Dec  7  2011 vipw
-rwxr-xr-x. 1 root root        6768 Feb 21  2013 virt-what
-rwxr-xr-x. 1 root root      154680 Feb 21  2013 visudo
lrwxrwxrwx. 1 root root          37 Jun  7  2018 vmtoolsd -&amp;gt; /usr/lib/vmware-tools/sbin64/vmtoolsd
lrwxrwxrwx. 1 root root          43 Jun  7  2018 vmware-checkvm -&amp;gt; /usr/lib/vmware-tools/sbin64/vmware-checkvm
lrwxrwxrwx. 1 root root          37 Jun  7  2018 vmware-namespace-cmd -&amp;gt; /usr/lib/vmware-tools/bin64/appLoader
lrwxrwxrwx. 1 root root          43 Jun  7  2018 vmware-rpctool -&amp;gt; /usr/lib/vmware-tools/sbin64/vmware-rpctool
lrwxrwxrwx. 1 root root          37 Jun  7  2018 vmware-vmblock-fuse -&amp;gt; /usr/lib/vmware-tools/bin64/appLoader
-rwxr-xr-x. 1 root root       14840 Dec  7  2011 vpddecode
-rwxr-xr-x. 1 root root       82656 Nov 20  2012 warnquota
-rwxr-xr-x. 1 root root     7892520 Feb 21  2013 winbindd
-rwxr-xr-x. 1 root root       48464 Feb  4  2013 wpa_cli
-rwxr-xr-x. 1 root root       35904 Feb  4  2013 wpa_passphrase
-rwxr-xr-x. 1 root root      712768 Feb  4  2013 wpa_supplicant
-rwxr-xr-x. 1 root root        9416 Jun 22  2012 yum-complete-transaction
-rwxr-xr-x. 1 root root        8022 Jun 22  2012 yumdb
-rwxr-xr-x. 1 root root       17392 Feb 21  2013 zdump
-rwxr-xr-x. 1 root root       50256 Feb 21  2013 zic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /usr/sbin&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('dfdd3e1a-fd68-4439-b872-09c1197ac7ef')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_dfdd3e1a-fd68-4439-b872-09c1197ac7ef&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_dfdd3e1a-fd68-4439-b872-09c1197ac7ef&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('dfdd3e1a-fd68-4439-b872-09c1197ac7ef',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_dfdd3e1a-fd68-4439-b872-09c1197ac7ef&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /sbin
total 15320
-rwxr-xr-x. 1 root root   10704 Jul 17  2012 accton
-rwxr-xr-x. 1 root root    8456 Feb 21  2013 addpart
-rwxr-xr-x. 1 root root   23952 Feb 21  2013 agetty
-rwxr-xr-x. 1 root root   94168 Feb 21  2013 alsactl
-rwxr-xr-x. 1 root root   62816 May 10  2012 arp
-rwxr-xr-x. 1 root root   17776 Jul 18  2011 arping
-rwxr-x---. 1 root root   92192 Jun 22  2012 audispd
-rwxr-x---. 1 root root  133072 Jun 22  2012 auditctl
-rwxr-x---. 1 root root  174168 Jun 22  2012 auditd
-rwxr-xr-x. 1 root root  149120 Jun 22  2012 aureport
-rwxr-xr-x. 1 root root  167648 Jun 22  2012 ausearch
-rwxr-x---. 1 root root   91720 Jun 22  2012 autrace
-rwxr-xr-x. 1 root root   29752 Feb 21  2013 badblocks
-rwxr-xr-x. 1 root root   36560 Feb 21  2013 biosdevname
-r-xr-xr-x. 1 root root    9722 Feb 21  2013 blkdeactivate
-rwxr-xr-x. 1 root root   27824 Feb 21  2013 blkid
-rwxr-xr-x. 1 root root   17336 Feb 21  2013 blockdev
-rwxr-xr-x. 1 root root 1045992 Jun 22  2012 busybox
-rwxr-xr-x. 1 root root   33559 Feb 21  2013 cbq
-rwxr-xr-x. 1 root root   61416 Feb 21  2013 cfdisk
-rwxr-xr-x. 1 root root   29072 Feb 21  2013 chcpu
-rwxr-xr-x. 1 root root   35264 Jun 22  2012 chkconfig
lrwxrwxrwx. 1 root root       7 May 14  2018 clock -&amp;gt; hwclock
-rwxr-xr-x. 1 root root    7896 Feb 22  2013 consoletype
-rwxr-xr-x. 1 root root   14632 Jul 19  2011 crda
-rwxr-xr-x. 1 root root   41640 Jun 22  2012 cryptsetup
-rwxr-xr-x. 1 root root    8592 Feb 21  2013 ctrlaltdel
-rwxr-xr-x. 1 root root   96336 Feb 21  2013 debugfs
-rwxr-xr-x. 1 root root    8416 Feb 21  2013 delpart
-rwxr-xr-x. 1 root root  135344 Feb 21  2013 depmod
-rwxr-xr-x. 1 root root  572256 Feb 22  2013 dhclient
-rwxr-xr-x. 1 root root   25352 Sep 25  2012 dhclient-script
-rwxr-xr-x. 2 root root   13168 Jun 22  2012 dm_dso_reg_tool
-r-xr-xr-x. 1 root root   40008 Feb 21  2013 dmeventd
-rwxr-xr-x. 2 root root   13168 Jun 22  2012 dmevent_tool
-rwxr-xr-x. 1 root root   26256 Jun 22  2012 dmraid
lrwxrwxrwx. 1 root root       6 May 14  2018 dmraid.static -&amp;gt; dmraid
-rwxr-xr-x. 1 root root   73760 Feb 21  2013 dmsetup
-rwxr-xr-x. 1 root root   55344 Dec  7  2011 dosfsck
-rwxr-xr-x. 1 root root   52288 Dec  7  2011 dosfslabel
-rwxr-xr-x. 1 root root   11979 Feb 21  2013 dracut
-rwxr-xr-x. 1 root root   23288 Feb 21  2013 dumpe2fs
-rwxr-xr-x. 5 root root  197256 Feb 21  2013 e2fsck
-rwxr-xr-x. 1 root root   28296 Feb 21  2013 e2image
-rwxr-xr-x. 2 root root   42728 Feb 21  2013 e2label
-rwxr-xr-x. 1 root root   14592 Feb 21  2013 e2undo
-rwxr-xr-x. 1 root root   14712 May 10  2012 ether-wake
-rwxr-xr-x. 1 root root  236848 Feb 21  2013 ethtool
-rwxr-xr-x. 1 root root   15016 Feb 21  2013 faillock
-rwxr-xr-x. 1 root root  106008 Feb 21  2013 fdisk
-rwxr-xr-x. 1 root root    9608 Feb 21  2013 findfs
-rwxr-xr-x. 1 root root    6049 Feb 21  2013 fixfiles
-r-xr-xr-x. 1 root root   14083 Feb 21  2013 fsadm
-rwxr-xr-x. 1 root root   34680 Feb 21  2013 fsck
-rwxr-xr-x. 1 root root   15976 Feb 21  2013 fsck.cramfs
-rwxr-xr-x. 5 root root  197256 Feb 21  2013 fsck.ext2
-rwxr-xr-x. 5 root root  197256 Feb 21  2013 fsck.ext3
-rwxr-xr-x. 5 root root  197256 Feb 21  2013 fsck.ext4
-rwxr-xr-x. 5 root root  197256 Feb 21  2013 fsck.ext4dev
lrwxrwxrwx. 1 root root       7 May 14  2018 fsck.msdos -&amp;gt; dosfsck
lrwxrwxrwx. 1 root root       7 May 14  2018 fsck.vfat -&amp;gt; dosfsck
-rwxr-xr-x. 1 root root   10512 Feb 21  2013 fsfreeze
-rwxr-xr-x. 1 root root    8336 Feb 22  2013 fstab-decode
-rwxr-xr-x. 1 root root   18384 Feb 21  2013 fstrim
-rwxr-xr-x. 1 root root   29160 Jun 24  2011 fuser
-rwxr-xr-x. 1 root root    8096 Feb 22  2013 genhostid
-rwxr-xr-x. 1 root root   11992 Feb 22  2013 getkey
-rwxr-xr-x. 1 root root  754248 Feb 21  2013 grub
-rwxr-xr-x. 1 root root   50456 Jun 22  2012 grubby
-rwxr-xr-x. 1 root root    2463 Feb 21  2013 grub-crypt
-rwxr-xr-x. 1 root root   17989 Feb 21  2013 grub-install
-rwxr-xr-x. 1 root root    2293 Feb 21  2013 grub-md5-crypt
-rwxr-xr-x. 1 root root    2473 Feb 21  2013 grub-terminfo
lrwxrwxrwx. 1 root root       6 May 14  2018 halt -&amp;gt; reboot
-rwxr-xr-x. 1 root root  100664 Nov 11  2010 hdparm
-rwxr-xr-x. 1 root root   48144 Feb 21  2013 hwclock
-rwxr-xr-x. 1 root root    3056 Feb 21  2013 ifcfg
-rwxr-xr-x. 1 root root   73936 May 10  2012 ifconfig
-rwxr-xr-x. 1 root root    1331 Jan  9  2013 ifdown
-rwxr-xr-x. 1 root root   22168 Jul 18  2011 ifenslave
-rwxr-xr-x. 1 root root   32216 Aug 18  2010 ifrename
-rwxr-xr-x. 1 root root    4367 Jan  9  2013 ifup
-rwxr-xr-x. 1 root root  150352 Jun 22  2012 init
-rwxr-xr-x. 1 root root  138784 Jun 22  2012 initctl
-rwxr-xr-x. 1 root root   14120 Feb 21  2013 insmod
-rwxr-xr-x. 1 root root  797088 Feb 21  2013 insmod.static
-rwxr-xr-x. 1 root root   43584 Aug 19  2010 install-info
-rwxr-xr-x. 1 root root    2670 Jun 22  2012 installkernel
-rwxr-xr-x. 1 root root  236152 Feb 21  2013 ip
lrwxrwxrwx. 1 root root      34 May 14  2018 ip6tables -&amp;gt; /etc/alternatives/ip6tables.x86_64
lrwxrwxrwx. 1 root root      15 May 14  2018 ip6tables-1.4.7 -&amp;gt; ip6tables-multi
lrwxrwxrwx. 1 root root      45 May 14  2018 ip6tables-multi -&amp;gt; /etc/alternatives/sbin-ip6tables-multi.x86_64
-rwxr-xr-x. 1 root root   50040 Feb 21  2013 ip6tables-multi-1.4.7
lrwxrwxrwx. 1 root root      47 May 14  2018 ip6tables-restore -&amp;gt; /etc/alternatives/sbin-ip6tables-restore.x86_64
lrwxrwxrwx. 1 root root      15 May 14  2018 ip6tables-restore-1.4.7 -&amp;gt; ip6tables-multi
lrwxrwxrwx. 1 root root      44 May 14  2018 ip6tables-save -&amp;gt; /etc/alternatives/sbin-ip6tables-save.x86_64
lrwxrwxrwx. 1 root root      15 May 14  2018 ip6tables-save-1.4.7 -&amp;gt; ip6tables-multi
-rwxr-xr-x. 1 root root   19352 May 10  2012 ipmaddr
lrwxrwxrwx. 1 root root      33 May 14  2018 iptables -&amp;gt; /etc/alternatives/iptables.x86_64
lrwxrwxrwx. 1 root root      14 May 14  2018 iptables-1.4.7 -&amp;gt; iptables-multi
lrwxrwxrwx. 1 root root      44 May 14  2018 iptables-multi -&amp;gt; /etc/alternatives/sbin-iptables-multi.x86_64
-rwxr-xr-x. 1 root root   58872 Feb 21  2013 iptables-multi-1.4.7
lrwxrwxrwx. 1 root root      46 May 14  2018 iptables-restore -&amp;gt; /etc/alternatives/sbin-iptables-restore.x86_64
lrwxrwxrwx. 1 root root      14 May 14  2018 iptables-restore-1.4.7 -&amp;gt; iptables-multi
lrwxrwxrwx. 1 root root      43 May 14  2018 iptables-save -&amp;gt; /etc/alternatives/sbin-iptables-save.x86_64
lrwxrwxrwx. 1 root root      14 May 14  2018 iptables-save-1.4.7 -&amp;gt; iptables-multi
-rwxr-xr-x. 1 root root   23272 May 10  2012 iptunnel
-rwxr-xr-x. 1 root root   79112 Aug 22  2010 iw
-rwxr-xr-x. 1 root root   30288 Aug 18  2010 iwconfig
-rwxr-xr-x. 1 root root   18664 Aug 18  2010 iwevent
-rwxr-xr-x. 1 root root   14400 Aug 18  2010 iwgetid
-rwxr-xr-x. 1 root root   36504 Aug 18  2010 iwlist
-rwxr-xr-x. 1 root root   15224 Aug 18  2010 iwpriv
-rwxr-xr-x. 1 root root   14272 Aug 18  2010 iwspy
-rwxr-xr-x. 1 root root   11088 Feb 21  2013 kdump
-rwxr-xr-x. 1 root root  180624 Feb 21  2013 kexec
-rwxr-xr-x. 1 root root   19080 Jul 19  2011 killall5
-rwxr-xr-x. 1 root root   38008 Feb 21  2013 kpartx
-rwxr-xr-x. 1 root root  893872 Feb 21  2013 ldconfig
-rwxr-xr-x. 1 root root   10456 Feb 21  2013 load_policy
-rwxr-xr-x. 1 root root   13104 Feb 21  2013 logsave
-rwxr-xr-x. 1 root root   31952 Feb 21  2013 losetup
-rwxr-xr-x. 1 root root    2365 Feb 21  2013 lsinitrd
-rwxr-xr-x. 1 root root    9096 Feb 21  2013 lsmod
-rwxr-xr-x. 1 root root   71800 Feb 21  2013 lspci
lrwxrwxrwx. 1 root root       9 May 14  2018 lspcmcia -&amp;gt; pccardctl
lrwxrwxrwx. 1 root root       3 May 14  2018 lvchange -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvconvert -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvcreate -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvdisplay -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvextend -&amp;gt; lvm
-r-xr-xr-x. 1 root root 1013336 Feb 21  2013 lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvmchange -&amp;gt; lvm
-r-xr-xr-x. 1 root root    6691 Feb 21  2013 lvmconf
lrwxrwxrwx. 1 root root       3 May 14  2018 lvmdiskscan -&amp;gt; lvm
-r-xr-xr-x. 1 root root    7301 Feb 21  2013 lvmdump
-r-xr-xr-x. 1 root root   49480 Feb 21  2013 lvmetad
lrwxrwxrwx. 1 root root       3 May 14  2018 lvmsadc -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvmsar -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvreduce -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvremove -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvrename -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvresize -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvs -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 lvscan -&amp;gt; lvm
-rwxr-xr-x. 1 root root   28792 Nov 10  2010 MAKEDEV
-rwxr-xr-x. 1 root root   12024 Jun 22  2012 matchpathcon
-rwxr-xr-x. 1 root root  467208 Feb 21  2013 mdadm
-rwxr-xr-x. 1 root root  307128 Feb 21  2013 mdmon
-rwxr-xr-x. 1 root root   11696 Feb 21  2013 microcode_ctl
-rwxr-xr-x. 1 root root   21760 May 10  2012 mii-diag
-rwxr-xr-x. 1 root root   18200 May 10  2012 mii-tool
-rwxr-xr-x. 1 root root   19144 Sep 23  2011 mingetty
-rwxr-xr-x. 1 root root   30592 Dec  7  2011 mkdosfs
-rwxr-xr-x. 1 root root  109796 Feb 21  2013 mkdumprd
-rwxr-xr-x. 5 root root   68960 Feb 21  2013 mke2fs
-rwxr-xr-x. 1 root root   10336 Feb 21  2013 mkfs
-rwxr-xr-x. 1 root root   26208 Feb 21  2013 mkfs.cramfs
-rwxr-xr-x. 5 root root   68960 Feb 21  2013 mkfs.ext2
-rwxr-xr-x. 5 root root   68960 Feb 21  2013 mkfs.ext3
-rwxr-xr-x. 5 root root   68960 Feb 21  2013 mkfs.ext4
-rwxr-xr-x. 5 root root   68960 Feb 21  2013 mkfs.ext4dev
lrwxrwxrwx. 1 root root       7 May 14  2018 mkfs.msdos -&amp;gt; mkdosfs
lrwxrwxrwx. 1 root root       7 May 14  2018 mkfs.vfat -&amp;gt; mkdosfs
-rwxr-xr-x. 1 root root   22608 Feb 21  2013 mkhomedir_helper
-rwxr-xr-x. 1 root root    3412 Feb 21  2013 mkinitrd
-rwxr-xr-x. 1 root root   22648 Feb 21  2013 mkswap
-rwxr-xr-x. 1 root root   97624 Feb 21  2013 modinfo
-rwxr-xr-x. 1 root root  123184 Feb 21  2013 modprobe
-rwxr-xr-x. 1 root root   11616 Dec  7  2011 mount.fuse
-rwxr-xr-x. 1 root root    1338 Feb 21  2013 mount.tmpfs
-r-xr-xr-x. 1 root root   67536 Jun  7  2018 mount.vmhgfs
-rwxr-xr-x. 1 root root   15600 May 10  2012 nameif
-rwxr-sr-x. 1 root root    8792 Feb 22  2013 netreport
-rwxr-xr-x. 1 root root   13818 Jun 22  2012 new-kernel-pkg
-rwxr-xr-x. 1 root root    7816 Feb 21  2013 nologin
-rwxr-xr-x. 1 root root   43512 Feb 21  2013 pam_console_apply
-rwxr-xr-x. 1 root root   17272 Feb 21  2013 pam_tally2
-rwsr-xr-x. 1 root root   10272 Feb 21  2013 pam_timestamp_check
-rwxr-xr-x. 1 root root   86984 Feb 21  2013 parted
-rwxr-xr-x. 1 root root   14656 Feb 21  2013 partprobe
-rwxr-xr-x. 1 root root   25496 Feb 21  2013 partx
-rwxr-xr-x. 1 root root   36176 Nov 11  2010 pccardctl
lrwxrwxrwx. 1 root root       8 May 14  2018 pidof -&amp;gt; killall5
-rwxr-xr-x. 1 root root    7792 Feb 21  2013 pivot_root
-rwxr-xr-x. 1 root root   10752 May 10  2012 plipconfig
-rwxr-xr-x. 1 root root   76208 Feb 22  2013 plymouthd
lrwxrwxrwx. 1 root root      11 May 14  2018 portrelease -&amp;gt; portreserve
-rwxr-xr-x. 1 root root   14664 Apr  3  2012 portreserve
lrwxrwxrwx. 1 root root       6 May 14  2018 poweroff -&amp;gt; reboot
-rwxr-xr-x. 1 root root   29560 Feb 22  2013 ppp-watch
lrwxrwxrwx. 1 root root       3 May 14  2018 pvchange -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvck -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvcreate -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvdisplay -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvmove -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvremove -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvresize -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvs -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 pvscan -&amp;gt; lvm
-rwxr-xr-x. 1 root root  103080 Nov 20  2012 quotacheck
lrwxrwxrwx. 1 root root       7 May 14  2018 quotaoff -&amp;gt; quotaon
-rwxr-xr-x. 1 root root   74240 Nov 20  2012 quotaon
-rwxr-xr-x. 1 root root   20576 Jul 18  2011 rdisc
-rwxr-xr-x. 1 root root   26976 Aug 23  2010 readahead
-rwxr-xr-x. 1 root root   28392 Aug 23  2010 readahead-collector
-rwxr-xr-x. 1 root root   14832 Jun 22  2012 reboot
-rwxr-xr-x. 1 root root   11488 Jul 19  2011 regdbdump
lrwxrwxrwx. 1 root root       7 May 14  2018 reload -&amp;gt; initctl
-rwxr-xr-x. 1 root root   41712 Feb 21  2013 resize2fs
lrwxrwxrwx. 1 root root       7 May 14  2018 restart -&amp;gt; initctl
lrwxrwxrwx. 1 root root       8 May 14  2018 restorecon -&amp;gt; setfiles
-rwxr-xr-x. 1 root root   12416 Aug 22  2010 rfkill
-rwxr-xr-x. 1 root root   16672 Feb 21  2013 rmmod
-rwxr-xr-x. 1 root root   17632 Dec 17  2011 rngd
-rwxr-xr-x. 1 root root   59784 May 10  2012 route
-rwxr-xr-x. 1 root root  391968 Feb 21  2013 rsyslogd
-rwxr-xr-x. 1 root root   38248 Feb 21  2013 rtmon
-rwxr-xr-x. 1 root root   14352 Jun 22  2012 runlevel
-rwxr-xr-x. 1 root root   32696 Jun 22  2012 runuser
lrwxrwxrwx. 1 root root      19 May 14  2018 scsi_id -&amp;gt; ../lib/udev/scsi_id
-rwxr-xr-x. 1 root root   10600 Feb 22  2013 securetty
-rwxr-xr-x. 1 root root    1694 Feb 22  2013 service
-rwxr-xr-x. 1 root root   23168 Feb 21  2013 setfiles
-rwxr-xr-x. 1 root root   23928 Feb 21  2013 setpci
-rwxr-xr-x. 1 root root    1503 Feb 25  2010 setregdomain
-rwxr-xr-x. 1 root root     850 Feb 22  2013 setsysfont
-rwxr-xr-x. 1 root root   64928 Feb 21  2013 sfdisk
-rwxr-xr-x. 1 root root   16752 Aug 22  2010 sgpio
-rwxr-xr-x. 1 root root   60400 Jun 22  2012 shutdown
-rwxr-xr-x. 1 root root   38224 May 10  2012 slattach
-rwxr-xr-x. 1 root root  686520 Feb 21  2013 sln
lrwxrwxrwx. 1 root root       7 May 14  2018 start -&amp;gt; initctl
-rwxr-xr-x. 1 root root    8109 Feb 21  2013 start_udev
lrwxrwxrwx. 1 root root       7 May 14  2018 status -&amp;gt; initctl
lrwxrwxrwx. 1 root root       7 May 14  2018 stop -&amp;gt; initctl
-rwxr-xr-x. 1 root root   17040 Jul 19  2011 sulogin
-rwxr-xr-x. 1 root root      67 Feb 22  2013 sushell
lrwxrwxrwx. 1 root root       6 May 14  2018 swapoff -&amp;gt; swapon
-rwxr-xr-x. 1 root root   28792 Feb 21  2013 swapon
-rwxr-xr-x. 1 root root   12232 Feb 21  2013 switch_root
-rwxr-xr-x. 1 root root   16768 Nov 15  2012 sysctl
-rwxr-xr-x. 1 root root  259232 Feb 21  2013 tc
-rwxr-xr-x. 1 root root   51536 Jun 22  2012 telinit
-rwxr-xr-x. 2 root root   42728 Feb 21  2013 tune2fs
-rwxr-xr-x. 1 root root  137256 Feb 21  2013 udevadm
-rwxr-xr-x. 1 root root  129120 Feb 21  2013 udevd
-rwxr-xr-x. 1 root root   12224 Jul 19  2011 umount.hal
-rwxr-xr-x. 1 root root   12440 Dec  7  2011 umount.udisks
-rwsr-xr-x. 1 root root   34840 Feb 21  2013 unix_chkpwd
-rwx------. 1 root root   34840 Feb 21  2013 unix_update
-rwxr-xr-x. 1 root root   13480 Aug 18  2010 vconfig
lrwxrwxrwx. 1 root root       3 May 14  2018 vgcfgbackup -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgcfgrestore -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgchange -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgck -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgconvert -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgcreate -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgdisplay -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgexport -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgextend -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgimport -&amp;gt; lvm
-r-xr-xr-x. 1 root root   10399 Feb 21  2013 vgimportclone
lrwxrwxrwx. 1 root root       3 May 14  2018 vgmerge -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgmknodes -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgreduce -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgremove -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgrename -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgs -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgscan -&amp;gt; lvm
lrwxrwxrwx. 1 root root       3 May 14  2018 vgsplit -&amp;gt; lvm
-rwxr-xr-x. 1 root root   17400 Feb 21  2013 vmcore-dmesg
-rwxr-xr-x. 1 root root   15410 Feb 21  2013 weak-modules
-rwxr-xr-x. 1 root root   16576 Feb 21  2013 wipefs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /sbin&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('37b9081c-1d02-44f1-a899-e7beb2a038a8')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_37b9081c-1d02-44f1-a899-e7beb2a038a8&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_37b9081c-1d02-44f1-a899-e7beb2a038a8&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('37b9081c-1d02-44f1-a899-e7beb2a038a8',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_37b9081c-1d02-44f1-a899-e7beb2a038a8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /usr/java/jdk1.8.0_161/bin
total 732
-rwxr-xr-x. 1 root root   7965 Dec 19  2017 appletviewer
lrwxrwxrwx. 1 root root      8 Jul  5  2018 ControlPanel -&amp;gt; jcontrol
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 extcheck
-rwxr-xr-x. 1 root root   7973 Dec 19  2017 idlj
-rwxr-xr-x. 1 root root   7925 Dec 19  2017 jar
-rwxr-xr-x. 1 root root   7957 Dec 19  2017 jarsigner
-rwxr-xr-x. 1 root root   7734 Dec 19  2017 java
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 javac
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 javadoc
-rwxr-xr-x. 1 root root   2293 Dec 19  2017 javafxpackager
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 javah
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 javap
-rwxr-xr-x. 1 root root   2293 Dec 19  2017 javapackager
-rwxr-xr-x. 1 root root   1809 Dec 19  2017 java-rmi.cgi
-rwxr-xr-x. 1 root root 132017 Dec 19  2017 javaws
-rwxr-xr-x. 1 root root   7925 Dec 19  2017 jcmd
-rwxr-xr-x. 1 root root   8013 Dec 19  2017 jconsole
-rwxr-xr-x. 1 root root   6264 Dec 19  2017 jcontrol
-rwxr-xr-x. 1 root root   7981 Dec 19  2017 jdb
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 jdeps
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 jhat
-rwxr-xr-x. 1 root root   8109 Dec 19  2017 jinfo
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 jjs
-rwxr-xr-x. 1 root root   8109 Dec 19  2017 jmap
-rwxr-xr-x. 1 root root  28262 Dec 19  2017 jmc
-rwxr-xr-x. 1 root root    402 Nov 24  2016 jmc.ini
-rwxr-xr-x. 1 root root   7925 Dec 19  2017 jps
-rwxr-xr-x. 1 root root   7949 Dec 19  2017 jrunscript
-rwxr-xr-x. 1 root root   7981 Dec 19  2017 jsadebugd
-rwxr-xr-x. 1 root root   8109 Dec 19  2017 jstack
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 jstat
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 jstatd
-rwxr-xr-x. 1 root root   5110 Jan 14  2017 jvisualvm
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 keytool
-rwxr-xr-x. 1 root root   7949 Dec 19  2017 native2ascii
-rwxr-xr-x. 1 root root   8149 Dec 19  2017 orbd
-rwxr-xr-x. 1 root root   7957 Dec 19  2017 pack200
-rwxr-xr-x. 1 root root   7997 Dec 19  2017 policytool
-rwxr-xr-x. 1 root root   7925 Dec 19  2017 rmic
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 rmid
-rwxr-xr-x. 1 root root   7949 Dec 19  2017 rmiregistry
-rwxr-xr-x. 1 root root   7957 Dec 19  2017 schemagen
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 serialver
-rwxr-xr-x. 1 root root   7965 Dec 19  2017 servertool
-rwxr-xr-x. 1 root root   8181 Dec 19  2017 tnameserv
-rwxr-xr-x. 1 root root 231482 Dec 19  2017 unpack200
-rwxr-xr-x. 1 root root   7941 Dec 19  2017 wsgen
-rwxr-xr-x. 1 root root   7957 Dec 19  2017 wsimport
-rwxr-xr-x. 1 root root   7957 Dec 19  2017 xjc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /usr/java/jdk1.8.0_161/bin&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('066c5928-c6b9-406d-b1e3-02f2bb0277fb')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_066c5928-c6b9-406d-b1e3-02f2bb0277fb&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_066c5928-c6b9-406d-b1e3-02f2bb0277fb&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('066c5928-c6b9-406d-b1e3-02f2bb0277fb',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_066c5928-c6b9-406d-b1e3-02f2bb0277fb&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yang@cMaster:~]#ll /home/yang
total 80
drwxr-xr-x. 2 yang yang  4096 May 30 02:50 Desktop
drwxr-xr-x. 2 yang yang  4096 May 14  2018 Documents
drwxr-xr-x. 2 yang yang  4096 May 14  2018 Downloads
-rw-rw-r--. 1 yang yang 11103 Jun  6  2018 log-pig-flume.txt
-rw-rw-r--. 1 yang yang     0 Jun  6  2018 log-pig-flume.txt~
-rw-rw-r--. 1 yang yang 30161 Jun  6  2018 log-proxy.txt
drwxr-xr-x. 2 yang yang  4096 May 14  2018 Music
drwxr-xr-x. 2 yang yang  4096 May 30 02:11 Pictures
drwxr-xr-x. 2 yang yang  4096 May 14  2018 Public
drwxr-xr-x. 2 yang yang  4096 May 14  2018 Templates
drwxr-xr-x. 2 yang yang  4096 May 14  2018 Videos
drwxrwxr-x. 4 yang yang  4096 Jul  5  2018 workspac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;ll /home/yang&lt;/span&gt;&lt;/div&gt;

&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;　　可见，我们经常使用的命令，如：reboot ，其完整的名称为“ /usr/bin/reboot ”，它的简化功劳得亏于profile配置文件和其他文件的组合应用。同时，profile配置文件主要用于登录设置的全系统环境和启动程序。如果profile配置文件出现问题会直接影响到图形界面的使用，但不影响字符界面的正常操作。&lt;/p&gt;

</description>
<pubDate>Fri, 04 Oct 2019 13:39:00 +0000</pubDate>
<dc:creator>王者★孤傲</dc:creator>
<og:description>一、绪论 【因为这篇心得是原创的，所以如果有哪处总结或者意见不足的地方，欢迎各位大神的批评和意见，共同学习，谢谢了！】 早些时候，需要在centos6.4系统中配置单机版和集群版单节点的hadoop</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/Raodi/p/11623403.html</dc:identifier>
</item>
<item>
<title>asp.net core 使用Mysql和Dapper - 流月无双</title>
<link>http://www.cnblogs.com/dengbo/p/11622900.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dengbo/p/11622900.html</guid>
<description>&lt;p&gt;&lt;strong&gt;序曲：学习编程最好的方式就是敲代码，没有比这个更好的方法，哪怕你看了上百G的视频，都不如你自己敲几行代码更为有效。还有要记得敲完代码然后写一篇随笔来记录一下你所学所想。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大家都知道，.netcore是微软一个具有历史意义的产品，因为终于开始跨平台了，&lt;/p&gt;
&lt;p&gt;敲了那么多年的代码，每次都被吐槽不能跨平台，现在终于开启了跨平台的脚步了。&lt;/p&gt;
&lt;p&gt;既然跨平台了，那么我们是不是可以使用mysql了，毕竟mysql的使用率是非常的高，&lt;/p&gt;
&lt;p&gt;各种解决方案和优化方案都非常的多。如果你不知道什么是mysql，那么你自己去百度一下。&lt;/p&gt;
&lt;p&gt;好了，废话太多了，我们开始来讲一讲如何在core上使用mysql。&lt;/p&gt;
&lt;p&gt;第一步，当然是引用对应的包了&lt;/p&gt;
&lt;p&gt;本次主要是引用两个包，分别是&lt;/p&gt;
&lt;p&gt;MySql.Data&lt;/p&gt;
&lt;p&gt;Dapper&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/132436/201910/132436-20191004184013620-1898615395.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt; 引用成功之后，就开始敲代码&lt;/p&gt;
&lt;p&gt;本讲解使用的是core控制台&lt;/p&gt;
&lt;p&gt;当然首先你得安装mysql到你的电脑上，或者安装到centOs上面&lt;/p&gt;
&lt;p&gt;windows安装mysql，你可以看看这位的方案：https://www.cnblogs.com/xsmile/p/7753984.html&lt;/p&gt;
&lt;p&gt;centOS7安装mysql，你可以看看这个：https://www.cnblogs.com/Jomini/p/10749657.html&lt;/p&gt;
&lt;p&gt;本人的mysql是安装到我的windows上的&lt;/p&gt;
&lt;p&gt;配置你的数据库连接，这个信息最好放在配置文件中，这次是为了演示，我就放在代码中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;配置你的数据库连接信息&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ConnString = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;server=192.168.1.2;userid=root;pwd=123456;port=3306;database=redenvelopes;SslMode=none&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
server是你的mysql安装到的机器上的ip地址
&lt;/pre&gt;
&lt;pre&gt;
userid是mysql登录用户&lt;p&gt;pwd是登录密码
&lt;/p&gt;&lt;/pre&gt;
&lt;pre&gt;
port是mysql的端口，一般情况下，mysql的默认端口就是3306
&lt;/pre&gt;
&lt;pre&gt;
database是你的数据库名称
&lt;/pre&gt;
&lt;pre&gt;
SslMode是SSL模式，这里为none&lt;/pre&gt;
&lt;pre&gt;
我们在以前写sql的时候，都习惯给自己写一个helper，但是这里不用了，别人都帮你写好了，你拿去直接调用即可&lt;br/&gt;MySqlHelper包含了丰富的api，各种增删改查，也基本满足你的需求了，这个和以前使用没什么区别
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;配置你的数据库连接信息&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ConnString = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;server=192.168.1.2;userid=root;pwd=123456;port=3306;database=redenvelopes;SslMode=none&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            DataSet dataSet&lt;/span&gt;= MySqlHelper.ExecuteDataset(ConnString, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select  * from  luckmoney &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
             
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个虽好，但是不利于封装到实体对象中，&lt;/p&gt;
&lt;p&gt;所以我们引入了Dapper&lt;/p&gt;
&lt;p&gt;如果学过java的人看到这个，是不是感觉挺眼熟，java中有一个mapper&lt;/p&gt;
&lt;p&gt;本人也学过java，所以有这个感觉。&lt;/p&gt;
&lt;p&gt;Dapper是一款轻量级ORM工具&lt;/p&gt;
&lt;h3&gt;为什么选择Dapper&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;轻量。只有一个文件（&lt;a href=&quot;https://github.com/StackExchange/dapper-dot-net/blob/master/Dapper%20NET40/SqlMapper.cs&quot; target=&quot;_blank&quot;&gt;SqlMapper.cs&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;速度快。Dapper的速度接近与IDataReader，比DataTable好很多&lt;/li&gt;
&lt;li&gt;支持多种数据库，包括sqlite, sqlce, firebird, oracle, MySQL, PostgreSQL and SQL Server&lt;/li&gt;
&lt;li&gt;可以映射一对一，一对多，多对多等多种关系。&lt;/li&gt;
&lt;li&gt;性能高。通过Emit反射IDataReader的序列队列，来快速的得到和产生对象，性能不错。&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
当然最重要的是使用起来非常的方便。&lt;br/&gt;在我们上面代码基础上，引入Dapper后，你会发现变得不一样了&lt;br/&gt;这里我们先加一个实体&lt;br/&gt;如下所示：
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;MySqlConnection被扩展了更多的方法，这些都是Dapper所带来的&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; MySql.Data.MySqlClient;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Data;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Dapper;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; MySQL_Demo
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;配置你的数据库连接信息&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ConnString = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;server=192.168.1.2;userid=root;pwd=123456;port=3306;database=redenvelopes;SslMode=none&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            MySqlConnection mySqlConnection &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MySqlConnection(ConnString);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; list = mySqlConnection.Query&amp;lt;luckmoney&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select  * from  luckmoney &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; item &lt;span&gt;in&lt;/span&gt;&lt;span&gt; list)
            {
                Console.WriteLine(item.id);
            }
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; luckmoney
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; id
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;decimal&lt;/span&gt;&lt;span&gt; money
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; consumer
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; producer
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;;
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/132436/201910/132436-20191004190936210-1174880311.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 如果你想用参数，也很简单，如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
MySqlConnection mySqlConnection = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MySqlConnection(ConnString);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; list = mySqlConnection.Query&amp;lt;luckmoney&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;select  * from  luckmoney  where id=@id  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;new&lt;/span&gt; { id=&lt;span&gt;1&lt;/span&gt;&lt;span&gt; });
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; item &lt;span&gt;in&lt;/span&gt;&lt;span&gt; list)
            {
                Console.WriteLine(item.id);
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这里我就不讲很复杂的东西，只是简单的引导你们怎么使用mysql和Dapper，希望大家多敲一敲代码，里面还有更多东西等你们探索。&lt;/p&gt;
&lt;p&gt;总结：现在敲代码越来越方便了，以前还要自己去敲各种helper，现在别人都给你封装好了，你自己去使用就可以，可以说什么很方便了&lt;/p&gt;
&lt;p&gt;但是不能因此不去探索这些东西的原理，不去探索，你只是敲代码的机器，探索了，你的代码就代入了你的思想和灵魂，我以前和大家一样&lt;/p&gt;
&lt;p&gt;每天就是各种增删改查，各种copy，几年下来，东西没学到多少，年龄大了，更不好找工作。&lt;/p&gt;
&lt;p&gt;各位别嫌弃我废话太多，毕竟我们程序员是孤独的。&lt;/p&gt;

</description>
<pubDate>Fri, 04 Oct 2019 11:19:00 +0000</pubDate>
<dc:creator>流月无双</dc:creator>
<og:description>序曲：学习编程最好的方式就是敲代码，没有比这个更好的方法，哪怕你看了上百G的视频，都不如你自己敲几行代码更为有效。还有要记得敲完代码然后写一篇随笔来记录一下你所学所想。 大家都知道，.netcore是</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/dengbo/p/11622900.html</dc:identifier>
</item>
</channel>
</rss>