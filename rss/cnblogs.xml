<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>【wif系列】C#之单例模式（Singleton Pattern）最佳实践 - 楚人Leo</title>
<link>http://www.cnblogs.com/leolion/p/10275027.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/leolion/p/10275027.html</guid>
<description>&lt;p class=&quot;toc&quot;&gt;目录&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;在上一篇译文——《&lt;a href=&quot;https://www.cnblogs.com/leolion/p/10241822.html&quot;&gt;深入理解C#——在C#中实现单例模式&lt;/a&gt;》中，对在C#中实现单例模式进行了详细阐述。我们在日常的开发中可以采用解决方案4或解决方案6来实现单例模式，但每个单例类都需要单独实现。&lt;/p&gt;
&lt;p&gt;我们再来看看使用单例模式的一些场景：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;主要意图：保证一个类仅有一个实例，并提供一个访问它的全局访问点。&lt;br/&gt;主要解决：一个全局使用的类频繁地创建与销毁。&lt;br/&gt;何时使用：当您想控制实例数目，节省系统资源的时候。&lt;br/&gt;使用场景：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;要求生产唯一序列号；&lt;/li&gt;
&lt;li&gt;WEB 中的计数器，不用每次刷新都在数据库里加一次，用单例先缓存起来；&lt;/li&gt;
&lt;li&gt;创建的一个对象需要消耗的资源过多，比如 I/O 与数据库的连接等；&lt;/li&gt;
&lt;li&gt;全局配置文件访问，单例类来保证数据唯一性；&lt;/li&gt;
&lt;li&gt;日志记录帮助类，为节省资源，全局一个实例一般就够了；&lt;/li&gt;
&lt;li&gt;桌面应用常常要求只能打开一个程序实例或一个窗口。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;单例基类&quot;&gt;单例基类&lt;/h2&gt;
&lt;p&gt;可以看到单例模式在程序开发中是非常常见的。既然我们会频繁的使用单例模式，那么有没有什么方式可以更方便的生产我们的单例。当然有，我们往下看。&lt;/p&gt;
&lt;p&gt;对于没有基类的一些类的单例模式实现，可以考虑继承自单例基类。由单例基类派生的类必须是密封类，它确保您不能从这个单例类创建子类。单例的生产就由基类来完成，派生类只需要定义一个无参数的私有构造函数即可，它确保不能在外部创建此类的实例。通过调用继承的实例属性访问类的单例实例和公共成员。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;    /// &amp;lt;summary&amp;gt;
    /// 总括来说，为了使用单例基类创建单例类，您需要执行以下操作:
    /// 
    /// 1) 定义一个派生自SingletonBase [T]的密封类，其中T是您定义的类名。 它确保您不能从此单例类创建子类。
    /// 2) 在类中定义一个无参数的私有构造函数。它确保不能在外部创建此类的实例。
    /// 3) 通过调用Instance属性来访问类的单例实例和公共成员。
    /// 
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;typeparam name=&quot;T&quot;&amp;gt;&amp;lt;/typeparam&amp;gt;
    public abstract class SingletonBase&amp;lt;T&amp;gt; where T : class
    {
        #region Properties

        /// &amp;lt;summary&amp;gt;
        /// 获取该类的单例实例。
        /// &amp;lt;/summary&amp;gt;
        [SuppressMessage(&quot;Microsoft.Design&quot;, &quot;CA1000:DoNotDeclareStaticMembersOnGenericTypes&quot;)]
        public static T Instance =&amp;gt; SingletonFactory.Instance;

        #endregion

        #region Constructors

        #endregion

        /// &amp;lt;summary&amp;gt;
        /// 创建单例实例的单例类工厂。
        /// &amp;lt;/summary&amp;gt;
        private class SingletonFactory
        {
            #region Fields

            /// &amp;lt;summary&amp;gt;
            /// 定义弱引用实例。
            /// &amp;lt;/summary&amp;gt;
            private static WeakReference _instance;

            #endregion

            #region Properties

            /// &amp;lt;summary&amp;gt;
            /// 获取实例。
            /// &amp;lt;/summary&amp;gt;
            internal static T Instance
            {
                get
                {
                    if (!(_instance?.Target is T comparer))
                    {
                        comparer = GetInstance();
                        _instance = new WeakReference(comparer);
                    }

                    return comparer;
                }
            }

            #endregion

            #region Constructors

            /// &amp;lt;summary&amp;gt;
            /// 防止编译器生成默认构造函数。
            /// &amp;lt;/summary&amp;gt;
            private SingletonFactory()
            {
            }

            /// &amp;lt;summary&amp;gt;
            /// 显式静态构造函数，告诉c#编译器不要将类型标记为BeforeFieldInit。
            /// &amp;lt;/summary&amp;gt;
            [SuppressMessage(&quot;Microsoft.Performance&quot;, &quot;CA1810:InitializeReferenceTypeStaticFieldsInline&quot;)]
            static SingletonFactory()
            {
            }

            #endregion

            #region Methods

            /// &amp;lt;summary&amp;gt;
            /// 获取特定类型的实例。
            /// &amp;lt;/summary&amp;gt;
            /// &amp;lt;returns&amp;gt;The &amp;lt;see cref=&quot;T&quot;/&amp;gt;&amp;lt;/returns&amp;gt;
            [SuppressMessage(&quot;Microsoft.Reliability&quot;, &quot;CA2001:AvoidCallingProblematicMethods&quot;, MessageId =
                    &quot;System.Type.InvokeMember&quot;)]
            private static T GetInstance()
            {
                var theType = typeof(T);

                T inst;

                try
                {
                    inst = (T) theType.InvokeMember(theType.Name,
                            BindingFlags.CreateInstance | BindingFlags.Instance | BindingFlags.NonPublic,
                            null, null, null,
                            CultureInfo.InvariantCulture);
                }
                catch (MissingMethodException ex)
                {
                    throw new TypeLoadException(
                            string.Format(CultureInfo.CurrentCulture,
                                    &quot;The type '{0}' must have a private constructor to be used in the Singleton pattern.&quot;,
                                    theType.FullName), ex);
                }

                return inst;
            }

            #endregion
        }
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在&lt;a href=&quot;https://github.com/LeoYang610/wif/blob/master/Source/Wif.Core/Generic/SingletonBase.cs&quot;&gt;SingletonBase&lt;/a&gt;中我们用到了&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/api/system.weakreference?redirectedfrom=MSDN&amp;amp;view=netframework-4.7.2&quot;&gt;WeakReference&lt;/a&gt;，它表示弱引用，即在引用对象的同时仍然允许通过垃圾回收来回收该对象。一般使用场景：对象过大，并且不经常访问。这样我们就可以创建一个弱引用，当不常用该对象的时候，GC可以回收该对象，当需要引用对象，可以先判断弱引用的对象是不是存在，如果存在，就直接使用，如果弱引用的对象已经被回收，那就重新创建一个对象来使用。对于单例对象来说，一般生命周期和应用程序域同步，是无法自动回收的。通过使用&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/api/system.weakreference?redirectedfrom=MSDN&amp;amp;view=netframework-4.7.2&quot;&gt;WeakReference&lt;/a&gt;来确保单例对象在长时间未使用时可以自动释放资源。&lt;/p&gt;
&lt;p&gt;当然这里的&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/api/system.weakreference?redirectedfrom=MSDN&amp;amp;view=netframework-4.7.2&quot;&gt;WeakReference&lt;/a&gt;也可以替换为&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/api/system.lazy-1?redirectedfrom=MSDN&amp;amp;view=netframework-4.7.2&quot;&gt;Lazy&lt;/a&gt;，根据是否需自动回收单例对象和子类是否包含属性和字段这两个方面来选择。如子类中包含属性和字段，则自动回收会导致属性和字段值重置，从而出现不可预估的后果。&lt;/p&gt;
&lt;h2 id=&quot;单例提供者&quot;&gt;单例提供者&lt;/h2&gt;
&lt;p&gt;对于有基类的类来说，上面的单例基类显然是不合适的。我们可以考虑实现一个单例提供者来生产我们的单例。&lt;/p&gt;
&lt;p&gt;通过泛型类传参的方式实现如下：&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;    /// &amp;lt;summary&amp;gt;
    /// 用于从另一个类创建或获取单例的静态助手。
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;typeparam name=&quot;T&quot;&amp;gt;要创建或获取单例的类型。&amp;lt;/typeparam&amp;gt;
    public static class SingletonProvider&amp;lt;T&amp;gt; where T : class, new()
    {
        #region Fields

        /// &amp;lt;summary&amp;gt;
        /// 获取给定类型的单例。
        /// &amp;lt;/summary&amp;gt;
        private static readonly Lazy&amp;lt;T&amp;gt; _lazy = new Lazy&amp;lt;T&amp;gt;(() =&amp;gt; new T());

        #endregion

        #region Properties

        /// &amp;lt;summary&amp;gt;
        /// 获取给定类型的单例。
        /// &amp;lt;/summary&amp;gt;
        public static T Instance =&amp;gt; _lazy.Value;

        #endregion
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;除了泛型类传参，还可以通过Get方法传参，实现如下：&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;    /// &amp;lt;summary&amp;gt;
    /// 用于从另一个类创建或获取单例的静态助手。
    /// &amp;lt;/summary&amp;gt;
    public static class SingletonProvider
    {
        #region Methods

        /// &amp;lt;summary&amp;gt;
        /// 获取指定类型的单例。
        /// &amp;lt;/summary&amp;gt;
        /// &amp;lt;typeparam name=&quot;TParameter&quot;&amp;gt;单例类型。&amp;lt;/typeparam&amp;gt;
        /// &amp;lt;returns&amp;gt;The &amp;lt;see cref=&quot;TParameter&quot; /&amp;gt;单例对象。&amp;lt;/returns&amp;gt;
        public static TParameter Get&amp;lt;TParameter&amp;gt;() where TParameter : class, new()
        {
            return SingletonProvider&amp;lt;TParameter&amp;gt;.Instance;
        }

        #endregion
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;有了以上两种生产单例的方式，我们可以在开发中愉快的使用单例，而免除了具体的繁琐实现。&lt;/p&gt;
&lt;blockquote readability=&quot;1.8269230769231&quot;&gt;
&lt;p&gt;&lt;strong&gt;wif 项目代码：&lt;a href=&quot;https://github.com/LeoYang610/wif&quot; class=&quot;uri&quot;&gt;https://github.com/LeoYang610/wif&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Tue, 15 Jan 2019 17:15:00 +0000</pubDate>
<dc:creator>楚人Leo</dc:creator>
<og:description>[TOC] 前言 在上一篇译文——《 '深入理解C ——在C 中实现单例模式' 》中，对在C 中实现单例模式进行了详细阐述。我们在日常的开发中可以采用解决方案4或解决方案6来实现单例模式，但每个单例类</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/leolion/p/10275027.html</dc:identifier>
</item>
<item>
<title>PHP之ThinkPHP框架（验证码、文件上传、图片处理） - 东小东</title>
<link>http://www.cnblogs.com/dongxiaodong/p/10270168.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dongxiaodong/p/10270168.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt; 验证码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;验证码是框架自带有的，比之前使用GD库简单方便许多，其实现原理基本相似，都是生成图片，保存验证码值到Session中，表单提交验证码，然后进行值的对比验证。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;简单的显示：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201901/1485202-20190115093036059-126602072.png&quot; alt=&quot;&quot; width=&quot;223&quot; height=&quot;134&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;{:url('index/ii')}&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;验证码显示方法1&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;{:captcha_src()}&quot;&lt;/span&gt;&lt;span&gt; alt&lt;/span&gt;&lt;span&gt;=&quot;captcha&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;height: 80px ;width: 200px&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     
&lt;span&gt; 6&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;验证码显示方法2&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{:captcha_img()}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt;       
&lt;span&gt;11&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     
&lt;span&gt;13&lt;/span&gt;    请输入验证码：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;check&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;       
&lt;span&gt;15&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     
&lt;span&gt;17&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;18&lt;/span&gt;     
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;实现点击验证码进行切换：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1485202/201901/1485202-20190115092622537-1523615990.png&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;66&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;{:url('index/ii')}&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;check&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;height: 36px;padding-top: 0px;&quot;&lt;/span&gt;&lt;span&gt; autocomplete&lt;/span&gt;&lt;span&gt;=&quot;off&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;  
&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;{:captcha_src()}&quot;&lt;/span&gt;&lt;span&gt; onClick&lt;/span&gt;&lt;span&gt;=&quot;this.src='{:captcha_src()}'&quot;&lt;/span&gt;&lt;span&gt;  alt&lt;/span&gt;&lt;span&gt;=&quot;captcha&quot;&lt;/span&gt;&lt;span&gt;  style&lt;/span&gt;&lt;span&gt;=&quot;height: 36px ;width: 110px;border: 1px solid #584C4D;vertical-align:middle&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;控制器里处理验证码：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取到post传递的验证码
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    //不区分大小写&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;$checks&lt;/span&gt;=Request::instance()-&amp;gt;post(&quot;check&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(!captcha_check(&lt;span&gt;$checks&lt;/span&gt;&lt;span&gt;)){
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;验证失败&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;echo&lt;/span&gt; &quot;验证码输入错误&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;       }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;echo&lt;/span&gt; &quot;验证码输入成功&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;文件上传&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;文件上传，支持单文件和多文件，上传的文件会自动保存在public下自动创建的目录中，并返回一系列结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;单文件：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;{:url('xiao/xiao2')}&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt; enctype&lt;/span&gt;&lt;span&gt;=&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;      
&lt;span&gt;3&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;filex1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;东小东上传&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;5&lt;/span&gt; 
&lt;span&gt;6&lt;/span&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;namespace app\index\controller;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Xiao
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; xiao2(){
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获取表单上传文件 ,filex1为表单填写的名字&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;$filex&lt;/span&gt; = request()-&amp;gt;&lt;span&gt;file&lt;/span&gt;(&quot;filex1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     
&lt;span&gt;11&lt;/span&gt;         
&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$filex&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取到上传原文件的名字&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$filex&lt;/span&gt;-&amp;gt;getInfo()[&quot;name&quot;&lt;span&gt;]; 
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;echo&lt;/span&gt; &quot;--&amp;lt;br/&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     
&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;移动到/public/uploads/目录下，DS表示根据系统确定的目录分隔符&quot;/&quot;或“\”&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;$info&lt;/span&gt; = &lt;span&gt;$filex&lt;/span&gt;-&amp;gt;move(ROOT_PATH . 'public' . DS . 'uploads'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$info&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     
&lt;span&gt;22&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 成功上传后 获取上传信息
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                //文件的后缀
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                // 如输出 jpg&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;                 &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$info&lt;/span&gt;-&amp;gt;getExtension().&quot;&amp;lt;br&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     
&lt;span&gt;27&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存后的路径
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;                // 如输出 20160820/42a79759f284b767dfcb2a0197904287.jpg&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;                 &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$info&lt;/span&gt;-&amp;gt;getSaveName().&quot;&amp;lt;br&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     
&lt;span&gt;31&lt;/span&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存后的文件名
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                &lt;span&gt;// 如输出 42a79759f284b767dfcb2a0197904287.jpg&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;                &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$info&lt;/span&gt;-&amp;gt;getFilename().&quot;&amp;lt;br&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     
&lt;span&gt;35            &lt;/span&gt; }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 上传失败获取错误信息&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;                &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$filex&lt;/span&gt;-&amp;gt;&lt;span&gt;getError();
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt;             &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; }}}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;多文件：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实现是利用了数组的原理进行的，上传时将文件内容保存到数组中，处理是通过数组的遍历进行取存。利用数组进行多文件上传，更具扩展性&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;http://localhost:8080/ATP5/public/index/xiao/xiao2&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt; enctype&lt;/span&gt;&lt;span&gt;=&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;      
&lt;span&gt; 3&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;filex1[]&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br/&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;filex1[]&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br/&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;filex1[]&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;东小东上传&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;namespace app\index\controller;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Xiao
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; xiao2(){
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获取表单上传文件 ,filex1为表单填写的名字&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;          &lt;span&gt;$filess&lt;/span&gt; = request()-&amp;gt;&lt;span&gt;file&lt;/span&gt;(&quot;filex1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     
&lt;span&gt;10&lt;/span&gt;          &lt;span&gt;//文件&lt;/span&gt;&lt;span&gt;数组的遍历&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;          &lt;span&gt;foreach&lt;/span&gt;(&lt;span&gt;$filess&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span&gt;$filex&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;     
&lt;span&gt;14&lt;/span&gt;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt;移动方法1：按照系统规则实现文件保存
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;          //$info = $filex-&amp;gt;move(ROOT_PATH . 'public' . DS . 'uploads');
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;          //移动方法2：保留原文件名，如果重名会覆盖&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;           &lt;span&gt;$info&lt;/span&gt;=&lt;span&gt;$filex&lt;/span&gt;-&amp;gt;move(ROOT_PATH . 'public' . DS . 'uploads',&lt;span&gt;iconv&lt;/span&gt;(&quot;utf-8&quot;,&quot;gbk&quot;,&lt;span&gt;$filex&lt;/span&gt;-&amp;gt;getInfo()[&quot;name&quot;&lt;span&gt;]));
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;           if($info){
&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存后的路径
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;               // 如输出 20160820/42a79759f284b767dfcb2a0197904287.jpg&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;                &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$info&lt;/span&gt;-&amp;gt;getSaveName().&quot;&amp;lt;br&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     
&lt;span&gt;26&lt;/span&gt;     
&lt;span&gt;27&lt;/span&gt;            }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 上传失败获取错误信息&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;                &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$filex&lt;/span&gt;-&amp;gt;&lt;span&gt;getError();
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;            &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;          &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; }}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;图片处理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;图片处理集成方法可以实现图片信息的获取、图片的裁剪、图片的压缩、图片上水印等，其操作的图片目录均为public目录下，必须加载 use think\Image;模块&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;56&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;namespace app\index\controller;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;use&lt;/span&gt;&lt;span&gt; think\Request;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;use&lt;/span&gt;&lt;span&gt; think\Image;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Xiao
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; xiao2(){
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         
&lt;span&gt; 9&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt;打开public目录下的图片&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;               &lt;span&gt;$image&lt;/span&gt; =Image::open('./rr.jpg'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt;直接获取到上传的图片文件内容
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;              //$image =Image::open(request()-&amp;gt;file('上传的文件表单名'));
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;             //-----------------获取图片信息------------
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;             // 返回图片的宽度&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;              &lt;span&gt;$width&lt;/span&gt; = &lt;span&gt;$image&lt;/span&gt;-&amp;gt;&lt;span&gt;width();
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;              &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回图片的高度&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;              &lt;span&gt;$height&lt;/span&gt; = &lt;span&gt;$image&lt;/span&gt;-&amp;gt;&lt;span&gt;height();
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回图片的类型,如jpeg&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;$type&lt;/span&gt; = &lt;span&gt;$image&lt;/span&gt;-&amp;gt;&lt;span&gt;type();
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回图片的mime类型，如：image/jpeg&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;             &lt;span&gt;$mime&lt;/span&gt; = &lt;span&gt;$image&lt;/span&gt;-&amp;gt;&lt;span&gt;mime();
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回图片的尺寸数组 0 图片宽度 1 图片高度&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;$size&lt;/span&gt; = &lt;span&gt;$image&lt;/span&gt;-&amp;gt;&lt;span&gt;size();
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             dump(&lt;span&gt;$size&lt;/span&gt;&lt;span&gt;) ;    
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;----------------------------------------
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt; &lt;span&gt;            //--------------图片处理-------------------
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;           //裁剪
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;           //更改的是原，无需赋值，且会迭代操作，如第二次裁剪会在第一次的基础上进行
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;           //从位置（0,0）裁剪（宽度，高度）并保存到public中    
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;           //$image-&amp;gt;crop(100, 200)-&amp;gt;save('./crop1.png');
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         
&lt;span&gt;43&lt;/span&gt; &lt;span&gt;           //从位置（0,20）裁剪（宽度，高度）并保存到public中    
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;           //$image-&amp;gt;crop(200, 100,0,20)-&amp;gt;save('./crop2.png');
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt; &lt;span&gt;           //压缩
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;           //等比例压缩，如最大为150*150
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;           //$image-&amp;gt;thumb(150, 150)-&amp;gt;save('./thumb1.png');
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;           //等比例裁剪，如果不能到达标准150*150时，将进行图片裁剪&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt;                 &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt; &lt;span&gt;                //常量，标识缩略图居中裁剪类型
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;                 const THUMB_CENTER = 3;
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;                 &lt;span&gt;//常量，标识缩略图左上角裁剪类型
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;                  &lt;span&gt;const THUMB_NORTHWEST = 4;
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;                 &lt;span&gt;//常量，标识缩略图右下角裁剪类型
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;                 &lt;span&gt;const THUMB_SOUTHEAST = 5;
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;                 &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;59&lt;/span&gt;            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;$image-&amp;gt;thumb(150,150,Image::THUMB_CENTER)-&amp;gt;save('./thumb.png');
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt;           &lt;span&gt;//为图片上水印&lt;/span&gt;
&lt;span&gt;62&lt;/span&gt;                 &lt;span&gt;/*&lt;/span&gt;
&lt;span&gt;63&lt;/span&gt;                 &lt;span&gt;//常量，标识左上角水印
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;                  &lt;span&gt;const WATER_NORTHWEST = 1;
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;                 &lt;span&gt;//常量，标识上居中水印
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;                  &lt;span&gt;const WATER_NORTH = 2;
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;                 &lt;span&gt;//常量，标识右上角水印
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;                  &lt;span&gt;const WATER_NORTHEAST = 3;
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt;                 &lt;span&gt;//常量，标识左居中水印
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;                  &lt;span&gt;const WATER_WEST = 4;
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;                 &lt;span&gt;//常量，标识居中水印
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;                  &lt;span&gt;const WATER_CENTER = 5;
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;                 &lt;span&gt;//常量，标识右居中水印
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt;                  &lt;span&gt;const WATER_EAST = 6;
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;                 &lt;span&gt;//常量，标识左下角水印
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;                  &lt;span&gt;const WATER_SOUTHWEST = 7;
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt;                 &lt;span&gt;//常量，标识下居中水印
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt;                  &lt;span&gt;const WATER_SOUTH = 8;
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt;                 &lt;span&gt;//常量，标识右下角水印
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;                  &lt;span&gt;const WATER_SOUTHEAST = 9;
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt;                &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;82&lt;/span&gt;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图片水印
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt;          &lt;span&gt;//参数1为水印图片地址，参数2为水印位置，参数3为透明度[0,100],100为原图&lt;/span&gt;
&lt;span&gt;84&lt;/span&gt;          &lt;span&gt;$image&lt;/span&gt;-&amp;gt;water('./thumb.png',Image::WATER_NORTHWEST,10)-&amp;gt;save('img/water_image.png'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt; 
&lt;span&gt;86&lt;/span&gt;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt;文字水印
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt;          &lt;span&gt;//参数（文字内容，文字字体，大小，RGB,位置，相对位置偏移量,旋转）&lt;/span&gt;
&lt;span&gt;88&lt;/span&gt;          &lt;span&gt;$image&lt;/span&gt;-&amp;gt;text('东小东','font/tt.ttf',30,'#ff00ff',Image::WATER_SOUTHEAST,-20)-&amp;gt;save('img/text_image1.png'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;89&lt;/span&gt;         
&lt;span&gt;90&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;91&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;hr/&gt;
</description>
<pubDate>Tue, 15 Jan 2019 16:38:00 +0000</pubDate>
<dc:creator>东小东</dc:creator>
<og:description>验证码 验证码是框架自带有的，比之前使用GD库简单方便许多，其实现原理基本相似，都是生成图片，保存验证码值到Session中，表单提交验证码，然后进行值的对比验证。 简单的显示： 实现点击验证码进行切</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dongxiaodong/p/10270168.html</dc:identifier>
</item>
<item>
<title>笨办法学Python - 习题5: More Variables and Printing - 无缘の邂逅#</title>
<link>http://www.cnblogs.com/csyxf/p/10274989.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/csyxf/p/10274989.html</guid>
<description>&lt;h2 id=&quot;习题-4-更多的变量和打印&quot;&gt;1、习题 4: 更多的变量和打印&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;学习目标：&lt;/strong&gt;了解用户输入方法，明白pthon2和Python3之间的用户输入的区别。了解格式化字符串(format string)的概念，学会如何创建包含变量内容的字符串。使用专门的格式和语法把变量的内容放到字符串里，然后进行格式化的打印输出。&lt;/p&gt;
&lt;h3 id=&quot;用户输入&quot;&gt;1.1、用户输入&lt;/h3&gt;
&lt;p&gt;在Python3中通常使用的input() 函数直接和用户进行交互，用于等待用户的输入。&lt;/p&gt;
&lt;p&gt;在Python2中通常使用raw_input() 函数来和用户进行交互，基本上raw_input() = input() (python3中),python2中的input() 函数基本上不用，因为在Python2中input() 函数会检查用户输入的是字符还是变量，举个栗子：如果之前定义了name的值，那么name为变量，则当我们输入name的时候，会返回变量name的值，如果之前没有定义name的值则会直接报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1324118/201901/1324118-20190116003125681-1958498535.png&quot; alt=&quot;1547562594689&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1324118/201901/1324118-20190116003125337-298163254.png&quot; alt=&quot;1547562682169&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以：对于用户输入，在Python2 中使用raw_input() ，在Python3中使用 input() 即可&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;格式化输出&quot;&gt;1.2、格式化输出&lt;/h3&gt;
&lt;p&gt;python格式化输出有两种方式：&lt;strong&gt;百分号和format&lt;/strong&gt;&lt;br/&gt;format的功能要比百分号方式强大，其中format独有的可以&lt;strong&gt;自定义字符填充空白、字符串居中显示、转换二进制、整数自动分割、百分比显示&lt;/strong&gt; 等功能是百分号方式不能相比的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;习题五中的练习代码是：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#! -*-coding=utf-8 -*-

my_name = &quot;Zed A. shaw&quot;
my_age = 35
my_height = 74
my_weight = 180
my_eyes = &quot;Blue&quot;
my_teeth = &quot;White&quot;
my_hair = &quot;Brown&quot;

print &quot;Let,s talk about %s.&quot; % my_name

print &quot;He's %d inches tall.&quot; % my_height

print &quot;He's %d pounds heavy.&quot; % my_weight

print &quot;Actually that's not too heavy.&quot;

print &quot;He's got %s eyes and %s hair.&quot; % (my_eyes,my_hair)

print &quot;His teech are usually %s depending on the coffee.&quot; %  my_teeth

#this line is tricky ,try to get it exactly right
print &quot;If I add %d, %d, and %d I get %d.&quot; % (my_age,my_height,my_weight,my_age + my_height + my_weight)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上述代码的运行结果为：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;C:\Python27\python.exe D:/pythoncode/stupid_way_study/demo5/Exer5-1.py
Let,s talk about Zed A. shaw.
He's 74 inches tall.
He's 180 pounds heavy.
Actually that's not too heavy.
He's got Blue eyes and Brown hair.
His teech are usually White depending on the coffee.
If I add 35, 74, and 180 I get 289.

Process finished with exit code 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;从上面的代码可以了解到，%d 和 %s 都是占位符，顾名思义，就是提前占个位置，后面在用%后面的值来替换该占位符，将值放到正确的位置上。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;%d:&lt;/strong&gt; 将整数、浮点数转换成 十 进制表示，并将其格式化到指定位置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;%s:&lt;/strong&gt; 获取传入对象的__ str __方法的返回值，并将其格式化到指定位置&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;同理还有%f, %o %g 等占位符。这里就不一一赘述了。&lt;/p&gt;
&lt;h2 id=&quot;加分习题&quot;&gt;2、加分习题：&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;修改所有的变量名字，把它们前面的&lt;code&gt;my_&lt;/code&gt;去掉。确认将每一个地方的都改掉，不&lt;br/&gt;只是你使用&lt;code&gt;=&lt;/code&gt;赋值过的地方。&lt;/li&gt;
&lt;li&gt;试着使用更多的格式化字符。例如 %r 就是是非常有用的一个，它的含义是“不管什&lt;br/&gt;么都打印出来”。&lt;/li&gt;
&lt;li&gt;在网上搜索所有的 Python 格式化字符。&lt;/li&gt;
&lt;li&gt;试着使用变量将英寸和磅转换成厘米和千克。不要直接键入答案。使用 Python 的&lt;br/&gt;计算功能来完成。&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;我的答案&quot;&gt;3、我的答案&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;3.1、修改所有的变量名字，把它们前面的&lt;code&gt;my_&lt;/code&gt;去掉&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#! -*-coding=utf-8 -*-

name = &quot;Zed A. shaw&quot;
age = 35
height = 74
weight = 180
eyes = &quot;Blue&quot;
teeth = &quot;White&quot;
hair = &quot;Brown&quot;

print &quot;Let,s talk about %s.&quot; % name

print &quot;He's %d inches tall.&quot; % height

print &quot;He's %d pounds heavy.&quot; % weight

print &quot;Actually that's not too heavy.&quot;

print &quot;He's got %s eyes and %s hair.&quot; % (eyes,hair)

print &quot;His teech are usually %s depending on the coffee.&quot; %  teeth

#this line is tricky ,try to get it exactly right
print &quot;If I add %d, %d, and %d I get %d.&quot; % (age,height,weight,age + height + weight)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;C:\Python27\python.exe D:/pythoncode/stupid_way_study/demo5/Exer5-2.py
Let,s talk about Zed A. shaw.
He's 74 inches tall.
He's 180 pounds heavy.
Actually that's not too heavy.
He's got Blue eyes and Brown hair.
His teech are usually White depending on the coffee.
If I add 35, 74, and 180 I get 289.

Process finished with exit code 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述代码去掉前面的“my_”, 并未发现问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2、使用%r 格式化字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;举个栗子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1324118/201901/1324118-20190116003124896-1872477183.png&quot; alt=&quot;1547565218455&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;%s 和 %r 的用法区别：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其主要区别在于 &lt;code&gt;%r&lt;/code&gt; 把原始的信息显示了出来，如字符串保留了引号，%r 用来做 debug处理，因为因为它会显示变量的原始数据（raw data），而其它的符号则是用来向用户显示输出的。%s 只是显示其值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.3、Python格式化字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;字符串格式代码如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1324118/201901/1324118-20190116003123974-894400077.png&quot; alt=&quot;1547569854148&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3.4、试着使用变量将英寸和磅转换成厘米和千克，然后使用Python计算**&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1324118/201901/1324118-20190116003123629-376465840.png&quot; alt=&quot;1547566460309&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;课后扩展&quot;&gt;4、课后扩展&lt;/h2&gt;
&lt;h3 id=&quot;字符串拼接实现格式化输出&quot;&gt;4.1、字符串拼接实现格式化输出&lt;/h3&gt;
&lt;p&gt;字符换一般用“+”加号进行字符串的拼接，一般情况下，字符串拼接情况下的格式化输出不常用&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#! -*-coding=utf-8 -*-

name = raw_input(&quot;name:&quot;)
age = raw_input(&quot;age:&quot;)
job = raw_input(&quot;job:&quot;)
salary = raw_input(&quot;slary:&quot;)

person_infomation = '''
----------------'''+ name + '''的个人信息----------------
name:'''+ name +'''
age :'''+ age + '''
job :'''+ job + '''
salary:'''+ salary +'''
'''
print person_infomation&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述代码的运行结果为：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;C:\Python27\python.exe D:/pythoncode/stupid_way_study/demo5/Exer5-4.py
name:kang   #手工输入的信息
age:24
job:doctor
slary:3000
# 打印输出的信息
----------------kang的个人信息----------------
name:kang
age :24
job :doctor
salary:3000

Process finished with exit code 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述代码就是一个字符串拼接格式化输出的实例，使用加号进行字符串的拼接，但是一般不建议这么写，因为在因为拼接的字符串写法比较差，执行速度慢一般不建议使用，同时需要开辟好几块内存，效率低下。&lt;/p&gt;
&lt;h3 id=&quot;占位符s实现格式化输出&quot;&gt;4.2、占位符%s实现格式化输出&lt;/h3&gt;
&lt;p&gt;如上面习题5实例代码，但是还有几个点需要注意一下：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#! -*-coding=utf-8 -*-

name = raw_input(&quot;name:&quot;)
age = raw_input(&quot;age:&quot;)
job = raw_input(&quot;job:&quot;)
salary = raw_input(&quot;slary:&quot;)

person_infomation = '''
---------------- %s 的个人信息----------------
name:%s
age :%s
job :%s
salary:%s
''' % (name,name,age,job,salary)

print person_infomation&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述代码的运行结果为：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;C:\Python27\python.exe D:/pythoncode/stupid_way_study/demo5/Exer5-5.py
name:kang
age:34
job:doctor
slary:30000

---------------- kang 的个人信息----------------
name:kang
age :34
job :doctor
salary:30000

Process finished with exit code 0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面有几个占位符那么下面就需要引用几个变量，数量上要一一对应，不然程序会直接报错&lt;/p&gt;
&lt;p&gt;%s %d %f帮助检测用户输入的数据类型是否是要求的，不是就直接报错。比如说，我们需要输入的age为整数，那么如果我们使用%s进行占位，那么我们输入的值就会自动被认为是字符型，如果我们需要输入的值为整数型那么需要用%d进行占位。&lt;/p&gt;
&lt;h3 id=&quot;用.format实现格式化输出&quot;&gt;4.3、用.format实现格式化输出&lt;/h3&gt;
&lt;p&gt;相对于占位符%s实现格式化输出这中方式，format功能更强大，该函数把字符串当成一个模板，通过传入的参数进行格式化，并且使用大括号‘{}’作为特殊字符代替‘%’。&lt;/p&gt;
&lt;p&gt;.format的位置匹配规则：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;不带编号，即“{}”&lt;/li&gt;
&lt;li&gt;带数字编号，可调换顺序，即“{1}”、“{2}”&lt;/li&gt;
&lt;li&gt;带关键字，即“{a}”、“{tom}”&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;不带编号的情况&quot;&gt;4.3.1 、不带编号的情况&lt;/h4&gt;
&lt;p&gt;首先看第一个，不带编号的情况，就是按照从前到后的顺序依次匹配&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#! -*-coding=utf-8 -*-

name = raw_input(&quot;name:&quot;)
age = raw_input(&quot;age:&quot;)
job = raw_input(&quot;job:&quot;)
salary = raw_input(&quot;slary:&quot;)

person_infomation = '''
---------------- {} 的个人信息----------------
name:{}
age :{}
job :{}
salary:{}
''' .format(name,name,age,job,salary)

print person_infomation&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;C:\Python27\python.exe D:/pythoncode/stupid_way_study/demo5/Exer5-5.py
name:Jack
age:43
job:teacher
slary:20000

---------------- Jack 的个人信息----------------
name:Jack
age :43
job :teacher
salary:20000

Process finished with exit code 0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面这个代码就是运用了.format() 的不带编号匹配原则，从前到后依次填充format( ) 括号中的值。注意前后顺序很重要，不然就会乱序的。&lt;/p&gt;
&lt;h4 id=&quot;带数字编号的情况&quot;&gt;4.3.2、带数字编号的情况&lt;/h4&gt;
&lt;p&gt;带数字的情况是.format大括号{x}中是0-n，使用{0-n}来先进行占位，然后再在下面使用.format引用上面已定义的变量（一，一定义）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1324118/201901/1324118-20190116003123079-656684112.png&quot; alt=&quot;1547569040579&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;带关键字的情况&quot;&gt;4.3.3、带关键字的情况&lt;/h4&gt;
&lt;p&gt;这里的.format主要是使用多个变量进行占位{_name}然后下面再用.format将定义的变量名和上面已定义的变量进行连接（一，一对应）&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#! -*-coding=utf-8 -*-

name = raw_input(&quot;name:&quot;)
age = raw_input(&quot;age:&quot;)
job = raw_input(&quot;job:&quot;)
salary = raw_input(&quot;slary:&quot;)

person_infomation = '''
---------------- {_name} 的个人信息----------------
name:{_name}
age :{_age}
job :{_job}
salary:{_salary}
''' .format(_name = name,
            _age = age,
            _job = job,
            _salary = salary)

print person_infomation&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;C:\Python27\python.exe D:/pythoncode/stupid_way_study/demo5/Exer5-6.py
name:kang
age:34
job:teacher
slary:3000

---------------- kang 的个人信息----------------
name:kang
age :34
job :teacher
salary:3000

Process finished with exit code 0
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;习题总结&quot;&gt;5、习题总结&lt;/h2&gt;
&lt;p&gt;习题5主要是学习了和用户交互输入需要注意的地方，还学习了格式化输出的各种形式。重点是.format() 函数的使用。&lt;/p&gt;
</description>
<pubDate>Tue, 15 Jan 2019 16:33:00 +0000</pubDate>
<dc:creator>无缘の邂逅#</dc:creator>
<og:description>1、习题 4: 更多的变量和打印 学习目标： 了解用户输入方法，明白pthon2和Python3之间的用户输入的区别。了解格式化字符串(format string)的概念，学会如何创建包含变量内容的字</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/csyxf/p/10274989.html</dc:identifier>
</item>
<item>
<title>你的程序运行使用了多少CPU，秒知！ - Martin666</title>
<link>http://www.cnblogs.com/51bc/p/10274973.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/51bc/p/10274973.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1574024/201901/1574024-20190115235956076-915583828.jpg&quot; alt=&quot;&quot; width=&quot;499&quot; height=&quot;375&quot;/&gt; &lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;span&gt;      朋友们，相信大家日夜操练，代码已经撸了不少了，在跟代码打交道的时候，大家有没有思考过一个问题，想过你的代码完成一个循环或者处理其它事件它到底花了多少时间吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“什么，你不是&lt;strong&gt;装逼&lt;/strong&gt;吧，居然还可以知道代码运行所花的时间？”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;--“&lt;strong&gt;没错&lt;/strong&gt;！”，我通常会假装斯文的深吸一口中华后，意味深长的说。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;。。。。。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;既然装了，就是要解释清楚的。下面，我就跟大家普及普及，讲得不好，萝卜青菜滴不要，请大家猛戳&lt;img src=&quot;https://img2018.cnblogs.com/blog/1574024/201901/1574024-20190116000822610-795626560.png&quot; alt=&quot;&quot; width=&quot;21&quot; height=&quot;21&quot;/&gt;&lt;strong&gt;戳&lt;/strong&gt;死我！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1574024/201901/1574024-20190116002138720-1589787873.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;      大家都知道，任何计算机的硬件里都有 CPU这玩意，这哥们可不是来装逼的，它的全称是&lt;strong&gt;中央处理器&lt;/strong&gt;(Central Processing Unit ),既然是带了“&lt;strong&gt;中央&lt;/strong&gt;”头衔，作用也是霸气滴不行，如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;处理指令&lt;/strong&gt;&lt;/span&gt;，控制程序中指令的执行顺序。程序中的各指令之间是有严格顺序的，必须严格按程序规定的顺序执行，才能保证计算机系统工作的正确性。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;执行操作&lt;/strong&gt;&lt;/span&gt;，一条指令的功能往往是由计算机中的部件执行一系列的操作来实现的。CPU要根据指令的功能，产生相应的操作控制信号，发给相应的部件，从而控制这些部件按指令的要求进行动作。比如，在控制台显示“ Hello World”!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;控制时间&lt;/strong&gt;&lt;/span&gt;，时间控制就是对各种操作实施时间上的定时, 比如：不同程序对应的指令什么时候开始执行，执行多久？在一条指令的执行过程中，在什么时间做什么操作均应受到严格的控制。只有这样，计算机才能有条不紊地指挥众多的应用程序和硬件工作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;处理数据&lt;/strong&gt;&lt;/span&gt;，主要是对数据进行算术运算和逻辑运算。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;      好！霸气侧漏的东西自然有它霸气的理由！由于涉及到的信息量巨大，为了不太为难大家的脑袋上扛着的这块“CPU”，今天我只讲讲我们CPU和时间的话题。要搞清楚这个话题，我们需要来点前戏：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1574024/201901/1574024-20190116001316921-1012734218.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;      我们电脑装了这么多应用程序，很多程序可以同时执行。比如：&lt;span&gt;你可以一边看着小视频，一边聊着QQ，同时你的迅雷还在下载着其他的小视频，这些老爷机（请原谅我把以前只有一块CPU的电脑称之为老爷机）只用一块CPU是怎么做到呢？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;      &lt;span&gt;&lt;strong&gt;&lt;span&gt;答案在此 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;：操作系统（Windows、Unix 和Linux等）会把CPU进行微秒（1微妙 = 0.000001秒）级别的分片，称之为&lt;span&gt;&lt;strong&gt;时间片&lt;/strong&gt;&lt;/span&gt;，即微观上CPU分配给各个程序运行的时间，每个应用程序被分配一个极短的时间段让CPU控制其运行，这个时间段称作它的时间片，即该进程此次允许运行的时间，然后，这些应用程序在规定的时间片内运行，一旦时间结束，就马上切换给下一个程序运行，因为时间片被划分在微妙级别，所以，以我们常人这种0.2秒的反应速度看来，电脑上的程序宝宝们是同时进行的。（&lt;span&gt;注：如果在时间片结束时进程还在运行，则CPU将被剥夺并分配给另一个进程。如果进程在时间片结束前阻塞或结束，则CPU当即进行切换。而不会造成CPU资源浪费。在宏观上：我们可以同时打开多个应用程序，每个程序并行不悖，同时运行。但在微观上：由于只有一个CPU，一次只能处理某个应用程序的一小部分，如何做到对所有应用程序处理公平，主流方法就是引入时间片，每个程序轮流执行。&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好！搞清楚了时间片的概念，接下来就好理解程序完成一个循环或者处理其它事件所花的时间这个概念了，&lt;span&gt;没错，它就是指 CPU 用来执行这段代码所花的时间片之和！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如下面这段代码：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;for(int i=0; i&amp;lt;10000; i++) ;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;span&gt;假设CPU运行这段代码，被分成10个时间片才能运行完，每个时间片是1微秒，那么真正所花在运行代码上的CPU时间是：&lt;/span&gt;&lt;span&gt;10 x 1 = 10 微秒&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好！说到这里，很多同学可能会大声叫好！终于理解这个概念了！&lt;span&gt;&lt;strong&gt;Martin 牛逼，Martin 威武！Martin xxx xxx&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但是，如何获得这个时间，难道要自己取算吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1574024/201901/1574024-20190116000205324-130426654.jpg&quot; alt=&quot;&quot; width=&quot;499&quot; height=&quot;282&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不会! C库已经帮我们准备了一个函数,它就是计时函数是clock(),声明如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       #include &amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       clock_t clock(void);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;描述：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       clock() 函数精确的返回当前程序已运行的的CPU时间。如果要换算成秒，需要将返回的结果除以 CLOCKS_PER_SEC 的值，如果获取失败，则返回 -1.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在这里，有的朋友可能会吓一跳，clock_t 是啥，请原谅我还是个小白呀！！！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实，它只是个长整形数，和long 一样一样滴！ 为什么，你学会了使用typedef 自定义类型，一切都不会再感到惊讶，它其实就是：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  &lt;span&gt;typedef long clock_t; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;或许大家另外还会有个疑问，CLOCKS_PER_SEC 又是什么？那么我来告诉大家，这玩意定义在time.h文件中，它用来表示一秒钟会有多少个时钟计时单元，其定义如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;#define CLOCKS_PER_SEC ((clock_t)1000)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;它意味着，每过千分之一秒（1毫秒），我们调用clock（）函数返回的值就加1。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到次为止, 大家应该就知道该怎么玩耍了吧？还不懂？ 来一段代码带大家理解一下, 下面的代码带大家获取你的机器运行1千万次 -- 操作所花的时间：&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
#include &amp;lt;stdio.h&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;stdlib.h&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;time.h&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;unistd.h&amp;gt;

 

&lt;span&gt;int&lt;/span&gt; main(&lt;span&gt;void&lt;/span&gt;&lt;span&gt;)

{

     &lt;/span&gt;&lt;span&gt;long&lt;/span&gt;  times = &lt;span&gt;10000000L&lt;/span&gt;&lt;span&gt;;

     clock_t start, end;

     &lt;/span&gt;&lt;span&gt;double&lt;/span&gt;&lt;span&gt;    duration;

 

     &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 测量一个事件持续的时间&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;

     printf( &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;执行 %ld 次循环 -- 操作所花的时间： &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, times );

     start &lt;/span&gt;=&lt;span&gt; clock();

 

     &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 程序先休息两秒，这时候不消耗CPU时间 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;

     usleep(&lt;/span&gt;&lt;span&gt;2000000&lt;/span&gt;&lt;span&gt;);

     &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;( times--&lt;span&gt; ) ;

     end &lt;/span&gt;=&lt;span&gt; clock();

     duration &lt;/span&gt;= (&lt;span&gt;double&lt;/span&gt;)(end - start) /&lt;span&gt; CLOCKS_PER_SEC;

     printf( &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%f 秒\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, duration );

     system(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

 

     &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;    &lt;span&gt;在我笔记本上运行的结果是：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2Z6Kqy9ZgMaHib8IICfVp4ibjYPz9APHAr6Qkic8wAaM23FWicMGj31cXOPILUvcAS3h55m9AkERn87QQlficTUNeJQ/640?wx_fmt=png&quot; alt=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2726326742976067&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;961&quot;/&gt;&lt;/p&gt;

&lt;p&gt;    &lt;strong&gt;大家也可以在你们的电脑是执行下，看看你们的笔记本是否可以可以甩我一条街！&lt;img src=&quot;https://img2018.cnblogs.com/blog/1574024/201901/1574024-20190116002239930-1717080507.png&quot; alt=&quot;&quot; width=&quot;29&quot; height=&quot;29&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 15 Jan 2019 16:26:00 +0000</pubDate>
<dc:creator>Martin666</dc:creator>
<og:description>朋友们，相信大家日夜操练，代码已经撸了不少了，在跟代码打交道的时候，大家有没有思考过一个问题，想过你的代码完成一个循环或者处理其它事件它到底花了多少时间吗？ “什么，你不是装逼吧，居然还可以知道代码运</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/51bc/p/10274973.html</dc:identifier>
</item>
<item>
<title>MapServer Configuring with IIS - eshine</title>
<link>http://www.cnblogs.com/eshinex/p/10272104.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/eshinex/p/10272104.html</guid>
<description>&lt;p&gt;&lt;strong&gt;MapServer Configuring with IIS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1.MapServer简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　MapServer是一个用C语言编写的&lt;a href=&quot;http://www.opensource.org/&quot; target=&quot;_blank&quot;&gt;开源&lt;/a&gt;地理数据呈现引擎。除了浏览地理信息系统数据之外，MapServer还允许您创建“地理图像地图”，即可以引导用户访问内容的地图。&lt;/p&gt;
&lt;p&gt;　　MapServer最初是由明尼苏达大学（UMN）Fornet项目与美国宇航局和明尼苏达自然资源部（MNDNR）合作开发的。后来，它由Terrasip项目主办，这是一个由美国国家航空航天局赞助的UMN和一个土地管理利益联盟之间的项目。&lt;/p&gt;
&lt;p&gt;　　MAPServer是&lt;a href=&quot;http://www.osgeo.org/&quot; target=&quot;_blank&quot;&gt;OsGeo&lt;/a&gt;基金会的创始项目之一，并由越来越多的开发者（从世界各地接近20）维护。它得到了各种组织的支持，这些组织为增强和维护提供资金，并且由由开发人员和其他贡献者组成的MapServer&lt;a href=&quot;https://mapserver.org/psc.html#psc&quot; target=&quot;_blank&quot;&gt;项目&lt;/a&gt;指导委员会在OSGEO内进行管理。所有源代码都可以通过&lt;a href=&quot;http://github.com/mapserver/&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;公开使用。&lt;/p&gt;
&lt;p&gt;　　高级制图输出&lt;/p&gt;
&lt;p&gt;　　　　与比例相关的特征绘制和应用程序执行&lt;/p&gt;
&lt;p&gt;　　　　功能标签，包括标签冲突调解&lt;/p&gt;
&lt;p&gt;　　　　完全可定制的模板驱动输出&lt;/p&gt;
&lt;p&gt;　　　　TrueType字体&lt;/p&gt;
&lt;p&gt;　　　　地图元素自动化（比例尺、参考地图和图例）&lt;/p&gt;
&lt;p&gt;　　　　使用基于逻辑或正则表达式类的主题映射&lt;/p&gt;
&lt;p&gt;　　支持流行的脚本和开发环境&lt;/p&gt;
&lt;p&gt;　　　　PHP、Python、Perl、Ruby、Java和.NET&lt;/p&gt;
&lt;p&gt;　　跨平台支撑&lt;/p&gt;
&lt;p&gt;　　　　Linux、Windows、Mac OS X、Solaris等&lt;/p&gt;
&lt;p&gt;　　支持&lt;a href=&quot;https://mapserver.org/glossary.html#term-ogc&quot; target=&quot;_blank&quot;&gt;众多开放地理空间联盟（OGC）&lt;/a&gt;标准&lt;/p&gt;
&lt;p&gt;　　　　WMS（客户机/服务器）、非事务性WFS（客户机/服务器）、WMC、WCS、过滤器编码、SLD、GML、SOS、OM&lt;/p&gt;
&lt;p&gt;　　多种光栅和矢量数据格式&lt;/p&gt;
&lt;p&gt;　　　　tiff/geotiff、netcdf、mrsid、ecw和许多其他通过gdal&lt;/p&gt;
&lt;p&gt;　　　　&lt;a href=&quot;https://mapserver.org/input/vector/shapefiles.html#shapefiles&quot; target=&quot;_blank&quot;&gt;esri shapfiles&lt;/a&gt;、&lt;a href=&quot;https://mapserver.org/input/vector/postgis.html#input-postgis&quot; target=&quot;_blank&quot;&gt;postgis&lt;/a&gt;、&lt;a href=&quot;https://mapserver.org/input/vector/sqlite.html#sqlite&quot; target=&quot;_blank&quot;&gt;spaceialite&lt;/a&gt;、&lt;a href=&quot;https://mapserver.org/input/vector/arcsde.html#arcsde&quot; target=&quot;_blank&quot;&gt;esri arcsde&lt;/a&gt;、&lt;a href=&quot;https://mapserver.org/input/vector/oracle.html#oci&quot; target=&quot;_blank&quot;&gt;oracle spatial&lt;/a&gt;、&lt;a href=&quot;https://mapserver.org/input/vector/mysql.html#mysql&quot; target=&quot;_blank&quot;&gt;mysql&lt;/a&gt;以及许多其他通过&lt;a href=&quot;https://mapserver.org/glossary.html#term-ogr&quot; target=&quot;_blank&quot;&gt;ogr&lt;/a&gt;的软件。&lt;/p&gt;
&lt;p&gt;　　地图投影支持&lt;/p&gt;
&lt;p&gt;　　　　通过&lt;a href=&quot;https://mapserver.org/glossary.html#term-proj-4&quot; target=&quot;_blank&quot;&gt;PROJ.4&lt;/a&gt;库进行1000秒的动态地图投影&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　2.MapServer与MS4W的区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　ms4w：mapserver for window，本质上就是windows下的MapServer集成，并且附带如Geomoose、Openlayers等。&lt;/p&gt;
&lt;p&gt;　　　　ms4w的包含内容：　　　　　　&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;
&lt;ul&gt;&lt;li&gt;　　Apache version 2.4.37&lt;/li&gt;
&lt;li&gt;　　PHP version 5.6.40&lt;/li&gt;
&lt;li&gt;　　MapServer 7.0.7 CGI and MapScript&lt;/li&gt;
&lt;li&gt;　　GDAL 2.2.4 and bindings&lt;/li&gt;
&lt;li&gt;　　MapCache 1.6.1&lt;/li&gt;
&lt;li&gt;　　mapserver utilities&lt;/li&gt;
&lt;li&gt;　　gdal/ogr utilities&lt;/li&gt;
&lt;li&gt;　　proj.4 utilities&lt;/li&gt;
&lt;li&gt;　　shp2tile utility&lt;/li&gt;
&lt;li&gt;　　shapelib utilities&lt;/li&gt;
&lt;li&gt;　　shpdiff utility&lt;/li&gt;
&lt;li&gt;　　avce00 utilities&lt;/li&gt;
&lt;li&gt;　　spatialite utilities&lt;/li&gt;
&lt;li&gt;　　unixutils&lt;/li&gt;
&lt;li&gt;　　OWTChart 1.2.0&lt;/li&gt;
&lt;li&gt;　　H264 Streaming Module for Apache&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　　　由于是做.net开发，不需要Apache，顾单独下载MapServer。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、准备工作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　1.下载&lt;a href=&quot;http://download.gisinternals.com/sdk/downloads/release-1911-x64-gdal-2-3-3-mapserver-7-2-1.zip&quot; target=&quot;_blank&quot;&gt;release-1911-x64-gdal-2-3-3-mapserver-7-2-1.zip&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　2.解压安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115175329285-694215522.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　2.1打开SDKShell.bat文件查看内容&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　　　　　@echo off&lt;/p&gt;
&lt;p&gt;　　　　　　set SDK_ROOT=%~dp0&lt;br/&gt;　　　　　　set SDK_ROOT=%SDK_ROOT:\\=\%&lt;/p&gt;
&lt;p&gt;　　　　　　echo %SDK_ROOT%&lt;/p&gt;
&lt;p&gt;　　　　　　if &quot;%1&quot; == &quot;setenv&quot; goto setenv&lt;/p&gt;
&lt;p&gt;　　　　　　%comspec% /k &quot;%SDK_ROOT%SDKShell.bat&quot; setenv %1&lt;br/&gt;　　　　　　goto exit&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;span&gt;&lt;strong&gt;:setenv&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;　　　　　　@echo Setting environment for using the GDAL and MapServer tools.&lt;/p&gt;
&lt;p&gt;　　　　　　if &quot;%2&quot;==&quot;hideoci&quot; goto hideoci&lt;/p&gt;
&lt;p&gt;　　　　　　set ocipath=0&lt;br/&gt;　　　　　　set _path=&quot;%PATH:;=&quot; &quot;%&quot;&lt;br/&gt;　　　　　　for %%p in (%_path%) do if not &quot;%%~p&quot;==&quot;&quot; if exist %%~p\oci.dll set ocipath=1&lt;/p&gt;
&lt;p&gt;　　　　　　if &quot;%ocipath%&quot;==&quot;0&quot; goto hideoci&lt;br/&gt;　　　　　　@echo WARNING: If you encounter problems with missing oci libraries then type:&lt;br/&gt;　　　　　　@echo SDKShell hideoci&lt;br/&gt;　　　　　　goto setenv2&lt;/p&gt;
&lt;p&gt;　　　　　&lt;span&gt;　&lt;strong&gt;:hideoci&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;　　　　　　@echo Hiding the OCI plugin library.&lt;br/&gt;　　　　　　if not exist &quot;%SDK_ROOT%bin\gdal\plugins-optional&quot; mkdir &quot;%SDK_ROOT%bin\gdal\plugins-optional&quot;&lt;br/&gt;　　　　　　if exist &quot;%SDK_ROOT%bin\gdal\plugins\ogr_OCI.dll&quot; move &quot;%SDK_ROOT%bin\gdal\plugins\ogr_OCI.dll&quot; &quot;%SDK_ROOT%bin\gdal\plugins-optional\ogr_OCI.dll&quot;&lt;br/&gt;　　　　　　if exist &quot;%SDK_ROOT%bin\gdal\plugins\gdal_GEOR.dll&quot; move &quot;%SDK_ROOT%bin\gdal\plugins\gdal_GEOR.dll&quot; &quot;%SDK_ROOT%bin\gdal\plugins-optional\gdal_GEOR.dll&quot;&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;span&gt;&lt;strong&gt;:setenv2&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;　　　　　　SET &quot;PATH=%SDK_ROOT%bin;%SDK_ROOT%bin\gdal\python\osgeo;%SDK_ROOT%bin\proj\apps;%SDK_ROOT%bin\gdal\apps;%SDK_ROOT%bin\ms\apps;%SDK_ROOT%bin\gdal\csharp;%SDK_ROOT%bin\ms\csharp;%SDK_ROOT%bin\curl;%PATH%&quot;&lt;br/&gt;　　　　　　SET &quot;GDAL_DATA=%SDK_ROOT%bin\gdal-data&quot;&lt;br/&gt;　　　　　　SET &quot;GDAL_DRIVER_PATH=%SDK_ROOT%bin\gdal\plugins&quot;&lt;br/&gt;　　　　　　SET &quot;PYTHONPATH=%SDK_ROOT%bin\gdal\python;%SDK_ROOT%bin\ms\python&quot;&lt;br/&gt;　　　　　　SET &quot;PROJ_LIB=%SDK_ROOT%bin\proj\SHARE&quot;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;　　　　　　:exit&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　　　2.2这个批处理的命令含义为：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　1.获取当前SDKShell.bat文件所在路径&lt;/p&gt;
&lt;p&gt;　　　　　　2.执行 SDKShell.bat 并传参 setenv &lt;/p&gt;
&lt;p&gt;　　　　　　3.如果参数1==&quot;setenv&quot;，则跳转到 &lt;strong&gt;&lt;span&gt;:setenv&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;4.如果参数2==&quot;hideoci&quot;，则跳转到&lt;span&gt;&lt;strong&gt;:hideoci&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;　　　　　　&lt;/strong&gt;&lt;span&gt;5.跳转到&lt;span&gt;&lt;strong&gt;:setenv&lt;/strong&gt;&lt;span&gt;后，判断是否有参数2&quot;hideoci&quot;，就是相关逻辑跳转&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　　　　　6.判断环境变量中的路径文件夹中是否有oci.dll（Oracle Call Interface），如果没有，则跳转到&lt;span&gt;&lt;strong&gt;:hideoci&lt;/strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;执行隐藏OCI plugin library操作；如果有，则跳转到&lt;span&gt;&lt;strong&gt;:setenv2&lt;/strong&gt;&lt;span&gt;，添加相关环境变量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　　　　　7.&lt;span&gt;&lt;strong&gt;:hideoci&lt;/strong&gt;&lt;/span&gt;，即移动相关文件到指定的文件夹（一般电脑上面安装了oracle的均由oci.dll）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　2.3 执行SDKShell.bat文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;strong&gt;添加的环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　注意：%SDK_ROOT%表示的是你的SDKShell.bat文件目录。我的是在 E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1&lt;/p&gt;
&lt;p&gt;　　　　　　PATH中添加：%SDK_ROOT%bin;%SDK_ROOT%bin\gdal\python\osgeo;%SDK_ROOT%bin\proj\apps;%SDK_ROOT%bin\gdal\apps;%SDK_ROOT%bin\ms\apps;%SDK_ROOT%bin\gdal\csharp;%SDK_ROOT%bin\ms\csharp;%SDK_ROOT%bin\curl;&lt;/p&gt;
&lt;p&gt;　　　　　　　　&lt;span&gt;注意，%SDK_ROOT%bin;表示：E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\bin;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　&lt;strong&gt;&lt;span&gt;新建环境变量：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　GDAL_DATA=%SDK_ROOT%bin\gdal-data&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　GDAL_DRIVER_PATH=%SDK_ROOT%bin\gdal\plugins&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　PYTHONPATH=%SDK_ROOT%bin\gdal\python;%SDK_ROOT%bin\ms\python&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　PROJ_LIB=%SDK_ROOT%bin\proj\SHARE&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　创建相关环境变量后（本机win10_x64，我执行SDKShell.bat后并没有添加相关环境变量，不知道是什么问题，可能bat命令的版本不正确，重启后也没有，于是手动添加。），在cmd命令行里面执行：mapserv -v，验证是否安装成功&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115182557975-1397799974.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　OUTPUT=PNG&lt;br/&gt;　　　　　　　　OUTPUT=JPEG&lt;br/&gt;　　　　　　　　OUTPUT=KML&lt;br/&gt;　　　　　　　　SUPPORTS=PROJ&lt;br/&gt;　　　　　　　　SUPPORTS=AGG&lt;br/&gt;　　　　　　　　SUPPORTS=FREETYPE&lt;br/&gt;　　　　　　　　SUPPORTS=CAIRO&lt;br/&gt;　　　　　　　　SUPPORTS=SVG_SYMBOLS&lt;br/&gt;　　　　　　　　SUPPORTS=SVGCAIRO&lt;br/&gt;　　　　　　　　SUPPORTS=ICONV&lt;br/&gt;　　　　　　　　SUPPORTS=FRIBIDI&lt;br/&gt;　　　　　　　　SUPPORTS=WMS_SERVER&lt;br/&gt;　　　　　　　　SUPPORTS=WMS_CLIENT&lt;br/&gt;　　　　　　　　SUPPORTS=WFS_SERVER&lt;br/&gt;　　　　　　　　SUPPORTS=WFS_CLIENT&lt;br/&gt;　　　　　　　　SUPPORTS=WCS_SERVER&lt;br/&gt;　　　　　　　　SUPPORTS=SOS_SERVER&lt;br/&gt;　　　　　　　　SUPPORTS=FASTCGI&lt;br/&gt;　　　　　　　　SUPPORTS=THREADS&lt;br/&gt;　　　　　　　　SUPPORTS=GEOS&lt;br/&gt;　　　　　　　　SUPPORTS=PBF&lt;br/&gt;　　　　　　　　INPUT=JPEG&lt;br/&gt;　　　　　　　　INPUT=POSTGIS&lt;br/&gt;　　　　　　　　INPUT=OGR&lt;br/&gt;　　　　　　　　INPUT=GDAL&lt;br/&gt;　　　　　　　　INPUT=SHAPEFILE&lt;/p&gt;
&lt;p&gt;&lt;em&gt;　　　　　　　　&lt;/em&gt;这是安装安装成功，MapServer相关的输入输出以及支持项功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、配置对IIS的支持&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1.基本要求和注意项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　1.1 你的IIs必须是ii7版本或更高&lt;/p&gt;
&lt;p&gt;　　　　1.2 MapServer使用的默认站点位置在C:\Inetpub\wwwroot&lt;/p&gt;
&lt;p&gt;　　　　1.3 所有的命令和操作请“以管理员方式运行”&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.将安装目录下面bin\ms\apps\中的所有文件复制到bin文件夹中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　可通过cmd命令：xcopy &lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\&lt;/span&gt;bin\ms\apps\* &lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\&lt;/span&gt;bin&lt;/p&gt;
&lt;p&gt;　　　　红色标记部分路径，根据你解压的实际路径修改。&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115184410752-1178608513.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115184428408-55865181.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115184438616-1223921732.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　    &lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115184455715-362735767.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;3.创建C:\Inetpub\wwwroot\mapserver&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115184711494-1352564039.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;4.在C:\Inetpub\wwwroot\mapserver目录下面创建一个web.congif文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;web.config文件是站点控制文件，做.net开大的应该都知道，里面的内容如下&lt;/p&gt;

&lt;p&gt;　　　　　　&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;　　　　　　&amp;lt;configuration&amp;gt;&lt;br/&gt;　　　　　　　　&amp;lt;system.webServer&amp;gt;&lt;br/&gt;　　　　　　　　　　&amp;lt;handlers&amp;gt;&lt;br/&gt;　　　　　　　　　　　　&amp;lt;add name=&quot;MapServerFastCgi&quot; path=&quot;*&quot; verb=&quot;*&quot; type=&quot;&quot; modules=&quot;FastCgiModule&quot; scriptProcessor=&quot;&lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1&lt;/span&gt;\mapserv.exe&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Script&quot; allowPathInfo=&quot;false&quot; preCondition=&quot;&quot; /&amp;gt;&lt;br/&gt;　　　　　　　　　　&amp;lt;/handlers&amp;gt;&lt;br/&gt;　　　　　　　　　　&amp;lt;caching enabled=&quot;true&quot; enableKernelCache=&quot;true&quot; /&amp;gt;&lt;br/&gt;　　　　　　　　&amp;lt;/system.webServer&amp;gt;&lt;br/&gt;　　　　　　&amp;lt;/configuration&amp;gt;&lt;/p&gt;
&lt;p&gt;　　　　注意：红色路径部分按照你安装的mapserver实际路径填写&lt;/p&gt;
&lt;p&gt; 　　&lt;strong&gt;5.在IIS网站名称为“Default Web Site”的默认80端口网站下面添加虚拟目录，名称为mapserver&lt;/strong&gt;&lt;strong&gt;　&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　　　在cmd命令中执行：&quot;%systemroot%\system32\inetsrv\appcmd&quot; add app /site.name:&quot;Default Web Site&quot; /path:/mapserver /physicalPath:&quot;C:\Inetpub\wwwroot\mapserver&quot;&lt;/p&gt;
&lt;p&gt;　　　　或者你手动添加&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115190303805-78262106.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;6.确保IIS安装了 ISAPI 服务器扩展 以及 CGI 模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;ISAPI(Internet Server Application Programming Interface)：可以被 HTTP 服务器加载和调用的 DLL。Internet 服务器扩展也称为 Internet 服务器应用程序 (ISA)，用于增强符合 Internet 服务器 API (ISAPI) 的服务器的功能。ISA 通过浏览器应用程序调用，并且将相似的功能提供给通用网关接口 (CGI) 应用程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;CGI(Common Gateway Interface)：服务器运行时外部程序的规范,按CGI 编写的程序可以扩展服务器功能。CGI应用程序能与浏览器进行交互,还可通过数据库API与数据库服务器等外部数据源进行通信,从数据库服务器中获取数据。格式化为HTML文档后，发送给浏览器，也可以将从浏览器获得的数据放到数据库中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115204326626-662286109.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　在cmd中输入：start /w pkgmgr /iu:IIS-CGI;IIS-ISAPIExtensions;IIS-ISAPIFilter;&lt;/p&gt;
&lt;p&gt;　　　　请重启电脑。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;7.设置mapserver.exe为FastCGI，并允许其在IIS下运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　在cmd中执行以下两个命令：&lt;/p&gt;
&lt;p&gt;　　　　命令1：&quot;%systemroot%\system32\inetsrv\appcmd&quot; set config -section:system.webServer/fastCgi /+&quot;[fullPath='&lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\bin&lt;/span&gt;\mapserv.exe']&quot; /commit:apphost&lt;/p&gt;
&lt;p&gt;　　　　注意红色文字部分按照你的实际安装位置填写&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115215017071-693442963.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　打开C:\Windows\System32\inetsrv\Config\applicationHost.config文件，你可以发现添加的改变&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115215240742-1435323456.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　命令2：&quot;%systemroot%\system32\inetsrv\appcmd&quot; set config /section:isapiCgiRestriction /+&quot;[path='&lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\bin\&lt;/span&gt;mapserv.exe',description='MapServer',allowed='True']&quot;&lt;/p&gt;
&lt;p&gt;　　　　注意：红色标记部分按照实际路径填写&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115215623491-2100412782.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　节点修改的位置&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115215936624-283382345.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;8.打开&lt;a href=&quot;http://localhost/mapserver/&quot; target=&quot;_blank&quot;&gt;http://localhost/mapserver/&lt;/a&gt;可以查看站点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115220147842-1914317721.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　显示：“No query information to decode. QUERY_STRING is set, but empty.”表示mapserver已经在iis里面成功配置为 FastCGI应用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、设置一个应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　1.    在安装目录下面创建文件夹apps\test\&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;打开cmd输入：md E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\test&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115221415410-954579275.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115221422312-2145386563.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115221429730-335480145.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115221439286-1664901847.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.在test文件夹中创建test.map文件，并填写如下内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　2.1创建test.map文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　　&lt;/strong&gt;在cmd命令中输入：cd /d &lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\&lt;/span&gt;apps\test&lt;/p&gt;
&lt;p&gt;　　　　　　主要：红色文字部分按照实际安装路径填写&lt;/p&gt;
&lt;p&gt;　　　　　　在cmd命令中输入：cd.&amp;gt;test.map&lt;/p&gt;
&lt;p&gt;　　　　　　用来创建test.map&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115222043962-786294955.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115222149954-1551977049.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.填写test.map文件内容&lt;/strong&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　MAP&lt;br/&gt;　　　　　　EXTENT -180 -90 180 90&lt;br/&gt;　　　　　　# Set the path to where the map projections are stored&lt;br/&gt;　　　　　　# 设置地图项目的存储位置&lt;br/&gt;　　　　　　CONFIG &quot;PROJ_LIB&quot; &quot;&lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\bin\proj\SHARE&lt;/span&gt;&quot;&lt;br/&gt;　　　　　　NAME &quot;TestMap&quot;&lt;br/&gt;　　　　　　WEB&lt;br/&gt;　　　　　　　　METADATA&lt;br/&gt;　　　　　　　　　　&quot;ows_enable_request&quot; &quot;*&quot;&lt;br/&gt;　　　　　　　　END&lt;br/&gt;　　　　　　END&lt;br/&gt;　　　　　　PROJECTION&lt;br/&gt;　　　　　　　　&quot;init=epsg:4326&quot;&lt;br/&gt;　　　　　　END&lt;br/&gt;　　　　　　LAYER&lt;br/&gt;　　　　　　　　NAME &quot;country_bounds&quot;&lt;br/&gt;　　　　　　　　TYPE RASTER&lt;br/&gt;　　　　　　　　CONNECTION &quot;http://demo.mapserver.org/cgi-bin/wms?&quot;&lt;br/&gt;　　　　　　　　CONNECTIONTYPE WMS&lt;br/&gt;　　　　　　　　METADATA&lt;br/&gt;　　　　　　　　　　&quot;wms_srs&quot; &quot;EPSG:4326&quot;&lt;br/&gt;　　　　　　　　　　&quot;wms_name&quot; &quot;country_bounds&quot;&lt;br/&gt;　　　　　　　　　　&quot;wms_server_version&quot; &quot;1.1.1&quot;&lt;br/&gt;　　　　　　　　　　&quot;wms_format&quot; &quot;image/png&quot;&lt;br/&gt;　　　　　　　　END&lt;br/&gt;　　　　　　END&lt;br/&gt;　　　　END&lt;/p&gt;
&lt;p&gt;　　注意：红色标记部分按照实际路径填写&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115222814888-282693749.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;3.通过下面的路径，打开你所创建的基于IIS的WMS服务应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;路径：http://localhost/mapserver/mapserv?map=&lt;span&gt;E:/SvnWorkspace/LY_WEB_GIS/branches/Documents/ms4w-mapserver-for-wimdows/release-1911-x64-gdal-2-3-3-mapserver-7-2-1/apps/test/&lt;/span&gt;test.map&amp;amp;SERVICE=WMS&amp;amp;VERSION=1.3.0&amp;amp;REQUEST=GetMap&amp;amp;LAYERS=country_bounds&amp;amp;STYLES=&amp;amp;CRS=EPSG:4326&amp;amp;BBOX=-180,-90,180,90&amp;amp;WIDTH=400&amp;amp;HEIGHT=300&amp;amp;FORMAT=image/png&lt;/p&gt;
&lt;p&gt;　　　　注意：红色部分根据实际路径填写&lt;/p&gt;

&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115225746529-1345655948.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;五、添加日志记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　1.在test.map文件下面添加如下内容&lt;/strong&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;strong&gt;　　　　&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　　　# DEBUG a value from 0 (OFF) to 5 (detailed)&lt;br/&gt;　　　　# DEBUG a ，0-5之间，0关闭日志，5最详细&lt;br/&gt;　　　　DEBUG 5&lt;br/&gt;　　　　CONFIG &quot;MS_ERRORFILE&quot; &quot;logs\ms.log&quot;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115232951408-507802825.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;2.创建文件夹logs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;cmd输入：cd /d &lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\test&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　cmd输入：md logs&lt;/p&gt;

&lt;p&gt;　　　　注意：红色路径部分按照实际路径填写&lt;/p&gt;
&lt;p&gt;　　　　因为日志文件时根据map文件相对路径决定的，所以测试项目的这个logs文件夹建立在test.map通目录&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;3.根据当前站点应用程序池设置IIS对logs文件夹的读写权限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;cmd输入：icacls &quot;&lt;span&gt;E:\SvnWorkspace\LY_WEB_GIS\branches\Documents\ms4w-mapserver-for-wimdows\release-1911-x64-gdal-2-3-3-mapserver-7-2-1\apps\test\logs&lt;/span&gt;&quot; /grant &quot;IIS AppPool\DefaultAppPool&quot;:(OI)(CI)RW&lt;/p&gt;
&lt;p&gt;　　　　注意：红色部分根据实际路径填写&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115234407569-2096763080.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/249616/201901/249616-20190115234520354-526780542.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　或者你右键点击log文件夹，在安全中添加IIS NETWORK对象有相关权限。&lt;/p&gt;
&lt;p&gt;　　　　刷新站点，自动创建ms.log文件。说明权限正确，已经开启日志记录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;其实我就是个搬砖的，按照官网说明文档一步一步来。官网的文档比较老了，所以在配置test.map文件时出现了点问题。&lt;/p&gt;
&lt;p&gt;　　其中，OUTPUT并不包含GIF，而官网的test.map内容中有&quot;wms_format&quot;          &quot;image/gif&quot;，官网配置样例版本的MapServer版本比较老，新版本已经不支持gif，或者说你可以重新编译源代码，使其支持gif输出。&lt;/p&gt;
&lt;p&gt;　　详情可看&lt;a href=&quot;http://download.gisinternals.com/sdk/downloads/release-1911-x64-gdal-2-3-3-mapserver-7-2-1-src.zip&quot; target=&quot;_blank&quot;&gt;源码release-1911-x64-gdal-2-3-3-mapserver-7-2-1-src.zip&lt;/a&gt;中的nmake.opt文件，其中214行写到“Historical defines to use GIF as a result of the old Unisys patent”&lt;/p&gt;
&lt;p&gt;　　如何添加其他输入输出，请见官网文档，如添加PDF格式输出。&lt;a href=&quot;https://www.mapserver.org/output/pdf.html&quot; target=&quot;_blank&quot;&gt;https://www.mapserver.org/output/pdf.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　Gis门外汉，欢迎拍砖。&lt;/p&gt;

</description>
<pubDate>Tue, 15 Jan 2019 16:07:00 +0000</pubDate>
<dc:creator>eshine</dc:creator>
<og:description>MapServer Configuring with IIS 一、前言 1.MapServer简介 MapServer是一个用C语言编写的开源地理数据呈现引擎。除了浏览地理信息系统数据之外，MapSe</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/eshinex/p/10272104.html</dc:identifier>
</item>
<item>
<title>利用shell脚本生成CHANGELOG.md（包含git提交规范） - LinkinStar</title>
<link>http://www.cnblogs.com/linkstar/p/10274943.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/linkstar/p/10274943.html</guid>
<description>&lt;h2 id=&quot;toc_0&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;我们经常看到github上面有很多CHANGELOG.MD包含版本的更新信息，如果我们的git提交能遵循一定的规范，那么使用gitlog就能很方便的生成它&lt;/p&gt;

&lt;h2 id=&quot;toc_1&quot;&gt;生成结果&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/899548/201901/899548-20190116000224859-713682111.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;

&lt;h2 id=&quot;toc_2&quot;&gt;shell脚本&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/LinkinStars/springBootTemplate/blob/master/gitlog.sh&quot; target=&quot;_blank&quot;&gt;https://github.com/LinkinStars/springBootTemplate/blob/master/gitlog.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将脚本放在项目的根目录，然后给与权限，然后运行后，就能生成和上面差不多的CHANGELOG.md&lt;/p&gt;

&lt;h2 id=&quot;toc_3&quot;&gt;git提交规范&lt;/h2&gt;
&lt;p&gt;当然如果你和上面不一样也正常，需要你git提交的message按照一定的规范，如下：&lt;/p&gt;
&lt;p&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;&lt;br/&gt;&amp;lt;BLANK LINE&amp;gt;&lt;br/&gt;&amp;lt;body&amp;gt;&lt;br/&gt;&amp;lt;BLANK LINE&amp;gt;&lt;/p&gt;
&lt;p&gt;- type：用于说明commit的类别，规定为如下几种&lt;br/&gt;-- feat (增加新功能)&lt;br/&gt;-- fix (修改bug)&lt;br/&gt;-- docs (文档修改)&lt;br/&gt;-- style (代码格式修改)&lt;br/&gt;-- refactor (重构并且不影响任何功能)&lt;br/&gt;-- test (测试代码修改)&lt;br/&gt;-- chore (维护相关杂项)&lt;/p&gt;&lt;p&gt;- scope：【可选】用于说明commit的影响范围&lt;br/&gt;- subject：commit的简要说明，一句话描述这次的改动，尽量简短&lt;br/&gt;- body&lt;br/&gt;更新的具体细节&lt;/p&gt;
&lt;p&gt;具体实例就和上面的图片中所示&lt;br/&gt;这个规范是google上面来的，需要科学上网&lt;br/&gt;&lt;a href=&quot;https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0&quot; target=&quot;_blank&quot;&gt;https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相关还有：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&quot; target=&quot;_blank&quot;&gt;http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;里面也有相应的工具可以生成，但是我觉得还是shell脚本好用，因为对于mac或者linux不需要任何环境依赖&lt;/p&gt;

&lt;p&gt;PS:脚本很简单，你可以根据你的实际情况进行调整输出的格式数据等&lt;/p&gt;

</description>
<pubDate>Tue, 15 Jan 2019 16:02:00 +0000</pubDate>
<dc:creator>LinkinStar</dc:creator>
<og:description>前言 我们经常看到github上面有很多CHANGELOG.MD包含版本的更新信息，如果我们的git提交能遵循一定的规范，那么使用gitlog就能很方便的生成它 生成结果 ￼ shell脚本 http</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/linkstar/p/10274943.html</dc:identifier>
</item>
<item>
<title>spring之旅第一篇-初识spring - 茶底世界</title>
<link>http://www.cnblogs.com/yuanqinnan/p/10274934.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yuanqinnan/p/10274934.html</guid>
<description>&lt;h2&gt;一、&lt;span class=&quot;md-expand&quot;&gt;概述&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;只要用框架开发java，一定躲不过spring，Spring是一个轻量级的Java开源框架，存在的目的是用于构建轻量级的J2EE应用。Spring的核心是控制反转(IOC)和面向切面编程(AOP)。spring有如下特点：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;ol-list&quot; readability=&quot;2&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;轻量级：应用大小和应用开支，包括应用方式&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;DI/IoC：提供松耦合的一种实现技术&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;AOP：切面编程将业务逻辑从应用服务中分离&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;容器：包含并管理应用对象的生命周期和配置&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;-1&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;框架：使用组件配置组合成复杂的应用，并提供很多基础功能&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;由于spring是一个容器型的框架，所以它不排斥其他框架，并且可以轻松的整合其他框架。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-focus&quot;&gt;&lt;span&gt;Spring以一种非侵入式的方式来管理你的代码，Spring提倡”最少侵入”，这也就意味着你可以适当的时候安装或卸载Spring 。&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-focus&quot;&gt;&lt;span&gt;二、模块&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Spring框架大约由20多个小模块组成，这些模块分为：核心容器，数据访问/集成，Web，面向切面编程(AOP)，消息和测试等等，如下图所示&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115234947710-1462971177.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;下面逐一介绍这几大模块：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;1.核心容器：核心容器包括spring-core, spring-beans,spring-context, spring-context-support, 和spring-express,其中spring-core和spring-beans模块提供框架的基础部分，包括控制反转和依赖注入。BeanFactory是一个复杂的工厂模式的实现。上下文(spring-context)模块建立在Core和Bean模块的基础之上：它提供了一种框架风格来访问对象，类似于JNDI注册表。Context模块继承了Bean模块的特点并增加了对国际化、事件传播、资源加载等的支持。ApplicationContext接口是Context模块的焦点。spring-context-support支持将第三方库集成到Spring应用中，例如缓存，JavaMail、模板引擎等。spring-expression模块为运行时查询和操作对象提供了强大的表达式语言，它是JSP2.1中的EL语言的扩展，这种语言支持设置和获取属性值，属性赋值，方法调用，访问数组，逻辑和算术运算符，还支持列表投影、选择和常见的聚合。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;2.面向切面：Spring的AOP封装包提供了符合AOP Alliance规范的面向切面的编程实现，让你可以定义，例如方法拦截器和切点，从逻辑上讲，从而减弱代码的功能耦合，清晰的被分离开。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;3.消息传送：Spring FrameWork 4包括一个spring-messaging模块，它是从Spring集成项目的关键抽象，如Message, MessageChannel,MessageHandle。该模块该包含一组注释映射消息的方法，类似Spring MVC基于注释的编程模型。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;4.数据访问/集成：这一层包括JDBC、ORM、OXM、JMS和事务模块。spring-jdbc模块提供了一个JDBC抽象层从而消除了令人乏味的JDBC编程和解析数据库提供商特定的错误。spring-tx模块支持类的编程和声明式事务管理，实现特殊的接口和你的POJO(Plain Old Java Objects)。spring-orm模块提供了流行的对象-关系映射集成层API，包括JPA、JDO和Hibernate。使用spring-orm模块可以使这ORM框架结合Spring提供的其他特性，比如前面提到的简单的声明式事务管理。spring-oxm模块提供了一个抽象层，支持对象/XML映射的实现，如JAXB、 Castor、XMLBeans、 JiBX和XStream。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-expand&quot;&gt;5.网络层：包括spring-web、spring-webmvc、spring-websocket和spring-webmvc-portlet模块。spring-web模块提供基础的针对web开发的集成特性，包括文件上传功能、利用Servlet侦听器进行IOC容器初始化和针对web的应用上下文。它还包括一个HTTP客户端和Spring的web部件的远程支持。spring-webmvc模块包括Spring的MVC模型和REST Web服务实现的web应用程序，Spring的MVC框架提供了一种清晰的分离模型，在领域模型代码和web form之间，并且还可以借助Spring框架的其他特性。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-focus&quot;&gt;&lt;span&gt;6.测试层：spring-test模块支持单元测试和包含Junit或者TestNG的集成测试，它提供了Spring的ApplicationContext一致性装载和这些上下文的缓存机制，它还提供了可用于测试代码隔离的模拟对象。&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-focus&quot;&gt;&lt;span&gt;三、动手创建&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;概念先讲到这，先上手创建项目找找感觉。使用的是idea开发工具。&lt;/span&gt;&lt;span class=&quot;md-expand&quot;&gt;创建项目开始（使用maven构建）&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-expand&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235052586-1567702272.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在Groupid中填入项目的包名即可。Artifactid自定义即可，这里建议与项目名称一致。版本默认在Groupid中填入项目的包名即可。Artifactid自定义即可，这里建议与项目名称一致。版本默认.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235117260-649276851.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;另外的是maven相关设置，不懂得同学可以先去学学maven，项目中都是必学的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235155154-1470561649.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;选择文件位置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235231145-1878550566.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;创建完成，项目架构如图（img与md文件是说明文件，不计其中）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235251630-107385157.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在main下新建文件夹resources用于存放资源文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235408455-930575791.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在resources上右键，选择mark directory as 选中Resources Root&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235456800-883090065.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;添加spring依赖包&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-context&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.2.6.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;pom.xml的完整配置如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;span&gt; xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
  xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.yuanqinnan&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;springLearn&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;springLearn&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; FIXME change it to the project's website &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;http://www.example.com&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.11&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-context&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.2.6.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在刚才新建的resources下新建META-INF包，在META-INF下新建applicationContext.xml.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235622118-901778103.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;文件内容如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
       xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
       xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;新建test包和HelloWorld.java,Main.java结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235716724-143177999.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; HelloWorld {

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String info;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getInfo() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; info;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setInfo(String info) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.info =&lt;span&gt; info;
        }
}
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Main {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args)
    {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;读取配置文件&lt;/span&gt;
        ApplicationContext ctx=&lt;span&gt;new&lt;/span&gt; ClassPathXmlApplicationContext(&quot;META-INF/applicationContext.xml&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取bean的实例&lt;/span&gt;
        HelloWorld t=(HelloWorld) ctx.getBean(&quot;hello&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;调用方法&lt;/span&gt;
&lt;span&gt;        System.out.println(t.getInfo());
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;右键运行Main&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235842506-1164649674.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;得到结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1113901/201901/1113901-20190115235909286-1352885160.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如此，一个spring项目便创建成功，后面再继续学习spring的其他知识&lt;/p&gt;
&lt;p class=&quot;md-end-block md-focus&quot;&gt;源码地址：&lt;a href=&quot;https://gitee.com/yuanqinnan/spring&quot; target=&quot;_blank&quot;&gt;https://gitee.com/yuanqinnan/spring&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 15 Jan 2019 16:00:00 +0000</pubDate>
<dc:creator>茶底世界</dc:creator>
<og:description>一、概述 只要用框架开发java，一定躲不过spring，Spring是一个轻量级的Java开源框架，存在的目的是用于构建轻量级的J2EE应用。Spring的核心是控制反转(IOC)和面向切面编程(A</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yuanqinnan/p/10274934.html</dc:identifier>
</item>
<item>
<title>pandas学习(常用数学统计方法总结、读取或保存数据、缺省值和异常值处理) - -零</title>
<link>http://www.cnblogs.com/-wenli/p/10274932.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/-wenli/p/10274932.html</guid>
<description>
&lt;p&gt;目录&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
常用数学统计方法总结&lt;br/&gt;读取或保存数据

缺省值和异常值处理
&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
count 计算非NA值的数量
describe 针对Series或DataFrame列计算统计
min/max/sum 计算最小值 最大值 总和
argmin argmax 计算能够获取到最小值和最大值的索引位置(整数)
idxmin idxmax 计算能够获取到最小值和最大值的索引值
quantile 计算样本的分位数(0到1)
mean 值的平均数
median 值的中位数
mad 根据平均值计算平均绝对距离差
var 样本数值的方差
std 样本值的标准差
cumsum 样本值的累计和
cummin cummax 样本的累计最小值 最大值
cumprod 样本值的累计积
pct_change 计算百分数变化
&lt;/pre&gt;&lt;/div&gt;






&lt;h2&gt;读取数据&lt;/h2&gt;
&lt;p&gt;pandas可以从外部获取数据，构建数据对象，例如xlsx后缀的ececl文件,csv文件，txt文本等&lt;/p&gt;
&lt;p&gt;下面以txt文件举例：&lt;/p&gt;

&lt;p&gt;先创建txt文本&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1477786/201901/1477786-20190115230935222-102600585.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 读取txt文本数据&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
#读取txt文件
import pandas as pd

# df = pd.read_csv('data1.txt',sep=':')   #默认sep=','以什么分割数据，默认逗号
# print(&quot;data01.csv文件的原始数据==========================&quot;)
# print(df)

df = pd.read_csv('data1.txt',sep=':',header=None) #默认sep=',',header:去除表头,添加默认下标
print(&quot;data01.csv文件的原始数据==========================&quot;)
print(df)
&lt;/pre&gt;
&lt;pre&gt;
#读取excel文件&lt;br/&gt;# df=pd.read_excel('data2.xlsx')&lt;br/&gt;# print(df)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
     0   1   2
0  张伊曼  27  90
1  张巧玲  27  90
2  张诗诗  27  90
3  张思思  27  90
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;保存数据&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
df.to_csv('data1.csv') #保存为csv文件&lt;br/&gt;df.to_excel('data2.xlsx') #保存为xlsx
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt; &lt;/h2&gt;




&lt;h2 class=&quot;brush:python;gutter:true;&quot;&gt;缺省值&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot; readability=&quot;7&quot;&gt;
什么是缺省值&lt;p&gt;null/None/NaN

null经常出现在数据库中

None是python中的缺失值，类型是NoneType

NaN也是python中的缺失值，意思是不是一个数字，类型是float

在pandas和Numpy中会将None替换为NaN，而导入数据库中的时候则需要把NaN替换成None
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
缺失值处理方法
pandas中缺省值NaN的4种处理方法:1 isnull 2 notnull 3 dropna 4 fillna
     方法             说明
dropna         根据标签中的缺失值进行过滤，删除缺失值
fillna         对缺失值进行填充
isnull         返回一个布尔值对象 ，判断 哪些值是缺失值
notnull        isnull的否定式
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;判断缺省值&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;43&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import numpy as np
import pandas as pd
df = pd.DataFrame(np.arange(12).reshape(3,4),index=['a','b','c'],columns=['A', 'B', 'C', 'D'])
#
print(df)

#判断全部值的缺省值
d1=df.isnull()
print(d1)

#在某行中判断缺省值
d2=df[0:1].isnull()
print(d2)

#在某列中# 'A'列判断缺省值
d3=df['A'].isnull()
print(d3)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
   A  B   C   D
a  0  1   2   3
b  4  5   6   7
c  8  9  10  11&lt;br/&gt;A      B      C      D
a  False  False  False  False
b  False  False  False  False
c  False  False  False  False&lt;br/&gt;A      B      C      D
a  False  False  False  False&lt;br/&gt;a    False
b    False
c    False
Name: A, dtype: bool
&lt;/pre&gt;&lt;/div&gt;



&lt;h2&gt;删除缺省值&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
常用参数解释：
how:'all',删除全为空值的行或列
inplace=True:覆盖之前的数据
axis=0:选择行或列
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;46&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import numpy as np
import pandas as pd
dict0 = {
    '语文': [90, 80, 60],
    '数学': [99, 70, 89],
    '外语': [98, 10, 75],
    '物理': 90
}
df0 = pd.DataFrame(dict0)
#
df0['数学'][1] = np.nan
#
print(&quot;df0原数据===============================&quot;)
print(df0)

print(&quot;df0.dropna()===============================&quot;)
print(df0.dropna())       #默认删除有缺省值所在的行

print(&quot;df0.dropna(axis=1)===============================&quot;)
print(df0.dropna(axis=1)) #默认删除有缺省值所在的列

print(&quot;df0.dropna(how='all',axis=1)===============================&quot;)
df0.ix[1] = np.nan
print(df0.dropna(how='all')) #当所有元素是缺省值的时候 才删除

print(&quot;df0.dropna(how='any',axis=1)===============================&quot;)
df0['外语'][0] = np.nan
print(df0.dropna(how='any')) #当所有元素有一个是缺省值的时候 才删除
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
   语文    数学  外语  物理
0  90  99.0  98  90
1  80   NaN  10  90
2  60  89.0  75  90
df0.dropna()===============================
   语文    数学  外语  物理
0  90  99.0  98  90
2  60  89.0  75  90
df0.dropna(axis=1)===============================
   语文  外语  物理
0  90  98  90
1  80  10  90
2  60  75  90
df0.dropna(how='all',axis=1)===============================
     语文    数学    外语    物理
0  90.0  99.0  98.0  90.0
2  60.0  89.0  75.0  90.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;填充缺失值&lt;/h2&gt;
&lt;p&gt;注意：在这里inplace会修改原始数据，并自动保存&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;47&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import numpy as np
import pandas as pd
dict0 = {
    '语文': [90, 80, 60],
    '数学': [99, 70, 89],
    '外语': [98, 10, 75],
    '物理':None
}
df0 = pd.DataFrame(dict0)
print('df0的原始数据=================================')
print(df0)

print('将所有的缺省的数据填充为1=================================')
print(df0.fillna(1))#参数为填入值，可以为单个值，也可以为列表


print('将找到的缺省数据填充为平均值=================================')
print(df0.fillna(df0['语文'].mean()))#结合numpy的数学运算函数,求平均值
print(df0['物理'].fillna(df0['语文'].mean()))#结合numpy的数学运算函数,求平均值,当然pandas自己也有自己的方法
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
df0的原始数据=================================
   语文  数学  外语    物理
0  90  99  98  None
1  80  70  10  None
2  60  89  75  None
将所有的缺省的数据填充为1=================================
   语文  数学  外语  物理
0  90  99  98   1
1  80  70  10   1
2  60  89  75   1
将找到的缺省数据填充为平均值=================================
   语文  数学  外语         物理
0  90  99  98  76.666667
1  80  70  10  76.666667
2  60  89  75  76.666667
0    76.666667
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;异常值处理&lt;/h2&gt;
&lt;p&gt;异常值就是与你想要获取的值偏差太大或者不是想要的值&lt;/p&gt;
&lt;p&gt;先用条件判断筛选出来&lt;/p&gt;
&lt;p&gt;再进行怎样的处理看需要&lt;/p&gt;


&lt;h2&gt;数据去重&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
unique方法用于获取Series或DataFrame某列中的唯一值数组(去重数据后的数组)
value_counts方法用于计算一个Series或DataFrame某列中各值的出现频率
isin方法用于判断矢量化集合的成员资格,是否在里面,可用于选取Series中或DataFrame列中数据的子集
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里演示的是Series类型数据&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;41&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import numpy as np
import pandas as pd
s1 = pd.Series(['a', 'b', 'c', 'b', 'a'])
print(&quot;s1的原始数据==============================&quot;)
print(s1)
#
print(&quot;数据去重方法:s1.unique()==============================&quot;)
print(s1.unique())   #注意:s1.unique()返回的类型也是Series
#
print(&quot;单个值出现的个数:s1.value_counts()['a']==============================&quot;)
print(s1.value_counts()['a'])
#
print(&quot;值是否存在的方法:s1.isin(['a', 'b'])==============================&quot;)
print(s1.isin(['a', 'b']))
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
s1的原始数据==============================
0    a
1    b
2    c
3    b
4    a
dtype: object
数据去重方法:s1.unique()==============================
['a' 'b' 'c']
单个值出现的个数:s1.value_counts()['a']==============================
2
值是否存在的方法:s1.isin(['a', 'b'])==============================
0     True
1     True
2    False
3     True
4     True
dtype: bool
&lt;/pre&gt;&lt;/div&gt;


</description>
<pubDate>Tue, 15 Jan 2019 15:59:00 +0000</pubDate>
<dc:creator>-零</dc:creator>
<og:description>pandas学习(常用数学统计方法总结、读取或保存数据、缺省值和异常值处理) 目录 常用数学统计方法总结 读取或保存数据 读取数据 pandas可以从外部获取数据，构建数据对象，例如xlsx后缀的ec</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/-wenli/p/10274932.html</dc:identifier>
</item>
<item>
<title>EFCore使用JSON_VALUE查询json对象的值 - WeihanLi</title>
<link>http://www.cnblogs.com/weihanli/p/use-json-value-in-ef-core.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/weihanli/p/use-json-value-in-ef-core.html</guid>
<description>&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;SqlServer 从2016开始支持 JSON 操作，可以使用 JSON_VALUE 查询 JSON 对象的某个属性值，&lt;a href=&quot;https://www.jianshu.com/p/34b77a0fba6d&quot;&gt;更多介绍&lt;/a&gt;，现在公司的一些项目主要是使用 EF Core，手写sql较少，针对比较简单的 JSON_VALUE 查询想通过 DbFunction 来实现，于是就有了这篇文章的探索。&lt;/p&gt;
&lt;h2 id=&quot;定义-json_value-dbfunction&quot;&gt;定义 &lt;code&gt;JSON_VALUE&lt;/code&gt; DbFunction&lt;/h2&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    public static class DbFunctions
    {
        [DbFunction(&quot;JSON_VALUE&quot;, &quot;&quot;)]
        public static string JsonValue(string column, [NotParameterized] string path)
        {
            throw new NotSupportedException();
        }
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;在-dbcontext-中注册-dbfunction&quot;&gt;在 DbContext 中注册 DbFunction&lt;/h2&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    public class TestDbContext : DbContext
    {
        public TestDbContext(DbContextOptions&amp;lt;TestDbContext&amp;gt; options) : base(options)
        {
        }

        public DbSet&amp;lt;TestEntity&amp;gt; TestEntities { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasDbFunction(() =&amp;gt; DbFunctions.JsonValue(default(string), default(string)));
        }
    }

    public class TestEntity
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int Id { get; set; }

        public string Extra { get; set; }

        public DateTime CreatedAt { get; set; }
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;使用注册的-dbfunction-查询-json_value&quot;&gt;使用注册的 DbFunction 查询 JSON_VALUE&lt;/h2&gt;
&lt;p&gt;数据库中添加了三条测试数据&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/489462/201901/489462-20190115234950636-1706669826.png&quot; alt=&quot;sample data&quot;/&gt;&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var loggerFactory = new LoggerFactory();
loggerFactory.AddLog4Net();

var optionsBuilder = new DbContextOptionsBuilder&amp;lt;TestDbContext&amp;gt;()
                .UseLoggerFactory(loggerFactory)
                .UseSqlServer(&quot;server=.;database=Test;Integrated Security=True&quot;);

var db = new TestDbContext(optionsBuilder.Options);

var names = db.TestEntities.AsNoTracking().Select(t =&amp;gt; DbFunctions.JsonValue(t.Extra, &quot;$.Name&quot;)).ToArray();&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;监控生成的sql语句&quot;&gt;监控生成的Sql语句&lt;/h2&gt;
&lt;p&gt;我这里通过 log4net 记录执行的 sql 语句，监控到执行的sql语句如下：&lt;/p&gt;
&lt;pre class=&quot;sql&quot;&gt;
&lt;code&gt;SELECT JSON_VALUE([t].[Extra], N'$.Name')
FROM [TestEntities] AS [t]&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;source&quot;&gt;Source&lt;/h2&gt;
&lt;p&gt;示例代码： &lt;a href=&quot;https://github.com/WeihanLi/WeihanLi.EntityFramework/blob/master/samples/WeihanLi.EntityFramework.Samples/Program.cs&quot; class=&quot;uri&quot;&gt;https://github.com/WeihanLi/WeihanLi.EntityFramework/blob/master/samples/WeihanLi.EntityFramework.Samples/Program.cs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
</description>
<pubDate>Tue, 15 Jan 2019 15:51:00 +0000</pubDate>
<dc:creator>WeihanLi</dc:creator>
<og:description>EFCore使用JSON_VALUE查询json对象的值 Intro SqlServer 从2016开始支持 JSON 操作，可以使用 JSON_VALUE 查询 JSON 对象的某个属性值， '更多</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/weihanli/p/use-json-value-in-ef-core.html</dc:identifier>
</item>
<item>
<title>素数测试 - jostree</title>
<link>http://www.cnblogs.com/jostree/p/10274890.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jostree/p/10274890.html</guid>
<description>&lt;p&gt;作者：jostree 转载请注明出处 &lt;a href=&quot;https://www.cnblogs.com/jostree/p/10274890.html&quot; class=&quot;uri&quot;&gt;https://www.cnblogs.com/jostree/p/10274890.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;费马小定理&quot;&gt;费马小定理&lt;/h2&gt;
&lt;p&gt;如果p是素数，a是小于p的正整数，那么a^(p-1) mod p = 1。&lt;/p&gt;
&lt;p&gt;首先我们证明这样一个结论：如果p是一个素数的话，那么对任意一个小于p的正整数a，a, 2a, 3a, ..., (p-1)a除以p的余数正好是一个1到p-1的排列。例如，5是素数，3, 6, 9, 12除以5的余数分别为3, 1, 4, 2，正好就是1到4这四个数。&lt;/p&gt;
&lt;p&gt;反证法，假如结论不成立的话，那么就是说有两个小于p的正整数m和n使得na和ma除以p的余数相同。不妨假设n&amp;gt;m，则p可以整除a(n-m)。但p是素数，那么a和n-m中至少有一个含有因子p。这显然是不可能的，因为a和n-m都比p小。&lt;/p&gt;
&lt;p&gt;用同余式表述，我们证明了： (p-1)! ≡ a * 2a * 3a * … * (p-1)a (mod p)&lt;br/&gt;也即： (p-1)! ≡ (p-1)! * a^(p-1) (mod p)&lt;br/&gt;两边同时除以(p-1)!，就得到了我们的最终结论： 1 ≡ a^(p-1) (mod p)&lt;/p&gt;
&lt;h2 id=&quot;miller-rabbin-素数测试&quot;&gt;Miller-Rabbin 素数测试&lt;/h2&gt;
&lt;p&gt;如果p是素数，x是小于p的正整数，且x^2 mod p = 1，那么要么x=1，要么x=p-1。这是显然的，因为x^2 mod p = 1相当于p能整除x^2-1，也即p能整除(x+1)(x-1)。由于p是素数，那么只可能是x-1能被p整除(此时x=1)或x+1能被p整除(此时x=p-1)。&lt;/p&gt;
&lt;p&gt;从而我们选取不同的x，对p其进行进行素数测试，即可。代码如下：&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
#include &amp;lt;cstring&amp;gt;
#include &amp;lt;cstdlib&amp;gt;
#include  &amp;lt;ctime&amp;gt;

using namespace std;
typedef long long LL;
const int S = 100;

LL mul(LL a, LL b, LL n)
{
    LL res = 0;
    while( b )
    {
        if( b &amp;amp; 1 )
        {
            res += a;
            res %= n;
        }
        a = (a + a) % n;
        b = b &amp;gt;&amp;gt; 1;
    }
    return res;
}

LL pow(LL a, LL b, LL n)
{
    LL res = 1;
    while( b )
    {
        if( b &amp;amp; 1 )
        {
            res = mul(res, a, n);
        }
        a = mul(a, a, n);
        b = b &amp;gt;&amp;gt; 1;
    }
    return res;
}

bool miller_rabbin(LL n)
{
    if( n == 2 ) return true;
    if(n &amp;lt; 2 || !(n &amp;amp; 1)) return false;
    int t = 0;
    LL a, x, y, u = n - 1;
    while((u &amp;amp; 1) == 0) t++, u&amp;gt;&amp;gt;=1;
    for( int i = 0 ; i &amp;lt; S ; i++ )
    {
        a = rand() % (n - 1) + 1;
        x = pow(a, u, n);
        for( int j = 0 ; j &amp;lt; t ; j++ )
        {
            y = mul(x, x, n);
            if( y == 1 &amp;amp;&amp;amp; x != 1 &amp;amp;&amp;amp; x != n - 1 )
            {
                return false;
            }
            x = y;
        }
        if( x != 1 ) return false;
    }
    return true;
}


int main(int argc, char *argv[])
{
    int T;
    scanf(&quot;%d&quot;, &amp;amp;T);
    LL N;
    srand(time(0));
    while( T-- )
    {
        cin&amp;gt;&amp;gt;N;
        if( miller_rabbin(N) )
        {
            cout&amp;lt;&amp;lt;&quot;Yes&quot;&amp;lt;&amp;lt;endl;
        }
        else
        {
            cout&amp;lt;&amp;lt;&quot;No&quot;&amp;lt;&amp;lt;endl;
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 15 Jan 2019 15:49:00 +0000</pubDate>
<dc:creator>jostree</dc:creator>
<og:description>作者：jostree 转载请注明出处 https://www.cnblogs.com/jostree/p/10274890.html 费马小定理 如果p是素数，a是小于p的正整数，那么a^(p 1)</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jostree/p/10274890.html</dc:identifier>
</item>
</channel>
</rss>