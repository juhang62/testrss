<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>动态规划与背包问题 - cnng</title>
<link>http://www.cnblogs.com/cnng/p/12334032.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cnng/p/12334032.html</guid>
<description>&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;strong&gt;背包问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table title=&quot;&quot; summary=&quot;&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;物品&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;重量&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;价格&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;66&quot;&gt;
&lt;p&gt;&lt;span&gt;吉他(G)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;1500&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;音响(S)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;4&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;3000&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;电脑(L)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;3&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;2000&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;背包问题：有一个背包，容量为4磅 ， 现有如下物品&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;要求达到的目标为装入的背包的总价值最大，并且重量不超出&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;要求装入的物品不能重复&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;动态规划算法介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;动态规划(&lt;strong&gt;Dynamic Programming&lt;/strong&gt;)算法的核心思想是：将大问题划分为小问题进行解决，从而一步步获取最优解的处理算法&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;动态规划算法与分治算法类似，其基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;与&lt;strong&gt;分治法不同的是&lt;/strong&gt;，&lt;strong&gt;适合于用动态规划求解的问题，经分解得到子问题往往不是互相独立的。&lt;/strong&gt; ( 即下一个子阶段的求解是建立在上一个子阶段的解的基础上，进行进一步的求解 )&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;动态规划可以通过&lt;strong&gt;填表的方式（便于理解）&lt;/strong&gt;来逐步推进，得到最优解.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;strong&gt;背包问题&lt;/strong&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;strong&gt;解决思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table title=&quot;&quot; summary=&quot;&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;物品&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;重量&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;价格&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;66&quot;&gt;
&lt;p&gt;&lt;span&gt;吉他(G)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;1500&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;音响(S)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;4&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;3000&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;电脑(L)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;64&quot;&gt;
&lt;p&gt;&lt;span&gt;3&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;48&quot;&gt;
&lt;p&gt;&lt;span&gt;2000&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;背包问题：有一个背包，容量为4磅 ， 现有如下物品&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;要求达到的目标为装入的背包的总价值最大，并且重量不超出&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;要求装入的物品不能重复&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;思路分析和图解&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;算法的主要思想，利用动态规划来解决。每次遍历到的第i个物品，根据w[i]和v[i]来确定是否需要将该物品放入背包中。即对于给定的n个物品，设&lt;strong&gt;v[i]&lt;/strong&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;strong&gt;w[i]&lt;/strong&gt;分别为&lt;strong&gt;第&lt;/strong&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;strong&gt;个物品的价值和重量&lt;/strong&gt;，C为背包的容量。再令v[i][j]表示在前i个物品中能够装入容量为j的背包中的最大价值。则我们有下面的结果：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;       (1)  v[i][0]=v[0][j]=0; //表示 填入表 第一行和第一列是0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;               (2) 当w[i]&amp;gt; j 时：v[i][j]=v[i-1][j]   // 当准备加入新增的商品的容量大于 当前背包的容量         时，就直接使用上一个单元格的装入策略&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;                (3) 当j&amp;gt;=w[i]时： v[i][j]=max{v[i-1][j], v[i]+v[i-1][j-w[i]]}  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;// &lt;strong&gt;当 准备加入的新增的商品的容量小于等于当前背包的容量&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;// 装入的方式:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;v[i-1][j]： 就是上一个单元格的装入的最大值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;v[i] : 表示当前商品的价值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;v[i-1][j-w[i]] ： 装入i-1商品，到剩余空间j-w[i]的最大值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;v[i]+v[i-1][j-w[i]]&lt;/strong&gt; &lt;strong&gt;就是先把当前商品加入背包 再加入当前剩余空间可以放的最大价值的商品 （上面那句不好理解 看这句 直接就解释了后半句是什么意思）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;max{v[i-1][j], v[i]+v[i-1][j-w[i]]}&lt;/strong&gt; &lt;strong&gt;看那个策略可以放入价值更高的商品&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当j&amp;gt;=w[i]时： v[i][j]=max{v[i-1][j], v[i]+v[i-1][j-w[i]]} :&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用填表过程来理解背包问题 先是自己用人的思维&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;再把公式代入 找一个结果 进行验算 理解这个公式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1834795/202002/1834795-20200220001144275-747808397.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;完整代码&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.atguigu.dynamic;
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KnapsackProblem {
    
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt;[] w = {1, 4, 3};&lt;span&gt;//&lt;/span&gt;&lt;span&gt;物品的重量&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt;[] val = {1500, 3000, 2000}; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;物品的价值 这里val[i] 就是前面讲的v[i]&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt; m = 4; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;背包的容量&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt; n = val.length; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;物品的个数
                    
                    
                    
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建二维数组，
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;v[i][j] 表示在前i个物品中能够装入容量为j的背包中的最大价值 可以找一个坐标 去验证是否是最大价值&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt;[][] v = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[n+1][m+1&lt;span&gt;];
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;为了记录放入商品的情况，我们定一个二维数组&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt;[][] path = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[n+1][m+1&lt;span&gt;];
                    
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化第一行和第一列, 这里在本程序中，可以不去处理，因为默认就是0&lt;/span&gt;
                    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; v.length; i++&lt;span&gt;) {
                            v[i][&lt;/span&gt;0] = 0; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将第一列设置为0&lt;/span&gt;
&lt;span&gt;                    }
                    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=0; i &amp;lt; v[0].length; i++&lt;span&gt;) {
                            v[&lt;/span&gt;0][i] = 0; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将第一行设置0&lt;/span&gt;
&lt;span&gt;                    }
                    
                    
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据前面得到公式来动态规划处理&lt;/span&gt;
                    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 1; i &amp;lt; v.length; i++) { &lt;span&gt;//&lt;/span&gt;&lt;span&gt;不处理第一行 i是从1开始的&lt;/span&gt;
                            &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=1; j &amp;lt; v[0].length; j++) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;不处理第一列, j是从1开始的
                                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;公式&lt;/span&gt;
                                    &lt;span&gt;if&lt;/span&gt;(w[i-1]&amp;gt; j) { &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 因为我们程序i 是从1开始的，因此原来公式中的 w[i] 修改成 w[i-1]&lt;/span&gt;
                                            v[i][j]=v[i-1&lt;span&gt;][j];
                                    } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;说明:
                                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;因为我们的i 从1开始的， 因此公式需要调整成
                                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;v[i][j]=Math.max(v[i-1][j], val[i-1]+v[i-1][j-w[i-1]]);
                                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;v[i][j] = Math.max(v[i - 1][j], val[i - 1] + v[i - 1][j - w[i - 1]]);
                                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;为了记录商品存放到背包的情况，我们不能直接的使用上面的公式，需要使用if-else来体现公式
                                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;理解过来就是 原策略价值不如  现在加入当前商品和剩余空间加入最大价值商品  的总和&lt;/span&gt;
                                            &lt;span&gt;if&lt;/span&gt;(v[i - 1][j] &amp;lt; val[i - 1] + v[i - 1][j - w[i - 1&lt;span&gt;]]) {
                                                    v[i][j] &lt;/span&gt;= val[i - 1] + v[i - 1][j - w[i - 1&lt;span&gt;]];
                                                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;把当前的情况记录到path  最优的情况（原策略价值不如  现在加入当前商品和剩余空间加入最大价值商品  的总和&lt;/span&gt;
&lt;span&gt;                                                    ）
                                                    path[i][j] &lt;/span&gt;= 1&lt;span&gt;;
                                            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                                                    v[i][j] &lt;/span&gt;= v[i - 1&lt;span&gt;][j];  
                                            }
                                            
                                    }
                            }
                    }
                    
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;输出一下v 看看目前的情况  就是打印那张表&lt;/span&gt;
                    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i =0; i &amp;lt; v.length;i++&lt;span&gt;) {
                            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j = 0; j &amp;lt; v[i].length;j++&lt;span&gt;) {
                                    System.out.print(v[i][j] &lt;/span&gt;+ &quot; &quot;&lt;span&gt;);
                            }
                            System.out.println();
                    }
                    
                    System.out.println(&lt;/span&gt;&quot;============================&quot;&lt;span&gt;);
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;输出最后我们是放入的哪些商品
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;遍历path, 这样输出会把所有的放入情况都得到, 其实我们只需要最后的放入
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        for(int i = 0; i &amp;lt; path.length; i++) {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;            for(int j=0; j &amp;lt; path[i].length; j++) {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                if(path[i][j] == 1) {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                    System.out.printf(&quot;第%d个商品放入到背包\n&quot;, i);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;            }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;动脑筋  将最优的解中的商品输出 是通过计算出来的 &lt;/span&gt;
            &lt;span&gt;int&lt;/span&gt; i = path.length - 1; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;行的最大下标&lt;/span&gt;
            &lt;span&gt;int&lt;/span&gt; j = path[0].length - 1;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;列的最大下标&lt;/span&gt;
            &lt;span&gt;while&lt;/span&gt;(i &amp;gt; 0 &amp;amp;&amp;amp; j &amp;gt; 0 ) { &lt;span&gt;//&lt;/span&gt;&lt;span&gt;从path的最后开始找&lt;/span&gt;
                    &lt;span&gt;if&lt;/span&gt;(path[i][j] == 1&lt;span&gt;) {
                            System.out.printf(&lt;/span&gt;&quot;第%d个商品放入到背包\n&quot;&lt;span&gt;, i); 
                            j &lt;/span&gt;-= w[i-1]; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;w[i-1]   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将容量-放入的这个商品的容量  所以再只能在剩余容量范围内的商品中找  相当于去除了一些不符合的数据
                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;自己回溯 找path[i][j] == 1 
                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第一次循环完了 i= 2 j = 1
                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;发现path[2][1] 当时不是最优 所以是选取的上一个表格的值 也就是path[1][1] 的值 &lt;/span&gt;
&lt;span&gt;                    }
                    i&lt;/span&gt;--&lt;span&gt;;
                    
            }
            
            }
    
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 20 Feb 2020 00:55:00 +0000</pubDate>
<dc:creator>cnng</dc:creator>
<og:description>动态规划与背包问题 应用场景-背包问题 物品 重量 价格 吉他(G) 1 1500 音响(S) 4 3000 电脑(L) 3 2000 背包问题：有一个背包，容量为4磅 ， 现有如下物品 要求达到的目</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/cnng/p/12334032.html</dc:identifier>
</item>
<item>
<title>O准备如何苟进复赛圈？华为软挑开挂指南（附赛题预测） - 两猿圈</title>
<link>http://www.cnblogs.com/qinguoyi/p/12334303.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qinguoyi/p/12334303.html</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;事先声明，这不是华为软挑的软广，我也不是海军。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;这篇文章纯粹是心血来潮，原因是去年上传到github的&lt;a href=&quot;https://github.com/qinguoyi/CodeCraft2019_HUAWEI2019&quot; target=&quot;_blank&quot;&gt;参赛代码&lt;/a&gt;，前几天又有两个人star和fork了。&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;记得star热潮还是去年4月复赛刚结束的那几天，厚着脸皮在八大赛区的群里发消息求关注，之后就陷入了无限吃灰期。结果，我的开源代码在前几天&lt;strong&gt;突然又被挖出来&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;看了下时间，我想大概是有同学在准备今年的比赛，尝试研究去年的题目和开源代码。&lt;strong&gt;说实话，即使你愿意花很长时间来准备，效果也有限&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为看往年的题目很容易陷进去，等到真正比赛发现意义不大。另外，很少有花了很长时间研究往年题目才冲进总决赛的参赛者，&lt;strong&gt;99%以上的参赛者都是0准备，直接刚&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;2020软件挑战赛即将到来，关于&lt;strong&gt;如何充分利用剩余时间备战软挑，冲进复赛圈&lt;/strong&gt;。希望你看完这篇文章，能够找到一点方向。&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;h&quot;&gt;关于我&lt;/h2&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;素有“死亡赛区”之称的成渝赛区18年、19年参赛者，18年一轮游，19年&lt;strong&gt;初赛第4，成功苟进复赛&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;今年秋招凭借比赛免了笔试，并拿到了&lt;strong&gt;华为无线&lt;/strong&gt;的offer，奈何深圳研发没坑，与菊厂失之交臂，去了&lt;strong&gt;深圳某公仔厂&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;始终坚信：最好的成绩可能不是最牛的算法，&lt;strong&gt;但肯定是对赛题和业务理解最深入的算法&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005TJ2c7ly1gc1y4irruqj32vk1xqhdt.jpg&quot; alt=&quot;&quot; width=&quot;353&quot; height=&quot;238&quot;/&gt;&lt;/div&gt;

&lt;hr/&gt;&lt;h2 id=&quot;h-1&quot;&gt;直面软挑&lt;/h2&gt;
&lt;p&gt;华为软挑，全称&lt;strong&gt;华为软件精英挑战赛&lt;/strong&gt;，是华为公司面向全球大学生举办的大型软件竞赛。从2015年开始举办，已成功举办5届，参赛人数和影响力正在逐年扩大。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005TJ2c7ly1gc1ohoq56bj30be039q5o.jpg&quot; alt=&quot;&quot; height=&quot;120&quot;/&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;往年时间&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;经过几次的举办，大赛基本稳定在&lt;strong&gt;3月初报名&lt;/strong&gt;，上旬发布初赛赛题同时开启练习赛&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3月底线上初赛&lt;/strong&gt;，次日公布复赛名单，发布复赛赛题同时开启练习赛&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4月中旬线下复赛&lt;/strong&gt;，次日公布决赛名单，发布决赛赛题同时开启练习赛&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4月底&lt;/strong&gt;在深圳举行线下&lt;strong&gt;全国总决赛&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参赛要求&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;参赛对象：全日制&lt;strong&gt;在校大学生&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;参赛语言：&lt;strong&gt;C/C++/Java/Python&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;参赛形式：&lt;strong&gt;团队参赛&lt;/strong&gt;，每队1-3人，可同校组队或在同一赛区内跨学校组队&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;赛程规则&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;分为区域初赛、区域复赛、全国总决赛&lt;/li&gt;
&lt;li&gt;区域初赛&lt;strong&gt;前32名&lt;/strong&gt;进复赛&lt;/li&gt;
&lt;li&gt;区域复赛&lt;strong&gt;前4名&lt;/strong&gt;进决赛&lt;/li&gt;
&lt;li&gt;全国总决赛共32名队伍，决出&lt;strong&gt;全国8强&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;赛区机制&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;每年比赛初期采取区域赛，将全国分为&lt;strong&gt;八大赛区&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;京津冀东北赛区，上合赛区，杭厦赛区，江山赛区，成渝赛区，西北赛区，武长赛区，粤港澳赛区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;西北赛区&lt;/strong&gt;和&lt;strong&gt;成渝赛区&lt;/strong&gt; 被称为每年的 &lt;strong&gt;“死亡赛区”&lt;/strong&gt;，可能是成电和西电太多同学想去菊厂了&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全国总决赛奖项&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;一等奖，1队，奖金￥20万&lt;/li&gt;
&lt;li&gt;二等奖，2队，每队奖金￥10万&lt;/li&gt;
&lt;li&gt;三等奖，5队，每队奖金￥5万&lt;/li&gt;
&lt;li&gt;最优美代码奖，1队，奖金￥1万&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区域复赛奖项&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;决胜奖： 4队，进入全国总决赛，进入优才计划&lt;/li&gt;
&lt;li&gt;优胜奖：每赛区第5-36队，区域36强，面试绿卡（&lt;strong&gt;2019年36强改为32强，面试绿卡改为笔试绿卡&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;入围奖：每赛区第37-64队，区域64强，面试绿卡（&lt;strong&gt;2019年取消入围奖&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005TJ2c7ly1gc1yox2mlkj32rw20c7wh.jpg&quot; alt=&quot;&quot; width=&quot;316&quot; height=&quot;229&quot;/&gt;&lt;/div&gt;

&lt;hr/&gt;&lt;h2 id=&quot;h-2&quot;&gt;解析预测&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;赛题解析&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;来源&lt;/strong&gt;：华为&lt;strong&gt;公司部门轮流&lt;/strong&gt;出题，基本是&lt;strong&gt;公司内部实际业务&lt;/strong&gt;为背景&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;算法&lt;/strong&gt;：大部分赛题集中在&lt;strong&gt;图算法和最优化&lt;/strong&gt;，也有一部分涉及&lt;strong&gt;预测和AI&lt;/strong&gt;相关&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目的&lt;/strong&gt;：比赛会作为公司产品的一种推广手段，盲猜2018年与&lt;strong&gt;华为云&lt;/strong&gt;有关，2019年与&lt;strong&gt;5G车联网和AI&lt;/strong&gt;有关，今年或许会与&lt;strong&gt;鲲鹏计算平台或鸿蒙系统&lt;/strong&gt;有关&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间预测&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;基于新型冠肺炎疫情防控形势，2020华为软挑&lt;strong&gt;预计会推迟&lt;/strong&gt; ，但&lt;strong&gt;不会取消&lt;/strong&gt;举办&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;初赛启动时间&lt;/strong&gt;可能会在&lt;strong&gt;3月底&lt;/strong&gt;，&lt;strong&gt;复赛&lt;/strong&gt;大概率由线下改为&lt;strong&gt;线上比赛&lt;/strong&gt;，&lt;strong&gt;决赛&lt;/strong&gt;举办方式应该会视疫情走势而定&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;赛题预测&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;为了保持软件竞赛初心和照顾参赛者，会延续前几届的出题方式，预测今年&lt;strong&gt;图算法和最优化相关的可能仍然很大&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;2019年在决赛中首次涉及AI车牌识别，今年AI的比重或许会增加，预测今年&lt;strong&gt;初赛重在软件基础，复赛会涉及AI，决赛会加深&lt;/strong&gt;，仍会让参赛者使用自研平台&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h2 id=&quot;h-3&quot;&gt;比赛实况&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;比赛难度&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;代码难度&lt;/strong&gt;：不同于ACM等纯算法编程类比赛，&lt;strong&gt;难度要低得多&lt;/strong&gt;，重在软件编程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;题目难度&lt;/strong&gt;：需求任务书是&lt;strong&gt;阅读理解&lt;/strong&gt;，赛题从业务抽象，需要将题目简化。19年的复杂规则令人头秃，堪称历史最难&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;比赛规则&lt;/strong&gt;：练习赛不是绝对，&lt;strong&gt;正式比赛才大浪淘金&lt;/strong&gt;。正式比赛会&lt;strong&gt;增加数据规模&lt;/strong&gt;，复赛和决赛会&lt;strong&gt;现场更改需求&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005TJ2c7ly1gc1yj0jskaj306z07wjr9.jpg&quot; alt=&quot;&quot; height=&quot;250&quot;/&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;实际参赛对象&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;学历&lt;/strong&gt;：绝大多数是&lt;strong&gt;研究生&lt;/strong&gt; ，很多人是&lt;strong&gt;第一次&lt;/strong&gt;参加纯代码比赛&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专业&lt;/strong&gt;：集中在&lt;strong&gt;计算机、软件、自动化、通信、数学&lt;/strong&gt;等专业&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动机&lt;/strong&gt;：很多人参赛是因为比赛与自己研究方向相近，&lt;strong&gt;只有CS专业不这么想&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h2 id=&quot;h0&quot;&gt;0准备，如何苟&lt;/h2&gt;
&lt;p&gt;划重点!!! 前面介绍了这么多，接下来的才是重点，&lt;strong&gt;0准备，如何苟进复赛圈！&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005TJ2c7ly1gc1yrgz896j30m80m83zd.jpg&quot; alt=&quot;&quot; width=&quot;280&quot; height=&quot;280&quot;/&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;学会抱团&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;千万不要一个人肝！&lt;/strong&gt;18年初赛练习赛进入前十，结果正式赛崩了，一个人手忙脚乱，&lt;strong&gt;成功一轮游&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;好团队是必胜关键。&lt;/strong&gt;19年组队，很多奇思妙想都是队友想出来的，分工配合，最后&lt;strong&gt;初赛第4，苟进复赛&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;尽量多划水&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;划群划水划论坛。&lt;/strong&gt; 划水同学们的福音。&lt;strong&gt;混迹八大赛区的群和论坛&lt;/strong&gt;，与大佬们交流，你总能找到奇思妙想，我是认真的。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;釜底抽薪&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;阅读理解要做好。&lt;/strong&gt; 最好的成绩并不是最牛的算法，肯定是&lt;strong&gt;深入理解业务与赛题&lt;/strong&gt;的算法。19年比赛，棋盘状道路上发车，我们的算法只是简单的Dijkstra，但我们采用了对角线发车，并尽可能选择双向车道，这种技巧明显降低了死锁率。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;步步为营&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;先完成，再完美。&lt;/strong&gt; 比赛一开始，不要考虑过于苛刻的条件和因素。基本思路是&lt;strong&gt;魔改基础算法+tips&lt;/strong&gt;，做好阅读理解，先简化条件，提交一个有成绩代码。在此基础上，再继续迭代算法，相信我，你的心态会完全不一样。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python大法好&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;首次参赛且0准备的人。&lt;/strong&gt;18年参赛的时候，我一个C++菜鸡几乎是&lt;strong&gt;0基础&lt;/strong&gt;，看到输入输出文件后直接退缩了。重新现找视频学Python，当时的学习速度真的很快，学完即用。如果你也是这种情况，&lt;strong&gt;强烈推荐用Python&lt;/strong&gt;，后期拓展AI也容易得多。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逆向工程&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;从判题公式出发。&lt;/strong&gt; 18年的题目是预测+分配，判题公式是预测准确率*分配率。因为预测本来就不准，很多人先将分配率做到100%，然后反向预测，&lt;strong&gt;很多人利用了这一点而苟进复赛&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;判题器并不必须。&lt;/strong&gt; 19年的题目是车辆路径规划，规则巨复杂，为了避免死锁，很多团队开始刚判题器，将其嵌入自己的代码。但&lt;strong&gt;判题器并不是必须的&lt;/strong&gt;，很多进入复赛的队伍，包括我们，都没有写。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳一手&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;霸榜成绩稳一手。&lt;/strong&gt; 如果自己算法达到的霸榜的成绩时，不要急于发出来，尽量苟到正式比赛。&lt;strong&gt;你想要霸榜，就要做好被人踢榜的准备&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;需求更改稳一手。&lt;/strong&gt; 正式比赛会修改需求，但并不是原来的代码不能用，而是修改后成绩更好。所以正式比赛时&lt;strong&gt;做好分工，有人改需求，有人继续尝试现有代码&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本控制&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;版本不存档，比赛火葬场。&lt;/strong&gt; 正式比赛会修改数据规模和需求，需要修改现有代码，原来版本很有可能会被将改崩，或者出现三个人的代码不一致的情况。如果因为&lt;strong&gt;版本问题达不到理想的成绩&lt;/strong&gt;，就比较&lt;strong&gt;遗憾&lt;/strong&gt;了。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h2 id=&quot;h-4&quot;&gt;目前如何备战&lt;/h2&gt;
&lt;p&gt;2020软件挑战赛即将到来，关于&lt;strong&gt;如何充分利用剩余时间备战软挑，冲进复赛圈&lt;/strong&gt;，这里再分享几个tips。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;输入输出文件&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;这不是说笑，&lt;strong&gt;很多人&lt;/strong&gt;在看到输入输出文件格式后&lt;strong&gt;被劝退&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;输入一般为txt文件。注意涉及&lt;strong&gt;特殊符号、时间格式和文件的末尾空格&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;将这几年的文件读取和输出看一下，准备几个版本&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;图算法&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;路径规划&lt;/strong&gt;算法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最大流&lt;/strong&gt;算法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优化算法&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;遗传&lt;/strong&gt;算法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;蚁群&lt;/strong&gt;算法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;粒子群&lt;/strong&gt;算法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预测算法&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;简易平均&lt;/strong&gt;法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;移动平均&lt;/strong&gt;法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指数平滑&lt;/strong&gt;法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线性回归&lt;/strong&gt;法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI相关&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;主要是图像领域，包括但不限于&lt;strong&gt;图像识别，目标检测，行为骨骼点检测&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;以上算法，并不是要大家现在去学懂，学会，这并不现实。&lt;/p&gt;
&lt;p&gt;但，至少要&lt;strong&gt;把对应的代码找到，链接保存下来&lt;/strong&gt;，用到的时候可以很快找到。&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;h-5&quot;&gt;了解我&lt;/h2&gt;
&lt;p&gt;请关注公众号 &lt;strong&gt;“两猿圈”&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;带你丰富项目经验，轻松应对校招！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目模块详解，公众号内持续更新！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005TJ2c7ly1gbzhwt2mufj3076076q3e.jpg&quot; alt=&quot;&quot; height=&quot;350&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 20 Feb 2020 00:54:00 +0000</pubDate>
<dc:creator>两猿圈</dc:creator>
<og:description>事先声明，这不是华为软挑的软广，我也不是海军。 这篇文章纯粹是心血来潮，原因是去年上传到github的参赛代码，前几天又有两个人star和fork了。 记得star热潮还是去年4月复赛刚结束的那几天，</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/qinguoyi/p/12334303.html</dc:identifier>
</item>
<item>
<title>数据结构——30行代码实现栈和模拟递归 - TechFlow2019</title>
<link>http://www.cnblogs.com/techflow/p/12334261.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/techflow/p/12334261.html</guid>
<description>&lt;p&gt;本文始发于个人公众号：&lt;strong&gt;TechFlow&lt;/strong&gt;，原创不易，求个关注&lt;/p&gt;

&lt;h2 id=&quot;栈的定义&quot;&gt;栈的定义&lt;/h2&gt;

&lt;p&gt;原本今天想给大家讲讲快速选择算法的，但是发现一连写了好几篇排序相关了，所以临时改了题目，今天聊点数据结构，来看看经典并且简单的数据结构——栈。&lt;/p&gt;
&lt;p&gt;栈这个结构我想大家应该都耳熟能详，尤其是在很多地方将和堆并列在一起，称作“堆栈”就更广为人知了。但其实堆和栈本质上是两种不同的数据结构，我们不能简单地混为一谈。让我们先从比较简单的栈开始。&lt;/p&gt;
&lt;p&gt;栈和队列的本质其实都是数组（严格地说是线性表）。只不过我们在数组上增加了一些限制，使得它满足一定的条件而已，所以很多对数据结构畏首畏尾的同学可以放宽心，栈没什么特别的花样，就是一种特殊的数组。&lt;/p&gt;
&lt;p&gt;和其他广义上的线性表数据结构比起来，栈的特殊性只有两条，一条是先进后出，另一条是只能从数组的一侧读写。但本质上来说这两条是一样的，由于我们只能从一侧读写元素，所以进的越早出的越晚，当然是先进后出。从下面这张图应该很容易能看明白。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/20/1705ff27453fb8fc?w=465&amp;amp;h=462&amp;amp;f=png&amp;amp;s=32496&quot;/&gt;&lt;/p&gt;
&lt;p&gt;栈规定了我们只能从一侧进行读写，常规上我们将能够读写的一侧称作是栈顶。不能读写的另一侧称为是栈底。从上面的图可以看到，只有栈顶的元素出栈了之后，才能访问到栈底的元素。&lt;/p&gt;
&lt;p&gt;我们用Python的数组来实现栈这个数据结构，去掉注释真的只有30行不到，可以说是非常简单，我们先来看代码。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class Stack(object):

    def __init__(self, size_limit=None):
        self._size_limit = size_limit
        self.elements = []
        self._size = 0

    # 进栈，判断是否越界
    def push(self, value):
        if self._size_limit is not None and len(self.elements) &amp;gt; self._size_limit:
            raise IndexError(&quot;Stack is full&quot;)
        else:
            self.elements.append(value)
            self._size += 1

    # 判断栈是否为空
    def is_empty(self):
        return self._size == 0

    # 栈清空
    def clear(self):
        self.elements = []
        self._size = 0

    # 访问元素数量
    def size(self):
        return self._size

    # 查询栈顶元素
    def top(self):
        return self.elements[-1]
    
    # 弹出栈顶元素
    def pop(self):
        val = self.elements.pop()
        self._size -= 1
        return val&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;本质上来说，一般的栈实现只有以上这么几个方法，可能会更少。因为有些语言当中的栈，top和弹出是合并的。意味着访问必须要弹出，不支持非弹出访问。所以栈的实现逻辑是非常简单的，甚至可以说是毫无技术含量，非常适合入门数据结构。&lt;/p&gt;
&lt;p&gt;当然，从另一个方面也可以说栈的实现原理并不太重要，相比之下更重要的是栈一般会用在什么地方。&lt;/p&gt;

&lt;h2 id=&quot;栈的应用&quot;&gt;栈的应用&lt;/h2&gt;

&lt;p&gt;栈最广泛的应用就是在操作系统当中，比如在程序执行调用方法的时候，在编译器内部，其实是记录了一个当前调用的方法栈。举个例子，比如当前调用到的方法是A，如果在A方法中又去调用了方法B，那么计算机就会在系统方法栈当中存储一个指向B方法的指针，如果B方法又调用到了C方法，那么又会新增一个C的指针。当C方法执行结束，那么C就会弹出，计算机会将C的结果带入B，继续执行之前的B，以此类推，直到栈空为止。&lt;/p&gt;
&lt;p&gt;那么，问题来了，如果一个方法A自己调用自己会怎么样？&lt;/p&gt;
&lt;p&gt;答案是计算机会创建一个新的A的指针填入栈中，如果A继续递归，那么系统再创建一个新的指针入栈……&lt;/p&gt;
&lt;p&gt;从上面这个过程，我们可以确定两个事情。第一，我们写程序时候的递归，在编译器内部其实是以栈的形式执行的。第二，如果我们用一个死循环去不停地递归，由于栈存在大小限制，所以当栈的深度超过限制的时候，就会出现SystemStackExceed的错误。也就是说递归并不是无限的，因为除了操作系统对于运行内存的限制之外，编译器还会有最大递归深度的限制，防止递归中死循环导致系统崩溃。虽然各个语言实现机制不完全一样，但是有一点是肯定的，递归深度是有限的，我们不能无限制递归。&lt;/p&gt;
&lt;p&gt;那问题来了，如果我们系统就是会存在大规模的递归怎么办？难道还要手动给机器加内存吗？&lt;/p&gt;
&lt;p&gt;这是ACM玩家在赛场上经常遇到的问题之一，有经验的选手在第一天的热身赛时一定会做的事情除了配置vim或者其他IDE之外，就是会测试一下电脑的最大递归深度。在C++当中，是支持通过汇编语言强行打开递归深度限制的，但是即使如此也是有限的，并且据我所知只有C++可以这么干，对于其他语言，以及开大了递归深度还是不够用的情况，就只有一种办法，就是手动建栈模拟递归。&lt;/p&gt;

&lt;h2 id=&quot;手动递归&quot;&gt;手动递归&lt;/h2&gt;

&lt;p&gt;许多同学可能觉得递归痛苦，但是如果他们试着手动建栈来模拟递归的话，会发现要更加痛苦。不仅要额外增加变量存储中间状态，并且对于编程也是一个巨大的挑战。&lt;/p&gt;
&lt;p&gt;我们来看一个例子：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class Node:
    def __init__(self, val):
        self.val = val
        # 左孩子
        self.lchild = None
        # 右孩子
        self.rchild = None


if __name__ == &quot;__main__&quot;:
    # 建树
    root = Node(0)
    node1 = Node(1)
    root.lchild = node1
    node2 = Node(2)
    root.rchild = node2
    node3 = Node(3)
    node1.lchild = node3
    node4 = Node(4)
    node1.rchild = node4
    node5 = Node(5)
    node2.rchild = node5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是一棵简单的二叉树，画出来是这个样子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;          0
         / \
        1   2
       / \   \
      3   4   5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;下面我们要通过栈在不使用递归的情况下来中序遍历它，中序遍历我们都知道，就是先遍历左子树，然后输出当前节点，再遍历右子树。写成递归非常方便，只有几行：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;def dfs(node):
    if node is None:
        return
    dfs(node.lchild)
    print(node.val)
    dfs(node.rchild)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;大家想想，如果不使用递归应该怎么办？如果你真的试着去写，就会发现看起来很简单的问题好像变得非常复杂。我们很容易可以想到，我们把节点存储在栈当中，但是存储数据只是表象。本质问题是当我们从栈当中拿到了一个节点之后，我们怎么判断它究竟应该做什么？应该遍历左节点吗，应该输出吗，还是应该遍历右节点？&lt;/p&gt;
&lt;p&gt;对这些问题仔细分析和思考，我们可以发现它们都和递归的回溯有关。&lt;/p&gt;
&lt;p&gt;在递归当中，当我们遍历完了当前节点的某棵子树之后，随着栈的弹出，还会回到这个节点。比如上面这棵树当中，在递归过程当中，我们会两次碰到1这个节点。第一次时它不会输出1，而是先去遍历了它的左子树，也就是3，之后再次回到1，由于它的左子树已经遍历过，所以会输出1。这个离开又回来的过程称为回溯。如果你把树结构想象成瀑布的话，这个过程有点像是顺流而下，又逆流而上，翻译成回溯还是蛮合理的。&lt;/p&gt;
&lt;p&gt;我们回到之前的问题，所有的搞不清楚的本质都来源于我们无法判断当前遇到的节点究竟是初次见面，还是回溯之后的久别重逢。而这关系到我们要对它做什么。原本在递归当中，由于程序会记录递归时的状态和代码运行的位置，递归回溯之后会回到上次调用的位置，所以我们可以忽略这个问题。而现在我们由于不再使用递归，所以需要我们自己来判断节点的状态。&lt;/p&gt;
&lt;p&gt;想通了其实很简单，我们只需要在节点当中加一个状态的字段，表示这个节点是否会发生回溯。显然在一开始的时候，所有的节点状态都是True。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class Node:
    def __init__(self, val):
        self.val = val
        self.lchild = None
        self.rchild = None
        self.flag = True&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们在Node类中加一个flag作为记录，初始化时我们默认它为True。接着就很简单了，我们就按照左中右的顺序遍历节点，只要左子树存在就往左边遍历，在一路往左的过程中遇到的这些节点的flag全部置为False，因为它们的回溯已经开始，以后不会再发生回溯了。由于往右遍历不会存在回溯的问题，所以可以忽略，想明白了，代码也就顺理成章。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 使用我们自己刚刚创建的数据结构
stack = Stack()
# 插入根节点
stack.push(root)

while not stack.is_empty():
    # 获取栈顶元素，也就是当前遍历的节点
    tmp = stack.top()
    # 如果不曾回溯过，并且左子树存在
    while tmp.flag and tmp.lchild is not None:
        # 回溯标记置为False
        tmp.flag = False
        # 栈顶push左孩子
        stack.push(tmp.lchild)
        # 往左遍历
        tmp = tmp.lchild
    # 弹出栈顶
    tmp = stack.pop()
    # 此时说明左节点已经遍历完了，输出
    print(tmp.val)
    # 往右遍历
    if tmp.rchild is not None:
        stack.push(tmp.rchild)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这段代码虽然短，但其实不简单，想要完全看懂需要对递归和循环有深入的理解。属于典型的看着简单实际不容易的题，我个人比较喜欢这类问题，除了锻炼思维之外也很适合用来面试，候选人的思维能力、代码驾驭能力基本上都一清二楚了。没有看懂的同学也不用担心，因为在实际场景当中并不会遇到这样的场景，以后还会推出其他关于递归和搜索算法的文章，只要你坚持阅读，我相信一定会看懂的。&lt;/p&gt;
&lt;p&gt;今天的文章就是这些，如果觉得有所收获，请&lt;strong&gt;顺手扫码点个关注&lt;/strong&gt;吧，你们的举手之劳对我来说很重要。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/20/1705ff38532e26d9?w=258&amp;amp;h=258&amp;amp;f=png&amp;amp;s=23988&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 20 Feb 2020 00:18:00 +0000</pubDate>
<dc:creator>TechFlow2019</dc:creator>
<og:description>本文始发于个人公众号： TechFlow ，原创不易，求个关注 栈的定义 原本今天想给大家讲讲快速选择算法的，但是发现一连写了好几篇排序相关了，所以临时改了题目，今天聊点数据结构，来看看经典并且简单的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/techflow/p/12334261.html</dc:identifier>
</item>
<item>
<title>Unity酱~ 卡通渲染技术分析（二） - 李嘉的博客</title>
<link>http://www.cnblogs.com/lijiajia/p/12334145.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lijiajia/p/12334145.html</guid>
<description>&lt;h4 id=&quot;前面的话&quot;&gt;前面的话&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-d9f8ed76461d5606.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上一篇&lt;a href=&quot;https://www.jianshu.com/p/b420c4243825&quot;&gt;Unity酱~ 卡通渲染技术分析（一）&lt;/a&gt; 写了CharaMain.cginc，服装的渲染是怎么实现的。这篇来分析一下头发跟皮肤的实现&lt;/p&gt;
&lt;h4 id=&quot;头发&quot;&gt;头发&lt;/h4&gt;
&lt;p&gt;本来以为unitychan的头发会有各向异性的实现，没想到她也是用的CharaMain.cginc实现的。我们来看看头发的材质&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-6ed28678ca96708e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/512&quot; alt=&quot;头发材质&quot;/&gt;&lt;br/&gt;其他实现都一样，也是通过高光反射贴图来控制高光区域跟反射区域&lt;/p&gt;
&lt;p&gt;计算法线跟视角向量的点积，这样的效果是越垂直于视角向量的高光越大，然后用RGB贴图来控制哪些区域更容易出高光&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-8c3e15d3156a50c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/256&quot; alt=&quot;RGB&quot;/&gt;&lt;/p&gt;
&lt;p&gt;反射依然是用A通道来控制，越白的地方，反射的越强&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-3140121f378d9427.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/256&quot; alt=&quot;Alpha通道&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;如何实现皮肤效果&quot;&gt;如何实现皮肤效果&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-0241801e9c8c5564.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/512&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这么漂亮的皮肤，其实只用了两个效果就实现了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漫反射+边缘光&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这一次我们来详细说一下漫反射的实现&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    float_t normalDotEye = dot( i.normal, i.eyeDir );
    float_t falloffU = clamp( 1 - abs( normalDotEye ), 0.02, 0.98 );&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;还是用法线跟视角向量的点积，并且限制在了0.02到0.98的范围。&lt;br/&gt;本来是夹角越小的值越大，夹角越大的值越小，用1 - 去点积的绝对值后，表示越靠近视角向量的，就越接近0。跟视角向量夹角越大，值也就越大，也就是边缘的部位值会越大&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    float4_t falloffSamplerColor = FALLOFF_POWER * tex2D( _FalloffSampler, float2( falloffU, 0.25f ) );
    float3_t combinedColor = lerp( diffSamplerColor.rgb, falloffSamplerColor.rgb * diffSamplerColor.rgb, falloffSamplerColor.a );&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;用刚刚求出来的值，采样的这张衰减贴图，也就是反映出皮肤质感的重要一步了！值越大，采样出的颜色就越接近肉色。也就是越边缘越接近肉色&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FALLOFF_POWER 是一个衰减系数，skin shader中的值为1，也就是不衰减&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-54d115c541750080.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;skin falloff&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-8f4733ded2ae2431.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/512&quot; alt=&quot;皮肤漫反射&quot;/&gt;&lt;/p&gt;
&lt;p&gt;再加上边缘高光&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-1f3a9e77c3f6a2be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/512&quot; alt=&quot;皮肤漫反射+边缘光&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;总结&quot;&gt;总结&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;unity chan的技术分析差不多完了，主要的技术特点如下：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;漫反射是用N.V的值去采样一张衰减贴图实现的，这张贴图还可以用来实现皮肤效果&lt;/li&gt;
&lt;li&gt;通过一张高光反射贴图来控制高光的细节，以及哪些区域要显示反射&lt;/li&gt;
&lt;li&gt;边缘光没用菲涅尔反射，而是采样rim贴图后去乘以漫反射值得到的边缘高光&lt;/li&gt;
&lt;li&gt;描边不是纯色的，采样了纹理颜色，再做了暗化处理&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;最后再来两张照片吧~~ 这套渲染效果其实还是蛮不错的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-751e93cbe0866f2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1208599-c87de2d81d8fcdf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 19 Feb 2020 17:14:00 +0000</pubDate>
<dc:creator>李嘉的博客</dc:creator>
<og:description>前面的话 上一篇 &amp;quot;Unity酱~ 卡通渲染技术分析（一）&amp;quot; 写了CharaMain.cginc，服装的渲染是怎么实现的。这篇来分析一下头发跟皮肤的实现 头发 本来以为unityc</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/lijiajia/p/12334145.html</dc:identifier>
</item>
<item>
<title>大数据篇：Zookeeper - 咘雷扎克</title>
<link>http://www.cnblogs.com/ttzzyy/p/12333934.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ttzzyy/p/12333934.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219171211486-1727252696.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;zookeeper概念&quot;&gt;1 Zookeeper概念&lt;/h2&gt;
&lt;h2 id=&quot;zookeeper基本原理&quot;&gt;2 Zookeeper基本原理&lt;/h2&gt;
&lt;h3 id=&quot;zookeeper架构&quot;&gt;2.1 Zookeeper架构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219174134150-1650456378.png&quot;/&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;一个领导者（Leader）和多个跟随者（Follower）组成的集群，在启动时根据Paxos协议选举一个Leader。&lt;/li&gt;
&lt;li&gt;集群中只要有半数以上的节点存活，Zookeeper集群就能正常服务。&lt;/li&gt;
&lt;li&gt;全局一致性：每个Server保存一份相同的数据副本，Client无论链接到哪个Server，数据都是一致的。&lt;/li&gt;
&lt;li&gt;Leader根据Zab协议负责处理数据的更新等操作。&lt;/li&gt;
&lt;li&gt;更新请求顺序进行，来自同一个Client的更新请求按其发送顺序依次执行。&lt;/li&gt;
&lt;li&gt;原子性：一次更新操作（可以是多个），当且仅当大多数Server在内存中成功修改数据，要么成功，要么失败。&lt;/li&gt;
&lt;li&gt;实时性：在一定时间范围内，Client能读到最新数据。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;zookeeper角色&quot;&gt;2.2 Zookeeper角色&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201902/1235870-20190224155356361-1968146638.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Leader选举算法采用了Paxos协议;&lt;/li&gt;
&lt;li&gt;Paxos核心思想：当多数Server写成功，则任务数据写成功。
&lt;ul&gt;&lt;li&gt;如果有3个Server，则需要2个写成功即可。&lt;/li&gt;
&lt;li&gt;如果有5个Server，则需要3个写成功即可。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Zookeeper Server数目一般为奇数
&lt;ul&gt;&lt;li&gt;如果有3个Server，则最多允许1个Server挂掉。&lt;/li&gt;
&lt;li&gt;如果有4个Server，则最多允许1个Server挂掉。&lt;/li&gt;
&lt;li&gt;所以3台和4台效果一样，那么为什么选4台呢。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;zookeeper数据结构&quot;&gt;2.3 Zookeeper数据结构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219175811579-1973623660.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Zookeeper数据模型结构与Unix文件系统很像，整体可以看做是树，每个节点为一个Znode，每一个Znode默认能存储1MB数据，每个Znode都可以通过其路径唯一标识。&lt;/li&gt;
&lt;li&gt;和Unix不同的是，Znode可以存数据，又可有子节点。（不同于文件和文件夹的概念）&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;zookeeper-数据写流程&quot;&gt;2.4 Zookeeper 数据写流程&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201902/1235870-20190224155557179-1203942138.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;zookeeper应用场景&quot;&gt;3 Zookeeper应用场景&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;统一命名服务&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219180944940-1923228739.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;在分布式环境下，经常需要对应用/服务进行统一命名，便于识别。例如：IP不容易记住，而域名容易记住。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;配置管理&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201902/1235870-20190224160330795-586387874.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;一个集群中，搜游节点的配置信息是一致的，对配置文件修改后，希望能够快速同步到各个节点上。例如Hadoop。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;集群管理&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201902/1235870-20190224160517096-1407722841.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;分布式环境中，实时掌握每个节点的状态是必要的。例如集群中的Master的监控和选举。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;分布式通知/协调&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;分布式环境中，经常存在一个服务需要知道它所管理的子服务状态。例如NameNode需要知道DataNode状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;分布式锁&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;多个客户端同时在Zookeeper上创建相同的znode，只有一个创建成功。&lt;/p&gt;
&lt;p&gt;创建成功的客户端得到锁，其他客户端等待。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;分布式队列&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;当一个列队的成员都聚齐时，这个列队才可用，否则一直等待所有成员到达，这种事同步列队。&lt;/p&gt;
&lt;p&gt;列队按照FIFO方式进行入队和出队操作，例如实现生产者和消费者模型。&lt;/p&gt;
&lt;p&gt;同步列队中一个Job由多个task组成，只有所有任务完成后，Job才运行完成。如：可以为Job创建一个/job的节点，在其下每完成一个task创建一个临时的znode，一旦临时节点数达到task总数，则Job运行完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;zookeeper-windows链接工具&quot;&gt;4 zookeeper windows链接工具&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://files.cnblogs.com/files/ttzzyy/ZooInspector.zip&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;下载解压&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219191753076-1937770739.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在此目录下java -jar zookeeper-dev-ZooInspector.jar或者点击start.bat文件启动。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219192002490-1310937897.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;进行对zk的操作吧！&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;zookeeper命令行操作&quot;&gt;5 zookeeper命令行操作&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;运行 zkCli.sh 脚本进入命令行工具&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219192956034-1402860909.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;help-帮助命令&quot;&gt;5.1 help 帮助命令&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219193415969-950449055.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;ls-path-watch-命令&quot;&gt;5.2 ls path [watch] 命令&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;查看znode中包含内容&lt;/li&gt;
&lt;li&gt;watch为观察的意思，观察此路径下的节点变化&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;普通查询&quot;&gt;5.2.1 普通查询&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219193539561-1924006333.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219193607444-752765026.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;带监听的查询&quot;&gt;5.2.2 带监听的查询&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219194329733-1986753783.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;另起一个客户端输入 create /test1 abcd&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219194415763-1489223737.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;监听客户端变化&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219194513938-264051547.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;create--s--e-path-data-acl-创建命令&quot;&gt;5.3 create [-s] [-e] path data acl 创建命令&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;创建命令&lt;/li&gt;
&lt;li&gt;-s 带序号的节点，把原节点的名字加一个全局增加的序号拼接在一起。&lt;/li&gt;
&lt;li&gt;-e 临时节点，未带此参数的节点全部为永久节点。&lt;/li&gt;
&lt;li&gt;-s -e 同时带上，创建有序的临时节点。&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;普通添加&quot;&gt;5.3.1 普通添加&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219194415763-1489223737.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219194701385-435821829.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;带序号的节点添加&quot;&gt;5.3.2 带序号的节点添加&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219195415557-2080402682.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219195456261-146312092.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;临时节点添加当前会话退出就消失&quot;&gt;5.3.3 临时节点添加(当前会话退出就消失)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219195743486-1698322029.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219195804444-1854390217.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;执行退出操作，再次查询消失&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219195853784-126364663.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219195910793-1983355995.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;总结，zk共有4种节点
&lt;ul&gt;&lt;li&gt;PERSISTENT 无序永久节点&lt;/li&gt;
&lt;li&gt;PERSISTENT_SEQUENTIAL 有序永久节点&lt;/li&gt;
&lt;li&gt;EPHEMERAL 无序临时节点&lt;/li&gt;
&lt;li&gt;EPHEMERAL_SEQUENTIAL 有序临时节点&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;get-path-watch-获取命令&quot;&gt;5.4 get path [watch] 获取命令&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;查看znode内容&lt;/li&gt;
&lt;li&gt;watch为观察的意思，观察此路径下的节点变化&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;普通获取&quot;&gt;5.4.1 普通获取&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219204422471-1078661118.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;带监听的获取&quot;&gt;5.4.2 带监听的获取&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219204541043-1475089554.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;另起一个客户端输入 set/test1 1234&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219204806426-871385383.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;监听客户端变化&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219204828029-546497483.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219204847617-1217805902.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;stat-path-watch-查看节点状态&quot;&gt;5.5 stat path [watch] 查看节点状态&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219205232780-880192544.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;创建节点的事务zxid cZxid = 0xa00000117&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;zk就是靠事务ID保证每批次操作的顺序执行。&lt;/li&gt;
&lt;li&gt;ZXID是一个64位的数字，低32代表一个单调递增的计数器，高32位代表Leader周期&lt;/li&gt;
&lt;li&gt;高32位：a0000 ----Leader的周期编号+myid的组合&lt;/li&gt;
&lt;li&gt;低32位：0117 ----事务的自增序列（单调递增的序列）只要客户端有请求，就+1&lt;/li&gt;
&lt;li&gt;每次修改Zookeeper状态都会受到一个zxid形式的时间戳，也就是zk的事务ID，事务ID是zk中所有修改的总的次序。&lt;/li&gt;
&lt;li&gt;每个修改都有唯一的zxid，如果zxid1小于zxid2，那么zxid1发生在zxid2之前。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;创建时间 ctime = Wed Feb 19 19:42:34 CST 2020&lt;br/&gt;最后更新的事务zxid mZxid = 0xa00000511&lt;br/&gt;最后更新的时间 mtime = Wed Feb 19 20:48:02 CST 2020&lt;br/&gt;最后更新的子节点zxid pZxid = 0xa00000524&lt;br/&gt;子节点修改次数 cversion = 2&lt;br/&gt;数据被修改的次数 dataVersion = 3&lt;br/&gt;访问控制列表变化号 aclVersion = 0&lt;br/&gt;如果是临时节点，这个是znode拥有者sessionID，如果是永久节点则为0 ephemeralOwner = 0x0&lt;br/&gt;数据长度 dataLength = 4&lt;br/&gt;子节点数量 numChildren = 0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;删除命令&quot;&gt;5.6 删除命令&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219211451294-1838193498.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219211619452-666424219.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219211600429-1843403422.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;zookeeper-java-api应用&quot;&gt;6 zookeeper-java-api应用&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;maven pom参考&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.zookeeper&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;zookeeper&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;3.4.5-cdh6.2.0&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;create&lt;/td&gt;
&lt;td&gt;在本地目录树中创建一个节点&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;delete&lt;/td&gt;
&lt;td&gt;删除一个节点&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;exists&lt;/td&gt;
&lt;td&gt;测试本地是否存在目标节点&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;get/set data&lt;/td&gt;
&lt;td&gt;从目标节点上读取 / 写数据&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;get/set ACL&lt;/td&gt;
&lt;td&gt;获取 / 设置目标节点访问控制列表信息&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;get children&lt;/td&gt;
&lt;td&gt;检索一个子节点上的列表&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;sync&lt;/td&gt;
&lt;td&gt;等待要被传送的数据&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;增删改查demo&quot;&gt;6.1 增删改查demo&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;import org.apache.zookeeper.*;
import java.io.IOException;

public class SimpleDemo {
    // 会话超时时间
    private static final int SESSION_TIMEOUT = 2000;
    // 链接集群地址
    private static final String CONNECT_ADDRESS = &quot;192.168.37.10:2181,192.168.37.11:2181,192.168.37.12:2181&quot;;
    // 创建 ZooKeeper 实例
    ZooKeeper zk;
    // 创建 Watcher 实例
    Watcher wh = event -&amp;gt; System.out.println(event.toString());

    // 初始化 ZooKeeper 实例
    private void createZKInstance() throws IOException {
        zk = new ZooKeeper(CONNECT_ADDRESS, SimpleDemo.SESSION_TIMEOUT, this.wh);
    }

    private void ZKOperations() throws IOException, InterruptedException, KeeperException {
        System.out.println(&quot;/n1. 创建 ZooKeeper 节点 (znode ： zoo2, 数据： myData2 ，权限： OPEN_ACL_UNSAFE ，节点类型： Persistent&quot;);
        zk.create(&quot;/zoo2&quot;, &quot;myData2&quot;.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
        System.out.println(&quot;/n2. 查看是否创建成功： &quot;);
        System.out.println(new String(zk.getData(&quot;/zoo2&quot;, false, null)));
        System.out.println(&quot;/n3. 修改节点数据 &quot;);
        zk.setData(&quot;/zoo2&quot;, &quot;hahahahaha&quot;.getBytes(), -1);
        System.out.println(&quot;/n4. 查看是否修改成功： &quot;);
        System.out.println(new String(zk.getData(&quot;/zoo2&quot;, false, null)));
        System.out.println(&quot;/n5. 删除节点 &quot;);
        zk.delete(&quot;/zoo2&quot;, -1);
        System.out.println(&quot;/n6. 查看节点是否被删除： &quot;);
        System.out.println(&quot; 节点状态： [&quot; + zk.exists(&quot;/zoo2&quot;, false) + &quot;]&quot;);
    }

    private void ZKClose() throws InterruptedException {
        zk.close();
    }

    public static void main(String[] args) throws IOException, InterruptedException, KeeperException {
        SimpleDemo dm = new SimpleDemo();
        dm.createZKInstance();
        dm.ZKOperations();
        dm.ZKClose();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201903/1235870-20190318164235334-411030038.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;服务器上下线动态感知程序demo&quot;&gt;6.2 服务器上下线动态感知程序demo&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201903/1235870-20190318165226566-726492252.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AppServer.java&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;import org.apache.zookeeper.*;

public class AppServer {
    private String groupNode = &quot;sgroup&quot;;
    private String subNode = &quot;sub&quot;;

    /**
     * 连接zookeeper
     *
     * @param address server的地址
     */
    public void connectZookeeper(String address) throws Exception {
        ZooKeeper zk = new ZooKeeper(
                &quot;192.168.147.10:2181,192.168.147.11:2181,192.168.147.12:2181&quot;,
                5000, new Watcher() {
            public void process(WatchedEvent event) {
                // 不做处理
            }
        });
        // 在&quot;/sgroup&quot;下创建子节点
        // 子节点的类型设置为EPHEMERAL_SEQUENTIAL, 表明这是一个临时节点, 且在子节点的名称后面加上一串数字后缀
        // 将server的地址数据关联到新创建的子节点上
        String createdPath = zk.create(&quot;/&quot; + groupNode + &quot;/&quot; + subNode, address.getBytes(&quot;utf-8&quot;),
                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);
        System.out.println(&quot;create: &quot; + createdPath);
    }

    /**
     * server的工作逻辑写在这个方法中
     * 此处不做任何处理, 只让server sleep
     */
    public void handle() throws InterruptedException {
        Thread.sleep(Long.MAX_VALUE);
    }

    public static void main(String[] args) throws Exception {
        // 在参数中指定server的地址
        if (args.length == 0) {
            System.err.println(&quot;The first argument must be server address&quot;);
            System.exit(1);
        }

        AppServer as = new AppServer();
        as.connectZookeeper(args[0]);
        as.handle();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;AppClient.java&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.data.Stat;

import java.util.ArrayList;
import java.util.List;

public class AppClient {
    private String groupNode = &quot;sgroup&quot;;
    private ZooKeeper zk;
    private Stat stat = new Stat();
    private volatile List&amp;lt;String&amp;gt; serverList;

    /**
     * 连接zookeeper
     */
    public void connectZookeeper() throws Exception {
        zk = new ZooKeeper(&quot;192.168.147.10:2181,192.168.147.11:2181,192.168.147.12:2181&quot;, 5000, new Watcher() {
            public void process(WatchedEvent event) {
                // 如果发生了&quot;/sgroup&quot;节点下的子节点变化事件, 更新server列表, 并重新注册监听
                if (event.getType() == Event.EventType.NodeChildrenChanged
                        &amp;amp;&amp;amp; (&quot;/&quot; + groupNode).equals(event.getPath())) {
                    try {
                        updateServerList();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        });

        updateServerList();
    }

    /**
     * 更新server列表
     */
    private void updateServerList() throws Exception {
        List&amp;lt;String&amp;gt; newServerList = new ArrayList&amp;lt;String&amp;gt;();

        // 获取并监听groupNode的子节点变化
        // watch参数为true, 表示监听子节点变化事件.
        // 每次都需要重新注册监听, 因为一次注册, 只能监听一次事件, 如果还想继续保持监听, 必须重新注册
        List&amp;lt;String&amp;gt; subList = zk.getChildren(&quot;/&quot; + groupNode, true);
        for (String subNode : subList) {
            // 获取每个子节点下关联的server地址
            byte[] data = zk.getData(&quot;/&quot; + groupNode + &quot;/&quot; + subNode, false, stat);
            newServerList.add(new String(data, &quot;utf-8&quot;));
        }

        // 替换server列表
        serverList = newServerList;

        System.out.println(&quot;server list updated: &quot; + serverList);
    }

    /**
     * client的工作逻辑写在这个方法中
     * 此处不做任何处理, 只让client sleep
     */
    public void handle() throws InterruptedException {
        Thread.sleep(Long.MAX_VALUE);
    }

    public static void main(String[] args) throws Exception {
        AppClient ac = new AppClient();
        ac.connectZookeeper();

        ac.handle();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;分布式共享锁demo&quot;&gt;6.3 分布式共享锁demo&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201903/1235870-20190318174438859-972897113.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;DistributedClient.java&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;import org.apache.zookeeper.*;
import org.apache.zookeeper.data.Stat;

import java.util.Collections;
import java.util.List;
import java.util.concurrent.CountDownLatch;

public class DistributedClient {
    // 超时时间
    private static final int SESSION_TIMEOUT = 5000;
    // zookeeper server列表
    private String hosts = &quot;192.168.147.10:2181,192.168.147.11:2181,192.168.147.12:2181&quot;;
    private String groupNode = &quot;locks&quot;;
    private String subNode = &quot;sub&quot;;

    private ZooKeeper zk;
    // 当前client创建的子节点
    private String thisPath;
    // 当前client等待的子节点
    private String waitPath;

    private CountDownLatch latch = new CountDownLatch(1);

    /**
     * 连接zookeeper
     */
    public void connectZookeeper() throws Exception {
        zk = new ZooKeeper(hosts, SESSION_TIMEOUT, new Watcher() {
            public void process(WatchedEvent event) {
                try {
                    // 连接建立时, 打开latch, 唤醒wait在该latch上的线程
                    if (event.getState() == Event.KeeperState.SyncConnected) {
                        latch.countDown();
                    }

                    // 发生了waitPath的删除事件
                    if (event.getType() == Event.EventType.NodeDeleted &amp;amp;&amp;amp; event.getPath().equals(waitPath)) {
                        doSomething();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });

        // 等待连接建立
        latch.await();

        // 创建子节点
        thisPath = zk.create(&quot;/&quot; + groupNode + &quot;/&quot; + subNode, null, ZooDefs.Ids.OPEN_ACL_UNSAFE,
                CreateMode.EPHEMERAL_SEQUENTIAL);

        // wait一小会, 让结果更清晰一些
        Thread.sleep(10);

        // 注意, 没有必要监听&quot;/locks&quot;的子节点的变化情况
        List&amp;lt;String&amp;gt; childrenNodes = zk.getChildren(&quot;/&quot; + groupNode, false);

        // 列表中只有一个子节点, 那肯定就是thisPath, 说明client获得锁
        if (childrenNodes.size() == 1) {
            doSomething();
        } else {
            String thisNode = thisPath.substring((&quot;/&quot; + groupNode + &quot;/&quot;).length());
            // 排序
            Collections.sort(childrenNodes);
            int index = childrenNodes.indexOf(thisNode);
            if (index == -1) {
                // never happened
            } else if (index == 0) {
                // inddx == 0, 说明thisNode在列表中最小, 当前client获得锁
                doSomething();
            } else {
                // 获得排名比thisPath前1位的节点
                this.waitPath = &quot;/&quot; + groupNode + &quot;/&quot; + childrenNodes.get(index - 1);
                // 在waitPath上注册监听器, 当waitPath被删除时, zookeeper会回调监听器的process方法
                zk.getData(waitPath, true, new Stat());
            }
        }
    }

    private void doSomething() throws Exception {
        try {
            System.out.println(&quot;gain lock: &quot; + thisPath);
            Thread.sleep(2000);
            // do something
        } finally {
            System.out.println(&quot;finished: &quot; + thisPath);
            // 将thisPath删除, 监听thisPath的client将获得通知
            // 相当于释放锁
            zk.delete(this.thisPath, -1);
        }
    }

    public static void main(String[] args) throws Exception {
        for (int i = 0; i &amp;lt; 10; i++) {
            new Thread() {
                public void run() {
                    try {
                        DistributedClient dl = new DistributedClient();
                        dl.connectZookeeper();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }.start();
        }

        Thread.sleep(Long.MAX_VALUE);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/201903/1235870-20190318174216665-1759373791.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;paxos算法帕索斯算法&quot;&gt;7 Paxos算法(帕索斯算法)&lt;/h2&gt;
&lt;blockquote readability=&quot;0.65853658536585&quot;&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/xuwc/p/9029882.html&quot; class=&quot;uri&quot;&gt;https://www.cnblogs.com/xuwc/p/9029882.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/cnh294141800/article/details/53768464&quot; class=&quot;uri&quot;&gt;https://blog.csdn.net/cnh294141800/article/details/53768464&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/shangxiaofei/p/5207218.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/shangxiaofei/p/5207218.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;维基的简介：Paxos算法是莱斯利·兰伯特（Leslie Lamport，就是 LaTeX 中的&quot;La&quot;，此人现在在微软研究院）于1990年提出的一种基于消息传递且具有高度容错特性的一致性算法。&lt;/li&gt;
&lt;li&gt;在节点很多的情况下，如果要收敛，也就是确定一个一致的值，需要不停的循环，那么必然会造成速度慢。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;生活中的例子&quot;&gt;7.1 生活中的例子&lt;/h3&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;假如有一群驴友要决定中秋节去旅游，这群驴友分布在全国各地，假定一共25个 人，分别在不同的省，要决定到底去拉萨、昆明、三亚等等哪个地点（会合时间中秋节已经定了，此时需要决定旅游地）。最直接的方式当然就是建一个QQ群，大家都在里面投票，按照少数服从多数的原则。这种方式类似于“共享内存”实现的一致性，实现起来简单，但Paxos算法不是这种场景，因为Paxos算法认为这种方式有一个很大的问题，就是QQ服务器挂掉怎么办？Paxos的原则是容错性一定要很强。所以，Paxos的场景类似于这25个人相互之间只能发短信，需要解决的核心问题是，哪怕任意的一部分人（Paxos的目的其实是少于半数的人）“失联”了，其它人也能够在会合地点上达成一致。好了，怎么设计呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;这25个人找了另外的5个人（当然这5个人可以从25个人中选，这里为了描述方便，就单拿出另外5个人），比如北京、上海、广州、深圳、成都的5个人，25个人都给他们发短信，告诉自己倾向的旅游地。这5个人相互之间可以并不通信， 只接受25个人发过来的短信。这25个人我们称为驴友，那5个人称为队长。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;先来看驴友的逻辑。驴友可以给任意5个队长都发短信，发短信的过程分为两个步骤：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;第一步（申请阶段）：询问5个队长，试图与队长沟通旅游地。因为每个队长一直会收到不同驴友的短信，不能跟多个驴友一起沟通，在任何时刻只能跟一个驴友沟通，按照什么原则才能做到公平公正公开呢？这些短信都带有发送时间，队长采用的原则是同意与短信发送时间最新的驴友沟通，如果出现了更新的短信，则与短信更新的驴友沟通。总之，作为一个有话语权的人，只有时刻保持倾听最新的呼声，才能做出最明智的选择。在驴友发出短信后，等着队长。某些队长可能会说，你这条短信太老了，我不与你沟通；有些队长则可能返回说，你的短信是我收到的最新的，我同意跟你沟通。对于后面这些队长，还得返回自己决定的旅游地。关于队长是 怎么决定旅游地的，后面再说。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;对于驴友来说，第一步必须至少有半数以上队长都同意沟通了，才能进入下一步。否则，你连沟通的资格都没有，一直在那儿狂发吧。你发的短信更新，你获得沟通权的可能性才更大。。。。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;因为至少有半数以上队长（也就是3个队长以上）同意，你才能与队长们进行实质性的沟通，也就是进入第二步；而队长在任何时候只能跟1个驴友沟通，所以，在任何时候，不可能出现两个驴友都达到了这个状态。。。当然，你可以通过狂发短信把沟通权抢了。。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;对于获得沟通权的那个驴友（称为A），那些队长会给他发送他们自己决定的旅游地（也可能都还没有决定）。可以看出，各个队长是自己决定旅游地的，队长之间无需沟通。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;第二步（沟通阶段）：这个幸运的驴友收到了队长们给他发的旅游地，可能有几种情况：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;第一种情况：跟A沟通的队长们（不一定是全部5个队长，但是半数以上）全部都还没有决定到底去那儿旅游，此时驴友A心花怒放，给这些队长发第二条短信，告诉他们自己希望的旅游地（比如马尔代夫）；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;可能会收到两种结果：一是半数以上队长都同意了，于是表明A建议的马尔代夫被半数以上队长都 同意了，整个决定过程完毕了，其它驴友迟早会知道这个消息的，A先去收拾东西准备去马尔代夫；除此之外，表明失败。可能队长出故障了，比如某个队长在跟女 朋友打电话等等，也可能被其它驴友抢占沟通权了（因为队长喜新厌旧嘛，只有要更新的驴友给自己发短信，自己就与新人沟通，A的建议队长不同意）等等。不管 怎么说，苦逼的A还得重新从第一步开始，重新给队长们发短信申请。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;第二种情况：至少有一个队长已经决定旅游地了，A可能会收到来自不同队长决定的多 个旅游地，这些旅游地是不同队长跟不同驴友在不同时间上做出的决定，那么，A会先看一下，是不是有的旅游地已经被半数以上队长同意了（比如3个队长都同意 去三亚，1个同意去昆明，另外一个没搭理A），如果出现了这种情况，那就别扯了，说明整个决定过程已经达成一致了，收拾收拾准备去三亚吧，结束了；如果都 没有达到半数以上（比如1个同意去昆明，1个同意去三亚，2个同意去拉萨，1个没搭理我），A作为一个高素质驴友，也不按照自己的意愿乱来了（Paxos 的关键所在，后者认同前者，否则整个决定过程永无止境），虽然自己原来可能想去马尔代夫等等。就给队长们发第二条短信的时候，告诉他们自己希望的旅游地， 就是自己收到的那堆旅游地中最新决定的那个。（比如，去昆明那个是北京那个队长前1分钟决定的，去三亚的决定是上海那个队长1个小时之前做出来的，于是顶 昆明）。驴友A的想法是，既然有队长已经做决定了，那我就干脆顶最新那个决定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;从上面的逻辑可以看出，一旦某个时刻有半数以上队长同意了某个地点比如昆明，紧跟着后面的驴友B继续发短信时，如果获得沟通权，因为半数以上队长都同意与B沟通了，说明B收到了来自半数以上队长发过来的消息，B必然会收到至少一个队长给他发的昆明这个结果（否则说明半数以上队长都没有同意昆明这个结果，这显然与前面的假设矛盾），B于是会顶这个最新地点，不会更改，因为后面的驴友都会顶昆明，因此同意昆明的队长越来越多，最终必然达成一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;看完了驴友的逻辑，那么队长的逻辑是什么呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;队长的逻辑比较简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;在申请阶段，队长只会选择与最新发申请短信的驴友沟通，队长知道自己接收到最新短信的时间，对于更老的短信，队长不会搭理；队长同意沟通了的话，会把自己决定的旅游地（或者还没决定这一信息）发给驴友。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;在沟通阶段，驴友C会把自己希望的旅游地发过来（同时会附加上自己申请短信的时 间，比如3分钟前），所以队长要检查一下，如果这个时间（3分钟前）确实是当前自己最新接收到申请短信的时间（说明这段时间没有驴友要跟自己沟通），那 么，队长就同意驴友C的这个旅游地了（比如昆明，哪怕自己1个小时前已经做过去三亚的决定，谁让C更新呢，于是更新为昆明）；如果不是最新的，说明这3分 钟内又有其它驴友D跟自己申请了，因为自己是个喜新厌旧的家伙，同意与D沟通了，所以驴友C的决定自己不会同意，等着D一会儿要发过来的决定吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Paxos的基本思想大致就是上面的过程。可以看出，其实驴友的策略才是Paxos的关键。让我们来跟理论对应一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Paxos主要用于保证分布式存储中副本（或者状态）的一致性。副本要保持一致， 那么，所有副本的更新序列就要保持一致。因为数据的增删改查操作一般都存在多个客户端并发操作，到底哪个客户端先做，哪个客户端后做，这就是更新顺序。如 果不是分布式，那么可以利用加锁的方法，谁先申请到锁，谁就先操作。但是在分布式条件下，存在多个副本，如果依赖申请锁+副本同步更新完毕再释放锁，那么 需要有分配锁的这么一个节点（如果是多个锁分配节点，那么又出现分布式锁管理的需求，把锁给哪一个客户端又成为一个难点），这个节点又成为单点，岂不是可 靠性不行了，失去了分布式多副本的意义，同时性能也很差，另外，还会出现死锁等情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;所以，说来说去，只有解决分布式条件下的一致性问题，似乎才能解决本质问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;如上面的例子，Paxos解决这一问题利用的是选举，少数服从多数的思想，只要 2N+1个节点中，有N个以上同意了某个决定，则认为系统达到了一致，并且按照Paxos原则，最终理论上也达到了一致，不会再改变。这样的话，客户端不 必与所有服务器通信，选择与大部分通信即可；也无需服务器都全部处于工作状态，有一些服务器挂掉，只有保证半数以上存活着，整个过程也能持续下去，容错性 相当好。因此，以前看有的博客说在部署ZooKeeper这种服务的时候，需要奇数台机器，这种说法当然有一定来源背景，比如如果是5台，那么任意客户端 与任意其中3台达成一致就相当于投票结束，不过6台有何不可？只是此时需要与4台以上达成一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Paxos中的Acceptor就相当于上面的队长，Proposer就相当于上 面的驴友，epoch编号就相当于例子中申请短信的发送时间。关于Paxos的正式描述已经很多了，这里就不复述了，关于Paxos正确性的证明，因为比 较复杂，以后有时间再分析。另外，Paxos最消耗时间的地方就在于需要半数以上同意沟通了才能进入第二步，试想一下，一开始，所有驴友就给队长狂发短 信，每个队长收到的最新短信的是不同驴友，这样，就难以达到半数以上都同意与某个驴友沟通的状态，为了减小这个时间，Paxos还有Fast Paxos的改进等等，有空再分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;倒是有一些问题可以思考一下：在Paxos之前，或者说除了Chubby，ZooKeeper这些系统，其它分布式系统同样面临这样的一致性问题，比如HDFS、分布式数据库、Amazon的Dynamo等等，解决思路又不同，有空再进行对比分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;最后谈谈一致性这个名词。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;关于Paxos说的一致性，个人理解是指冗余副本（或状态等，但都是因为存在冗余）的一致性。这与关系型数据库中ACID的一致性说的不是一个东西。在关系数据库里，可以连副本都没有，何谈副本的一致性？按照经典定义，ACID中的C指的是在一个事务中，事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。那么，什么又是一致性状态呢，这跟业务约束有关系，比如经典的转账事务，事务处理完毕后，不能出现一个账户钱被扣了，另一个账户的钱没有增加的情况，如果两者加起来的钱还是等于转账前的钱，那么就是一致性状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;从很多博文来看，对这两种一致性往往混淆起来。另外，CAP原则里面所说的一致 性，个人认为是指副本一致性，与Paxos里面的一致性接近。都是处理“因为冗余数据的存在而需要保证多个副本保持一致”的问题，NoSQL放弃的强一致 性也是指副本一致性，最终一致性也是指副本达到完全相同存在一定延时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;当然，如果数据库本身是分布式的，且存在冗余副本，则除了解决事务在业务逻辑上的一致性问题外，同时需要解决副本一致性问题，此时可以利用Paxos协议。但解决了副本一致性问题，还不能完全解决业务逻辑一致性；如果是分布式数据库，但并不存在副本的情况，事务的一致性需要根据业务约束进行设计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;另外，谈到Paxos时，还会涉及到拜占庭将军问题，它指的是在存在消息丢失的不 可靠信道上试图通过消息传递的方式达到一致性是不可能的。Paxos本身就是利用消息传递方式解决一致性问题的，所以它的假定是信道必须可靠，这里的可 靠，主要指消息不会被篡改。消息丢失是允许的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;关于一致性、事务的ACID，CAP，NoSQL等等问题，以后再详细分析。本文的描述也许可能存在一些举例不太恰当的地方，如果错误，欢迎批评指正。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;paxos协议解释&quot;&gt;7.2 Paxos协议解释&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Paxos算法的目的&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Paxos算法的目的是为了解决分布式环境下一致性的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;多个节点并发操纵数据，如何保证在读写过程中数据的一致性，并且解决方案要能适应分布式环境下的不可靠性（系统如何就一个值达到统一）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paxos的两个组件&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Proposer：提议发起者，处理客户端请求，将客户端的请求发送到集群中，以便决定这个值是否可以被批准。&lt;/li&gt;
&lt;li&gt;Acceptor：提议批准者，负责处理接收到的提议，他们的回复就是一次投票。会存储一些状态来决定是否接收一个值&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Paxos有两个原则
&lt;ul&gt;&lt;li&gt;安全原则---保证不能做错的事：
&lt;ul&gt;&lt;li&gt;针对某个实例的表决只能有一个值被批准，不能出现一个被批准的值被另一个值覆盖的情况；(假设有一个值被多数Acceptor批准了，那么这个值就只能被学习)&lt;/li&gt;
&lt;li&gt;每个节点只能学习到已经被批准的值，不能学习没有被批准的值。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;存活原则---只要有多数服务器存活并且彼此间可以通信，最终都要做到的下列事情：
&lt;ul&gt;&lt;li&gt;最终会批准某个被提议的值；&lt;/li&gt;
&lt;li&gt;一个值被批准了，其他服务器最终会学习到这个值。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;paxos流程图&quot;&gt;7.3 Paxos流程图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219222831160-321689073.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1）.获取一个proposal number, n；&lt;/p&gt;
&lt;p&gt;2）.提议者向所有节点广播prepare(n)请求；&lt;/p&gt;
&lt;p&gt;3）.接收者（Acceptors比较善变，如果还没最终认可一个值，它就会不断认同提案号最大的那个方案）比较n和minProposal，如果n&amp;gt;minProposal,表示有更新的提议minProposal=n；如果此时该接受者并没有认可一个最终值，那么认可这个提案，返回OK。如果此时已经有一个accptedValue, 将返回(acceptedProposal,acceptedValue)；&lt;/p&gt;
&lt;p&gt;4）.提议者接收到过半数请求后，如果发现有acceptedValue返回，表示有认可的提议，保存最高acceptedProposal编号的acceptedValue到本地；&lt;/p&gt;
&lt;p&gt;5）.广播accept(n,value)到所有节点；&lt;/p&gt;
&lt;p&gt;6）.接收者比较n和minProposal，如果n&amp;gt;=minProposal,则acceptedProposal=minProposal=n，acceptedValue=value，本地持久化后，返回；否则，拒绝并且返回minProposal；&lt;/p&gt;
&lt;p&gt;7）.提议者接收到过半数请求后，如果发现有返回值&amp;gt;n，表示有更新的提议，跳转1（重新发起提议）；否则value达成一致。&lt;/p&gt;
&lt;h3 id=&quot;paxos议案id生成算法&quot;&gt;7.4 Paxos议案ID生成算法&lt;/h3&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;在Google的Chubby论文中给出了这样一种方法：假设有n个proposer，每个编号为ir(0&amp;lt;=ir&amp;lt;n)，proposal编号的任何值s都应该大于它已知的最大值，并且满足： s % n = ir =&amp;gt; s = m * n + ir；&lt;/p&gt;
&lt;p&gt;proposer已知的最大值来自两部分：proposer自己对编号自增后的值和接收到acceptor的拒绝后所得到的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;例： 以3个proposer P1、P2、P3为例，开始m=0,编号分别为0，1，2。&lt;/p&gt;
&lt;p&gt;1） P1提交的时候发现了P2已经提交，P2编号为1 &amp;gt;P1的0，因此P1重新计算编号：new P1 = 1 * 3 + 1 = 4；&lt;/p&gt;
&lt;p&gt;2） P3以编号2提交，发现小于P1的4，因此P3重新编号：new P3 = 1 * 3+2 = 5。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;paxos原理&quot;&gt;7.5 Paxos原理&lt;/h3&gt;
&lt;h4 id=&quot;具体实例假设的3军问题&quot;&gt;具体实例：(假设的3军问题)&lt;/h4&gt;
&lt;blockquote readability=&quot;29&quot;&gt;
&lt;p&gt;1） 1支红军在山谷里扎营，在周围的山坡上驻扎着3支蓝军；&lt;/p&gt;
&lt;p&gt;2） 红军比任意1支蓝军都要强大；如果1支蓝军单独作战，红军胜；如果2支或以上蓝军同时进攻，蓝军胜；&lt;/p&gt;
&lt;p&gt;3） 三支蓝军需要同步他们的进攻时间；但他们惟一的通信媒介是派通信兵步行进入山谷，在那里他们可能被俘虏，从而将信息丢失；或者为了避免被俘虏，可能在山谷停留很长时间；&lt;/p&gt;
&lt;p&gt;4） 每支军队有1个参谋负责提议进攻时间；每支军队也有1个将军批准参谋提出的进攻时间；很明显，1个参谋提出的进攻时间需要获得至少2个将军的批准才有意义；&lt;/p&gt;
&lt;p&gt;5） 问题：是否存在一个协议，能够使得蓝军同步他们的进攻时间？&lt;/p&gt;
&lt;p&gt;接下来以两个假设的场景来演绎BasicPaxos；参谋和将军需要遵循一些基本的规则&lt;/p&gt;
&lt;p&gt;1） 参谋以两阶段提交（prepare/commit）的方式来发起提议，在prepare阶段需要给出一个编号；&lt;/p&gt;
&lt;p&gt;2） 在prepare阶段产生冲突，将军以编号大小来裁决，编号大的参谋胜出；&lt;/p&gt;
&lt;p&gt;3） 参谋在prepare阶段如果收到了将军返回的已接受进攻时间，在commit阶段必须使用这个返回的进攻时间；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;先后提议的场景&quot;&gt;7.5.1 先后提议的场景&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219225405322-1157310730.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;参与角色：&lt;/p&gt;
&lt;p&gt;proposer（提议者）：参谋1，参谋2&lt;/p&gt;
&lt;p&gt;acceptor（决策者）：将军1，将军2，将军3&lt;/p&gt;
&lt;p&gt;1）参谋1发起提议，派通信兵带信给3个将军，内容为（编号1）；&lt;br/&gt;2）3个将军收到参谋1的提议，由于之前还没有保存任何编号，因此把（编号1）保存下来，避免遗忘；同时让通信兵带信回去，内容为（ok）；&lt;br/&gt;3）参谋1收到至少2个将军的回复，再次派通信兵带信给3个将军，内容为（编号1，进攻时间1）；&lt;br/&gt;4）3个将军收到参谋1的时间，把（编号1，进攻时间1）保存下来，避免遗忘；同时让通信兵带信回去，内容为（Accepted）；&lt;br/&gt;5）参谋1收到至少2个将军的（Accepted）内容，确认进攻时间已经被大家接收；&lt;br/&gt;6）参谋2发起提议，派通信兵带信给3个将军，内容为（编号2）；&lt;br/&gt;7）3个将军收到参谋2的提议，由于（编号2）比（编号1）大，因此把（编号2）保存下来，避免遗忘；又由于之前已经接受参谋1的提议，因此让通信兵带信回去，内容为（编 号1，进攻时间1）；&lt;br/&gt;8）参谋2收到至少2个将军的回复，由于回复中带来了已接受的参谋1的提议内容，参谋2因此不再提出新的进攻时间，接受参谋1提出的时间；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;交叉场景&quot;&gt;7.5.2 交叉场景&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219225419925-1485575753.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;32&quot;&gt;
&lt;p&gt;参与角色：&lt;/p&gt;
&lt;p&gt;proposer（提议者）：参谋1，参谋2&lt;/p&gt;
&lt;p&gt;acceptor（决策者）：将军1，将军2，将军3&lt;/p&gt;
&lt;p&gt;1）参谋1发起提议，派通信兵带信给3个将军，内容为（编号1）；&lt;/p&gt;
&lt;p&gt;2）3个将军的情况如下&lt;br/&gt;　　a）将军1和将军2收到参谋1的提议，将军1和将军2把（编号1）记录下来，如果有其他参谋提出更小的编号，将被拒绝；同时让通信兵带信回去，内容为（ok）；&lt;br/&gt;　　b）负责通知将军3的通信兵被抓，因此将军3没收到参谋1的提议；&lt;/p&gt;
&lt;p&gt;3）参谋2在同一时间也发起了提议，派通信兵带信给3个将军，内容为（编号2）；&lt;br/&gt;4）3个将军的情况如下&lt;br/&gt;　　a）将军2和将军3收到参谋2的提议，将军2和将军3把（编号2）记录下来，如果有其他参谋提出更小的编号，将被拒绝；同时让通信兵带信回去，内容为（ok）；&lt;br/&gt;　　b）负责通知将军1的通信兵被抓，因此将军1没收到参谋2的提议；&lt;br/&gt;5）参谋1收到至少2个将军的回复，再次派通信兵带信给有答复的2个将军，内容为（编号1，进攻时间1）；&lt;br/&gt;6）2个将军的情况如下&lt;br/&gt;　　a）将军1收到了（编号1，进攻时间1），和自己保存的编号相同，因此把（编号1，进攻时间1）保存下来；同时让通信兵带信回去，内容为（Accepted）；&lt;br/&gt;　　b）将军2收到了（编号1，进攻时间1），由于（编号1）小于已经保存的（编号2），因此让通信兵带信回去，内容为（Rejected，编号2）；&lt;br/&gt;7）参谋2收到至少2个将军的回复，再次派通信兵带信给有答复的2个将军，内容为（编号2，进攻时间2）；&lt;br/&gt;8）将军2和将军3收到了（编号2，进攻时间2），和自己保存的编号相同，因此把（编号2，进攻时间2）保存下来，同时让通信兵带信回去，内容为（Accepted）；&lt;br/&gt;9）参谋2收到至少2个将军的（Accepted）内容，确认进攻时间已经被多数派接受；&lt;/p&gt;
&lt;p&gt;10）参谋1只收到了1个将军的（Accepted）内容，同时收到一个（Rejected，编号2）；参谋1重新发起提议，派通信兵带信给3个将军，内容为（编号3）；&lt;/p&gt;
&lt;p&gt;11）3个将军的情况如下&lt;br/&gt;　　a）将军1收到参谋1的提议，由于（编号3）大于之前保存的（编号1），因此把（编号3）保存下来；由于将军1已经接受参谋1前一次的提议，因此让通信兵带信回去，内容为（编号1，进攻时间1）；&lt;br/&gt;　　b）将军2收到参谋1的提议，由于（编号3）大于之前保存的（编号2），因此把（编号3）保存下来；由于将军2已经接受参谋2的提议，因此让通信兵带信回去，内容为（编号2，进攻时间2）；&lt;br/&gt;　　c）负责通知将军3的通信兵被抓，因此将军3没收到参谋1的提议；&lt;/p&gt;
&lt;p&gt;12）参谋1收到了至少2个将军的回复，比较两个回复的编号大小，选择大编号对应的进攻时间作为最新的提议；参谋1再次派通信兵带信给有答复的2个将军，内容为（编号3，进攻时间2）；&lt;br/&gt;13）将军1和将军2收到了（编号3，进攻时间2），和自己保存的编号相同，因此保存（编号3，进攻时间2），同时让通信兵带信回去，内容为（Accepted）；&lt;br/&gt;14）参谋1收到了至少2个将军的（accepted）内容，确认进攻时间已经被多数派接受。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;paxos算法&quot;&gt;7.6 paxos算法&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219230621158-1882019154.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在paxos算法中，分为4种角色：
&lt;ul&gt;&lt;li&gt;Proposer ：提议者&lt;/li&gt;
&lt;li&gt;Acceptor：决策者&lt;/li&gt;
&lt;li&gt;Client：产生议题者&lt;/li&gt;
&lt;li&gt;Learner：最终决策学习者&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;上面4种角色中，提议者和决策者是很重要的，其他的2个角色在整个算法中应该算做 打酱油的，Proposer就像Client的使者，由Proposer使者拿着Client的议题去向Acceptor提议，让Acceptor来决 策。这里上面出现了个新名词：最终决策。现在来系统的介绍一下paxos算法中所有的行为：&lt;/p&gt;
&lt;p&gt;Proposer提出议题&lt;/p&gt;
&lt;p&gt;Acceptor初步接受 或者 Acceptor初步不接受&lt;/p&gt;
&lt;p&gt;如果上一步Acceptor初步接受则Proposer再次向Acceptor确认是否最终接受&lt;/p&gt;
&lt;p&gt;Acceptor 最终接受 或者Acceptor 最终不接受&lt;/p&gt;
&lt;p&gt;上面Learner最终学习的目标是Acceptor们最终接受了什么议题？注意，这里是向所有Acceptor学习，如果有多数派个Acceptor最终接受了某提议，那就得到了最终的结果，算法的目的就达到了。画一幅图来更加直观：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;例子paxos的算法的流程2阶段提交&quot;&gt;例子paxos的算法的流程(2阶段提交)&lt;/h4&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;有2个Client(老板，老板之间是竞争关系)和3个Acceptor(政府官员)：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;37&quot;&gt;
&lt;p&gt;现在需要对一项议题来进行paxos过程，议题是“A项目我要中标！”，这里的“我”指每个带着他的秘书Proposer的Client老板。&lt;br/&gt;Proposer当然听老板的话了，赶紧带着议题和现金去找Acceptor政府官员。&lt;br/&gt;作为政府官员，当然想谁给的钱多就把项目给谁。&lt;/p&gt;
&lt;p&gt;Proposer-1小姐带着现金同时找 到了Acceptor-1~Acceptor-3官员，1与2号官员分别收取了10比特币，找到第3号官员时，没想到遭到了3号官员的鄙视，3号官员告诉 她，Proposer-2给了11比特币。不过没关系，Proposer-1已经得到了1,2两个官员的认可，形成了多数派(如果没有形成多数 派，Proposer-1会去银行提款在来找官员们给每人20比特币，这个过程一直重复每次+10比特币，直到多数派的形成)，满意的找老板复命去了，但 是此时Proposer-2保镖找到了1,2号官员，分别给了他们11比特币，1,2号官员的态度立刻转变，都说Proposer-2的老板懂事，这下子 Proposer-2放心了，搞定了3个官员，找老板复命去了，当然这个过程是第一阶段提交，只是官员们初步接受贿赂而已。故事中的比特币是编号，议题是 value。&lt;br/&gt;这个过程保证了在某一时刻，某一个proposer的议题会形成一个多数派进行初步支持；&lt;/p&gt;
&lt;p&gt;华丽的，第一阶段结束&lt;/p&gt;
&lt;p&gt;现在进入第二阶段提交，现在proposer-1小姐使用分身术(多线 程并发)分了3个自己分别去找3位官员，最先找到了1号官员签合同，遭到了1号官员的鄙视，1号官员告诉他proposer-2先生给了他11比特币，因 为上一条规则的性质proposer-1小姐知道proposer-2第一阶段在她之后又形成了多数派(至少有2位官员的赃款被更新了);此时她赶紧去提 款准备重新贿赂这3个官员(重新进入第一阶段)，每人20比特币。刚给1号官员20比特币， 1号官员很高兴初步接受了议题，还没来得及见到2,3号官员的时候&lt;/p&gt;
&lt;p&gt;这时proposer-2先生也使用分身术分别找3位官员(注意这里是 proposer-2的第二阶段)，被第1号官员拒绝了告诉他收到了20比特币，第2,3号官员顺利签了合同，这时2，3号官员记录client-2老板 用了11比特币中标，因为形成了多数派，所以最终接受了Client2老板中标这个议题，对于proposer-2先生已经出色的完成了工作；&lt;/p&gt;
&lt;p&gt;这时proposer-1小姐找到了2号官员，官员告诉她合同已经签了，将合同给 她看，proposer-1小姐是一个没有什么职业操守的聪明人，觉得跟Client1老板混没什么前途，所以将自己的议题修改为“Client2老板中 标”，并且给了2号官员20比特币，这样形成了一个多数派。顺利的再次进入第二阶段。由于此时没有人竞争了，顺利的找3位官员签合同，3位官员看到议题与 上次一次的合同是一致的，所以最终接受了，形成了多数派，proposer-1小姐跳槽到Client2老板的公司去了。&lt;/p&gt;
&lt;p&gt;华丽的，第二阶段结束&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Paxos过程结束了，这样，一致性得到了保证，算法运行到最后所有的 proposer都投“client2中标”所有的acceptor都接受这个议题，也就是说在最初的第二阶段，议题是先入为主的，谁先占了先机，后面的 proposer在第一阶段就会学习到这个议题而修改自己本身的议题，因为这样没职业操守，才能让一致性得到保证，这就是paxos算法的一个过程。原来 paxos算法里的角色都是这样的不靠谱，不过没关系，结果靠谱就可以了。该算法就是为了追求结果的一致性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;zab协议&quot;&gt;8 ZAB协议&lt;/h2&gt;
&lt;blockquote readability=&quot;21&quot;&gt;
&lt;p&gt;ZooKeeper并没有直接采用Paxos算法，因为Paxos算法在节点很多的情况下，如果要收敛，也就是确定一个一致的值，需要不停的循环，那么必然会造成速度慢。所以zk参考Paxos提供了一种被称为ZAB（ZooKeeper Atomic Broadcast）的一致性协议。&lt;/p&gt;
&lt;p&gt;ZAB协议主要用于构建一个高可用的分布式数据主备系统--AP&lt;/p&gt;
&lt;p&gt;Paxos算法则是用于构建一个分布式的一致性状态机系统--CP&lt;/p&gt;
&lt;p&gt;CAP原则又称CAP定理，指的是在一个分布式系统中，一致性（Consistency）、可用性（Availability）、分区容错性（Partition tolerance）。CAP 原则指的是，这三个要素最多只能同时实现两点，不可能三者兼顾。&lt;/p&gt;
&lt;p&gt;CAP原则的精髓就是要么AP，要么CP，要么AC，但是不存在CAP。如果在某个分布式系统中数据无副本， 那么系统必然满足强一致性条件， 因为只有独一数据，不会出现数据不一致的情况，此时C和P两要素具备，但是如果系统发生了网络分区状况或者宕机，必然导致某些数据不可以访问，此时可用性条件就不能被满足，即在此情况下获得了CP系统，但是CAP不可同时满足。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;zookeeper中节点分四种状态&quot;&gt;8.1 zookeeper中节点分四种状态&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;looking：&lt;/strong&gt;选举Leader的状态（集群刚启动时或崩溃恢复状态下，也就是需要选举的时候）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;following：&lt;/strong&gt;跟随者（follower）的状态，服从Leader命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;leading：&lt;/strong&gt;当前节点是Leader，负责协调工作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;observing：&lt;/strong&gt;observer(观察者)，不参与选举，只读节点。&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;zookeeper选举过程&quot;&gt;8.2 zookeeper选举过程&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;举例场景：leader挂了，需要选举新的leader&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219232222641-1294130636.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;阶段一：崩溃恢复&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;a.每个server都有一张选票&amp;lt;myid，zxid&amp;gt;，如（3,9），选票投自己。&lt;br/&gt;b.每个server投完自己后，再分别投给其他还可用的服务器。如把Server3的（3,9）分别投给Server4和Server5，依次类推&lt;br/&gt;c.比较投票，&lt;strong&gt;比较逻辑：优先比较Zxid，Zxid相同时才比较myid。比较Zxid时，大的做leader；比较myid时，小的做leader&lt;/strong&gt;&lt;br/&gt;d.改变服务器状态（崩溃恢复-&amp;gt;数据同步，或者崩溃恢复-&amp;gt;消息广播）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;阶段二：消息广播&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219233423931-444403068.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;a.Leader接受请求后，将这个请求赋予全局的唯一64位自增Id（zxid）。&lt;br/&gt;b.将zxid作为议案发给所有follower。&lt;br/&gt;c.所有的follower接受到议案后，想将议案写入硬盘后，马上回复Leader一个ACK（OK）。&lt;br/&gt;d.当Leader接受到合法数量（过半）Acks，Leader给所有follower发送commit命令。&lt;br/&gt;e.follower执行commit命令。&lt;br/&gt;&lt;strong&gt;注意：到了这个阶段，ZK集群才正式对外提供服务，并且Leader可以进行消息广播，如果有新节点加入，还需要进行同步。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;阶段三：数据同步&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;a.取出Leader最大lastZxid（从本地log日志来）&lt;br/&gt;b.找到对应zxid的数据，进行同步（数据同步过程保证所有follower一致）&lt;br/&gt;c.只有满足quorum同步完成，准Leader才能成为真正的Leader&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;写数据流程&quot;&gt;8.3 写数据流程&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1235870/202002/1235870-20200219234218997-1466255259.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 19 Feb 2020 15:44:00 +0000</pubDate>
<dc:creator>咘雷扎克</dc:creator>
<og:description>Zookeeper 1 Zookeeper概念 Zookeeper是什么 是一个基于观察者设计模式的分布式服务管理框架，它负责和管理需要关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化，Z</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/ttzzyy/p/12333934.html</dc:identifier>
</item>
<item>
<title>13.深度学习(词嵌入)与自然语言处理--HanLP实现 - mantch</title>
<link>http://www.cnblogs.com/mantch/p/12333696.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mantch/p/12333696.html</guid>
<description>&lt;p&gt;&lt;strong&gt;笔记转载于GitHub项目&lt;/strong&gt;：&lt;a href=&quot;https://github.com/NLP-LOVE/Introduction-NLP&quot; class=&quot;uri&quot;&gt;https://github.com/NLP-LOVE/Introduction-NLP&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;深度学习与自然语言处理&quot;&gt;13. 深度学习与自然语言处理&lt;/h2&gt;
&lt;h3 id=&quot;传统方法的局限&quot;&gt;13.1 传统方法的局限&lt;/h3&gt;
&lt;p&gt;前面已经讲过了隐马尔可夫模型、感知机、条件随机场、朴素贝叶斯模型、支持向量机等传统机器学习模型，同时，为了将这些机器学习模型应用于 NLP，我们掌握了特征模板、TF-IDF、词袋向量等特征提取方法。而这些方法的局限性表现为如下:&lt;/p&gt;
&lt;ol readability=&quot;9.5&quot;&gt;&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;数据稀疏&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，传统的机器学习方法不善于处理数据稀疏问题，这在自然语言处理领域显得尤为突出，语言是离散的符号系统，每个字符、单词都是离散型随机变量。我们通常使用独热向量(one-hot)来将文本转化为向量表示，指的是只有一个元素为1，其他元素全部为 0 的二进制向量。例如:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;祖国特征: [&quot;中国&quot;,&quot;美国&quot;,&quot;法国&quot;] (这里 N=3)&lt;/p&gt;
&lt;p&gt;中国 =&amp;gt; 100&lt;/p&gt;
&lt;p&gt;美国 =&amp;gt; 010&lt;/p&gt;
&lt;p&gt;法国 =&amp;gt; 001&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的祖国特征只有 3 个还好，那如果是成千上万个呢？就会有很多的 0 出现，表现为数据的稀疏性。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;特征模板&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语言具有高度的复合型。对于中文而言，偏旁部首构成汉字，汉字构成单词，单词构成短语，短语构成句子，句子构成段落，段落构成文章，随着层级的递进与颗粒度的增大，所表达的含义越来越复杂。&lt;/p&gt;
&lt;p&gt;这样的特征模板同样带来数据稀疏的困扰: 一个特定单词很常见，但两个单词的特定组合则很少见，三个单词更是如此。许多特征在训练集中仅仅出现一次，仅仅出现一次的特征在统计学上毫无意义。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;误差传播&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现实世界中的项目，往往涉及多个自然语言处理模块的组合。比如在情感分析中，需要先进行分词，然后进行词性标注，根据词性标注过滤掉一些不重要的词，最后送入到朴素贝叶斯或者支持向量机等机器学习模块进行分类预测。&lt;/p&gt;
&lt;p&gt;这种流水线式的作业方式存在严重的&lt;strong&gt;误差传播&lt;/strong&gt;问题，亦即前一个模块产生的错误被输入到下一个模块中产生更大的错误，最终导致了整个系统的脆弱性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;深度学习与优势&quot;&gt;13.2 深度学习与优势&lt;/h3&gt;
&lt;p&gt;为了解决传统机器学习与自然语言处理中的数据稀疏、人工特征模板和误差传播等问题，人们将注意力转向了另一种机器学习潮流的研究--深度学习。&lt;/p&gt;
&lt;ol readability=&quot;16.700176366843&quot;&gt;&lt;li readability=&quot;6.6166484118291&quot;&gt;
&lt;p&gt;&lt;strong&gt;深度学习&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;深度学习&lt;/strong&gt;(Deep Leaming, DL )属于表示学习( Representation Learning )的范畴，指的是利用具有一定“深度”的模型来自动学习事物的向量表示(vectorial rpresenation)的一种学习范式。目前，深度学习所采用的模型主要是层数在一层以上的神经网络。如果说在传统机器学习中，事物的向量表示是利用手工特征模板来提取稀疏的二进制向量的话，那么在深度学习中，特征模板被多层感知机替代。而一旦问题被表达为向量，接下来的分类器一样可以使用单层感知机等模型，此刻深度学习与传统手法毫无二致，殊途同归。所以说深度学习并不神秘，通过多层感知机提取向量才是深度学习的精髓。&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;深度学习原理&lt;/strong&gt;，在之前我的博客中已经介绍了，详细请点击:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mantchs.com/2019/08/04/DL/Neural%20Network/&quot;&gt;http://mantchs.com/2019/08/04/DL/Neural%20Network/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;strong&gt;用稠密向量解决数据稀疏&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;神经网络的输出为样本 x 的一个特征向量 h。由于我们可以自由控制神经网络隐藏层的大小，所以在隐藏层得到的 h 的长度也可以控制。即便输人层是词表大小的独热向量、维度高达数十万，隐藏层得到的特征向量依然可以控制在很小的体积，比如100维。&lt;/p&gt;
&lt;p&gt;这样的 100 维向量是对词语乃至其他样本的抽象表示，含有高度浓缩的信息。正因为这些向量位于同一个低维空间，我们可以很轻松地训练分类器去学习单词与单词、文档与文档、图片与图片之间的相似度，甚至可以训练分类器来学习图片与文档之间的相似度。由表示学习带来的这一切， 都是传统机器学习方法难以实现的。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;用多层网络自动提取特征表示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;神经网络两层之间一般全部连接(全连接层),并不需要人们根据具体问题具体设计连接方式。这些隐藏层会根据损失函数的梯度自动调整多层感知机的权重矩阵，从而自动学习到隐陬层的特征表示。&lt;/p&gt;
&lt;p&gt;该过程完全不需要人工干预，也就是说深度学习从理论上剥夺了特征模板的用武之地。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;端到端的设计&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于神经网络各层之间、各个神经网络之间的“交流语言”为向量，所以深度学习工程师可以轻松地将多个神经网络组合起来，形成一种端到端的设计。比如之前谈到的情感分析案例中，一种最简单的方案是将文档的每个字符的独热向量按顺序输入到神经网络中，得到整个文档的特征向量。然后将该特征向量输入到多项逻辑斯谛回归分类器中，就可以分类出文档的情感极性了。&lt;/p&gt;
&lt;p&gt;整个过程既不需要中文分词，也不需要停用词过滤。因为神经网络按照字符顺序模拟了人类阅读整篇文章的过程，已经获取到了全部的输人。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;word2vec&quot;&gt;13.3 word2vec&lt;/h3&gt;
&lt;p&gt;作为连接传统机器学习与深度学习的桥梁，词向量一直是入门深度学习的第一站。词向量的训练方法有很多种，word2vec 是其中最著名的一种，还有 fastText、Glove、BERT和最近很流行的 XLNet 等。&lt;/p&gt;
&lt;ol readability=&quot;54.105731775181&quot;&gt;&lt;li readability=&quot;0.57723577235772&quot;&gt;
&lt;p&gt;word2vec 的原理在我博客里已经讲解过了，详细介绍见:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mantchs.com/2019/08/22/NLP/Word%20Embeddings/&quot;&gt;http://mantchs.com/2019/08/22/NLP/Word%20Embeddings/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;18&quot;&gt;
&lt;p&gt;&lt;strong&gt;训练词向量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;了解了词向量的基本原理之后，本节介绍如何调用 HanLP 中实现的词向量模块，该模块接受的训练语料格式为以空格分词的纯文本格式，此处以 MSR 语料库为例。训练代码如下(&lt;strong&gt;自动下载语料库&lt;/strong&gt;):&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from pyhanlp import *
import zipfile
import os
from pyhanlp.static import download, remove_file, HANLP_DATA_PATH

def test_data_path():
    &quot;&quot;&quot;
    获取测试数据路径，位于$root/data/test，根目录由配置文件指定。
    :return:
    &quot;&quot;&quot;
    data_path = os.path.join(HANLP_DATA_PATH, 'test')
    if not os.path.isdir(data_path):
        os.mkdir(data_path)
    return data_path



## 验证是否存在语料库，如果没有自动下载
def ensure_data(data_name, data_url):
    root_path = test_data_path()
    dest_path = os.path.join(root_path, data_name)
    if os.path.exists(dest_path):
        return dest_path

    if data_url.endswith('.zip'):
        dest_path += '.zip'
    download(data_url, dest_path)
    if data_url.endswith('.zip'):
        with zipfile.ZipFile(dest_path, &quot;r&quot;) as archive:
            archive.extractall(root_path)
        remove_file(dest_path)
        dest_path = dest_path[:-len('.zip')]
    return dest_path


sighan05 = ensure_data('icwb2-data', 'http://sighan.cs.uchicago.edu/bakeoff2005/data/icwb2-data.zip')
msr_train = os.path.join(sighan05, 'training', 'msr_training.utf8')
## ===============================================
## 以下开始 word2vec


IOUtil = JClass('com.hankcs.hanlp.corpus.io.IOUtil')
DocVectorModel = JClass('com.hankcs.hanlp.mining.word2vec.DocVectorModel')
Word2VecTrainer = JClass('com.hankcs.hanlp.mining.word2vec.Word2VecTrainer')
WordVectorModel = JClass('com.hankcs.hanlp.mining.word2vec.WordVectorModel')

# 演示词向量的训练与应用
TRAIN_FILE_NAME = msr_train
MODEL_FILE_NAME = os.path.join(test_data_path(), &quot;word2vec.txt&quot;)

def train_or_load_model():
    if not IOUtil.isFileExisted(MODEL_FILE_NAME):
        if not IOUtil.isFileExisted(TRAIN_FILE_NAME):
            raise RuntimeError(&quot;语料不存在，请阅读文档了解语料获取与格式：https://github.com/hankcs/HanLP/wiki/word2vec&quot;)
        trainerBuilder = Word2VecTrainer();
        return trainerBuilder.train(TRAIN_FILE_NAME, MODEL_FILE_NAME)
    return load_model()


def load_model():
    return WordVectorModel(MODEL_FILE_NAME)


wordVectorModel = train_or_load_model()  # 调用函数训练 word2vec&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;19&quot;&gt;
&lt;p&gt;&lt;strong&gt;单词语义相似度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有了词向量之后，最基本的应用就是查找与给定单词意义最相近的前 N 个单词。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# 打印 单词语义相似度
def print_nearest(word, model):
    print(
        &quot;\n                                                Word     &quot;
        &quot;Cosine\n------------------------------------------------------------------------&quot;)
    for entry in model.nearest(word):
        print(&quot;%50s\t\t%f&quot; % (entry.getKey(), entry.getValue()))

print_nearest(&quot;上海&quot;, wordVectorModel)
print_nearest(&quot;美丽&quot;, wordVectorModel)
print_nearest(&quot;购买&quot;, wordVectorModel)
print(wordVectorModel.similarity(&quot;上海&quot;, &quot;广州&quot;))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果如下:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;                                                Word     Cosine
------------------------------------------------------------------------
                                                广州       0.616240
                                                天津       0.564681
                                                西安       0.500929
                                                抚顺       0.456107
                                                深圳       0.454190
                                                浙江       0.446069
                                                杭州       0.434974
                                                江苏       0.429291
                                                广东       0.407300
                                                南京       0.404509

                                                Word     Cosine
------------------------------------------------------------------------
                                                装点       0.652887
                                                迷人       0.648911
                                                恬静       0.634712
                                                绚丽       0.634530
                                                憧憬       0.616118
                                                葱翠       0.612149
                                                宁静       0.599068
                                                清新       0.592581
                                                纯真       0.589360
                                                景色       0.585169

                                                Word     Cosine
------------------------------------------------------------------------
                                                 购       0.521070
                                                购得       0.500480
                                                选购       0.483097
                                                购置       0.480335
                                                采购       0.469803
                                                出售       0.469185
                                               低收入       0.461131
                                              分期付款       0.458573
                                                代销       0.456689
                                                高价       0.456320
0.6162400245666504&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其中 Cosine 一栏即为两个单词之间的余弦相似度，是一个介于 -1 和 1 之间的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;21&quot;&gt;
&lt;p&gt;&lt;strong&gt;词语类比&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将两个词语的词向量相减，会产生一个新向量。通过与该向量做点积，可以得出一个单词与这两个单词的差值之间的相似度。在英文中，一个常见的例子是 king - man + woman = queen，也就是说词向量的某些维度可能保存着当前词语与皇室的关联程度，另一些维度可能保存着性别信息。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;
# param A: 做加法的词语
# param B：做减法的词语
# param C：做加法的词语
# return：与(A-B+C) 语义距离最近的词语及其相似度列表
print(wordVectorModel.analogy(&quot;日本&quot;, &quot;自民党&quot;, &quot;共和党&quot;))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果如下:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[美国=0.71801066, 德米雷尔=0.6803682, 美国国会=0.65392816, 布什=0.6503047, 华尔街日报=0.62903535, 国务卿=0.6280117, 舆论界=0.6277531, 白宫=0.6175594, 驳斥=0.6155998, 最惠国待遇=0.6062231]&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;41&quot;&gt;
&lt;p&gt;&lt;strong&gt;短文本相似度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们将短文本中的所有词向量求平均，就能将这段短文本表达为一个稠密向量。于是我们就可以衡量任意两端短文本之间鹅相似度了。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#  文档向量
docVectorModel = DocVectorModel(wordVectorModel)
documents = [&quot;山东苹果丰收&quot;,
             &quot;农民在江苏种水稻&quot;,
             &quot;奥运会女排夺冠&quot;,
             &quot;世界锦标赛胜出&quot;,
             &quot;中国足球失败&quot;, ]
print(docVectorModel.similarity(&quot;山东苹果丰收&quot;, &quot;农民在江苏种水稻&quot;))
print(docVectorModel.similarity(&quot;山东苹果丰收&quot;, &quot;世界锦标赛胜出&quot;))
print(docVectorModel.similarity(documents[0], documents[1]))
print(docVectorModel.similarity(documents[0], documents[4]))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果如下:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;0.6743720769882202
0.018603254109621048
0.6743720769882202
-0.11777809262275696&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;类似的，可以通过调用 nearest 接口查询与给定单词最相似的文档&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;def print_nearest_document(document, documents, model):
    print_header(document)
    for entry in model.nearest(document):
        print(&quot;%50s\t\t%f&quot; % (documents[entry.getKey()], entry.getValue()))


def print_header(query):
    print(
        &quot;\n%50s          Cosine\n------------------------------------------------------------------------&quot; % (query))


for i, d in enumerate(documents):
    docVectorModel.addDocument(i, documents[i])

print_nearest_document(&quot;体育&quot;, documents, docVectorModel)
print_nearest_document(&quot;农业&quot;, documents, docVectorModel)
print_nearest_document(&quot;我要看比赛&quot;, documents, docVectorModel)
print_nearest_document(&quot;要不做饭吧&quot;, documents, docVectorModel)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果如下:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;                                               体育          Cosine
------------------------------------------------------------------------
                                           世界锦标赛胜出       0.256444
                                           奥运会女排夺冠       0.206812
                                            中国足球失败       0.165934
                                            山东苹果丰收       -0.037693
                                          农民在江苏种水稻       -0.047260

                                                农业          Cosine
------------------------------------------------------------------------
                                          农民在江苏种水稻       0.393115
                                            山东苹果丰收       0.259620
                                            中国足球失败       -0.008700
                                           世界锦标赛胜出       -0.063113
                                           奥运会女排夺冠       -0.137968

                                             我要看比赛          Cosine
------------------------------------------------------------------------
                                           奥运会女排夺冠       0.531833
                                           世界锦标赛胜出       0.357246
                                            中国足球失败       0.268507
                                            山东苹果丰收       0.000207
                                          农民在江苏种水稻       -0.022467

                                             要不做饭吧          Cosine
------------------------------------------------------------------------
                                          农民在江苏种水稻       0.232754
                                            山东苹果丰收       0.199197
                                           奥运会女排夺冠       -0.166378
                                           世界锦标赛胜出       -0.179484
                                            中国足球失败       -0.229308&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;基于神经网络的高性能依存句法分析器&quot;&gt;13.4 基于神经网络的高性能依存句法分析器&lt;/h3&gt;
&lt;ol readability=&quot;10.5&quot;&gt;&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;strong&gt;Arc-Standard转移系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不同之前介绍的 Arc-Eager，该依存句法器基于 Arc-Standard 转移系统，具体动作如下:&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;Shift&lt;/td&gt;
&lt;td&gt;队列 β 非空&lt;/td&gt;
&lt;td&gt;将队首单词 i 压栈&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;LeftArc&lt;/td&gt;
&lt;td&gt;栈顶第二个单词&lt;/td&gt;
&lt;td&gt;将栈顶第二个单词 i 的支配词设为栈顶单词 j，即 i 作为 j 的子节点&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;RightArc&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;将栈顶单词 j 的支配词设为栈顶第二个单词 i，即 j作为 i 的子节点&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;两个转移系统的逻辑不同，Arc-Eager 自顶而下地构建，而 Arc-Standard 要求右子树自底而上地构建。虽然两者的复杂度都是 O(n)，然而可能由于 Arc-Standard 的简洁性(转移动作更少)，它更受欢迎。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;特征提取&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽然神经网络理论上可以自动提取特征，然而这篇论文作为开山之作，依然未能脱离特征模板。所有的特征分为三大类，即:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;单词特征。&lt;/li&gt;
&lt;li&gt;词性特征。&lt;/li&gt;
&lt;li&gt;已经确定的子树中的依存标签特征。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;接着，句法分析器对当前的状态提取上述三大类特征，分别记作 w、t 和 l。不同于传统方法，此处为每个特征分配一个向量，于是得到三个稠密向量 Xw、Xt 和 Xl。接着，将这三个向量拼接起来输人到含有一个隐藏层的神经网络，并且使用立方函数激活，亦即得到隐藏层的特征向量:&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ h=\left(W_{1}\left(x^{w} \oplus x^{t} \oplus x^{l}\right)\right)^{3} \]&lt;/span&gt;&lt;br/&gt;接着，对于 k 种标签而言，Arc-Standard 一共存在 2k +1 种可能的转移动作。此时只需将特征向量 h 输人到多元逻辑斯谛回归分类器(可以看作神经网络中的输出层)中即可得到转移动作的概率分布:&lt;br/&gt;&lt;span class=&quot;math display&quot;&gt;\[ p=softmax\left(W_{2} h\right) \]&lt;/span&gt;&lt;br/&gt;最后选取 p 中最大概率所对应的转移动作并执行即可。训练时，采用 softmax 交叉熵损失函数并且以随机梯度下降法优化。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;strong&gt;实现代码&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from pyhanlp import *

CoNLLSentence = JClass('com.hankcs.hanlp.corpus.dependency.CoNll.CoNLLSentence')
CoNLLWord = JClass('com.hankcs.hanlp.corpus.dependency.CoNll.CoNLLWord')
IDependencyParser = JClass('com.hankcs.hanlp.dependency.IDependencyParser')
NeuralNetworkDependencyParser = JClass('com.hankcs.hanlp.dependency.nnparser.NeuralNetworkDependencyParser')


parser = NeuralNetworkDependencyParser()
sentence = parser.parse(&quot;徐先生还具体帮助他确定了把画雄鹰、松鼠和麻雀作为主攻目标。&quot;)
print(sentence)
for word in sentence.iterator():  # 通过dir()可以查看sentence的方法
    print(&quot;%s --(%s)--&amp;gt; %s&quot; % (word.LEMMA, word.DEPREL, word.HEAD.LEMMA))
print()

# 也可以直接拿到数组，任意顺序或逆序遍历
word_array = sentence.getWordArray()
for word in word_array:
    print(&quot;%s --(%s)--&amp;gt; %s&quot; % (word.LEMMA, word.DEPREL, word.HEAD.LEMMA))
print()

# 还可以直接遍历子树，从某棵子树的某个节点一路遍历到虚根
CoNLLWord = JClass(&quot;com.hankcs.hanlp.corpus.dependency.CoNll.CoNLLWord&quot;)
head = word_array[12]
while head.HEAD:
    head = head.HEAD
    if (head == CoNLLWord.ROOT):
        print(head.LEMMA)
    else:
        print(&quot;%s --(%s)--&amp;gt; &quot; % (head.LEMMA, head.DEPREL))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;依存关系详细见 Chinese Dependency Treebank 1.0 的定义。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;结语&quot;&gt;13.5 结语&lt;/h3&gt;
&lt;ol readability=&quot;8.0878569187324&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;自然语言处理是一门日新月异的学科，在深度学习的时代更是如此。在学术界，即便是当前最先进的研究，在仅仅两个月后很快就会被突破。本系列文章所提供的知识只不过是那些人门级的基础知识而已。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.7777777777778&quot;&gt;
&lt;p&gt;神经网络中两个常用的特征提取器: 用于时序数据的递归神经网络 &lt;strong&gt;RNN&lt;/strong&gt; 以及用于空间数据的卷积神经网络 &lt;strong&gt;CNN&lt;/strong&gt;。其中，RNN 在自然语言处理领域应用得最为广泛。RNN 可以处理变长的输入，这正好适用于文本。特别是 RNN 家族中的 &lt;strong&gt;LSTM&lt;/strong&gt; 网络，可以记忆大约 200 左右的单词，为建模句子中单词之间的长距离依存创造了条件。然而，RNN 的缺陷在于难以并行化。如果需要捕捉文本中的 n 元语法的话，CNN 反而更胜一筹，并且在并行化方面具备天然优势。考虑到文档一般较长， 许多文档分类模型都使用 CNN 来构建。而句子相对较短，所以在句子颗粒度上进行的基础 NLP 任务(中文分词、词性标注、命名实体识别和句法分析等)经常采用 RNN 来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6.2828111769687&quot;&gt;
&lt;p&gt;在词嵌入的预训练方面，word2vec 早已是明日黄花。Facebook 通过将词语内部的构词信息引人 Skip-Gram 模型，得到的 &lt;strong&gt;fastText&lt;/strong&gt; 可以为任意词语构造词向量，而不要求该词语一定得出现在语料库中。但是，无论是 word2vec 还是 fastText，都无法解决一词多义的问题。因为多义词的消歧必须根据给定句子的上下文才能进行，这催生了一系列能够感知上下文的词语表示方法。&lt;/p&gt;
&lt;p&gt;其中，华盛顿大学提出了 &lt;strong&gt;ELMO&lt;/strong&gt;，即一个在大规模纯文本上训练的双向 LSTM 语言模型。ELMo 通过读人上文来预测当前单词的方式为词嵌人引入了上下文信息。Zalando Research 的研究人员则将这一方法应用到了字符级别，得到了上下文字符串嵌入，其标注器取得了目前最先进的准确率。而 Google 的 &lt;strong&gt;BERT&lt;/strong&gt; 模型则通过一种高效的双向Transformer网络同时对上文和下文建模，在许多NLP任务上取得了惊人的成绩。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.751724137931&quot;&gt;
&lt;p&gt;另一些以前认为很难的 NLP 任务，比如自动问答和文档摘要等，在深度学习时代反而显得非常简单。许多 QA 任务归结为衡量问题和备选答案之间的文本相似度，这恰好是具备注意力机制的神经网络所擅长的。而文档摘要涉及的文本生成技术，又恰好是 RNN 语言模型所擅长的。在机器翻译领域，Google 早已利用基于神经网络的机器翻译技术淘汰了基于短语的机器翻译技术。目前，学术界的流行趋势是利用 &lt;strong&gt;Transformer 和注意力机制&lt;/strong&gt;提取特征。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;总之，自然语言处理的未来图景宏伟而广阔。自然语言处理入门系列文章就作为这条漫漫长路上的一块垫脚石，希望给予读者一些必备的人门概念。至于接下来的修行，前路漫漫，与君共勉。&lt;/p&gt;
&lt;h3 id=&quot;github&quot;&gt;13.6 GitHub&lt;/h3&gt;
&lt;p&gt;HanLP何晗--《自然语言处理入门》笔记：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/NLP-LOVE/Introduction-NLP&quot; class=&quot;uri&quot;&gt;https://github.com/NLP-LOVE/Introduction-NLP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/kkweishe/images1/raw/master/ML/wechat/QRcode.gif&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 19 Feb 2020 14:49:00 +0000</pubDate>
<dc:creator>mantch</dc:creator>
<og:description>深度学习(Deep Leaming, DL )属于表示学习( Representation Learning )的范畴，指的是利用具有一定“深度”的模型来自动学习事物的向量表示(vectorial r</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/mantch/p/12333696.html</dc:identifier>
</item>
<item>
<title>MongoDB疑难解析：为什么升级之后负载升高了？ - MongoDB中文社区</title>
<link>http://www.cnblogs.com/mongoing/p/12333657.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mongoing/p/12333657.html</guid>
<description>&lt;p&gt;本文是“我和MongoDB的故事”征文比赛的二等奖得主李鹏冲的文章。下面我们一起来欣赏下。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;近期线上一个三分片集群从 3.2 版本升级到 4.0 版本以后，集群节点的 CPU 的负载升高了很多（10% -&amp;gt; 40%）, 除了版本的升级，项目逻辑和操作量均无变化。关闭 Balancer 以后 CPU 负载回归正常，稳定在 10% 以下。为此，只能经常关闭当前正在写入表的 balancer , 每周二打开 balancer 开启均衡，在此期间节点的 CPU 负载持续稳定在 40% 。集群有 3 个分片，除了 MongoDB 版本的变化，项目本身的逻辑无任何变化。那么升级以后 CPU 负载较大变化的背后是什么原因呢？&lt;/p&gt;
&lt;h2 id=&quot;监控与日志&quot;&gt;监控与日志&lt;/h2&gt;
&lt;p&gt;首先可以明确，升级以后 CPU 负载升高和 balancer 迁移数据有关。观察升级以后 4.0 版本，周二打开 balancer 期间的负载情况和 mongostat 结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1747798/202002/1747798-20200219223521731-1101797830.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以发现，CPU 负载升高和 delete 数据的情况很吻合。而迁移数据数据之后源节点需要删除迁移走的数据，所以肯定有大量的 delete 。迁移数据之后的删除也会有如下的日志：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;53094:2019-10-08T10:09:24.035199+08:00 I SHARDING [Collection Range Deleter] No documents remain to delete in dt2log.tbl_log_item_20191001 range [{ _id: -3074457345618258602 }, { _ id: -3033667061349287050 })
53095:2019-10-08T10:09:24.035222+08:00 I SHARDING [Collection Range Deleter] Waiting for m ajority replication of local deletions in dt2log.tbl_log_item_20191001 range [{ _id: -3074 457345618258602 }, { _id: -3033667061349287050 })
53096:2019-10-08T10:09:24.035274+08:00 I SHARDING [Collection Range Deleter] Finished dele ting documents in dt2log.tbl_log_item_20191001 range [{ _id: -3074457345618258602 }, { _id
-3033667061349287050 })&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;所以从监控和日志判断， CPU 负载较高主要是因为迁移数据之后的删除导致。而且集群的表都是 {_id : hashed} 分片类型的表，数据量较大，但是每条数据较小，平均每个 chunk 10w+ 的文档数，删除数据速度约 200-300/s ，所以移动一个 chunk 导致的删除就会持续 10 分钟左右。&lt;/p&gt;
&lt;p&gt;统计最近2个周期，开启 balancer 以后 moveChunk 的情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1747798/202002/1747798-20200219223708504-725312992.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上表可知此场景下， {_id : hashed} 分片类型集合数据基本已经均匀了，不必重启开启 balancer 。因为 每个chunk 文档数较多，删除会比较耗资源。&lt;/p&gt;
&lt;p&gt;关闭表的 balancer 可以解决升级之后负载升高的问题，但是竟然是为何升级到 4.0 之后 CPU 负载较高, 而 3.2 版本稳定在低位呢？这只有可能是一个原因：4.0 版本更频繁的发生 moveChunk, 持续的删除数据导致 CPU 负载一直较高；3.2 版本较少的发生 moveChunk，不用删除数据所以负载很低。&lt;/p&gt;
&lt;p&gt;所以本次问题的根本是: 4.0 版本和 3.2 版本的 balancer 与 moveChunk 的逻辑是否有差别？同样的操作，为什么 4.0版本的集群会有较多的 moveChunk ？&lt;/p&gt;
&lt;h2 id=&quot;撸代码splitchunkbalancer与movechunk&quot;&gt;撸代码：splitChunk、balancer与moveChunk&lt;/h2&gt;
&lt;p&gt;当通过 mongos 发生插入和更新删除操作时，mongos 会估算对应 chunks 的数据量的大小，满足条件会触发splitChunk 的操作，splitChunk 之后可能会导致集群的 chunk 分布不均匀。balancer 检测数据的分布情况，当数据分配不均匀时，发起 moveChunk 任务，将数据从 chunks 较多的分片迁移到 chunks 较少的分片，迁移之后源节点会异步删除迁移走的 chunk 数据。&lt;/p&gt;
&lt;p&gt;3.2 版本和 4.0 版本，此部分逻辑最大的区别就是, 3.2 版本 balancer 在 mongos，4.0 版本在 config（3.4版本开始)，moveChunk 过程和删除数据的逻辑基本没有差异。&lt;/p&gt;
&lt;h3 id=&quot;splitchunk&quot;&gt;splitChunk&lt;/h3&gt;
&lt;p&gt;split chunks 一般是在插入、更新、删除数据时，由 mongos 发出到分片的 splitVector 命令，此时分片才会判断是否需要 split 。但是 mongos 并不知道每个 chunk 真正的数据量，是利用一个简单的估算算法判断的。&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;启动时，mongos 默认每个 chunk 的原始大小为 0-1/5 maxChunkSize 范围取个随机值 ；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;之后 chunk 内数据，每次 update/insert 操作时，chunkSize = chunkSize + docSize；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;当 chunkSize &amp;gt; maxChunkSize/5 时，触发一次可能 split chunk 的操作； 到 分片mongod 执行 splitVector命令 ，splitVector 命令返回 chunk 的分割点，如果返回为空那么不需要 split ，否则 继续 splitChunk。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;也就是说，splitChunk 操作有滞后性，即使数据分布均衡，也有可能 splitChunk 执行时间的差异导致 chunks 分布存在中间的不均匀状态，导致大量的 moveChunk 。&lt;/p&gt;
&lt;h3 id=&quot;balancer&quot;&gt;balancer&lt;/h3&gt;
&lt;p&gt;无论 3.2 还是 4.0 的 balancer ，默认的检测周期为 10s , 如果发生了 moveChunk ，检测周期为 1s 。balancer 基本过程也大致相同：&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;config.shards 读取分片信息 ;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;config.collections 读取所有集合信息，并且随机排序保存到一个数组中；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;对每个集合从 config.chunks 读取 chunks 的信息；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;含有最多 chunks 数量 （maxChunksNum）的分片为源分片，含有最少 chunks 数量(minChunksNum)的分片为目的分片; 如果 maxChunksNum – minChunksNum 大于迁移的阈值 （threshold）， 那么就是不均衡状态，需要迁移，源分片的 chunks 第一个 chunk 为待迁移的 chunk ，构造一个迁移任务（源分片，目的分片，chunk）。&lt;/p&gt;
&lt;p&gt;每次 balancer 会检测所有集合的情况，每个集合最多一个迁移任务 ; 而且构造迁移任务时，如果某个集合含有最多数量的分片或者最少数量 chunks 的分片，已经属于某一个迁移任务，那么此集合本轮 balancer 不会发生迁移。最后，本次检测出的迁移任务完成以后才开始下次 balancer 过程。&lt;/p&gt;
&lt;p&gt;balancer 过程中，会对集合做一次随机排序，当有多个集合的数据需要均衡时，迁移时也是随机的，并不是迁移完一个集合开始下一个集合。&lt;/p&gt;
&lt;p&gt;重点关注上述的迁移阈值，就是这个迁移的阈值 threshold 在 3.2 和 4.0 版本有所不同。&lt;/p&gt;
&lt;p&gt;3.2 版本, chunks 数量小于 20 的时候为 2， 小于 80 的时候为 4， 大于 80 的时候为 8 。也就是说假设两分片集群，某个表有 100 个chunk , 每个分片分别有 47 和 53 个chunk 。那么此时 balance 认为是均衡的，不会发生迁移。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int threshold = 8;
if (balancedLastTime || distribution.totalChunks() &amp;lt; 20) threshold = 2;
else if (distribution.totalChunks() &amp;lt; 80) threshold = 4;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4.0 版本，chunks 数量差距大于 2 的时候就会发生迁移。同样的上述例子中，每个分片分别有 47 和 53 个 chunk时， balance 认为是不均衡的，会发生迁移。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;const size_t kDefaultImbalanceThreshold = 2; const size_t kAggressiveImbalanceThreshold = 1;
const size_t imbalanceThreshold = (shouldAggressivelyBalance || distribution.totalChunks()
&amp;lt; 20)
? kAggressiveImbalanceThreshold: kDefaultImbalanceThreshold;
// 这里虽然有个 1 ，但是实际差距为 1 的时候不会发生迁移，因为判断迁移时，还有一个指标：平均每个分片的最大 ch
unks 数量，只有当 chunks 数量大于这个值的时候才会发生迁移。
const size_t idealNumberOfChunksPerShardForTag = (totalNumberOfChunksWithTag / totalNumberOfShardsWithTag) + (totalNumberOfChunksWithTag % totalNumberOfShardsWithTag ? 1 : 0);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;关于此阈值，官方文档也有介绍:&lt;/p&gt;
&lt;p&gt;To minimize the impact of balancing on the cluster, the balancer only begins balancing after the distribution of chunks for a sharded collection has reached certain thresholds. The thresholds apply to the difference in number of chunks between the shard with the most chunks for the collection and the shard with the fewest chunks for that collection. The balancer has the following thresholds:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1747798/202002/1747798-20200219223937280-443526132.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The balancer stops running on the target collection when the difference between the number of chunks on any two shards for that collection is less than two, or a chunk migration fails.&lt;/p&gt;
&lt;p&gt;但是从代码上，从3.4 版本开始，此阈值的逻辑就已经变化了，但是文档并没有更新。&lt;/p&gt;
&lt;h3 id=&quot;movechunk&quot;&gt;moveChunk&lt;/h3&gt;
&lt;p&gt;moveChunk 是一个比较复杂的动作, 大致过程如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1747798/202002/1747798-20200219224002374-1478086197.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;目的分片，首先要删除要移动的 chunk 的数据。所以会有一个删除任务。&lt;/p&gt;
&lt;p&gt;可以在 config.settings 设置 _secondaryThrottle 和 waitForDelete 设置 moveChunk 过程中 插入数据和删除数据的 write concern&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;_secondaryThrottle: true 表示 balancer 插入数据时，至少等待一个 secondary 节点回复；false 表示不等待写到 secondary 节点； 也可以直接设置为 write concern ，则迁移时使用这个 write concern . 3.2 版本默认 true, 3.4 开始版本默认 false；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;waitForDelete: 迁移一个 chunk 数据以后，是否同步等待数据删除完毕；默认为 false , 由一个单独的线程异步删除孤儿数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;设置方式如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;use config db.settings.update(
{ &quot;_id&quot; : &quot;balancer&quot; },
{ $set : { &quot;_secondaryThrottle&quot; : { &quot;w&quot;: &quot;majority&quot; } ,&quot;_waitForDelete&quot; : true } },
{ upsert : true }
)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3.2 版本 _secondaryThrottle 默认 true, 3.4 开始版本默认 false，所以 3 .2 版本和4.0 版本 moveChunk 迁移数据时，4.0版本会更快完成，迁移中 目的分片的每秒 insert 量级也会更多，对 CPU 负载也会有些许的影响。&lt;/p&gt;
&lt;p&gt;另外，3.4.18/3.6.10/4.0.5 及之后版本，还有以下参数 (Parameter) 调整插入数据的速度：&lt;/p&gt;
&lt;p&gt;设置方式如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;db.adminCommand({setParameter:1,migrateCloneInsertionBatchDelayMS:0})
db.adminCommand({setParameter:1,migrateCloneInsertionBatchSize:0})&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;异步删除数据线程&quot;&gt;异步删除数据线程&lt;/h3&gt;
&lt;p&gt;3.2 和 4.0 版本的异步删除线程具体实现略有不同，但是，根本过程还是一致的，用一个队列保存需要删除的 range, 循环的取队列的数据删除数据。所以异步删除数据线程是按照 chunk 进入队列的顺序，逐个删除。总入口：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;3.2 版本 db/range_deleter.cpp 线程入口 RangeDeleter::doWork()
4.0 版本 db/s/metadata_manager.cpp scheduleCleanup 时会有一个唯一的线程执行清理任务&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4.0 版本在删除数据时，按批删除数据，每次删除数量计算方式如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;maxToDelete = rangeDeleterBatchSize.load();
if (maxToDelete &amp;lt;= 0) {
maxToDelete = std::max(int(internalQueryExecYieldIterations.load()), 1); // 128
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;有较多的参数可以灵活的控制删除速度，默认情况下，900s 以后开始清理 chunks 的数据，每次清理 128 个文档，每隔 20ms 删除一次。具体通过以下参数设置：&lt;/p&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;rangeDeleterBatchDelayMS: 删除每个 chunk 数据的时候分批次删除，每批之间间隔的时间，单位 ms，默认 20ms；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;internalQueryExecYieldIterations: 默认为 128；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;rangeDeleterBatchSize：每次删除数据的数量，默认即为0；为0时 ，则每次删除的数量为max(internalQueryExecYieldIterations，1)，&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;orphanCleanupDelaySecs: moveChunk 以后延迟删除数据的时间，单位 s ，默认 900 s&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;ul readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;moveChunk 可能对系统的负载产生影响，主要是删除数据阶段的影响，一般迁移中的插入数据影响较小；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;3.4 及之后的版本存在 balancer 迁移阈值较低的问题，可能会更频繁的产生 moveChunk；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;文档数据多而小的表，而且是 hashed 分片，本应预分配一定的 chunk 以后永久关闭表的 balancer。开启balancer 时，3.2 版本因为均衡阈值较大，较少发生 moveChunk 迁移数据，所以负载较低； 4.0 版本均衡阈值很小，更容易发生迁移，频繁的迁移之后删除数据导致负载较高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;作者：李鹏冲&lt;/p&gt;
&lt;p&gt;网易游戏高级运维工程师，MongoDB和MySQL数据库爱好者，目前专注于SAAS平台的开发与运维工作。&lt;/p&gt;
&lt;p&gt;感谢MongoDB官方，锦木信息和Tapdata对活动的大力支持！&lt;/p&gt;
</description>
<pubDate>Wed, 19 Feb 2020 14:46:00 +0000</pubDate>
<dc:creator>MongoDB中文社区</dc:creator>
<og:description>本文是“我和MongoDB的故事”征文比赛的二等奖得主李鹏冲的文章。下面我们一起来欣赏下。 问题 近期线上一个三分片集群从 3.2 版本升级到 4.0 版本以后，集群节点的 CPU 的负载升高了很多（</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/mongoing/p/12333657.html</dc:identifier>
</item>
<item>
<title>将Spring实战第5版中Spring HATEOAS部分代码迁移到Spring HATEOAS 1.0 - 陕西颜值扛把子</title>
<link>http://www.cnblogs.com/puzhiwei/p/12333471.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/puzhiwei/p/12333471.html</guid>
<description>&lt;p&gt;       最近在阅读Spring实战第五版中文版，书中第6章关于Spring HATEOAS部分代码使用的是Spring HATEOAS 0.25的版本，而最新的Spring HATEOAS 1.0对旧版的API做了升级，导致在使用新版Spring Boot（截至文章发布日最新的Spring Boot版本为2.2.4）加载的Spring HATEOAS 1.0.3无法正常运行书中代码，所以我决定在此对书中的代码进行迁移升级。&lt;/p&gt;
&lt;p&gt;在线阅读书中这一部分：&lt;a href=&quot;https://potoyang.gitbook.io/spring-in-action-v5/di-6-zhang-chuang-jian-rest-fu-wu/6.2-qi-yong-chao-mei-ti&quot; target=&quot;_blank&quot;&gt;https://potoyang.gitbook.io/spring-in-action-v5/di-6-zhang-chuang-jian-rest-fu-wu/6.2-qi-yong-chao-mei-ti&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;span&gt;封装结构的最大变化是通过引入超媒体类型注册API来实现的，以支持Spring HATEOAS中的其他媒体类型。&lt;/span&gt;&lt;span&gt;这导致客户端API和服务器API（分别命名的包）以及包中的媒体类型实现的明确分离 &lt;/span&gt;&lt;/span&gt;&lt;code&gt;mediatype&lt;/code&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;最大的变化就是将原来的资源表示为模型，具体变化如下。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;&lt;code&gt;ResourceSupport&lt;/code&gt;&lt;span&gt;/ &lt;/span&gt;&lt;code&gt;Resource&lt;/code&gt;&lt;span&gt;/ &lt;/span&gt;&lt;code&gt;Resources&lt;/code&gt;&lt;span&gt;/ &lt;/span&gt;&lt;code&gt;PagedResources&lt;/code&gt;&lt;span&gt;&lt;span&gt;组类从来没有真正感受到适当命名。&lt;/span&gt;&lt;span&gt;毕竟，这些类型实际上并不表示资源，而是表示模型，可以通过超媒体信息和提供的内容来丰富它们。&lt;/span&gt;&lt;span&gt;这是新名称映射到旧名称的方式：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;ResourceSupport&lt;/code&gt;&lt;span&gt; 就是现在 &lt;/span&gt;&lt;code&gt;RepresentationModel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;Resource&lt;/code&gt;&lt;span&gt; 就是现在 &lt;/span&gt;&lt;code&gt;EntityModel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;Resources&lt;/code&gt;&lt;span&gt; 就是现在 &lt;/span&gt;&lt;code&gt;CollectionModel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;PagedResources&lt;/code&gt;&lt;span&gt; 就是现在 &lt;/span&gt;&lt;code&gt;PagedModel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;因此，&lt;/span&gt;&lt;code&gt;ResourceAssembler&lt;/code&gt;&lt;span&gt;已被重命名为&lt;/span&gt;&lt;code&gt;RepresentationModelAssembler&lt;/code&gt;&lt;span&gt;和及其方法&lt;/span&gt;&lt;code&gt;toResource(…)&lt;/code&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;并&lt;/span&gt;&lt;span&gt;分别&lt;/span&gt;&lt;/span&gt;&lt;code&gt;toResources(…)&lt;/code&gt;&lt;span&gt;被重命名为&lt;/span&gt;&lt;code&gt;toModel(…)&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code&gt;toCollectionModel(…)&lt;/code&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;名称更改也反映在中包含的类中&lt;/span&gt;&lt;/span&gt;&lt;code&gt;TypeReferences&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot; readability=&quot;21.166624300966&quot;&gt;
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;code&gt;RepresentationModel.getLinks()&lt;/code&gt;&lt;span&gt;现在公开了一个&lt;/span&gt;&lt;code&gt;Links&lt;/code&gt;&lt;span&gt;实例（通过&lt;/span&gt;&lt;code&gt;List&amp;lt;Link&amp;gt;&lt;/code&gt;&lt;span&gt;&lt;span&gt;），该&lt;/span&gt;&lt;span&gt;实例&lt;/span&gt;&lt;span&gt;公开了其他API，以&lt;/span&gt;&lt;/span&gt;&lt;code&gt;Links&lt;/code&gt;&lt;span&gt;&lt;span&gt;使用各种策略&lt;/span&gt;&lt;span&gt;来连接和合并不同的&lt;/span&gt;&lt;span&gt;实例。&lt;/span&gt;&lt;span&gt;同样，它已经变成了自绑定的泛型类型，以允许向实例添加链接的方法返回实例本身。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;该&lt;/span&gt;&lt;code&gt;LinkDiscoverer&lt;/code&gt;&lt;span&gt;API已移动到&lt;/span&gt;&lt;code&gt;client&lt;/code&gt;&lt;span&gt;包。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;&lt;code&gt;LinkBuilder&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code&gt;EntityLinks&lt;/code&gt;&lt;span&gt;API已经被移到了&lt;/span&gt;&lt;code&gt;server&lt;/code&gt;&lt;span&gt;包。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;ControllerLinkBuilder&lt;/code&gt;&lt;span&gt;已移入&lt;/span&gt;&lt;code&gt;server.mvc&lt;/code&gt;&lt;span&gt;，不推荐使用替换&lt;/span&gt;&lt;code&gt;WebMvcLinkBuilder&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;RelProvider&lt;/code&gt;&lt;span&gt;已重命名为&lt;/span&gt;&lt;code&gt;LinkRelationProvider&lt;/code&gt;&lt;span&gt;并返回&lt;/span&gt;&lt;code&gt;LinkRelation&lt;/code&gt;&lt;span&gt;实例，而不是&lt;/span&gt;&lt;code&gt;String&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;VndError&lt;/code&gt;&lt;span&gt;已移至&lt;/span&gt;&lt;code&gt;mediatype.vnderror&lt;/code&gt;&lt;span&gt;套件。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;另外注意 ResourceProcessor 接口被 RepresentationModelProcessor 取代&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;更多变化请参考Spring HATEOAS文档：&lt;a href=&quot;https://spring.io/projects/spring-hateoas&quot; target=&quot;_blank&quot;&gt;https://spring.io/projects/spring-hateoas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;书中&lt;/span&gt;程序清单6.4　为资源添加超链接&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
    @GetMapping(&quot;/recent&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; CollectionModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt;&lt;span&gt; recentTacos() {
        PageRequest page &lt;/span&gt;=&lt;span&gt; PageRequest.of(
                &lt;/span&gt;0, 12, Sort.by(&quot;createdAt&quot;&lt;span&gt;).descending());

        List&lt;/span&gt;&amp;lt;Taco&amp;gt; tacos =&lt;span&gt; tacoRepo.findAll(page).getContent();
        CollectionModel&lt;/span&gt;&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt; recentResources =&lt;span&gt; CollectionModel.wrap(tacos);

        recentResources.add(
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Link(&quot;http://localhost:8080/design/recent&quot;, &quot;recents&quot;&lt;span&gt;));
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; recentResources;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;消除URL硬编码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
    @GetMapping(&quot;/recent&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; CollectionModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt;&lt;span&gt; recentTacos() {
        PageRequest page &lt;/span&gt;=&lt;span&gt; PageRequest.of(
                &lt;/span&gt;0, 12, Sort.by(&quot;createdAt&quot;&lt;span&gt;).descending());

        List&lt;/span&gt;&amp;lt;Taco&amp;gt; tacos =&lt;span&gt; tacoRepo.findAll(page).getContent();
        CollectionModel&lt;/span&gt;&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt; recentResources =&lt;span&gt; CollectionModel.wrap(tacos);

        recentResources.add(
                linkTo(methodOn(DesignTacoController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;).recentTacos()).withRel(&quot;recents&quot;&lt;span&gt;));
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; recentResources;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序清单6.5　能够携带领域数据和超链接列表taco资源&lt;/p&gt;
&lt;div readability=&quot;12.333743842365&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; TacoResource &lt;span&gt;extends&lt;/span&gt; RepresentationModel&amp;lt;TacoResource&amp;gt;&lt;span&gt; {

    @Getter
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;

    @Getter
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date createdAt;

    @Getter
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;Ingredient&amp;gt;&lt;span&gt; ingredients;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TacoResource(Taco taco) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; taco.getName();
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createdAt =&lt;span&gt; taco.getCreatedAt();
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.ingredients =&lt;span&gt; taco.getIngredients();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序清单6.6　装配taco资源的资源装配器&lt;/p&gt;
&lt;div readability=&quot;25.138582677165&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; TacoResourceAssembler &lt;span&gt;extends&lt;/span&gt; RepresentationModelAssemblerSupport&amp;lt;Taco, TacoResource&amp;gt;&lt;span&gt; {
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * Creates a new {&lt;/span&gt;&lt;span&gt;@link&lt;/span&gt;&lt;span&gt; RepresentationModelAssemblerSupport} using the given controller class and resource type.
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; controllerClass DesignTacoController {&lt;/span&gt;&lt;span&gt;@literal&lt;/span&gt;&lt;span&gt; DesignTacoController}.
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; resourceType    TacoResource {&lt;/span&gt;&lt;span&gt;@literal&lt;/span&gt;&lt;span&gt; TacoResource}.
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; TacoResourceAssembler(Class&amp;lt;?&amp;gt; controllerClass, Class&amp;lt;TacoResource&amp;gt;&lt;span&gt; resourceType) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;(controllerClass, resourceType);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; TacoResource instantiateModel(Taco taco) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; TacoResource(taco);
    }


    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TacoResource toModel(Taco entity) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createModelWithId(entity.getId(), entity);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后对recentTacos()的调整&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
@GetMapping(&quot;/recentNew&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; CollectionModel&amp;lt;TacoResource&amp;gt;&lt;span&gt; recentTacos() {
        PageRequest page &lt;/span&gt;=&lt;span&gt; PageRequest.of(
                &lt;/span&gt;0, 12, Sort.by(&quot;createdAt&quot;&lt;span&gt;).descending());
        List&lt;/span&gt;&amp;lt;Taco&amp;gt; tacos =&lt;span&gt; tacoRepo.findAll(page).getContent();

        CollectionModel&lt;/span&gt;&amp;lt;TacoResource&amp;gt; tacoResources =
                &lt;span&gt;new&lt;/span&gt; TacoResourceAssembler(DesignTacoController.&lt;span&gt;class&lt;/span&gt;, TacoResource.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;).toCollectionModel(tacos);

        tacoResources.add(linkTo(methodOn(DesignTacoController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
                .recentTacos())
                        .withRel(&lt;/span&gt;&quot;recents&quot;&lt;span&gt;));
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; tacoResources;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;创建 IngredientResource 对象&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Data
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; IngredientResource &lt;span&gt;extends&lt;/span&gt; RepresentationModel&amp;lt;IngredientResource&amp;gt;&lt;span&gt; {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IngredientResource(Ingredient ingredient) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; ingredient.getName();
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.type =&lt;span&gt; ingredient.getType();
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; String name;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Ingredient.Type type;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IngredientResourceAssembler 对象&lt;/p&gt;
&lt;div readability=&quot;33.82808367396&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; IngredientResourceAssembler &lt;span&gt;extends&lt;/span&gt; RepresentationModelAssemblerSupport&amp;lt;Ingredient, IngredientResource&amp;gt;&lt;span&gt; {
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * Creates a new {&lt;/span&gt;&lt;span&gt;@link&lt;/span&gt;&lt;span&gt; RepresentationModelAssemblerSupport} using the given controller class and resource type.
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; controllerClass IngredientController {&lt;/span&gt;&lt;span&gt;@literal&lt;/span&gt;&lt;span&gt; IngredientController}.
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; resourceType    IngredientResource {&lt;/span&gt;&lt;span&gt;@literal&lt;/span&gt;&lt;span&gt; IngredientResource}.
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; IngredientResourceAssembler(Class&amp;lt;?&amp;gt; controllerClass, Class&amp;lt;IngredientResource&amp;gt;&lt;span&gt; resourceType) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;(controllerClass, resourceType);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; IngredientResource instantiateModel(Ingredient entity) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; IngredientResource(entity);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IngredientResource toModel(Ingredient entity) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createModelWithId(entity.getId(), entity);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对 TacoResource 对象的修改&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; TacoResource &lt;span&gt;extends&lt;/span&gt; RepresentationModel&amp;lt;TacoResource&amp;gt;&lt;span&gt; {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; IngredientResourceAssembler
            ingredientAssembler &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; IngredientResourceAssembler(IngredientController.&lt;span&gt;class&lt;/span&gt;, IngredientResource.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);

    @Getter
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;

    @Getter
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date createdAt;

    @Getter
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; CollectionModel&amp;lt;IngredientResource&amp;gt;&lt;span&gt; ingredients;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TacoResource(Taco taco) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; taco.getName();
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createdAt =&lt;span&gt; taco.getCreatedAt();
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.ingredients =&lt;span&gt; ingredientAssembler.toCollectionModel(taco.getIngredients());

    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 程序清单6.7&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@RepositoryRestController
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RecentTacosController {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; TacoRepository tacoRepo;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; RecentTacosController(TacoRepository tacoRepo) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.tacoRepo =&lt;span&gt; tacoRepo;
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 虽然@GetMapping映射到了“/tacos/recent”路径，但是类级别的@Repository RestController注解会确保这个路径添加
     * Spring Data REST的基础路径作为前缀。按照我们的配置，recentTacos()方法将会处理针对“/api/tacos/recent”的GET请求。
     * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @GetMapping(path&lt;/span&gt;=&quot;/tacos/recent&quot;, produces=&quot;application/hal+json&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ResponseEntity&amp;lt;CollectionModel&amp;lt;TacoResource&amp;gt;&amp;gt;&lt;span&gt; recentTacos() {
        PageRequest page &lt;/span&gt;=&lt;span&gt; PageRequest.of(
                &lt;/span&gt;0, 12, Sort.by(&quot;createdAt&quot;&lt;span&gt;).descending());
        List&lt;/span&gt;&amp;lt;Taco&amp;gt; tacos =&lt;span&gt; tacoRepo.findAll(page).getContent();

        CollectionModel&lt;/span&gt;&amp;lt;TacoResource&amp;gt; tacoResources =
                &lt;span&gt;new&lt;/span&gt; TacoResourceAssembler(DesignTacoController.&lt;span&gt;class&lt;/span&gt;, TacoResource.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;).toCollectionModel(tacos);

        tacoResources.add(
                linkTo(methodOn(RecentTacosController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;).recentTacos())
                        .withRel(&lt;/span&gt;&quot;recents&quot;&lt;span&gt;));
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ResponseEntity&amp;lt;&amp;gt;&lt;span&gt;(tacoResources, HttpStatus.OK);
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;程序清单6.8　为Spring Data REST端点添加自定义的链接&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    @Bean
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; RepresentationModelProcessor&amp;lt;PagedModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt;&amp;gt;&lt;span&gt; tacoProcessor(EntityLinks links) {

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RepresentationModelProcessor&amp;lt;PagedModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt;&amp;gt;&lt;span&gt;() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; PagedModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt; process(PagedModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt;&lt;span&gt; resource) {
                resource.add(
                        links.linkFor(Taco.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
                                .slash(&lt;/span&gt;&quot;recent&quot;&lt;span&gt;)
                                .withRel(&lt;/span&gt;&quot;recents&quot;&lt;span&gt;));
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; resource;
            }
        };
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;如果你觉得写使用资源装配器有点麻烦，那么你还可以采用这种方法。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
    @GetMapping(&quot;/employees&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ResponseEntity&amp;lt;CollectionModel&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt;&amp;gt;&lt;span&gt; findAll() {
        PageRequest page &lt;/span&gt;=&lt;span&gt; PageRequest.of(
                &lt;/span&gt;0, 12, Sort.by(&quot;createdAt&quot;&lt;span&gt;).descending());
        List&lt;/span&gt;&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt; employees = StreamSupport.stream(tacoRepo.findAll(page).spliterator(), &lt;span&gt;false&lt;/span&gt;&lt;span&gt;)
                .map(employee &lt;/span&gt;-&amp;gt; &lt;span&gt;new&lt;/span&gt; EntityModel&amp;lt;&amp;gt;&lt;span&gt;(employee,
                        linkTo(methodOn(DesignTacoController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;).findOne(employee.getId())).withSelfRel(),
                        linkTo(methodOn(DesignTacoController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;).findAll()).withRel(&quot;employees&quot;&lt;span&gt;)))
                .collect(Collectors.toList());

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ResponseEntity.ok(
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; CollectionModel&amp;lt;&amp;gt;&lt;span&gt;(employees,
                        linkTo(methodOn(DesignTacoController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;).findAll()).withSelfRel()));
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
@GetMapping(&quot;/employees/{id}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ResponseEntity&amp;lt;EntityModel&amp;lt;Taco&amp;gt;&amp;gt; findOne(@PathVariable &lt;span&gt;long&lt;/span&gt;&lt;span&gt; id) {

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; tacoRepo.findById(id)
                .map(employee &lt;/span&gt;-&amp;gt; &lt;span&gt;new&lt;/span&gt; EntityModel&amp;lt;&amp;gt;&lt;span&gt;(employee,
                        linkTo(methodOn(DesignTacoController.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;).findOne(employee.getId())).withSelfRel(), &lt;span&gt;//
&lt;/span&gt;                        linkTo(methodOn(DesignTacoController.&lt;span&gt;class&lt;/span&gt;).findAll()).withRel(&quot;employees&quot;))) &lt;span&gt;//
&lt;/span&gt;&lt;span&gt;                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考来源：&lt;a href=&quot;https://github.com/spring-projects/spring-hateoas-examples/tree/master/simplified&quot; target=&quot;_blank&quot;&gt;https://github.com/spring-projects/spring-hateoas-examples/tree/master/simplified&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;END&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 19 Feb 2020 14:31:00 +0000</pubDate>
<dc:creator>陕西颜值扛把子</dc:creator>
<og:description>最近在阅读Spring实战第五版中文版，书中第6章关于Spring HATEOAS部分代码使用的是Spring HATEOAS 0.25的版本，而最新的Spring HATEOAS 1.0对旧版的AP</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/puzhiwei/p/12333471.html</dc:identifier>
</item>
<item>
<title>【WPF学习】第四十五章 可视化对象 - Peter.Luo</title>
<link>http://www.cnblogs.com/Peter-Luo/p/12333089.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Peter-Luo/p/12333089.html</guid>
<description>&lt;p&gt;　　前面几章介绍了处理适量适中的图形内容的最佳方法。通过使用几何图形、图画和路径，可以降低2D图形的开销。即使正在使用复杂的具有分层效果的组合形状和渐变画刷，这种方法也仍然能够正常得很好。&lt;/p&gt;
&lt;p&gt;　　然而，这样设计不适合需要渲染大量图形元素的绘图密集型应用程序。例如绘图程序、演示粒子碰撞的物理模型程序或横向卷轴形式的游戏。这些应用程序面临的不是图形复杂程度的问题，而纯粹是单独的图形元素数量的问题。即使使用量级更轻的Geometry对象代替Path元素，需要的开销也仍会较大地影响应用程序的性能。&lt;/p&gt;
&lt;p&gt;　　WPF针对此类问题的解决方案是，使用低级的可视化层(visual layer)模型。基本思想是将每个图形元素定义为一个Visual对象，Visual对象是极轻易级的要素，比Geometry对象或Path对象需要的开销小。然后可使用单个元素在窗口中渲染所有可视化对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、绘制可视化对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Visual类是抽象类，所以不能创建该类的实例。相反，需要使用继承自Visual类的某个类，包括UIElement类（该类是WPF元素模型的根）、Viewport3DVisual类（通过该类可显示3D内容）以及ContainerVisual类（包含其他可视化对象的基本容器）。但最有用的派生类是DrawingVisual类，该类继承自ContainerVisual，并添加了支持“绘制”希望放置到可视化对象中的图形内容的功能。&lt;/p&gt;
&lt;p&gt;　　为使用DrawingVisual类绘制内容，需要调用DrawingVisual.RederOpen()方法。该方法返回一个可用于定义可视化内容的DrawingContext对象。绘制完毕后，需要调用DrawingContext.Close()方法。下面是绘制图形的完整过程：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
DrawingVisual visual=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();
DrawingContext dc&lt;/span&gt;=&lt;span&gt;visual.RenderOpen();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;（perform drawing here.）&lt;/span&gt;
&lt;span&gt;
dc.Close();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在本质上，DrawingContext类由各种为可视化对象增加了一些图形细节的方法构成。可调用这些方法来绘制各种图形、应用变换以及改变不透明度等。下表列出了DrawingContext类的方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/263728/202002/263728-20200219193028244-906895695.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　下面的示例创建了一个可视化对象，该可视化对象包含没有填充的基本的黑色三角形： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
DrawingVisual visual=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;(DrawingContext dc=&lt;span&gt;visual.RenderOpen())
{
    Pen drawingPen&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt; Pen(Color.Black,&lt;span&gt;3&lt;/span&gt;&lt;span&gt;);
    dc.DrawLine(drawingPen,&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;50&lt;/span&gt;),&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;50&lt;/span&gt;,&lt;span&gt;0&lt;/span&gt;&lt;span&gt;));
    dc.DrawLine(drawingPen,&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;50&lt;/span&gt;,&lt;span&gt;0&lt;/span&gt;),&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;100&lt;/span&gt;,&lt;span&gt;50&lt;/span&gt;&lt;span&gt;));
    dc.DrawLine(drawingPen,&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;50&lt;/span&gt;),&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;100&lt;/span&gt;,&lt;span&gt;50&lt;/span&gt;&lt;span&gt;));
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　当调用DrawingContext方法，没有实际绘制可视化对象——而只是定义了可视化外观。当通过调用Close()方法结束绘制时，完成的图画被存储在可视化对象中，并通过只读的DrawingVisual.Drawing属性提供这些图画。WPF会保存Drawing对象，从而当需要时可以重新绘制窗口。&lt;/p&gt;
&lt;p&gt;　　绘图代码的顺序很重要。后面的绘图操作可在已经存在的图形上绘制内容。PushXxx()方法应用的设置会被应用到后续的绘图操作中。例如，可使用PushOpacity()方法改变不透明级别，该设置会影响所有的后续绘图操作。可使用Pop()方法恢复最佳的PushXxx()方法。如果多次调用PushXxx()方法，可一次使用一系列Pop()方法调用关闭它们。&lt;/p&gt;
&lt;p&gt;　　一旦关闭DrawingContext对象，就不能再修改可视化对象。但可以使用DrawingVisual类的Transform和Opacity属性应用变换或改变整个可视化对象的透明度。如果希望提供全新的内容，可以再次调用RenderOpen()方法并重复绘制过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、在元素中封装可视化对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在可视化层中编写程序时，最重要的一步是定义可视化对象，但为了在屏幕上实际显示可视内容，这还不够。为显示可视化对象，还需要借助于功能完备的WPF元素，WPF元素将可视化对象添加到可视化树中。乍一看，这好像降低了可视化层变成的优点——毕竟，避免使用元素并避免它们的巨大开销不正是使用可视化层的全部目的吗？然而，单个元素具有显示任意数量可视化对象的能力。因此，可以很容易地创建只包含一两个元素，但却驻留了几千个可视化对象的窗口。&lt;/p&gt;
&lt;p&gt;　　为在元素中驻留可视化对象，需要执行一下任务：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　为元素调用AddVisualChild()和AddLogicalChild()方法来注册可视化对象。从技术角度看，为了显示可视化对象，不需要执行这些任务，但为了确保正确跟踪可视化对象，在可视化树和逻辑树中显示可视化对象以及使用其他WPF特性（如命中测试），需要执行这些操作。&lt;/li&gt;
&lt;li&gt;　　重写VisualChildrenCount属性并返回已经增加了的可视化对象的数量。&lt;/li&gt;
&lt;li&gt;　　重写GetVisualChild()方法，当通过索引好要求可视化对象时，添加返回可视化对象所需的代码。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　当重写VisualChildrenCount属性和GetVisualChild()方法时，本质上时劫持了那个元素。如果使用的是能够包含嵌套的内容控件、装饰元素或面板，这些元素将不再被渲染。例如，如果在自定义窗口中重写了这两个方法，就看不到窗口的其他内容。只会看到添加的可视化对象。&lt;/p&gt;
&lt;p&gt;　　因此，通常创建专用的自定义类来封装希望显示的可视化对象。例如，分析下图显示的窗口。该窗口允许用户为自定义的Canvas面板添加正方形(每个正方形是可视化对象).&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/i-beta/263728/202002/263728-20200219215009896-1054633380.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 　　在上图中，窗口的左边是具有三个RadioButton对象的工具栏。通过使用一组RadioButton对象，科室创建一套相互关联的按钮。当单击这套按钮中的某个按钮时，该按钮会被选中，并保持“按下”状态，而原来选择的按钮会恢复成正常的外观。&lt;/p&gt;
&lt;p&gt;　　在上图中，窗口的右边为自定义的名为DrawingCanvas的Canvas面板，该面板在内部存储了可视化对象的集合。DrawingCanvas面板返回保存在VisualChildrenCount属性的正方形总数量，并使用GetVisualChild()方法提供对集合中每个可视化对象的访问。下面是实现细节： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; DrawingCanvas:Panel
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;Visual&amp;gt; visuals = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Visual&amp;gt;&lt;span&gt;();

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; Visual GetVisualChild(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; visuals[index];
        }
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; VisualChildrenCount
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; visuals.Count;
            }
        }
        ...
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　此外，DrawingCanvas类还提供了AddVisual()方法和DeleteVisual()方法，以简化在集合的恰当位置插入可视化对象的自定义代码： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; AddVisual(Visual visual)
        {
            visuals.Add(visual);

            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.AddVisualChild(visual);
            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.AddLogicalChild(visual);
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; DeleteVisual(Visual visual)
        {
            visuals.Remove(visual);

            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.RemoveVisualChild(visual);
            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.RemoveLogicalChild(visual);
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　DrawingCanvas类没有提供用于绘制、选择以及移动正方形的逻辑，这是因为该功能是在应用程序层中控制的。因为可能有几个不同的绘图工具都使用同一个DrawingCanvas类，所以这样做是合理的。根据用户单击的按钮，用户可绘制不同类型的形状，或使用不同的笔画颜色和填充颜色。所有这些细节都是特定与窗口的。DrawingCanvas类提供了用于驻留、渲染以及跟踪可视化对象的功能。&lt;/p&gt;
&lt;p&gt;　　下面演示了如何在窗口的XAML标记中声明DrawingCanvas对象： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;local:DrawingCanvas &lt;/span&gt;&lt;span&gt;x:Name&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface&quot;&lt;/span&gt;&lt;span&gt; Background&lt;/span&gt;&lt;span&gt;=&quot;White&quot;&lt;/span&gt;&lt;span&gt; ClipToBounds&lt;/span&gt;&lt;span&gt;=&quot;True&quot;&lt;/span&gt;&lt;span&gt;
                             MouseLeftButtonDown&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface_MouseLeftButtonDown&quot;&lt;/span&gt;&lt;span&gt;
                MouseLeftButtonUp&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface_MouseLeftButtonUp&quot;&lt;/span&gt;&lt;span&gt;
                MouseMove&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface_MouseMove&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;local:DrawingCanvas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　上图已经分析了DrawingCanvas容器，现在应当分析创建正方形的事件处理代码了。首先分析MouseLeftButton事件的处理程序。正是该事件处理程序中的代码决定了将要执行什么操作——是创建正方形、删除正方形还是选择正方形。目前，我们只对第一个任务感兴趣： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; drawingSurface_MouseLeftButtonDown(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, MouseButtonEventArgs e)
        {
            Point pointClicked &lt;/span&gt;=&lt;span&gt; e.GetPosition(drawingSurface);

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (cmdAdd.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {
                DrawingVisual visual &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();
                DrawSquare(visual, pointClicked, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
                drawingSurface.AddVisual(visual);
            }
        ...
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　实际工作由自定义的DrawSquare()方法执行。该方法非常有用，因为需要在代码中的几个不同位置触发正方形绘制操作。显然，当第一次创建正方形时，需要使用DrawSquare()方法，当正方形的外观因为各种原因发生变化时(例如，当正方形被选中时)，也需要使用该方法。&lt;/p&gt;
&lt;p&gt;　　DrawSquare()方法接收三个参数：准备绘制的DrawingVisual对象、正方形左上角的点以及知识当前是否选中正方形的Boolean标志。对于选中的正方形使用不同的填充颜色进行填充。&lt;/p&gt;
&lt;p&gt;　　下面是渲染代码： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Drawing constants.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; Brush drawingBrush =&lt;span&gt; Brushes.AliceBlue;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Brush selectedDrawingBrush =&lt;span&gt; Brushes.LightGoldenrodYellow;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Pen drawingPen = &lt;span&gt;new&lt;/span&gt; Pen(Brushes.SteelBlue, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Size squareSize = &lt;span&gt;new&lt;/span&gt; Size(&lt;span&gt;30&lt;/span&gt;, &lt;span&gt;30&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; DrawingVisual selectionSquare;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Rendering the square.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; DrawSquare(DrawingVisual visual, Point topLeftCorner, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; isSelected)
        {
            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (DrawingContext dc =&lt;span&gt; visual.RenderOpen())
            {
                Brush brush &lt;/span&gt;=&lt;span&gt; drawingBrush;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isSelected) brush =&lt;span&gt; selectedDrawingBrush;

                dc.DrawRectangle(brush, drawingPen,
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect(topLeftCorner, squareSize));
            }
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这就是在窗口中显示可视化对象需要做的全部工作：渲染可视化对象的代码，以及处理必需的跟踪细节的内容。如果希望为可视化对象添加交互功能，还需要完成其他一些工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、命中测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　绘制正方形的应用程序不仅允许绘制正方形，还允许用户移动和删除以及绘制的正方形。为了执行这些任务，需要编写代码以截获鼠标单击，并查找位于可单击位置的可视化对象。该任务被称为命中测试(hit testing)。&lt;/p&gt;
&lt;p&gt;　　为支持命中测试，最好为DrawingCanvas类添加GetVisual()方法。该方法使用一个点作为参数并返回匹配的DrawingVisual对象。为此使用了VisualTreeHelper.HitTest()静态方法。下面是GetVisual()方法的完整带代码： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt;&lt;span&gt; DrawingVisual GetVisual(Point point)
        {
            HitTestResult hitResult &lt;/span&gt;= VisualTreeHelper.HitTest(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;, point);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; hitResult.VisualHit &lt;span&gt;as&lt;/span&gt;&lt;span&gt; DrawingVisual;
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在该例中，代码忽略了所有非DrawingVisual类型的命中对象，包括DrawingCanvas对象本身。如果没有正方形被单击，GetVisual()方法返回null引用。&lt;/p&gt;
&lt;p&gt;　　删除功能利用了GetVisual()方法。当选择删除命令并选中一个正方形时，MouseLeftButtonDown事件处理程序使用下面的代码删除这个正方形： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (cmdDelete.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {
                DrawingVisual visual &lt;/span&gt;=&lt;span&gt; drawingSurface.GetVisual(pointClicked);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (visual != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) drawingSurface.DeleteVisual(visual);
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可用类似的代码支持拖放特性，但需要通过一种方法对拖动进行跟踪。在窗口中添加了三个字段用于该目的——isDragging、clickOffset和selectedVisual： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Variables for dragging shapes.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isDragging = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Vector clickOffset;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; DrawingVisual selectedVisual;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　当用户单击某个形状时，isDragging字段被设置为true，selectedVisual字段被设置为被单击的可视化对象，而clickOffset字段记录了用户单击点和正方形左上角之间的距离。下面是MouseLeftButtonDown事件处理程序中的相关代码： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (cmdSelectMove.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {
                DrawingVisual visual &lt;/span&gt;=&lt;span&gt; drawingSurface.GetVisual(pointClicked);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (visual != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Calculate the top-left corner of the square.
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; This is done by looking at the current bounds and
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; removing half the border (pen thickness).
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; An alternate solution would be to store the top-left
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; point of every visual in a collection in the 
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; DrawingCanvas, and provide this point when hit testing.&lt;/span&gt;
                    Point topLeftCorner = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Point(
                        visual.ContentBounds.TopLeft.X &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,
                        visual.ContentBounds.TopLeft.Y &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
                    DrawSquare(visual, topLeftCorner, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);

                    clickOffset &lt;/span&gt;= topLeftCorner -&lt;span&gt; pointClicked;
                    isDragging &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (selectedVisual != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; selectedVisual !=&lt;span&gt; visual)
                    {
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The selection has changed. Clear the previous selection.&lt;/span&gt;
&lt;span&gt;                        ClearSelection();
                    }
                    selectedVisual &lt;/span&gt;=&lt;span&gt; visual;
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　除基本的记录信息外，上面的代码还调用DrawSquare()方法，使用新颜色重新渲染DrawingVisual对象。上面的代码还使用另一个自定义方法ClearSelection()，该方法重新绘制以前选中的正方形，使该正方形恢复其正常外观： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ClearSelection()
        {
            Point topLeftCorner &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Point(
                        selectedVisual.ContentBounds.TopLeft.X &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,
                        selectedVisual.ContentBounds.TopLeft.Y &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
            DrawSquare(selectedVisual, topLeftCorner, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
            selectedVisual &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　接下来，当用户拖动时需要实际移动正方形，并当用户释放鼠标左键时结束拖动操作。这两个任务是使用一些简单的事件处理代码完成的： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; drawingSurface_MouseLeftButtonUp(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, MouseButtonEventArgs e)
        {
            isDragging &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; drawingSurface_MouseMove(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, MouseEventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isDragging)
            {
                Point pointDragged &lt;/span&gt;= e.GetPosition(drawingSurface) +&lt;span&gt; clickOffset;
                DrawSquare(selectedVisual, pointDragged, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            }
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;四、复杂的命中测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在上面的示例中，命中测试代码始终返回最上面的可视化对象(如果单击空白处，就返回null引用)。然而，VisualTreeHelper类提供了HitTest()方法的两个重载版本，从而可以执行更加复杂的命中测试。使用这些方法，可以检索位于特定点的所有可视化对象，即使它们被其他元素隐藏在后面也同样如此。还可找到位于给定几何图形中的所有可视化对象。&lt;/p&gt;
&lt;p&gt;　　为了使用这个更高级的命中测试行为，需要创建回调函数。之后，VisualTreeHelper类自上而下遍历所有可视化对象(与创建它们的顺序相反)。每当发现匹配的对象时，就会调用回调函数并传递相关细节。然后可以选择停止查找(如果已经查找到足够的层次)，或继续查找知道遍历完所有的可视化对象为止。&lt;/p&gt;
&lt;p&gt;　　下面的代码通过为DrawingCanvas类添加GetVisuals()方法实现了该技术。GetVisuals()方法接收一个Geometry对象，该对象用于命中测试。GetVisuals()方法创建回调函数委托、清空命中测试结果的集合，然后通过调用VisualTreeHelper.HitTest()方法启动命中测试过程。当该过程结束时，该方法返回包含所有找到的可视化对象的集合： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; List&amp;lt;DrawingVisual&amp;gt; hits = &lt;span&gt;new&lt;/span&gt; List&amp;lt;DrawingVisual&amp;gt;&lt;span&gt;();
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;DrawingVisual&amp;gt;&lt;span&gt; GetVisuals(Geometry region)
        {
            hits.Clear();
            GeometryHitTestParameters parameters &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; GeometryHitTestParameters(region);
            HitTestResultCallback callback &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; HitTestResultCallback(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.HitTestCallback);
            VisualTreeHelper.HitTest(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, callback, parameters);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; hits;
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　回调方法实现了命中测试行为。通常，HitTestResult对象只提供一个熟悉(VisualHit)，但可以根据执行命中测试的类型，将它转换成两个派生类型中的任意一个。&lt;/p&gt;
&lt;p&gt;　　如果使用一个点进行命中测试，可将HitTestResult对象转换为PointHitTestResult对象，该类提供了一个不起眼的PointHit熟悉，该属性返回用于执行命中测试的原始点。但如果使用Geometry对象吉祥鸟命中测试，如本例那样，可将HitTestResult对象转换为GeometryHitTestResult对象，并访问IntersectionDetail属性。IntersectionDetail属性告知几何图形是否完全封装了可视化对象(FullyInside)，几何图形是否与可视化元素只是相互重叠(Intersets)，或者用于命中测试的集合图形是否落在可视化元素的内部(FullyContains)。在该例中，只有当可视化对象完全位于命中测试区域时，才会对命中数量计算。最后，在回调函数的末尾，可返回两个HitTestResultBehavior枚举值中的一个：返回continue表示继续查找命中，返回Stop则表示结束查找过程。 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt;&lt;span&gt; HitTestResultBehavior HitTestCallback(HitTestResult result)
        {
            GeometryHitTestResult geometryResult &lt;/span&gt;=&lt;span&gt; (GeometryHitTestResult)result;
            DrawingVisual visual &lt;/span&gt;= result.VisualHit &lt;span&gt;as&lt;/span&gt;&lt;span&gt; DrawingVisual;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (visual != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;span&gt;
                geometryResult.IntersectionDetail &lt;/span&gt;==&lt;span&gt; IntersectionDetail.FullyInside)
            {
                hits.Add(visual);
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; HitTestResultBehavior.Continue;
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　使用GetVisuals()方法，可创建如下图所示的复杂选择框效果。在此，用户在一组矩形的周围绘制了一个方框。应用程序接着报告该区域中矩形的数量。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/263728/202002/263728-20200219220414874-829778429.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 　　为了创建选择框，窗口只需要为DrawingCanvas面板添加另一个DrawingVisual对象即可。在窗口中还作为成员字段存储了指向选择框的引用，此外还有isMultiSelecting标记和selectionSquareTopLeft字段，当绘制选择框时，isMultiSelecting标记跟踪正在进行的选择操作，selectionSquareTopLeft字段跟踪当前选择框的左上角：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Variables for drawing the selection square.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isMultiSelecting = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Point selectionSquareTopLeft;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　为实现选择框特性，需要为前面介绍的事件处理程序添加一些代码。当单击鼠标时，需要创建选择框，将isMultiSelecting开关设置为true，并捕获鼠标。下面的MouseLeftButtonDown事件处理程序中的代码完成这项工作：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (cmdSelectMultiple.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {

                selectionSquare &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();

                drawingSurface.AddVisual(selectionSquare);

                selectionSquareTopLeft &lt;/span&gt;=&lt;span&gt; pointClicked;
                isMultiSelecting &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Make sure we get the MouseLeftButtonUp event even if the user
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; moves off the Canvas. Otherwise, two selection squares could be drawn at once.&lt;/span&gt;
&lt;span&gt;                drawingSurface.CaptureMouse();
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　现在，当移动鼠标时，可根据当前选择框是否处于激活状态。如果是激活状态，就绘制它。为此，需要在MouseMove事件处理程序中添加以下代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isMultiSelecting)
            {
                Point pointDragged &lt;/span&gt;=&lt;span&gt; e.GetPosition(drawingSurface);
                DrawSelectionSquare(selectionSquareTopLeft, pointDragged);
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　实际的绘图操作在专门的DrawSelectionSquare()方法中进行，该方法与前面介绍的DrawSquare()方法有一些类似之处：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; Brush selectionSquareBrush =&lt;span&gt; Brushes.Transparent;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Pen selectionSquarePen = &lt;span&gt;new&lt;/span&gt; Pen(Brushes.Black, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; DrawSelectionSquare(Point point1, Point point2)
        {
            selectionSquarePen.DashStyle &lt;/span&gt;=&lt;span&gt; DashStyles.Dash;

            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (DrawingContext dc =&lt;span&gt; selectionSquare.RenderOpen())
            {
                dc.DrawRectangle(selectionSquareBrush, selectionSquarePen,
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect(point1, point2));
            }
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　最后，当释放鼠标时，可执行命中测试，显示消息框，然后移除选择框。为此，需要MouseLeftButtonUp事件处理程序中添加如下代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isMultiSelecting)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Display all the squares in this region.&lt;/span&gt;
                RectangleGeometry geometry = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RectangleGeometry(
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect(selectionSquareTopLeft, e.GetPosition(drawingSurface)));
                List&lt;/span&gt;&amp;lt;DrawingVisual&amp;gt; visualsInRegion =&lt;span&gt;
                    drawingSurface.GetVisuals(geometry);
                MessageBox.Show(String.Format(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;You selected {0} square(s).&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, visualsInRegion.Count));

                isMultiSelecting &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                drawingSurface.DeleteVisual(selectionSquare);
                drawingSurface.ReleaseMouseCapture();
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本实例的完整代码如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d11737e5-2a85-4138-a65e-f8e77ddee60a')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_d11737e5-2a85-4138-a65e-f8e77ddee60a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d11737e5-2a85-4138-a65e-f8e77ddee60a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d11737e5-2a85-4138-a65e-f8e77ddee60a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d11737e5-2a85-4138-a65e-f8e77ddee60a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Text;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Controls;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Media;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Drawing
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; DrawingCanvas:Panel
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;Visual&amp;gt; visuals = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Visual&amp;gt;&lt;span&gt;();

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; Visual GetVisualChild(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; visuals[index];
        }
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; VisualChildrenCount
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; visuals.Count;
            }
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; AddVisual(Visual visual)
        {
            visuals.Add(visual);

            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.AddVisualChild(visual);
            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.AddLogicalChild(visual);
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; DeleteVisual(Visual visual)
        {
            visuals.Remove(visual);

            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.RemoveVisualChild(visual);
            &lt;/span&gt;&lt;span&gt;base&lt;/span&gt;&lt;span&gt;.RemoveLogicalChild(visual);
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; DrawingVisual GetVisual(Point point)
        {
            HitTestResult hitResult &lt;/span&gt;= VisualTreeHelper.HitTest(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;, point);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; hitResult.VisualHit &lt;span&gt;as&lt;/span&gt;&lt;span&gt; DrawingVisual;
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;DrawingVisual&amp;gt; hits = &lt;span&gt;new&lt;/span&gt; List&amp;lt;DrawingVisual&amp;gt;&lt;span&gt;();
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;DrawingVisual&amp;gt;&lt;span&gt; GetVisuals(Geometry region)
        {
            hits.Clear();
            GeometryHitTestParameters parameters &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; GeometryHitTestParameters(region);
            HitTestResultCallback callback &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; HitTestResultCallback(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.HitTestCallback);
            VisualTreeHelper.HitTest(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, callback, parameters);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; hits;
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; HitTestResultBehavior HitTestCallback(HitTestResult result)
        {
            GeometryHitTestResult geometryResult &lt;/span&gt;=&lt;span&gt; (GeometryHitTestResult)result;
            DrawingVisual visual &lt;/span&gt;= result.VisualHit &lt;span&gt;as&lt;/span&gt;&lt;span&gt; DrawingVisual;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (visual != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;span&gt;
                geometryResult.IntersectionDetail &lt;/span&gt;==&lt;span&gt; IntersectionDetail.FullyInside)
            {
                hits.Add(visual);
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; HitTestResultBehavior.Continue;
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;DrawingCanvas&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c08c77ba-746e-4769-a2ad-cefb6811f3e2')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_c08c77ba-746e-4769-a2ad-cefb6811f3e2&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c08c77ba-746e-4769-a2ad-cefb6811f3e2&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c08c77ba-746e-4769-a2ad-cefb6811f3e2',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c08c77ba-746e-4769-a2ad-cefb6811f3e2&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Window &lt;/span&gt;&lt;span&gt;x:Class&lt;/span&gt;&lt;span&gt;=&quot;Drawing.VisualLayer&quot;&lt;/span&gt;&lt;span&gt;
        xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;&lt;/span&gt;&lt;span&gt;
        xmlns:x&lt;/span&gt;&lt;span&gt;=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&lt;/span&gt;&lt;span&gt;
        xmlns:local&lt;/span&gt;&lt;span&gt;=&quot;clr-namespace:Drawing&quot;&lt;/span&gt;&lt;span&gt;
        Title&lt;/span&gt;&lt;span&gt;=&quot;VisualLayer&quot;&lt;/span&gt;&lt;span&gt; Height&lt;/span&gt;&lt;span&gt;=&quot;300&quot;&lt;/span&gt;&lt;span&gt; Width&lt;/span&gt;&lt;span&gt;=&quot;394.737&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Grid&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Grid.ColumnDefinitions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ColumnDefinition &lt;/span&gt;&lt;span&gt;Width&lt;/span&gt;&lt;span&gt;=&quot;Auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ColumnDefinition&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ColumnDefinition&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ColumnDefinition&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Grid.ColumnDefinitions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ToolBarTray &lt;/span&gt;&lt;span&gt;Orientation&lt;/span&gt;&lt;span&gt;=&quot;Vertical&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ToolBar&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;RadioButton &lt;/span&gt;&lt;span&gt;Margin&lt;/span&gt;&lt;span&gt;=&quot;0,3&quot;&lt;/span&gt;&lt;span&gt; Name&lt;/span&gt;&lt;span&gt;=&quot;cmdSelectMove&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Image &lt;/span&gt;&lt;span&gt;Source&lt;/span&gt;&lt;span&gt;=&quot;pointer.png&quot;&lt;/span&gt;&lt;span&gt; Width&lt;/span&gt;&lt;span&gt;=&quot;35&quot;&lt;/span&gt;&lt;span&gt; Height&lt;/span&gt;&lt;span&gt;=&quot;35&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Image&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Select/Move&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;RadioButton&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;RadioButton &lt;/span&gt;&lt;span&gt;Margin&lt;/span&gt;&lt;span&gt;=&quot;0,3&quot;&lt;/span&gt;&lt;span&gt; IsChecked&lt;/span&gt;&lt;span&gt;=&quot;True&quot;&lt;/span&gt;&lt;span&gt; Name&lt;/span&gt;&lt;span&gt;=&quot;cmdAdd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Rectangle &lt;/span&gt;&lt;span&gt;Width&lt;/span&gt;&lt;span&gt;=&quot;30&quot;&lt;/span&gt;&lt;span&gt; Height&lt;/span&gt;&lt;span&gt;=&quot;30&quot;&lt;/span&gt;&lt;span&gt; Stroke&lt;/span&gt;&lt;span&gt;=&quot;SteelBlue&quot;&lt;/span&gt;&lt;span&gt; StrokeThickness&lt;/span&gt;&lt;span&gt;=&quot;3&quot;&lt;/span&gt;&lt;span&gt; Fill&lt;/span&gt;&lt;span&gt;=&quot;AliceBlue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Rectangle&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Add Square&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;RadioButton&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;RadioButton &lt;/span&gt;&lt;span&gt;Margin&lt;/span&gt;&lt;span&gt;=&quot;0,3&quot;&lt;/span&gt;&lt;span&gt; Name&lt;/span&gt;&lt;span&gt;=&quot;cmdDelete&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Path &lt;/span&gt;&lt;span&gt;Stroke&lt;/span&gt;&lt;span&gt;=&quot;SteelBlue&quot;&lt;/span&gt;&lt;span&gt; StrokeThickness&lt;/span&gt;&lt;span&gt;=&quot;4&quot;&lt;/span&gt;&lt;span&gt; StrokeEndLineCap&lt;/span&gt;&lt;span&gt;=&quot;Round&quot;&lt;/span&gt;&lt;span&gt; StrokeStartLineCap&lt;/span&gt;&lt;span&gt;=&quot;Round&quot;&lt;/span&gt;&lt;span&gt;
                  Fill&lt;/span&gt;&lt;span&gt;=&quot;Red&quot;&lt;/span&gt;&lt;span&gt; HorizontalAlignment&lt;/span&gt;&lt;span&gt;=&quot;Center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Path.Data&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;GeometryGroup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;PathGeometry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;PathFigure &lt;/span&gt;&lt;span&gt;StartPoint&lt;/span&gt;&lt;span&gt;=&quot;0,0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;LineSegment &lt;/span&gt;&lt;span&gt;Point&lt;/span&gt;&lt;span&gt;=&quot;18,18&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;LineSegment&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;PathFigure&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;PathFigure &lt;/span&gt;&lt;span&gt;StartPoint&lt;/span&gt;&lt;span&gt;=&quot;0,18&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;LineSegment &lt;/span&gt;&lt;span&gt;Point&lt;/span&gt;&lt;span&gt;=&quot;18,0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;LineSegment&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;PathFigure&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;PathGeometry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;GeometryGroup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Path.Data&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Path&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Delete Square&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;RadioButton&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;RadioButton &lt;/span&gt;&lt;span&gt;Margin&lt;/span&gt;&lt;span&gt;=&quot;0,3&quot;&lt;/span&gt;&lt;span&gt; Name&lt;/span&gt;&lt;span&gt;=&quot;cmdSelectMultiple&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Image &lt;/span&gt;&lt;span&gt;Source&lt;/span&gt;&lt;span&gt;=&quot;pointer.png&quot;&lt;/span&gt;&lt;span&gt; Width&lt;/span&gt;&lt;span&gt;=&quot;35&quot;&lt;/span&gt;&lt;span&gt; Height&lt;/span&gt;&lt;span&gt;=&quot;35&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Image&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Select Multiple&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;TextBlock&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;StackPanel&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;RadioButton&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ToolBar&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ToolBarTray&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Border &lt;/span&gt;&lt;span&gt;Grid.Column&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; Margin&lt;/span&gt;&lt;span&gt;=&quot;3&quot;&lt;/span&gt;&lt;span&gt; BorderThickness&lt;/span&gt;&lt;span&gt;=&quot;3&quot;&lt;/span&gt;&lt;span&gt; BorderBrush&lt;/span&gt;&lt;span&gt;=&quot;SteelBlue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;local:DrawingCanvas &lt;/span&gt;&lt;span&gt;x:Name&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface&quot;&lt;/span&gt;&lt;span&gt; Background&lt;/span&gt;&lt;span&gt;=&quot;White&quot;&lt;/span&gt;&lt;span&gt; ClipToBounds&lt;/span&gt;&lt;span&gt;=&quot;True&quot;&lt;/span&gt;&lt;span&gt;
                             MouseLeftButtonDown&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface_MouseLeftButtonDown&quot;&lt;/span&gt;&lt;span&gt;
                MouseLeftButtonUp&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface_MouseLeftButtonUp&quot;&lt;/span&gt;&lt;span&gt;
                MouseMove&lt;/span&gt;&lt;span&gt;=&quot;drawingSurface_MouseMove&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;local:DrawingCanvas&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Border&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Grid&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;Window&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;VisualLayer&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('10d6fbc8-05be-4f2f-a060-99a8f5c764fa')&quot; readability=&quot;49&quot;&gt;&lt;img id=&quot;code_img_closed_10d6fbc8-05be-4f2f-a060-99a8f5c764fa&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_10d6fbc8-05be-4f2f-a060-99a8f5c764fa&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('10d6fbc8-05be-4f2f-a060-99a8f5c764fa',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_10d6fbc8-05be-4f2f-a060-99a8f5c764fa&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;93&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Text;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Controls;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Data;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Documents;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Input;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Media;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Media.Imaging;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Shapes;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Drawing
{
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; VisualLayer.xaml 的交互逻辑
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; VisualLayer : Window
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; VisualLayer()
        {
            InitializeComponent();
            DrawingVisual v &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();
            DrawSquare(v, &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Point(&lt;span&gt;10&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;), &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Variables for dragging shapes.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isDragging = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Vector clickOffset;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; DrawingVisual selectedVisual;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Variables for drawing the selection square.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isMultiSelecting = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Point selectionSquareTopLeft;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; drawingSurface_MouseLeftButtonDown(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, MouseButtonEventArgs e)
        {
            Point pointClicked &lt;/span&gt;=&lt;span&gt; e.GetPosition(drawingSurface);

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (cmdAdd.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {
                DrawingVisual visual &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();
                DrawSquare(visual, pointClicked, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
                drawingSurface.AddVisual(visual);
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (cmdDelete.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {
                DrawingVisual visual &lt;/span&gt;=&lt;span&gt; drawingSurface.GetVisual(pointClicked);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (visual != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) drawingSurface.DeleteVisual(visual);
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (cmdSelectMove.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {
                DrawingVisual visual &lt;/span&gt;=&lt;span&gt; drawingSurface.GetVisual(pointClicked);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (visual != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Calculate the top-left corner of the square.
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; This is done by looking at the current bounds and
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; removing half the border (pen thickness).
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; An alternate solution would be to store the top-left
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; point of every visual in a collection in the 
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; DrawingCanvas, and provide this point when hit testing.&lt;/span&gt;
                    Point topLeftCorner = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Point(
                        visual.ContentBounds.TopLeft.X &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,
                        visual.ContentBounds.TopLeft.Y &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
                    DrawSquare(visual, topLeftCorner, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);

                    clickOffset &lt;/span&gt;= topLeftCorner -&lt;span&gt; pointClicked;
                    isDragging &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (selectedVisual != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; selectedVisual !=&lt;span&gt; visual)
                    {
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The selection has changed. Clear the previous selection.&lt;/span&gt;
&lt;span&gt;                        ClearSelection();
                    }
                    selectedVisual &lt;/span&gt;=&lt;span&gt; visual;
                }
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (cmdSelectMultiple.IsChecked == &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
            {

                selectionSquare &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DrawingVisual();

                drawingSurface.AddVisual(selectionSquare);

                selectionSquareTopLeft &lt;/span&gt;=&lt;span&gt; pointClicked;
                isMultiSelecting &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Make sure we get the MouseLeftButtonUp event even if the user
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; moves off the Canvas. Otherwise, two selection squares could be drawn at once.&lt;/span&gt;
&lt;span&gt;                drawingSurface.CaptureMouse();
            }
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Drawing constants.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; Brush drawingBrush =&lt;span&gt; Brushes.AliceBlue;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Brush selectedDrawingBrush =&lt;span&gt; Brushes.LightGoldenrodYellow;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Pen drawingPen = &lt;span&gt;new&lt;/span&gt; Pen(Brushes.SteelBlue, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Size squareSize = &lt;span&gt;new&lt;/span&gt; Size(&lt;span&gt;30&lt;/span&gt;, &lt;span&gt;30&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; DrawingVisual selectionSquare;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Rendering the square.&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; DrawSquare(DrawingVisual visual, Point topLeftCorner, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; isSelected)
        {
            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (DrawingContext dc =&lt;span&gt; visual.RenderOpen())
            {
                Brush brush &lt;/span&gt;=&lt;span&gt; drawingBrush;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isSelected) brush =&lt;span&gt; selectedDrawingBrush;

                dc.DrawRectangle(brush, drawingPen,
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect(topLeftCorner, squareSize));
            }
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; drawingSurface_MouseLeftButtonUp(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, MouseButtonEventArgs e)
        {
            isDragging &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isMultiSelecting)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Display all the squares in this region.&lt;/span&gt;
                RectangleGeometry geometry = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RectangleGeometry(
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect(selectionSquareTopLeft, e.GetPosition(drawingSurface)));
                List&lt;/span&gt;&amp;lt;DrawingVisual&amp;gt; visualsInRegion =&lt;span&gt;
                    drawingSurface.GetVisuals(geometry);
                MessageBox.Show(String.Format(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;You selected {0} square(s).&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, visualsInRegion.Count));

                isMultiSelecting &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                drawingSurface.DeleteVisual(selectionSquare);
                drawingSurface.ReleaseMouseCapture();
            }
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ClearSelection()
        {
            Point topLeftCorner &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Point(
                        selectedVisual.ContentBounds.TopLeft.X &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;,
                        selectedVisual.ContentBounds.TopLeft.Y &lt;/span&gt;+ drawingPen.Thickness / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
            DrawSquare(selectedVisual, topLeftCorner, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
            selectedVisual &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; drawingSurface_MouseMove(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, MouseEventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isDragging)
            {
                Point pointDragged &lt;/span&gt;= e.GetPosition(drawingSurface) +&lt;span&gt; clickOffset;
                DrawSquare(selectedVisual, pointDragged, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isMultiSelecting)
            {
                Point pointDragged &lt;/span&gt;=&lt;span&gt; e.GetPosition(drawingSurface);
                DrawSelectionSquare(selectionSquareTopLeft, pointDragged);
            }
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Brush selectionSquareBrush =&lt;span&gt; Brushes.Transparent;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Pen selectionSquarePen = &lt;span&gt;new&lt;/span&gt; Pen(Brushes.Black, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;);

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; DrawSelectionSquare(Point point1, Point point2)
        {
            selectionSquarePen.DashStyle &lt;/span&gt;=&lt;span&gt; DashStyles.Dash;

            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (DrawingContext dc =&lt;span&gt; selectionSquare.RenderOpen())
            {
                dc.DrawRectangle(selectionSquareBrush, selectionSquarePen,
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect(point1, point2));
            }
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;VisualLayer.xaml.cs&lt;/span&gt;&lt;/div&gt;

</description>
<pubDate>Wed, 19 Feb 2020 14:20:00 +0000</pubDate>
<dc:creator>Peter.Luo</dc:creator>
<og:description>前面几章介绍了处理适量适中的图形内容的最佳方法。通过使用几何图形、图画和路径，可以降低2D图形的开销。即使正在使用复杂的具有分层效果的组合形状和渐变画刷，这种方法也仍然能够正常得很好。 然而，这样设计</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/Peter-Luo/p/12333089.html</dc:identifier>
</item>
<item>
<title>Latent Representation Learning For Artificial Bandwidth Extension Using A Conditional Variational Auto-Encoder - 凌逆战</title>
<link>http://www.cnblogs.com/LXP-Never/p/10714401.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/LXP-Never/p/10714401.html</guid>
<description>&lt;p&gt;博客作者：凌逆战&lt;/p&gt;
&lt;p&gt;论文地址：&lt;a href=&quot;https://ieeexplore.ieee.xilesou.top/abstract/document/8683611/&quot;&gt;https://ieeexplore.ieee.xilesou.top/abstract/document/8683611/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;地址：&lt;a id=&quot;Editor_Edit_hlEntryLink&quot; title=&quot;view: Latent Representation Learning For Artificial Bandwidth Extension Using A Conditional Variational Auto-Encoder&quot; href=&quot;https://www.cnblogs.com/LXP-Never/p/10714401.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/LXP-Never/p/10714401.html&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;span&gt;利用条件变分自动编码器进行人工带宽扩展的潜在表示学习&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;作者：Pramod Bachhav, Massimiliano Todisco and Nicholas Evans&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;　　当宽带设备与窄带设备或基础设施一起使用时，&lt;strong&gt;人工带宽扩展(ABE)&lt;/strong&gt;算法可以提高语音质量。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;大多数ABE解决方案都使用某种形式的memory(记忆)，这意味着高维特性表示会增加延迟和复杂性。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;因此发展了降维技术以保持效率。因此&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;提取紧凑的低维表示，然后与标准回归模型一起用于估计高频段分量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;以往的研究表明，某种形式的监督对于优化ABE的&lt;strong&gt;降维技术&lt;/strong&gt;至关重要。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;本论文研究了&lt;strong&gt;条件变分自动编码器(conditional variational auto-encoders，CVAEs)&lt;/strong&gt;在监督降维中的首次应用。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;利用有向图模型的CVAEs对高维对数谱数据进行建模，提取潜在的窄带表示法。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;与其他降维技术的结果相比，客观和主观的评估表明，使用CVAEs学习的潜在概率表示产生的带宽扩展语音信号质量显著提高。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;index Terms(索引项):变分自动编码器，潜在变量，人工带宽扩展，降维，语音质量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;　　传统窄带(NB)网络和设备通常支持0.3-3.4kHz的带宽。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;为了提高语音质量，今天的宽带(WB)网络支持50Hz-7kHz的带宽。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;随着NB网络向WB网络的过渡，需要大量的投资[1]，&lt;strong&gt;人工带宽扩展(ABE)&lt;/strong&gt;算法被开发出来，当WB设备与NB设备或基础设施一起使用时，可以提高语音质量。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;ABE用于从可用NB分量中估计缺失的3.4kHz以上的&lt;strong&gt;highband(高带)(HB)&lt;/strong&gt;频率分量，通常使用从大量WB训练数据中学习的回归模型。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;ABE算法要么使用经典的源滤波器模型[2,3]，要么直接对复杂的短期频谱估计进行操作[4,6]。在这两种方法中，使用contextual information(上下文信息)或memory(记忆)，可以更可靠地估计HB成分&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;。一些特定的back-end(后端)regression(回归)模型[7 9]以时间信息的形式捕获memory，而其他解决方案[4、10、11]则相反地在front-end(前端)捕获记忆，例如通过delta特征或从相邻帧提取的静态特征。虽然memory的使用提高了ABE的性能，但它意味着使用更高维度的特性，因此，ABE回归模型更复杂，计算要求更高。考虑到ABE通常需要在电池驱动的设备上运行，这是不可取的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;　　为了减少复杂性的增加，[12，13]研究了在固定维度的约束下，通过&lt;strong&gt;delta mel频率倒谱系数(MFCC)&lt;/strong&gt;包含记忆。然而，研究发现，互信息的增益被MFCC inversion(转换)中涉及的重建伪影所抵消[13]。我们自己的工作[14]提出了一种方法，将memory(记忆)以相邻帧的静态特性的形式包含进来。为了保持效率，采用了降维方法。我们后续的工作[15]表明，由对数谱系数组成的memory(记忆)可以使用&lt;strong&gt;半监督堆叠自动编码器(semi-supervised stacked auto-encoders, SSAE)&lt;/strong&gt;学习一种紧凑的、低维的ABE特征表示。&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;本文的工作旨在探索生成建模技术的应用，以进一步提高ABE性能。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;目标是对高维谱数据(包括memory(记忆))的分布建模，并提取更高层次、更低维的特征，从而在不影响复杂性的情况下提高ABE回归模型的可靠性。&lt;/span&gt;&lt;/span&gt;从本质上讲，我们寻求一种专门针对ABE的&lt;strong&gt;降维(DR)&lt;/strong&gt;形式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;strong&gt;变分自编码器(VAEs)&lt;/strong&gt;及其&lt;strong&gt;条件变分自动编码器&lt;/strong&gt;&lt;strong&gt;(CVAEs)&lt;/strong&gt;概率深度生成模型能够对复杂的数据分布进行建模。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;与&lt;strong&gt;堆叠式自动编码器(SAEs)&lt;/strong&gt;学习的瓶颈特性相比，隐藏表示是概率的，可以用来生成新的数据。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;受其在图像处理中的成功应用[16 18]的启发，它们在众多的语音处理领域越来越受欢迎，如语音建模与转换[19,20]、语音转换[21]、语音合成[22]、语音增强用于语音活动检测[23]、情感识别[24]和音频源分离[25]。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;CVAEs通过combination(联合)潜在变量和条件变量来生成数据。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;本文工作的思路是通过辅助神经网络对条件变量进行优化，以学习higher-level(更高层次)的NB特征，这些特征是针对ABE任务中缺失HB分量的估计而定制的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;这项工作的新贡献是:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;　　　　(i) 第一次将VAEs和CVAEs应用于DR的回归任务，如ABE；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;　　　　(ii) 将CVAE与probabilistic encoder(概率编码器)结合，以auriliary(辅助)神经网络的形式，得到条件变量；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;　　　　(iii) 联合优化的一种方法；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;　　　　(iv) 他们应用于extract(提取)probabilistic(概率)NB潜在表示，以估计在其他标准ABE框架中丢失的HB数据；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;　　　　(v) 所提出的方法来大幅提高ABE性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;　　本文的其余部分组织如下。第2节描述了基线ABE算法。第3节介绍了基于VAE和CVAE的特征提取方案，第4节实验，第5节结论。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1433301/201905/1433301-20190523173302645-2118876945.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;图1 基线ABE系统框图。图改编自[14]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;图1显示了基线ABE系统。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;它与[14]&lt;sub&gt;(作者自己的文章)&lt;/sub&gt;中提出的基于源滤波器模型的方法是一致的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;因此，这里只提供一个简要的概述。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;该算法由 &lt;span&gt;&lt;strong&gt;估计&lt;/strong&gt;&lt;/span&gt; 和 &lt;span&gt;&lt;strong&gt;再&lt;/strong&gt;&lt;strong&gt;合成&lt;/strong&gt;&lt;/span&gt; 两部分组成。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;　　&lt;span&gt;&lt;strong&gt;Estimation(估计) &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;使用1024点FFT处理持续时间为20 ms、采样率为16kHz的NB语音帧s&lt;sup&gt;NB&lt;/sup&gt;，extract(提取)200维NB对数功率谱（LPS&lt;sub&gt;NB&lt;/sub&gt;）系数x&lt;sup&gt;NB&lt;/sup&gt;，该系数经过均值和方差归一化(mvn_x)得到的$x_{mvn}^{NB}$。在appent(相加)了2个相邻帧的系数后，得到1000维concatenate(级联)向量$x_{conc\_2}^{NB}$。应用降维(DR)技术提取10维的特征向量$x_{dr\_2}^{NB}$。然后使用传统的基于GMM的映射技术进行估计[2]得到归一化的HB特征$y_{mvn}^{HB}$由9个LP系数和一个gain(增益)参数组成。然后应用反向均值方差归一化($mvn_y^{-1}$)得到HB特征$y^{HB}$。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;　　&lt;span&gt;&lt;strong&gt;Resynthesis(&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span&gt;&lt;strong&gt;再合成)&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;strong&gt;首先&lt;/strong&gt;(框1)，通过选择性线性预测(SLP&lt;sub&gt;NB&lt;/sub&gt;)从语音帧s&lt;sup&gt;NB&lt;/sup&gt;中得到LP参数a&lt;sup&gt;NB&lt;/sup&gt;、g&lt;sup&gt;NB&lt;/sup&gt;，用来得到NB功率谱PS&lt;sub&gt;NB&lt;/sub&gt;。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;然后将其与HB功率谱PS&lt;sub&gt;HB&lt;/sub&gt;(从HB LP参数$\hat{g}^{HB}$,$\hat{a}^{HB}$中estimated(估计)得到) concatenated(级联)&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;，得到WB功率谱PS&lt;sub&gt;WB&lt;/sub&gt;，从而估计WB LP参数$\hat{g}^{HB}$,$\hat{a}^{HB}$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;strong&gt;其次&lt;/strong&gt;(框2)，HB激励$\hat{u}^{HB}$是根据NB激励u&lt;sup&gt;NB&lt;/sup&gt;在6.8kHz时的频谱translation(转换)然后经过高通滤波来估算的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;然后将NB和HB激励分量相结合，得到扩展的WB激励$\hat{u}^{WB}$。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;strong&gt;最后&lt;/strong&gt;(框3)，使用$\hat{g}^{WB}$和$\hat{a}^{WB}$定义的合成滤波器对$\hat{u}^{WB}$进行滤波，以重新合成语音帧$\hat{s}^{WB}$。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;采用传统的overlap(重叠)和相加(overlap and add，OLA)技术来产生扩展的WB语音。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;在本节中，我们展示了如何将VAE和CVAE体系结构的联合学习用于&lt;strong&gt;特征提取&lt;/strong&gt;，以提高ABE性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;3.1 VAE(变分自动编码器)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;　　变分自动编码器(variational，VAE)[26]是一个生成模型$p_\theta (x,z)=p_\theta (z)p_\theta (x|z)$(带参数$\theta$)，假设其中的数据$\{x^{(i)}\}_{i=1}^N$由N个i组成。随机变量$x$的样本由连续的潜在变量$z$生成，在实际中，求解marginal likelihood(&lt;span&gt;边界似然&lt;/span&gt;)$p_{\theta}(x)$和true posterior density(&lt;span&gt;真实后验密度&lt;/span&gt;)$p_{\theta}(z|x)$都是棘手的，为了解决这个问题，VAEs使用一个recognition/inference(识别/推理)模型$q_\phi (z|x)$作为后验$p_{\theta}(z|x)$的近似值，单个数据点的&lt;span&gt;边界似然&lt;/span&gt;为:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;$$公式1：\log p(x)=-D_{KL}[q_\phi (z|x)||p_\theta(z|x)]+L(\theta,\phi ;x)$$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;其中第一项表示近似后验分布和真实后验分布之间的Kullback-Leibler (KL)散度(D&lt;sub&gt;KL&lt;/sub&gt;)。为了简单起见，&lt;span&gt;假设近似后验和真后验为对角多元高斯分布，用两种不同的&lt;strong&gt;深度神经网络&lt;/strong&gt;计算其各自的参数$\theta$和$\phi$&lt;/span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;　　由于KL散度为非负的，$L(\theta,\phi ;x)$表示marginal likelihood(边界似然)的variational&lt;strong&gt;(变分)下界&lt;/strong&gt;，可写为：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;$$公式2：L(\theta,\phi ;x)=-D_{KL}[q_{\phi} (z|x)||p(z)]+E_{z_\phi }[\log p_\theta(x|z)]$$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中，$D_{KL}[·]$作为正则化项，可以通过分析计算得出。在实际应用中，假定先验$p(z)=N(z;0,I)$是中心各向同性多元高斯，没有自由参数。第二项是预期的负重建误差，必须通过抽样估计。使用从识别网络$q_\phi (z|x)$中samples(抽取)的$L$个样本，将其近似为$\frac{1}{L}\sum_{l=1}^L\log p_\theta(x|z^{(l)})$。&lt;/span&gt;&lt;span&gt;使用可微确定性映射进行采样，这样$z^{{l}}=g_\phi (x,\epsilon ^{(l)})=\mu (x)+\epsilon ^{(l)}\odot \sigma (x)$，其中$\epsilon ^{(l)}\sim N(0,I)$。$\mu _z=\mu (x)$和$\sigma _z=\sigma(x)$是识别网络$q_\phi (z|x)$的输出。&lt;/span&gt;&lt;span&gt;这被称为reparameterization trick(重新参数化技巧)。&lt;/span&gt;&lt;span&gt;下界$L$构成目标函数，利用随机梯度下降算法对参数$\theta$和$\phi $进行优化。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;3.2 CVAE(条件变分自动编码器)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;条件变分自动编码器(CVAE)是一个条件生成模型$p_\theta(y,z|x)=p_\theta(z)p_\theta(y|x,z)$；&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;对于给定的输入$x$，从先验分布$p_\theta(x)$中提取潜在变量$z$，其中分布$p_\theta(y|x,z)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;生成输出$y$[17,18]。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;为了处理棘手的问题，CVAEs也使用近似后验$q_\phi (z|x,y)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;我们采用了与[18]不同的公式，其中我们假设潜在变量只依赖于输出变量$y$，即$q_\phi (z|x,y)=q_\phi(z|y)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;条件似然$p_\theta(y|x)$的变分下界由下式给出:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;$$公式3：\log p_\theta(y|x)\geq L(\theta ,\phi ;x,y)=-D_{KL}[q_\phi (z|y)||p_\theta(z)]+E_{q_\phi (z|y)}[\log p_\theta(y|x,z)]$$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;第二项近似为$\frac{1}{L}\sum_{l=1}^L\log p_\theta(y|x,z^{(l)})$；&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;其中$z^{(l)}=g_\phi (y,\epsilon ^{(l)})=\mu (y)+\epsilon ^{(l)}\odot \sigma (y)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;其中$\epsilon ^{(l)}\sim N(0,I)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;和$\sigma _z=\sigma (y)$是识别网络$q_\phi (y|x,z)$的输出。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;实际上，每个datapoint(数据点)[26]使用L = 1个样本。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;CVAE识别网络$q_\phi (z|y)$和生成网络$p_\theta(y|x,z)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;采用深度神经网络建模。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;　　公式3中的&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;输出分布$p_\theta(y|x,z)$取&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;高斯函数，平均值为$f(x,z;\theta)$并且covariance matrix(&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;协方差矩阵)为$\sigma^2*I$，即$p_\theta(y|x,z)=N(f(x,z;\theta),\sigma ^2*I)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;其中$f$是带有参数$\theta$的x和z的确定性变换。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;因此&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;$$公式3：\log p_\theta(y|x,z)=C-||y-f(x,z;\theta)||^2/\alpha $$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;其中C是一个常数，在优化过程中可以忽略。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;标量$\alpha =2\sigma ^2$可以看作是KL-divergence(KL散度)与重构项[27]之间的权重因子。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;3.3 提取ABE的潜在表示&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;　　本节描述了&lt;strong&gt;联合优化VAE和CVAE&lt;/strong&gt;的方案，为了学习到针对ABE的潜在表示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;方案如图2所示。&lt;/span&gt;&lt;span class=&quot;transSent&quot; data-group=&quot;0-2&quot;&gt;并行训练数据由NB和WB语句组成，帧长为20ms，重叠为10ms。&lt;span class=&quot;transSent&quot; data-group=&quot;0-3&quot;&gt;输入数据$x=x_{conc\_2}^{NB}$由带memory(记忆)的NB LPS系数组成(如第2节所述)，输出数据$y=y_{mvn}^{HB}$由9个LP系数和一个从并行HB数据中通过选择性线性预测(SLP)提取的增益参数组成。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;首先对VAE进行训练，将编码器$q_{\phi_x}(z_x|x)$(图2底部)由输入数据x进行fed(馈送)，以预测均值$\mu_{z_x}$和代表后验分布$q_{\phi_x}(z_x|x)$的log-variance(对数方差)$\log (\sigma _{z_x}^2)$。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;将对应的解码器$p_{\theta_x}(x|z_x)$(图2未表示出)由输入$z_x\sim q_{\phi _x}(z_x|x)$进行馈送，以预测分布$p_{\theta_x}(x|z_x)$的均值$\mu _x$。&lt;/span&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;这可以看作是初始化编码器$q_{\phi_x}(z_x|x)$权值的某种形式的预训练。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;注意，在这个阶段，NB表示$z_x$是在没有任何HB数据监督的情况下学习的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;然后丢弃VAE解码器。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;然后使用编码器$q_{\phi_x}(z_x|x)$作为CVAE的条件变量(如图2所示)。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;　　&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;然后训练CVAE对输出$y$的分布进行建模。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;将HB数据y输入编码器$q_{\phi_y}(z_y|y)$(图2左上网络)，以预测均值$\mu_{z_y}$和近似后验分布$q_{\phi_y}(z_y|y)$的log-variance(对数方差)$\log (\sigma _{z_y}^2)$。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;然后使用预测的参数通过&lt;em&gt;reparameterization trick&lt;/em&gt;(重新参数化技巧)获得输出变量$y$的潜在表示$z_y\sim q_{\phi _y}(z_y|y)$(见3.2节)。然后&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;，利用潜在变量$z_x\sim q_{\phi _x}(z_x|x)$作为CVAE condition(条件)变量。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;串联后，$z_x$和$z_y$输入解码器$p_{\theta_y}(y|z_x,z_y)$(右上的网络)，&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;为了预测输出变量$y$的均值$\mu _y=\mu (z_x,z_y)$。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;最后，对整个网络进行训练，共同学习参数$\phi _x$、$\phi _y$和$\theta _y$。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;由式(3)、(4)可得优化下等价变分下界为:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;$$公式5：\log p_{\theta}(y|z_x)\geq L(\theta_y,\phi _y,\phi _x;z_x,y)=-[D_{KL}[q_{\phi _y}(z_y|y)||p_{\theta_y}(z_y)]+||y-f(z_x,z_y;\theta_y)||^2/\alpha]$$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;　　我们希望，在公式5的优化过程中，对编码器$q_{\phi_x}(z_x|x)$的参数$\phi_x$进行更新，从而使框架学习生成CVAE输出$\hat{y}$的编码信息的潜在表示形式$z_x$。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;　　&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;最后，利用编码器$q_{\phi_x}(z_x|x)$(图2中红色分量表示)对每个$x$估计他们的潜在表示$z_x$，然后使用联合向量$z_x$和$y$学习GMM回归映射[2]。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;在ABE估计阶段，将DR块(图1中的红色框)由编码器$q_{\phi_x}(z_x|x)$替代，按照第2节中描述的方式进行估计。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;注意网络$q_{\phi_x}(z_x|x)$和$p_{\phi_y}(y|z_x,z_y)$一起组成一个DNN，有两个随机层$z_x$和$z_y$，这本身可以用于ABE，其中$z_y$是在估计阶段从先验分布$p_{\theta_y}(z_y)=N(0,I)$中采样的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;然而，本文报道的工作的目的是利用CVAE学习到的潜在表示$z_x$作为ABE的DR技术。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;目的是保持回归模型的计算效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1433301/201904/1433301-20190417194756677-1218553956.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;图2 一种基于CVAE的特征提取方案&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;　　本节描述用于ABE实验的数据集，基线和CVAE配置细节和结果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;实验的目的是比较ABE系统的性能，该系统使用从CVAE中学习到的特性和使用alternative(替代)DR技术的特性。在所有情况下，性能评估均采用或不采用均值和variance normalisation(方差归一化)。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.1 数据集&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;TIMIT数据集[28]用于训练和验证。使用3693个来自训练集的话语和1152个来自测试集(不含核心测试子集)的话语，根据[6]中描述的步骤，并行处理WB和NB语音信号，来训练ABE方案。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;TIMIT core(核心)测试子集(192条语句)用于验证和网络优化。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;采用1378个语音组成的The acoustically-different(听觉不同) TSP数据库[29]进行测试。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;将TSP数据下采样至16kHz，并进行类似的预处理或得并行的WB和NB数据。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;4.2 CVAE配置和训练&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;CVAE体系结构1是使用Keras toolkit[30]&lt;a href=&quot;https://github.com/%20bachhavpramod/bandwidth_extension&quot; target=&quot;_blank&quot;&gt;实现&lt;/a&gt;的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;编码器$q_{\phi_x}(z_x|x)$和$q_{\phi_y}(z_y|y)$由两个隐藏层组成，分别为512和256个units(单元)，输入层分别为1000和10个单元。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;它们的输出是由均值$\mu_{z_x}$、$\mu_{z_y}$和对数方差$\sigma _{z_x}$、$\sigma _{z_y}$组成的Gaussian-distributed(高斯分布)的潜在变量层$z_x$和$z_y$，由10个单位组成。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;解码器$p_{\theta_x}(x|z_x)$和$p_{\theta_y}(x|z_y)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;有2个隐藏层，包含256和512个单元。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;输出层分别有1000和10个单元。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;所有的隐层都有&lt;em&gt;tanh &lt;/em&gt;激活单元，而高斯参数层有&lt;em&gt;linear &lt;/em&gt;激活单元。log-variances(&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;对数方差)的建模避免了negative(负)方差的估计。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;联合进行训练，使用Adam随机优化技术[31]将公式5的负条件对数似然最小化，初始学习率为10&lt;sup&gt;-3&lt;/sup&gt;，超参数$\beta _1=0.9$,&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;$\beta _2=0.999$并且$\epsilon =10^{-8}$。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;根据[32]中描述的方法对网络进行初始化，以提高收敛速度。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;为了防止过度拟合，在每个激活层之前应用batch-normalisation(批处理规范化)[33]。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;当验证损失在连续的5个周期内增加时，学习率降低了一半。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;首先，VAE对输入数据x进行50个epoch(周期)的训练。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;然后使用输入x和输出y数据对full(整个)CVAE进行进一步的50个epoch的训练。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;给出最低验证损失的模型用于后续处理。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;将CVAE性能与alternative(选择)SAE、SSAE和PCA DR技术进行了比较。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;根据我们之前的工作[15]，SSAE和SAE设置有一个共同的结构(512、256、10、256、512)隐藏单元。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;这些参数是在我们对[15]的研究基础上选择的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;4.3 权重因子$\alpha $分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;　　由于更好地估计HB分量对ABE性能至关重要，因此潜在表示$z_x$应该包含$y$的信息，因此我们在训练和测试阶段研究了权重因子$\alpha $在reconstruction error(RE)$||y-f(z_y,z_x;\theta_y)||^2$重构误差上的重要性。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;　　&lt;strong&gt;表1&lt;/strong&gt;显示了不同的$\alpha $值在epoch结束时的$D_{KL}$和$RE$值，验证损失最小。$\alpha $&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;值越低，$D_{KL}$值越大，说明approximate posteriorr(近似后验)$q_{\phi_y}(z_y|y)$与prior先验分布$p_{\theta_y}(z_y)=N(0,I)$相差甚远。这一假设是通过在测试过程中比训练过程中观察到更高的REs来证实的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;这是因为解码器$p_{\theta_y}(y|z_x,z_y)$&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;利用测试时从prior(先验)采样的潜在变量$z_y$重建输出$y$，而训练时从approximate(近似)的posterior(后验)采样$z_y$。$\alpha $&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;值越大，$D_{KL}$值越低，说明poatweior distribution(后验分布)越接近prior distribution(先验分布)。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;通过对训练和测试阶段相似REs的观察，证实了这一假设。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;这些发现证实了之前的工作[20]。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;根据验证数据集的REs，本文其余部分报告的所有实验都对应于$\alpha =10$的值。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;span&gt;$\alpha $&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;2&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;5&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;10&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;20&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;30&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;strong&gt;&lt;span&gt;$D_{KL}$训练phase(阶段)&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;0.96&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;0.21&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;3.3e-4&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1.5e-4&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;9.7e-5&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;span&gt;RE训练阶段&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;4.73&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;7.40&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.93&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.97&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.97&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;span&gt;RE测试阶段&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;11.40&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;9.85&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.93&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.97&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.97&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;图1 在训练和测试阶段，权重因素对D&lt;sub&gt;KL&lt;/sub&gt;和RE的影响。验证数据集的结果显示&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;4.4 客观评价&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;　　客观频&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;谱失真测量包括:均方根对数频谱失真(RMS-LSD)、&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;所谓的COSH测度(symmetric version(对称版)的Ikatura-Saito失真)[34]计算的频率范围为3.4-8kHz，并将WB扩展到感知评价语音质量算法[35]。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;后者给出了平均意见得分的客观估计(MOS-LQO&lt;sub&gt;WB&lt;/sub&gt;)。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;结果见&lt;strong&gt;表2&lt;/strong&gt;。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;PCA降维后的ABE性能优于SAE和VAE技术，说明了在特征提取过程中进行监督学习或所谓的discriminative fine tunig(判别微调)的重要性。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;MVN在降低PCA ABE系统性能的同时，显著提高了SAE和SSAE技术的性能。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;CVAE ABE系统是所有系统中性能最好的，有趣的是，无论有没有MVN，性能都是稳定的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;这可能是由于潜在表示的概率学习。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;span&gt;DR方法&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;$d_{RMS-LSD(db)}$(db)&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;$d_{COSH(db)}$&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;MOS-LQO&lt;sub&gt;WB&lt;/sub&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;PCA&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;PCA+MVN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;6.95&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;7.35&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;1.43&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.45&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;3.21&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.14&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SAE&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SAE+MVN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;12.45&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;7.54&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;2.96&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.50&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;1.95&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.03&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;VAE&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;VAE+MVN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;8.64&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;8.60&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;1.67&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.67&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;2.75&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.75&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SSAE&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SSAE+MVN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;10.50&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;6.80&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;2011&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.34&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;2.26&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.28&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;CVAE&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;CVAE+MVN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;6.59&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;6.69&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.31&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.30&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.34&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.31&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;表2 &lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;客观的评估结果。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;RMS-LSD和$d_{COSH}$是$dB$中的距离度量(数值越低表示性能越好)，而MOS-LQO&lt;sub&gt;WB&lt;/sub&gt;值反映质量(数值越大表示性能越好)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;4.5 主观评价&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;　　&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;strong&gt;表3&lt;/strong&gt;以comparison mean-opinion score(比较平均意见评分，CMOS)的形式展示了比较主观听力测试的结果。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;测试由15名听众进行，他们被要求比较使用DT 770 PRO耳机收听的12对语音信号A和B的质量。他们被要求在-3（更差）到3（更好）的范围内对信号A相对于B的质量进行评级，评分&lt;a href=&quot;https://github.com/%20bachhavpramod/bandwidth_extension&quot; target=&quot;_blank&quot;&gt;步骤为1&lt;/a&gt;。所有用于主观测试的语音文件都&lt;a href=&quot;http://audio.eurecom.fr/content/media&quot; target=&quot;_blank&quot;&gt;在线提供2&lt;/a&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;span&gt;比较comparison A--&amp;gt;B&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;span&gt;CMOS&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;CVAE--&amp;gt;NB&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;CVAE--&amp;gt;PCA&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;CVAE--&amp;gt;SSAE+MVN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;CVAE--&amp;gt;WB&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;0.90&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;0.13&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;0.10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;-0.96&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;表3 采用CVAE、SSAE + MVN和PCA DR技术对ABE系统的CMOS进行主观评价。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;　　使用CVAE方法扩展带宽的语音文件质量优于原始NB信号(CMOS为0.90)，但仍低于原始WB信号(CMOS为-0.96)。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;但是，CVAE系统的语音质量要优于CMOS分别为0.13和0.10的其他系统。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;　　&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;条件变分自动编码器(CVAE)是用于生成模型的有向图形模型。本文首次将其应用于计算高效的人工带宽扩展（ABE）中的降维。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;当与标准的ABE回归模型一起使用时，使用该方法生成的概率潜在表示不需要任何后处理，如均值和方差归一化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;本文所报道的ABE系统产生的语音质量显著提高，这一结果得到了客观评价和主观评价的证实。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;改进的原因是利用CVAE对高维谱系数进行了更好的建模。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;7&quot; data-group=&quot;0-7&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;8&quot; data-group=&quot;0-8&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt highlight&quot; data-section=&quot;0&quot; data-sentence=&quot;0&quot; data-group=&quot;0-0&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;1&quot; data-group=&quot;0-1&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;2&quot; data-group=&quot;0-2&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;3&quot; data-group=&quot;0-3&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;4&quot; data-group=&quot;0-4&quot;&gt;&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;5&quot; data-group=&quot;0-5&quot;&gt;至关重要的是，它们是在不增加回归模型复杂性的情况下实现的。&lt;span class=&quot;tgt&quot; data-section=&quot;0&quot; data-sentence=&quot;6&quot; data-group=&quot;0-6&quot;&gt;未来的工作应该将CVAEs与其他生成模型(如对抗性网络)进行比较或结合。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;[1] S. Li, S. Villette, P. Ramadas, and D. J. Sinder, “Speech bandwidth extension using generative adversarial networks,” in 2018 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). IEEE, 2018, pp. 5029–5033.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[2] K.-Y. Park and H. Kim, “Narrowband to wideband conversion of speech using GMM based transformation,” in Proc. of IEEE Int. Conf. on Acoustics, Speech, and Signal Processing(ICASSP), 2000, pp. 1843–1846.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[3] P. Jax and P. Vary, “On artificial bandwidth extension of telephone speech,” Signal Processing, vol. 83, no. 8, pp. 1707–1719, 2003.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[4] K. Li and C.-H. Lee, “A deep neural network approach to speech bandwidth expansion,” in Proc. of IEEE Int. Conf. on Acoustics, Speech and Signal Processing (ICASSP), 2015, pp.4395–4399.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[5] R. Peharz, G. Kapeller, P. Mowlaee, and F. Pernkopf, “Modeling speech with sum-product networks: Application to bandwidth extension,” in Proc. of IEEE Int. Conf. on Acoustics,Speech and Signal Processing, 2014, pp. 3699–3703.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[6] P. Bachhav, M. Todisco, M. Mossi, C. Beaugeant, and N.Evans, “Artificial bandwidth extension using the constant Qtransform,” in Proc. of IEEE Int. Conf. on Acoustics, Speech and Signal Processing (ICASSP), 2017, pp. 5550–5554.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[7] I. Katsir, D. Malah, and I. Cohen, “Evaluation of a speech bandwidth extension algorithm based on vocal tract shape estimation,” in Proc. of Int. Workshop on Acoustic Signal Enhancement (IWAENC). VDE, 2012, pp. 1–4.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[8] Y. Gu, Z.-H. Ling, and L.-R. Dai, “Speech bandwidth extension using bottleneck features and deep recurrent neural networks.,” in Proc. of INTERSPEECH, 2016, pp. 297–301.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[9] Y. Wang, S. Zhao, J. Li, J. Kuang, and Q. Zhu, “Recurrent neural network for spectral mapping in speech bandwidth extension,” in Proc. of IEEE Global Conf. on Signal and Information Processing (GlobalSIP), 2016, pp. 242–246.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[10] B. Liu, J. Tao, Z.Wen, Y. Li, and D. Bukhari, “A novel method of artificial bandwidth extension using deep architecture,” in Sixteenth Annual Conf. of the Int. Speech Communication Association,2015.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[11] J. Abel, M. Strake, and T. Fingscheidt, “Artificial bandwidth extension using deep neural networks for spectral envelope estimation,” in Proc. of Int. Workshop on Acoustic Signal Enhancement (IWAENC). IEEE, 2016, pp. 1–5.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[12] A. Nour-Eldin and P. Kabal, “Objective analysis of the effect of memory inclusion on bandwidth extension of narrowband speech,” in Proc. of INTERSPEECH, 2007, pp. 2489–2492.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[13] A. Nour-Eldin, “Quantifying and exploiting speech memory for the improvement of narrowband speech bandwidth extension,” Ph.D. Thesis, McGill University, Canada, 2013.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[14] P. Bachhav, M. Todisco, and N. Evans, “Exploiting explicit memory inclusion for artificial bandwidth extension,” in Proc.of IEEE Int. Conf. on Acoustics, Speech and Signal Processing(ICASSP), 2018, pp. 5459–5463.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[15] P. Bachhav, M. Todisco, and N. Evans, “Artificial bandwidth extension with memory inclusion using semi-supervised stacked auto-encoders,” in Proc. of INTERSPEECH, 2018, pp.1185–1189.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[16] D. Kingma et al., “Semi-supervised learning with deep generative models,” in Advances in Neural Information Processing Systems, 2014, pp. 3581–3589.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[17] K. Sohn, H. Lee, and X. Yan, “Learning structured output representation using deep conditional generative models,” in Advances in Neural Information Processing Systems, 2015,pp.3483–3491.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[18] X. Yan, J. Yang, K. Sohn, and H. Lee, “Attribute2image: Conditional image generation from visual attributes,” in European Conference on Computer Vision. Springer, 2016, pp. 776–791.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[19] W.-N. Hsu, Y. Zhang, and J. Glass, “Learning latent representations for speech generation and transformation,” INTERSPEECH,2017.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[20] M. Blaauw and J. Bonada, “Modeling and transforming speech using variational autoencoders.,” in INTERSPEECH, 2016, pp.1770–1774.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[21] C.-C. Hsu et al., “Voice conversion from non-parallel corpora using variational auto-encoder,” in Signal and Information Processing Association Annual Summit and Conference (APSIPA),2016 Asia-Pacific. IEEE, 2016, pp. 1–6.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[22] K. Akuzawa, Y. Iwasawa, and Y. Matsuo, “Expressive speechsynthesis via modeling expressions with variational autoencoder,” INTERSPEECH, 2018.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[23] Y. Jung, Y. Kim, Y. Choi, and H. Kim, “Joint learning using denoising variational autoencoders for voice activity detection,”Proc. Interspeech 2018, pp. 1210–1214, 2018.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[24] S. Latif, R. Rana, J. Qadir, and J. Epps, “Variational autoencoders for learning latent representations of speech emotion,”INTERSPEECH, 2018.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[25] L. Pandey, A. Kumar, and V. Namboodiri, “Monoaural audio source separation using variational autoencoders,” Proc. Interspeech 2018, pp. 3489–3493, 2018.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[26] D. Kingma and M. Welling, “Auto-encoding variational bayes,” arXiv preprint arXiv:1312.6114, 2013.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[27] C. Doersch, “Tutorial on variational autoencoders,” arXiv preprint arXiv:1606.05908, 2016.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[28] J. Garofolo, L. Lamel, W. Fisher, J. Fiscus, and D. Pallett, “DARPA TIMIT acoustic-phonetic continous speech corpus CD-ROM. NIST speech disc 1-1.1,” NASA STI/Recon technical report N, vol. 93, 1993.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[29] P. Kabal, “TSP speech database,” McGill University, Database Version : 1.0, pp. 02–10, 2002.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[30] F. Chollet et al., “Keras,” https://github.com/keras-team/keras, 2015.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[31] D. Kingma and J. Ba, “Adam: A method for stochastic optimization,”arXiv preprint arXiv:1412.6980, 2014.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[32] K. He et al., “Delving deep into rectifiers: Surpassing humanlevel performance on imagenet classification,” in Proc. of the IEEE int. conf. on computer vision, 2015, pp. 1026–1034.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[33] S. Ioffe and C. Szegedy, “Batch normalization: Accelerating deep network training by reducing internal covariate shift,” in Int. conf. on machine learning, 2015, pp. 448–456.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[34] R. Gray, A. Buzo, A. Gray, and Y. Matsuyama, “Distortion measures for speech processing,” IEEE Trans. on Acoustics,Speech, and Signal Processing, vol. 28, no. 4, pp. 367–376,1980.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[35] “ITU-T Recommendation P.862.2 : Wideband extension to Recommendation P.862 for the assessment of wideband telephone networks and speech codecs,” ITU, 2005.&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 19 Feb 2020 13:37:00 +0000</pubDate>
<dc:creator>凌逆战</dc:creator>
<og:description>博客作者：凌逆战 论文地址：https://ieeexplore.ieee.xilesou.top/abstract/document/8683611/ 地址：https://www.cnblogs.</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/LXP-Never/p/10714401.html</dc:identifier>
</item>
</channel>
</rss>