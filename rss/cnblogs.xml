<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>HTML5之2D物理引擎 Box2D for javascript Games 系列 翻外篇--如何结合createJS应用box2d.js - 池中物willian</title>
<link>http://www.cnblogs.com/willian/p/10391319.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/willian/p/10391319.html</guid>
<description>&lt;p&gt;太久没有更新了，新年回来工作，突然有收到网友的邮件提问，居然还有人在关注，惭愧，找了下电脑上还有一点儿存着，顺便先发这一个番外篇吧，好歹可以看到真实的效果，等我考完英语，一定会更新下一章，“愤怒的小鸟篇”&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;此篇，并不是书中的篇符，而是通过希望通过结合实际的canvas 绘图库实现box2d物理引擎在各绘图库上应用，绘图库网上有很多现成的&lt;/p&gt;
&lt;p&gt;如：createjs, pixi.js 等，Egret或者其它游戏引擎有自己的物理引擎扩展库，所以就不说了。&lt;/p&gt;
&lt;p&gt;现在通过之前的学习，基本掌握了刚体等基础概念。那如何如何应用于现实画面中呢？&lt;/p&gt;
&lt;p&gt;box2d只是模拟了物体，是虚拟的，如果不是通过debug是看不到任何画面的，要让用户看到画面，必须得结合canvas绘图能力，自己操作canvas绘图的原始API太麻烦，所以就有了createjs等其它流行的canvas库.&lt;/p&gt;
&lt;p&gt;以下都以createJS代替canvas，当然你用其它库或者直接操作canvas也都可以&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;先上效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/405426/201902/405426-20190217151129471-1564337733.png&quot; alt=&quot;&quot; width=&quot;581&quot; height=&quot;437&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;完成代码位于&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/willian12345/Box2D-for-Javascript-Games/blob/master/5-c.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;strong&gt;https://github.com/willian12345/Box2D-for-Javascript-Games/blob/master/5-c.html&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;box2d呈现于createJS，贴上图的基本原理，就是将物理引擎世界中刚体的所有状态复制到createJS舞台对象！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; init() {
         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;   b2Vec2 =&lt;span&gt; Box2D.Common.Math.b2Vec2
            ,  b2AABB &lt;/span&gt;=&lt;span&gt; Box2D.Collision.b2AABB
            ,  b2BodyDef &lt;/span&gt;=&lt;span&gt; Box2D.Dynamics.b2BodyDef
            ,  b2Body &lt;/span&gt;=&lt;span&gt; Box2D.Dynamics.b2Body
            ,  b2FixtureDef &lt;/span&gt;=&lt;span&gt; Box2D.Dynamics.b2FixtureDef
            ,  b2Fixture &lt;/span&gt;=&lt;span&gt; Box2D.Dynamics.b2Fixture
            ,  b2World &lt;/span&gt;=&lt;span&gt; Box2D.Dynamics.b2World
            ,  b2MassData &lt;/span&gt;=&lt;span&gt; Box2D.Collision.Shapes.b2MassData
            ,  b2PolygonShape &lt;/span&gt;=&lt;span&gt; Box2D.Collision.Shapes.b2PolygonShape
            ,  b2CircleShape &lt;/span&gt;=&lt;span&gt; Box2D.Collision.Shapes.b2CircleShape
            ,  b2DebugDraw &lt;/span&gt;=&lt;span&gt; Box2D.Dynamics.b2DebugDraw
            ,  b2MouseJointDef &lt;/span&gt;=&lt;span&gt;  Box2D.Dynamics.Joints.b2MouseJointDef
            ;
         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; worldScale = 30; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; box2d中以米为单位，1米=30像素&lt;/span&gt;
         &lt;span&gt;var&lt;/span&gt; gravity = &lt;span&gt;new&lt;/span&gt; b2Vec2(0, 5&lt;span&gt;);
         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; sleep = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; world;
         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; stage,debug;


         &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; main(){
            stage &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; createjs.Stage(&quot;canvas&quot;&lt;span&gt;);
            debug &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; createjs.Stage(&quot;debug&quot;&lt;span&gt;);

            setupPhysics();

            debugDraw();

            debug.on(&lt;/span&gt;&quot;stagemousedown&quot;&lt;span&gt;, stagemousedown);

            createjs.Ticker.timingMode &lt;/span&gt;=&lt;span&gt; createjs.Ticker.RAF;
            createjs.Ticker.on(&lt;/span&gt;&quot;tick&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
               stage.update();
               world.DrawDebugData(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 为了显示出createjs对象，这里不再绘制box2d对象至canvas&lt;/span&gt;
               world.Step(1/30, 10, 10);//&lt;span&gt; 更新世界模拟
               world.ClearForces(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 清除作用力&lt;/span&gt;
&lt;span&gt;            });
         }
         main();


         &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; Ball(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.view = &lt;span&gt;new&lt;/span&gt; createjs.Bitmap('soccer.png'&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.view.regX = &lt;span&gt;this&lt;/span&gt;.view.regY = 50&lt;span&gt;;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建box2d球形体&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; bodyDef = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; b2BodyDef();
            bodyDef.position.Set(Math.random()&lt;/span&gt;*640 / worldScale, 0/worldScale);
            bodyDef.type =&lt;span&gt; b2Body.b2_dynamicBody
            bodyDef.userData &lt;/span&gt;= 0&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; circleShape = &lt;span&gt;new&lt;/span&gt; b2CircleShape(50 /&lt;span&gt; worldScale);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; fixtureDef = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; b2FixtureDef();
            fixtureDef.shape &lt;/span&gt;=&lt;span&gt; circleShape;
            fixtureDef.density &lt;/span&gt;= 1&lt;span&gt;;
            fixtureDef.restitution &lt;/span&gt;= .4&lt;span&gt;
            fixtureDef.friction &lt;/span&gt;= .5&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.view.body =&lt;span&gt; world.CreateBody(bodyDef);
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.view.body.CreateFixture(fixtureDef);

            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.view.on(&quot;tick&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
               &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 让createjs的bitmap对象实时复制box2d对象的位置与旋转角度&lt;/span&gt;
               &lt;span&gt;this&lt;/span&gt;.x = &lt;span&gt;this&lt;/span&gt;.body.GetPosition().x *&lt;span&gt; worldScale;
               &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.y = &lt;span&gt;this&lt;/span&gt;.body.GetPosition().y *&lt;span&gt; worldScale;
               &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.rotation = &lt;span&gt;this&lt;/span&gt;.body.GetAngle() * (180 /&lt;span&gt; Math.PI);
            });
         }
         
         &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; setupPhysics(){
            world &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; b2World(&lt;span&gt;new&lt;/span&gt; b2Vec2(0, 50), &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            floor();  
         }

         &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; stagemousedown(){
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; b = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Ball();
            stage.addChild(b.view); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 将产生的createjs对象添加至舞台上&lt;/span&gt;
&lt;span&gt;         }

         &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; floor(){
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bodyDef = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; b2BodyDef();
            bodyDef.position.Set(&lt;/span&gt;320/worldScale, 465/&lt;span&gt;worldScale);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; polygonShape = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; b2PolygonShape();
            polygonShape.SetAsBox(&lt;/span&gt;320/worldScale, 15/&lt;span&gt;worldScale);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; fixtureDef = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; b2FixtureDef();
            fixtureDef.shape &lt;/span&gt;=&lt;span&gt; polygonShape;
            fixtureDef.restitution &lt;/span&gt;= .4&lt;span&gt;;
            fixtureDef.friction &lt;/span&gt;= .5&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; theFloor =&lt;span&gt; world.CreateBody(bodyDef);
            theFloor.CreateFixture(fixtureDef);
         }

         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;setup debug draw&lt;/span&gt;
         &lt;span&gt;function&lt;/span&gt;&lt;span&gt; debugDraw(){
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; debugDraw = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; b2DebugDraw();
            debugDraw.SetSprite(debug.canvas.getContext(&lt;/span&gt;'2d'&lt;span&gt;));
            debugDraw.SetDrawScale(worldScale);
            debugDraw.SetFillAlpha(&lt;/span&gt;0.5&lt;span&gt;);
            debugDraw.SetFlags(b2DebugDraw.e_shapeBit &lt;/span&gt;|&lt;span&gt; b2DebugDraw.e_jointBit);
            world.SetDebugDraw(debugDraw);
         }
      };&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这一句&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;this&lt;/span&gt;.view = &lt;span&gt;new&lt;/span&gt; createjs.Bitmap('soccer.png');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过createjs的Bitmap对象读取图片，创建一个足球&lt;/p&gt;
&lt;p&gt;this.view这个显示对象即createjs的Bitmap对象，用于显示在舞台即canvas上&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;this&lt;/span&gt;.view.on(&quot;tick&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
               &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 让createjs的bitmap对象实时复制box2d对象的位置与旋转角度&lt;/span&gt;
               &lt;span&gt;this&lt;/span&gt;.x = &lt;span&gt;this&lt;/span&gt;.body.GetPosition().x *&lt;span&gt; worldScale;
               &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.y = &lt;span&gt;this&lt;/span&gt;.body.GetPosition().y *&lt;span&gt; worldScale;
               &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.rotation = &lt;span&gt;this&lt;/span&gt;.body.GetAngle() * (180 /&lt;span&gt; Math.PI);
            });&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在Bitmap对象上侦听tick事件，tick事件可以理解为FLASH中的ENTER_FRAME事件，即每一帧调用一次，在每帧中将刚体的x,y位置属性与角度属性复制到createJS的显示对象上，就完成了结合&lt;/p&gt;

&lt;p&gt;注释掉这一句，就可以隐藏掉box2Djs的调试状态变成一个正常的带物理效果的足球了&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
// debugDraw();
&lt;/pre&gt;&lt;/div&gt;

&lt;hr/&gt;
&lt;p&gt;更多关于createJS请至官网或者搜索相关知识，你也完成可以用其它绘图库完成一样的操作，比如Pixi.js&lt;/p&gt;
&lt;p&gt;相关系列：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;a title=&quot;发布于2016-05-10 15:10&quot; href=&quot;https://www.cnblogs.com/willian/p/5477922.html&quot;&gt;HTML5之2D物理引擎 Box2D for javascript Games 系列 第一部分&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;注：转载请注明出处博客园：sheldon(willian12345@126.com)&lt;/p&gt;
&lt;p&gt;https://github.com/willian12345&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 07:18:00 +0000</pubDate>
<dc:creator>池中物willian</dc:creator>
<og:description>太久没有更新了，新年回来工作，突然有收到网友的邮件提问，居然还有人在关注，惭愧，找了下电脑上还有一点儿存着，顺便先发这一个番外篇吧，好歹可以看到真实的效果，等我考完英语，一定会更新下一章，“愤怒的小</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/willian/p/10391319.html</dc:identifier>
</item>
<item>
<title>#1   Python灵活技巧 - MinuteSheep</title>
<link>http://www.cnblogs.com/minutesheep/p/10390481.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/minutesheep/p/10390481.html</guid>
<description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;Python基础系列博文已顺利结束，从这一篇开始将进入探索更加高级的Python用法，Python进阶系列文章将包含面向对象、网络编程、GUI编程、线程和进程、连接数据库等。不过在进阶之前，先来熟练使用一些Python的小技巧，这就好像操作系统的快捷键一样，熟练掌握这些小技巧会让你工作起来事半功倍，话不多说，盘它！&lt;/p&gt;
&lt;h3&gt;Python常用技巧&lt;/h3&gt;
&lt;h4&gt;技巧一：加速pip安装&lt;/h4&gt;
&lt;p&gt;使用pip安装第三方模块时，网速总是很慢，这是因为pip的镜像源在国外，如果换成国内稳定的镜像源速度将会飞起，这里推荐豆瓣的镜像源&lt;/p&gt;
&lt;p&gt;「本次安装时更改为豆瓣镜像源，使用 -i 指定镜像源」&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pip &lt;span&gt;install&lt;/span&gt; -i https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;pypi.douban.com/simple 模块&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;「永久更改为豆瓣镜像源，推荐」&lt;/p&gt;
&lt;p&gt;Linux/macOS平台：&lt;/p&gt;
&lt;p&gt;修改pip的配置文件，文件位置～/.pip/.pip.conf（如果没有自己创建即可），将其改为如下内容保存：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[global]
index&lt;/span&gt;-url = https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;pypi.douban.com/simple&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows平台：&lt;/p&gt;
&lt;p&gt;打开资源管理器，在地址栏输入%appdata%后回车，在此位置新建pip文件夹，进入pip文件夹，新建pip.ini文件，鼠标右键用记事本打开，输入如下内容保存：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[global]
index&lt;/span&gt;-url = https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;pypi.douban.com/simple&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;技巧二：pip命令补全&lt;/h4&gt;
&lt;p&gt;pip命令可以想Linux命令一样使用tab键补全，只需运行如下命令即可：&lt;/p&gt;
&lt;p&gt;Linux/macOS平台：&lt;/p&gt;
&lt;p&gt;「bash用户」&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$ pip completion -b &amp;gt;&amp;gt; ~/.profile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;「zsh用户」&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$ pip completion -z &amp;gt;&amp;gt; ~/.zshrc
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;技巧三：pip批量安装模块&lt;/h4&gt;
&lt;p&gt;有时一个Python项目需要用到大量第三方模块，手动使用pip一条一条安装是不现实的，这时就要使用批量安装了，将需要的模块写入requirements.text文件中，一个模块占用一行，模块名必须有，版本号可有可无（通常项目开发者会创建这个文件，方便其他使用者安装模块），这时使用pip批量安装即可：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$ pip &lt;span&gt;install&lt;/span&gt; -r requirements.text
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;技巧四：检测模块是否正确安装&lt;/h4&gt;
&lt;p&gt;当我们安装了一个第三方模块时，第一步总是要检测其是否正确安装，通常做法是打开python交互界面，输入 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;import&lt;/span&gt; 模块&lt;/span&gt; 回车后如果不抛出异常则证明成功安装，否则安装失败。这种方法应对一两个模块还行，但是如果需要检测上百个模块怎么办？这时就需要命令方式来检测了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
$ python -c &lt;span&gt;'&lt;/span&gt;&lt;span&gt;import jieba&lt;/span&gt;&lt;span&gt;'     # jieba模块已经正确安装，不会返回任何信息&lt;/span&gt;&lt;span&gt;
$ python &lt;/span&gt;-c &lt;span&gt;'&lt;/span&gt;&lt;span&gt;import flask&lt;/span&gt;&lt;span&gt;'     # flask模块没有安装，抛出异常&lt;/span&gt;&lt;span&gt;
Traceback (most recent call &lt;/span&gt;&lt;span&gt;last&lt;/span&gt;&lt;span&gt;):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;span&gt;
ImportError: No module named &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;flask&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用这种命令的方式可以大大的提高检测效率，只需要编写一个Shell或者Python脚本就可以实现了&lt;/p&gt;
&lt;h4&gt;技巧五：快速将json字符串转换为字典格式&lt;/h4&gt;
&lt;p&gt;有时需要将一个json字符串转换为字典，但是又不想新建Python文件导入json模块，那怎么办呢？快洗洗睡哇！！！其实还真有办法，那就是使用json.tool在命令行直接解析：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{&quot;name&quot;: &quot;MinuteSheep&quot;, &quot;age&quot;: 99, &quot;gender&quot;: &quot;male&quot;}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | python -&lt;span&gt;m json.tool

{
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MinuteSheep&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;99&lt;/span&gt;&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;gender&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;male&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到非常方便，连格式都自动格式化了&lt;/p&gt;
&lt;h4&gt;技巧六：秒开下载服务器&lt;/h4&gt;
&lt;p&gt;日常生活中，经常要拷贝和被拷贝同学或者同事的文件，要么用U盘，要么登录QQ，总感觉很烦！！！此时，使用Python秒开一个下载服务器将会解决你的所有烦恼，尤其是对于在同一个网络环境下的用户。将需要传给同事的文件拷贝到一个文件夹，之后在这个文件夹中输入如下命令：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$ python -&lt;span&gt;m http.server
Serving HTTP on &lt;/span&gt;&lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt; port &lt;span&gt;8000&lt;/span&gt; ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这时候在同一个网络下的用户便可以用浏览器访问这个目录了（访问方法：假如我的IP地址为123.123.123.123，其他用户只需在浏览器地址栏输入：123.123.123.123:8000）点击文件下载即可，超方便有没有，这该死的无处安放的魅力啊～&lt;/p&gt;
&lt;h4&gt;技巧七：同时遍历多个可迭代对象&lt;/h4&gt;
&lt;p&gt;有时在处理数据的时候，经常出现这种情况：名字有一个单独的列表，性别有一个单独的列表，年龄有一个单独的列表，当你想一一对应的时候，一定会尝试这样做：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
In [1]: name = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;aa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;bb&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;cc&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;dd&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ff&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

In [&lt;/span&gt;2]: age = [12,13,14,15,14&lt;span&gt;]

In [&lt;/span&gt;3]: gender = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

In [&lt;/span&gt;4]: &lt;span&gt;for&lt;/span&gt; n,a,g &lt;span&gt;in&lt;/span&gt;&lt;span&gt; name,age,gender:
   ...:     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(n,a,g)
   ...:
&lt;/span&gt;---------------------------------------------------------------------------&lt;span&gt;
ValueError                                Traceback (most recent call last)
&lt;/span&gt;&amp;lt;ipython-input-4-c3abaee834b9&amp;gt; &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
----&amp;gt; 1 &lt;span&gt;for&lt;/span&gt; n,a,g &lt;span&gt;in&lt;/span&gt;&lt;span&gt; name,age,gender:
      &lt;/span&gt;2     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(n,a,g)
      &lt;/span&gt;3&lt;span&gt;

ValueError: too many values to unpack (expected &lt;/span&gt;3&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 可以看到抛出参数过多异常，列表不能迭代超过一个🙉🙉🙉🙉🙉&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这时就要使用内置函数zip，缝合它！&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
In [1]: name = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;aa&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;bb&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;cc&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;dd&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ff&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

In [&lt;/span&gt;2]: age = [12,13,14,15,14&lt;span&gt;]

In [&lt;/span&gt;3]: gender = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

In [&lt;/span&gt;5]: &lt;span&gt;for&lt;/span&gt; n,a,g &lt;span&gt;in&lt;/span&gt;&lt;span&gt; zip(name,age,gender):
   ...:     &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(n,a,g)
   ...:
aa &lt;/span&gt;12&lt;span&gt; m
bb &lt;/span&gt;13&lt;span&gt; f
cc &lt;/span&gt;14&lt;span&gt; m
dd &lt;/span&gt;15&lt;span&gt; f
ff &lt;/span&gt;14&lt;span&gt; f

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 正确！🙊🙊🙊🙊🙊&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;技巧八：批量将字符串格式转换为数字格式&lt;/h4&gt;
&lt;p&gt;假如你有一个列表&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
num = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;34.7&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在需要将列表里的元素转换为数字格式进行计算，要怎么办呢？烦sky人～～这样干：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
In [21]: num = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;34.7&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]   &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 元素为字符串型&lt;/span&gt;
&lt;span&gt;
In [&lt;/span&gt;22]: num = list(map(float, num))   &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 使用内置函数map返回一个map对象，再用list将其转换为列表&lt;/span&gt;
&lt;span&gt;
In [&lt;/span&gt;23]: num   &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 元素变为浮点型&lt;/span&gt;
Out[23]: [1.0, 23.4, 34.7, 12.0]
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 17 Feb 2019 07:12:00 +0000</pubDate>
<dc:creator>MinuteSheep</dc:creator>
<og:description>本篇博文主要记录Python中常用的技巧，大大提高工作效率，达到事半功倍的效果</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/minutesheep/p/10390481.html</dc:identifier>
</item>
<item>
<title>hadoop运维笔记 - guoew</title>
<link>http://www.cnblogs.com/guoew/p/10391005.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/guoew/p/10391005.html</guid>
<description>&lt;h2 id=&quot;一.-故障处理部分&quot;&gt;一. 故障处理部分&lt;/h2&gt;
&lt;h3 id=&quot;spark提交任务报错java.lang.noclassdeffounderror-comalibabafastjsonjson&quot;&gt;1.1. spark提交任务报错java.lang.NoClassDefFoundError: com/alibaba/fastjson/JSON  &lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;报错原因：&lt;/strong&gt; 在运行环境没有找到fastjson的依赖库&lt;br/&gt;&lt;strong&gt;解决方法：&lt;/strong&gt; 在SPARK_HOME/jars/ 添加fastjson-VERSION.jar包。 例如我的环境下SPARK_HOME是/usr/local/service/spark/。&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ ls $SPARK_HOME/jars/fast*
/usr/local/service/spark/jars/fastjson-1.2.12.jar&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;跨hdfs集群hdfs属主用户不同传输文件没有权限的问题&quot;&gt;1.2.  跨HDFS集群、HDFS属主用户不同，传输文件没有权限的问题&lt;/h3&gt;
&lt;p&gt;这个问题衍生出两件事，把这两件事处理完问题即可解决。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;不同集群间解析&lt;/li&gt;
&lt;li&gt;不同集群属主&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;先看一下不同集群间解析。要想跨集群传输文件，首先得确定集群相互&quot;认识&quot;，即集群间确定通过ip或者hostname可达。在ip可达的前提下，我们判断集群间是否&quot;认识&quot;，则需要检查hdfs-site.xml中dfs.namenode.datanode.registration.ip-hostname-check这项配置。它表示是否将ip反向解析成主机名，默认为true。如果未设置这一项，则需要对/etc/hosts添加主机解析，对于HDFS这种规模性集群来说，这很显然是比较繁琐的。&lt;/p&gt;
&lt;p&gt;对于不同集群属主来说，可以通过修改被传文件权限或通过添加用户、附加组使用户获得文件的读取权限。&lt;/p&gt;
&lt;h3 id=&quot;hdfs中hdfshosts直接使用ip遇到的问题&quot;&gt;1.3 HDFS中hdfshosts直接使用ip遇到的问题&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;故障描述：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;在hdfs web页面显示dn全部dead&lt;/li&gt;
&lt;li&gt;strace 追踪dn进程，发现连接nn超时&lt;/li&gt;
&lt;li&gt;查看dn日志报错如下：&lt;/li&gt;
&lt;/ol&gt;&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;18/11/27 22:53:00 ERROR datanode.DataNode: Initialization failed for Block pool BP-958982478-10.0.220.44-1543329751956 (Datanode Uuid null) service to /10.0.220.44:9100 Datanode denied communication with namenode because hostname cannot be resolved (ip=10.0.220.48, hostname=10.0.220.48): DatanodeRegistration(0.0.0.0:50010, datanodeUuid=1e26933b-35a3-4d3f-8c5f-3ab03f10ca62, infoPort=50075, infoSecurePort=0, ipcPort=50020, storageInfo=lv=-56;cid=CID-1f213b85-b28c-4824-a44c-813c95ce7ecc;nsid=1612667934;c=0)
        at org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager.registerDatanode(DatanodeManager.java:852)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.registerDatanode(FSNamesystem.java:4486)
        at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.registerDatanode(NameNodeRpcServer.java:1286)
        at org.apache.hadoop.hdfs.protocolPB.DatanodeProtocolServerSideTranslatorPB.registerDatanode(DatanodeProtocolServerSideTranslatorPB.java:96)
        at org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos$DatanodeProtocolService$2.callBlockingMethod(DatanodeProtocolProtos.java:28752)
        at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:616)
        at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:982)
        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2217)
        at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2213)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:422)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1758)
        at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2213)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;问题分析：&lt;/strong&gt;&lt;br/&gt;首先想到的就是NN与DN通信出现了问题。但是如题所述&quot;直接使用ip&quot;，也就是说不在/etc/hosts做任何配置的前提下能正常工作。这时就需要考虑怎样在hdfs的配置里面能够使DN直接通过ip来访问NN，即禁用对DN的ip做反向域名解析。&lt;br/&gt;&lt;strong&gt;解决方法:&lt;/strong&gt;&lt;br/&gt;在NameNode节点 的 hdfs-site.xml添加如下内容&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;dfs.namenode.datanode.registration.ip-hostname-check&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;ambari-hive-server2启动失败&quot;&gt;1.4 ambari hive server2启动失败。&lt;/h3&gt;
&lt;p&gt;报错日志如下&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;Caused by: java.sql.SQLException: Access denied for user 'hive'@'xx.xx.xx.xx'(using password: YES)
        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
        at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4187)
        at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4119)
        at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:927)
        at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1709)
        at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1252)
        at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2488)
        at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2521)
        at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2306)
        at com.mysql.jdbc.ConnectionImpl.&amp;lt;init&amp;gt;(ConnectionImpl.java:839)
        at com.mysql.jdbc.JDBC4Connection.&amp;lt;init&amp;gt;(JDBC4Connection.java:49)
        at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
        at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
        at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:421)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:350)
        at java.sql.DriverManager.getConnection(DriverManager.java:664)
        at java.sql.DriverManager.getConnection(DriverManager.java:208)
        at com.jolbox.bonecp.BoneCP.obtainRawInternalConnection(BoneCP.java:361)
        at com.jolbox.bonecp.BoneCP.&amp;lt;init&amp;gt;(BoneCP.java:416)
        ... 71 more&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;手动连接mysql依然连接不上，检查发现连接权限不够，重新授权后，启动成功。&lt;/p&gt;

&lt;p&gt;在生产环境中可能会遇到退役(下线)服务器需求，对于计算节点来说强制下线节点影响的只是task作业，但是对于HDFS来说，就会出现数据丢失的风险。当然hadoop也提供了平滑下线的机制。&lt;/p&gt;
&lt;h3 id=&quot;退役datanode&quot;&gt;2.1 退役DataNode&lt;/h3&gt;
&lt;p&gt;2.1.1 在namenode节点hdfs-site.xml中增加配置,PATH路径根据自己实际情况进行修改&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;&amp;lt;property&amp;gt;
       &amp;lt;name&amp;gt;dfs.hosts.exclude&amp;lt;/name&amp;gt;
       &amp;lt;value&amp;gt;/usr/local/service/hadoop/etc/hadoop/hdfsexcludedhosts&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.1.2 在相关文件中添加需要退役的主机&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ cat  /usr/local/service/hadoop/etc/hadoop/hdfsexcludedhosts
10.0.0.1
10.0.0.2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.1.3 在NameNode 运行以下命令，将经过审核的DataNode更新至NameNode&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ hdfs dfsadmin -refreshNodes&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.1.4 查看下线情况&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;hdfs dfsadmin -report &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Decomissioning标记的即为正在下线的DataNode，hadoop集群会将下线的DataNode数据块复制到其他节点。&lt;br/&gt;复制完成之后会变成Decommission Status : Decommissioned。&lt;br/&gt;2.1.5 下线完成后，清空/usr/local/service/hadoop/etc/hadoop/hdfsexcludedhosts 文件&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ &amp;gt; /usr/local/service/hadoop/etc/hadoop/hdfsexcludedhosts&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 如果hadoop集群为HA，则需要在2个主控节点做相同操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;退役nodemanager-节点&quot;&gt;2.2 退役NodeManager 节点&lt;/h3&gt;
&lt;p&gt;2.2.1 在RM(ResourceManager)节点yarn-site.xml中增加配置,PATH路径根据自己实际情况进行修改&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;&amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.resourcemanager.nodes.exclude-path&amp;lt;/name&amp;gt;
       &amp;lt;value&amp;gt;/usr/local/service/hadoop/etc/hadoop/yarnexcludedhosts&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.2.2 在相关文件中添加需要退役的主机&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ cat  /usr/local/service/hadoop/etc/hadoop/yarnexcludedhosts
10.0.0.1
10.0.0.2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.2.3 在RM节点 运行以下命令，将经过审核的NodeManager更新至RM&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ yarn rmadmin -refreshNodes&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.2.4 下线完成后，在nodes include文件中去掉下线的机器,并清空exclude 文件&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;#yarn-site.xml 中nodes include 配置路径，路径根据自己实际情况
&amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.resourcemanager.nodes.include-path&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;/usr/local/service/hadoop/etc/hadoop/yarnhosts&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 hadoop]$ &amp;gt; /usr/local/service/hadoop/etc/hadoop/yarnexcludedhosts&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 如果hadoop集群为HA，则需要在2个主控节点做相同操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;上线datanode节点&quot;&gt;2.3 上线DataNode节点&lt;/h3&gt;
&lt;p&gt;2.3.1 修改dfs.hosts对应配置文件,添加需要上线的机器&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ cat /usr/local/service/hadoop/etc/hadoop/hdfshosts
10.0.100.53
10.0.100.52&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.3.2 在NameNode节点运行以下命令，将经过审核的datanode更新至namenode&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ hdfs dfsadmin -refreshNodes&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.3.3 检查是否上线成功&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;hdfs dfsadmin -report &lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 如果hadoop集群为HA，则需要在2个主控节点做相同操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;上线nodemanager节点&quot;&gt;2.4 上线NodeManager节点&lt;/h3&gt;
&lt;p&gt;2.4.1 在nodes include文件中添加需要上线的机器&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;#yarn-site.xml 中nodes include 配置路径，路径根据自己实际情况
&amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.resourcemanager.nodes.include-path&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;/usr/local/service/hadoop/etc/hadoop/yarnhosts&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ cat /usr/local/service/hadoop/etc/hadoop/yarnhosts 
10.0.100.53 
10.0.100.52&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.4.2 在RM节点 运行以下命令，将经过审核的NodeManager更新至RM&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[hadoop@10 ~]$ yarn rmadmin -refreshNodes&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 如果hadoop集群为HA，则需要在2个主控节点做相同操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;&lt;p&gt;致谢：&lt;a href=&quot;https://blog.csdn.net/yangjjuan/article/details/71248626&quot;&gt;Hadoop 委任和解除节点&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 06:13:00 +0000</pubDate>
<dc:creator>guoew</dc:creator>
<og:description>一. 故障处理部分 1.1. spark提交任务报错java.lang.NoClassDefFoundError: com/alibaba/fastjson/JSON 报错原因： 在运行环境没有找到f</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/guoew/p/10391005.html</dc:identifier>
</item>
<item>
<title>ASP.NET Core 打造一个简单的图书馆管理系统 (修正版)（六）学生借阅/预约/查询书籍事务 - NanaseRuri</title>
<link>http://www.cnblogs.com/gokoururi/p/10390901.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gokoururi/p/10390901.html</guid>
<description>

&lt;p&gt;&lt;strong&gt;前言：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本系列文章主要为我之前所学知识的一次微小的实践，以我学校图书馆管理系统为雏形所作。&lt;/p&gt;
&lt;p&gt;本系列文章主要参考资料：&lt;/p&gt;
&lt;p&gt;微软文档：https://docs.microsoft.com/zh-cn/aspnet/core/getting-started/?view=aspnetcore-2.1&amp;amp;tabs=windows&lt;/p&gt;
&lt;p&gt;《Pro ASP.NET MVC 5》、《锋利的 jQuery》&lt;/p&gt;

&lt;p&gt;此系列皆使用 VS2017+C# 作为开发环境。如果有什么问题或者意见欢迎在留言区进行留言。 &lt;/p&gt;
&lt;p&gt;项目 github 地址：&lt;a href=&quot;https://github.com/NanaseRuri/LibraryDemo&quot; target=&quot;_blank&quot;&gt;https://github.com/NanaseRuri/LibraryDemo&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;本章内容&lt;/strong&gt;：自定义布局页、自定义 EditorFor 模板、EF 多对多数据的更新&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、自定义布局页 &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在 ASP.NET 中，默认将 HTML 页面的 body 元素一部分抽出来，该部分称作 RenderBody ；然后将这部分放到一个布局即大体页面框架中即可完成对同一系列的页面进行精简的布局实现。&lt;/p&gt;
&lt;p&gt;默认布局页为 _Layout.cshtml，可在视图文件夹中根目录或各个控制器视图目录的 _ViewStart.cshtml 修改默认布局页，或者在每个 Razor 页面的开头中指定布局页：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt; @{
     ViewData[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EditLendingInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
     Layout &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;_LendingLayout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
 }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;之前一直使用的是 VS 的默认布局页，现在以该默认布局页为基础，添加自己所需要的信息：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('edd5374a-86ee-41ba-a070-b23ae4099595')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_edd5374a-86ee-41ba-a070-b23ae4099595&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_edd5374a-86ee-41ba-a070-b23ae4099595&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('edd5374a-86ee-41ba-a070-b23ae4099595',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_edd5374a-86ee-41ba-a070-b23ae4099595&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;@using Microsoft.AspNetCore.Http.Extensions
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;@using Microsoft.AspNetCore.Authorization
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;@inject IAuthorizationService AuthorizationService
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt;  5&lt;/span&gt; &amp;lt;html&amp;gt;
&lt;span&gt;  6&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt;  7&lt;/span&gt;     &amp;lt;meta charset=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt;  8&lt;/span&gt;     &amp;lt;meta name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;viewport&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; content=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;width=device-width, initial-scale=1.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt;  9&lt;/span&gt;     &amp;lt;title&amp;gt;@ViewData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] - LibraryDemo&amp;lt;/title&amp;gt;
&lt;span&gt; 10&lt;/span&gt;     &amp;lt;environment include=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Development&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 11&lt;/span&gt;         &amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/lib/bootstrap/dist/css/bootstrap.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt; 12&lt;/span&gt;         &amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/css/site.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt; 13&lt;/span&gt;     &amp;lt;/environment&amp;gt;
&lt;span&gt; 14&lt;/span&gt;     &amp;lt;environment exclude=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Development&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 15&lt;/span&gt;         &amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt;               asp-fallback-href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/lib/bootstrap/dist/css/bootstrap.min.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;               asp-fallback-test-&lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sr-only&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-fallback-test-property=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-fallback-test-value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;absolute&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt; 18&lt;/span&gt;         &amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/css/site.min.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-append-version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt; 19&lt;/span&gt;     &amp;lt;/environment&amp;gt;
&lt;span&gt; 20&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt; 21&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt; 22&lt;/span&gt;     &amp;lt;nav &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;navbar navbar-inverse navbar-fixed-top&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 23&lt;/span&gt;         &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;container&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 24&lt;/span&gt;             &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;navbar-header&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 25&lt;/span&gt;                 &amp;lt;button type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;navbar-toggle&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; data-toggle=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;collapse&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; data-target=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.navbar-collapse&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 26&lt;/span&gt;                     &amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sr-only&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
&lt;span&gt; 27&lt;/span&gt;                     &amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;icon-bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt; 28&lt;/span&gt;                     &amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;icon-bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt; 29&lt;/span&gt;                     &amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;icon-bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt; 30&lt;/span&gt;                 &amp;lt;/button&amp;gt;
&lt;span&gt; 31&lt;/span&gt;                 &amp;lt;a asp-area=&lt;span&gt;&quot;&quot;&lt;/span&gt; asp-controller=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BookInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;navbar-brand&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;LibraryDemo&amp;lt;/a&amp;gt;
&lt;span&gt; 32&lt;/span&gt;             &amp;lt;/div&amp;gt;
&lt;span&gt; 33&lt;/span&gt;             &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;navbar-collapse collapse&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 34&lt;/span&gt;                 &amp;lt;ul &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;nav navbar-nav&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 35&lt;/span&gt;                     &amp;lt;li&amp;gt;&amp;lt;a asp-area=&lt;span&gt;&quot;&quot;&lt;/span&gt; asp-controller=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BookInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;首页&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt; 36&lt;/span&gt;                     &amp;lt;li&amp;gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;                        @if (User.Identity.IsAuthenticated)
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;                        {
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;                             &amp;lt;a asp-controller=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BookInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;@User.Identity.Name&amp;lt;/a&amp;gt;
&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;                         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;                        {
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;                             &amp;lt;a asp-area=&lt;span&gt;&quot;&quot;&lt;/span&gt; asp-controller=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StudentAccount&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt;                                asp-route-returnUrl=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@(Context.Request.GetDisplayUrl())&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;登录&amp;lt;/a&amp;gt;
&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;                     &amp;lt;/li&amp;gt;
&lt;span&gt; 47&lt;/span&gt;                     &amp;lt;li&amp;gt;&amp;lt;a asp-area=&lt;span&gt;&quot;&quot;&lt;/span&gt; asp-controller=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BookInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Recommend&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;推荐图书&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt; 48&lt;/span&gt;                     &amp;lt;li&amp;gt;&amp;lt;a href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mailto:Nanase@cnblogs.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;联系我们&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;                    @if (User.Identity.IsAuthenticated)
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;                         &amp;lt;li&amp;gt;
&lt;span&gt; 52&lt;/span&gt;                             &amp;lt;a asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Logout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-controller=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StudentAccount&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-route-returnUrl=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@(Context.Request.GetDisplayUrl())&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;注销&amp;lt;/a&amp;gt;
&lt;span&gt; 53&lt;/span&gt;                         &amp;lt;/li&amp;gt;
&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;                 &amp;lt;/ul&amp;gt;
&lt;span&gt; 56&lt;/span&gt;             &amp;lt;/div&amp;gt;
&lt;span&gt; 57&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt; 58&lt;/span&gt;     &amp;lt;/nav&amp;gt;
&lt;span&gt; 59&lt;/span&gt; &amp;lt;div align=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 60&lt;/span&gt;     &amp;lt;br /&amp;gt;
&lt;span&gt; 61&lt;/span&gt;     &amp;lt;form action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Url.Action(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;Search&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;BookInfo&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 62&lt;/span&gt;         @Html.DropDownList(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;keyword&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; List&amp;lt;SelectListItem&amp;gt;&lt;span&gt;()
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;             &lt;span&gt;new&lt;/span&gt; SelectListItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;书名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;             &lt;span&gt;new&lt;/span&gt; SelectListItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ISBN&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ISBN&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;             &lt;span&gt;new&lt;/span&gt; SelectListItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;索书号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;FetchBookNumber&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;        })
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;         &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt; 69&lt;/span&gt;         &amp;lt;button type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;glyphicon glyphicon-search&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
&lt;span&gt; 70&lt;/span&gt;     &amp;lt;/form&amp;gt;
&lt;span&gt; 71&lt;/span&gt; 
&lt;span&gt; 72&lt;/span&gt;     @if (TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;         &amp;lt;br/&amp;gt;
&lt;span&gt; 75&lt;/span&gt;         &amp;lt;p &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text-success&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;@TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;]&amp;lt;/p&amp;gt;
&lt;span&gt; 76&lt;/span&gt;         &amp;lt;br/&amp;gt;
&lt;span&gt; 77&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &amp;lt;/div&amp;gt;
&lt;span&gt; 79&lt;/span&gt;     &amp;lt;&lt;span&gt;partial&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;_CookieConsentPartial&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt; 80&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;container body-content&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;        @RenderBody()
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         &amp;lt;hr /&amp;gt;
&lt;span&gt; 84&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt; 85&lt;/span&gt; 
&lt;span&gt; 86&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;container&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin-top: 20px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 87&lt;/span&gt;         &amp;lt;footer&amp;gt;
&lt;span&gt; 88&lt;/span&gt;             &amp;lt;p&amp;gt;&amp;amp;copy; &lt;span&gt;2018&lt;/span&gt; - LibraryDemo&amp;lt;/p&amp;gt;
&lt;span&gt; 89&lt;/span&gt;         &amp;lt;/footer&amp;gt;
&lt;span&gt; 90&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt; 91&lt;/span&gt;     &amp;lt;environment include=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Development&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 92&lt;/span&gt;         &amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/lib/jquery/dist/jquery.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt; 93&lt;/span&gt;         &amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/lib/bootstrap/dist/js/bootstrap.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt; 94&lt;/span&gt;         &amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/js/site.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-append-version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt; 95&lt;/span&gt;     &amp;lt;/environment&amp;gt;
&lt;span&gt; 96&lt;/span&gt;     &amp;lt;environment exclude=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Development&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 97&lt;/span&gt;         &amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.3.1.min.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt;                 asp-fallback-src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/lib/jquery/dist/jquery.min.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;                 asp-fallback-test=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;window.jQuery&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt;                 crossorigin=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;anonymous&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;101&lt;/span&gt;                 integrity=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;102&lt;/span&gt;         &amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;                 asp-fallback-src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/lib/bootstrap/dist/js/bootstrap.min.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt;                 asp-fallback-test=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;window.jQuery &amp;amp;&amp;amp; window.jQuery.fn &amp;amp;&amp;amp; window.jQuery.fn.modal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt;                 crossorigin=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;anonymous&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt;                 integrity=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;107&lt;/span&gt;         &amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/js/site.min.js&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; asp-append-version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;108&lt;/span&gt;     &amp;lt;/environment&amp;gt;
&lt;span&gt;109&lt;/span&gt;     @RenderSection(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Scripts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, required: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;111&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt; 现在大体框架：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190217133807605-2108721354.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205165054859-264731418.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;除了默认的 RenderBody 外，可以指定特定的部分放在页面的不同地方，在布局页中使用@RenderSection(&quot;SectionName&quot;)：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 @RenderSection(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;SectionName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;且在视图页中使用指定特定的节@section SectionName{　　};&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt; @section SectionName{　
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;  
&lt;span&gt;3&lt;/span&gt;  　};
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;则该视图页中的 SectionName 部分会被提取出来放到布局页对应的位置。&lt;/p&gt;




&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、管理员编辑借阅信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;动作方法：&lt;/p&gt;
&lt;p&gt;在此对数据库的表格使用 Include 方法使 EF 应用其导航属性以获得 KeepingBooks 列表，否则使用 Student 对象 KeepingBooks 属性只会返回空。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;         [Authorize(Roles = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; IActionResult EditLendingInfo(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; barcode)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (barcode == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BookDetails&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             Book book = _lendingInfoDbContext.Books.FirstOrDefault(b =&amp;gt; b.BarCode ==&lt;span&gt; barcode);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        [HttpPost]
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         [Authorize(Roles = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        [ValidateAntiForgeryToken]
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; EditLendingInfo([Bind(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BarCode,ISBN,BorrowTime,KeeperId,AppointedLatestTime,State&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]Book book)
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (ModelState.IsValid)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (book.BorrowTime &amp;gt;&lt;span&gt; DateTime.Now)
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                     ModelState.AddModelError(&lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请检查外借时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (book.AppointedLatestTime.HasValue)
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (book.AppointedLatestTime &amp;lt;&lt;span&gt; DateTime.Now)
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                         ModelState.AddModelError(&lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请检查预约时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (book.KeeperId == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                         ModelState.AddModelError(&lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;不存在该学生&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;                 StudentInfo student = &lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.Students.Include(s =&amp;gt; s.KeepingBooks).FirstOrDefaultAsync(s =&amp;gt; s.UserName ==&lt;span&gt; book.KeeperId);
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;                 Book addedBook =&lt;span&gt; _lendingInfoDbContext.Books
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;                     .Include(b =&amp;gt; b.Keeper).ThenInclude(k =&amp;gt;&lt;span&gt; k.KeepingBooks)
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                     .FirstOrDefault(b =&amp;gt; b.BarCode ==&lt;span&gt; book.BarCode);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (addedBook == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Books&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; { isbn =&lt;span&gt; book.ISBN });
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; 
&lt;span&gt;49&lt;/span&gt;                 StudentInfo preStudent =&lt;span&gt; addedBook.Keeper;
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;                 AppointmentOrLending targetLending =
&lt;span&gt;51&lt;/span&gt;                     preStudent?.KeepingBooks.FirstOrDefault(b =&amp;gt; b.BookId ==&lt;span&gt; addedBook.BarCode);
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;                 addedBook.AppointedLatestTime =&lt;span&gt; book.AppointedLatestTime;
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;                 addedBook.State =&lt;span&gt; book.State;
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;                 addedBook.BorrowTime =&lt;span&gt; book.BorrowTime;
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;                 addedBook.MatureTime = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; 
&lt;span&gt;58&lt;/span&gt;                 preStudent?&lt;span&gt;.KeepingBooks.Remove(targetLending);
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; 
&lt;span&gt;60&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (addedBook.BorrowTime.HasValue)
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (book.KeeperId == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;                         ModelState.AddModelError(&lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请检查借阅者&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;                         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; 
&lt;span&gt;68&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (student == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;                         ModelState.AddModelError(&lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;不存在该学生&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;                         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (student != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; (student.KeepingBooks.Count &amp;gt;=&lt;span&gt; student.MaxBooksNumber)
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt; &lt;span&gt;                        {
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt;                             TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;该学生借书已超过上限&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt; 
&lt;span&gt;80&lt;/span&gt;                         addedBook.State =&lt;span&gt; BookState.Borrowed;
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt;                         student.KeepingBooks.Add(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; AppointmentOrLending()
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt; &lt;span&gt;                        {
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt;                             BookId =&lt;span&gt; addedBook.BarCode,
&lt;/span&gt;&lt;span&gt;84&lt;/span&gt;                             StudentId =&lt;span&gt; student.UserName
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt; &lt;span&gt;                        });
&lt;/span&gt;&lt;span&gt;86&lt;/span&gt;                         addedBook.Keeper =&lt;span&gt; student;
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt; 
&lt;span&gt;88&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;89&lt;/span&gt;                     addedBook.MatureTime = addedBook.BorrowTime + TimeSpan.FromDays(&lt;span&gt;28&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;90&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;91&lt;/span&gt; 
&lt;span&gt;92&lt;/span&gt; 
&lt;span&gt;93&lt;/span&gt;                 TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;保存成功&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;94&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _lendingInfoDbContext.SaveChangesAsync();
&lt;/span&gt;&lt;span&gt;95&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Books&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; { isbn =&lt;span&gt; book.ISBN });
&lt;/span&gt;&lt;span&gt;96&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;97&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(book);
&lt;/span&gt;&lt;span&gt;98&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;将 BookState 枚举提取成分部视图 _BookStatePartial：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;@using LibraryDemo.Models.DomainModels
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;@model Book
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     @Html.LabelFor(b =&amp;gt;&lt;span&gt; b.State)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         @Html.DropDownListFor(b =&amp;gt; b.State, Enum.GetValues(&lt;span&gt;typeof&lt;/span&gt;(BookState)).Cast&amp;lt;Enum&amp;gt;().Select(state =&amp;gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt; enumVal = Enum.GetName(&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(BookState), state);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt;&lt;span&gt; displayVal;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (enumVal)
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Normal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                     displayVal = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;可借阅&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Readonly&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                     displayVal = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;馆内阅览&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Borrowed&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     displayVal = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已借出&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ReBorrowed&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                     displayVal = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;被续借&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Appointed&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                     displayVal = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;被预约&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                 &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                     displayVal = &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SelectListItem()
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                 Text =&lt;span&gt; displayVal,
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 Value =&lt;span&gt; enumVal,
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                 Selected = Model.State.ToString() ==&lt;span&gt; enumVal
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;        }))
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Html.DisplayFor 方法是 ASP.NET 内置对各种属性进行展示的方法，可以在项目的 Views 文件夹中的 Shared 文件夹创建对应类型的 Editor 模板供其使用：&lt;/p&gt;
&lt;p&gt;在此创建一个 DateTime.cshtml，于是我们使用 Html.DisplayFor 用于展示 DateTime 数据时只会显示年份/月份/天数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; @model DateTime?
&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt; @Model?.ToString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;yyyy/M/dd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;视图中第 40 行使用 partial TagHelper 指定其 name 为 _BookStatePartial 以应用分部视图：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;@model LibraryDemo.Models.DomainModels.Book
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;@{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     ViewData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EditLendingInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     Layout=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;_LendingLayout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &amp;lt;h2&amp;gt;@Model.BarCode&amp;lt;/h2&amp;gt;
&lt;span&gt; 8&lt;/span&gt; &amp;lt;h3&amp;gt;@Model.Name&amp;lt;/h3&amp;gt;
&lt;span&gt; 9&lt;/span&gt; &amp;lt;br/&amp;gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &amp;lt;script&amp;gt;
&lt;span&gt;12&lt;/span&gt;     window.onload =&lt;span&gt; function() {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         $(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).addClass(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     window.onbeforeunload = function (&lt;span&gt;event&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;您的数据未保存，确定退出？&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    function removeOnbeforeunload() {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         window.onbeforeunload = &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &amp;lt;/script&amp;gt;
&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt; @Html.ValidationSummary(&lt;span&gt;false&lt;/span&gt;,&lt;span&gt;&quot;&quot;&lt;/span&gt;,&lt;span&gt;new&lt;/span&gt;{@class=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text-danger&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt; &amp;lt;form asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EditLendingInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; method=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;26&lt;/span&gt;     @Html.HiddenFor(b =&amp;gt;&lt;span&gt; b.BarCode)
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;     @Html.HiddenFor(b =&amp;gt;&lt;span&gt; b.ISBN)
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;29&lt;/span&gt;         @Html.LabelFor(b =&amp;gt;&lt;span&gt; b.KeeperId)
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         @Html.EditorFor(b =&amp;gt;&lt;span&gt; b.KeeperId)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;32&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;33&lt;/span&gt;         @Html.LabelFor(b =&amp;gt;&lt;span&gt; b.BorrowTime)
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         @Html.EditorFor(b =&amp;gt;&lt;span&gt; b.BorrowTime)
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;36&lt;/span&gt;     &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt;37&lt;/span&gt;         @Html.LabelFor(b =&amp;gt;&lt;span&gt; b.AppointedLatestTime)
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         @Html.EditorFor(b =&amp;gt;&lt;span&gt; b.AppointedLatestTime)
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;40&lt;/span&gt;     &amp;lt;&lt;span&gt;partial&lt;/span&gt; model=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Model&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;_BookStatePartial&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt;41&lt;/span&gt;     &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; onclick=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;return removeOnbeforeunload()&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn-primary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt;42&lt;/span&gt; &amp;lt;/form&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205161920264-1879611488.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205161929869-1521304685.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162002355-1114344654.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162018960-55182160.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162033635-430361630.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162056883-2058904222.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162220840-1955090335.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162239939-1224663576.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205162313495-1316367871.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、查看个人信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里通过 User.Identity.Name 获取当前登录人的信息以选定当前登录的学生：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;        [Authorize]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt;&lt;span&gt; PersonalInfo()
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             StudentInfo student = &lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.Students.Include(s =&amp;gt; s.KeepingBooks).ThenInclude(k =&amp;gt;&lt;span&gt; k.Book)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 .FirstOrDefaultAsync(s =&amp;gt; s.UserName ==&lt;span&gt; User.Identity.Name);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;decimal&lt;/span&gt; fine = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;            
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; book &lt;span&gt;in&lt;/span&gt; student.KeepingBooks.Where(b =&amp;gt; b.Book.MatureTime &amp;lt; DateTime.Now &amp;amp;&amp;amp; !&lt;span&gt;b.AppointingDateTime.HasValue))
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 fine += (DateTime.Now - book.Book.MatureTime.Value).Days * (&lt;span&gt;decimal&lt;/span&gt;)&lt;span&gt;0.2&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                 book.Book.State = book.Book.State == BookState.Appointed ?&lt;span&gt; BookState.Appointed : BookState.Expired;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;             student.Fine =&lt;span&gt; fine;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             PersonalInfoViewModel model = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PersonalInfoViewModel()
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                 Student =&lt;span&gt; student,
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 BookingBook = _lendingInfoDbContext.Books.FirstOrDefault(b =&amp;gt; b.BarCode ==&lt;span&gt; student.AppointingBookBarCode)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View(model);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;视图：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;@model LibraryDemo.Models.PersonalInfoViewModel
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;@{
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt;     ViewData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt;     Layout = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;_LendingLayout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/css/BookInfo.css&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;span&gt;  7&lt;/span&gt; &amp;lt;script&amp;gt;
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;    function ensureCancel() {
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (confirm(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;确定取消预约？&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)) {
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &amp;lt;/script&amp;gt;
&lt;span&gt; 15&lt;/span&gt; 
&lt;span&gt; 16&lt;/span&gt; &amp;lt;h2&amp;gt;@Model.Student.Name&amp;lt;/h2&amp;gt;
&lt;span&gt; 17&lt;/span&gt; &amp;lt;br /&amp;gt;
&lt;span&gt; 18&lt;/span&gt; @if (Model.Student.KeepingBooks.Any(b =&amp;gt; b.Book.MatureTime &amp;lt;&lt;span&gt; DateTime.Now))
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;{    
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &amp;lt;table&amp;gt;
&lt;span&gt; 21&lt;/span&gt;     &amp;lt;thead&amp;gt;
&lt;span&gt; 22&lt;/span&gt;         &amp;lt;tr&amp;gt;
&lt;span&gt; 23&lt;/span&gt;             &amp;lt;th colspan=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;过期书籍&amp;lt;/th&amp;gt;
&lt;span&gt; 24&lt;/span&gt;         &amp;lt;/tr&amp;gt;
&lt;span&gt; 25&lt;/span&gt;     &amp;lt;/thead&amp;gt;
&lt;span&gt; 26&lt;/span&gt;     &amp;lt;tr&amp;gt;
&lt;span&gt; 27&lt;/span&gt;         &amp;lt;th&amp;gt;书名&amp;lt;/th&amp;gt;
&lt;span&gt; 28&lt;/span&gt;         &amp;lt;th&amp;gt;条形码&amp;lt;/th&amp;gt;
&lt;span&gt; 29&lt;/span&gt;         &amp;lt;th&amp;gt;状态&amp;lt;/th&amp;gt;
&lt;span&gt; 30&lt;/span&gt;         &amp;lt;th&amp;gt;到期时间&amp;lt;/th&amp;gt;
&lt;span&gt; 31&lt;/span&gt;         &amp;lt;th&amp;gt;索书号&amp;lt;/th&amp;gt;
&lt;span&gt; 32&lt;/span&gt;     &amp;lt;/tr&amp;gt;
&lt;span&gt; 33&lt;/span&gt; 
&lt;span&gt; 34&lt;/span&gt;     @foreach (&lt;span&gt;var&lt;/span&gt; matureBook &lt;span&gt;in&lt;/span&gt; Model.Student.KeepingBooks.Where(b =&amp;gt; b.Book.MatureTime &amp;lt; DateTime.Now &amp;amp;&amp;amp; !&lt;span&gt;b.AppointingDateTime.HasValue))
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;         &amp;lt;tr&amp;gt;
&lt;span&gt; 37&lt;/span&gt;             &amp;lt;td&amp;gt;@matureBook.Book.Name&amp;lt;/td&amp;gt;
&lt;span&gt; 38&lt;/span&gt;             &amp;lt;td&amp;gt;@matureBook.Book.BarCode&amp;lt;/td&amp;gt;
&lt;span&gt; 39&lt;/span&gt;             &amp;lt;td&amp;gt;@Html.DisplayFor(b =&amp;gt; matureBook.Book.State)&amp;lt;/td&amp;gt;
&lt;span&gt; 40&lt;/span&gt;             &amp;lt;td&amp;gt;@matureBook.Book.MatureTime?.ToString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;yyyy/MM/dd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)&amp;lt;/td&amp;gt;
&lt;span&gt; 41&lt;/span&gt;             &amp;lt;td&amp;gt;@matureBook.Book.FetchBookNumber&amp;lt;/td&amp;gt;
&lt;span&gt; 42&lt;/span&gt;         &amp;lt;/tr&amp;gt;
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;     &amp;lt;tfoot&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td colspan=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;罚款:@Model.Student.Fine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/tfoot&amp;gt;
&lt;span&gt; 45&lt;/span&gt; &amp;lt;/table&amp;gt;    
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &amp;lt;form asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ReBorrow&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; method=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
&lt;span&gt; 48&lt;/span&gt;     &amp;lt;table&amp;gt;
&lt;span&gt; 49&lt;/span&gt;         &amp;lt;tr&amp;gt;
&lt;span&gt; 50&lt;/span&gt;             &amp;lt;th&amp;gt;续借&amp;lt;/th&amp;gt;
&lt;span&gt; 51&lt;/span&gt;             &amp;lt;th&amp;gt;书名&amp;lt;/th&amp;gt;
&lt;span&gt; 52&lt;/span&gt;             &amp;lt;th&amp;gt;条形码&amp;lt;/th&amp;gt;
&lt;span&gt; 53&lt;/span&gt;             &amp;lt;th&amp;gt;状态&amp;lt;/th&amp;gt;
&lt;span&gt; 54&lt;/span&gt;             &amp;lt;th&amp;gt;到期时间&amp;lt;/th&amp;gt;
&lt;span&gt; 55&lt;/span&gt;             &amp;lt;th&amp;gt;索书号&amp;lt;/th&amp;gt;
&lt;span&gt; 56&lt;/span&gt;         &amp;lt;/tr&amp;gt;
&lt;span&gt; 57&lt;/span&gt;         @if (!&lt;span&gt;Model.Student.KeepingBooks.Any())
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;             &amp;lt;tr&amp;gt;
&lt;span&gt; 60&lt;/span&gt;                 &amp;lt;td colspan=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text-align: center&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;未借阅书本&amp;lt;/td&amp;gt;
&lt;span&gt; 61&lt;/span&gt;             &amp;lt;/tr&amp;gt;
&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; keepingBook &lt;span&gt;in&lt;/span&gt; Model.Student.KeepingBooks.Where(b=&amp;gt;!&lt;span&gt;b.AppointingDateTime.HasValue))
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;            {                
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;                 &amp;lt;tr&amp;gt;
&lt;span&gt; 68&lt;/span&gt;                     &amp;lt;td&amp;gt;&amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;checkbox&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@keepingBook.Book.BarCode&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;barcodes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;&amp;lt;/td&amp;gt;
&lt;span&gt; 69&lt;/span&gt;                     &amp;lt;td&amp;gt;@keepingBook.Book.Name&amp;lt;/td&amp;gt;
&lt;span&gt; 70&lt;/span&gt;                     &amp;lt;td&amp;gt;@keepingBook.Book.BarCode&amp;lt;/td&amp;gt;
&lt;span&gt; 71&lt;/span&gt;                     &amp;lt;td&amp;gt;@Html.DisplayFor(b=&amp;gt;keepingBook.Book.State)&amp;lt;/td&amp;gt;
&lt;span&gt; 72&lt;/span&gt;                     &amp;lt;td&amp;gt;@keepingBook.Book.MatureTime?.ToString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;yyyy/MM/dd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)&amp;lt;/td&amp;gt;
&lt;span&gt; 73&lt;/span&gt;                     &amp;lt;td&amp;gt;@keepingBook.Book.FetchBookNumber&amp;lt;/td&amp;gt;
&lt;span&gt; 74&lt;/span&gt;                 &amp;lt;/tr&amp;gt;
&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     &amp;lt;/table&amp;gt;    
&lt;span&gt; 78&lt;/span&gt;     &amp;lt;br/&amp;gt;
&lt;span&gt; 79&lt;/span&gt;     &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn-primary btn&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;续借&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt; 80&lt;/span&gt; &amp;lt;/form&amp;gt;
&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt; &amp;lt;br /&amp;gt;
&lt;span&gt; 83&lt;/span&gt; @if (Model.BookingBook != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;     &amp;lt;form asp-action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;CancelAppointing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;        
&lt;span&gt; 86&lt;/span&gt;         &amp;lt;table&amp;gt;
&lt;span&gt; 87&lt;/span&gt;             &amp;lt;tr&amp;gt;
&lt;span&gt; 88&lt;/span&gt;                 &amp;lt;th&amp;gt;书名&amp;lt;/th&amp;gt;
&lt;span&gt; 89&lt;/span&gt;                 &amp;lt;th&amp;gt;条形码&amp;lt;/th&amp;gt;
&lt;span&gt; 90&lt;/span&gt;                 &amp;lt;th&amp;gt;状态&amp;lt;/th&amp;gt;
&lt;span&gt; 91&lt;/span&gt;                 &amp;lt;th&amp;gt;预约时间&amp;lt;/th&amp;gt;
&lt;span&gt; 92&lt;/span&gt;                 &amp;lt;th&amp;gt;索书号&amp;lt;/th&amp;gt;
&lt;span&gt; 93&lt;/span&gt;             &amp;lt;/tr&amp;gt;
&lt;span&gt; 94&lt;/span&gt;             &amp;lt;book-info book=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Model.BookingBook&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;is&lt;/span&gt;-booking-book=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/book-info&amp;gt;
&lt;span&gt; 95&lt;/span&gt;         &amp;lt;/table&amp;gt;
&lt;span&gt; 96&lt;/span&gt;         &amp;lt;br /&amp;gt;
&lt;span&gt; 97&lt;/span&gt;         &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;barcode&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;@Model.BookingBook.BarCode&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt; 98&lt;/span&gt;         &amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;取消预约&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-danger&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; onclick=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;return ensureCancel()&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
&lt;span&gt; 99&lt;/span&gt;     &amp;lt;/form&amp;gt;
&lt;span&gt;100&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190205172652690-1035117808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、借阅书籍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于暂时未有获取二维码的接口，仅通过直接访问 Lending 模拟借阅：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;        [Authorize]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; Lending(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; barcode)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             Book targetBook=&lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.Books.Include(b=&amp;gt;b.Appointments).FirstOrDefaultAsync(b =&amp;gt; b.BarCode ==&lt;span&gt; barcode);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (targetBook==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请重新扫描书籍&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (targetBook.Appointments.Any(a=&amp;gt;&lt;span&gt;a.AppointingDateTime.HasValue))
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;此书已被预约&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (targetBook.State==&lt;span&gt;BookState.Readonly)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;此书不供外借&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt;             targetBook.State =&lt;span&gt; BookState.Borrowed;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             targetBook.BorrowTime =&lt;span&gt; DateTime.Now.Date;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             targetBook.MatureTime = DateTime.Now.Date+TimeSpan.FromDays(&lt;span&gt;28&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             StudentInfo student =
&lt;span&gt;27&lt;/span&gt;                 &lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.Students.Include(s=&amp;gt;s.KeepingBooks).FirstOrDefaultAsync(s =&amp;gt; s.UserName ==&lt;span&gt; User.Identity.Name);
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             student.KeepingBooks.Add(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; AppointmentOrLending()
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                 BookId =&lt;span&gt; targetBook.BarCode,
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                 StudentId =&lt;span&gt; student.UserName
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _lendingInfoDbContext.SaveChangesAsync();
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;             TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;借书成功&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190207233728759-1803481536.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190207233742764-103013841.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190207234015069-1513882585.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190207234021684-1548633825.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt; 六、续借书籍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;动作方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;        [Authorize]
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        [HttpPost]
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; ReBorrow(IEnumerable&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;&lt;span&gt; barcodes)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             StringBuilder borrowSuccess = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; StringBuilder();
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             StringBuilder borrowFail = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; StringBuilder();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             borrowSuccess.Append(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;成功续借书籍:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             borrowFail.Append(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;续借失败书籍：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; barcode &lt;span&gt;in&lt;/span&gt;&lt;span&gt; barcodes)
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            {   
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                 Book reBorrowBook = _lendingInfoDbContext.Books.FirstOrDefault(b =&amp;gt; b.BarCode ==&lt;span&gt; barcode);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (reBorrowBook != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt; (reBorrowBook.State == BookState.Borrowed &amp;amp;&amp;amp; DateTime.Now-reBorrowBook.MatureTime?.Date&amp;lt;=TimeSpan.FromDays(&lt;span&gt;3&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                         reBorrowBook.State =&lt;span&gt; BookState.ReBorrowed;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                         reBorrowBook.BorrowTime =&lt;span&gt; DateTime.Now.Date;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                         reBorrowBook.MatureTime = DateTime.Now.Date+TimeSpan.FromDays(&lt;span&gt;28&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                         borrowSuccess.Append($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;《{reBorrowBook.Name}》、&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                     &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                         borrowFail.Append($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;《{reBorrowBook.Name}》、&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            borrowSuccess.AppendLine(borrowFail.ToString());
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _lendingInfoDbContext.SaveChangesAsync();
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;             TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] =&lt;span&gt; borrowSuccess.ToString();
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PersonalInfo&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190217133636575-1467675187.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190217133656126-378474315.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190217133711012-1777914074.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;




&lt;p&gt;&lt;span&gt;&lt;strong&gt;七、查询书籍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;修改之前的 Search 方法使其通过当前用户的身份返回不同页面，以及在 _LendingInfoLayout 中添加搜索框部分：&lt;/p&gt;
&lt;p&gt;19 行通过短路使未授权用户不用登录。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; Search(&lt;span&gt;string&lt;/span&gt; keyWord, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; value)
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             BookDetails bookDetails = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; BookDetails();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (keyWord)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                     bookDetails = &lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.BooksDetail.AsNoTracking().FirstOrDefaultAsync(b =&amp;gt; b.Name ==&lt;span&gt; value);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ISBN&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                     bookDetails = &lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.BooksDetail.AsNoTracking().FirstOrDefaultAsync(b =&amp;gt; b.ISBN ==&lt;span&gt; value);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;FetchBookNumber&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                     bookDetails = &lt;span&gt;await&lt;/span&gt; _lendingInfoDbContext.BooksDetail.AsNoTracking().FirstOrDefaultAsync(b =&amp;gt; b.FetchBookNumber ==&lt;span&gt; value);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (bookDetails != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (User.Identity.IsAuthenticated&amp;amp;&amp;amp; User.IsInRole(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;EditBookDetails&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; { isbn =&lt;span&gt; bookDetails.ISBN });
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Detail&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; {isbn =&lt;span&gt; bookDetails.ISBN});
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                }                
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;             TempData[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;找不到该书籍&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; RedirectToAction(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BookDetails&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190208134645841-848539905.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1408470/201902/1408470-20190208134639366-358486287.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 17 Feb 2019 05:41:00 +0000</pubDate>
<dc:creator>NanaseRuri</dc:creator>
<og:description>ASP.NET Core 打造一个简单的图书馆管理系统 (修正版)（六）学生借阅/预约/查询书籍事务</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gokoururi/p/10390901.html</dc:identifier>
</item>
<item>
<title>策略模式 - huansky</title>
<link>http://www.cnblogs.com/huansky/p/10390475.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huansky/p/10390475.html</guid>
<description>&lt;p&gt;在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。这种类型的设计模式属于行为型模式。&lt;/p&gt;
&lt;p&gt;在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context 对象。策略对象改变 context 对象的执行算法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;意图：&lt;/strong&gt;定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要解决：&lt;/strong&gt;在有多种算法相似的情况下，使用 if...else 所带来的复杂和难以维护。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;何时使用：&lt;/strong&gt;一个系统有许多许多类，而区分它们的只是他们直接的行为。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何解决：&lt;/strong&gt;将这些算法封装成一个一个的类，任意地替换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键代码：&lt;/strong&gt;实现同一个接口。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt; 1、算法可以自由切换。 2、避免使用多重条件判断。 3、扩展性良好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt; 1、策略类会增多。 2、所有策略类都需要对外暴露。&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;策略模式结构&lt;/span&gt;&lt;/h3&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p&gt;下面就以一个示意性的实现讲解策略模式实例的结构。&lt;/p&gt;
&lt;div class=&quot;image-package&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;
&lt;div class=&quot;image-view&quot; data-width=&quot;799&quot; data-height=&quot;311&quot;&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/10175660-2d9b5e02ce921d8e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/799/format/webp&quot; alt=&quot;&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/10175660-2d9b5e02ce921d8e.jpg&quot; data-original-width=&quot;799&quot; data-original-height=&quot;311&quot; data-original-format=&quot;image/jpeg&quot; data-original-filesize=&quot;24040&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个模式涉及到三个角色：&lt;/p&gt;
&lt;/div&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;环境(Context)角色：&lt;/strong&gt;持有一个 Strategy 的引用。也就是 Context 内部需要用到某种算法，在策略模式中这种算法是以无缝切换到另一种算法。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;抽象策略(Strategy)角色：&lt;/strong&gt;这是一个抽象角色，通常由一个接口或抽象类实现。此角色给出所有的具体策略类所需的接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;具体策略(ConcreteStrategy)角色：&lt;/strong&gt;包装了相关的算法或行为。&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
可以看到，当我们需要增加某一种算法的时候，直接增加具体的算法类 D 即可，在将该算法 set 进去即可，其他地方并不用改太多的代码。&lt;/div&gt;
&lt;h3&gt;代码实战&lt;/h3&gt;
&lt;p&gt; 定义一个算法接口，所有具体的算法都需要实现该类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Strategy {
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 策略方法
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; algorithmInterface();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面就是具体的算法类，每一种算法都实现了算法接口，并且有自己的独立算法，需要在 algorithmInterface() 方法中完成。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConcreteStrategyA &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Strategy {

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt;  algorithmInterface() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;相关的业务&lt;/span&gt;
&lt;span&gt;    }

}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConcreteStrategyB &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Strategy {

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt;  algorithmInterface() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;相关的业务&lt;/span&gt;
&lt;span&gt;    }

}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConcreteStrategyC &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Strategy {

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt;  algorithmInterface() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;相关的业务&lt;/span&gt;
&lt;span&gt;    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;算法完成后，就需要将其运用到具体某个对象当中，比如下面的 context，持有对 Strategy 的引用。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Context {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;持有一个具体策略的对象&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Strategy strategy;
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 构造函数，传入一个具体策略对象
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; strategy    具体策略对象
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Context(Strategy strategy){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.strategy =&lt;span&gt; strategy;
    }
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 策略方法
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; contextInterface(){
        strategy.algorithmInterface();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;后面，我们将具体的策略传入就好&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;选择使用的策略&lt;/span&gt;
Strategy s = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConcreteStrategyA();
Context context &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Context(s);
context.ontextInterface()；&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;如果在一个系统里面有许多类，它们之间的区别仅在于它们的行为，那么使用策略模式可以动态地让一个对象在许多行为中选择一种行为。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;一个系统需要动态地在几种算法中选择一种。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;如果一个对象有很多的行为，如果不用恰当的模式，这些行为就只好使用多重的条件选择语句来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;动画的插值器，可以传入不同类型的插值器，其实也就是策略模式的一种应用； &lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;p&gt;1、&lt;a href=&quot;http://www.runoob.com/design-pattern/strategy-pattern.html&quot; target=&quot;_blank&quot;&gt;策略模式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、&lt;a href=&quot;https://www.jianshu.com/p/7b7de81cdfbe&quot; target=&quot;_blank&quot;&gt;实际项目运用之Strategy模式（策略模式）&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 17 Feb 2019 05:38:00 +0000</pubDate>
<dc:creator>huansky</dc:creator>
<og:description>简介 在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。这种类型的设计模式属于行为型模式。 在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huansky/p/10390475.html</dc:identifier>
</item>
<item>
<title>【原创】大话微服务中的边车模式 - 孤独烟</title>
<link>http://www.cnblogs.com/rjzheng/p/10390827.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rjzheng/p/10390827.html</guid>
<description>&lt;p&gt;(以下故事纯属虚构，如有雷同纯属巧合)&lt;/p&gt;
&lt;h2 id=&quot;概念&quot;&gt;概念&lt;/h2&gt;
&lt;p&gt;自从微服务的浪潮席卷了烟哥的公司之后，烟哥的领导内心蠢蠢欲动，指派烟哥去将公司的传统服务架构改成微服务架构!于是烟哥就喊上了小刘到了一个僻静的角落探讨如何实施！&lt;/p&gt;
&lt;p&gt;烟哥:&quot;小刘啊，去把公司那套&lt;code&gt;天霸动霸Tua&lt;/code&gt;系统整整，接入注册中心，熔断器什么的，整成微服务架构！领导发话了，就用&lt;code&gt;java&lt;/code&gt;里的&lt;code&gt;spring cloud&lt;/code&gt;那些组件来做，有没有问题？&quot;&lt;/p&gt;
&lt;p&gt;只见小刘眼角闪过一丝泪花，说道:&quot;有一个大大的问题！&lt;code&gt;天霸动霸Tua&lt;/code&gt;系统中的&lt;code&gt;动霸Tua&lt;/code&gt;应用是08年开发的，是用&lt;code&gt;php&lt;/code&gt;写的！你让我怎么接入那些java的注册中心、熔断器啊...&quot;&lt;br/&gt;接下来自然就是:&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/725429/201902/725429-20190217132600336-448040374.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;烟哥瞪了瞪眼，说道:&quot;小刘啊，你知道什么是&lt;code&gt;边车(SideCar)&lt;/code&gt;嘛？&quot;&lt;/p&gt;
&lt;p&gt;小刘说:&quot;知道啊，就是如果只是单独一辆自行车只能坐一个人，可以给自行车加一个&lt;code&gt;边车(SideCar)&lt;/code&gt;，扩展一下现有的功能，像下面这样&quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/725429/201902/725429-20190217132936148-621065776.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&quot;嗯嗯，其实这个模式在微服务中也可以用的！你想啊，我们给&lt;code&gt;动霸Tua&lt;/code&gt;应用做一个代理，然后呢，服务注册、鉴权、限流啊...这些功能都做在代理里，然后呢我们不要直接调&lt;code&gt;动霸Tua&lt;/code&gt;应用，调的是&lt;code&gt;动霸Tua&lt;/code&gt;应用的代理，这里代理就是所谓的&lt;code&gt;边车(SideCar)&lt;/code&gt;，大概部署图是下面这样的！&quot;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/725429/201902/725429-20190217132945992-1378151494.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;说到，这里小刘的眼神中似乎露出了满脸的期待，像下面这样&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/725429/201902/725429-20190217133020231-584896354.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;烟哥很装13了停了停，然后继续说道:&quot;说到这里，我们基本可以明白！要将一个应用改成微服务架构，基本有两种方式:&quot;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;以改FrameWork的方式,直接在原来的项目代码里头进行修改！&lt;/li&gt;
&lt;li&gt;以&lt;code&gt;边车(SideCar)&lt;/code&gt;模式的方式，通过&lt;code&gt;边车(SideCar)&lt;/code&gt;进行转发请求！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&quot;小刘你瞅啊，&lt;code&gt;边车(SideCar)&lt;/code&gt;模式这种方式,不仅对原来的应用代码零侵入，而且不限制原来应用的语言，特别适合这种异构微服务的场景！另外，以后你的&lt;code&gt;边车(SideCar)&lt;/code&gt;要升级了，是可以独立升级的，不用重新打包原来的应用！听起来是不是很完美？&quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/725429/201902/725429-20190217133030736-1700327643.jpg&quot;/&gt;&lt;br/&gt;烟哥回答道:&quot;嗯嗯，你看啊！缺点主要有下面几点:&quot;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;服务之间的调用多了&lt;strong&gt;一跳&lt;/strong&gt;，如果两个微服务都是边车模式，那就是多了&lt;strong&gt;两跳&lt;/strong&gt;，如果使用边车模式的微服务接口调用非常频繁，记得思考一下能否接受这种延迟开销！&lt;/li&gt;
&lt;li&gt;因为你的&lt;code&gt;边车(SideCar)&lt;/code&gt;集成了微服务的通用功能、如果&lt;code&gt;边车(SideCar)&lt;/code&gt;进行重试调用，会对你的系统造成额外的影响么？也就是保证你的接口幂等性！&lt;/li&gt;
&lt;li&gt;刚说到了使用&lt;code&gt;边车(SideCar)&lt;/code&gt;后，边车是可以独立升级的！那这也带来了一个问题，你的原程序要进行升级或&lt;code&gt;边车(SideCar)&lt;/code&gt;要进行升级如何协同来保证请求的正常处理或转发，可以理解为如何进行优雅上下线，这些要考虑清楚！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;小刘问道:&quot;那具体怎么做呢？&quot;&lt;/p&gt;
&lt;p&gt;&quot;嗯，听好啦&quot;&lt;/p&gt;
&lt;h2 id=&quot;怎么做&quot;&gt;怎么做&lt;/h2&gt;
&lt;p&gt;(由于我们的技术栈是Spring Cloud，因此只能说明在该技术栈下是怎么做的！)&lt;br/&gt;SpringCloud中有一个组件叫&lt;code&gt;spring-cloud-netflix-sidecar&lt;/code&gt;是提供了边车模式的支持的！&lt;br/&gt;自己搭建一个&lt;code&gt;microservice-sidecar&lt;/code&gt;的工程也非常简单，maven中的&lt;code&gt;dependencies&lt;/code&gt;依赖如下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;spring-cloud-starter-zuul&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;spring-cloud-netflix-sidecar&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后，在&lt;code&gt;Application&lt;/code&gt;中加上&lt;code&gt;@EnableSidecar&lt;/code&gt;注解，像下面这样&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.sidecar.EnableSidecar;

@SpringBootApplication
@EnableSidecar
public class Application {
  public static void main(String[] args) {
    SpringApplication.run(SidecarApplication.class, args);
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后就是修改你的配置文件，像下面这样&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;server:
  port: 8070
spring:
  application:
    name: microservice-sidecar-node-service
eureka:
  client:
    service-url:
      defaultZone:http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
sidecar:
  # 你的PHP微服务的端口
  port: 8060                                    
  # PHP微服务的健康检查URL
  health-uri:http://localhost:8060/health.json# &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后你就可以通过&lt;code&gt;sidecar&lt;/code&gt;来访问了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;http://localhost:8070/&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;拓展&quot;&gt;拓展&lt;/h2&gt;
&lt;p&gt;过了几天，小刘又来找我了！只见小刘说道:&quot;能不能给所有的微服务都搭一个&lt;code&gt;边车(SideCar)&lt;/code&gt;，然后用一个平台将&lt;code&gt;边车(SideCar)&lt;/code&gt;管理起来，像下面这样&quot;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/725429/201902/725429-20190217133231035-269934729.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;烟哥回答道：“可以的！这就是去年年初被炒的火热的服务网格(ServiceMesh)模式！”&lt;br/&gt;请看下回《大话微服务中的服务网格》&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 05:37:00 +0000</pubDate>
<dc:creator>孤独烟</dc:creator>
<og:description>(以下故事纯属虚构，如有雷同纯属巧合) 概念 自从微服务的浪潮席卷了烟哥的公司之后，烟哥的领导内心蠢蠢欲动，指派烟哥去将公司的传统服务架构改成微服务架构!于是烟哥就喊上了小刘到了一个僻静的角落探讨如何</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/rjzheng/p/10390827.html</dc:identifier>
</item>
<item>
<title>AAA游戏中雪的实现 - 风恋残雪</title>
<link>http://www.cnblogs.com/ghl_carmack/p/10390650.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ghl_carmack/p/10390650.html</guid>
<description>&lt;p&gt;现在越来越多的AAA游戏中都实现了逼真的雪的效果，比如战神4、地平线：黎明时分、荒野大镖客：救赎2、古墓丽影：崛起等都实现了不错的雪地效果。今天我们就来探究一下他们的实现方式。现在主流的实现方式都是通过硬件提供的细分功能来实现的。&lt;/p&gt;

&lt;p&gt;这个游戏里面没有地形，只有房顶和城市街道两种，所以它的做法比较取巧，局限性比较大。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121022990-28967333.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;动态生成置换高度图，主机使用视差映射，PC使用细分技术。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121023840-1844732072.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如何生成高度图？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121024203-317357438.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;把会影响雪地效果的物体（有一部分在雪的表面下）使用一个踝关节高的正交相机渲染到一个rt里面。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;把rt清除成黑色。&lt;/li&gt;
&lt;li&gt;渲染物体为白色。&lt;/li&gt;
&lt;li&gt;过滤并把渲染结果累积到另外一张纹理里面。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121024802-403980346.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121025330-1056325033.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121025815-501711523.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;大体思路就是这样的，它的优点就是实现简单，但是也有一些局限就是它只适用于房顶以及平坦的城市街道。当然我们也可以对它进行相应的改进，以支持地形以及有坡度的物体。&lt;/p&gt;

&lt;p&gt;古墓丽影崛起的做法较通用，可以在地形上产生雪迹。在仔细介绍前先统一下术语。&lt;/p&gt;
&lt;p&gt;Snow height:在未应用变形之前的雪的高度（vertex.z）&lt;/p&gt;
&lt;p&gt;Deformation points:劳拉的脚以及其它产生变形的3D坐标。&lt;/p&gt;
&lt;p&gt;Foot height:一个变形点的垂直高度（point.z）&lt;/p&gt;
&lt;p&gt;Trail depression：雪迹被踩下去的比原本雪低的那部分。&lt;/p&gt;
&lt;p&gt;Trail elevation:由于被踩下去导致雪隆起的那一部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121026163-2129580486.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Deformation heightmap:一张32位的纹理，1024x1024个像素，存储变形信息。&lt;/p&gt;
&lt;p&gt;Depression depth:abs(snow height – foot height)&lt;/p&gt;
&lt;p&gt;Deformation shader:用于生成变形高度图的compute shader。&lt;/p&gt;
&lt;p&gt;Fill shader:用于模拟暴风雪后雪迹被慢慢填充的过程。&lt;/p&gt;
&lt;p&gt;Snow shder:用于渲染雪的shader,这个shader会应用变形信息。&lt;/p&gt;
&lt;p&gt;有了这些术语，我们接下来看看它是怎么做的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121026520-851281977.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出它主要分为三个步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Deformation shader根据dynmaic_object的defomation point来计算影响的像素信息。&lt;/li&gt;
&lt;li&gt;Fill shader用于修改上面计算好的高度信息，模拟暴风雪将雪迹填平的过程。&lt;/li&gt;
&lt;li&gt;Snow shader用来应用变形高度图配合细分来实现雪迹效果。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121026763-970782819.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;生成高度图&lt;/h3&gt;
&lt;p&gt;观察发现雪迹的形状可以用一个二次曲线近似，通过把一些 动态物体近似成一些点，变形高度可以通过以下公式计算：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121027014-807797765.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这些变形点累积到deformation heightmap中，deformation shader为每一个点分配一个组，每个组会写入32x32的一个区域内，并且使用一个原子取最小操作，之所以需要这个是因为多个点的影响的区域 可能会重合。&lt;/p&gt;
&lt;h2&gt;生成隆起（elevation）部分&lt;/h2&gt;
&lt;p&gt;为了计算elevation，foot height也是需要的，主要是用来判断是否能生成雪迹，因为elevation部分是高于雪未经变形的高度的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121027348-44391194.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了计算elevation,我们需要知道elevation distance,它是elevation 开始的地方到当前渲染点的距离。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121027882-1966500254.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了计算elevation distance，我们引入了以下几个变量：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Depression distance:变形的中心到depression结束的距离&lt;/li&gt;
&lt;li&gt;Distance from root:变形的点心到当前渲染点的距离，注意它是depression distance和elevation distnce的和。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121028167-342759504.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121028530-2045554653.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Elevation的值应该跟雪迹的深度成正比，雪迹越深，那么elevation应该越高。计算公式如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121028817-344598540.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;纹理选择&lt;/h3&gt;
&lt;p&gt;为了给雪地一个更随机真实的效果，三张纹理贴图应用到了变形的不同部分，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121029088-1584952076.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到这里，基本的雪的变形效果的实现已经讲完了，一些优化细节我们这里就不仔细讲解了，感觉兴趣的同步可以参考GPU Pro7上的文章。现在我们来说下它的优缺点，优点是实现也比较简单，支持任意坡度的网格，雪迹的形迹有隆起的部分，以及模拟暴风雪填平雪迹的效果。缺点是它把一个物体当成了一些点的集合，这样就不容易做一个人死后躺在地上类似的效果，当然也不是不能做就是把一个成当成多个点来解决，但是总体效果会差一些。下面我们来看另外一个解决方案。&lt;/p&gt;

&lt;p&gt;它的步骤如下所示：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;使用一个Scene Capture从下向上拍摄一张地形的深度图。&lt;/li&gt;
&lt;li&gt;在上一个拍摄的基础上使用Custom Depth拍摄影响雪迹深度。&lt;/li&gt;
&lt;li&gt;根据这两个深度的差值来决定哪些地方会产生雪的轨迹。&lt;/li&gt;
&lt;li&gt;把上面的结果放到别个一个rt上用来做累积。&lt;/li&gt;
&lt;li&gt;应用累积后的效果到雪的材质产生雪迹的效果。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121029394-1195521062.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从下往上拍摄&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121029734-98305186.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;根据offset来生成灰度图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121030035-1126721020.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当然这里有一些细节需要处理，我们这里略过不谈，感兴趣的可以看参考文章中的Create snow trails in ue4来了解细节。当然这个只是个demo实现，并不能应用到实际使用中，需要做很多的改动和优化，主要是借鉴下思路。最终效果如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/155497/201902/155497-20190217121030444-2059022275.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在我们来说下它的优缺点，优点是实现较简单，适用于所有情况（适用于任意形状的物体），缺点是这个只是个demo，如果要真正使用中还是有很多细节（坑）要去踩。当然也可以在这个算法上做些改进优化以达到更通用的支持，比如在地形之外的任何物体产生雪迹。&lt;/p&gt;

&lt;p&gt;上面列举了几个生成雪迹的方案，可以看到都用到了变形以及细分来做，如果硬件机能有限也可以把细分用视差映射来替代，通过分析它们的优缺点，读者可以根据自己的游戏类型来选择对应的方案。当然我们也可以在原来的基础上扩展以及修改达到更好的支持，甚至超越市面上的AAA游戏。如果有其它的方案，也欢迎大家在留言中讨论。&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/colinbb/gdc2014-deformable-snow-rendering-in-batman-arkham-origins&quot;&gt;https://www.slideshare.net/colinbb/gdc2014-deformable-snow-rendering-in-batman-arkham-origins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tombraider.tumblr.com/post/131825841425/dev-blog-snow-tech-and-houdini-simulations-mike&quot;&gt;http://tombraider.tumblr.com/post/131825841425/dev-blog-snow-tech-and-houdini-simulations-mike&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPU Pro 7 Deferred Snow Deformation in Rise Of The Tomb Raider&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/5760-creating-snow-trails-in-unreal-engine-4&quot;&gt;https://www.raywenderlich.com/5760-creating-snow-trails-in-unreal-engine-4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.resetera.com/threads/gamingbolt-graphics-analysis-god-of-war-arguably-the-best-looking-game-of-all-time.35748/page-32&quot;&gt;https://www.resetera.com/threads/gamingbolt-graphics-analysis-god-of-war-arguably-the-best-looking-game-of-all-time.35748/page-32&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Sun, 17 Feb 2019 04:11:00 +0000</pubDate>
<dc:creator>风恋残雪</dc:creator>
<og:description>现在越来越多的AAA游戏中都实现了逼真的雪的效果，比如战神4、地平线：黎明时分、荒野大镖客：救赎2、古墓丽影：崛起等都实现了不错的雪地效果。今天我们就来探究一下他们的实现方式。现在主流的实现方式都是通</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ghl_carmack/p/10390650.html</dc:identifier>
</item>
<item>
<title>海量数据处理方法整理记录 - 黄青石</title>
<link>http://www.cnblogs.com/huangqingshi/p/10389075.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huangqingshi/p/10389075.html</guid>
<description>&lt;p&gt;　　随着现在数据量的不断增加，很多大数量的问题随之而来，就得需要我们想办法解决，我找了一些问题并首先思考，然后找到方法，在这里记录一下，未来有需要的同学可以拿走去用。&lt;/p&gt;
&lt;p&gt;　　1. 在海量日志数据里，提取某天访问量最多的IP。&lt;/p&gt;
&lt;p&gt;　　一般处理海量的思路都是分治处理，就是现将数据进行拆分，然后进行处理，排序等。这个例子也不例外，IPV4的地址一共32位，最大值为2^32也就是总数大约4G左右，如果放到内存里边，以目前的内存容量也是可以处理的，但是咱们可以为自己设置一些条件，比如目前没有那么多内存。&lt;/p&gt;
&lt;p&gt;　　　　a) 首先分治，将这个文件按照IP的HASH分成1024份（如果想要均匀的分的算法需要使用一致性Hash算法），这样每个文件大约4M左右并且存放到磁盘上去。&lt;/p&gt;
&lt;p&gt;　　　　b) 构建一个需要以IP为Key，出现次数为Value的TreeMap。读取每个文件，将IP和出现次数放入有序的TreeMap。&lt;/p&gt;
&lt;p&gt;　　　　c) 这样就可以得到出现次数最多的IP，前N个出现次数多的IP都可以获取到了。&lt;/p&gt;
&lt;p&gt;　　这种问题一般是TOP K的问题，思路都可以按照这样的思路去解决。当然这种场景比较合适的就是Map Reduce莫属了。另外，关于TOP K的这种排序的话可以采用最小堆排序（即根节点是最小的），它的时间复杂度为n*mlogm，n即为一共多少数据，m为取出前m个数据。关于这种结构不知道的同学可以进行谷歌搜索。分治的作用就是为了减少使用系统的资源，比如系统内容。&lt;/p&gt;
&lt;p&gt;　　2. 上个问题是统计重复出现的个数，那么如何统计不重复的个数。比如：有个电话本，里边记录的电话号码都是8位数字，统计电话本里边有多少电话号码？这个里边肯定也是有一些局限的，比如内存限制。再比如再2.5亿整数中找到不重复的整数的个数，当然，内存中不能够存储着2.5亿数据。这种解决的思路一般是位图算法（bitMap)解决。&lt;/p&gt;
&lt;p&gt;　　　　以电话号码为例：&lt;/p&gt;
&lt;p&gt;　　　　a)电话号码是8位数字，也就是出现的数字应该为11111111-99999999，总数为99999999，咱们采用位图法（因为最省内存）。&lt;/p&gt;
&lt;p&gt;　　　　b)一个bit位代表一个数字，那么这些数字共需要99999999个bit，占用内存为 99999999/8/1024/1024约等于11.92M，即如果这个数字所在的位有数据，那么这个bit位就设置为1，否则设置为0。&lt;/p&gt;
&lt;p&gt;　　　　这样只需要12M的内存就可以统计这些数据了。当然2.5亿整数同理，在内存中所有整数的个数为2^32，一个数对应一个bit，大概需要512M内存就可以了，如果给的内存还不够的话，则需要再次进行拆分。&lt;/p&gt;
&lt;p&gt;　　3. 还有一些与上边类似的，但是不太相同的，因为有重复的数（1、2、2、3、3、4，排好序的数并且偶数个的话，中位数是[2+3]/2=2.5 奇数个的话正好是中间的），比如在5亿int数中找到中位数。这个问题的解决思路其实采用双层桶划分思路。注意一个int占4个Byte，整数的最大位数为32位，那么我们将每个数转换为二进制，然后截取前多少位，要看内存大小。解决思路：&lt;/p&gt;
&lt;p&gt;　　　　a) 把整数转为二进制数，然后截取前5位，那么总共分出2^5=32个区间，如果分出文件来共分出32个文件，如果内存不够的话，那么再继续截取（比如16位，这里举例）。比如：file_00000, file_00001等。&lt;/p&gt;
&lt;p&gt;　　　　b) 如果截取完了，所有文件一共32个文件，因为都是二进制，所以文件是按照有序排好的。统计每个文件的个数，然后计算中位数所在的文件里。&lt;/p&gt;
&lt;p&gt;　　　　c) 如果文件还是比较大，假设文件在最后一个文件，即前边2.5亿，最后一个文件2.5亿，文件名字为file_11111，那么再继续按照上边的方法继续拆分（比如再5位 文件名：file_11111_00000 等)，知道内存中可以装下整个文件。&lt;/p&gt;
&lt;p&gt;　　　　d) 可以装下整个文件下的话再进行排序，排好序之后，找到中间的数就是中位数。&lt;/p&gt;
&lt;p&gt;　　4. 两个文件，各存放50亿条URL，每个URL占64字节。内存限制是4G，找出两个文件中相同的URL。这个问题有一个内存限制，那么肯定需要分治法。&lt;/p&gt;
&lt;p&gt;　　　　方法一（分治+hash+hashset)：&lt;/p&gt;
&lt;p&gt;　　　　a) 50亿个64Byte= 5G*64Byte = 320G，内存4个G，肯定是不可以的。那么咱们将每个URL进行hash，然后放到1024个文件中，也就是每个文件为320G/1024=320M左右。以hash值作为文件名，第一个文件hash出来的文件命名为(hash[URL]%1024)a1.....a1024，第二个文件hash出来的文件命名为b1.....b1024。&lt;/p&gt;
&lt;p&gt;　　　　b）1024个文件生成了，那么相同的URL肯定在hash命名文件的后缀中，比如a1 vs b1，这样依次读取文件的内容放入到hashset中，如果存在的话记录并且追加放到文件中。&lt;/p&gt;
&lt;p&gt;　　　　c)  最后文件中就是所有URL即为相同的URL。&lt;/p&gt;
&lt;p&gt;　　　　方法二（Bloom Filter布隆过滤器)&lt;/p&gt;
&lt;p&gt;　　　　a) 先说一下布隆过滤器，主要将需要内容进行hash，然后对应到相应的bit上，即Bit Map位图法，但是这个里边有一个问题就是hash会碰撞，即不同的结果可能会hash成相同的值，这样就会出错。如果可以接受错误率，当然错误率较低，那么可以采用这种方式。4G内存=2^32 * 8 约等于 40亿Byte * 8 大约等于340亿。先遍历第一个文件，然后再遍历第二个，这样会错误率。&lt;/p&gt;
&lt;p&gt;　　5. 有40亿个不重复的unsigned int的整数，没排过序，现在给一个数，如何快速判断这个数是否在这40亿个数当中。这个如果直接放到内存里边的话得需要2^32*4Byte（int 4Byte) = 4G *4 = 16G. 显然内存比较大了。&lt;/p&gt;
&lt;p&gt;　　　　a) 这个也采用位图法，所需要的内存为  2*32Byte / 8 = 500M 内存，所以仅仅需要500M内存就可以放下这些数字了，然后查找就可以了。&lt;/p&gt;
&lt;p&gt;　　6. 给定一个文件，里面最多含有n个不重复的正整数（也就是说可能含有少于n个不重复正整数），且其中每个数都小于等于n，n=10^7。输出：得到按从小到大升序排列的包含所有输入的整数的列表。条件：最多有大约1MB的内存空间可用，但磁盘空间足够。且要求运行时间在5分钟以下，10秒为最佳结果。&lt;/p&gt;
&lt;p&gt;　　如果采用位图法的话需要为10^7 / 8 /1024/1024 大约等于1.19M，大于题目的1M，显然位图法不太合适，那么咱们考虑一下多路归并排序。&lt;/p&gt;
&lt;p&gt;　　a)  首先将这个文件分批次读取拆分，比如一次读取256K，然后进行memory sort 在内存排序，写到文件中。假如文件大小是10M的大小，则需要循环40次，写入40个文件当中。&lt;/p&gt;
&lt;p&gt;　　b)  然后将文件进行merge sort合并排序，创建一个数组40个长度，依次读取最小的文件，然后找到数组中最小的写入到文件当中，然后继续读取文件并且继续排序，将最小的再次写入文件即可。&lt;/p&gt;
&lt;p&gt;　 6. 有10个文件，每个文件1G，每个文件的每一行都存放的是用户的搜索的关键字，每个文件的搜索的关键字都可能重复。找出热度高的前1000个搜索关键字。（提示分治+hash+trie树+最小堆）&lt;/p&gt;
&lt;p&gt;　　看到这种问题的话，首先得考虑是否机器资源足够使用，如果足够使用的话，就直接加入内存，但是如果不够的话需要考虑分治。解决思路。&lt;/p&gt;
&lt;p&gt;　　a) 将每个文件按关键字进行hash，然后拆分成100个文件，然后每个文件大概100M左右。（分治+hash)。&lt;/p&gt;
&lt;p&gt;　　b) 读取每个小文件，并且将读取的关键字形成Trie树字典树，这样会达到去重的效果。Trie树的插入和查询复杂度是O(k), k为最长字符串的长度。然后建立长度为1000的小根堆，将遍历每个关键字的出现的次数放到小根堆里。&lt;/p&gt;
&lt;p&gt;　　c) 以上一遍就可以得出第一个1G文件的结果，然后按照相同的原理继续以上步骤。&lt;/p&gt;

&lt;p&gt;总结一下：&lt;/p&gt;
&lt;p&gt;　　如果是大量数据不重复的，而且需要内存占用比较少的需要找出出现的内容的话，适合使用BitMap位图法进行处理。&lt;/p&gt;
&lt;p&gt;　　还有就是一般的TOP K问题，就是找出前多少位的这种，一般内存容量都不是很大，采用的方式是 分治+hash+最小（大）堆排序。当然分布式的适合处理方式为MapReduce处理。&lt;/p&gt;
&lt;p&gt;　　排序可以有很多种，按照不同的方式进行不同的排序，比如快排，最小堆排序，归并排序。如果大文件需要排序，并且严格要求内存的话，分治成小文件，然后采用归并排序很合适。&lt;/p&gt;
&lt;p&gt;　　如果涉及到单词的类型处理的话，需要使用Trie树进行，因为这个非常合适处理，并且复杂度为O(k）。&lt;/p&gt;

&lt;p&gt;如果有不对的地方，欢迎指正。&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 03:41:00 +0000</pubDate>
<dc:creator>黄青石</dc:creator>
<og:description>随着现在数据量的不断增加，很多大数量的问题随之而来，就得需要我们想办法解决，我找了一些问题并首先思考，然后找到方法，在这里记录一下，未来有需要的同学可以拿走去用。 1. 在海量日志数据里，提取某天访问</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huangqingshi/p/10389075.html</dc:identifier>
</item>
<item>
<title>asp.net core系列 25 EF模型配置(隐藏属性) - 花阴偷移</title>
<link>http://www.cnblogs.com/MrHSR/p/10383576.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/MrHSR/p/10383576.html</guid>
<description>&lt;h3&gt;一. 隐藏属性概述&lt;/h3&gt;
&lt;p&gt;　　隐藏属性也叫影子属性，该属性不是在.net实体类中定义的属性，而是在EFCore模型中为该实体类型定义的属性。这些属性的值和状态完全在变更跟踪器中维护。它有二个功能：&lt;span&gt;(1)&lt;/span&gt;&lt;span&gt;当数据库中某些字段不想映射到实体类上公开的属性时，隐藏属性非常有用&lt;/span&gt;&lt;span&gt;。(2)隐藏属性通常是用于外键属性&lt;/span&gt;，其中两个实体之间的关系由数据库中的外键值表示，但是两个实体关系是使用实体类型之间的导航属性进行管理(这个在下面约定中讲到)。&lt;/p&gt;
&lt;p&gt;　　隐藏属性值可以通过ChangeTracker API获取和更改：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
　　　context.Entry(myBlog).Property(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LastUpdated&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).CurrentValue = DateTime.Now;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　&lt;span&gt;　下面讲第一个功能:当数据库中某些字段不想映射到实体类上公开的属性时，隐藏属性非常有用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;1.1 配置隐藏属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;不能通过数据注释来创建隐藏属性，只能通过 Fluent API 来创建, Blog实体中没有映射LastUpdated公开属性，但创建了隐藏属性。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; BloggingContext: DbContext
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; DbSet&amp;lt;Blog&amp;gt; Blogs { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity&lt;/span&gt;&amp;lt;Blog&amp;gt;().Property&amp;lt;DateTime&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LastUpdated&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Blog
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; BlogId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Url { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;1.2 设置隐藏属性值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　在新增时blog一条数据时，通过ChangeTracker API可以为隐藏属性LastUpdated设置时间值，提交到数据库表中。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;          [HttpPost]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt; Create([Bind(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Url&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)] Blog blog)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (ModelState.IsValid)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置隐藏属性的值&lt;/span&gt;
                BloggingContext.Entry(blog).Property(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LastUpdated&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).CurrentValue =&lt;span&gt; DateTime.Now;
                BloggingContext.Add&lt;/span&gt;&amp;lt;Blog&amp;gt;&lt;span&gt;(blog);
                &lt;/span&gt;&lt;span&gt;await&lt;/span&gt;&lt;span&gt; BloggingContext.SaveChangesAsync();
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; View();
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/151560/201902/151560-20190215143958600-1030980716.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;1.3 读取blog表数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　可以通过 LINQ 查询中引用隐藏属性&lt;code&gt;EF.Property&lt;/code&gt;静态方法，通过隐藏属性LastUpdated排序，读取blog集合数据。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　　　var&lt;/span&gt; blogs = context.Blogs.OrderBy(b =&amp;gt; EF.Property&amp;lt;DateTime&amp;gt;(b, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LastUpdated&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;));
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;二.约定&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;　&lt;/strong&gt;　&lt;span&gt;下面讲第二个功能，隐藏属性通常用于外键属性&lt;/span&gt;。当二个实体存在主从&lt;span data-ttu-id=&quot;54054-110&quot;&gt;关系，但在依赖实体类中找不到外键属性时，默认是通过&quot;约定&quot;来创建隐藏外键属性的&lt;span data-ttu-id=&quot;54054-111&quot;&gt;。隐藏外键属性将被命名为&lt;code&gt;&amp;lt;navigation property name&amp;gt;&amp;lt;principal key property name&amp;gt;。以下面的示例来说：post依赖实体中包含了隐藏的外键属性 “&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;BlogId &lt;span data-ttu-id=&quot;54054-110&quot;&gt;&lt;span data-ttu-id=&quot;54054-111&quot;&gt;&lt;code&gt;”。&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Blog
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; BlogId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Url { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Post&amp;gt; Posts { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Post
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; PostId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Title { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Content { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Blog Blog { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　下面简单测试下，通过初例化一个的Post依赖实体，查看该实例中是否包含了BlogId 外键隐藏属性，通过ChangeTracker API来获取，使用断点查看该BlogId 隐藏属性确实存在,只是在Post实体上是非公开的外键属性：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
   &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnGet()
        {&lt;/span&gt;
            &lt;span&gt;object&lt;/span&gt; obj = _bloggingContext.Entry(&lt;span&gt;new&lt;/span&gt; Post()).Property(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BlogId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).CurrentValue;
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
_bloggingContext.Entry(&lt;span&gt;new&lt;/span&gt; Post()).Property(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;BlogId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
{Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry}
    CurrentValue: &lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;
    EntityEntry: {Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry}
    InternalEntry: {Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry}
    IsModified: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
    IsTemporary: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
    Metadata (Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry): {Property: Post.BlogId (no field, Nullable&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;) Shadow FK Index &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;}
    Metadata: {Property: Post.BlogId (no field, Nullable&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;) Shadow FK Index &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;0&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;}
    OriginalValue: &lt;/span&gt;&lt;span&gt;null&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;参考文献：&lt;/p&gt;
&lt;p&gt;　　　　官方文档：&lt;a href=&quot;https://docs.microsoft.com/zh-cn/ef/core/modeling/shadow-properties&quot; target=&quot;_blank&quot;&gt;EF 隐藏属性&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 17 Feb 2019 03:19:00 +0000</pubDate>
<dc:creator>花阴偷移</dc:creator>
<og:description>一. 隐藏属性概述 隐藏属性也叫影子属性，该属性不是在.net实体类中定义的属性，而是在EFCore模型中为该实体类型定义的属性。这些属性的值和状态完全在变更跟踪器中维护。它有二个功能：(1)当数据库</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/MrHSR/p/10383576.html</dc:identifier>
</item>
<item>
<title>Webpack学习－工作原理（上） - 24k-小清新</title>
<link>http://www.cnblogs.com/wuxiaobin/p/10390381.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuxiaobin/p/10390381.html</guid>
<description>&lt;p&gt;对于webpack的认识始终停留在对脚手架的使用，不得不说脚手架既方便又好用，修改起来也方便，只需要知道webpack中各个配置项的功能，于是对于我们来说，webpack始终就是一个黑盒子，我们完全不清楚里面是如何去运作的。打包时报错，就只能借助google来协助帮忙解决问题，至于为什么要这样解决，什么原理，不管，能解决就好。那么，了解一下基本原理也是有必要。&lt;/p&gt;
&lt;h2 id=&quot;概念&quot;&gt;概念&lt;/h2&gt;
&lt;p&gt;言归正传，我们一起了解一下webpack运行基本原理，首先先明白几个核心概念，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;Entry：入口，webpack构建的起始&lt;/li&gt;
&lt;li&gt;Module：模块，webpack里面一切皆模块，也是代表着文件，从Entry配置的入口文件开始，递归找出依赖的模块&lt;/li&gt;
&lt;li&gt;Chunk：代码块，找出递归依赖模块经转换后组合成代码块&lt;/li&gt;
&lt;li&gt;Loader：模块转换器，也就是将模块的内容按照需求装换成新内容&lt;/li&gt;
&lt;li&gt;Plugin：扩展插件，webpack构建过程中，会在特定的时机广播对应的事件，而插件可以监听这些事件的发生&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;流程&quot;&gt;流程&lt;/h2&gt;
&lt;p&gt;webpack构建流程，详细过程如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;初始化：从配置文件或是shell读取与合并参数，得到最终参数，实例化插件new Plugin()&lt;/li&gt;
&lt;li&gt;开始编译：通过上一步初始化得到的最终参数，初始化一个Compiler对象，加载插件（依次调用插件中的apply方法），通过执行Compiler.run开始编译&lt;/li&gt;
&lt;li&gt;确定入口：根据配置中entry找出所有入口文件&lt;/li&gt;
&lt;li&gt;编译模块：从entry出发，调用配置的loader，对模块进行转换，同时找出模块依赖的模块（如何找？见下文），依次递归，直到所有依赖模块完成本步骤处理&lt;/li&gt;
&lt;li&gt;完成模块编译：这一步已经使用loader对所有模块进行了转换，得到了转换后的新内容以及依赖关系&lt;/li&gt;
&lt;li&gt;输出资源： 根据入口与模块之间的依赖关系，组装成一个个chunk代码块，并且生成文件输出列表&lt;/li&gt;
&lt;li&gt;输出成功：根据配置中的输出路径和文件名，将文件写入文件系统，完成构建&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;事件&quot;&gt;事件&lt;/h2&gt;
&lt;p&gt;整个构建流程会发生很多的事件，来供Plugin监听，这些事件具体的可以分为三个阶段，分别是&lt;code&gt;初始化阶段&lt;/code&gt;、&lt;code&gt;编译阶段&lt;/code&gt;、&lt;code&gt;输出阶段&lt;/code&gt;，那么具体有哪些事件，这里按阶段分别介绍，&lt;/p&gt;
&lt;h3 id=&quot;初始化阶段&quot;&gt;初始化阶段&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;9.5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;初始化&lt;/td&gt;
&lt;td&gt;从配置文件或是shell读取与合并参数，得到最终参数，依次实例化插件new Plugin()&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;实例化Compiler&lt;/td&gt;
&lt;td&gt;通过上一步初始化得到的最终参数，初始化一个Compiler对象，负责监听文件和启动编译，全局只有一个Compiler对象&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;加载插件&lt;/td&gt;
&lt;td&gt;依次调用插件中的apply方法，同时也会将Compiler实例传入，就可以调用Webpack提供的api，&lt;code&gt;Compiler实例可以说是就是Webpack的实例&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;environment&lt;/td&gt;
&lt;td&gt;将node.js风格的文件系统应用到compiler对象，便可以直接通过compiler来对文件进行操作&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;entry-option&lt;/td&gt;
&lt;td&gt;读取配置中的entry，依次实例化出对应EntryPlugin，为后面该entry的递归解析工作做准备&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;after-plugins&lt;/td&gt;
&lt;td&gt;调完所有内置和配置的插件的apply方法&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;after-resolvers&lt;/td&gt;
&lt;td&gt;根据配置初始化resolvers，resolvers负责在文件系统中寻找制定路径的文件&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;编译阶段&quot;&gt;编译阶段&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;10&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;run&lt;/td&gt;
&lt;td&gt;启动一次新的编译，调用Compiler.run()&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;watch-run&lt;/td&gt;
&lt;td&gt;和run类似，区别在于它是在监听模式下进行编译的，这个事件可以获取哪些文件发生了变化从而导致新的一次编译&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;compile&lt;/td&gt;
&lt;td&gt;告诉插件新的一次编译即将启动，并且给插件带上compiler对象&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;compilation&lt;/td&gt;
&lt;td&gt;每当检测到文件的变化，都会有一次新的compilation被创建，一个compilation对象包含了当前的模块资源、编译生成的资源、变化的文件等等的属性和方法，同时记住，在很多事件的的回调中都会将compilation传入，以便使用&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;make&lt;/td&gt;
&lt;td&gt;一个新的Compilation创建完毕，那么就会从entry配置中开始读取文件，使用配置好的loader对文件进行编译，编译完后再找出文件依赖的文件，递归地去编译和解析&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;after-compile&lt;/td&gt;
&lt;td&gt;一次Compilation执行完成&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;invalid&lt;/td&gt;
&lt;td&gt;文件编译错误等异常触发该事件,不会导致webpack退出&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Compilation的事件&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;build－moudle&lt;/td&gt;
&lt;td&gt;使用对应的loader去转换一个模块&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;normal－module－loader&lt;/td&gt;
&lt;td&gt;在用loader转换一个模块后，会使用acorn解析转换后的内容输出对应的抽象语法树（ast）,以便webpack后面分析代码使用&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;program&lt;/td&gt;
&lt;td&gt;从配置的入口开始，分析生成的ast，遇到require等导入语句时，便会将其加入依赖模块列表，并且对找出的依赖进行递归分析，最终可以弄清所有依赖关系&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;seal&lt;/td&gt;
&lt;td&gt;所有模块及其依赖的模块都通过Loader转换完成，根据依赖关系生成chunk&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;输出阶段&quot;&gt;输出阶段&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;5.5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;should－emit&lt;/td&gt;
&lt;td&gt;所有需要输出的文件都生成，准备输出，询问哪些文件需要输出，哪些不需要输出&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;emit&lt;/td&gt;
&lt;td&gt;确定好要输出哪些文件后，并执行文件输出，可以在这里获取和修改输出的内容&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;after－emit&lt;/td&gt;
&lt;td&gt;文件输出完毕&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;done&lt;/td&gt;
&lt;td&gt;完成一次完整的编译和输出流程&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;failed&lt;/td&gt;
&lt;td&gt;编译和输出过程中运到异常，导致webpack退出，会直接到这个步骤，可以在这里获取具体原因&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;
&lt;p&gt;Webpack是很好的前端资源加载和打包工具，在webpack里&lt;code&gt;一切皆模块&lt;/code&gt;，很好地处理文件之间的依赖关系，这里我们介绍的是些理论性的知识，了解基本概念，知道整个流程是怎么样的，webpack是串行流水线运行的，工作期间会有很多广播事件，来供插件使用，这里我们介绍了各个阶段的事件以及作用，具体代码表示形式，后续文章会引入。&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 02:48:00 +0000</pubDate>
<dc:creator>24k-小清新</dc:creator>
<og:description>对于webpack的认识始终停留在对脚手架的使用，不得不说脚手架既方便又好用，修改起来也方便，只需要知道webpack中各个配置项的功能，于是对于我们来说，webpack始终就是一个黑盒子，我们完全不</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wuxiaobin/p/10390381.html</dc:identifier>
</item>
</channel>
</rss>