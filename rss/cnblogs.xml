<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>聊一聊 InnoDB 引擎中的这些索引策略 - 平头哥的技术博文</title>
<link>http://www.cnblogs.com/jamaler/p/12239558.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jamaler/p/12239558.html</guid>
<description>&lt;p&gt;在上一篇中，我们简单的介绍了一下 InnoDB 引擎的索引类型，这一篇我们继续学习 InnoDB 的索引，聊一聊索引策略，更好的利用好索引，提升数据库的性能，主要聊一聊覆盖索引、最左前缀原则、索引下推。&lt;/p&gt;
&lt;h2 id=&quot;覆盖索引&quot;&gt;覆盖索引&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;覆盖索引是指在普通索引树中可以得到查询的结果，不需要在回到主键索引树中再次搜索&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;建立如下这张表来演示覆盖索引：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;mysql&amp;gt; create table T (
ID int primary key,
age int NOT NULL DEFAULT 0, 
name varchar(16) NOT NULL DEFAULT '',
index age(age))
engine=InnoDB;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们执行&lt;code&gt;select * from T where age between 13 and 25&lt;/code&gt; 语句，这条语句的执行流程大概为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1、在 age 索引树中查找到 age = 13 的记录，取得 ID 的值&lt;/li&gt;
&lt;li&gt;2、根据 id 的值在主键索引上查找所需要的所有信息&lt;/li&gt;
&lt;li&gt;3、在 age 树上往下取，重复 1、2 两步操作，直到 age 不符合条件为止。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如果我们将语句换为 &lt;code&gt;select ID from T where age between 13 and 25&lt;/code&gt;，执行这条语句时，在 age 索引树上就可以查询到 ID 的值，省去了上面的回表操作，这样就减少了搜索次数，提升了查询效率。&lt;/p&gt;
&lt;p&gt;这时候的 age 索引树已经可以满足我们的查询需求，age 索引就称为覆盖索引。&lt;/p&gt;
&lt;p&gt;覆盖索引是常用的数据查询优化技术，可以极大的提升数据库性能，有以下几个原因：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;减少树的搜索次数，显著提升查询性能&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;索引是按照值的顺序存储，所以对于 I/O 密集型的范围查询比随机从磁盘中读取每一行的 I/O 要少很多&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;索引的条目远小于数据的条目，在索引树上读取会极大的减小数据库的访问量&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;最左前缀原则&quot;&gt;最左前缀原则&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;最左前缀原则是建立在联合索引之上的，如果我们建立了联合索引，我们不需要使用索引的全部定义，只要用到了索引中的最左边的那个字段就可以使用这个索引，这就是 B-tree 索引支持最左前缀原则。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建立如下这张表来解释最左前缀原则：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;mysql&amp;gt; create table T (
ID int primary key,
age int NOT NULL DEFAULT 0, 
name varchar(16) NOT NULL DEFAULT '',
ismale tinyint(1) DEFAULT NULL,
email varchar(64),
address varchar(255),
KEY `name_age` (`name`,`age`))
engine=InnoDB;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们建立了联合索引 name_age，现在，假设我们有一下三种查询情景：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1、查出用户名的第一个字是“张”开头的人的年龄。即查询条件子句为&quot;where name like '张%'&quot;&lt;/li&gt;
&lt;li&gt;2、查处用户名中含有“张”字的人的年龄。即查询条件子句为&quot;where name like '%张%'&quot;&lt;/li&gt;
&lt;li&gt;3、查出用户名以“张”字结尾的人的年龄。即查询条件子句为&quot;where name like '%张'&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在这三种情况中，第一种情况可以利用到 name_age 这个联合索引，加速查询，可以看出，我们并没有&lt;br/&gt;使用索引的全部定义，&lt;strong&gt;只要满足最左前缀，就可以利用索引来加速检索。这个最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我们将索引的顺序调整为&lt;code&gt;KEY&lt;/code&gt;name_age&lt;code&gt;(&lt;/code&gt;age&lt;code&gt;,&lt;/code&gt;name&lt;code&gt;)&lt;/code&gt; ，那么上面三种情况都使用不到这个联合索引。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;维护索引需要代价，所以有时候我们可以利用“最左前缀”原则减少索引数量&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;索引下推&quot;&gt;索引下推&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;索引下推优化是 MySQL 5.6 引入的， 可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建立如下这张表来解释索引下推：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;mysql&amp;gt; create table T (
ID int primary key,
age int NOT NULL DEFAULT 0, 
name varchar(16) NOT NULL DEFAULT '',
ismale tinyint(1) DEFAULT NULL,
email varchar(64),
address varchar(255),
KEY `name_age` (`name`,`age`))
engine=InnoDB;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在表中建立了 name、age 的联合索引，我们执行 &lt;code&gt;select * from T where name like '张%' and age=10 and ismale=1;&lt;/code&gt;语句，&lt;strong&gt;我们已经知道了B-tree 索引的最左前缀原则，所以将会用到 name_age 索引，因为索引下推优化，会在 name_age 索引树上判断 name 和 age 是否满足&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;根据我们上面的执行语句，会在 name_age 索引树上查找 name 以 '张' 开头的并且 age = 10 的数据，然后在回到主键索引树中查询所需要的信息，并不是所有 name_age 索引树上查找 name 以 '张' 开头的数据都回主键索引树中查询数据，这样就减少了一些不必要的查询。&lt;/p&gt;
&lt;p&gt;假设我们的数据如下图所示：&lt;br/&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcubXVrZXdhbmcuY29tLzVlMzAzZjdiMDAwMTc2ZTMxMTQyMDg1Ni5qcGc?x-oss-process=image/format,png&quot; alt=&quot;索引下推&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在 name_age 索引树中有四条符合 name 以 '张'开头的数据，如果没有索引下推，则需要回到主键索引树上判断 age 是否等于 10 ，这样就需要回表四次，而有了索引下推之后，在 name_age 索引树上就判断 age 是否等于 10 ，只需要回表两次，这样就减少了回表次数，提升了查询性能。&lt;/p&gt;
&lt;p&gt;以上就是关于 InnoDB 引擎中的索引策略，感谢您的阅读，希望这篇文章对您的学习或者工作有所帮助。&lt;/p&gt;
&lt;h3 id=&quot;最后&quot;&gt;最后&lt;/h3&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;目前互联网上很多大佬都有 MySQL 相关文章，如有雷同，请多多包涵了。原创不易，码字不易，还希望大家多多支持。若文中有所错误之处，还望提出，谢谢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎扫码关注微信公众号：「平头哥的技术博文」，和平头哥一起学习，一起进步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAyMC8xLzMvMTZmNjkzYmYxZWI2ZjY2Nw?x-oss-process=image/format,png&quot; alt=&quot;平头哥的技术博文&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 29 Jan 2020 00:33:00 +0000</pubDate>
<dc:creator>平头哥的技术博文</dc:creator>
<og:description>在上一篇中，我们简单的介绍了一下 InnoDB 引擎的索引类型，这一篇我们继续学习 InnoDB 的索引，聊一聊索引策略，更好的利用好索引，提升数据库的性能，主要聊一聊覆盖索引、最左前缀原则、索引下推</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/jamaler/p/12239558.html</dc:identifier>
</item>
<item>
<title>Java设计模式——代理模式 - 程序猿开心</title>
<link>http://www.cnblogs.com/programmerkaixin/p/12239408.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/programmerkaixin/p/12239408.html</guid>
<description>&lt;h2 id=&quot;代理模式&quot;&gt;代理模式&lt;/h2&gt;
&lt;h4 id=&quot;学习目标&quot;&gt;学习目标&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;掌握代理模式的应用场景和实现原理。
&lt;ul&gt;&lt;li&gt;应用场景
&lt;ul&gt;&lt;li&gt;保护目标对象：客户并不知道对象是如何实现具体业务功能的，只要调用代理对象的接口就行了。&lt;/li&gt;
&lt;li&gt;增强目标对象：在实现目标对象的业务功能之前或者之后做一些业务实现。&lt;code&gt;Spring-AOP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;实现原理
&lt;ul&gt;&lt;li&gt;静态代理：代理对象持有被代理对象的引用。由被代理对象实现目标业务。&lt;/li&gt;
&lt;li&gt;动态代理：代理对象持有被代理对象的引用，代码运行产生一个新的&lt;code&gt;java&lt;/code&gt;类，并被编译重新加载，然后在新的类中执行目标业务实现动态代理。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;了解静态代理和动态代理的区别。
&lt;ul&gt;&lt;li&gt;静态代理：被代理对象在代码中被写死了，不易扩展，适用于简单的业务，代码复用性不高，违背开闭原则。&lt;/li&gt;
&lt;li&gt;动态代理：只要是实现了同一个接口的被代理类，都可以代理实现，实现了业务扩展。代码复用，遵循开闭原则。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;了解&lt;code&gt;CGLib和JDK-proxy&lt;/code&gt;的区别。
&lt;ul&gt;&lt;li&gt;&lt;code&gt;JDK-proxy&lt;/code&gt;动态代理：实现了被代理对象的接口，生成新的class字节码，利用反射调用实现代理。&lt;strong&gt;无法代理不实现代理业务接口的方法。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CGLib&lt;/code&gt;动态代理：继承被代理对象，生成新的class字节码，通过&lt;code&gt;fastclass&lt;/code&gt;机制调用实现代理。&lt;strong&gt;无法代理被final关键字修饰的方法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;代理模式的定义&quot;&gt;代理模式的定义&lt;/h4&gt;
&lt;p&gt;为其他对象提供一种代理，以控制对这个对象的访问。代理对象在客户端和服务端起到中介的作用。是一种结构型设计模式。&lt;/p&gt;
&lt;h4 id=&quot;静态代理&quot;&gt;静态代理&lt;/h4&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 被代理对象需要实现的目标接口
 * @author: lmc
 * @create: 2019-06-12 15:38
 **/
public interface ITarget {
    /**
     * @description: 被代理对象的行为
     * @return void
     * @date 2019/6/12 15:39
     * @author lmc
     */
    void behavior();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 真实的被代理的目标对象
 * @author: lmc
 * @create: 2019-06-12 15:41
 **/
public class TargetImpl implements ITarget {

    public void behavior() {
        System.out.println(&quot;执行真实的被代理对象的行为。&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;下面的类也是一个被代理的目标对象，&lt;strong&gt;但是没有实现&lt;code&gt;ITarget&lt;/code&gt;接口&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 真实的被代理的目标对象
 * @author: lmc
 * @create: 2019-06-12 15:41
 **/
public class Target{

    public void behavior() {
        System.out.println(&quot;执行被代理对象target的行为。&quot;);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 静态代理类
 * @author: lmc
 * @create: 2019-06-12 15:45
 **/
public class StaticProxy {

    /**
     *  持有被代理对象的引用
     */
    private ITarget targetImpl;

    /**
     *  持有被代理对象的引用
     */
    private Target target;//一个没有实现接口的类



    /**
     *  构造方法初始化值
     * @param targetImpl
     */
    public StaticProxy(ITarget targetImpl,Target target){
        this.targetImpl=targetImpl;
        this.target=target;
    }

    /**
     * @description: 被代理之前的增强行为
     * @date 2019/6/12 15:56
     * @author lmc
     */
    private void beforeBehavior(){
        System.out.println(&quot;执行代理之前需要做的一些事情。&quot;);
    }

    /**
     * @description: 被代理之后的增强行为
     * @date 2019/6/12 15:57
     * @author lmc
     */
    private void afterBehavior(){
        System.out.println(&quot;执行代理之后需要做的一些事情。&quot;);
    }

    /**
     * @description: 开始执行代理
     * @date 2019/6/12 15:59
     * @author lmc
     */

    public void startProxy(){
        beforeBehavior();
        targetImpl.behavior();
        target.behavior();
        afterBehavior();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 静态代理客户端 懒汉式单例
 * @author: lmc
 * @create: 2019-06-12 16:01
 **/
public class StaticProxyClient implements Serializable {

    private final static StaticProxyClient staticProxyClient=new StaticProxyClient();

    private StaticProxyClient(){
        if(null != staticProxyClient){
            throw new RuntimeException(&quot;单例类，不允许被反射实例化&quot;);
        }
    };

    public static StaticProxyClient getInstance(){
        return staticProxyClient;
    }

    /**
     * @description: 开始静态代理
     * @date 2019/6/12 16:20
     * @author lmc
     */
    public void startStaticProxy(){
        ITarget targetImpl=new TargetImpl();
        Target target=new Target();
        StaticProxy staticProxy=new StaticProxy(targetImpl,target);
        staticProxy.startProxy();
    }

    /**
     * @description: 重写readResolve，防止序列化破坏单例
     * @return java.lang.Object
     * @date 2019/6/12 16:18
     * @author lmc
     */
    private Object readResolve(){
        return staticProxyClient;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 静态代理测试
 * @author: lmc
 * @create: 2019-06-12 16:10
 **/
public class StaticProxyTest {

    public static void main(String[] args) {

        StaticProxyClient.getInstance().startStaticProxy();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;静态代理测试结果&quot;&gt;静态代理测试结果&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1677319/202001/1677319-20200128235821789-455552157.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;只要代理对象持有被代理对象的引用就可以实现静态代理了。&lt;/p&gt;
&lt;h4 id=&quot;jdk-proxy动态代理&quot;&gt;&lt;code&gt;JDK-proxy&lt;/code&gt;动态代理&lt;/h4&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 真实的被代理的目标对象
 * @author: lmc
 * @create: 2019-06-12 15:41
 **/
public class TargetImpl1 implements ITarget {

    public void behavior() {
        System.out.println(&quot;执行被代理对象1的行为。&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 真实的被代理的目标对象
 * @author: lmc
 * @create: 2019-06-12 15:41
 **/
public class TargetImpl2 implements ITarget {

    public void behavior() {
        System.out.println(&quot;执行被代理对象2的行为。&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: 真实的被代理的目标对象
 * @author: lmc
 * @create: 2019-06-12 15:41
 **/
public class TargetImpl3 implements ITarget {

    public void behavior() {
        System.out.println(&quot;执行被代理对象3的行为。&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: JDK动态代理对象
 * @author: lmc
 * @create: 2019-06-12 17:00
 **/

public class JdkProxy implements InvocationHandler {

    /**
     * 被代理对象的引用
     */
    private ITarget target;

    /**
     * @description: 获取代理之后的实例对象
     * @param target 被代理对象
     * @return com.lmc.gp12380.pattern.proxy.ITarget
     * @date 2019/6/12 19:55
     * @author lmc
     */
    public ITarget getProxyInstance(ITarget target){
        this.target = target;
        Class&amp;lt;?&amp;gt; clazz = target.getClass();
        return (ITarget) Proxy.newProxyInstance(clazz.getClassLoader(),clazz.getInterfaces(),this);
    }

    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        beforeBehavior();
        //通过反编译工具可以查看源代码
        byte [] bytes = ProxyGenerator.generateProxyClass(&quot;$Proxy0&quot;,new Class[]{ITarget.class});
        FileOutputStream os = new FileOutputStream(&quot;E://$Proxy0.class&quot;); os.write(bytes); os.close();
        Object obj = method.invoke(this.target,args);
        afterBehavior();
        return obj;
    }

    /**
     * @description: 被代理之前的增强行为
     * @date 2019/6/12 15:56
     * @author lmc
     */
    private void beforeBehavior(){
        System.out.println(&quot;执行代理之前需要做的一些事情。&quot;);
    }

    /**
     * @description: 被代理之后的增强行为
     * @date 2019/6/12 15:57
     * @author lmc
     */
    private void afterBehavior(){
        System.out.println(&quot;执行代理之后需要做的一些事情。&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下面这个类是测试没有实现&lt;code&gt;ITarget&lt;/code&gt;接口的代理&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: JDK动态代理对象
 * @author: lmc
 * @create: 2019-06-12 17:00
 **/
public class JdkProxy1 implements InvocationHandler {

    /**
     * 被代理对象的引用
     */
    private Target target;

    /**
     * @description: 获取代理之后的实例对象
     * @param target 被代理对象
     * @return com.lmc.gp12380.pattern.proxy.ITarget
     * @date 2019/6/12 19:55
     * @author lmc
     */
    public Target getProxyInstance(Target target){
        this.target = target;
        Class&amp;lt;?&amp;gt; clazz = target.getClass();
        return (Target) Proxy.newProxyInstance(clazz.getClassLoader(),clazz.getInterfaces(),this);
    }

    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        beforeBehavior();
        //通过反编译工具可以查看源代码
        byte [] bytes = ProxyGenerator.generateProxyClass(&quot;$Proxy0&quot;,new Class[]{ITarget.class});
        FileOutputStream os = new FileOutputStream(&quot;E://$Proxy0.class&quot;); os.write(bytes); os.close();
        Object obj = method.invoke(this.target,args);
        afterBehavior();
        return obj;
    }

    /**
     * @description: 被代理之前的增强行为
     * @date 2019/6/12 15:56
     * @author lmc
     */
    private void beforeBehavior(){
        System.out.println(&quot;执行代理之前需要做的一些事情。&quot;);
    }

    /**
     * @description: 被代理之后的增强行为
     * @date 2019/6/12 15:57
     * @author lmc
     */
    private void afterBehavior(){
        System.out.println(&quot;执行代理之后需要做的一些事情。&quot;);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;下面这个类是&lt;code&gt;Jdk-proxy&lt;/code&gt;代理生成的class字节码反编译之后的&lt;code&gt;java&lt;/code&gt;类&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public final class $Proxy0 extends Proxy
        implements ITarget {

    public $Proxy0(InvocationHandler invocationhandler) {
        super(invocationhandler);
    }

    public final boolean equals(Object obj) {
        try {
            return ((Boolean) super.h.invoke(this, m1, new Object[]{
                    obj
            })).booleanValue();
        } catch (Error _ex) {
        } catch (Throwable throwable) {
            throw new UndeclaredThrowableException(throwable);
        }
        return false;
    }

    public final String toString() {
        try {
            return (String) super.h.invoke(this, m2, null);
        } catch (Error _ex) {
        } catch (Throwable throwable) {
            throw new UndeclaredThrowableException(throwable);
        }
        return null;
    }

    public final void behavior() {
        try {
            super.h.invoke(this, m3, null);
            return;
        } catch (Error _ex) {
        } catch (Throwable throwable) {
            throw new UndeclaredThrowableException(throwable);
        }
    }

    public final int hashCode() {
        try {
            return ((Integer) super.h.invoke(this, m0, null)).intValue();
        } catch (Error _ex) {
        } catch (Throwable throwable) {
            throw new UndeclaredThrowableException(throwable);
        }
        return 0;
    }

    private static Method m1;
    private static Method m2;
    private static Method m3;
    private static Method m0;

    static {
        try {
            m1 = Class.forName(&quot;java.lang.Object&quot;).getMethod(&quot;equals&quot;, new Class[]{
                    Class.forName(&quot;java.lang.Object&quot;)
            });
            m2 = Class.forName(&quot;java.lang.Object&quot;).getMethod(&quot;toString&quot;, new Class[0]);
            m3 = Class.forName(&quot;com.lmc.gp12380.pattern.proxy.ITarget&quot;).getMethod(&quot;behavior&quot;, new Class[0]);
            m0 = Class.forName(&quot;java.lang.Object&quot;).getMethod(&quot;hashCode&quot;, new Class[0]);
        } catch (NoSuchMethodException nosuchmethodexception) {
            throw new NoSuchMethodError(nosuchmethodexception.getMessage());
        } catch (ClassNotFoundException classnotfoundexception) {
            throw new NoClassDefFoundError(classnotfoundexception.getMessage());
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;这里我们知道了这个反编译生成的&lt;code&gt;java&lt;/code&gt;类实现了&lt;code&gt;ITarget&lt;/code&gt;接口&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: JDK代理实现测试
 * @author: lmc
 * @create: 2019-06-12 19:49
 **/
public class JdkProxyTest {

    public static void main(String[] args) {

        ITarget target1 = (ITarget) new JdkProxy().getProxyInstance(new TargetImpl1());
        target1.behavior();

        ITarget target2 = (ITarget) new JdkProxy().getProxyInstance(new TargetImpl2());
        target2.behavior();

        ITarget target3 = (ITarget) new JdkProxy().getProxyInstance(new TargetImpl3());
        target3.behavior();

        /**
         *  Target 类没有实现接口 无法被jdkproxy代理
         */
        ITarget target4 = (ITarget) new JdkProxy1().getProxyInstance(new Target());
        target4.behavior();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;jdk-proxy动态代理测试结果&quot;&gt;&lt;code&gt;JDK-proxy&lt;/code&gt;动态代理测试结果&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1677319/202001/1677319-20200128235919509-457563048.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;嘿嘿，可以看到&lt;code&gt;target4&lt;/code&gt;代理出错啦。&lt;strong&gt;原因就是&lt;code&gt;Target&lt;/code&gt;类没有实现&lt;code&gt;ITarget&lt;/code&gt;接口。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;cglib动态代理&quot;&gt;&lt;code&gt;CGLib&lt;/code&gt;动态代理&lt;/h4&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: CGLib动态代理对象
 * @author: lmc
 * @create: 2019-06-12 17:00
 **/
public class CGLibProxy implements MethodInterceptor {

    /**
     * @description: 被代理之前的增强行为
     * @date 2019/6/12 15:56
     * @author lmc
     */
    private void beforeBehavior(){
        System.out.println(&quot;执行代理之前需要做的一些事情。&quot;);
    }

    /**
     * @description: 被代理之后的增强行为
     * @date 2019/6/12 15:57
     * @author lmc
     */
    private void afterBehavior(){
        System.out.println(&quot;执行代理之后需要做的一些事情。&quot;);
    }


    /**
     * @description: 获取代理之后的实例对象
     * @param target 被代理对象
     * @return com.lmc.gp12380.pattern.proxy.ITarget
     * @date 2019/6/12 19:55
     * @author lmc
     */
    public Object getProxyInstance(Object target){

        Class&amp;lt;?&amp;gt; clazz = target.getClass();
        //相当于Proxy，代理的工具类
        Enhancer enhancer = new Enhancer();
        enhancer.setSuperclass(clazz);
        enhancer.setCallback(this);
        return enhancer.create();
    }

    @Override
    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {
        beforeBehavior();
        /**
         *  利用 cglib 的代理类可以将内存中的 class 文件写入本地磁盘
         */
        System.setProperty(DebuggingClassWriter.DEBUG_LOCATION_PROPERTY, &quot;E://cglib_proxy_class/&quot;);

        Object obj = methodProxy.invokeSuper(o,objects);
        afterBehavior();
        return obj;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * @description: CGLib代理实现测试
 * @author: lmc
 * @create: 2019-06-12 20:26
 **/
public class CGLibProxyTest {

    public static void main(String[] args) {

        ITarget target1= (ITarget) new CGLibProxy().getProxyInstance(new TargetImpl1());
        target1.behavior();

        ITarget target2= (ITarget) new CGLibProxy().getProxyInstance(new TargetImpl2());
        target2.behavior();

        ITarget target3= (ITarget) new CGLibProxy().getProxyInstance(new TargetImpl3());
        target3.behavior();

        Target target4= (Target) new CGLibProxy().getProxyInstance(new Target());
        target4.behavior();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;cglib动态代理测试结果&quot;&gt;&lt;code&gt;CGLib动态代理测试结果&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1677319/202001/1677319-20200128235946823-1346693957.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;嘿嘿，&lt;strong&gt;可以看到Target没有实现&lt;code&gt;ITarget&lt;/code&gt;接口，也能实现动态代理。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代码里面是可以生成&lt;code&gt;CGLib&lt;/code&gt;动态代理的字节码文件的，也可以反编译过来看看，因为我是看不懂，我就不展示了。&lt;/p&gt;
&lt;h4 id=&quot;代理模式的优缺点&quot;&gt;代理模式的优缺点&lt;/h4&gt;
&lt;h5 id=&quot;优点&quot;&gt;优点&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;代理模式能将代理对象与真实被调用的目标对象分离。&lt;/li&gt;
&lt;li&gt;一定程度上降低了系统的耦合度，扩展性好。&lt;/li&gt;
&lt;li&gt;可以起到保护目标对象的作用。&lt;/li&gt;
&lt;li&gt;可以对目标对象的功能增强。&lt;/li&gt;
&lt;/ol&gt;&lt;h5 id=&quot;缺点&quot;&gt;缺点&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;代理模式会造成系统设计中类的数量增加。&lt;/li&gt;
&lt;li&gt;在客户端和目标对象增加一个代理对象，会造成请求处理速度变慢。&lt;/li&gt;
&lt;li&gt;增加了系统的复杂度。&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Tue, 28 Jan 2020 16:04:00 +0000</pubDate>
<dc:creator>程序猿开心</dc:creator>
<og:description>代理模式 学习目标 掌握代理模式的应用场景和实现原理。 应用场景 保护目标对象：客户并不知道对象是如何实现具体业务功能的，只要调用代理对象的接口就行了。 增强目标对象：在实现目标对象的业务功能之前或者</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/programmerkaixin/p/12239408.html</dc:identifier>
</item>
<item>
<title>你可能不知道的 Python 技巧 - 豌豆花下猫</title>
<link>http://www.cnblogs.com/pythonista/p/12239112.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pythonista/p/12239112.html</guid>
<description>&lt;p&gt;&lt;strong&gt;英文&lt;/strong&gt; | &lt;a href=&quot;https://martinheinz.dev/blog/1&quot;&gt;Python Tips and Trick, You Haven't Already Seen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原作&lt;/strong&gt; | Martin Heinz (&lt;a href=&quot;https://martinheinz.dev&quot; class=&quot;uri&quot;&gt;https://martinheinz.dev&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;译者&lt;/strong&gt; | 豌豆花下猫&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明&lt;/strong&gt; ：本文获得原作者授权翻译，转载请保留原文出处，请勿用于商业或非法用途。&lt;/p&gt;
&lt;p&gt;有许许多多文章写了 Python 中的许多很酷的特性，例如变量解包、偏函数、枚举可迭代对象，但是关于 Python 还有很多要讨论的话题，因此在本文中，我将尝试展示一些我知道的和在使用的，但很少在其它文章提到过的特性。那就开始吧。&lt;/p&gt;
&lt;h2 id=&quot;对输入的字符串消毒&quot;&gt;1、对输入的字符串“消毒”&lt;/h2&gt;
&lt;p&gt;对用户输入的内容“消毒”，这问题几乎适用于你编写的所有程序。通常将字符转换为小写或大写就足够了，有时你还可以使用正则表达式来完成工作，但是对于复杂的情况，还有更好的方法：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;user_input = &quot;This\nstring has\tsome whitespaces...\r\n&quot;

character_map = {
 ord('\n') : ' ',
 ord('\t') : ' ',
 ord('\r') : None
}
user_input.translate(character_map)  # This string has some whitespaces... &quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在此示例中，你可以看到空格字符“ \n”和“ \t”被单个空格替换了，而“ \r”则被完全删除。这是一个简单的示例，但是我们可以更进一步，使用&lt;code&gt;unicodedata&lt;/code&gt; 库及其 combining() 函数，来生成更大的重映射表（remapping table），并用它来删除字符串中所有的重音。&lt;/p&gt;
&lt;h2 id=&quot;对迭代器切片&quot;&gt;2、对迭代器切片&lt;/h2&gt;
&lt;p&gt;如果你尝试直接对迭代器切片，则会得到 TypeError ，提示说该对象不可取下标（not subscriptable），但是有一个简单的解决方案：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import itertools

s = itertools.islice(range(50), 10, 20)  # &amp;lt;itertools.islice object at 0x7f70fab88138&amp;gt;
for val in s:
 ...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使用&lt;code&gt;itertools.islice&lt;/code&gt;，我们可以创建一个 islice 对象，该对象是一个迭代器，可以生成我们所需的内容。但是这有个重要的提醒，即它会消耗掉切片前以及切片对象 islice 中的所有元素。&lt;/p&gt;
&lt;p&gt;（译注：更多关于迭代器切片的内容，可阅读 &lt;a href=&quot;https://mp.weixin.qq.com/s/DIhwoJE3o0kKw3kzZKysag&quot;&gt;Python进阶：迭代器与迭代器切片&lt;/a&gt;）&lt;/p&gt;
&lt;h2 id=&quot;跳过可迭代对象的开始&quot;&gt;3、跳过可迭代对象的开始&lt;/h2&gt;
&lt;p&gt;有时候你必须处理某些文件，它们以可变数量的不需要的行（例如注释）为开头。 itertools 再次提供了简单的解决方案：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;string_from_file = &quot;&quot;&quot;
// Author: ...
// License: ...
//
// Date: ...

Actual content...
&quot;&quot;&quot;

import itertools

for line in itertools.dropwhile(lambda line:line.startswith(&quot;//&quot;), string_from_file.split(&quot;\n&quot;)):
    print(line)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这段代码仅会打印在初始的注释部分之后的内容。如果我们只想丢弃迭代器的开头部分（在此例中是注释），并且不知道有多少内容，那么此方法很有用。&lt;/p&gt;
&lt;h2 id=&quot;仅支持关键字参数kwargs的函数&quot;&gt;4、仅支持关键字参数（kwargs）的函数&lt;/h2&gt;
&lt;p&gt;当需要函数提供（强制）更清晰的参数时，创建仅支持关键字参数的函数，可能会挺有用：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;def test(*, a, b):
 pass

test(&quot;value for a&quot;, &quot;value for b&quot;)  # TypeError: test() takes 0 positional arguments...
test(a=&quot;value&quot;, b=&quot;value 2&quot;)  # Works...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如你所见，可以在关键字参数之前，放置单个 * 参数来轻松解决此问题。如果我们将位置参数放在 * 参数之前，则显然也可以有位置参数。&lt;/p&gt;
&lt;h2 id=&quot;创建支持-with-语句的对象&quot;&gt;5、创建支持 with 语句的对象&lt;/h2&gt;
&lt;p&gt;我们都知道如何使用 with 语句，例如打开文件或者是获取锁，但是我们可以实现自己的么？是的，我们可以使用__enter__ 和__exit__ 方法来实现上下文管理器协议：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class Connection:
 def __init__(self):
  ...

 def __enter__(self):
  # Initialize connection...

 def __exit__(self, type, value, traceback):
  # Close connection...

with Connection() as c:
 # __enter__() executes
 ...
 # conn.__exit__() executes&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是在 Python 中实现上下文管理的最常见方法，但是还有一种更简单的方法：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from contextlib import contextmanager

@contextmanager
def tag(name):
 print(f&quot;&amp;lt;{name}&amp;gt;&quot;)
 yield
 print(f&quot;&amp;lt;/{name}&amp;gt;&quot;)

with tag(&quot;h1&quot;):
 print(&quot;This is Title.&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面的代码段使用 contextmanager 装饰器实现了内容管理协议。tag 函数的第一部分（yield 之前）会在进入 with 语句时执行，然后执行 with 的代码块，最后会执行 tag 函数的剩余部分。&lt;/p&gt;
&lt;h2 id=&quot;用__slots__节省内存&quot;&gt;5、用__slots__节省内存&lt;/h2&gt;
&lt;p&gt;如果你曾经编写过一个程序，该程序创建了某个类的大量实例，那么你可能已经注意到你的程序突然就需要大量内存。那是因为 Python 使用字典来表示类实例的属性，这能使其速度变快，但内存不是很高效。通常这不是个问题，但是，如果你的程序遇到了问题，你可以尝试使用__slots__ ：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class Person:
    __slots__ = [&quot;first_name&quot;, &quot;last_name&quot;, &quot;phone&quot;]
    def __init__(self, first_name, last_name, phone):
    self.first_name = first_name
    self.last_name = last_name
    self.phone = phone&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里发生的是，当我们定义__slots__属性时，Python 使用固定大小的小型数组，而不是字典，这大大减少了每个实例所需的内存。使用__slots__还有一些缺点——我们无法声明任何新的属性，并且只能使用在__slots__中的属性。同样，带有__slots__的类不能使用多重继承。&lt;/p&gt;
&lt;h2 id=&quot;限制cpu和内存使用量&quot;&gt;6、限制CPU和内存使用量&lt;/h2&gt;
&lt;p&gt;如果不是想优化程序内存或 CPU 使用率，而是想直接将其限制为某个固定数字，那么 Python 也有一个库能做到：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import signal
import resource
import os

# To Limit CPU time
def time_exceeded(signo, frame):
 print(&quot;CPU exceeded...&quot;)
 raise SystemExit(1)

def set_max_runtime(seconds):
 # Install the signal handler and set a resource limit
 soft, hard = resource.getrlimit(resource.RLIMIT_CPU)
 resource.setrlimit(resource.RLIMIT_CPU, (seconds, hard))
 signal.signal(signal.SIGXCPU, time_exceeded)

# To limit memory usage
def set_max_memory(size):
 soft, hard = resource.getrlimit(resource.RLIMIT_AS)
 resource.setrlimit(resource.RLIMIT_AS, (size, hard))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在这里，我们可以看到两个选项，可设置最大 CPU 运行时间和内存使用上限。对于 CPU 限制，我们首先获取该特定资源（RLIMIT_CPU）的软限制和硬限制，然后通过参数指定的秒数和先前获取的硬限制来设置它。最后，如果超过 CPU 时间，我们将注册令系统退出的信号。至于内存，我们再次获取软限制和硬限制，并使用带有 size 参数的&lt;code&gt;setrlimit&lt;/code&gt; 和获取的硬限制对其进行设置。&lt;/p&gt;
&lt;h2 id=&quot;控制可以import的内容&quot;&gt;8、控制可以import的内容&lt;/h2&gt;
&lt;p&gt;某些语言具有非常明显的用于导出成员（变量、方法、接口）的机制，例如Golang，它仅导出以大写字母开头的成员。另一方面，在 Python 中，所有内容都会被导出，除非我们使用__all__ ：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;def foo():
 pass

def bar():
 pass

__all__ = [&quot;bar&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使用上面的代码段，我们可以限制&lt;code&gt;from some_module import *&lt;/code&gt; 在使用时可以导入的内容。对于以上示例，通配导入时只会导入 bar。此外，我们可以将__all__ 设为空，令其无法导出任何东西，并且在使用通配符方式从此模块中导入时，将引发 AttributeError。&lt;/p&gt;
&lt;h2 id=&quot;比较运算符的简便方法&quot;&gt;9、比较运算符的简便方法&lt;/h2&gt;
&lt;p&gt;为一个类实现所有比较运算符可能会很烦人，因为有很多的比较运算符——__lt__、__le__、__gt__ 或__ge__。但是，如果有更简单的方法呢？&lt;code&gt;functools.total_ordering&lt;/code&gt; 可救场：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from functools import total_ordering

@total_ordering
class Number:
 def __init__(self, value):
  self.value = value

 def __lt__(self, other):
  return self.value &amp;lt; other.value

 def __eq__(self, other):
  return self.value == other.value

print(Number(20) &amp;gt; Number(3))
print(Number(1) &amp;lt; Number(5))
print(Number(15) &amp;gt;= Number(15))
print(Number(10) &amp;lt;= Number(2))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这到底如何起作用的？total_ordering 装饰器用于简化为我们的类实例实现排序的过程。只需要定义__lt__ 和__eq__，这是最低的要求，装饰器将映射剩余的操作——它为我们填补了空白。&lt;/p&gt;
&lt;p&gt;（ &lt;strong&gt;译注：&lt;/strong&gt; 原作者的文章分为两篇，为了方便读者们阅读，我特将它们整合在一起，以下便是第二篇的内容。）&lt;/p&gt;
&lt;h2 id=&quot;使用slice函数命名切片&quot;&gt;10、使用slice函数命名切片&lt;/h2&gt;
&lt;p&gt;使用大量硬编码的索引值会很快搞乱维护性和可读性。一种做法是对所有索引值使用常量，但是我们可以做得更好：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# ID   First Name   Last Name
line_record = &quot;2        John         Smith&quot;

ID = slice(0, 8)
FIRST_NAME = slice(9, 21)
LAST_NAME = slice(22, 27)

name = f&quot;{line_record[FIRST_NAME].strip()} {line_record[LAST_NAME].strip()}&quot;
# name == &quot;John Smith&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在此例中，我们可以避免神秘的索引，方法是先使用 slice 函数命名它们，然后再使用它们。你还可以通过 .start、.stop和 .stop 属性，来了解 slice 对象的更多信息。&lt;/p&gt;
&lt;h2 id=&quot;在运行时提示用户输入密码&quot;&gt;11、在运行时提示用户输入密码&lt;/h2&gt;
&lt;p&gt;许多命令行工具或脚本需要用户名和密码才能操作。因此，如果你碰巧写了这样的程序，你可能会发现 getpass 模块很有用：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import getpass

user = getpass.getuser()
password = getpass.getpass()
# Do Stuff...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这个非常简单的包通过提取当前用户的登录名，可以提示用户输入密码。但是须注意，并非每个系统都支持隐藏密码。Python 会尝试警告你，因此切记在命令行中阅读警告信息。&lt;/p&gt;
&lt;h2 id=&quot;查找单词字符串的相近匹配&quot;&gt;12、查找单词/字符串的相近匹配&lt;/h2&gt;
&lt;p&gt;现在，关于 Python 标准库中一些晦涩难懂的特性。如果你发现自己需要使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Levenshtein_distance&quot;&gt;Levenshtein distance&lt;/a&gt; 【2】之类的东西，来查找某些输入字符串的相似单词，那么 Python 的 difflib 会为你提供支持。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import difflib
difflib.get_close_matches('appel', ['ape', 'apple', 'peach', 'puppy'], n=2)
# returns ['apple', 'ape']&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;difflib.get_close_matches 会查找最佳的“足够好”的匹配。在这里，第一个参数与第二个参数匹配。我们还可以提供可选参数 n ，该参数指定要返回的最多匹配结果。另一个可选的关键字参数 cutoff （默认值为 0.6），可以设置字符串匹配得分的阈值。&lt;/p&gt;
&lt;h2 id=&quot;使用ip地址&quot;&gt;13、使用IP地址&lt;/h2&gt;
&lt;p&gt;如果你必须使用 Python 做网络开发，你可能会发现 ipaddress 模块非常有用。一种场景是从 CIDR（无类别域间路由 Classless Inter-Domain Routing）生成一系列 IP 地址：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import ipaddress
net = ipaddress.ip_network('74.125.227.0/29')  # Works for IPv6 too
# IPv4Network('74.125.227.0/29')

for addr in net:
    print(addr)

# 74.125.227.0
# 74.125.227.1
# 74.125.227.2
# 74.125.227.3
# ...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;另一个不错的功能是检查 IP 地址的网络成员资格：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;ip = ipaddress.ip_address(&quot;74.125.227.3&quot;)

ip in net
# True

ip = ipaddress.ip_address(&quot;74.125.227.12&quot;)
ip in net
# False&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;还有很多有趣的功能，&lt;a href=&quot;https://docs.python.org/3/howto/ipaddress.html&quot;&gt;在这里&lt;/a&gt;【3】可以找到，我不再赘述。但是请注意，ipaddress 模块和其它与网络相关的模块之间只有有限的互通性。例如，你不能将 IPv4Network 实例当成地址字符串——需要先使用 str 转换它们。&lt;/p&gt;
&lt;h2 id=&quot;在shell中调试程序崩溃&quot;&gt;14、在Shell中调试程序崩溃&lt;/h2&gt;
&lt;p&gt;如果你是一个拒绝使用 IDE，并在 Vim 或 Emacs 中进行编码的人，那么你可能会遇到这样的情况：拥有在 IDE 中那样的调试器会很有用。&lt;/p&gt;
&lt;p&gt;你知道吗？你有一个——只要用&lt;code&gt;python3.8 -i&lt;/code&gt; 运行你的程序——一旦你的程序终止了， -i 会启动交互式 shell，在那你可以查看所有的变量和调用函数。整洁，但是使用实际的调试器（pdb ）会如何呢？让我们用以下程序（script.py ）：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def func():
    return 0 / 0

func()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;并使用&lt;code&gt;python3.8 -i script.py&lt;/code&gt;运行脚本：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;# Script crashes...
Traceback (most recent call last):
  File &quot;script.py&quot;, line 4, in &amp;lt;module&amp;gt;
    func()
  File &quot;script.py&quot;, line 2, in func
    return 0 / 0
ZeroDivisionError: division by zero
&amp;gt;&amp;gt;&amp;gt; import pdb
&amp;gt;&amp;gt;&amp;gt; pdb.pm()  # Post-mortem debugger
&amp;gt; script.py(2)func()
-&amp;gt; return 0 / 0
(Pdb)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们看到了崩溃的地方，现在让我们设置一个断点：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;def func():
    breakpoint()  # import pdb; pdb.set_trace()
    return 0 / 0

func()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;现在再次运行它：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;script.py(3)func()
-&amp;gt; return 0 / 0
(Pdb)  # we start here
(Pdb) step
ZeroDivisionError: division by zero
&amp;gt; script.py(3)func()
-&amp;gt; return 0 / 0
(Pdb)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;大多数时候，打印语句和错误信息就足以进行调试，但是有时候，你需要四处摸索，以了解程序内部正在发生的事情。在这些情况下，你可以设置断点，然后程序执行时将在断点处停下，你可以检查程序，例如列出函数参数、表达式求值、列出变量、或如上所示仅作单步执行。&lt;/p&gt;
&lt;p&gt;pdb 是功能齐全的 Python shell，理论上你可以执行任何东西，但是你还需要一些调试命令，可在&lt;a href=&quot;https://docs.python.org/3/library/pdb.html%23debugger-commands#debugger-commands&quot;&gt;此处&lt;/a&gt;【4】找到。&lt;/p&gt;
&lt;h2 id=&quot;在一个类中定义多个构造函数&quot;&gt;15、在一个类中定义多个构造函数&lt;/h2&gt;
&lt;p&gt;函数重载是编程语言（不含 Python）中非常常见的功能。即使你不能重载正常的函数，你仍然可以使用类方法重载构造函数：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import datetime

class Date:
    def __init__(self, year, month, day):
        self.year = year
        self.month = month
        self.day = day

    @classmethod
    def today(cls):
        t = datetime.datetime.now()
        return cls(t.year, t.month, t.day)

d = Date.today()
print(f&quot;{d.day}/{d.month}/{d.year}&quot;)
# 14/9/2019&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;你可能倾向于将替代构造函数的所有逻辑放入__init__，并使用&lt;code&gt;*args&lt;/code&gt; 、&lt;code&gt;**kwargs&lt;/code&gt; 和一堆 if 语句，而不是使用类方法来解决。那可能行得通，但是却变得难以阅读和维护。&lt;/p&gt;
&lt;p&gt;因此，我建议将很少的逻辑放入__init__，并在单独的方法/构造函数中执行所有操作。这样，对于类的维护者和用户而言，得到的都是干净的代码。&lt;/p&gt;
&lt;h2 id=&quot;使用装饰器缓存函数调用&quot;&gt;16、使用装饰器缓存函数调用&lt;/h2&gt;
&lt;p&gt;你是否曾经编写过一种函数，它执行昂贵的 I/O 操作或一些相当慢的递归，而且该函数可能会受益于对其结果进行缓存（存储）？如果你有，那么有简单的解决方案，即使用 functools 的&lt;code&gt;lru_cache&lt;/code&gt; :&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from functools import lru_cache
import requests

@lru_cache(maxsize=32)
def get_with_cache(url):
    try:
        r = requests.get(url)
        return r.text
    except:
        return &quot;Not Found&quot;


for url in [&quot;https://google.com/&quot;,
            &quot;https://martinheinz.dev/&quot;,
            &quot;https://reddit.com/&quot;,
            &quot;https://google.com/&quot;,
            &quot;https://dev.to/martinheinz&quot;,
            &quot;https://google.com/&quot;]:
    get_with_cache(url)

print(get_with_cache.cache_info())
# CacheInfo(hits=2, misses=4, maxsize=32, currsize=4)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在此例中，我们用了可缓存的 GET 请求（最多 32 个缓存结果）。你还可以看到，我们可以使用 cache_info 方法检查函数的缓存信息。装饰器还提供了 clear_cache 方法，用于使缓存结果无效。&lt;/p&gt;
&lt;p&gt;我还想指出，此函数不应与具有副作用的函数一起使用，或与每次调用都创建可变对象的函数一起使用。&lt;/p&gt;
&lt;h2 id=&quot;在可迭代对象中查找最频繁出现的元素&quot;&gt;17、在可迭代对象中查找最频繁出现的元素&lt;/h2&gt;
&lt;p&gt;在列表中查找最常见的元素是非常常见的任务，你可以使用 for 循环和字典（map），但是这没必要，因为 collections 模块中有 Counter 类：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;from collections import Counter

cheese = [&quot;gouda&quot;, &quot;brie&quot;, &quot;feta&quot;, &quot;cream cheese&quot;, &quot;feta&quot;, &quot;cheddar&quot;,
          &quot;parmesan&quot;, &quot;parmesan&quot;, &quot;cheddar&quot;, &quot;mozzarella&quot;, &quot;cheddar&quot;, &quot;gouda&quot;,
          &quot;parmesan&quot;, &quot;camembert&quot;, &quot;emmental&quot;, &quot;camembert&quot;, &quot;parmesan&quot;]

cheese_count = Counter(cheese)
print(cheese_count.most_common(3))
# Prints: [('parmesan', 4), ('cheddar', 3), ('gouda', 2)]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;实际上，Counter 只是一个字典，将元素与出现次数映射起来，因此你可以将其用作普通字典：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;print(cheese_count[&quot;mozzarella&quot;])
# Prints: 1

cheese_count[&quot;mozzarella&quot;] += 1

print(cheese_count[&quot;mozzarella&quot;])
# Prints: 2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;除此之外，你还可以使用 update(more_words) 方法轻松添加更多元素。Counter 的另一个很酷的特性是你可以使用数学运算（加法和减法）来组合和减去 Counter 的实例。&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;小结&lt;/h2&gt;
&lt;p&gt;在日常 Python 编程中，并非所有这些特性都是必不可少的和有用的，但是其中一些特性可能会时不时派上用场，并且它们也可能简化任务，而这本来可能很冗长且令人讨厌。&lt;/p&gt;
&lt;p&gt;我还要指出的是，所有这些特性都是 Python 标准库的一部分，虽然在我看来，其中一些特性非常像是标准库中的非标准内容。因此，每当你要在 Python 中实现某些功能时，首先可在标准库查看，如果找不到，那你可能看得还不够仔细（如果它确实不存在，那么肯定在某些三方库中）。&lt;/p&gt;
&lt;p&gt;如果你使用 Python，那么我认为在这里分享的大多数技巧几乎每天都会有用，因此我希望它们会派上用场。另外，如果你对这些 Python 技巧和骚操作有任何想法，或者如果你知道解决上述问题的更好方法，请告诉我！🙂&lt;/p&gt;
&lt;h3 id=&quot;相关链接&quot;&gt;相关链接&lt;/h3&gt;
&lt;p&gt;[1] 原文地址: https://martinheinz.dev/blog/1&lt;/p&gt;
&lt;p&gt;译文原文：https://mp.weixin.qq.com/s/vaFL75hm1lx3mvURY4V6_A&lt;/p&gt;
&lt;p&gt;[2] Levenshtein distance: https://en.wikipedia.org/wiki/Levenshtein_distance&lt;/p&gt;
&lt;p&gt;[3] 在这里: https://docs.python.org/3/howto/ipaddress.html&lt;/p&gt;
&lt;p&gt;[4] 此处: https://docs.python.org/3/library/pdb.html%23debugger-commands#debugger-commands&lt;/p&gt;
</description>
<pubDate>Tue, 28 Jan 2020 14:16:00 +0000</pubDate>
<dc:creator>豌豆花下猫</dc:creator>
<og:description>英文 | &amp;quot;Python Tips and Trick, You Haven&amp;#39;t Already Seen&amp;quot; 原作 | Martin Heinz ( &amp;quot;https</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/pythonista/p/12239112.html</dc:identifier>
</item>
<item>
<title>简单理解设计模式——享元模式-线程池-任务(task) - 码不够的张小黑</title>
<link>http://www.cnblogs.com/Xiaomoml/p/12238873.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Xiaomoml/p/12238873.html</guid>
<description>&lt;p&gt;前面在写到多线程的文章的时候，一直想写一篇关于线程池等一系列的文章，做一下记录，本篇博客记录一下设计模式中享元模式的设计思想，以及使用享元模式的实现案例——线程池，以及线程池的简化版——任务(task)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;享元模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在软件开发过程中，如果我们需要重复使用某个对象的时候，重复的去new这样一个对象，我们在内存中就会多次的去申请内存空间了，这样，可能会出现内存使用越来越多的情况。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果让我们解决这个问题，会不会这样想：“既然是同一个对象，能不能只创建一个对象，然后下次需要再创建这个对象的时候，让它直接用已经创建好的对象就好了”，也就是说--让一个对象共享！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这种实现方式有点类似排版印刷术，将所有的字先提前印刷好，需要哪个字直接拿过来用，就不用每次打印字的时候再重新造一个字的模板了，这就是我理解的享元模式的思想。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;享元模式的正式定义：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;运用共享技术有效的支持大量细粒度的对象，享元模式可以避免大量相类似的开销，在软件开发中如果需要生成大量细粒度的类实例来表示数据，如果这些实例除了几个参数外基本都是相同的，这个时候就可以使用享元模式。如果把这些参数(指的是这是实例不同的参数，比如：排版印刷的时候每个字的位置)移动到类的外面，在调用方法时把他们传递进来，这样就通过共享数据，减少了单个实例的数目(这个也是享元模式的实现要领)，我们把类实例外面的参数称之为享元对象的外部状态，把在享元模式内部定义称之为内部状态。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;享元模式的实现小demo&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Text;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; 享元模式
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义外部状态,例如字母的位置等信息&lt;/span&gt;
            &lt;span&gt;int&lt;/span&gt; externalstate = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化享元工厂&lt;/span&gt;
            FlyweighFactory factory = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; FlyweighFactory();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断是否已经创建了字母A，如果已经创建就直接使用创键的对象A&lt;/span&gt;
            Flyweight fa = factory.GetFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (fa != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;把外部状态作为享元对象的方法调用参数&lt;/span&gt;
                fa.Operation(--&lt;span&gt;externalstate);
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断是否已经创建了字母B&lt;/span&gt;
            Flyweight fb = factory.GetFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (fb!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                fb.Operation(&lt;/span&gt;--&lt;span&gt;externalstate);
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断是否已经创建了字母C&lt;/span&gt;
            Flyweight fc = factory.GetFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (fc != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                fc.Operation(&lt;/span&gt;--&lt;span&gt;externalstate);
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断是否创建了字母D&lt;/span&gt;
            Flyweight fd = factory.GetFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (fd != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                fd.Operation(&lt;/span&gt;--&lt;span&gt;externalstate);
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;驻留池中不存在字符串D&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个时候就需要创建一个对象并放入驻留池中&lt;/span&gt;
                ConcreteFlyweight d = &lt;span&gt;new&lt;/span&gt; ConcreteFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                factory.flyweights.Add(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, d);
            }
            Console.ReadLine();

        }
    }
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 享元工厂，负责创建和管理享元对象
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FlyweighFactory
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 定义一个池容器
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; Hashtable flyweights = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Hashtable();
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; FlyweighFactory()
        {
            flyweights.Add(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; ConcreteFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;));&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将对应的内部状态添加进去&lt;/span&gt;
            flyweights.Add(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; ConcreteFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
            flyweights.Add(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; ConcreteFlyweight(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 根据键来查找值
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;key&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;键&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; Flyweight GetFlyweight(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; key)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; flyweights[key] &lt;span&gt;as&lt;/span&gt;&lt;span&gt; Flyweight;
        }
    }



    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 抽象享元类，提供具体享元类具有的方法
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Flyweight
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Operation(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; extrinsicstate);
    }
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 具体享元对象，这样我们不把每个字符设计成一个单独的类了，而是把共享的字母作为享元对象的内部状态
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ConcreteFlyweight : Flyweight
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 内部状态
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; intrinsicstate;
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ConcreteFlyweight(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; innerState)
        {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.intrinsicstate =&lt;span&gt; innerState;
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 享元类的实例方法
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;extrinsicstate&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;外部状态&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Operation(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; extrinsicstate)
        {
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;具体实现类：intrinsicstate(内部状态){0},extrinsicstate(外部状态){1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, intrinsicstate, extrinsicstate);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;享元模式的使用场景：&lt;/p&gt;
&lt;p&gt;一个系统中有大量的对象；&lt;/p&gt;
&lt;p&gt;这些对象耗费大量的内存&lt;/p&gt;
&lt;p&gt;这些对象可以按照内部状态分成很多组，当把外部对象从对象中剔除时，每一个组都可以仅用一个对象代替&lt;/p&gt;
&lt;p&gt;软件系统不依赖这些对象的身份。&lt;/p&gt;
&lt;p&gt;注意：使用享元模式需要额外的维护一个记录子系统已有额所有享元的表，这也是耗费资源的。所以当在有足够多的对象实例，或者这些享元实例的创建特别耗费资源的时候可以考虑使用享元模式。&lt;/p&gt;
&lt;p&gt;不知道你这里有没有发现，其实享元模式定义了一个“池“的概念。在排版印刷的时候，我们将所有的字(内部状态)放在一个字体池中，使用完之后将这些字(内部状态)再放回池中。&lt;/p&gt;
&lt;p&gt;这跟我们接下来说的线程池似乎不谋而合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;线程池：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先说一下后台线程和前台线程：两者几乎相同，唯一的区别是，前台线程会阻止进程的正常退出，后台线程则不会。&lt;/p&gt;
&lt;p&gt;线程的创建和销毁要消耗很多时间，而且过多的线程不仅会浪费内存空间，还会导致线程上下文切换频繁，影响程序性能，为改善这些问题，.Net运行时(CLR)会为每个进程开辟一个全局唯一的线程池来管理其线程。&lt;/p&gt;
&lt;p&gt;线程池内部维护一个操作请求队列，程序执行异步操作的时候，添加目标操作到线程池的请求队列；线程池代码提取记录项并派发线程池中的一个线程；如果线程池中没有可用线程，就创建一个新的线程，创建的新线程不会随着任务的完成而销毁，这样就可以避免线程的频繁创建和销毁。如果线程池中大量的线程长时间无所事事，空闲线程会进行自我终结以释放资源。&lt;/p&gt;
&lt;p&gt;线程池中通过保持进程中线程的少量和高效来优化程序的性能。&lt;/p&gt;
&lt;p&gt;当线程数达到设定值且忙碌，异步任务将进入请求队列，直到有线程空闲才会执行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Diagnostics;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Net;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Text;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; 线程池
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            RunThreadPoolDemo();
            Console.ReadLine();
        }

        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; RunThreadPoolDemo()
        {
            线程池.ThreadPoolDemo.ShowThreadPoolInfo();
            ThreadPool.SetMaxThreads(&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;, &lt;span&gt;100&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;默认(1023,1000)(8核心CPU)&lt;/span&gt;
            ThreadPool.SetMinThreads(&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 默认是CPU核心数&lt;/span&gt;
&lt;span&gt;            线程池.ThreadPoolDemo.ShowThreadPoolInfo();
            线程池.ThreadPoolDemo.MakeThreadPoolDoSomeWork(&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;计算限制任务&lt;/span&gt;
            线程池.ThreadPoolDemo.MakeThreadPoolDoSomeIOWork();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;IO限制任务&lt;/span&gt;
&lt;span&gt;        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ThreadPoolDemo
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 显示线程池信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ShowThreadPoolInfo()
        {
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; workThreads, completionPortThreads;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;当前线程池可用工作线程数量和异步IO线程数量&lt;/span&gt;
            ThreadPool.GetAvailableThreads(&lt;span&gt;out&lt;/span&gt; workThreads, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; completionPortThreads);
            Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GetAvailableThreads =&amp;gt; workThreads:{0};completionPortThreads:{1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, workThreads, completionPortThreads);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;线程池最大可用的工作线程数量和异步IO线程数量&lt;/span&gt;
            ThreadPool.GetMaxThreads(&lt;span&gt;out&lt;/span&gt; workThreads, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; completionPortThreads);
            Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GetMaxThreads =&amp;gt; workThreads:{0};completionPortThreads:{1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, workThreads, completionPortThreads);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;出现新的请求，判断是否需要创建新线程的依据&lt;/span&gt;
            ThreadPool.GetMinThreads(&lt;span&gt;out&lt;/span&gt; workThreads, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; completionPortThreads);
            Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GetMinThreads =&amp;gt; workThreads:{0};completionPortThreads:{1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, workThreads, completionPortThreads);
            Console.WriteLine();

        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 让线程池做些事情
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;workCount&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MakeThreadPoolDoSomeWork(&lt;span&gt;int&lt;/span&gt; workCount = &lt;span&gt;10&lt;/span&gt;&lt;span&gt;)
        {
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; workCount; i++&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; index =&lt;span&gt; i;
                ThreadPool.QueueUserWorkItem(s &lt;/span&gt;=&amp;gt;&lt;span&gt;
                {
                    Thread.Sleep(&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;模拟工作时长&lt;/span&gt;
                    Debug.Print($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{DateTime.Now}=&amp;gt; Thread-[{Thread.CurrentThread.ManagedThreadId}] is running. [{index}]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    ShowAvailableThreads(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;WorkerThread&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                });
            }
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 让线程做一些IO工作
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; MakeThreadPoolDoSomeIOWork()
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;随便找一些可以访问的网址&lt;/span&gt;
            IList&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt; urlList = &lt;span&gt;new&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;&lt;span&gt;()
            {
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://news.baidu.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://www.hao123.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://map.baidu.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://tieba.baidu.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://wenku.baidu.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://fanyi-pro.baidu.com&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://bit.baidu.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://xueshu.baidu.com/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.cnki.net/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.wanfangdata.com.cn&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            };

            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; uri &lt;span&gt;in&lt;/span&gt;&lt;span&gt; urlList)
            {
                WebRequest request &lt;/span&gt;=&lt;span&gt; WebRequest.Create(uri);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;request包含此异步请求的状态信息的对象&lt;/span&gt;
                request.BeginGetResponse(ac =&amp;gt;&lt;span&gt;
                {
                    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
                    {
                        WebResponse response &lt;/span&gt;=&lt;span&gt; request.EndGetResponse(ac);
                        ShowAvailableThreads(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IOThread&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        Debug.Print($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{DateTime.Now}=&amp;gt; Thread-[{Thread.CurrentThread.ManagedThreadId}] is running. [{response.ContentLength}]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    }
                    &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)
                    {
                        Console.WriteLine(ex.Message);
                    }
                },request);
            }
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 打印线程池可用线程
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;sourceTag&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; ShowAvailableThreads(&lt;span&gt;string&lt;/span&gt; sourceTag = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
        {
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; workThreads, completionPortThreads;
            ThreadPool.GetAvailableThreads(&lt;/span&gt;&lt;span&gt;out&lt;/span&gt; workThreads, &lt;span&gt;out&lt;/span&gt;&lt;span&gt; completionPortThreads);
            Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{0} GetAvailableThreads =&amp;gt; workThreads:{1};completionPortThreads:{2}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,sourceTag,workThreads,completionPortThreads);
            Console.WriteLine();
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 取消通知者
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; CancellationTokenSource CTSource { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;; } = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; CancellationTokenSource();

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 执行可取消的任务
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; DoSomeWorkWithCancellation()
        {
            ThreadPool.QueueUserWorkItem(t &lt;/span&gt;=&amp;gt;&lt;span&gt;
            {
                Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{DateTime.Now}=&amp;gt; Thread-[{Thread.CurrentThread.ManagedThreadId}] begun running. [0 - 9999]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;10000&lt;/span&gt;; i++&lt;span&gt;)
                {
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (CTSource.Token.IsCancellationRequested)
                    {
                        Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{DateTime.Now}=&amp;gt; Thread-[{Thread.CurrentThread.ManagedThreadId}] recived the cancel token. [{i}]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
                    }
                    Thread.Sleep(&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;模拟工作时长&lt;/span&gt;
&lt;span&gt;                }
                Console.WriteLine($&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{DateTime.Now}=&amp;gt; Thread-[{Thread.CurrentThread.ManagedThreadId}] was cancelled.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码中含有中文命名空间，这样写不规范，请不要模仿~&lt;/p&gt;
&lt;p&gt;线程池内部维护着一个工作项队列，这个队列指的是线程池的全局队列，实际上，除了全局队列，线程池会给每个工作者线程维护一个本地队列&lt;/p&gt;
&lt;p&gt;当我们调用&lt;code&gt;ThreadPool.QueueUserWorkItem&lt;/code&gt;方法时，工作项会被放入全局队列；使用定时器&lt;code&gt;Timer&lt;/code&gt;的时候，也会将工作项放入全局队列；但是，当我们使用任务&lt;code&gt;Task&lt;/code&gt;的时候，假如使用默认的任务调度器，任务会被调度到工作者线程的本地队列中。&lt;/p&gt;
&lt;p&gt;工作者线程优先执行本地队列中最新进入的任务，如果本地队列中已经没有任务，线程会尝试从其他工作者线程任务队列的队尾取任务执行，这里需要进行同步。如果所有工作者线程的本地队列都没有任务可以执行，工作者线程才会从全局队列取最新的工作项来执行。所有任务执行完毕后，线程睡眠，睡眠一定时间后，线程醒来并销毁自己以释放资源&lt;/p&gt;
&lt;p&gt;异步IO实现过程如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;托管的IO请求线程调用Win32本地代码ReadFile方法&lt;/li&gt;
&lt;li&gt;ReadFile方法分配IO请求包IRP并发送至Windows内核&lt;/li&gt;
&lt;li&gt;Windows内核把收到的IRP放入对应设备驱动程序的IRP队列中，此时IO请求线程已经可以返回托管代码&lt;/li&gt;
&lt;li&gt;驱动程序处理IRP并将处理结果放入.NET线程池的IRP结果队列中&lt;/li&gt;
&lt;li&gt;线程池分配IO线程处理IRP结果&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;任务(Task)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我理解的任务是在线程池的基础上进行的优化，但是任务比线程有更小的开销和更精确的控制，任务是架构在线程之上的，就是说，任务最后还是抛给线程去执行。&lt;/p&gt;
&lt;p&gt;开10个任务，并不会开是个线程，这是我理解的再线程池的基础上优化的依据。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Text;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tesk_任务_
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {

            &lt;/span&gt;&lt;span&gt;#region&lt;/span&gt; 创建任务
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;第一种方式开一个任务&lt;/span&gt;
            Task t = &lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;任务工作开始......&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;模拟工作过程&lt;/span&gt;
                Thread.Sleep(&lt;span&gt;5000&lt;/span&gt;&lt;span&gt;);
            });
            t.Start();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第二种方式创建任务&lt;/span&gt;
            Task t = Task.Factory.StartNew(() =&amp;gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;任务工作开始......&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                Thread.Sleep(&lt;/span&gt;&lt;span&gt;5000&lt;/span&gt;&lt;span&gt;);
            });
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;当第一的任务工作完成之后接着执行这一步操作&lt;/span&gt;
            t.ContinueWith((task) =&amp;gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;任务完成，完成时的状态为：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;IsCanceled={0}\tIsCompleted={1}\tIsFaulted={2}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, task.IsCanceled, task.IsCompleted, task.IsFaulted);
            });
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;等待任务完成!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            Console.ReadKey();
            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;

            &lt;span&gt;#region&lt;/span&gt; 任务的生命周期
            &lt;span&gt;var&lt;/span&gt; task1 = &lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Begin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                Thread.Sleep(&lt;/span&gt;&lt;span&gt;2000&lt;/span&gt;&lt;span&gt;);
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Finish&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Begin start:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; task1.Status);
            task1.Start();&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开启任务&lt;/span&gt;
            Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;After start:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; task1.Status);
            task1.Wait();
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;After Finsh:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; task1.Status);
            Console.ReadLine();
            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;

            &lt;span&gt;#region&lt;/span&gt; Task的任务控制
            &lt;span&gt;var&lt;/span&gt; task1 = &lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt;&lt;span&gt;
                {
                    Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Begin1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                    Thread.Sleep(&lt;/span&gt;&lt;span&gt;2000&lt;/span&gt;&lt;span&gt;);
                    Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Finish1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                });
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; task2 = &lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Begin2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                Thread.Sleep(&lt;/span&gt;&lt;span&gt;5000&lt;/span&gt;&lt;span&gt;);
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Finish2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });

            task1.Start();&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开启任务&lt;/span&gt;
            task2.Start();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开启第二个任务
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;public Task ContinueWith(Action&amp;lt;Task&amp;gt; continuationAction);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ContinueWith&amp;lt;string&amp;gt;:string是这个任务的返回值类型&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; result = task1.ContinueWith&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;(task =&amp;gt;&lt;span&gt;
            {
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;task1 finished&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;this is task result&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            });
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;task1.Wait();&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;等待第一个任务完成
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Task.WaitAll(task1, task2);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Console.WriteLine(&quot;All task Finshed:&quot;);&lt;/span&gt;
&lt;span&gt;            Console.WriteLine(result.Result.ToString());
            Console.ReadLine();

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;通过ContinueWith获取第一个任务的返回值&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; a = Task.Factory.StartNew(() =&amp;gt; { &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;One&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;; }).ContinueWith&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;(ss =&amp;gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; ss.Result.ToString(); });

            Task b &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Task&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;(() =&amp;gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;one&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            });
            Console.WriteLine(b.ToString());&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这样获取不到b任务的返回值&lt;/span&gt;
&lt;span&gt;
            Console.WriteLine(a.Result);



            &lt;/span&gt;&lt;span&gt;#region&lt;/span&gt; TaskContinuationOptions 定义延续任务在什么情况下执行&lt;span&gt;
            Task&lt;/span&gt;&amp;lt;Int32&amp;gt; t = &lt;span&gt;new&lt;/span&gt; Task&amp;lt;Int32&amp;gt;(i =&amp;gt; Sum((Int32)i), &lt;span&gt;10000&lt;/span&gt;&lt;span&gt;);
            t.Start();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;TaskContinuationOptions创建延续任务的行为，OnlyOnRanToCompletion只有当前面的任务执行完才能安排延续任务&lt;/span&gt;
            t.ContinueWith(task =&amp;gt; Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;The sum is:{0}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, task.Result), TaskContinuationOptions.OnlyOnRanToCompletion);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;OnlyOnFaulted延续任务前面的任务出现了异常才会安排延续任务，将任务中的错误信息打印出来了&lt;/span&gt;
            t.ContinueWith(task =&amp;gt; Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sum throw:{0}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, task.Exception), TaskContinuationOptions.OnlyOnFaulted);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;OnlyOnCanceled延续任务前面的任务已取消的情况下才会安排延续任务&lt;/span&gt;
            t.ContinueWith(task =&amp;gt; Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sum was cancel:{0}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, task.IsCanceled), TaskContinuationOptions.OnlyOnCanceled);
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
            {
                t.Wait();
            }
            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (AggregateException)
            {

                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;出错&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            }
            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;

            &lt;span&gt;#region&lt;/span&gt; AttachedToParnt枚举类型(父任务)&lt;span&gt;
            Task&lt;/span&gt;&amp;lt;Int32[]&amp;gt; parent = &lt;span&gt;new&lt;/span&gt; Task&amp;lt;&lt;span&gt;int&lt;/span&gt;[]&amp;gt;(() =&amp;gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; results = &lt;span&gt;new&lt;/span&gt; Int32[&lt;span&gt;3&lt;/span&gt;&lt;span&gt;];
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt; results[&lt;span&gt;0&lt;/span&gt;] = Sum(&lt;span&gt;1000&lt;/span&gt;&lt;span&gt;), TaskCreationOptions.AttachedToParent).Start();
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt; results[&lt;span&gt;1&lt;/span&gt;] = Sum(&lt;span&gt;2000&lt;/span&gt;&lt;span&gt;), TaskCreationOptions.AttachedToParent).Start();
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Task(() =&amp;gt; results[&lt;span&gt;2&lt;/span&gt;] = Sum(&lt;span&gt;3000&lt;/span&gt;&lt;span&gt;), TaskCreationOptions.AttachedToParent).Start();
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; results;
            });
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;任务返回的是一个数组，我要做的是对数组进行打印ForEach()，&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; cwt = parent.ContinueWith(parentTask =&amp;gt;&lt;span&gt; Array.ForEach(parentTask.Result, Console.WriteLine));
            parent.Start();
            cwt.Wait();
            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;

            &lt;span&gt;#region&lt;/span&gt; 取消任务&lt;span&gt;
            CancellationTokenSource cts &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; CancellationTokenSource();
            Task&lt;/span&gt;&amp;lt;Int32&amp;gt; t = &lt;span&gt;new&lt;/span&gt; Task&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;(() =&amp;gt; Sum(cts.Token, &lt;span&gt;1000&lt;/span&gt;&lt;span&gt;), cts.Token);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;可以现在开始，也可以以后开始&lt;/span&gt;
&lt;span&gt;            t.Start();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在之后的某个时间，取消CancellationTokenSource 以取消Task&lt;/span&gt;
            cts.Cancel();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个是异步请求，Task可能已经完成了
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注释这个为了测试抛出的异常
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Console.WriteLine(&quot;This sum is:&quot;, t.Result);&lt;/span&gt;
            &lt;span&gt;try&lt;/span&gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果任务已经取消了，Result会抛出AggregateException&lt;/span&gt;
                Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;This sum is:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, t.Result);
            }
            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (AggregateException x)
            {
                x.Handle(e &lt;/span&gt;=&amp;gt; e &lt;span&gt;is&lt;/span&gt;&lt;span&gt; OperationCanceledException);
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sum was Canceled&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                
            }

            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;&lt;span&gt;
            Console.ReadLine();
            &lt;/span&gt;&lt;span&gt;#endregion&lt;/span&gt;&lt;span&gt;
        }


        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Int32 Sum(Int32 i)
        {
            Int32 sum &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (; i &amp;gt;&lt;span&gt;0&lt;/span&gt; ; i--&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;checked&lt;/span&gt; { sum +=&lt;span&gt; i; }
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; sum;
        }
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Int32 Sum(CancellationToken ct, Int32 i)
        {
            Int32 sum &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (; i &amp;gt;&lt;span&gt;0&lt;/span&gt;; i--&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在取消标志引用的CancellationTokenSource上如果调用
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;Cancel，下面这一行就会抛出OperationCanceledException&lt;/span&gt;
&lt;span&gt;                ct.ThrowIfCancellationRequested();
                &lt;/span&gt;&lt;span&gt;checked&lt;/span&gt; { sum +=&lt;span&gt; i; }
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; sum;
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：这里的代码并不是复制就可以执行的，之前做demo测试的时候将所有的代码都糅杂在一起了！&lt;/p&gt;
&lt;p&gt;关于技术与业务我也纠结过一段时间，是业务重要还是技术重要，后来发现，技术是服务于业务的，设计模式是技术吗？其实它是为了解决某种实现场景总结出来的。业务和技术应该是相辅相成的，在工作中难免会遇到一些重复性的工作，可不可以尝试着改进在工作中的实现方式来提高自己的技术水平呢？加油~ 追梦人！&lt;/p&gt;

&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/chenbaoshun/p/10566124.html&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/zhili/p/FlyweightPattern.html&lt;/p&gt;
&lt;p&gt;设计模式相关网页：&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/caoyc/p/6927092.html&lt;/p&gt;

</description>
<pubDate>Tue, 28 Jan 2020 12:44:00 +0000</pubDate>
<dc:creator>码不够的张小黑</dc:creator>
<og:description>前面在写到多线程的文章的时候，一直想写一篇关于线程池等一系列的文章，做一下记录，本篇博客记录一下设计模式中享元模式的设计思想，以及使用享元模式的实现案例——线程池，以及线程池的简化版——任务(task</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/Xiaomoml/p/12238873.html</dc:identifier>
</item>
<item>
<title>Node.js实操练习(一)之Node.js+MySQL+RESTful - 一只流浪的KK</title>
<link>http://www.cnblogs.com/jjgw/p/12238799.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jjgw/p/12238799.html</guid>
<description>&lt;p&gt;&lt;span&gt;最近学习了一下node.js相关的内容，在这里初步做个小总结，说实话关于本篇博客的相关内容，自己很久之前就已经有过学习，但是你懂的，“&lt;span&gt;好记性不如烂笔筒&lt;/span&gt;”，学过的东西不做笔记的话，很容易就会忘记的一干二净，往往的结果就是自己又要重头开始学习，这是一个非常痛苦的过程。没有办法，为了重新捡起自己曾经学过的内容，决定写下这篇博客来回顾自己所学的知识。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;Node.js后端&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;学会使用node.js操作MySQL实现简单的增删查改&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;学会使用RESTful风格定义接口&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;前端&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;学会使用vue2整合Ajax&lt;/li&gt;
&lt;li&gt;学会使用vue2整合axios&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;MySQL数据库&lt;/h2&gt;
&lt;h4&gt;数据库脚本&lt;/h4&gt;
&lt;p&gt;创建鲜花信息表，添加鲜花编号，鲜花名称，鲜花价格，鲜花用途，鲜花花材，鲜花花语等字段。在这里我们就直接使用SQL脚本来创建数据表和添加一些测试数据。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;82&quot;&gt;
&lt;pre&gt;
CREATE table&lt;span&gt; flowerinfo
(
    fid BIGINT auto_increment PRIMARY key not NULL&lt;span&gt; COMMENT&quot;编号&quot;,
    fname varchar(20) not null&lt;span&gt; COMMENT&quot;名称&quot;,
    fprice DECIMAL(16,2&lt;span&gt;)  COMMENT&quot;价格&quot;,
    fsituation varchar(20) not null&lt;span&gt; COMMENT&quot;使用节日&quot;,
    fuse varchar(20) not null&lt;span&gt; COMMENT&quot;鲜花用途&quot;,
    fhc varchar(20) not null&lt;span&gt; COMMENT&quot;鲜花花材&quot;,
    fword varchar(50&lt;span&gt;) COMMENT&quot;花语&quot;
)COMMENT&quot;鲜花信息表&quot;

INSERT into&lt;span&gt; flowerinfo(fname,fprice,fhc,fuse,fsituation,fword)
VALUES(&quot;一生一世&quot;,200&lt;span&gt;,&quot;玫瑰,香槟&quot;,&quot;爱情鲜花&quot;,&quot;情人节&quot;,&quot;你是我一生一世唯一的爱人,我会好好珍惜你&quot;),
(&quot;祝福你&quot;,300&lt;span&gt;,&quot;玫瑰,香槟&quot;,&quot;爱情鲜花&quot;,&quot;情人节,母亲节,父亲节&quot;,&quot;我把我最真诚的祝福送给你,祝你天天开心&quot;),
(&quot;一生一世&quot;,200&lt;span&gt;,&quot;玫瑰,香槟&quot;,&quot;爱情鲜花&quot;,&quot;情人节&quot;,&quot;你是我一生一世唯一的爱人,我会好好珍惜你&quot;),
(&quot;祝福你&quot;,300&lt;span&gt;,&quot;玫瑰,香槟&quot;,&quot;爱情鲜花&quot;,&quot;情人节,母亲节,父亲节&quot;,&quot;我把我最真诚的祝福送给你,祝你天天开心&quot;)
&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1475945/201911/1475945-20191121220456127-294380820.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Node.js后端项目搭建&lt;/h2&gt;
&lt;h3&gt;1、搭建node.js项目&lt;/h3&gt;
&lt;p&gt;搭建node.js项目的过程我就直接省略了，具体如何搭建node.js项目大家可以自行百度或者后期我会添加相关内容的博客方便大家学习。搭建好的项目结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1475945/201911/1475945-20191121221415398-2107607748.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt; 2、安装mysql依赖&lt;/h3&gt;
&lt;p&gt;既然我们需要操作mysql，那么我们肯定需要安装相关的依赖，在这里介绍三种方法安装mysql依赖。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方式一：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cnpm install mysql　　//使用淘宝镜像依赖mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;方式二：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;npm install mysql --save    //　当前项目安装mysql依赖&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;方式三：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
npm install mysql -g　　　　//全局安装mysql依赖
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;选择任意以上一种方法安装都可以，安装完成之后，我们确认一下是否真的安装成功，找到目录node_modules,这里是查看我们安装的所有依赖，可以看到mysql依赖成功了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1475945/201911/1475945-20191121221842158-296753206.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3、编写RESTful风格的接口&lt;/h3&gt;
&lt;p&gt;找到目录结构routes，新建flowerRouter.js文件。目录结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1475945/202001/1475945-20200128163248486-1346081703.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;一、建立node.js和mysql数据库的连接&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
let express=require('express'); //  引入express依赖
let mysql=require('mysql')  //  引入mysql依赖
let router=&lt;span&gt;express.Router();
let connection=&lt;span&gt;mysql.createConnection({
    host: 'localhost',   //主机名
    user:'root',    //账号
    password:'123456',    //密码
    database:'flower'   //连接的数据库名称
&lt;span&gt;});
connection.connect();   //建立连接&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一步的话主要式建立起node.js和mysql之间的桥梁。部分参数说明如下：&lt;/p&gt;
&lt;table border=&quot;0&quot; align=&quot;center&quot;&gt;&lt;tbody readability=&quot;18.5&quot;&gt;&lt;tr&gt;&lt;td&gt;参数&lt;/td&gt;
&lt;td&gt;描述&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;主机地址 （默认：localhost）&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;user&lt;/td&gt;
&lt;td&gt;用户名&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;password&lt;/td&gt;
&lt;td&gt;密码&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;端口号 （默认：3306）&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;database&lt;/td&gt;
&lt;td&gt;数据库名称&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;charset&lt;/td&gt;
&lt;td&gt;连接字符集（默认：'UTF8_GENERAL_CI'，注意字符集的字母都要大写）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; localAddress&lt;/td&gt;
&lt;td&gt; 此IP用于TCP连接（可选）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; socketPath&lt;/td&gt;
&lt;td&gt; 连接到unix域路径，当使用 host 和 port 时会被忽略&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; timezone&lt;/td&gt;
&lt;td&gt; 时区（默认：'local'）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; connectTimeout&lt;/td&gt;
&lt;td&gt; 连接超时（默认：不限制；单位：毫秒）&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; stringifyObjects&lt;/td&gt;
&lt;td&gt; 是否序列化对象&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; typeCast&lt;/td&gt;
&lt;td&gt; 是否将列值转化为本地JavaScript类型值 （默认：true）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; queryFormat&lt;/td&gt;
&lt;td&gt; 自定义query语句格式化方法&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; supportBigNumbers&lt;/td&gt;
&lt;td&gt; 数据库支持bigint或decimal类型列时，需要设此option为true （默认：false）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt; bigNumberStrings&lt;/td&gt;
&lt;td&gt; supportBigNumbers和bigNumberStrings启用 强制bigint或decimal列以JavaScript字符串类型返回（默认：false）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td&gt; dateStrings&lt;/td&gt;
&lt;td&gt; 强制timestamp,datetime,data类型以字符串类型返回，而不是JavaScript Date类型（默认：false）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; debug&lt;/td&gt;
&lt;td&gt; 开启调试（默认：false）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; multipleStatements&lt;/td&gt;
&lt;td&gt; 是否许一个query中有多个MySQL语句 （默认：false）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt; flags&lt;/td&gt;
&lt;td&gt; 用于修改连接标志&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt; ssl&lt;/td&gt;
&lt;td&gt; 使用ssl参数（与crypto.createCredenitals参数格式一至）或一个包含ssl配置文件名称的字符串，目前只捆绑Amazon RDS的配置文件&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;具体参数信息请前往：&lt;a href=&quot;https://github.com/mysqljs/mysql&quot; target=&quot;_blank&quot;&gt;https://github.com/mysqljs/mysql&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;二、添加数据接口和SQL语句&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
//  添加鲜花信息
router.post('/addFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    let fname=req.body.fname;  //名称
    let fprice=req.body.fprice;//  价格
    let fsituation=req.body.fsituation;    //节日
    let fuse=req.body.fuse;    //  用途
    let fhc=req.body.fhc;      //  花材
    let fword=req.body.fword;  //花语
    let addsql=&quot;insert into flowerinfo(fid,fname,fprice,fsituation,fuse,fhc,fword)values(0,?,?,?,?,?,?)&quot;&lt;span&gt;;
    let addsqlParams=&lt;span&gt;[fname,fprice,fsituation,fuse,fhc,fword];
    connection.query(addsql,addsqlParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt;(err){
            throw&lt;span&gt; err;
            return&lt;span&gt;;
        }
        res.send('添加成功!'&lt;span&gt;);
    })
})&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;三、修改数据接口和SQL语句&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
//  修改鲜花信息
router.put('/updateFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    let id=&lt;span&gt;req.body.fid;
    let fname=req.body.fname;  //名称
    let fprice=req.body.fprice;//  价格
    let fsituation=req.body.fsituation;    //节日
    let fuse=req.body.fuse;    //  用途
    let fhc=req.body.fhc;      //  花材
    let fword=req.body.fword;   //花语
    let updatesql='update flowerinfo set fname=?,fprice=?,fsituation=?,fuse=?,fhc=?,fword=? where fid=?'&lt;span&gt;;
    let updatesqlParams=&lt;span&gt;[fname,fprice,fsituation,fuse,fhc,fword,id]
    connection.query(updatesql,updatesqlParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt; (err){
            throw&lt;span&gt;  err;
            return false&lt;span&gt;
        }
        res.send('修改成功!'&lt;span&gt;);
    })
})&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;四、查询全部数据接口和SQL语句&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
//  查询全部鲜花信息
router.get('/getAllFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    connection.query('select * from flowerinfo',(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt;(err){
            throw&lt;span&gt;  err;
            return&lt;span&gt;;
        }
        res.send(result);
    })
});&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;五、查询单条数据接口和SQL语句&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
//  根据鲜花编号查询鲜花信息
router.get('/findFlowerById',(req,res,next)=&amp;gt;&lt;span&gt;{
    let id=&lt;span&gt;req.query.id;
    let selectsql='select * from flowerinfo where fid=?'&lt;span&gt;;
    let selctParams=&lt;span&gt;[id];
    connection.query(selectsql,selctParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt; (err){
            throw&lt;span&gt;  err
        }
        res.send(result);
    })
})&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;六、删除数据接口和SQL语句&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
//  删除鲜花信息
router.delete('/deleteFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    let id=&lt;span&gt;req.body.id;
    let deletesql=&quot;delete from flowerinfo where fid=?&quot;&lt;span&gt;;
    let deletesqlParams=&lt;span&gt;[id];
    connection.query(deletesql,deletesqlParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt;(err){
            throw&lt;span&gt;  err;
            return false&lt;span&gt;;
        }
        res.send('删除成功!'&lt;span&gt;);
    })
})
module.exports=router;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;七、全部代码：&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;95&quot;&gt;
&lt;pre&gt;
let express=require('express'); //  引入express依赖
let mysql=require('mysql')  //  引入mysql依赖
let router=&lt;span&gt;express.Router();
let connection=&lt;span&gt;mysql.createConnection({
    host: 'localhost',   //主机名
    user:'root',    //账号
    password:'123456',    //密码
    database:'flower'   //连接的数据库名称
&lt;span&gt;});
connection.connect();   //建立连接
//  查询全部鲜花信息
router.get('/getAllFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    connection.query('select * from flowerinfo',(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt;(err){
            throw&lt;span&gt;  err;
            return&lt;span&gt;;
        }
        res.send(result);
    })
});
//  添加鲜花信息
router.post('/addFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    let fname=req.body.fname;  //名称
    let fprice=req.body.fprice;//  价格
    let fsituation=req.body.fsituation;    //节日
    let fuse=req.body.fuse;    //  用途
    let fhc=req.body.fhc;      //  花材
    let fword=req.body.fword;  //花语
    let addsql=&quot;insert into flowerinfo(fid,fname,fprice,fsituation,fuse,fhc,fword)values(0,?,?,?,?,?,?)&quot;&lt;span&gt;;
    let addsqlParams=&lt;span&gt;[fname,fprice,fsituation,fuse,fhc,fword];
    connection.query(addsql,addsqlParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt;(err){
            throw&lt;span&gt; err;
            return&lt;span&gt;;
        }
        res.send('添加成功!'&lt;span&gt;);
    })
})
//  根据鲜花编号查询鲜花信息
router.get('/findFlowerById',(req,res,next)=&amp;gt;&lt;span&gt;{
    let id=&lt;span&gt;req.query.id;
    let selectsql='select * from flowerinfo where fid=?'&lt;span&gt;;
    let selctParams=&lt;span&gt;[id];
    connection.query(selectsql,selctParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt; (err){
            throw&lt;span&gt;  err
        }
        res.send(result);
    })
})
//  修改鲜花信息
router.put('/updateFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    let id=&lt;span&gt;req.body.fid;
    let fname=req.body.fname;  //名称
    let fprice=req.body.fprice;//  价格
    let fsituation=req.body.fsituation;    //节日
    let fuse=req.body.fuse;    //  用途
    let fhc=req.body.fhc;      //  花材
    let fword=req.body.fword;   //花语
    let updatesql='update flowerinfo set fname=?,fprice=?,fsituation=?,fuse=?,fhc=?,fword=? where fid=?'&lt;span&gt;;
    let updatesqlParams=&lt;span&gt;[fname,fprice,fsituation,fuse,fhc,fword,id]
    connection.query(updatesql,updatesqlParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt; (err){
            throw&lt;span&gt;  err;
            return false&lt;span&gt;
        }
        res.send('修改成功!'&lt;span&gt;);
    })
})
//  删除鲜花信息
router.delete('/deleteFlower',(req,res,next)=&amp;gt;&lt;span&gt;{
    let id=&lt;span&gt;req.body.id;
    let deletesql=&quot;delete from flowerinfo where fid=?&quot;&lt;span&gt;;
    let deletesqlParams=&lt;span&gt;[id];
    connection.query(deletesql,deletesqlParams,(err,result)=&amp;gt;&lt;span&gt;{
        if&lt;span&gt;(err){
            throw&lt;span&gt;  err;
            return false&lt;span&gt;;
        }
        res.send('删除成功!'&lt;span&gt;);
    })
})
module.exports=router;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里有个重大的bug，就是我们连接完之后没有关闭连接，这样就会资源的浪费，占用cpu。这里大家可以想办法去解决，由于我们这里是测试的，所以没有设置关闭连接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;结尾一定要写&lt;span&gt;module.exports=router&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;4、注册router和设置跨域请求&lt;/h3&gt;
&lt;p&gt;找到目录结构下的app.js文件注册路由和跨域请求设置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1475945/202001/1475945-20200128162808486-1563490211.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;app.js文件代码&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
var createError = require('http-errors'&lt;span&gt;);
var express = require('express'&lt;span&gt;);
var path = require('path'&lt;span&gt;);
var cookieParser = require('cookie-parser'&lt;span&gt;);
var logger = require('morgan'&lt;span&gt;);

var indexRouter = require('./routes/index'&lt;span&gt;);
var usersRouter = require('./routes/users'&lt;span&gt;);
var productRouter=require('./routes/product'&lt;span&gt;);
&lt;span&gt;var flowerRouter=require('./routes/flowerRouter')&lt;/span&gt;
var app =&lt;span&gt; express();

// view engine setup
app.set('views', path.join(__dirname, 'views'&lt;span&gt;));
app.set('view engine', 'ejs'&lt;span&gt;);

app.use(logger('dev'&lt;span&gt;));
app.use(express.json());
app.use(express.urlencoded({ extended: false&lt;span&gt; }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public'&lt;span&gt;)));
//  设置跨域请求
&lt;span&gt;app.all('*', function(req, res, next) {
    res.header(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);
    res.header(&quot;Access-Control-Allow-Headers&quot;, &quot;content-type&quot;);
    res.header(&quot;Access-Control-Allow-Methods&quot;, &quot;PUT,POST,GET,DELETE,OPTIONS&quot;);
    res.header(&quot;X-Powered-By&quot;, ' 3.2.1');
    res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;);
    if(req.method == &quot;OPTIONS&quot;) {
        res.send(&quot;200&quot;);
    } else&lt;/span&gt;&lt;span&gt;&lt;span&gt; {
        next();
    }
});&lt;/span&gt;
app.use('/'&lt;span&gt;, indexRouter);
app.use('/users'&lt;span&gt;, usersRouter);
app.use('/product'&lt;span&gt;,productRouter);
&lt;span&gt;app.use('/flower',flowerRouter);&lt;/span&gt;


// catch 404 and forward to error handler
app.use(function&lt;span&gt;(req, res, next) {
  next(createError(404&lt;span&gt;));
});

// error handler
app.use(function&lt;span&gt;(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message =&lt;span&gt; err.message;
  res.locals.error = req.app.get('env') === 'development' ?&lt;span&gt; err : {};

  // render the error page
  res.status(err.status || 500&lt;span&gt;);
  res.render('error'&lt;span&gt;);
});

module.exports = app;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;红色标注的表示新增的路由注册和添加的跨域请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;跨域代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
//  设置跨域请求
app.all('*', function&lt;span&gt;(req, res, next) {
    res.header(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;&lt;span&gt;);
    res.header(&quot;Access-Control-Allow-Headers&quot;, &quot;content-type&quot;&lt;span&gt;);
    res.header(&quot;Access-Control-Allow-Methods&quot;, &quot;PUT,POST,GET,DELETE,OPTIONS&quot;&lt;span&gt;);
    res.header(&quot;X-Powered-By&quot;, ' 3.2.1'&lt;span&gt;);
    res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;&lt;span&gt;);
    if(req.method == &quot;OPTIONS&quot;&lt;span&gt;) {
        res.send(&quot;200&quot;&lt;span&gt;);
    } else&lt;span&gt; {
        next();
    }
});&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;前端&lt;/h2&gt;
&lt;p&gt;前端方面主要使用两种方法操作数据，一种是ajax，另一种是axios，将所需要用到的插件引入。目录结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1475945/202001/1475945-20200128163634332-1376421700.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 在这里我们引入的vue.js，axios，jQuey，以及新建两个html文件，为了方便命名上已经规定了。接下来就是数据操作了。&lt;/p&gt;
&lt;h3&gt;vue2整合ajax&lt;/h3&gt;
&lt;h4&gt;一、查询全部鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ajax和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
          findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
&lt;span&gt;
          },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;二、根据条件查询鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ajax和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
          findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
              &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;id;
              $.ajax({
                  url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/findFlowerById&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                  type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                  data:{id:id}
              }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fprice;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fsituation;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fuse;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fhc;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fword;
              })
          },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;三、添加鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ajax和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
          findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
&lt;span&gt;
          },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/addFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    }
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                })
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;四、修改鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ajax和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
          findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
              &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;id;
              $.ajax({
                  url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/findFlowerById&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                  type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                  data:{id:id}
              }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fprice;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fsituation;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fuse;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fhc;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fword;
              })
          },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;              
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/updateFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;PUT&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fid:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid,
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    },
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{

                })
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;五、删除鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ajax和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
          findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
&lt;span&gt;
          },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/deleteFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    data:{
                        id:id
                    },
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{

                })
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;六、全部代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;78&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ajax和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
          findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
              &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;id;
              $.ajax({
                  url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/findFlowerById&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                  type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                  data:{id:id}
              }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fprice;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fsituation;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fuse;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fhc;
                  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fword;
              })
          },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/deleteFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    data:{
                        id:id
                    },
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{

                })
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/addFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    }
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                })
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/updateFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;PUT&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fid:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid,
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    },
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{

                })
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                $.ajax({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).done((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;vue2整合axios&lt;/h3&gt;
&lt;p&gt;为了更加方便的实现功能和理解，在这里我分步骤为大家讲解。争取有一个好的效果。vue整合axios其实和vue整合ajax差不多，如果想学习axios的相关文章，可以参考我的这一篇博客&lt;a href=&quot;https://www.cnblogs.com/jjgw/p/12079892.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/jjgw/p/12079892.html&lt;/a&gt;，这里面涉及关于axios的使用大部分讲解的都非常详细。欢迎大家评论和提出问题。&lt;/p&gt;
&lt;h4&gt;一、查询全部鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;axios和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/axios.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
            findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;                
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;二、根据条件查询鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;axios和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/axios.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
            findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
                &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;id;
                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/findFlowerById&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    params:{id:id}
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fprice;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fsituation;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fuse;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fhc;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fword;
                })
            },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;三、添加鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;axios和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/axios.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
            findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/addFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    }
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.result&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;四、修改鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;axios和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/axios.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
            findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
                &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;id;
                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/findFlowerById&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    params:{id:id}
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fprice;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fsituation;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fuse;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fhc;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fword;
                })
            },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/updateFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;PUT&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fid:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid,
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    },
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.result&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;五、删除鲜花信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;axios和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/axios.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
            findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/deleteFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    data:{
                        id:id
                    },
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.result&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;六、全部代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;78&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;axios和vue操作mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;app&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;800px&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin: 0 auto&quot;&lt;/span&gt;&lt;span&gt; cellspacing&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt; cellpadding&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;价格&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;使用节日&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花用途&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;鲜花花材&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;花语&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&quot;(item,index) of flowerArray&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{index+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fname}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fprice}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fsituation}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fuse}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fhc}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{item.fword}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;删除&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;deleteFlower(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; :data-id&lt;/span&gt;&lt;span&gt;=&quot;item.fid&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;findFlowerById(item.fid)&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        名称：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        价格：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fprice&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        节日：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fsituation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        用途：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fuse&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花材：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fhc&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        花语：
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; v-model&lt;/span&gt;&lt;span&gt;=&quot;fword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;color: red&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{result}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;addFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;添加鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; @click&lt;/span&gt;&lt;span&gt;=&quot;updateFlower&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;修改鲜花&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/vue.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;javascripts/axios.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; vm&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
        el:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        data:{
            fid:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fname:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fprice:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fsituation:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fuse:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fhc:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            fword:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            result:&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
            flowerArray:[],
        },
        mounted(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.findAllFlower();
        },
        methods:{
            findFlowerById:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据编号查询鲜花信息&lt;/span&gt;
                &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;id;
                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/findFlowerById&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    params:{id:id}
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    console.log(data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname);
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fname;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fprice;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fsituation;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fuse;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fhc;
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].fword;
                })
            },
            deleteFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/deleteFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    data:{
                        id:id
                    },
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.result&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            },
            addFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  添加鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/addFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    }
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.result&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            },
            updateFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (id) {      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  修改鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/updateFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;PUT&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data:{
                        fid:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fid,
                        fname:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fname,
                        fprice:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fprice,
                        fsituation:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fsituation,
                        fuse:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fuse,
                        fhc:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fhc,
                        fword:&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.fword,
                    },
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.result&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            },
            findAllFlower:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;  查询全部鲜花信息&lt;/span&gt;
&lt;span&gt;                axios({
                    url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://localhost:3000/flower/getAllFlower&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    method:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                    dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }).then((data)&lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt;{
                    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.flowerArray&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;data.data;
                })
            }
        },
    })

&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Tue, 28 Jan 2020 12:27:00 +0000</pubDate>
<dc:creator>一只流浪的KK</dc:creator>
<og:description>前言 最近学习了一下node.js相关的内容，在这里初步做个小总结，说实话关于本篇博客的相关内容，自己很久之前就已经有过学习，但是你懂的，“好记性不如烂笔筒”，学过的东西不做笔记的话，很容易就会忘记的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/jjgw/p/12238799.html</dc:identifier>
</item>
<item>
<title>【Java并发基础】管程简介 - sakuraxx</title>
<link>http://www.cnblogs.com/myworld7/p/12238796.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/myworld7/p/12238796.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;在Java 1.5之前，Java语言提供的唯一并发语言就是管程，Java 1.5之后提供的SDK并发包也是以管程为基础的。除了Java之外，C/C++、C#等高级语言也都是支持管程的。&lt;/p&gt;
&lt;p&gt;那么什么是管程呢？&lt;br/&gt;见名知意，是指管理共享变量以及对共享变量操作的过程，让它们支持并发。翻译成Java领域的语言，就是管理类的状态变量，让这个类是线程安全的。&lt;/p&gt;
&lt;p&gt;synchronized关键字和wait()、notify()、notifyAll()这三个方法是Java中实现管程技术的组成部分。记得学习操作系统时，在线程一块还有信号量机制，管程在功能上和信号量及PV操作类似，属于一种进程同步互斥工具。Java选择管程来实现并发主要还是因为实现管程比较容易。&lt;/p&gt;
&lt;p&gt;管程对应的英文是Monitor，直译为“监视器”，而操作系统领域一般翻译为“管程”。&lt;/p&gt;
&lt;p&gt;在管程的发展史上，先后出现过三种不同的管程模型，分别是Hasen模型、Hoare模型和MESA模型。现在正在广泛使用的是MESA模型。下面我们便介绍MESA模型。&lt;/p&gt;
&lt;h2 id=&quot;mesa模型&quot;&gt;MESA模型&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1099419/202001/1099419-20200128201152301-1784803913.png&quot; width=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;管程中引入了条件变量的概念，而且每个条件变量都对应有一个等待队列。条件变量和等待队列的作用是解决线程之间的同步问题。&lt;/p&gt;
&lt;p&gt;我们来看一个例子来理解这个模型。多个线程对一个共享队列进行操作。&lt;/p&gt;
&lt;p&gt;假设线程T1要执行出队操作，但是这个操作要执行成功的前提是队列不能为空。这个队列不能为空就是管程里的条件变量。若是&lt;strong&gt;线程T1进入管程后发现队列是空的&lt;/strong&gt;，那它就&lt;strong&gt;需要在“队列不空”这个条件变量的等待队列中等待&lt;/strong&gt;。&lt;br/&gt;通过调用&lt;code&gt;wait()&lt;/code&gt;实现。若是用对象A代表“队列不空”这个条件，那么线程T1需要调用&lt;code&gt;A.wait()&lt;/code&gt;，来将自己阻塞。&lt;br/&gt;在线程T1进入条件变量的等待队列后，是允许其他线程进入管程的。&lt;/p&gt;
&lt;p&gt;再假设之后另外一个线程T2执行了入队操作，入队操作成功之后，“队列不空”这个条件对于线程T1来说已经满足了，此时&lt;strong&gt;线程T2要通知线程T1&lt;/strong&gt;，告诉它调用需要的条件已经满足了。&lt;br/&gt;那么线程T2怎么通知线程T1？线程T2调用&lt;code&gt;A.notify()&lt;/code&gt;来通知A等待队列中的一个线程，此时这个线程里面只有T1，所以notify唤醒的就是线程T1，如果当这个条件变量的等待队列不止T1一个线程，我们就需要使用notifyAll()。&lt;br/&gt;当线程&lt;strong&gt;T1得到通知后&lt;/strong&gt;，会从等待队列中出来，&lt;strong&gt;重新进入到入口等待队列中&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;使用代码说明就如下：（代码来自参考[1]）&lt;br/&gt;注意，&lt;code&gt;await()&lt;/code&gt;和前面的&lt;code&gt;wait()&lt;/code&gt;的语义是一样的；&lt;code&gt;signal()&lt;/code&gt;和前面的&lt;code&gt;notify()&lt;/code&gt;语义是一样的（没有提到的&lt;code&gt;signalAll()&lt;/code&gt;和&lt;code&gt;notifyAll()&lt;/code&gt;语义也是一样的）。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class BlockedQueue&amp;lt;T&amp;gt;{
    final Lock lock = new ReentrantLock();
    // 条件变量：队列不满  
    final Condition notFull = lock.newCondition();
    // 条件变量：队列不空  
    final Condition notEmpty = lock.newCondition();

    // 入队
    void enq(T x) {
        lock.lock();
        try {
            while (队列已满){
                // 等待队列不满
                notFull.await();
            }  
            // 省略入队操作...
            // 入队后, 通知可出队
            notEmpty.signal();
        }finally {
            lock.unlock();
        }
    }
    // 出队
    void deq(){
        lock.lock();
        try {
            while (队列已空){
                // 等待队列不空
                notEmpty.await();
            }
            // 省略出队操作...
            // 出队后，通知可入队
            notFull.signal();
        }finally {
            lock.unlock();
        }  
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;wait的正确使用姿势&quot;&gt;wait()的正确使用姿势&lt;/h2&gt;
&lt;p&gt;对于MESA管程来说，有一个编程范式：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;while(条件不满足) {
  wait();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们在前面介绍&lt;a href=&quot;https://www.cnblogs.com/myworld7/p/12231936.html#_label3&quot;&gt;等待-通知机制&lt;/a&gt;时就提到过这种范式。这个范式可以解决“条件曾将满足过”这个问题。唤醒的时间和获取到锁继续执行的时间是不一致的，&lt;strong&gt;被唤醒的线程再次执行时可能条件又不满足了，所以循环检验条件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;MESA模型的wait()方法还有一个&lt;strong&gt;超时参数，为了避免线程进入等待队列永久阻塞&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;notify和notifyall分别何时使用&quot;&gt;notify()和notifyAll()分别何时使用&lt;/h2&gt;
&lt;p&gt;满足以下三个条件时，可以使用notify()，其余情况尽量使用notifyAll()：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;所有等待线程拥有相同的等待条件；&lt;/li&gt;
&lt;li&gt;所有等待线程被唤醒后，执行相同的操作；&lt;/li&gt;
&lt;li&gt;只需要唤醒一个线程。&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;三种管程模型在通知线程上的区别&quot;&gt;三种管程模型在通知线程上的区别&lt;/h2&gt;
&lt;p&gt;Hasen模型、Hoare模型和MESA模型的&lt;strong&gt;一个核心区别是当条件满足后，如何通知相关线程&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;管程要求同一时刻只允许一个线程执行&lt;/strong&gt;，&lt;strong&gt;那当线程T2的操作使得线程T1等待的条件满足时，T1和T2究竟谁可以执行呢&lt;/strong&gt;？&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;在Hasen模型里，要求&lt;strong&gt;notify()放在代码的最后&lt;/strong&gt;，这样&lt;strong&gt;T2通知完T1后，T2就结束了，然后T1再执行&lt;/strong&gt;这样就可以保证同一时刻只有一个线程执行。&lt;/li&gt;
&lt;li&gt;在Hoare模型里面，&lt;strong&gt;T2通知完T1后，T2阻塞，T1马上执行；等T1执行完，再唤醒t2&lt;/strong&gt;。比起Hasen模型，T2多了一次阻塞唤醒操作。&lt;/li&gt;
&lt;li&gt;在MESA管程里，&lt;strong&gt;T2通知完T1后，T2还是会接着执行&lt;/strong&gt;，T1并不立即执行，仅仅是&lt;strong&gt;从条件变量的等待队列进入到入口等待队列中&lt;/strong&gt;（&lt;strong&gt;但是T1再次执行时，可能条件又不满足了，所以需要循环防方式检验条件变量&lt;/strong&gt;）。这样的好处是：notify()代码不用放到代码的最后，T2也没有多余的阻塞唤醒操作。&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;java语言的内置管程synchronized&quot;&gt;Java语言的内置管程synchronized&lt;/h2&gt;
&lt;p&gt;Java 参考了 MESA 模型，语言内置的管程（synchronized）对 MESA 模型进行了精简。MESA 模型中，条件变量可以有多个，Java 语言内置的管程里只有一个条件变量。模型如下图所示。（图来自参考[1]）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1099419/202001/1099419-20200128201127843-1637876423.png&quot; width=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Java 内置的管程方案（synchronized）使用简单，synchronized 关键字修饰的代码块，在编译期会自动生成相关加锁和解锁的代码，但是仅支持一个条件变量；而 Java SDK 并发包实现的管程支持多个条件变量，不过并发包里的锁，需要我们自己进行加锁和解锁操作。&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;小结&lt;/h2&gt;
&lt;p&gt;开始本来打算不写这篇学习笔记的，但是思考了一下，Java并发实现本就是源于操作系统中的管程，既然要好好介绍Java并发那么它的来源也应该要好好介绍一下。在学习一个知识的时候，其背后的理论也要好好掌握。&lt;/p&gt;
&lt;p&gt;参考：&lt;br/&gt;[1]极客时间专栏王宝令《Java并发编程实战》&lt;/p&gt;
</description>
<pubDate>Tue, 28 Jan 2020 12:14:00 +0000</pubDate>
<dc:creator>sakuraxx</dc:creator>
<og:description>前言 在Java 1.5之前，Java语言提供的唯一并发语言就是管程，Java 1.5之后提供的SDK并发包也是以管程为基础的。除了Java之外，C/C++、C 等高级语言也都是支持管程的。 那么什么</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/myworld7/p/12238796.html</dc:identifier>
</item>
<item>
<title>14、python异常处理及断言 - miki_peng</title>
<link>http://www.cnblogs.com/miki-peng/p/12238686.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/miki-peng/p/12238686.html</guid>
<description>
&lt;p&gt;&lt;span&gt;前言：本文主要介绍python中异常的处理及断言，包括异常类型、异常捕获、主动跑出异常和断言。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;一、异常类型介绍&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt;　　什么是异常？异常即是一个事件，该事件会在程序执行过程中发生，会影响程序的正常执行，一般情况下，在python无法正常处理程序时就会发生一个异常。&lt;/p&gt;
&lt;p&gt;异常是python对象，表示一个错误。当python脚本发生异常时我们需要捕获处理它，否则程序会终止执行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1804660/202001/1804660-20200128184647953-1643500025.png&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;125&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在python 中，所有的异常都是派生自BaseException类的实例，下面介绍几种常见几种异常：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;BaseException&lt;/strong&gt;：  所有异常的基类&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;SystemExit              解释器请求退出&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;KeyboardInterrupt      用户中断执行(通常是输入^C)&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;GeneratorExit            生成器(generator)发生异常来通知退出&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;Exception &lt;strong&gt; &lt;/strong&gt;             常规错误的基类（&lt;strong&gt;重点掌握&lt;/strong&gt;，一般因代码引起的错误，是我们可以控制的，其他异常基类我们了解即可）&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;常见的Exception类异常类型举例如下：&lt;/p&gt;
&lt;ul&gt;&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;AttributeError：属性错误，特性引用和赋值失败时会引发属性错误&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;NameError：试图访问的变量名不存在&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;SyntaxError：语法错误，代码形式错误&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;IOError：一般常见于打开不存在文件时会引发IOError错误，也可以解理为输出输入错误&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;KeyError：使用了映射中不存在的关键字（键）时引发的关键字错误&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;IndexError：索引错误，使用的索引不存在，常索引超出序列范围，什么是索引&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;TypeError：类型错误，内建操作或是函数应于在了错误类型的对象时会引发类型错误&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;ZeroDivisonError：除数为0，在用除法操作时，第二个参数为0时引发了该错误&lt;/li&gt;
&lt;li class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;ValueError：值错误，传给对象的参数类型不正确，像是给int()函数传入了字符串数据类型的参数。&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;还有更多的异常类型，有兴趣的可以查阅官网文档或者百度查询。&lt;/p&gt;
&lt;p class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt; &lt;/p&gt;
&lt;h2 class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt;二、异常捕获&lt;/h2&gt;
&lt;hr/&gt;&lt;h4 class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot;&gt; 1.try/except语法格式&lt;/h4&gt;
&lt;p&gt;　　捕捉异常可以使用try/except语句，如果你不想在异常发生时结束你的程序，只需在try里捕获它，使用except在错误发生后运行处理动作。&lt;/p&gt;
&lt;p class=&quot;md-end-block md-p md-focus&quot;&gt;&lt;span class=&quot;md-plain&quot;&gt;语法格式：（&lt;span&gt;注意&lt;/span&gt;：except中指定异常类型，可以指定一个也可以指定多个，也可以不指定，不指定时默认捕获所有Exception类型的异常）&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-p md-focus&quot;&gt;&lt;span class=&quot;md-plain&quot;&gt;try:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-p&quot;&gt;&lt;span class=&quot;md-tab&quot;&gt;&lt;span class=&quot;md-plain&quot;&gt;　　可能出现异常的代码&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-p&quot;&gt;&lt;span class=&quot;md-plain&quot;&gt;except 异常类型:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-p&quot;&gt;&lt;span class=&quot;md-tab&quot;&gt;　　&lt;span class=&quot;md-plain md-expand&quot;&gt;捕获到异常之后的处理方案&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block md-p&quot;&gt;&lt;span class=&quot;md-tab&quot;&gt;&lt;span class=&quot;md-plain md-expand&quot;&gt;&lt;span class=&quot;md-tab&quot;&gt;&lt;span class=&quot;md-plain md-expand&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/1804660/202001/1804660-20200128191617371-2015704770.png&quot; alt=&quot;&quot; width=&quot;509&quot; height=&quot;163&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;md-tab&quot;&gt;&lt;span class=&quot;md-plain md-expand&quot;&gt;&lt;span class=&quot;md-tab&quot;&gt;&lt;span class=&quot;md-plain md-expand&quot;&gt;上述例子中因为b没有被定义，在打印时无法找到b，因此抛出了一个NameError导致后面的代码无法继续执行，那么我们来捕获一下这个错误&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; try有可能发生异常的代码&lt;/span&gt;
    a = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;这是一个测试异常的文本&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(b)

&lt;/span&gt;&lt;span&gt;except&lt;/span&gt; (NameError, FileNotFoundError):  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 当捕获到异常时处理的方案，可以有多个except，不指定异常类型，会捕获所有异常&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;这里有一个异常！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; except NameError:  指定捕捉异常NameError，其他的异常不会捕获&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; except Exception as msg:    # 不确定什么异常异常，用exception，或者直接不指定&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt;     print(msg)&lt;/span&gt;

&lt;span&gt;print&lt;/span&gt;(a)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
C:\software\python\python.exe D:/learn/python18_http_request/exercise/&lt;span&gt;test.py
这里有一个异常！
这是一个测试异常的文本

Process finished with exit code 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2.异常处理中的else和finally&lt;/h4&gt;
&lt;p&gt;在try/except语句中可以使用else和finally，try语句里的代码没有异常才会执行else里的语句，而finally语句是不管try里有没有异常它都会执行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; try下面写有可能会出现异常的代码&lt;/span&gt;
    score = int(input(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入成绩：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 因为input获取的都是字符串，int()是强制转换成int类型，英文字符等是无法转换成int类型的字都会报错&lt;/span&gt;
&lt;span&gt;except&lt;/span&gt;&lt;span&gt; Exception:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 处理异常之后的处理，&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;用输入的数据不符合规范，默认给0分&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    score &lt;/span&gt;=&lt;span&gt; 0
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 代码没有出现异常，执行else中的代码&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;代码没有出现异常，执行else&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 不管代码有没有出现异常都会去执行的代码&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;finally不管代码有没有出现异常都会去执行的代码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;分数录入为:{}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;.format(score))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
C:\software\python\python.exe D:/learn/python18_http_request/exercise/&lt;span&gt;test.py
请输入成绩：nine
用输入的数据不符合规范，默认给0分
finally不管代码有没有出现异常都会去执行的代码
分数录入为:0

Process finished with exit code 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;三、主动抛出异常&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt; 异常捕获后为什么还要主动去抛出一个异常呢？这是为了方便我们知道出现异常的具体情况，我们还可以自定义异常&lt;/p&gt;
&lt;p&gt;语法格式：&lt;strong&gt;&lt;span class=&quot;md-plain&quot;&gt;raise 异常类型(异常信息)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; try 有可能发生异常的代码&lt;/span&gt;
    a = 1111
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(b)
&lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; NameError as msg:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(msg)
    &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; msg  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 捕获后运行不会报错，再抛出就会看到异常&lt;/span&gt;
&lt;span&gt;else&lt;/span&gt;:  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; try里面的代码都是正常执行，没有发生任何异常，就会执行这里&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;程序运行正常！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;不管有没有异常，我都会被执行！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
C:\software\python\python.exe D:/learn/python18_http_request/exercise/&lt;span&gt;test.py
name &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; defined
不管有没有异常，我都会被执行！
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:/learn/python18_http_request/exercise/test.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 15, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    &lt;span&gt;raise&lt;/span&gt; msg  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 捕获后运行不会报错，再抛出就会看到异常&lt;/span&gt;
  File &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:/learn/python18_http_request/exercise/test.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 12, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(b)
NameError: name &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; defined

Process finished with exit code &lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;在自动化测试中，我们只需要掌握如何捕获异常如何抛出异常即可，自定义异常这里就不多作解释，有兴趣的可以自定百度。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;四、断言assert&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt; 　　什么是断言？其实assert断言就是用于判断一个表达式，在表达式条件为 false 的时候触发断言异常，断言可以在条件不满足程序运行的情况下直接返回错误，&lt;/p&gt;
&lt;p&gt;而不必等待程序运行后出现崩溃的情况，例如我们的代码只能在a&amp;gt;8时运行，可以先判断当前是否符合条件。语法格式如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;md-plain&quot;&gt;assert&lt;/span&gt;&lt;/strong&gt; &lt;span class=&quot;md-plain&quot;&gt;表达式，提示信息　　（也可以没有提示信息）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; assert：断言&lt;/span&gt;
res1 = {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 1, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;msg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;登陆成功&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}
res2 &lt;/span&gt;= {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 0, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;msg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;登陆失败&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 加一个断言，判断结果是否如预期，如果与预期不一致，会报出断言异常并打印提示信息&lt;/span&gt;
&lt;span&gt;assert&lt;/span&gt; res1 == res2, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;该用例不通过！&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
C:\software\python\python.exe D:/learn/python18_http_request/exercise/&lt;span&gt;test.py
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:/learn/python18_http_request/exercise/test.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 15, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    &lt;span&gt;assert&lt;/span&gt; res1 == res2, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;该用例不通过！&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 加一个断言，判断结果是否如预期，如果与预期不一致，会报出断言异常并打印提示信息&lt;/span&gt;
&lt;span&gt;AssertionError: 该用例不通过！

Process finished with exit code &lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们也可以用try/except来捕获这个断言异常：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; assert：断言&lt;/span&gt;
res1 = {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 1, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;msg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;登陆成功&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}
res2 &lt;/span&gt;= {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 0, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;msg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;登陆失败&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 用try--except捕获断言异常&lt;/span&gt;
&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; res1 ==&lt;span&gt; res2
&lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; AssertionError as e:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;编号A1用例不通过！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; e  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 处理异常后，抛出异常&lt;/span&gt;
&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;编号A1用例通过！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
C:\software\python\python.exe D:/learn/python18_http_request/exercise/&lt;span&gt;test.py
编号A1用例不通过！
Traceback (most recent call last):
  File &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:/learn/python18_http_request/exercise/test.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 18, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    &lt;span&gt;raise&lt;/span&gt; e  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 处理异常后，抛出异常&lt;/span&gt;
  File &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:/learn/python18_http_request/exercise/test.py&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, line 15, &lt;span&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    &lt;span&gt;assert&lt;/span&gt; res1 ==&lt;span&gt; res2
AssertionError

Process finished with exit code &lt;/span&gt;1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;作者：miki_peng&lt;/p&gt;
&lt;p&gt;出处：&lt;a href=&quot;https://www.cnblogs.com/miki-peng&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/miki-peng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，请大家尊重原创，如要转载，请在文章页面明显位置注明出处，否则保留追究法律责任的权利。&lt;/p&gt;
</description>
<pubDate>Tue, 28 Jan 2020 11:51:00 +0000</pubDate>
<dc:creator>miki_peng</dc:creator>
<og:description>前言：本文主要介绍python中异常的处理及断言，包括异常类型、异常捕获、主动跑出异常和断言。 一、异常类型介绍 什么是异常？异常即是一个事件，该事件会在程序执行过程中发生，会影响程序的正常执行，一般</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/miki-peng/p/12238686.html</dc:identifier>
</item>
<item>
<title>图像膨胀 - 啊哈彭</title>
<link>http://www.cnblogs.com/pingwen/p/12238674.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pingwen/p/12238674.html</guid>
<description>&lt;p&gt;&lt;strong&gt;1、原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所谓的图片的膨胀处理，其实就是在图像的边缘添加像素值，使得整体的像素值扩张，进而达到图像的膨胀效果，也可以说是信号与系统书中所提到的像素插值处理。&lt;/p&gt;
&lt;p&gt;对Z&lt;sup&gt;2&lt;/sup&gt;上元素集合A和结构体元素S，使用S对A进行腐蚀，记作：&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;A⊕S={z|(S)z ∩ A ≠ Ø}&lt;/p&gt;
&lt;p&gt;让位于图像圆点的结构元素S在Z平面上移动，如果S的圆点移动到z点时，S与A有公共的交集（非空集），则认为这样的z点构成的集合是S对A的膨胀图像。&lt;/p&gt;
&lt;p&gt;下图左侧是原图X，B是结构元素，右图是膨胀的结果。膨胀的方法是，拿B的中心点和X上的点一个一个地对比，如果B上至少有一个点在X的范围内，则该点为前景有效点；右边是膨胀后的结果。可以看出，膨胀后的图比原图点数多，就象X被膨胀增加了一层。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/743748/202001/743748-20200128194107336-2113663214.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;2、膨胀的实现&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
imgPath = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;E:\opencv_pic\src_pic\pic1.bmp&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
img &lt;/span&gt;=&lt;span&gt; imread(imgPath);
img&lt;/span&gt;=&lt;span&gt;rgb2gray(img);
img &lt;/span&gt;= &lt;span&gt;255&lt;/span&gt;-&lt;span&gt;img;
 
se &lt;/span&gt;= strel(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;square&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;)
img2 &lt;/span&gt;=&lt;span&gt; imdilate(img, se);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;),imshow(img),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;原始图像&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),imshow(img2),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;膨胀图像&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;膨胀后结果如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/743748/202001/743748-20200128194206354-605574385.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 放大后观察，左侧的噪点，第一列最下面一个是2*2的块，膨胀后变为4*4块。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/743748/202001/743748-20200128194236286-569366100.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果使用5*5和10*10的结构元素，膨胀效果如下。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
se = strel(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;square&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;&lt;span&gt;)
img2 &lt;/span&gt;=&lt;span&gt; imdilate(img, se);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;),imshow(img),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;原始图像&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),imshow(img2),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;膨胀图像系数5&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
se3 &lt;/span&gt;= strel(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;square&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;&lt;span&gt;)
img3 &lt;/span&gt;=&lt;span&gt; imdilate(img, se3);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;),imshow(img3),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;膨胀图像系数10&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;膨胀使物体的边界扩大，可能把多个元素连同起来。腐蚀后可以删除对象边界的某些像素，而膨胀给图像中的对象边界添加像素。腐蚀使图像变“细”，膨胀是图像变“粗”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/743748/202001/743748-20200128194258521-640155189.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;先腐蚀后再膨胀可以用在图像滤波，腐蚀后图像变细，去除了比较小的噪声，膨胀后恢复原图像。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
imgPath = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;E:\opencv_pic\src_pic\pic1.bmp&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
img &lt;/span&gt;=&lt;span&gt; imread(imgPath);
img&lt;/span&gt;=&lt;span&gt;rgb2gray(img);
img &lt;/span&gt;= &lt;span&gt;255&lt;/span&gt;-&lt;span&gt;img;

se &lt;/span&gt;= strel(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;square&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;&lt;span&gt;)
img2 &lt;/span&gt;=&lt;span&gt; imerode(img, se);
img3 &lt;/span&gt;=&lt;span&gt; imdilate(img2, se);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;),imshow(img),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;原始图像&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),imshow(img2),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;腐蚀图像&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
subplot(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;),imshow(img3),title(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;膨胀图像&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;图像效果如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/743748/202001/743748-20200128200717269-2025337842.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;和腐蚀相反，膨胀能使物体的边界扩大，具体的结果和图像的本身、结构元素的形状有关。一般的，二值化后图像容易出现断裂，膨胀可以桥接断裂的缝隙。&lt;/p&gt;
&lt;p&gt;腐蚀和膨胀对比：&lt;/p&gt;
&lt;p&gt;膨胀用3X3的结构元素，扫描二值图像的每一个像素，用结构元素与其覆盖的二值图像做“与”运算，如果都为0，结构图像的该像素为0，否则为1。只要有一个元素非零结果就非零，所以使二值图像扩大一圈。&lt;/p&gt;
&lt;p&gt;腐蚀用3X3的结构元素，扫描二值图像的每一个像素，用结构元素与其覆盖的二值图像做“与”运算，如果都为1，结构图像的该像素为1，否则为0。只要全部元素都为1结果才为1，所以使二值图像减小一圈。&lt;/p&gt;

&lt;blockquote readability=&quot;3.4623655913978&quot;&gt;
&lt;p&gt;尊重原创技术文章，转载请注明。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/pingwen/p/12238674.html&quot;&gt;https://www.cnblogs.com/pingwen/p/12238674.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Tue, 28 Jan 2020 11:45:00 +0000</pubDate>
<dc:creator>啊哈彭</dc:creator>
<og:description>图像的膨胀</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/pingwen/p/12238674.html</dc:identifier>
</item>
<item>
<title>可视化限流管理，Sentinel 控制台启动和接入 - 邴越</title>
<link>http://www.cnblogs.com/binyue/p/12238578.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/binyue/p/12238578.html</guid>
<description>&lt;p&gt;Sentinel 的使用可以分为核心库和控制台两个部分。&lt;br/&gt;核心库不依赖任何框架/库，集成了主流框架，可以进行单机限流降级等功能，&lt;br/&gt;控制台Dashboard提供了可视化的管理限流规则、对集群进行监控，集群限流分配管理、机器发现等功能。&lt;/p&gt;
&lt;p&gt;这篇博客学习 Sentinel 控制台的启动和接入。&lt;/p&gt;
&lt;h2 id=&quot;一控制台启动&quot;&gt;一、控制台启动&lt;/h2&gt;
&lt;p&gt;控制台下载有两种方式，一种是直接下载编译好的release版本程序包，另一种是下载控制台的工程代码，在本地打包后启动。&lt;/p&gt;
&lt;h3 id=&quot;直接下载release程序包&quot;&gt;直接下载release程序包&lt;/h3&gt;
&lt;p&gt;从 &lt;a href=&quot;https://github.com/alibaba/Sentinel/releases&quot;&gt;release&lt;/a&gt; 页面下载最新版本的控制台 jar 包。&lt;/p&gt;
&lt;p&gt;最新的正式版本是v1.7.1。&lt;/p&gt;
&lt;h3 id=&quot;通过代码构建&quot;&gt;通过代码构建&lt;/h3&gt;
&lt;p&gt;下载最新的 sentinel-dashboard 控制台工程，代码仓库地址 &lt;a href=&quot;https://github.com/alibaba/Sentinel/tree/master/sentinel-dashboard&quot;&gt;sentinel-dashboard&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下载后，进入工程目录，通过Maven打包成一个可执行的 fat jar：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mvn clean package&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;构建和启动&quot;&gt;构建和启动&lt;/h2&gt;
&lt;p&gt;使用如下命令启动控制台：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;java -Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard.jar&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意：启动 Sentinel 控制台需要 JDK 版本为 1.8 及以上版本。&lt;/p&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;-Dserver.port=8080 用于指定 Sentinel 控制台端口为 8080&lt;br/&gt;-Dcsp.sentinel.dashboard.server 用于控制台对外暴露的服务地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;配置用户名和密码&quot;&gt;配置用户名和密码&lt;/h3&gt;
&lt;p&gt;从 Sentinel 1.6.0 起，Sentinel 控制台引入基本的登录功能，默认用户名和密码都是 sentinel。&lt;br/&gt;&lt;img src=&quot;https://writing-picture.oss-cn-beijing.aliyuncs.com/sentinel-login.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果需要自行配置，可以通过如下参数进行调整：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;-Dsentinel.dashboard.auth.username=sentinel 用于指定控制台的登录用户名为 sentinel；&lt;br/&gt;-Dsentinel.dashboard.auth.password=123456 用于指定控制台的登录密码为 123456；如果省略这两个参数，默认用户和密码均为 sentinel；&lt;br/&gt;-Dserver.servlet.session.timeout=7200 用于指定 Spring Boot 服务端 session 的过期时间，如 7200 表示 7200 秒；60m 表示 60 分钟，默认为 30 分钟；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;查看控制台&quot;&gt;查看控制台&lt;/h3&gt;
&lt;p&gt;控制台启动后，访问 localhost:8080，可以查看控制台。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://writing-picture.oss-cn-beijing.aliyuncs.com/sentinel-console.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;二客户端接入控制台&quot;&gt;二、客户端接入控制台&lt;/h2&gt;
&lt;p&gt;这里我使用 spring.io 创建一个Spring Boot项目来进行演示，工程搭建步骤可以参考&lt;br/&gt;&lt;a href=&quot;https://www.cnblogs.com/binyue/p/12079356.html&quot;&gt;十分钟快速创建 Spring Cloud 项目&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;引入依赖&quot;&gt;引入依赖&lt;/h3&gt;
&lt;p&gt;客户端需要引入 Transport 模块来与 Sentinel 控制台进行通信。需要在 pom.xml 引入 JAR 包:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.alibaba.csp&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;sentinel-transport-simple-http&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.7.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;引入依赖后，在应用启动时需要添加，指定控制台地址和端口，可以通过添加启动JVM参数&lt;br/&gt;或者配置文件两种方式。&lt;/p&gt;
&lt;h3 id=&quot;配置控制台地址添加jvm启动参数&quot;&gt;配置控制台地址：添加JVM启动参数&lt;/h3&gt;
&lt;p&gt;启动时加入 JVM 参数 -Dcsp.sentinel.dashboard.server=consoleIp:port。&lt;br/&gt;这里我把启动参数添加在Idea Configuration下的VM options中：&lt;br/&gt;&lt;code&gt;-Dcsp.sentinel.dashboard.server=192.168.43.120:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://writing-picture.oss-cn-beijing.aliyuncs.com/sentinel-console-demo.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置控制台地址修改spring配置文件&quot;&gt;配置控制台地址：修改Spring配置文件&lt;/h3&gt;
&lt;p&gt;这里我使用的是yaml方式，&lt;br/&gt;&lt;img src=&quot;https://writing-picture.oss-cn-beijing.aliyuncs.com/sentinel-config.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;查看控制台-1&quot;&gt;查看控制台&lt;/h3&gt;
&lt;p&gt;完成配置后，启动应用，刷新控制台，可在 Sentinel 控制台上看到对应的应用，机器列表页面可以看到对应的机器，后面教程会对 Sentinel 控制台功能和应用进行详细的解析&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/Sentinel/wiki/&quot;&gt;Sentinel官方文档&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 28 Jan 2020 10:34:00 +0000</pubDate>
<dc:creator>邴越</dc:creator>
<og:description>Sentinel 的使用可以分为核心库和控制台两个部分。 核心库不依赖任何框架/库，集成了主流框架，可以进行单机限流降级等功能， 控制台Dashboard提供了可视化的管理限流规则、对集群进行监控，集</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/binyue/p/12238578.html</dc:identifier>
</item>
<item>
<title>揭秘webpack loader - champyin</title>
<link>http://www.cnblogs.com/champyin/p/12238528.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/champyin/p/12238528.html</guid>
<description>&lt;p&gt;Loader(加载器) 是 webpack 的核心之一。它用于将不同类型的文件转换为 webpack 可识别的模块。本文将尝试深入探索 webpack 中的 loader，揭秘它的工作原理，以及如何开发一个 loader。&lt;/p&gt;

&lt;p&gt;webpack 只能直接处理 javascript 格式的代码。任何非 js 文件都必须被预先处理转换为 js 代码，才可以参与打包。loader（加载器）就是这样一个代码转换器。它由 webpack 的 &lt;code&gt;loader runner&lt;/code&gt; 执行调用，接收原始资源数据作为参数（当多个加载器联合使用时，上一个loader的结果会传入下一个loader），最终输出 javascript 代码（和可选的 source map）给 webpack 做进一步编译。&lt;/p&gt;

&lt;h2 id=&quot;分类&quot;&gt;1. 分类&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;pre： 前置loader&lt;/li&gt;
&lt;li&gt;normal： 普通loader&lt;/li&gt;
&lt;li&gt;inline： 内联loader&lt;/li&gt;
&lt;li&gt;post： 后置loader&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;执行优先级&quot;&gt;2. 执行优先级&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;4类 loader 的执行优级为：&lt;code&gt;pre &amp;gt; normal &amp;gt; inline &amp;gt; post&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;相同优先级的 loader 执行顺序为：&lt;code&gt;从右到左，从下到上&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;前缀的作用&quot;&gt;3. 前缀的作用&lt;/h2&gt;
&lt;p&gt;内联 loader 可以通过添加不同前缀，跳过其他类型 loader。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;!&lt;/code&gt; 跳过 normal loader。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-!&lt;/code&gt; 跳过 pre 和 normal loader。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!!&lt;/code&gt; 跳过 pre、 normal 和 post loader。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这些前缀在很多场景下非常有用。&lt;/p&gt;

&lt;p&gt;loader 是一个导出一个函数的 node 模块。&lt;/p&gt;
&lt;h2 id=&quot;最简单的-loader&quot;&gt;1. 最简单的 loader&lt;/h2&gt;
&lt;p&gt;当只有一个 loader 应用于资源文件时，它接收源码作为参数，输出转换后的 js 代码。&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-loader.js

module.exports = function loader (source) {
    console.log('simple-loader is working');
    return source;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这就是一个最简单的 loader 了，这个 loader 啥也没干，就是接收源码，然后原样返回，为了证明这个loader被调用了，我在里面打印了一句话‘simple-loader is working’。&lt;/p&gt;
&lt;p&gt;测试这个 loader：&lt;br/&gt;&lt;strong&gt;需要先配置 loader 路径&lt;/strong&gt;&lt;br/&gt;若是使用 npm 安装的第三方 loader，直接写 loader 的名字就可以了。但是现在用的是自己开发的本地 loader，需要我们手动配置路径，告诉 webpack 这些 loader 在哪里。&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// webpack.config.js

const path = require('path');
module.exports = {
  entry: {...},
  output: {...},
  module: {
    rules: [
      {
        test: /\.js$/,
        // 直接指明 loader 的绝对路径
        use: path.resolve(__dirname, 'loaders/simple-loader')
      }
    ]
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;4.1679389312977&quot;&gt;
&lt;p&gt;如果觉得这样配置本地 loader 并不优雅，可以在 &lt;a href=&quot;https://champyin.com/2020/01/04/webpack%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0loader%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/&quot;&gt;webpack配置本地loader的四种方法&lt;/a&gt; 中挑一个你喜欢的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;执行webpack编译&lt;/strong&gt;&lt;br/&gt;可以看到，控制台输出 ‘simple-loader is working’。说明 loader 成功被调用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb50ba08cfc1d?w=1362&amp;amp;h=314&amp;amp;f=jpeg&amp;amp;s=78423&quot; alt=&quot;webpack-loader1.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;带-pitch-的-loader&quot;&gt;2. 带 pitch 的 loader&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pitch&lt;/code&gt; 是 loader 上的一个方法，它的作用是阻断 loader 链。&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-loader-with-pitch.js

module.exports = function (source) {  
    console.log('normal excution');   
    return source;
}

// loader上的pitch方法，非必须
module.exports.pitch =  function() { 
    console.log('pitching graph');
    // todo
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;pitch 方法不是必须的。如果有 pitch，loader 的执行则会分为两个阶段：&lt;code&gt;pitch&lt;/code&gt; 阶段 和 &lt;code&gt;normal execution&lt;/code&gt; 阶段。webpack 会先从左到右执行 loader 链中的每个 loader 上的 pitch 方法（如果有），然后再从右到左执行 loader 链中的每个 loader 上的普通 loader 方法。&lt;/p&gt;
&lt;p&gt;假如配置了如下 loader 链：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;use: ['loader1', 'loader2', 'loader3']&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;真实的 loader 执行过程是：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb5199583034c?w=1100&amp;amp;h=350&amp;amp;f=png&amp;amp;s=48466&quot; alt=&quot;webpack-loader-flow-with-pitch.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这个过程中如果任何 pitch 有返回值，则 loader 链被阻断。webpack 会跳过后面所有的的 pitch 和 loader，直接进入上一个 loader 的 &lt;code&gt;normal execution&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;假设在 loader2 的 pitch 中返回了一个字符串，此时 loader 链发生阻断：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb521b419a8df?w=1100&amp;amp;h=350&amp;amp;f=png&amp;amp;s=59478&quot; alt=&quot;webpack-loader-flow-with-pitch2.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;写一个简版的-style-loader&quot;&gt;3. 写一个简版的 style-loader&lt;/h2&gt;
&lt;p&gt;style-loader 通常不会独自使用，而是跟 css-loader 连用。css-loader 的返回值是一个 js 模块，大致长这样：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// 打印 css-loader 的返回值

// Imports
var ___CSS_LOADER_API_IMPORT___ = require(&quot;../node_modules/css-loader/dist/runtime/api.js&quot;);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, &quot;\nbody {\n    background: yellow;\n}\n&quot;, &quot;&quot;]);
// Exports
module.exports = exports;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这个模块在运行时上下文中执行后返回 &lt;code&gt;css&lt;/code&gt; 代码 &lt;code&gt;&quot;\nbody {\n background: yellow;\n}\n&quot;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;style-loader 的作用就是将这段 &lt;code&gt;css&lt;/code&gt; 代码转成 &lt;code&gt;style&lt;/code&gt; 标签插入到 &lt;code&gt;html&lt;/code&gt; 的 &lt;code&gt;head&lt;/code&gt; 中。&lt;/p&gt;
&lt;h3 id=&quot;设计思路&quot;&gt;设计思路&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;style-loader 最终需返回一个 &lt;code&gt;js&lt;/code&gt; 脚本：在脚本中创建一个 &lt;code&gt;style&lt;/code&gt; 标签，将 &lt;code&gt;css&lt;/code&gt; 代码赋给 &lt;code&gt;style&lt;/code&gt; 标签，再将这个 &lt;code&gt;style&lt;/code&gt; 标签插入 &lt;code&gt;html&lt;/code&gt; 的 &lt;code&gt;head&lt;/code&gt; 中。&lt;/li&gt;
&lt;li&gt;难点是获取 &lt;code&gt;css&lt;/code&gt; 代码，因为 css-loader 的返回值只能在运行时的上下文中执行，而执行 loader 是在编译阶段。换句话说，css-loader 的返回值在 style-loader 里派不上用场。&lt;/li&gt;
&lt;li&gt;曲线救国方案：使用获取 &lt;code&gt;css&lt;/code&gt; 代码的表达式，在运行时再获取 css (类似 &lt;code&gt;require('css-loader!index.css')&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;在处理 css 的 loader 中又去调用 &lt;code&gt;inline loader&lt;/code&gt; require &lt;code&gt;css&lt;/code&gt; 文件，会产生循环执行 loader 的问题，所以我们需要利用 &lt;code&gt;pitch&lt;/code&gt; 方法，让 style-loader 在 &lt;code&gt;pitch&lt;/code&gt; 阶段返回脚本，跳过剩下的 loader，同时还需要内联前缀 &lt;code&gt;!!&lt;/code&gt; 的加持。&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注：pitch 方法有3个参数：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;remainingRequest：loader链中排在自己后面的 loader 以及资源文件的绝对路径以&lt;code&gt;!&lt;/code&gt;作为连接符组成的字符串。&lt;/li&gt;
&lt;li&gt;precedingRequest：loader链中排在自己前面的 loader 的绝对路径以&lt;code&gt;!&lt;/code&gt;作为连接符组成的字符串。&lt;/li&gt;
&lt;li&gt;data：每个 loader 中存放在上下文中的固定字段，可用于 pitch 给 loader 传递数据。&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;可以利用 &lt;code&gt;remainingRequest&lt;/code&gt; 参数获取 loader 链的剩余部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;实现&quot;&gt;实现&lt;/h3&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-style-loader.js

const loaderUtils = require('loader-utils');
module.exports = function(source) {
    // do nothing
}

module.exports.pitch = function(remainingRequest) {
  console.log('simple-style-loader is working');
    // 在 pitch 阶段返回脚本
    return (
      `
      // 创建 style 标签
      let style = document.createElement('style');
      
      /**
      * 利用 remainingRequest 参数获取 loader 链的剩余部分
      * 利用 ‘!!’ 前缀跳过其他 loader 
      * 利用 loaderUtils 的 stringifyRequest 方法将模块的绝对路径转为相对路径
      * 将获取 css 的 require 表达式赋给 style 标签
      */
      style.innerHTML = require(${loaderUtils.stringifyRequest(this, '!!' + remainingRequest)});
      
      // 将 style 标签插入 head
      document.head.appendChild(style);
      `
    )
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;一个简易的 style-loader 就完成了。&lt;/p&gt;
&lt;h3 id=&quot;试用&quot;&gt;试用&lt;/h3&gt;
&lt;p&gt;webpack 配置&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// webpack.config.js

const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
module.exports = {
  entry: {...},
  output: {...},
  // 手动配置 loader 路径
  resolveLoader: {
    modules: [path.resolve(__dirname, 'loaders'), 'node_modules']
  },
  module: {
    rules: [
      {
        // 配置处理 css 的 loader
        test: /\.css$/,
        use: ['simple-style-loader', 'css-loader']
      }
    ]
  },
  plugins: [
    // 渲染首页
    new HtmlWebpackPlugin({
      template: './src/index.html'
    })
  ]
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在 index.js 中引入一个 css 样式文件&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// src/index.js

require('./index.css');
console.log('Brovo!');&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;样式文件中将 body 的背景色设置为黄色&lt;/p&gt;
&lt;pre class=&quot;css&quot;&gt;
&lt;code&gt;// src/index.css

body {
  background-color: yellow;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;执行webpack&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;npm run build&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到命令行控制台打印了 'simple-style-loader is working'，说明 webpack 成功调用了我们编写的 loader。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb531f7550912?w=1494&amp;amp;h=622&amp;amp;f=jpeg&amp;amp;s=239808&quot; alt=&quot;webpack-loader3.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在浏览器打开 dist 下的 index.html 页面，可以看到样式生效，而且成功插入到了页面头部！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb537f6a24411?w=1280&amp;amp;h=1044&amp;amp;f=jpeg&amp;amp;s=187670&quot; alt=&quot;webpack-loader2.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;说明我们编写的 loader 发挥作用了。&lt;/p&gt;
&lt;p&gt;成功！&lt;/p&gt;

&lt;h2 id=&quot;推荐2个工具包&quot;&gt;推荐2个工具包&lt;/h2&gt;
&lt;p&gt;开发 loader 必备：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. &lt;a href=&quot;https://www.npmjs.com/package/loader-utils&quot;&gt;loader-utils&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;这个模块中常用的几个方法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;getOptions 获取 loader 的配置项。&lt;/li&gt;
&lt;li&gt;interpolateName 处理生成文件的名字。&lt;/li&gt;
&lt;li&gt;stringifyRequest 把绝对路径处理成相对根目录的相对路径。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;2. &lt;a href=&quot;https://www.npmjs.com/package/schema-utils&quot;&gt;schema-utils&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;这个模块可以帮你验证 loader option 配置的合法性。&lt;br/&gt;用法：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-loader-with-validate.js

const loaderUtils = require('loader-utils');
const validate = require('schema-utils');
module.exports = function(source) {
  // 获取 loader 配置项
  let options = loaderUtils.getOptions(this) || {};
  // 定义配置项结构和类型
  let schema = {
    type: 'object',
    properties: {
      name: {
        type: 'string'
      }
    }
  }
  // 验证配置项是否符合要求
  validate(schema, options);
  return source;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当配置项不符合要求，编译就会中断并在控制台打印错误信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb53e2b3dc013?w=1714&amp;amp;h=764&amp;amp;f=jpeg&amp;amp;s=261178&quot; alt=&quot;webpack-loader4.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;开发异步-loader&quot;&gt;开发异步 loader&lt;/h2&gt;
&lt;p&gt;异步 loader 的开发（例如里面有一些需要读取文件的操作的时候），需要通过 this.async() 获取异步回调，然后手动调用它。&lt;br/&gt;用法：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-async-loader.js

module.exports = function(source) {
    console.log('async loader');
    let cb = this.async();
    setTimeout(() =&amp;gt; {
      console.log('ok');
      // 在异步回调中手动调用 cb 返回处理结果
      cb(null, source);
    }, 3000);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注： 异步回调 cb() 的第一个参数是 &lt;code&gt;error&lt;/code&gt;，要返回的结果放在第二个参数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;raw-loader&quot;&gt;raw loader&lt;/h2&gt;
&lt;p&gt;如果是处理图片、字体等资源的 loader，需要将 loader 上的 raw 属性设置为 true，让 loader 支持二进制格式资源（webpack默认是以 &lt;code&gt;utf-8&lt;/code&gt; 的格式读取文件内容给 loader）。&lt;br/&gt;用法：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-raw-loader.js

module.exports = function(source) {
  // 将输出 buffer 类型的二进制数据
  console.log(source);
  // todo handle source
  let result = 'results of processing source'
  return `
    module.exports = '${result}'
  `;
}
// 告诉 wepack 这个 loader 需要接收的是二进制格式的数据
module.exports.raw = true;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb54415f6bd59?w=1708&amp;amp;h=364&amp;amp;f=jpeg&amp;amp;s=140847&quot; alt=&quot;webpack-loader5.jpg&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注：通常 raw 属性会在有文件输出需求的 loader 中使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;输出文件&quot;&gt;输出文件&lt;/h2&gt;
&lt;p&gt;在开发一些处理资源文件（比如图片、字体等）的 loader 中，需要拷贝或者生成新的文件，可以使用内部的 &lt;code&gt;this.emitFile()&lt;/code&gt; 方法.&lt;br/&gt;用法：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// loaders/simple-file-loader.js

const loaderUtils = require('loader-utils');
module.exports = function(source) {
  // 获取 loader 的配置项
  let options = loaderUtils.getOptions(this) || {};
  // 获取用户设置的文件名或者制作新的文件名
  // 注意第三个参数，是计算 contenthash 的依据
  let url = loaderUtils.interpolateName(this, options.filename || '[contenthash].[ext]', {content: source});
  // 输出文件
  this.emitFile(url, source);
  // 返回导出文件地址的模块脚本
  return `module.exports = '${JSON.stringify(url)}'`;
}
module.exports.raw = true;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/1/28/16feb54ac723bca0?w=1346&amp;amp;h=340&amp;amp;f=jpeg&amp;amp;s=97864&quot; alt=&quot;webpack-loader6.jpg&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;在这个例子中，loader 读取图片内容（buffer），将其重命名，然后调用 &lt;code&gt;this.emitFile()&lt;/code&gt; 输出到指定目录，最后返回一个模块，这个模块导出重命名后的图片地址。于是当 &lt;code&gt;require&lt;/code&gt; 图片的时候，就相当于 require 了一个模块，从而得到最终的图片路径。（这就是 file-loader 的基本原理）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;开发约定&quot;&gt;开发约定&lt;/h2&gt;
&lt;p&gt;为了让我们的 loader 具有更高的质量和复用性，记得保持简单。也就是尽量保持让一个 loader 专注一件事情，如果发现你写的 loader 比较庞大，可以试着将其拆成几个 loader 。&lt;/p&gt;
&lt;p&gt;在 webpack 社区，有一份 loader 开发准则，我们可以去参考它来指导我们的 loader 设计：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;保持简单。&lt;/li&gt;
&lt;li&gt;利用多个loader链。&lt;/li&gt;
&lt;li&gt;模块化输出。&lt;/li&gt;
&lt;li&gt;确保loader是无状态的。&lt;/li&gt;
&lt;li&gt;使用 loader-utils 包。&lt;/li&gt;
&lt;li&gt;标记加载程序依赖项。&lt;/li&gt;
&lt;li&gt;解析模块依赖关系。&lt;/li&gt;
&lt;li&gt;提取公共代码。&lt;/li&gt;
&lt;li&gt;避免绝对路径。&lt;/li&gt;
&lt;li&gt;使用 peerDependency 对等依赖项。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;loader 的本质是一个 node 模块，这个模块导出一个函数，这个函数上可能还有一个 pitch 方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;了解了 loader 的本质和 loader 链的执行机制，其实就已经具备了 loader 开发基础了。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;开发 loader 不难上手，但是要开发一款高质量的 loader，仍需不断实践。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;尝试自己开发维护一个小 loader 吧～ 没准以后可以通过自己编写 loader 来解决项目中的一些实际问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;文章源码获取：&lt;a href=&quot;https://github.com/yc111/webpack-loader&quot; class=&quot;uri&quot;&gt;https://github.com/yc111/webpack-loader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;欢迎交流～&lt;/p&gt;
&lt;p&gt;Happy New Year！&lt;/p&gt;
&lt;p&gt;--&lt;/p&gt;
&lt;p&gt;参考&lt;br/&gt;&lt;a href=&quot;https://webpack.js.org/concepts/#loaders&quot; class=&quot;uri&quot;&gt;https://webpack.js.org/concepts/#loaders&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://webpack.js.org/api/loaders/&quot; class=&quot;uri&quot;&gt;https://webpack.js.org/api/loaders/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://webpack.js.org/contribute/writing-a-loader/&quot; class=&quot;uri&quot;&gt;https://webpack.js.org/contribute/writing-a-loader/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/webpack/webpack/blob/v4.41.5/lib/NormalModuleFactory.js&quot; class=&quot;uri&quot;&gt;https://github.com/webpack/webpack/blob/v4.41.5/lib/NormalModuleFactory.js&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/webpack-contrib/style-loader/blob/master/src/index.js&quot; class=&quot;uri&quot;&gt;https://github.com/webpack-contrib/style-loader/blob/master/src/index.js&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.npmjs.com/package/loader-utils&quot; class=&quot;uri&quot;&gt;https://www.npmjs.com/package/loader-utils&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.npmjs.com/package/schema-utils&quot; class=&quot;uri&quot;&gt;https://www.npmjs.com/package/schema-utils&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;欢迎转载，转载请注明出处：&lt;br/&gt;&lt;a href=&quot;https://champyin.com/2020/01/28/%E6%8F%AD%E7%A7%98webpack-loader/&quot;&gt;https://champyin.com/2020/01/28/%E6%8F%AD%E7%A7%98webpack-loader/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 28 Jan 2020 10:05:00 +0000</pubDate>
<dc:creator>champyin</dc:creator>
<og:description>前言 Loader(加载器) 是 webpack 的核心之一。它用于将不同类型的文件转换为 webpack 可识别的模块。本文将尝试深入探索 webpack 中的 loader，揭秘它的工作原理，以及</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/champyin/p/12238528.html</dc:identifier>
</item>
</channel>
</rss>