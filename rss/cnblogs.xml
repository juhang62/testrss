<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>如何使页面交互更流畅 - 牧云云</title>
<link>http://www.cnblogs.com/MuYunyun/p/10924924.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/MuYunyun/p/10924924.html</guid>
<description>&lt;h3 id=&quot;流畅性&quot;&gt;流畅性&lt;/h3&gt;
&lt;p&gt;本篇是基于 FDCon2019 上《让你的网页更丝滑by刘博文》的复盘文。该课题也是博主感兴趣的领域, 后续会结合 React 的 Schedule 与该文进行进一步整合, &lt;a href=&quot;https://github.com/MuYunyun/blog&quot;&gt;个人博客&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;被动交互: animation&lt;/li&gt;
&lt;li&gt;主动交互: 鼠标、键盘&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;被动交互&quot;&gt;被动交互&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af03226219e698?w=1201&amp;amp;h=323&amp;amp;f=jpeg&amp;amp;s=53550&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当前市面上的设备频率在 60 HZ 以上。&lt;/p&gt;
&lt;h3 id=&quot;主动交互&quot;&gt;主动交互&lt;/h3&gt;
&lt;p&gt;跑如下界面 &lt;a href=&quot;https://code.h5jun.com/pojob&quot; class=&quot;uri&quot;&gt;https://code.h5jun.com/pojob&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;结合如下代码块, 可以看到 100ms 以下的点击是顺畅的, 而超过 100ms 的点击就会有卡顿现象。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;var observer = new PerformanceObserver(function(list) {
  var perfEntries = list.getEntries()
  console.log(perfEntries)
});
observer.observe({entryTypes: [&quot;longtask&quot;]});&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;让用户感觉到流畅&quot;&gt;让用户感觉到流畅&lt;/h4&gt;
&lt;p&gt;衡量一个网页/App 是否流畅有个比较好用的 &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rail&quot;&gt;Rail 模型&lt;/a&gt;, 它大概有以下几个评判标准值。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Response —— 100ms
Animation —— 16.7ms
Idle —— 50ms
Load —— 1000ms&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;像素管道&quot;&gt;像素管道&lt;/h3&gt;
&lt;p&gt;像素管道一般由 5 个部分组成。JavaScript、样式、布局、绘制、合成。如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af0322629e9eb6?w=1716&amp;amp;h=260&amp;amp;f=jpeg&amp;amp;s=44966&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rendering/?hl=zh-cn&quot;&gt;渲染性能&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;保证主动交互让用户感觉流畅&quot;&gt;保证主动交互让用户感觉流畅&lt;/h3&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;function App() {
  useEffect(() =&amp;gt; {
    setTimeout(_ =&amp;gt; {
      const start = performance.now()
      while (performance.now() - start &amp;lt; 1000) { }
      console.log('done!')
    }, 5000)
  })
  return (
    &amp;lt;input type=&quot;text&quot; /&amp;gt;
  );
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af03225b2f894d?w=648&amp;amp;h=400&amp;amp;f=jpeg&amp;amp;s=31969&quot;/&gt;&lt;/p&gt;
&lt;p&gt;一般超过 50 ms 认为是 &lt;code&gt;long task(长任务)&lt;/code&gt;, &lt;code&gt;long task&lt;/code&gt; 会阻塞 &lt;code&gt;main thread&lt;/code&gt; 的运行, 如下是两种解决方案。&lt;/p&gt;
&lt;h4 id=&quot;web-worker&quot;&gt;Web Worker&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;app.js&lt;/code&gt; 代码如下:&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;import React, {useEffect} from 'react'
import WorkerCode from './worker'

function App() {
  useEffect(() =&amp;gt; {
    const testWorker = new Worker(WorkerCode)
    setTimeout(() =&amp;gt; {
      testWorker.postMessage({})
      testWorker.onmessage = function(ev) {
        console.log(ev.data)
      }
    }, 5000)
  })
  return (
    &amp;lt;input type=&quot;text&quot; /&amp;gt;
  );
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;worker.js&lt;/code&gt; 代码如下:&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;const workerCode = () =&amp;gt; {
  self.onmessage = function() {
    const start = performance.now()
    while (performance.now() - start &amp;lt; 1000) { }
    postMessage('done!')
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af03226c7faa28?w=1866&amp;amp;h=298&amp;amp;f=jpeg&amp;amp;s=73478&quot;/&gt;&lt;/p&gt;
&lt;p&gt;此时在输入框输入时没有卡顿的感觉。&lt;/p&gt;
&lt;h4 id=&quot;time-slicing&quot;&gt;Time Slicing&lt;/h4&gt;
&lt;p&gt;下面是另外一种使页面流畅的方法 —— &lt;code&gt;Time Slicing&lt;/code&gt;(时间分片)。&lt;/p&gt;
&lt;p&gt;观察 Chrome 的 Performance, 火焰图如下,&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af03226f12b750?w=1408&amp;amp;h=628&amp;amp;f=jpeg&amp;amp;s=121456&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从火焰图可以看出主线程被拆分为了多个时间分片, 所以不会造成卡顿。时间分片的代码片段如下所示:&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;function timeSlicing(gen) {
  if (typeof gen === 'function') gen = gen()
  if (!gen || typeof gen.next !== 'function') return

  (function next() {
    const res = gen.next() // ①
    if (res.done) return // ⑤
    setTimeout(next) // ③
  })()
}

// 调用时间分片函数
timeSlicing(function* () {
  const start = performance.now()
  while (performance.now() - start &amp;lt; 1000) {
    console.log('执行逻辑')
    yield // ②
  }
  console.log('done') // ④
})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;该函数虽然代码量不长, 但却不易理解。前置知识 &lt;a href=&quot;https://github.com/MuYunyun/blog/blob/master/BasicSkill/readES6/Generator.md&quot;&gt;Generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面对该函数进行分析:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;往时间分片函数 &lt;code&gt;timeSlicing&lt;/code&gt; 中传入 &lt;code&gt;generator&lt;/code&gt; 函数;&lt;/li&gt;
&lt;li&gt;函数的执行顺序 —— ①、②、③、① (此时有个竞赛的关系, 如果 &lt;code&gt;performance.now() - start &amp;lt; 1000&lt;/code&gt; 则继续 ②、③, 如果 &lt;code&gt;performance.now() - start &amp;gt;= 1000&lt;/code&gt; 则跳出循环执行 ④、⑤);&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;conclusion&quot;&gt;conclusion&lt;/h4&gt;
&lt;p&gt;针对 &lt;code&gt;long task&lt;/code&gt; 会阻塞 &lt;code&gt;main thread&lt;/code&gt; 的运行的情形, 给出两种解决方案:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Web Worker&lt;/code&gt;: 使用 &lt;code&gt;Web Worker&lt;/code&gt; 提供的多线程环境来处理 &lt;code&gt;long task&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Time Slicing&lt;/code&gt;: 将主线程上的 &lt;code&gt;long task&lt;/code&gt; 进行时间分片;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;保证被动交互让用户感觉流畅&quot;&gt;保证被动交互让用户感觉流畅&lt;/h3&gt;
&lt;p&gt;保证 &lt;code&gt;16.7ms&lt;/code&gt; 有新的一帧传输到界面上。除去用户的逻辑代码, 一帧内留给浏览器整合的时间大概只有 &lt;code&gt;6ms&lt;/code&gt; 左右, 回到像素管道上来, 我们可以从这几方面进行优化:&lt;/p&gt;
&lt;h4 id=&quot;避免-css-选择器嵌套过深&quot;&gt;避免 CSS 选择器嵌套过深&lt;/h4&gt;
&lt;p&gt;Style 这部分的优化在 css 样式选择器的使用, css 选择器使用的层级越多, 耗费的时间越多。以下是测试 css 选择器不同层级筛选相同元素的一次测试结果。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;div.box:not(:empty):last-of-type span         2.25ms
index.html:85 .box--last span                 0.28ms
index.html:85 .box:nth-last-child(-n+1) span  2.51ms&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;避免布局重排&quot;&gt;避免布局重排&lt;/h4&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;// 先修改值
el.style.witdh = '100px'
// 后取值
const width = el.offsetWidth&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这段代码有什么问题呢?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af03228112bbf6?w=1434&amp;amp;h=404&amp;amp;f=jpeg&amp;amp;s=49767&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到它会造成布局重排。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af0322a286a4b6?w=940&amp;amp;h=244&amp;amp;f=jpeg&amp;amp;s=40417&quot;/&gt;&lt;/p&gt;
&lt;p&gt;应对的策略是调整它们的执行顺序,&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;// 先取值
const width = el.offsetWidth
// 后修改值
el.style.witdh = '100px'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af0322fe8f547d?w=1204&amp;amp;h=264&amp;amp;f=jpeg&amp;amp;s=55163&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到经过调换顺序后, 后执行的 el.style.width 会新开一个像素管道, 而不会在原先的像素管道进行重排。&lt;/p&gt;
&lt;p&gt;此外不要在循环中执行如下的操作,&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;for (var i = 0; i &amp;lt; 1000; i++) {
  const newWidth = container.offsetWidth; // ①
  boxes[i].style.width = newWidth + 'px'; // ②
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以在火焰图中看到它发生了重绘的警告,&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/5/26/16af03230219cabc?w=1202&amp;amp;h=596&amp;amp;f=jpeg&amp;amp;s=131622&quot;/&gt;&lt;/p&gt;
&lt;p&gt;执行顺序是 ①②①②①②①..., 假若我们在第一个 ① 后面插入一条竖线后 ①|②①②①②①, 其就变成先修改值后取值的情景, 所以也就发生了重绘!&lt;/p&gt;
&lt;p&gt;正确的使用姿势应该如下:&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;const newWidth = container.offsetWidth;
for (var i = 0; i &amp;lt; 1000; i++) {
  boxes[i].style.width = newWidth + 'px';
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;避免重绘&quot;&gt;避免重绘&lt;/h4&gt;
&lt;p&gt;创建 Layers(图层) 可以避免重绘,&lt;/p&gt;
&lt;pre class=&quot;css&quot;&gt;
&lt;code&gt;{
  transform: translateZ(0);
}&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Sat, 25 May 2019 18:30:00 +0000</pubDate>
<dc:creator>牧云云</dc:creator>
<og:description>流畅性 本篇是基于 FDCon2019 上《让你的网页更丝滑by刘博文》的复盘文。该课题也是博主感兴趣的领域, 后续会结合 React 的 Schedule 与该文进行进一步整合, '个人博客' 被动</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/MuYunyun/p/10924924.html</dc:identifier>
</item>
<item>
<title>初识Struts2 - ZYXS</title>
<link>http://www.cnblogs.com/zyxsblogs/p/10805915.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zyxsblogs/p/10805915.html</guid>
<description>&lt;p&gt;　　&lt;span&gt;今天来总结一下Struts2的知识点，学习编程我的思路一般是这样的:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　① why ?为什么要学这个技术（有什么优秀的地方，可以解决哪些问题？）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　②what ? 这个技术是什么玩意？有什么牛逼的地方值得我们学习，这个技术的核心是什么。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　③How ？  怎么学？基本技术都是自己自学的，我的学习思路就是，看视频，拿例子来学习知识，在敲代码的过程中理解问题。在此期间如果遇到不懂得或者是感觉很模糊的地方，及时的上网找相应的博客进行理解。基本上就是在敲代码中学习技术。并且对技术要及时的进行总结，但是我不推荐一个知识点总结一次，这样根本没有那么多的时间，最好的是看完之后，从全局出发，对整个知识进行积累和总结，在总结的过程中，多看一下其他人的博客，集思广益，收获会很大。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　④Do ！  做！做是什么？是理论到实践的必经之路，是你成为大牛的必经之路，找个项目，认真的做完，对一些常用的技巧和方法进行归纳整理，发布到自己的博客上，在做项目的时候，有很多的途径，我最喜欢 的是看视频了，只要你前面没偷懒，认真的学习了，在这个时候你就会发现都是so easy的事情。在做项目的时候，要注意的是，遇到不会的，或者是有新的理解一定要去探索，这样会知道的越来越多，同时为了防止遗忘，及时的对博客进行更新，或许你遇到的问题也可能是别人遇到的，这样你的人气值就上来了！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　比如对Struts2 的学习。其实大约一周前就学完了，但是懒癌犯了，懒得动，一直拖着没整理。因此提醒大家：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;当日事，当日毕！&lt;strong&gt;&lt;span&gt;当日事，当日毕！&lt;strong&gt;&lt;span&gt;当日事，当日毕！因为明天还有很多事情要做......&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　&lt;span&gt;　在没有进行Struts2 的学习之前，我用jsp+Servlet+javaBean+mysql+Jdbc+（bootStrap/EasyUi/Layui）开发了5个说大不大说小不小的狗屁项目，那tm写的叫一个累啊......但是很爽啊，哈哈哈，因为要实现一个方法比如说分页,那基本上就可以从底干到顶，熟悉整个流程。印象很深的一个功能是文件上传和下载，如果使用Struts那简直简单的.....超级爽啊。但是没学这个之前，我tm累的和狗一样，还是学习了别人的博客，自己加以改造，成功实现了数据库mysql存文件名，服务器存储文件，对文件能够进行上传和下载。虽然累但是对这部分功能还是了解的比较好了。框架确实好，用起来很爽。但是我还是喜欢研究基础的东西，这样在学别的框架那就是轻车熟路了。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;话不多说我们开始对Struts2进行剥皮抽筋的解剖整理。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;我接下来将主要从以下几个方面进行总结：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;Struts2是什么玩意？核心？主要的功能？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2的核心知识；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2牛逼的拦截器，卧槽这才是最牛的核心！&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2的值栈和OGNL牛逼啊！&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2的标签三大类是什么？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2的国际化有哪些东西啊？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2的验证框架简单吗？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2文件上传和下载为什么如此简单？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2防止重复提交做的努力？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Struts2的小技巧（持久跟新......）;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一&lt;/strong&gt; &lt;/span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt; Struts2是什么玩意？核心？主要的功能？&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Struts2在用户请求、模块化处理方面、页面展示表现的很牛逼。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526000346364-1961592185.png&quot; alt=&quot;&quot; width=&quot;343&quot; height=&quot;405&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　&lt;span&gt;&lt;strong&gt;应用基本处理流程&lt;/strong&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Web容器在接收到HttpServletRequest请求传递给一个过滤器ActionContextCleanUp，之后经过Otherfiters。接下来调用FilterDispatcher核心控制器,其通过调用ActionMapper确认请求的是哪一个Action.ActionMapper返回一个收集Action详细信息的ActionMaping对象。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;之后&lt;/span&gt;ActionProxy获得FliterDispatcher传递来的控制权，ActionProxy调用配置管理器（Configuration Manager）从配置文件struts.xml读取到配置信息。之后创建ActionInvocation对象，ActionInvocation在调用Action之前依次的调用所用的配置拦截器（Interceptor N），一旦执行结果返回结果字符串ActionInvocation负责查找结果字符串对应的（Result）然后执行Result,同时Result可以调用一些模板（Jsp,FreeMarker,Velocity或者是其他的）来呈现页面。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　在调用拦截器之后，我们进入拦截器（&lt;/span&gt;Interceptor N）会被执行（顺序与Action执行之前相反）。&lt;span&gt;之后响应（&lt;/span&gt;HttpServletResponse）被返回在web.xml中的配置的那些过滤器和核心控制器（FilterDispatcher）。&lt;/span&gt;&lt;/p&gt;





&lt;p&gt;&lt;span&gt;　　下面我们以一个实际的例子进行讲解。首先我们进行Struts2&lt;span&gt;版本的&lt;/span&gt;HelloWorld的实现过程。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;一 新建一个&lt;/span&gt;Dynamic web Project项目&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;第一步：&lt;/span&gt;File-&amp;gt;New-&amp;gt;Other-&amp;gt;&lt;span&gt;在搜索框里面搜索&lt;/span&gt;&lt;span&gt;Dynamic Web Project.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526000846404-1291147591.png&quot; alt=&quot;&quot; width=&quot;353&quot; height=&quot;305&quot;/&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526000914686-416528702.png&quot; alt=&quot;&quot; width=&quot;260&quot; height=&quot;309&quot;/&gt;&lt;/span&gt;&lt;/p&gt;










&lt;p&gt;&lt;span&gt;&lt;span&gt;第二步：之后新建一个&lt;/span&gt;Web&lt;span&gt;的项目&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;选择&lt;/span&gt;&lt;span&gt;Dynamic web module Version&lt;/span&gt;&lt;span&gt;为&lt;/span&gt;&lt;span&gt;2.5)&lt;/span&gt; &lt;span&gt;完成之后&lt;/span&gt;&lt;span&gt;finish&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526001017284-429108017.png&quot; alt=&quot;&quot; width=&quot;289&quot; height=&quot;291&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;二  &lt;span&gt;引入必须的&lt;/span&gt;jar包&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对于使用Struts2&lt;span&gt;需要引入一些核心的&lt;/span&gt;jar包，其中的所需的jar包如图1-1所示：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526001250450-1891576752.png&quot; alt=&quot;&quot; width=&quot;264&quot; height=&quot;260&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;span&gt;图&lt;/span&gt;1-1 核心jar包（放在lib文件夹中）&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;三 配置过滤器（&lt;/span&gt;web.xml文件中）&lt;/span&gt;&lt;/h3&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;对&lt;/span&gt;web.xml&lt;span&gt;进行配置，主要是配置过滤器，将所有的请求全部交给&lt;/span&gt;&lt;span&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/span&gt;&lt;span&gt;核心控制器处理。配置内容如下；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Struts2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter 
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Struts2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/*&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;justify&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;　&lt;span&gt;　通过配置拦截器地址(&amp;lt;filter-mapping&amp;gt;&amp;lt;/filter-mapping)，&amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&lt;span&gt;将所有的&lt;/span&gt;HttpServletReqeust&lt;span&gt;请求全部交给了名字叫做&lt;/span&gt;&lt;span&gt;Struts2&lt;/span&gt;&lt;span&gt;的拦截器（&lt;/span&gt;&amp;lt;filter-name&amp;gt;Struts2&amp;lt;/filter-name&amp;gt;&lt;span&gt;）进行处理，在前面的&lt;/span&gt;&amp;lt;filter&amp;gt;&amp;lt;/filter&amp;gt;&lt;span&gt;拦截器，定义的&lt;/span&gt;&lt;span&gt;名为&lt;/span&gt;Struts2&lt;span&gt;拦截器&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&amp;lt;filter-name&amp;gt;Struts2&amp;lt;/filter-name&amp;gt;)&lt;span&gt;被捕获，进而调用了定义的拦截器类&lt;/span&gt;&amp;lt;filter-class&amp;gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&amp;lt;/filter-class&amp;gt;&lt;span&gt;进行处理。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;四  &lt;strong&gt;&lt;span&gt;配置&lt;/span&gt;Struts.xml文件&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt; 　　struts.xml文件中必须的内容：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE struts PUBLIC&quot;-//Apache Software Foundation//DTD Struts Configuration2.0//EN&quot; &quot;http://struts.apache.org/dtds/struts-2.0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;span&gt;将struts.xml文件放在默认的src下。&lt;/span&gt;&lt;span&gt;&lt;span&gt;如图&lt;/span&gt;1-2&lt;span&gt;所示：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526001850521-806220486.png&quot; alt=&quot;&quot; width=&quot;279&quot; height=&quot;291&quot;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p align=&quot;center&quot;&gt;&lt;span&gt;图&lt;/span&gt;1-2 struts&lt;span&gt;文件存放&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;/p&gt;
&lt;h3&gt;&lt;span&gt;五、&lt;span&gt;创建&lt;/span&gt;HelloWorldAction类,并在struts中进行配置。&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;创建一个&lt;/span&gt;HelloWorldAction&lt;span&gt;类，放在&lt;/span&gt;&lt;span&gt;yxs.Action&lt;/span&gt;&lt;span&gt;包下。在&lt;/span&gt;&lt;span&gt;HelloWorldAction&lt;/span&gt;&lt;span&gt;类中生成默认的&lt;/span&gt; &lt;span&gt;execute()&lt;/span&gt;&lt;span&gt;方法。具体代码如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HelloWorldAction &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Action{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;           &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; (non-Javadoc)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;           * @see com.opensymphony.xwork2.Action#execute()
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;         @Override
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;           &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;               System.out.println(&quot;执行了Action的默认构造方法！&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;               &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;         }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;  }
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;该类实现了&lt;/span&gt;Action&lt;span&gt;接口，&lt;/span&gt;execute&lt;span&gt;方法返回&lt;/span&gt;SUCCESS&lt;span&gt;。&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;struts.xml&lt;span&gt;中进行配置：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 默认继承自struts-default包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;helloWorld&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 如果前端访问hello方法，就会调用yxs.Action.HelloWorldAction类 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hello&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;yxs.Action.HelloWorldAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; HelloWorldAction类如果返回success参数(SUCCESS就是success)，就会调用helloWorld.jsp模板进行显示 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;helloWorld.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;六 创建&lt;/span&gt;helloWorld.jsp，部署tomcat实现HelloWorld&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;helloWorld.jsp&lt;span&gt;文件代码如下：&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;     &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;struts2 HelloWorld!&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    HelloWorld！struts2超级牛逼啊！
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;启动&lt;/span&gt;tomcat&lt;span&gt;，在地址栏访问&lt;/span&gt;&lt;span&gt;localhost:8080/Struts2Chap01/hello&lt;/span&gt;&lt;span&gt;即可显示效果如图&lt;/span&gt;&lt;span&gt;1-3&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526002448906-835124690.png&quot; alt=&quot;&quot; width=&quot;577&quot; height=&quot;159&quot;/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526002542422-1379036335.png&quot; alt=&quot;&quot; width=&quot;586&quot; height=&quot;159&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;图&lt;/span&gt;1-3 &lt;span&gt;显示效果&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;七 &lt;strong&gt;抽丝剥茧，分析如何运行&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　&lt;span&gt;　首先在&lt;/span&gt;&lt;/span&gt;&lt;span&gt;web&lt;span&gt;容器中，发送&lt;/span&gt;&lt;span&gt;HttpServletRequest&lt;/span&gt;&lt;span&gt;请求（&lt;/span&gt;&lt;strong&gt;localhost:8080/Struts2Chap01/hello&lt;/strong&gt;&lt;span&gt;），通过&lt;/span&gt;web.xml&lt;span&gt;配置文件，我们的过滤器将所有的请求都交给了&lt;/span&gt;&lt;span&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/span&gt; &lt;span&gt;核心控制器（期间经过了&lt;/span&gt;&lt;span&gt;过滤器&lt;/span&gt;ActionContextCleanUp，FilterDispatcher...&lt;span&gt;）处理，通过&lt;/span&gt;ActionProxy&lt;span&gt;调用配置管理器（&lt;/span&gt;Configuration Manager&lt;span&gt;），读取配置文件&lt;/span&gt;struts.xml&lt;span&gt;的配置信息。之后创建&lt;/span&gt;&lt;span&gt;ActionInvocation&lt;/span&gt;&lt;span&gt;对象，经过配置拦截器调用&lt;/span&gt;&lt;span&gt;Action&lt;/span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span&gt;&amp;lt;action name=&quot;hello&quot; class=&quot;yxs.Action.HelloWorldAction&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;）方法，让&lt;/span&gt;&lt;span&gt;HelloWorldAction&lt;/span&gt;&lt;span&gt;类处理，&lt;/span&gt;&lt;span&gt;HelloWorldAction&lt;/span&gt;&lt;span&gt;类中的&lt;/span&gt;&lt;span&gt;execute&lt;/span&gt;&lt;span&gt;方法&lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;strong&gt; SUCCESS&lt;/strong&gt;&lt;span&gt;，执行结果返回结果字符串&lt;/span&gt;SUCCESS,ActionInvocation&lt;span&gt;负责查找结果字符串对应的（&lt;/span&gt;&lt;span&gt;Result&lt;/span&gt;&lt;span&gt;）然后执行&lt;/span&gt;&lt;span&gt;Result.&lt;/span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span&gt;&amp;lt;result name=&quot;&lt;/span&gt;&lt;strong&gt;success&lt;/strong&gt;&quot;&amp;gt;helloWorld.jsp&amp;lt;/result&amp;gt;&lt;span&gt;）&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;根据返回的结果为&lt;/span&gt;&lt;strong&gt;success&lt;/strong&gt;,Result&lt;span&gt;调用&lt;/span&gt;&lt;span&gt;HelloWorld.jsp&lt;/span&gt;&lt;span&gt;&lt;span&gt;来呈现页面。在页面上显示&lt;/span&gt;：   &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;HelloWorld！ struts2超级牛逼啊！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;据此我们可以总结一下：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;在使用&lt;/span&gt;Struts2的时候，我们需要做的是&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;（1）&lt;span&gt;实现&lt;/span&gt;Action类，完成struts.xml&lt;span&gt;配置&lt;/span&gt;,主要是对前端请求方法安排响应的action处理，根据返回的结果跳转到不同的页面。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;（2）拦截器的配置和使用。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;（3）显示模板的创建。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;个人认使用&lt;/span&gt;struts&lt;span&gt;的核心在于拦截器的操作，对拦截器进行配置和使用可以实现很牛逼的操作，而且&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;本身默认的拦截器栈中就实现了很多牛逼的功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;二     Struts2的核心知识&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;一、&lt;strong&gt;Struts2 get/set自动获取/设置数据&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　比如说我们在&lt;/span&gt;Action&lt;span&gt;类中设置了自己的属性，生成了&lt;/span&gt;&lt;span&gt;get/set&lt;/span&gt;&lt;span&gt;方法。在页面中，如果设置或者获取属性，&lt;/span&gt;&lt;span&gt;struts2&lt;/span&gt;&lt;span&gt;就会自动调用&lt;/span&gt;&lt;span&gt;get()/set()&lt;/span&gt;&lt;span&gt;方法对数据处理。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;①&lt;span&gt;HelloWorldAction.java&lt;/span&gt;&lt;span&gt;文件中代码如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.java1234.Action;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.opensymphony.xwork2.Action;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HelloWorldAction &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Action{
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; String name;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置自己的name属性
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成get set方法&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; (non-Javadoc)
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     * @see com.opensymphony.xwork2.Action#execute()
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         System.out.println(&quot;调用了Action的默认方法！&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;②在&lt;span&gt;struts.xml&lt;/span&gt;&lt;span&gt;中的配置如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;helloWorld&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hello&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.HelloWorldAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;helloWorld.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;③helloWorld.jsp中代码如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;  hello  ${name}
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;④在浏览器中访问；&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;&lt;a href=&quot;http://localhost:8080/Struts2Chap02/hello?name=/%E2%80%9Djava&quot;&gt;&lt;span&gt;http://localhost:8080/Struts2Chap02/hello?name=&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;/a&gt;”&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;&lt;span&gt;⑤流程：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;前端访问&lt;/span&gt;hello?name=”java”,&lt;span&gt;这个时候会调用&lt;/span&gt;&lt;span&gt;HelloWorldAction.java&lt;/span&gt;&lt;span&gt;中的&lt;/span&gt;&lt;span&gt;setName()&lt;/span&gt;&lt;span&gt;方法，将&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;的值设置为&lt;/span&gt;&lt;span&gt;java.&lt;/span&gt;&lt;span&gt;之后&lt;/span&gt;&lt;span&gt;Jsp&lt;/span&gt;&lt;span&gt;页面访问&lt;/span&gt;&lt;span&gt;hello ${name},&lt;/span&gt;&lt;span&gt;想要获取&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;元素的值，会调用&lt;/span&gt;&lt;span&gt;getName()&lt;/span&gt;&lt;span&gt;方法，将&lt;/span&gt;&lt;span&gt;name&lt;/span&gt; &lt;span&gt;的输出。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;二 Struts2  Action设置数据&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;基本数据类型属性：见：&lt;/span&gt;   &lt;span&gt;一、&lt;/span&gt;Struts2 get/set&lt;span&gt;自动获取&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;设置数据&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span&gt;JavaBean&lt;span&gt;类型属性：&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　采用&lt;/span&gt;javaBean&lt;span&gt;模式，可以很方便的进行设置数据。例如我们设置一个简单的登录验证系统。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String password;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPassword() {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPassword(String password) {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.password =&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Action&lt;span&gt;层的UserAction.java&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String userName;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String userPassword;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     UserService userService =&lt;span&gt;new&lt;/span&gt;&lt;span&gt; UserService();
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUserName(String userName) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.userName =&lt;span&gt; userName;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUserPassword(String userPassword) {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.userPassword =&lt;span&gt; userPassword;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         User user=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; User();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        user.setName(userName);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        user.setPassword(userPassword);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(userService.login(user)){
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; ERROR;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;　　在这个类中，我们设置了和&lt;/span&gt;login.jsp&lt;span&gt;中&lt;/span&gt;&lt;span&gt;userName&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;userPassword&lt;/span&gt;&lt;span&gt;一样的属性名，到&lt;/span&gt;&lt;span&gt;Action&lt;/span&gt;&lt;span&gt;中方便设置和获取属性值。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;strong&gt;Servie&lt;span&gt;验证：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserService {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; login(User user){
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&quot;java&quot;.equals(user.getName()) &amp;amp;&amp;amp; &quot;123456&quot;&lt;span&gt;.equals(user.getPassword())){
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;         }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;Struts.xml&lt;span&gt;配置：&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;helloWorld&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;user&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.UserAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;error&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;error.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　根据返回的结果进行跳转：如果成功进入&lt;/span&gt;success.jsp &lt;span&gt;否则进入&lt;/span&gt;&lt;span&gt;error.jsp&lt;/span&gt;&lt;span&gt;中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Login.jsp&lt;span&gt;文件：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;user&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;get&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;       用户名:&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;userName&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;userName&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;       密码：  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;userPassword&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;userPassword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Success.jsp&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;登陆成功！
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;error.jsp&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;登录失败！
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;另一种思路：
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;Login.jsp代码变为：
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;user2&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;get&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;       用户名:&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;user.name&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;       密码：  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;user.password&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;UserAction代码：&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserAction2 &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;     * javabean模式！
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; User user;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; UserService userService;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; User getUser() {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; user;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUser(User user) {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.user =&lt;span&gt; user;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(userService.login(user)){
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; ERROR;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;综合以上的内容：   &lt;span&gt;我们推荐使用对象名&lt;/span&gt;.&lt;span&gt;属性名的方式。可以节省&lt;/span&gt;&lt;span&gt;Action&lt;/span&gt;&lt;span&gt;中的复杂度。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;三 Struts2 处理传入多个值&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;（1）&lt;strong&gt;处理数目不定的字符串；&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一般来说我们直接在可以使用数组来进行处理。以&lt;/span&gt;hobby&lt;span&gt;（爱好来举例子）&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;例如：&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;在&lt;/span&gt;hobby.jsp&lt;span&gt;中的我们可以选择多个自己喜欢的爱好，那么怎么将这些数据传到后台呢？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;基本流程：Action=&lt;/strong&gt;&lt;strong&gt;”&lt;/strong&gt;&lt;strong&gt;hobby&lt;/strong&gt;&lt;strong&gt;”&lt;/strong&gt;&lt;strong&gt;------&amp;gt;struts.xml--------&amp;gt;&lt;/strong&gt;&lt;strong&gt;com.java1234.Action.HobbyAction&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;hobby.jsp&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;         爱好的语言：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;java&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;java
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;C++&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;C++
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;C&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;C
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;javaScript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;javaScript
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;scale&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;scale
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;span&gt;8&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;struts.xml&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.HobbyAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;com.java1234.Action.HobbyAction&lt;/strong&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HobbyAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String[]hobby;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String[] getHobby() {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; hobby;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setHobby(String[] hobby) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.hobby =&lt;span&gt; hobby;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(String h:hobby)  System.out.print(h+&quot; &quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;（2）&lt;strong&gt;&lt;span&gt;处理数目不定的&lt;/span&gt;javaBean&lt;span&gt;对象；  &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我们一般使用对象集合处理：&lt;/span&gt;List  &lt;/strong&gt;&lt;strong&gt;&lt;span&gt;创建&lt;/span&gt;javaBean&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Student.java&lt;span&gt;代码如下：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Student {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; String name;   &lt;span&gt;private&lt;/span&gt; String sex;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; age;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getSex() {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSex(String sex) {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.sex =&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getAge() {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; age;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setAge(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; age) {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.age =&lt;span&gt; age;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toString() {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;Student [name=&quot; + name + &quot;, sex=&quot; + sex + &quot;, age=&quot; + age + &quot;]&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Student.jsp&lt;span&gt;代码：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;student&quot;&lt;/span&gt;&lt;span&gt;method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;性别&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;students[0].name&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;students[0].sex&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;students[0].age&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;students[1].name&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;students[1].sex&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;students[1].age&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;colspan&lt;/span&gt;&lt;span&gt;=&quot;3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;struts.xml&lt;span&gt;文件：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hobby&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;student&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.StudentAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;com.java1234.Action.StudentAction&lt;/strong&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; StudentAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;Student&amp;gt;&lt;span&gt;students;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;Student&amp;gt;&lt;span&gt; getStudents() {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; students;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setStudents(List&amp;lt;Student&amp;gt;&lt;span&gt; students) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.students =&lt;span&gt; students;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(Student student:students) { 
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                System.out.println(student);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;四、&lt;strong&gt;struts.xml 配置&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;这部分主要是对&lt;/span&gt;struts.xml文件进行配置，主要内容：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;(1) &lt;strong&gt;pageckage 配置 &lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;①&lt;strong&gt;name 包名&lt;/strong&gt; &lt;strong&gt;（可以用来区分不同的模块，在前后端分离的时候可以实现不同的包下面存放不同的类）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;foregroud&quot;&lt;/span&gt;&lt;span&gt; namespace&lt;/span&gt;&lt;span&gt;=&quot;/fore&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;studentList&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.ForeAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; 　　　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result  &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; ${pageContext.request.contextPath}/success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 　　&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;backgroud&quot;&lt;/span&gt;&lt;span&gt; namespace&lt;/span&gt;&lt;span&gt;=&quot;/back&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;studentList&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.BackAction&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;show&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; 　　　　　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${pageContext.request.contextPath}/success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; 　　&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;②&lt;strong&gt;extends 继承&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　extends=&quot;struts-default&quot; 默认继承自struts-default包&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;③&lt;strong&gt;namespace&lt;/strong&gt;&lt;strong&gt; &lt;span&gt;包命名空间&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;用来在前台访问地址的的时候进行区分。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;④&lt;strong&gt;abstract 抽象包&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;主要是用作拦截器，让其他的包去继承，实现功能！ &lt;/span&gt;&lt;span&gt;&amp;lt;package name=”xxx”,abstract=”true”&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;(2) &lt;strong&gt;action 配置 &lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;　　name action 名  &lt;span&gt;方法名&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　class 处理类   &lt;span&gt;处理的类名从包名开始写&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　method 方法     &lt;span&gt;规定的处理的方法&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;(3) &lt;strong&gt;&lt;span&gt;分模块配置方法&lt;/span&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　可以设定不同的&lt;/span&gt;xml文件处理不同的请求。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;Struts.xml文件代码：
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;file&lt;/span&gt;&lt;span&gt;=&quot;cheliang.xml&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;include&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;file&lt;/span&gt;&lt;span&gt;=&quot;zichan.xml&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;include&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;Cheliang.xml 
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;cheliang&quot;&lt;/span&gt;&lt;span&gt; namespace&lt;/span&gt;&lt;span&gt;=&quot;/cheliang&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;cheliang&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.CheLiangAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;${pageContext.request.contextPath}/success.jsp
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;（4）使用通配符     &lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;我们以学生和成绩为例，进行分析：&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;Struts.xml&lt;span&gt;配置文件：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;manage&quot;&lt;/span&gt;&lt;span&gt;  namespace&lt;/span&gt;&lt;span&gt;=&quot;/&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;student_*&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.StudentAction&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;{1}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;grade_*&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.GradeAction&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;{1}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;//合并以上两个操作！需要将地址栏中href=“student_list”首字母大写，因为是//{1}Action.
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;action name=&quot;*_*&quot; class=&quot;com.java1234.Action.{1}Action&quot; method=&quot;{2}&quot;&amp;gt;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            &amp;lt;result name=&quot;success&quot;&amp;gt;success.jsp&amp;lt;/result&amp;gt;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    &amp;lt;/action&amp;gt;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;  &lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;前端页面&lt;/span&gt;index.jsp&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;通配符&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student_list&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息查询&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student_add&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息添加&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student_update&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student_delete&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade_list&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息查询&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade_add&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息添加&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade_update&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade_delete&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;GradeAction&lt;span&gt;代码：&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; GradeAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String list() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         System.out.println(&quot;班级查找！！&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         name=&quot;班级查找&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String add()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         System.out.println(&quot;班级添加&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         name=&quot;班级添加&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String update()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         System.out.println(&quot;班级修改&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         name=&quot;班级修改&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String delete()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         System.out.println(&quot;班级删除&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         name=&quot;班级删除&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;StudentAction&lt;span&gt;代码：&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; StudentAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String list()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         System.out.println(&quot;学生查询！&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         name=&quot;学生查询&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String add()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         System.out.println(&quot;学生添加&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         name=&quot;学生添加&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String update()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         System.out.println(&quot;学生修改&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         name=&quot;学生修改&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String delete()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         System.out.println(&quot;学生删除&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         name=&quot;学生删除&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;五、动态方法调用&lt;/h3&gt;
&lt;h4&gt;Struts.xml&lt;span&gt;配置&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constant &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;struts.enable.DynamicMethodInvocation&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constant&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;//启用动态方法
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;manage&quot;&lt;/span&gt;&lt;span&gt;  namespace&lt;/span&gt;&lt;span&gt;=&quot;/&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;student&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.StudentAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;grade&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.GradeAction&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;前端页面&lt;/span&gt;index.jsp&lt;span&gt;：&lt;/span&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;动态方法调用！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student!list&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息查询&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student!add&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息添加&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student!update&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;student!delete&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;学生信息删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade!list&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息查询&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade!add&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息添加&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade!update&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;grade!delete&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;班级信息删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　使用action&lt;span&gt;名！方法名&lt;/span&gt;格式可以简化很多操作。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;六  Result&lt;span&gt;配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526011434316-1139013489.png&quot; alt=&quot;&quot; width=&quot;412&quot; height=&quot;286&quot;/&gt; &lt;/p&gt;
&lt;p&gt;&lt;span&gt;结合实例我们观察一下： &lt;span&gt;前端&lt;/span&gt;index.jsp&lt;span&gt;代码：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;index.jsp代码：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;hello?name=struts2&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;默认内部转发！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;//可以取得参数
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;hello!r?name=struts2&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;redirect重定向转发！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;//参数丢失
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;hello!c?name=struts2&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;chain链条转发&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;hello!ra?name=struts2&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;重定向到Action&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;hello&quot;&lt;/span&gt;&lt;span&gt; target&lt;/span&gt;&lt;span&gt;=&quot;_blank&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;全局result信息&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;Struts.xml&lt;span&gt;代码：&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constant &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;struts.enable.DynamicMethodInvocation&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constant&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;manage&quot;&lt;/span&gt;&lt;span&gt;  namespace&lt;/span&gt;&lt;span&gt;=&quot;/&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;global-results&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;error&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;error.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;global-results&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hello&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.HelloAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;r&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;redirect&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;c&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;chain&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hello2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;ra&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;redirectAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hello2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hello2&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.java1234.Action.HelloAction2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;success&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;success.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;HelloAction&lt;span&gt;代码：&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HelloAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String error;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getError() {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; error;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setError(String error) {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.error =&lt;span&gt; error;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; HelloAction() {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         System.out.println(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&quot;&quot;.equals(name)||name==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;this&lt;/span&gt;.error=&quot;name为空！&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; ERROR;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String r()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;r&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String c()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;c&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String ra()&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;ra&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;HelloAction2&lt;span&gt;代码：&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HelloAction2 &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name2;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName2() {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name2;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName2(String name2) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name2 =&lt;span&gt; name2;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; HelloAction2() {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name2=&quot;你好啊！我是Action2&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String execute() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;success.jsp&lt;span&gt;代码：&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     Name:${name}&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;验证chain和redirectAction，其他的方法不必关注Name2的值&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    Name2:${name2}
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;error.jsp代码:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     错误信息: ${error}&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;观察结果：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;访问&lt;/span&gt;index.jsp&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526012044035-945121535.png&quot; alt=&quot;&quot; width=&quot;529&quot; height=&quot;96&quot;/&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;　&lt;span&gt;　&lt;span&gt;其中默认内部转发：参数可以被获取;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526012117835-2107725097.png&quot; alt=&quot;&quot; width=&quot;527&quot; height=&quot;146&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;Redirect&lt;span&gt;重定向转发！参数不能被获取 ;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526012227982-567857564.png&quot; alt=&quot;&quot; width=&quot;508&quot; height=&quot;141&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;Chain&lt;span&gt;链条转发，参数可以被带过去，并且&lt;/span&gt;&lt;span&gt;name2&lt;/span&gt;&lt;span&gt;的值也可以被显示。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526012455724-894864395.png&quot; alt=&quot;&quot; width=&quot;514&quot; height=&quot;147&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;重定向&lt;/span&gt;Action&lt;span&gt;，参数不会被传递过去，但是&lt;/span&gt;&lt;span&gt;name2&lt;/span&gt;&lt;span&gt;的值可以被获取。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526012540818-841675692.png&quot; alt=&quot;&quot; width=&quot;501&quot; height=&quot;132&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;全局&lt;/span&gt;result&lt;span&gt;，不带任何参数，或调用&lt;/span&gt;&lt;span&gt;error.jsp&lt;/span&gt;&lt;span&gt;文件。  &lt;/span&gt;&lt;/strong&gt;&amp;lt;global-results&amp;gt;                     &amp;lt;result name=&quot;error&quot;&amp;gt;error.jsp&amp;lt;/result&amp;gt;                     &amp;lt;/global-results&amp;gt;       &lt;strong&gt;结果：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1435526/201905/1435526-20190526012724898-445194560.png&quot; alt=&quot;&quot; width=&quot;504&quot; height=&quot;78&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p align=&quot;justify&quot;&gt; &lt;/p&gt;
</description>
<pubDate>Sat, 25 May 2019 17:30:00 +0000</pubDate>
<dc:creator>ZYXS</dc:creator>
<og:description>今天来总结一下Struts2的知识点，学习编程我的思路一般是这样的: ① why ?为什么要学这个技术（有什么优秀的地方，可以解决哪些问题？）。 ②what ? 这个技术是什么玩意？有什么牛逼的地方值</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zyxsblogs/p/10805915.html</dc:identifier>
</item>
<item>
<title>eruda手机端调试神器 - 小周sri的码农</title>
<link>http://www.cnblogs.com/zhoulifeng/p/10924821.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhoulifeng/p/10924821.html</guid>
<description>&lt;p&gt;在日常的移动端开发时，一般都是试用chrome浏览器的移动端模式进行开发和调试，如果想在手机上能和浏览器一样看控制台调试就更加完美了； &lt;/p&gt;
&lt;p&gt;一个手机端调试神器&lt;a href=&quot;https://github.com/liriliri/eruda/blob/master/doc/README_CN.md&quot; target=&quot;_blank&quot;&gt;eruda&lt;/a&gt;是一个专为手机网页前端设计的调试面板，类似 DevTools 的迷你版，其主要功能包括：捕获 console 日志、检查元素状态、显示性能指标、捕获XHR请求、显示本地存储和 Cookie 信息、浏览器特性检测等等。&lt;/p&gt;
&lt;p&gt;只要在我们的html文件中写入下面这些代码，在手机上，也能想浏览器控制台一样进行查看。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;script src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;//cdn.jsdelivr.net/npm/eruda&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
　　　eruda.init();&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/script&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1188378/201905/1188378-20190526004356154-250122229.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1188378/201905/1188378-20190526004403530-263596269.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;真的方便我们开发使用。&lt;/p&gt;

</description>
<pubDate>Sat, 25 May 2019 16:46:00 +0000</pubDate>
<dc:creator>小周sri的码农</dc:creator>
<og:description>在日常的移动端开发时，一般都是试用chrome浏览器的移动端模式进行开发和调试，如果想在手机上能和浏览器一样看控制台调试就更加完美了； 一个手机端调试神器eruda是一个专为手机网页前端设计的调试面板</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zhoulifeng/p/10924821.html</dc:identifier>
</item>
<item>
<title>【游戏】隐形守护者 第1集 太阳之影【看我能记得多少剧情】 - 海瑞菌·博客</title>
<link>http://www.cnblogs.com/wuhairui/p/10924752.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuhairui/p/10924752.html</guid>
<description>&lt;h4&gt;第一章 太阳之影&lt;/h4&gt;
&lt;p&gt;看不了请进：&lt;a href=&quot;https://www.diyidan.com/main/post/6295053995631507643/detail/1#anchor_comment_floor&quot;&gt;https://www.diyidan.com/main/post/6295053995631507643/detail/1#anchor_comment_floor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天晚上刚刚看到的微信推送的游戏，手机版居然都出了，之前倒是没自己亲手玩过。写技术文之余，偶尔也需要娱乐下，哈哈哈。之前看过别的up主在B站发的视频，没事就看了全集。现在自己下载了手游版体验了下，剧情肯定和原版一样的，看看记得多少内容。这是刚刚录的游戏视频。&lt;/p&gt;
&lt;p&gt;之前还想发B站呢，结果一搜索，很多人都发了。再发那里还有啥意思[捂嘴笑]&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;纯子天下第一！！！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Sat, 25 May 2019 16:24:00 +0000</pubDate>
<dc:creator>海瑞菌&amp;#183;博客</dc:creator>
<og:description>第一章 太阳之影 看不了请进：https://www.diyidan.com/main/post/6295053995631507643/detail/1#anchor_comment_floor 今</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/wuhairui/p/10924752.html</dc:identifier>
</item>
<item>
<title>动软代码生成器学习 - 陈彦斌</title>
<link>http://www.cnblogs.com/chenyanbin/p/10924753.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenyanbin/p/10924753.html</guid>
<description>&lt;p&gt;&lt;span&gt;注意事项：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　1、将新建的UI层项目的.Net framework设置为3.5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2、把每个项目的cpu架构设置为any cpu(64位生成与32位生成时需要解决兼容问题)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;官网地址：http://www.maticsoft.com/&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;安装包地址(&lt;strong&gt;&lt;span&gt;这里已经整理好了，包括开发帮助文档&lt;/span&gt;)&lt;/strong&gt;&lt;/span&gt;：https://pan.baidu.com/s/14ugfOwPFC5c13svyka6T0w &lt;/p&gt;
&lt;p&gt;&lt;em id=&quot;__mceDel&quot;&gt;提取码：2i1t&lt;br/&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;开发步骤文档(&lt;span&gt;&lt;strong&gt;包含操作步骤以及问题处理方式&lt;/strong&gt;&lt;/span&gt;)：https://pan.baidu.com/s/133U1SwwlUIAWe63hdY4MQw &lt;/p&gt;
&lt;p&gt;提取码：rzc9&lt;/p&gt;
</description>
<pubDate>Sat, 25 May 2019 16:24:00 +0000</pubDate>
<dc:creator>陈彦斌</dc:creator>
<og:description>注意事项： 1、将新建的UI层项目的.Net framework设置为3.5 2、把每个项目的cpu架构设置为any cpu(64位生成与32位生成时需要解决兼容问题) 官网地址：http://www</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/chenyanbin/p/10924753.html</dc:identifier>
</item>
<item>
<title>空间划分的数据结构 - KillerAery</title>
<link>http://www.cnblogs.com/KillerAery/p/10878367.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/KillerAery/p/10878367.html</guid>
<description>&lt;hr/&gt;&lt;p&gt;前言：&lt;br/&gt;在游戏程序中，空间划分往往是非常重要的优化思想。&lt;br/&gt;于是博主花了一些时间去整理了游戏程序中常用的几个空间划分数据结构，并将它们大概列举出来以供笔记。&lt;/p&gt;

&lt;p&gt;这个很容易理解，即一个多维数组。平面/基于高度的空间使用二维网格数组，而3D空间使用三维网格数组。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;Data girds2d[MAX_X][MAX_Y];//2D平面划分网格，二维数组
Data girds3d[MAX_X][MAX_Y][MAX_Z];//3D空间划分网格，三维数组&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;网格的应用&quot;&gt;网格的应用&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;基于网格划分的游戏世界&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;例如战棋/棋类游戏，Minecraft方块游戏等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190523004819229-2049677192.jpg&quot; width=&quot;700&quot; height=&quot;400&quot; alt=&quot;&quot; align=&quot;center&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201902/1409576-20190201200629096-356176009.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;四叉树索引的基本思想是将地理空间递归划分为不同层次的树结构。&lt;br/&gt;它将已知范围的空间等分成四个相等的子空间，如此递归下去，直至树的层次达到一定深度或者满足某种要求后停止分割。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201904/1409576-20190414001238856-1312817533.png&quot;/&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//示例：一个四叉树节点的简单结构
struct QuadtreeNode {
  Data data;
  QuadtreeNode* children[2][2];
  int divide;  //表示这个区域的划分长度
};&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//示例：找到x,y位置对应的四叉树节点
QuadTreeNode* findNode(int x,int y,QuadtreeNode * root){

  QuadtreeNode* node = root;
  
  for(int i = 0; i &amp;lt; N &amp;amp;&amp;amp; n; ++i){
    //通过diliver来将x,y归纳为0或1的值，从而索引到对应的子节点。
    int divide = node-&amp;gt;divide;
    int divideX = x / divide;
    int divideY = y / divide;
    
    QuadtreeNode* temp = root-&amp;gt;children[divideX][divideY];
    if(!temp){break;}
    node = temp;
    
    //如果归纳为1的值，还需要减去该划分长度，以便进一步划分
    x -= (divideX == 1 ? divide : 0);
    y -= (divideY == 1 ? divide : 0);
  }
  
  return node;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;四叉树的结构在空间数据对象分布比较均匀时，具有比较高的空间数据插入和查询效率（复杂度O(logN)）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525234338531-1948136460.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;而八叉树的结构和四叉树基本类似，其拥有8个节点(三维2元素数组)，其构建方法与查询方法也大同小异，不多描述。&lt;/p&gt;
&lt;h2 id=&quot;四叉树八叉树的应用&quot;&gt;四叉树/八叉树的应用&lt;/h2&gt;
&lt;p&gt;它们可以进行区域较大的划分，然后可以对各种检测算法进行分区域的剪枝/过滤。&lt;br/&gt;下面提几个应用（实际应用面很广）：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;感知检测&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如图所示，假如保证一个（图中为绿色⚪）智能体最远不会感知到所在区域外的地方。&lt;br/&gt;那么通过四叉树，可以快速过滤掉K区域外的红色目标，只需考虑K区域内的红色目标。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190519000922385-666882142.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;碰撞检测&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;类似上面感知检测。不同划分区域保证不会碰撞的情况下，就能快速过滤与本物体不同区域的其他潜在物体碰撞。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;光线追踪（Ray Tracing）过滤&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;光线追踪渲染，可使用八叉树来划分3D空间区域，从而过滤掉大量不同区域。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;BSP tree是一棵二叉树，其每个节点表示一个有向超平面形状，其代表的平面将当前空间划分为前向和背向两个子空间，分别对应左儿子和右儿子。&lt;/p&gt;
&lt;p&gt;（为了方便说明，下文的平面一律指超平面）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525235242573-229111340.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果用一种特定的方式遍历，BSP树的几何内容可以从任何角度进行前后排序。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//大致的BSP tree节点结构
class BSPTreeNode {
    std::vector&amp;lt;Vector3&amp;gt; vertexs;  //多边形的顶点
    Data data;                     //数据
    BSPTreeNode* front;            //前向的节点
    BSPTreeNode* back;             //后向的节点
    //...
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;要构造一棵较平衡的BSP树，其实原理很简单：尽可能每次划分出一个节点时，让其左子树节点数和右子树节点数相差不多。也就是说，用一个平面形状构造一个BSP树节点时，需满足它前方的多边形数和后方的多边形数之差 小于 一定阈值；若超过阈值则尝试用另一个形状来构造。构造完一个节点则移除对应的一个平面形状。最后所有平面形状都被用于构造节点，组成了一棵BSP树。&lt;/p&gt;
&lt;p&gt;麻烦在于当2个平面形状是相交时，它既可以在前方也可以在后方的情况。这时候就需要一个将该形状切割成两个子形状，从而可以一个添加在前方，一个添加在后方，避免冲突。&lt;/p&gt;
&lt;p&gt;本文就不多描述具体实现了（犯懒），感兴趣可看下面的参考列表。&lt;/p&gt;
&lt;p&gt;结论是：BSP树构造的最坏时间复杂度为O(N²logN),平均时间复杂度为O(N²)。&lt;/p&gt;
&lt;h2 id=&quot;判断点在平面前后算法&quot;&gt;判断点在平面前后算法&lt;/h2&gt;
&lt;p&gt;平面的法向量为&lt;span class=&quot;math inline&quot;&gt;\((A,B,C)\)&lt;/span&gt;，则平面方程为：&lt;br/&gt;&lt;span class=&quot;math inline&quot;&gt;\(Ax+By+Cz+D = 0\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;将点&lt;span class=&quot;math inline&quot;&gt;\((x_0,y_0,z_0)\)&lt;/span&gt;代入方程，得&lt;br/&gt;&lt;span class=&quot;math inline&quot;&gt;\(distance = Ax_0 + By_0 + Cz_0 + D\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;若&lt;span class=&quot;math inline&quot;&gt;\(distance &amp;lt; 0\)&lt;/span&gt;，则在平面背后；&lt;br/&gt;若&lt;span class=&quot;math inline&quot;&gt;\(distance = 0\)&lt;/span&gt;，则在平面中；&lt;br/&gt;若&lt;span class=&quot;math inline&quot;&gt;\(distance &amp;gt; 0\)&lt;/span&gt;，则在平面前方。&lt;/p&gt;
&lt;h2 id=&quot;bsp树的应用&quot;&gt;BSP树的应用&lt;/h2&gt;
&lt;p&gt;由于BSP树构造的平均时间复杂度为O(N²)，因此其往往更适合针对静态物体进行离线构造。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;自动生成室内portal&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;大型室内场景游戏引擎基本离不开portal系统：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;portal系统可在运行时进行额外的视野剔除，过滤掉很多被遮挡的物体渲染，有效地优化室内渲染。&lt;/li&gt;
&lt;li&gt;portal系统还可以离线构造PVS(潜在可见集)，计算出在某个划分区域潜在可以看到哪些其他区域，将这些数据存储成一个潜在可见集；在运行时根据该集合实时加载潜在可看到的区域。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;但是对于关卡编辑师来说，对每个房间/大厅/走廊/门...手动放置每个portal无疑是极大的工作量。于是有一种利用BSP树自动生成portal的做法，大致做法是：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;首先BSP树节点数据应该为需要渲染的墙体/门/柱子等室内较大物体。&lt;/li&gt;
&lt;li&gt;将BSP树节点连着的左节点视为一个儿子，右节点视为一个邻居。&lt;/li&gt;
&lt;li&gt;所有相连的父子节点所代表的平面组成了一个凸多边形房间。&lt;/li&gt;
&lt;li&gt;计算每个相邻的房间之间相衔接的点，称为portal点。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;建议结合看图理解，一个示例：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525210721530-1888153954.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;根据定义，在BSP树找到了3个凸多边形房间。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525211245149-294594571.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在各个相邻房间之间创建好portal点对（2个绿点，绿线表示portal平面）：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525210731663-1331531118.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;基于portal系统运算得到的视野（进行了2次额外的视野剔除）：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525210739270-1682424643.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;portal系统实际上是非常复杂的，但非常有价值（良好优化的室内FPS游戏基本不会缺少它）。由于其适合离线构造的特性，这种系统往往是编辑器程序员所需要使用，这里仅仅只能点下自动生成portal的皮毛，更具体的细节可看本节参考。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;渲染顺序优化&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;首先根据摄像机的位置，遍历BSP树找到并记录其位置相对应的叶节点,称之eyeNode，它将会是顺序遍历渲染的一个重要的中止条件。&lt;br/&gt;由于eyeNode往往是在一些平面的前面，另一些平面的后面，所以为了达到正确的从近到远的顺序，需要两次不同方向的遍历。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190525215924457-1180965746.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对于没有深度缓存的老旧硬件，对BSP树从远到近渲染（从远处往摄像机位置）三角形，避免较远的三角形覆盖到较近的三角形上，从而到达正确的三角形图元渲染顺序，这也就是古老的画家算法。&lt;br/&gt;注：这里的节点数据应该代表为需要渲染的三角形。&lt;br/&gt;其顺序：&lt;br/&gt;第一次遍历，左中右顺序，从根节点开始，直到eyeNode停止；&lt;br/&gt;第二次遍历，右中左顺序，从根节点开始，直到eyeNode停止；&lt;/p&gt;
&lt;p&gt;对于现代渲染硬件来说，对BSP树近到远渲染（从摄像机位置往远处）物体，可以减少一些overdraw（即对像素的重复覆写）开销。&lt;br/&gt;注：这里的节点数据应该代表为需要渲染的固定物体（诸如块岩石/柱子/固定的桌子椅子，这些物体往往可以用一些粗略平面代表之）。&lt;br/&gt;其顺序：&lt;br/&gt;第一次遍历，左中右遍历，从eyeNode开始，直到递归全部结束；&lt;br/&gt;第二次遍历，右中左遍历，从eyeNode开始，直到递归全部结束；&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;p&gt;k-dimensional tree是一棵二叉树，其每个节点都代表一个k维坐标点;&lt;br/&gt;树的每层都是对应一个划分维度（取决于你定义第i层是哪个维度）;&lt;br/&gt;树的每个节点代表一个超平面，该超平面垂直于当前划分维度的坐标轴，并在该维度上将空间划分为两部分，一部分在其左子树，另一部分在其右子树;&lt;/p&gt;
&lt;p&gt;即若当前节点的划分维度为i，其左子树上所有点在i维的值均小于当前值，右子树上所有点在i维的值均大于等于当前值，本定义对其任意子节点均成立。&lt;/p&gt;
&lt;p&gt;实际上k-d树就是一种特殊形式的BSP树（轴对齐的BSP树）。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//一种实现方式示例：二维k-d树节点
class KdTreeNode{
  Vector2 position;         //位置
  Data data;                //点数据
  int dimension;            //当前所属层的维度
  KdTreeNode* children[2];  //两个子树
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;举例，一棵k-d树（k=2）的结构如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524233211006-2118364092.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;根据第一层划分维度为X，第二层为Y，第三层为X，&lt;br/&gt;所以该k-d树（k=2）对应代表划分的空间，看起来应该是这样的：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524233218385-964117969.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;k-d树的构建&quot;&gt;k-d树的构建&lt;/h2&gt;
&lt;p&gt;基本定义有了，接下来问题就是如何构建k-d树。&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;此外一提，一棵平衡的k-d tree对最近邻搜索、空间搜索等应用场景并非是最优的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常规的k-d tree的构建过程为：&lt;br/&gt;一、循环依序取数据点的各维度来作为划分维度。&lt;br/&gt;二、取数据点在该维度的中值作为切分超平面，将中值左侧的数据点挂在其左子树，将中值右侧的数据点挂在其右子树。&lt;br/&gt;三、递归处理其子树，直至所有数据点挂载完毕。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//一种构建方法示例,此处伪代码省略了Data部分
KdTreeNode* createKdTree(int dimension, std::vector&amp;lt;Vector2&amp;gt;&amp;amp; points, int beginIndex, int endIndex) {
    if(beginIndex &amp;gt;= endIndex) return nullptr;
  
    //先根据当前划分维度来排序[beginIndex,endIndex)区域的点
    if (dimension == 0) {
      std::sort(points.begin() + beginIndex, points.begin() + endIndex, 
      [](Vector2 &amp;amp; a, Vector2 &amp;amp; b) {return a.x &amp;lt; b.x; });
    }
    else if (dimension == 1) {
      std::sort(points.begin() + beginIndex, points.begin() + endIndex,
      [](Vector2 &amp;amp; a, Vector2 &amp;amp; b) {return a.y &amp;lt; b.y; });
    }
    //中值选择
    int midValueIndex = points.size() / 2;
    //以该中值创建一个划分节点
    KdTreeNode* node = new KdTreeNode(points[midValueIndex]);

    //递归构建子树
    //左子树为较小值，区间应该为[beginIndex,midValueIndex)
    node-&amp;gt;children[0] = createKdTree(!dimension, points, beginIndex, midValueIndex);
    //左子树为较大值，区间应该为[midValueIndex+1,endIndex)
    node-&amp;gt;children[1] = createKdTree(!dimension, points, midValueIndex + 1, endIndex);

    return node;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;构建k-d树的两种优化角度:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;切分维度选择优化&lt;br/&gt;构建开始前，对比数据点在各维度的分布情况，数据点在某一维度坐标值的方差越大分布越分散，方差越小分布越集中。从方差大的维度开始切分可以取得很好的切分效果及平衡性。&lt;/li&gt;
&lt;li&gt;中值选择优化&lt;br/&gt;第一种，算法开始前，对原始数据点在所有维度进行一次排序，存储下来，然后在后续的中值选择中，无须每次都对其子集进行排序，提升了性能。&lt;br/&gt;第二种，从原始数据点中随机选择固定数目的点，然后对其进行排序，每次从这些样本点中取中值，来作为分割超平面。该方式在实践中被证明可以取得很好性能及很好的平衡性。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;k-d树的应用&quot;&gt;k-d树的应用&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;最近邻静态目标查找&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在编写游戏AI时，一个智能体查找一个最近静态目标（例如最近的房子/固定NPC/固定资源）是容易的，对所有单位一个个遍历检测最短平方距离即可（时间复杂度O(N)）。当数百个单位（集群AI）都需要寻找最近的静态目标时，这时候可能比较适合使用基于k-d树的最近邻查找算法：&lt;/p&gt;
&lt;p&gt;一、首先记录一个输入点与节点的最短距离平方minDisSq，初始值为无穷大。&lt;/p&gt;
&lt;p&gt;二、利用k-d树，对其进行深度优先遍历，每次遍历节点的步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;先计算输入点在第i维度值与当前节点的第i维度值之差的平方值sq1，并与minDisSq比较大小。&lt;/li&gt;
&lt;li&gt;如果&lt;span class=&quot;math inline&quot;&gt;\((sq1 ≥ minDisSq)\)&lt;/span&gt;，则证明当前节点划分的另一边区域（其中一个子树）不可能有更近的点，所以可剪枝该区域，即只遍历当前节点划分的同区域（遍历另一个子树）。&lt;/li&gt;
&lt;li&gt;如果&lt;span class=&quot;math inline&quot;&gt;\((sq1 &amp;lt; minDisSq)\)&lt;/span&gt;，则证明当前节点划分的两个区域（两个子树）都可能有更近的点。此外还要计算输入点和当前节点的距离平方值sq2，再与minDisSq比较，若更短则更新minDisSq。然后遍历当前节点划分的两个区域（遍历两个子树，先后顺序应该是先遍历同区域，再遍历另一边区域）。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;三、最后得到一个minDisSq对应的节点。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//一个最近邻目标查找代码示例

//此处为了方便代码编写，使用2个全局变量记录
float minDisSq = FLT_MAX;
KdTreeNode* gResult = nullptr;

//递归函数，调用该函数后，更新后的gResult即是结果。
void findNearest(Vector2 point, KdTreeNode* node) {
    float sq1;
    //计算输入点在第i维度值与当前节点的第i维度值之差的平方值sq1
    if (node-&amp;gt;dimension == 0) {
      sq1 = (point.x - node-&amp;gt;position.x)*(point.x - node-&amp;gt;position.x);
    }
    else if (node-&amp;gt;dimension == 1) {
      sq1 = (point.y - node-&amp;gt;position.y)*(point.y - node-&amp;gt;position.y);
    }
    
    //大于等于minDisSq，证明当前节点划分的另一边区域（其中一个子树）不可能有更近的点
    if (sq1 &amp;gt;= minDisSq) {
        //遍历1个子树（同区域的）。
        findNearest(point,node-&amp;gt;getSameDivideArea(point));
    }
    //小于minDisSq，证明当前节点划分的两个区域（两个子树）都可能有更近的点
    else {
        //计算输入点和当前节点的距离平方值sq2
        float sq2  = (point.x - node-&amp;gt;position.x)*(point.x - node-&amp;gt;position.x)
                    +(point.y - node-&amp;gt;position.y)*(point.y - node-&amp;gt;position.y);
        //再与minDisSq比较，若更短则更新minDisSq,并记录该点
        if (sq2 &amp;lt; minDisSq) {
            minDisSq = sq2;
            gResult = node;     
        }
    
        //遍历2个子树，先遍历同区域，后遍历另一区域
        findNearest(point, node-&amp;gt;getSameDivideArea(point));
        findNearest(point, node-&amp;gt;getDifferntDivideArea(point));
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如下图例子，我们想找到与点(3,5)最近的目标:&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524233423869-1206987774.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过算法，我们从绿色箭头顺序遍历，&lt;br/&gt;并剪枝了一些不可能的子树，灰色部分即是剪枝部分:&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524233434744-1987348291.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;k-d树剪枝了大量在较远区域的目标，效率提升地很好，其平均时间复杂度可以达到O(logN)。&lt;/p&gt;
&lt;p&gt;至于为什么目标最好是静态的，因为kd树的构建往往非常耗时，如果动态则需要时时重新构建，所以更适合预先构建静态目标的kd树。&lt;/p&gt;
&lt;p&gt;注：还有一种称之为主席树的动态更新方法，具体效率如何博主则没过多深入研究。&lt;/p&gt;
&lt;h2 id=&quot;参考-1&quot;&gt;参考&lt;/h2&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;p&gt;层次包围盒树，是一棵二叉树，用来存储包围盒形状。&lt;br/&gt;它的根节点代表一个最大的包围盒，往下2个子节点则代表2个子包围盒。&lt;/p&gt;
&lt;p&gt;此外为了统一化层次包围盒树的形状，它只能存储同一种包围盒形状。&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;计算机常用的包围盒形状有球/AABB/OBB/k-DOP，若不清楚这些概念可以自行搜索了解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下图为层次AABB包围盒树。把不同形状粗略用AABB形状围起来看作一个AABB形状（为了统一化形状），然后才建立层次AABB包围盒树。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190521171047443-574345396.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;常见的层次包围盒树有层次AABB包围盒树，层次球包围盒树。&lt;/p&gt;
&lt;p&gt;在物理引擎里，由于物理模拟，大部分形状都是会动态更新的，例如位移/旋转/伸缩都会改变形状。于是就又有一种支持动态更新的层次包围盒树，称之为动态层次包围盒树。它的算法核心大概：形状的位移/旋转/伸缩更新对应的叶节点，然后一级一级更新上面的节点，使它们的包围体包住子节点。&lt;/p&gt;
&lt;p&gt;一般来说这个结构常用于物理引擎，应用面较窄，本文就不多做讲解。&lt;/p&gt;
&lt;h2 id=&quot;层次包围盒树的应用&quot;&gt;层次包围盒树的应用&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;碰撞检测&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在Bullet、Havok等物理引擎的碰撞粗测阶段，往往使用一种叫做 &lt;strong&gt;动态层次AABB包围盒树(Dynamic Bounding Volume Hierarchy Based On AABB Tree)&lt;/strong&gt; 的结构来存储动态的AABB形状。&lt;br/&gt;然后通过该包围盒树的性质（不同父包围盒必定不会碰撞），快速过滤大量不可能发生碰撞的形状对。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;射线检测&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;射线检测从层次包围盒树自顶向下检测是否射线通过包围盒，若不通过则无需检测其子包围盒。&lt;br/&gt;这种剪裁可让每次射线检测平均只需检测O(logN)数量的形状。&lt;/p&gt;
&lt;h2 id=&quot;参考-2&quot;&gt;参考&lt;/h2&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;p&gt;一个自定义区域一般是一个凸多边形，然后可通过一些编辑器手动设置好其各顶点位置，最终手工划分出一块凸多边形区域。3D凸多面体一般很少用，即使在要求划分区域属于同一XOZ面不同高度的3D世界里，考虑到性能，可能更适合用凸多边形+高度来划分区域。&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;相信我，能不用凹多边形就不用，因为许多程序算法都可以应用在凸多边形上，而相对应用于凹多边形上可能行不通或者得用更低效的算法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了达到自定义区域之间的无缝衔接，游戏程序还往往采用图（或者树）结构来存储这些自定义区域，表示它们之间的联系。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;//区域
class Chunk{
  Data data;                      //区域数据
  std::vector&amp;lt;Vector2&amp;gt; vertexs;   //区域凸多边形顶点
  std::vector&amp;lt;Chunk*&amp;gt; neighbors;  //邻近区域
};&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;判断点是否在凸多边形区域算法&quot;&gt;判断点是否在凸多边形区域算法&lt;/h2&gt;
&lt;p&gt;既然用到了凸多边形区域，那就顺便提一提如何判断点是否在凸多边形区域，而且也不是很难：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524003521846-2066004305.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点对凸多边形每个顶点之间建立一个线段2D向量，该向量与其对应的顶点的边进行叉乘，得到一个叉积值。&lt;br/&gt;若每个叉积值的符号都一样（都是正数/都是负数），则证明点在凸多边形内。&lt;br/&gt;否则，则证明点不再凸多边形内。&lt;/p&gt;
&lt;p&gt;再举个例子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524003514574-1666139354.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如图，可以看到&lt;br/&gt;&lt;span class=&quot;math inline&quot;&gt;\(sign((v4-p)×(v5-v4)) ≠ sign((v2-p)×(v3-v2))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;因此可知点不在凸多边形内。&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;
&lt;code&gt;bool Chunk::inChunk(Vector2 p){
  int size = vertexs.size();
  for(int i = 0; i&amp;lt; size; ++i){
    Vector2 edge = vertex[(i+1)%size]-vertex[i];
    Vector2 vec = vertex[i] - p;
    //边都是逆时针方向，线段向量方向为指向凸多边形的顶点。
    //若点在凸多边形内，得到的叉积值应都为正数
    int result = cross(edge,vec);
    
    if(sign(result) == 0)return false;
  }
  return true;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;显而易见的，该算法时间复杂度为O(|V|)；V为凸多边形顶点数。&lt;/p&gt;
&lt;p&gt;若让该算法进一步提升效率，可让算法达到O(log|V|)的效率，大概思想是用叉积判断点在边的左右加二分查找。&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;不过考虑到凸多边形顶点数量一般不会很多（除非开发者丧心病狂的使用几十边形乃至上百千，这已经是基本不可能的事了），就提一提吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;自定义区域划分的应用&quot;&gt;自定义区域划分的应用&lt;/h2&gt;
&lt;p&gt;自定义区域是非常灵活的，往往可以应用于任何游戏，特别适合非规则世界的游戏。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;更灵活的渲染分区块渲染&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;典型需要灵活划分不规则区块的游戏莫过于赛车游戏，其赛道往往崎岖蜿蜒，所以其实潜在大量区域不必渲染。但因为赛道布局的不规则，所以这些路段区域往往需要手工设置划分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190524112435631-1118685917.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当汽车在相应的红线区域时，不必渲染其他红线区域（或使用低耗渲染），因为往往汽车的视野基本都是往前看，狭隘的视野可观察到的地方实际上很有限。&lt;/p&gt;
&lt;p&gt;当然除了赛车游戏，还有许多其他游戏都需要用到这种划分，减少不必要的渲染。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;地图载入&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如图，先将关卡地图划分成①②③④地图块。&lt;br/&gt;然后再自定义划分好Chunk A/B/C/D，并且设置好相应规则用于加载地图块：当玩家在Chunk A时，加载①；在Chunk B时加载①②；在Chunk C时加载②③；在Chunk D时加载③④。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1409576/201905/1409576-20190523141118287-855153649.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样可以实现一些基本的地图载入衔接，在相应的Chunk能渲染远处本该看到的地图块。&lt;/p&gt;
</description>
<pubDate>Sat, 25 May 2019 16:07:00 +0000</pubDate>
<dc:creator>KillerAery</dc:creator>
<og:description>[Toc] 前言： 在游戏程序中，空间划分往往是非常重要的优化思想。 于是博主花了一些时间去整理了游戏程序中常用的几个空间划分数据结构，并将它们大概列举出来以供笔记。 网格 这个很容易理解，即一个多维</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/KillerAery/p/10878367.html</dc:identifier>
</item>
<item>
<title>PJzhang:centos7上LNMP方式安装dvwa漏洞测试环境 - PJzhang白话安全</title>
<link>http://www.cnblogs.com/landesk/p/10923573.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/landesk/p/10923573.html</guid>
<description>&lt;p&gt;猫宁！！！&lt;/p&gt;
&lt;p&gt;参考链接：https://www.jianshu.com/p/5491ce5bfbac&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/wujuntian/p/8183952.html&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/lonnie/p/9027566.html&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/34274492/dvwa-setup-php-function-allow-url-include-disabled/34540293&lt;/p&gt;
&lt;p&gt;https://blog.csdn.net/reblue520/article/details/52464099&lt;/p&gt;


&lt;p&gt;搭建dvwa的环境就相当于是搭建一个站点，这里采用LNMP的方式，即linux，nginx，mariadb，php的方式，全部在一台centos7上搭好。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;linux环境配置，ip：192.168.0.100&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;centos7已经关闭了防火墙，selinux，否则会严重影响安装进程。&lt;/p&gt;
&lt;p&gt;更新一下centos7&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;yum -y update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装软件源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;yum -y install epel-release&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;缓存软件包信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;yum makecache&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nginx服务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;yum -y install nginx&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开启&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;systemctl start nginx&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本地浏览器输入192.168.0.100，显示nginx页面，说明安装成功，页面路径/usr/share/nginx/html&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525154208228-1930293890.png&quot; alt=&quot;&quot; width=&quot;801&quot; height=&quot;262&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改nginx主配置文件vi /etc/nginx/nginx.conf&lt;/p&gt;
&lt;p&gt;server_name填写为192.168.0.100，这是服务器ip&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525164205025-76278461.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在location中添加&lt;/p&gt;
&lt;p&gt;root html;&lt;/p&gt;
&lt;p&gt;index index.php;两行&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525162518439-1771520022.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 在内容 root          下面添加如下内容，实现nginx服务器和php的关联,保存并退出.&lt;/p&gt;

&lt;p&gt;　　location ~ \.php$ {&lt;br/&gt;       root /usr/share/nginx/html; #指定 php 的根目录&lt;br/&gt;       fastcgi_pass 127.0.0.1:9000;#php-fpm 的默认端口是 9000&lt;br/&gt;       fastcgi_index index.php;&lt;br/&gt;       fastcgi_param SCRIPT_FILENAME&lt;/p&gt;
&lt;p&gt;　　$document_root$fastcgi_script_name;&lt;br/&gt;       include fastcgi_params;&lt;br/&gt;       }&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525162922498-586678876.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;nginx -t检测是否出现配置错误，显示成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525163226614-1927779155.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;由于进行了配置，所以不得不重启nginx服务&lt;/p&gt;
&lt;p&gt;systemctl restart nginx&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安装php相关服务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装，全部都安装好&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;yum -y install php-fpm php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-bcmath php-mhash&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;启动php-fpm服务&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;systemctl start php-fpm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改php-fpm配置文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vi /etc/php-fpm.d/www.conf，将其中的apache修改为nginx即可，保存退出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525155511531-1728862616.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;由于修改文件配置，需要重启php-fpm服务&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;systemctl restart php-fpm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入/usr/share/nginx/html，创建info.php的文件，vi info.php，内容如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;?php&lt;br/&gt;phpinfo();&lt;br/&gt;?&amp;gt;&lt;br/&gt;&lt;/strong&gt;访问192.168.0.100/info.php，显示php环境已经好了。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525164444331-1010866496.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;mariadb数据库环境&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;p&gt;yum -y install mariadb mariadb-server&lt;/p&gt;
&lt;p&gt;启动&lt;/p&gt;
&lt;p&gt;systemctl start mariadb&lt;/p&gt;
&lt;p&gt;设置数据库密码，root是账户,jiayou是密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mysqladmin -u root password jiayou&lt;/strong&gt;&lt;br/&gt;进入数据库&lt;/p&gt;
&lt;p&gt;mysql -u root -p&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525165239469-200381033.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;创建并使用名为dvwa的数据库&lt;/p&gt;
&lt;p&gt;create database dvwa;&lt;br/&gt;use dvwa;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525165804482-1037553574.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;exit退出数据库&lt;/p&gt;

&lt;p&gt;下载dvwa的源代码&lt;/p&gt;
&lt;p&gt;www.dvwa.co.uk&lt;/p&gt;
&lt;p&gt;https://github.com/ethicalhack3r/DVWA&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;将kali linux本地代码全部上传到服务器nginx的/usr/share/nginx/html目录之下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;scp -r * root@192.168.0.100:/usr/share/nginx/html&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525170227569-1412530384.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;访问http://192.168.0.100/setup.php，会有一段文字提示：&lt;/p&gt;
&lt;p&gt;DVWA System error - config file not found. Copy config/config.inc.php.dist to config/config.inc.php and configure to your environment.&lt;/p&gt;
&lt;p&gt;cd /usr/share/nginx/html/config&lt;/p&gt;
&lt;p&gt;生成一份新的配置文件&lt;/p&gt;
&lt;p&gt;cp config.inc.php.dist  config.inc.php&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525171059531-1278966318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; vi config.inc.php，将数据库密码修改为jiayou，就是之前自定义的密码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525183340024-406000951.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;再次访问192.168.0.100/setup.php，显示如下，有报错， function allow_url_include: &lt;span class=&quot;failure&quot;&gt;Disabled提示开启PHP的allow_url_include&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525171620712-691567829.png&quot; alt=&quot;&quot; width=&quot;723&quot; height=&quot;204&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525171718472-2023281666.png&quot; alt=&quot;&quot; width=&quot;605&quot; height=&quot;471&quot;/&gt;&lt;/p&gt;
&lt;p&gt;php的配置文件存于/etc/php.ini中，vi /etc/php.ini，查询关键词allow_url，找到allow_url_include = Off，将Off改为On就好了，然后systemctl restart php-fpm。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525174158996-1560207297.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同时进入cd /usr/share/nginx/html/config，vi config.inc.php，添加公钥还有私钥。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$_DVWA[ 'recaptcha_public_key' ] = '6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$_DVWA[ 'recaptcha_private_key' ] = '6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525174805986-65642022.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;目前最后一个点：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525180452784-312735339.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;chmod 666 /usr/share/nginx/html/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt，给予所有用户对这个日志文件的读写权限&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;条件全部满足，这个时候点击安装按钮依然没有反应，查看nginx报错日志，tail -f /var/log/nginx/error.log&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525233017589-1383966479.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190525233952630-677931654.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;[error] 9112#0: *180 FastCGI sent in stderr: &quot;PHP message: PHP Warning:  session_start(): open(/var/lib/php/session/sess_5930ao4030vq7tble1pm2see32, O_RDWR)，这个值得关注。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方案是如下，给予这个文件777权限，这个文件是很重要的，与用户的会话身份相关。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;chmod 777  /var/lib/php/session&lt;/p&gt;
&lt;p&gt;systemctl restart php-fpm，再重启一下。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;之后成功安装，对于此类报错，不是每个人都会遇到，和每个人当时的安装环境以及采用的安装方法关系较大，因为即使是LNMP安装dvwa的过程，互联网上也方法多种多样。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190526001921783-1612848192.png&quot; alt=&quot;&quot; width=&quot;558&quot; height=&quot;311&quot;/&gt;&lt;/p&gt;
&lt;p&gt;http://192.168.0.100/index.php&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1687889/201905/1687889-20190526002110497-1038629957.png&quot; alt=&quot;&quot; width=&quot;612&quot; height=&quot;391&quot;/&gt;&lt;/p&gt;

&lt;p&gt;感谢aaron提供的关键技术支持！！！&lt;/p&gt;

</description>
<pubDate>Sat, 25 May 2019 15:53:00 +0000</pubDate>
<dc:creator>PJzhang白话安全</dc:creator>
<og:description>猫宁！！！ 参考链接：https://www.jianshu.com/p/5491ce5bfbac https://www.cnblogs.com/wujuntian/p/8183952.html h</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/landesk/p/10923573.html</dc:identifier>
</item>
<item>
<title>paper: The years of pedestrain Detection,what have we learned? - 降腰</title>
<link>http://www.cnblogs.com/zwpan/p/10924641.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zwpan/p/10924641.html</guid>
<description>&lt;h2&gt;&lt;strong&gt;1：Introduction&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;主要的行人检测方法：“Viola&amp;amp;Jones variants”，HOG+SVM，DPM，ConvNet     &lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;2：Dateset&lt;/strong&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;　　　　1：不同的数据集&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;INRIA：最古老的也是有相对较少的图片；有高质量的行人注解在多种不同的环境（城市，沙滩等）。&lt;/li&gt;
&lt;li&gt;ETH和TUD-Brussels：中等大小的录像数据集。&lt;/li&gt;
&lt;li&gt;Daimler：几乎不考虑，因为缺少有颜色的渠道。（Daimler stereo，ETH，KITTI 提供立体的图像信息）&lt;/li&gt;
&lt;li&gt;Caltech-USA和KITTI：是行人检测的主要基准，都是非常大且具有挑战性的。Caltech-USA突出因为有大量已经被逐个评估的方法；而KITTI由于更多元化而突出，但是还没有被广泛使用。（除了KITTI都使用统一的评估工具。除了INRIA均包含视频内容。）&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;　　　　2：本文使用内容&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;使用了Caltech-USA作为第一对比数据集；INRIA和KITTI作为第二占比。&lt;/li&gt;
&lt;li&gt;Caltech-USA和INRIA使用了log-average miss-rate（越小越好）（Miss Rate:丢失率=测试集正例判别为负例的数目/测试集检索到想要的正例数加上未检测到不想要的 即是 全部groud truth的数量）&lt;/li&gt;
&lt;li&gt;KITTI使用了AUC（越高越好）（AUC:一个正例，一个负例，预测为正的概率值比预测为负的概率值还要大的可能性。）&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;3：主要提升行人检测的方法&lt;/h2&gt;
&lt;h3&gt;3.1：训练数据&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;在Galtech-USA上训练的方法表现比INRIA上好。　　　　　　　　　&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.2：方法的家族&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;40余个方法可以被大体分为三个家族：DPM,DF,DN。&lt;/li&gt;
&lt;li&gt;我们能通过表格发现似乎（被促进的）DF很适合行人检测，在多个数据集上均能获得最低的MR，但不清楚原因。DN也展示出了较好的性能&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.3：更好的分类器&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;没有明显的证据证明非线性核会比线性核性能好；类似的，也无法说明不同的分类器（比如SVM和DF）哪个更好。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.4：更多的数据&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;很多的解决方法还使用了更多的数据，比如：立体图像，光流（如用前面的帧），追踪或者是从其他传感器获取的数据（如雷达）。&lt;/li&gt;
&lt;li&gt;单眼法（monocular methods？）依然不清楚追踪能有提升多少前一帧的检测。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.5：利用上下文&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;利用上下文的策略包括ground plane constraints(MultiResC&amp;amp;RandForest),variants of auto-context(MOCO),other category detector(MT-DPM+Context),and person-to-person patterns(DBN-Mut&amp;amp;+2Ped&amp;amp;JointDeep)&lt;/li&gt;
&lt;li&gt;上下文可以提升行人检测的表现，即使没有3.4和3.8用到的方法多。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.6：可变形的部分&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;DPM目前已经有数十种变种&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.7：多尺寸模型&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;一般对于检测，在提取特征之前高分辨率和低分辨率候选窗口都被重新采样到相同尺寸。目前已经发现虽不同的分辨率图片用不同的模型可以提高1-2%的MR表现；而且也不会影响计算时间，即使训练时间增加。&lt;/li&gt;
&lt;li&gt;总结：多尺寸模型可以带来提升，但是提升聊胜于无。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.8：深层架构&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;大量的训练数据和日益增加的计算机性能使得深层架构在各种计算机视觉任务（大规模的分类和检测以及语义标记）上获得成功（通常是卷积神经网络）。&lt;/li&gt;
&lt;li&gt;ConvNet在INRIA上使用混合监督和无监督学习建立卷积神经网络；这一方法在ETH和TUD-Brussels获得同样的结果，但是无法概括Caltech体系。这一方法从原始像素值学习已有的特征。&lt;/li&gt;
&lt;li&gt;其他工作聚焦于用深层结构共同模拟零件和遮挡（jointly model parts and occlusions？）（例：DBN-Isol&amp;amp;DBN-Mut&amp;amp;JointDeep&amp;amp;SDN）提升大约在1.5-14%。注意这些工作用边缘和颜色特征，或者初始化边缘滤波器的网络权重而不是像深层架构一样从原始像素值中进行学习。目前还没有在ImageNet上的特征预训练的报告。&lt;/li&gt;
&lt;li&gt;总结：尽管目前依旧没有证据能证明深层网络擅长学习特征。大部分使用深层网络的成功方法用parts，occlusions，context方面来造高层网络。这个结果不和DPM以及DF相提并论，导致使用这个架构的好处还不清楚。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;3.9：更好的特征&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;最流行的提升检测质量的方法是增加或多样化输入图像的特征。大量的特征类型已经被发掘：边缘信息，颜色信息，纹理信息，局部形状信息，协方差信息及其他的。&lt;/li&gt;
&lt;li&gt;当大量的DF方法使用10特征管道，一些论文想到增加更多信道的方法。尽管增加信道有提升，但是最优选择依旧是10个（6个渐变方向，1个梯度大小，3个颜色信道，我们称之为HOG+LUV）。&lt;/li&gt;
&lt;li&gt;应该注意到深度学习并不能获得行人检测的更好特征。&lt;/li&gt;
&lt;li&gt;总结：近十年的行人检测发展都能归功于特征的增多，而且这一趋势还会继续。下一步应该是建立一个更深刻的理解什么使得好的特征好而且知道怎么设计一个更好的。&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;4：实验&lt;/h2&gt;
&lt;p&gt;选择了Integral Channels Features framewirks（一个DF）进行实验。&lt;/p&gt;
&lt;h3&gt;4.1：复习特征的作用&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;在这一部分我们将评估增加特征复杂性的影响，在INRIA数据集上调用所有方法，并在Caltech-USA上进行演示；在INRIA上的结果可以在补充材料上看到细节。&lt;/li&gt;
&lt;li&gt;总结：从VJ以来的进展大多可以归功于更好的特征，基于梯度或者颜色信息。一些基于特征的简单调整也能有一些小提升（例如：把10个HOG+LUV信道用卷积每个信道和三个DCT函数，将信道增加到40个）&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;4.2：互补的方法&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;考虑互补的框架特征：更好的特征（HOG,LUV,DCT），更多的数据（光流），上下文（人与人互动？）&lt;/li&gt;
&lt;li&gt;我们的实验显示加入更多特征，流，上下文信息是有很强的互补性的，即使是从一个强的检测器开始。&lt;/li&gt;
&lt;li&gt;我们仍能发现进一步了解核心算法能帮助我们获得更好的检测质量（因此进一步减少附加项的相对改善），或者是拓展系统内部使用技术的多样性。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;4.3：模型的容量多少合适？&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;我们的主要任务是使训练集能概括测试集，所以我们先考虑：学习的模型能在训练集上表现好吗？&lt;/li&gt;
&lt;li&gt;我们在图六发现在4.1中考虑的模型在测试机中表现不好，从图5也能看到在测试集上的趋势相同，我们没有看到过拟合的趋势&lt;/li&gt;
&lt;li&gt;总结：我们的结果表明，越好的辨别能力带来更好的检测质量，而鉴别能力能从更多更好的特征或者更复杂的分类器得到。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;4.4：跨数据集的泛化&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;因为真实应用都基于一个特别的基准，所以模型的泛化能力使关键（泛化能力：通俗来讲就是指学习到的模型对未知数据的预测能力），因此训练集和测试集不同是更有意义的。&lt;/li&gt;
&lt;li&gt;仅仅几样不同的行人数据集表现就比很多相似的数据集好。&lt;/li&gt;
&lt;li&gt;总结：虽然在一个数据集上学到的探测器也许不会在另一个上表现的好，但是它们的排名却跨数据集稳定；无论基准如何都能都能从好的方法中学习。&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;5：总结&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;我们的实验发现近十年的行人检测发展都能归功于特征的增多，而且这一趋势还会继续，虽然一些特征能通过学习得到，但是大部分还是需要反复的用手进行实验。&lt;/li&gt;
&lt;li&gt;我们的实验发现更好的特征，光流和上下文的结合是最互补的，而且在Caltech-USA上有最好的表现。&lt;/li&gt;
&lt;li&gt;虽然三大行人检测的家庭（deformable part models,decision forests,deep networks）基于不同的技术，但是他们的结果却十分相近。&lt;/li&gt;
&lt;li&gt;目前最主要的挑战是什么使得一个好的特征是好的，以设计一个更好的。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;由于自身能力和时间仓促的原因，该报告的内容肯定有不少错误之处，欢迎大家指出，我会及时修改；论文的pdf版本我也会在5.28日与该论文的补充材料报告一同上传。&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 25 May 2019 15:52:00 +0000</pubDate>
<dc:creator>降腰</dc:creator>
<og:description>Report of The Paper:&quot;The Years of Pedestrain Detection, What Have We Learned?&quot; 1：Introduct</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zwpan/p/10924641.html</dc:identifier>
</item>
<item>
<title>管理是什么?——读《管理的实践》有感 - zer0black</title>
<link>http://www.cnblogs.com/zer0Black/p/10924497.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zer0Black/p/10924497.html</guid>
<description>&lt;p&gt;花了4个月的时间，总算完完整整的读完了《管理的实践》一书。书中诸多观点在现在看来，依旧很新颖，不亏是管理类书籍的开山之作。&lt;/p&gt;
&lt;p&gt;这本书二战刚结束就开始创作，而今很多企业都做不到。与其说是实践，倒不如说是管理的思想。这本书传道受业解惑，但又不可避免的造成“知易行难”的困境。&lt;/p&gt;
&lt;p&gt;书中阐明了企业是什么、企业目标是什么、管理 的本质是什么、企业需要哪一种管理的结构、如何做决策等几个看似简单又难以回答的问题。&lt;/p&gt;
&lt;p&gt;本书以管理企业、管理管理者、管理员工和工作的顺序开展，完整的阐述了作者对管理的思考和定义。&lt;/p&gt;
&lt;p&gt;书中给出了两个我难以忘记的观点：（1）管理者的首要职能是创造企业绩效（2）企业只有一个正确而有效的定义：创造顾客。&lt;/p&gt;
&lt;p&gt;两个观点都和4Y中提到的客户价值藕断丝连。没有客户，企业就没有存在的必要。我们所做的一切，都是为了更好的服务客户。&lt;/p&gt;
&lt;p&gt;如下，给出我对本书的观点提炼，仅供参考&lt;/p&gt;
&lt;p&gt;管理层的职责：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;首要职能：经济绩效&lt;/li&gt;
&lt;li&gt;检验管理的是企业的绩效&lt;/li&gt;
&lt;li&gt;企业管理也就是目标管理&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;企业是什么：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;企业是由人创造和管理的&lt;/li&gt;
&lt;li&gt;我们不能单单从利润的角度来定义或解释企业&lt;/li&gt;
&lt;li&gt;企业的目的：&lt;br/&gt;a. 创造顾客&lt;br/&gt;b. 创造需求&lt;/li&gt;
&lt;li&gt;企业的主要功能：&lt;br/&gt;a. 营销&lt;br/&gt;b. 创新&lt;/li&gt;
&lt;li&gt;生产力:&lt;br/&gt;a. 生产力意味着所有生产要素之间的平衡&lt;br/&gt;b. 能力最少的努力，获得最大的产出&lt;br/&gt;c. 体察管理者的局限何在，也是重要的生产力要素&lt;br/&gt;d. 生产力深受组织结构的影响&lt;/li&gt;
&lt;li&gt;利润:&lt;br/&gt;a. 利润是结果&lt;br/&gt;b. 企业经济学的指导原则不是追求最大利润，而是避免亏损&lt;br/&gt;c. 设定目标时必须把目光紧盯预期达到的成就&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;我们的事业是什么？&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;我们的事业是什么由消费者决定&lt;/li&gt;
&lt;li&gt;要决定在企业在顾客已表示满意的需求中哪些需求最为重要，最有发展前途&lt;/li&gt;
&lt;li&gt;决定谁是顾客&lt;/li&gt;
&lt;li&gt;顾客购买的是什么？&lt;/li&gt;
&lt;li&gt;在顾客心中，价值是什么？应该直接询问客户&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;我们的事业将是什么？&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;市场潜力和趋势。问自己，5到10年后。我们预期市场会变得多大？哪些因素会影响市场的发展&lt;/li&gt;
&lt;li&gt;经济发展，流行趋势和品味的变化，会导致市场结构发生什么样的改变？&lt;/li&gt;
&lt;li&gt;哪些创新将改变客户需求，创造新需求？&lt;/li&gt;
&lt;li&gt;今天还有哪些顾客需求无法从现有产品和服务中获得充分满足？&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;企业的目标&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;任何一个其绩效和结果对企业的生存和兴旺有着直接和举足轻重影响的领域，都需要有目标&lt;/li&gt;
&lt;li&gt;企业应设定绩效和成果目标的领悟共8个：市场地位、创新、生产力、实物和财力资源、获利能力、管理者绩效和培养管理者、员工绩效和工作态度、社会责任&lt;/li&gt;
&lt;li&gt;设定目标：先确定每个领域中要衡量的是什么，衡量标准是什么&lt;/li&gt;
&lt;li&gt;市场地位&lt;br/&gt;a. 衡量市场地位时，必须同时对照市场潜力及竞争对手的表现&lt;br/&gt;b. 无论如何，变成被边缘化的小供应商都是很危险的，应设法维持最低限度的市场地位&lt;br/&gt;c. 要设定市场地位的目标，企业必须确定它的市场是什么&lt;/li&gt;
&lt;li&gt;创新&lt;br/&gt;a. 产品与服务的创新&lt;br/&gt;b. 提供产品与服务所需的各种技能和活动的创新&lt;br/&gt;c. 企业必须先根据产品线、既有市场、新市场，通常也根据服务上的要求，预测达到营销目标需要的创新&lt;/li&gt;
&lt;li&gt;生产力&lt;br/&gt;a. 管理者最重要的工作就是不断的改善生产力&lt;br/&gt;b. 生产力衡量标准：&quot;贡献值&quot;&lt;br/&gt;c. 贡献值是指营业毛收入和支出之间的差距&lt;br/&gt;d. 企业的首要任务必须是让采购的原料或服务，发挥最大的效用&lt;br/&gt;e. 企业必须提高自有资源的生产力&lt;/li&gt;
&lt;li&gt;实物与财力资源&lt;br/&gt;a. 设法供应企业所需物料，以达到预定的市场地位和创新目标&lt;br/&gt;b. 物料、财力都需要提前规划&lt;/li&gt;
&lt;li&gt;利润率&lt;br/&gt;a. 利润衡量企业付出的努力有多少净效益以及是否健全&lt;br/&gt;b. 利润是弥补继续维持事业的成本的风险溢价&lt;br/&gt;c. 利润或者直接地以自我集资的手段，从留存的积累中提取资金，或者间接的通过提供诱因，以最适合公司目标的形式吸引新的外部资金，保障未来用于创新和发展的资金的供应&lt;br/&gt;d. 获利能力必须将时间因素考虑在内&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;生产的原则&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;生产并非是把工具应用在材料上，而是将逻辑应用在工作上&lt;/li&gt;
&lt;li&gt;三种生产系统&lt;br/&gt;a. 单件产品生产&lt;br/&gt;b. 大规模生产系统&lt;br/&gt;c. 流程生产系统&lt;/li&gt;
&lt;li&gt;对管理能的要求通则&lt;br/&gt;a. 各种系统要求不但难度有别，而且所要求的管理能力和绩效顺序也不同&lt;br/&gt;b. 越能成功的贯彻每个系统的原则，就越容易达到系统对管理的要求&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;管理者的重要性&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;员工的工作效益大半取决于员工管理方式&lt;/li&gt;
&lt;li&gt;企业需要的目标决定了管理层的功能和责任&lt;/li&gt;
&lt;li&gt;管理层的功能和责任永远因其任务来决定&lt;/li&gt;
&lt;li&gt;管理管理者的要求&lt;br/&gt;a. 将个别管理者的愿景导向企业的目标，即目标管理与自我控制&lt;br/&gt;b. 为管理者的职务建立适当的结构&lt;br/&gt;c. 为管理组织建立健全的结构性原则&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;目标管理与自我控制&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;企业的每一分子都有不同的贡献，但所有的贡献都必须为了共同的目标&lt;/li&gt;
&lt;li&gt;期望管理者达到的绩效目标必须源自于企业的绩效目标，同时也通过管理者对于企业的成功所做的贡献，来衡量他们的工作成果&lt;/li&gt;
&lt;li&gt;上司误导：&lt;br/&gt;a. 下属眼中，上司的言行举止，甚至漫不经心的谈话和个人怪癖。都经过精心策划和考虑，具有特殊意义&lt;br/&gt;b. 管理结构上，必须兼顾管理者及其上司对管理工作的要求，而不是只重视上司的看法&lt;/li&gt;
&lt;li&gt;各个管理层次的差异：&lt;br/&gt;a. 要有良好的沟通，前提是先建立良好的共识和共同的语言&lt;br/&gt;b. 高效能的企业管理层必须激励每位管理者在正确的方向上投入最大的心力，一方面鼓励他们发挥最高的专业水准；另一方面。要把高超的专业技能当做企业绩效目标的手段，而不是把达到高标准本身当成努力目标&lt;/li&gt;
&lt;li&gt;管理者的目标应该是什么&lt;br/&gt;a. 每位管理者都需要有明确的目标，而且必须在目标中可出所管辖单位应该达到的绩效&lt;br/&gt;b. 目标一开始就应该强调团队合作和团队成果&lt;br/&gt;c. 所有的目标应该包含有形的经营目标和管理者的组织和培养，以及员工绩效、态度和社会责任等无形的目标&lt;/li&gt;
&lt;li&gt;靠压力进行管理&lt;br/&gt;a. 靠压力和危机进行管理是有害的&lt;br/&gt;b. 压力不是完成目标的方法&lt;br/&gt;c. 人们会将工作置之一旁去对付当前的压力，或是悄悄对压力采取一种集体怠工的态度&lt;/li&gt;
&lt;li&gt;管理者的目标如何确定，由谁确定&lt;br/&gt;a. 管理者应该负责让自己所管辖的单位对所属部门有所贡献，并且最后对整个企业有所贡献&lt;br/&gt;b. 每位管理者的工作目标必须根据他对上级单位的成功所做的贡献来决定&lt;br/&gt;c. 共同的理解从来不可能通过向下沟通而取得，只能产生于向上沟通&lt;/li&gt;
&lt;li&gt;通过测评进行自我控制&lt;br/&gt;a. 目标管理的主要贡献在于，我们能够以自我控制的管理方式来取代强制式管理&lt;br/&gt;b. 所有公司都应该针对每个关键领域向管理者提供清楚统一的绩效评估方式&lt;/li&gt;
&lt;li&gt;正确使用报告和程序&lt;br/&gt;a. 企业应该把报告和程序保持在最低限度，只有当报告和程序能节省时间和人力时，才运用这项工具，并且应该尽可能简化&lt;br/&gt;b. 意图控制每件事情，就等于控制不了任何事情&lt;br/&gt;c. 试图控制不相干的事情，总是会误导方向&lt;/li&gt;
&lt;li&gt;企业的管理原则&lt;br/&gt;a. 能让个人充分发挥特长&lt;br/&gt;b. 凝聚共同的愿景和一致的努力方向&lt;br/&gt;c. 建立团队合作&lt;br/&gt;d. 调和个人目标和共同福祉的原则&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;管理者必须管理&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;管理者的工作是什么&lt;br/&gt;a. 管理者的工作应该以能够达成公司目标的任务为基础，是实质工作，能对企业的成功产生明显而且可以清楚衡量的贡献&lt;br/&gt;b. 管理者应该受绩效目标的指引和控制，而不是由上司指导和控制&lt;/li&gt;
&lt;li&gt;管理职责的幅度&lt;br/&gt;a. 管理职责的基本因素是，帮助和教导，只有通过个人才能得到最好的发挥&lt;/li&gt;
&lt;li&gt;管理者的职权&lt;br/&gt;a. 让决策权尽可能掌握在实际行动者手中&lt;br/&gt;b. 高层管理工作是基本管理工作衍生出来的产物，目的是协助第一线管理者做好他们的工作&lt;br/&gt;c. 任何未以书面形式明确表明为高层管理者所拥有的职权都为下层管理者所拥有&lt;/li&gt;
&lt;li&gt;上下级关系&lt;br/&gt;a. 下层管理人员与上层管理人员的关系&lt;br/&gt;b. 各个管理人员与企业的关系&lt;br/&gt;c. 上层管理人员与下层管理人员的关系&lt;br/&gt;d. 每位管理者都要对上级单位的需求有所贡献，以达成上级的目标&lt;br/&gt;e. 上级主管的责任是尽一切力量，帮助下属达成目标&lt;br/&gt;f. 管理者应该明白他和下属的关系是一种责任，而不是上对下的监督&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;组织的精神&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;能否取长补短，是组织的一大考验&lt;/li&gt;
&lt;li&gt;强调他能做什么，而不是他不能做什么，必须不断改进团体的能力和绩效&lt;/li&gt;
&lt;li&gt;实践而非说教&lt;br/&gt;a. 为了塑造良好的精神，必须依赖道德力量&lt;br/&gt;b. 道德必须是有形的行为，是每个人都看得到，可以实践和衡量的行为&lt;br/&gt;c. 实际做法：&lt;br/&gt;i. 必须建立高绩效标准，不能宽容差的或平庸的表现，而且必须根据绩效，给予奖励&lt;br/&gt;ii. 每个管理职位本身必须有其价值，而不只是升迁的踏板&lt;br/&gt;iii. 必须建立合理而公平的升迁制度&lt;br/&gt;iv. 管理章程中必须清楚说明谁有权制订事关管理者命运的重要决定，管理者必须有向高层申述的途径&lt;br/&gt;v. 在任命管理者时，必须很清楚诚实正直的品格是对管理者的绝对要求，是管理者原本就需具备的特质&lt;/li&gt;
&lt;li&gt;安于平庸的危险&lt;br/&gt;a. 不要容忍持续绩效不佳或表现平平&lt;br/&gt;b. 管理出现失误导致下属失败时，不应该开除员工，但也要把绩效不佳者调离目前工作岗位&lt;/li&gt;
&lt;li&gt;评估的需要&lt;br/&gt;a. 系统化评估下属设定目标和达成目标的能力&lt;br/&gt;b. 评估必须基于绩效&lt;br/&gt;c. 不要试图根据缺点做评估&lt;/li&gt;
&lt;li&gt;奖励和激励的酬劳&lt;br/&gt;a. 特殊奉献精神的奖励&lt;br/&gt;b. 注重长期才可达成目标任务的奖励&lt;br/&gt;c. 需要声望和荣耀的奖励&lt;/li&gt;
&lt;li&gt;升迁&lt;br/&gt;a. 不要过度强调升迁&lt;br/&gt;b. 头衔问题，不影响内部实质关系，但对外产生优越和荣誉感&lt;br/&gt;c. 企业应根据绩效来决定升迁&lt;br/&gt;d. 升迁制度必须确保所有具备升迁资格的员工都列在考虑名单上，而不是只有最受瞩目的人出线&lt;br/&gt;e. 必须由更高层的主管审慎评估所有的升迁确定&lt;/li&gt;
&lt;li&gt;管理章程&lt;br/&gt;a. 管理者应该了解谁是有权做决定的人&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;首席执行官与董事会&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;企业高管需要建立中央治理机制和绩效评估机制&lt;/li&gt;
&lt;li&gt;首席执行官的工作必须有所规划，而且也必须根据计划来执行工作&lt;/li&gt;
&lt;li&gt;企业首席执行官的三个基本特质&lt;br/&gt;a. 思考者&lt;br/&gt;b. 行动者&lt;br/&gt;c. 抛头露面者&lt;/li&gt;
&lt;li&gt;最高领导层应该以团队形式组建&lt;/li&gt;
&lt;li&gt;如何组织最高层管理团队&lt;br/&gt;a. 必须是团队。团队没有集体责任，每个团队成员在他所负责的领域中享有最终决策权，有事情大家集思广益，但各自做决定&lt;br/&gt;b. 管理团队成员之间不能互相责难&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;培养管理者&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;不能只培养可以获得升迁的员工&lt;/li&gt;
&lt;li&gt;原则：&lt;br/&gt;a. 必须培养所有的管理者&lt;br/&gt;b. 培养管理者必须是动态的活动&lt;br/&gt;i. 我们需要什么的组织来达到明天的目标？&lt;br/&gt;ii. 我们需要什么样的管理职务？&lt;br/&gt;iii. 为了满足明天的需求，管理者必须满足什么样的条件？&lt;br/&gt;iv. 他们需要获得哪些新技能、拥有哪些知识？&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;企业需要哪一种结构&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;通过活动分析、决策分析、关系分析找出达到经营目标所需的结构&lt;/li&gt;
&lt;li&gt;活动分析&lt;br/&gt;a. 企业应该弄清楚需要哪些活动，才能达到经营目标？&lt;br/&gt;b. 传统制造业典型职能包含生产、营销、工程、会计、采购和人事&lt;/li&gt;
&lt;li&gt;决策分析&lt;br/&gt;a. 企业需要哪些决策以达成绩效、实现目标？&lt;br/&gt;b. 企业需要的决策属于哪一类？&lt;br/&gt;c. 应该由组织中哪个层级来制定决策？&lt;br/&gt;d. 企业决策的其中基本特性&lt;br/&gt;i. 决策的未来性&lt;br/&gt;ii. 决策对其他职能、其他领域或企业整体影响有多大？&lt;br/&gt;iii. 决策的性质是由其中包含多少质的因素来决定&lt;br/&gt;iv. 经常性决策或特殊决策&lt;br/&gt;e. 经常性决策应该建立通则&lt;/li&gt;
&lt;li&gt;关系分析&lt;br/&gt;a. 只有好好分析工作中的各种关系，才能做明智而成功的各种人事安排&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;建立管理结构&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;三个问题：&lt;br/&gt;a. 管理结构必须满足哪些条件&lt;br/&gt;b. 主要的重点和要求是什么&lt;br/&gt;c. 必须达到什么样的绩效&lt;/li&gt;
&lt;li&gt;三个答案：&lt;br/&gt;a. 管理结构在组织上必须以绩效为目标&lt;br/&gt;i. 应该通过企业绩效和成果来检验管理者&lt;br/&gt;ii. 管理结构必须让企业有意愿和能力为未来打拼&lt;br/&gt;b. 组织结构必须尽可能包含最少的管理层级，设计最便捷（短）的指挥链&lt;br/&gt;c. 组织机构必须能培育和检验未来的高层管理员&lt;/li&gt;
&lt;li&gt;联邦分权制&lt;br/&gt;a. 联邦分权制：尽可能整合所有活动，将企业活动组织成自主管理的产品事业，拥有自己的市场和产品，同时自负盈亏&lt;br/&gt;b. 优点：&lt;br/&gt;i. 将管理者的愿景和努力直接聚焦在经营绩效和成果上。大大降低经营者的自我欺骗&lt;br/&gt;ii. 企业可以充分发挥目标管理的功效&lt;/li&gt;
&lt;li&gt;职能分权制&lt;br/&gt;a. 职能性组织越接近联邦分权制，则效益越高，问题越少&lt;br/&gt;b. 组织职能性工作时，应赋予管理者最大的权责，来产出已完成或接近完成的产品或服务&lt;br/&gt;c. 联邦单位之间的关系是“平行”联结，职能性单位则是“序列”联结&lt;/li&gt;
&lt;li&gt;组织不健全的症状&lt;br/&gt;a. 管理层级不断增加&lt;br/&gt;b. 不能撤换表现不佳的员工&lt;br/&gt;c. 缺乏目标或目标混乱&lt;br/&gt;d. 员工没有明确的工作责任，只负责协助上司完成工作&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;IBM的故事&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;提升经济绩效的最大契机完全在于企业能否提升员工的工作效能&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;雇佣整个人&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;把员工当成资源&lt;br/&gt;a. 人对于要不要工作，握有绝对的自主权&lt;br/&gt;b. 员工的工作动机决定了员工的产出&lt;br/&gt;c. 必须主动创造正面的诱因来激励员工的工作&lt;br/&gt;d. 工作的组织方式必须设法让个人所有的长处、进取心、责任感和能力，都能对群体的绩效和优势有所贡献&lt;/li&gt;
&lt;li&gt;企业对员工的要求&lt;br/&gt;a. 员工能发挥多大的生产力，有很大部分取决于企业对他们的要求有多高&lt;br/&gt;b. 员工必须愿意接受改变&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;员工对企业的要求&lt;br/&gt;a. 从事有意义的严肃工作&lt;br/&gt;b. 建立高绩效标准&lt;br/&gt;c. 具备组织和管理工作的高度能力&lt;br/&gt;d. 明确表达对于良好工作表现的关注&lt;/li&gt;
&lt;li&gt;管理层的任务是激发员工的工作动机和参与感&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;创造巅峰绩效的组织&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;针对机械化工作，以机械化为原则;针对人的工作，则以整合为原则&lt;/li&gt;
&lt;li&gt;整合的规则&lt;br/&gt;a. 应用科学管理的方法来分析和组织工作&lt;br/&gt;b. 提高工作绩效最快的方法是改善个别动作或局部工作的绩效&lt;br/&gt;c. 动作的顺序必须经过系统化的设计，根据合乎逻辑的工作流程来安排&lt;/li&gt;
&lt;li&gt;组织人力来完成工作&lt;br/&gt;a. 应设法运用群体的力量和社会凝聚力，提升工作绩效，或至少应该避免两者彼此冲突&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;激励员工创造最佳绩效&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;唯一有效的方法是加强员工的责任感，而非满意度&lt;/li&gt;
&lt;li&gt;负责任的员工&lt;br/&gt;a. 四种方式研究：慎重安排员工职务、设定高绩效标准、提供员工自我控制所需的信息、提供员工参与的机会以培养管理者的愿景&lt;br/&gt;b. 管理层必须对自己的工作绩效提出高标准&lt;br/&gt;c. 最能激励员工绩效的就是把内部管理事务处理得无懈可击，通过这些活动向员工展示管理者的才干和他对工作的认真态度也直接反映出管理者的能力和标准&lt;br/&gt;d. 管理者能力的第一考研，就是是否有能力让员工在干扰最小的情况下，发挥工作最大的效益&lt;/li&gt;
&lt;li&gt;让员工了解情况&lt;br/&gt;a. 员工必须有能力控制、衡量和引导自己的表现&lt;/li&gt;
&lt;li&gt;拥有管理者的愿景&lt;br/&gt;a. 自豪感和成就感都必须源自于工作本身&lt;br/&gt;b. 负责执行工作的人能预先参与工作的规划，那么计划将会更加完善&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;管理者及其工作&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;管理者必须承担的两项任务&lt;br/&gt;a. 创造出大于各个部分总和的真正整体&lt;br/&gt;b. 协调每个决策和行动的长远的需求和眼前的需求&lt;/li&gt;
&lt;li&gt;管理者工作的五项基本活动&lt;br/&gt;a. 管理者设定目标，决定目标应该是什么，也决定应该采取哪些行动，以达到目标&lt;br/&gt;b. 管理者从事组织的工作&lt;br/&gt;c. 管理者必须激励员工&lt;br/&gt;d. 管理工作的基本要素是衡量标准&lt;br/&gt;e. 管理者必须培养人才&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;做决策&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;做管理就是决策的过程&lt;/li&gt;
&lt;li&gt;管理决策中最常发生的错误是只强调找到正确答案，而重视提出正确的问题&lt;/li&gt;
&lt;li&gt;决策的五个阶段&lt;br/&gt;a. 界定问题&lt;br/&gt;i. 先找到“关键因素”&lt;br/&gt;ii. 假定一切条件都不变，问：未来将会发生什么状况？&lt;br/&gt;iii. 回顾过去，问：当初发生这个问题的时候，如果采取了什么行动，或不曾采取什么行动，将会影响到目前的状况？&lt;br/&gt;iv. 决定解决问题需要什么条件，同时彻底想清楚解决方案的目标为何&lt;br/&gt;b. 分析问题&lt;br/&gt;i. 将问题分类，并寻找事实&lt;br/&gt;ii. 决策需要承担风险&lt;br/&gt;c. 制定可行的替代方案&lt;br/&gt;i. 替代方案可保证我们在深思熟虑情况下做决策&lt;br/&gt;ii. 永远考虑一个方案:什么都不做&lt;br/&gt;d. 寻找最佳的解决方案&lt;br/&gt;i. 风险，根据预期收货，权衡每个行动的风险&lt;br/&gt;ii. 投入的精力所达到的经济效益&lt;br/&gt;iii. 考虑时机&lt;br/&gt;iv. 资源的限制，考虑执行决策的人是谁&lt;br/&gt;e. 把决策转化为有效的行动&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Sat, 25 May 2019 15:25:00 +0000</pubDate>
<dc:creator>zer0black</dc:creator>
<og:description>花了4个月的时间，总算完完整整的读完了《管理的实践》一书。书中诸多观点在现在看来，依旧很新颖，不亏是管理类书籍的开山之作。 这本书二战刚结束就开始创作，而今很多企业都做不到。与其说是实践，倒不如说是管</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zer0Black/p/10924497.html</dc:identifier>
</item>
<item>
<title>TensorFlow——tensorflow指定CPU与GPU运算 - Baby-Lily</title>
<link>http://www.cnblogs.com/baby-lily/p/10924444.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/baby-lily/p/10924444.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.指定GPU运算&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果安装的是GPU版本，在运行的过程中TensorFlow能够自动检测。如果检测到GPU，TensorFlow会尽可能的利用找到的第一个GPU来执行操作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果机器上有超过一个可用的GPU，除了第一个之外的其他的GPU默认是不参与计算的。为了让TensorFlow使用这些GPU，必须将OP明确指派给他们执行。with......device语句能够用来指派特定的CPU或者GPU执行操作：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; tensorflow as tf
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; numpy as np

with tf.Session() as sess:
    with tf.device(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/cpu:0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
        a &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
        b &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
        add &lt;/span&gt;=&lt;span&gt; tf.add(a, b)
        sum &lt;/span&gt;= sess.run(add, feed_dict={a: 3, b: 4&lt;span&gt;})
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(sum)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;设备的字符串标识，当前支持的设备包括以下的几种：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;cpu:0  机器的第一个cpu。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;gpu:0  机器的第一个gpu，如果有的话&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;gpu:1  机器的第二个gpu，依次类推&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;类似的还有tf.ConfigProto来构建一个config，在config中指定相关的GPU，并且在session中传入参数config=“自己创建的config”来指定gpu操作&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中，tf.ConfigProto函数的参数如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;log_device_placement=True: 是否打印设备分配日志&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;allow_soft_placement=True: 如果指定的设备不存在，允许TF自动分配设备&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; tensorflow as tf
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; numpy as np

config &lt;/span&gt;= tf.ConfigProto(log_device_placement=True, allow_soft_placement=&lt;span&gt;True)

with tf.Session(config&lt;/span&gt;=&lt;span&gt;config) as sess:
    a &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
    b &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
    add &lt;/span&gt;=&lt;span&gt; tf.add(a, b)
    sum &lt;/span&gt;= sess.run(add, feed_dict={a: 3, b: 4&lt;span&gt;})
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(sum)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.设置GPU使用资源&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上文的tf.ConfigProto函数生成的config之后，还可以设置其属性来分配GPU的运算资源，如下代码就是按需分配&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; tensorflow as tf
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; numpy as np

config &lt;/span&gt;= tf.ConfigProto(log_device_placement=True, allow_soft_placement=&lt;span&gt;True)
config.gpu_options.allow_growth &lt;/span&gt;=&lt;span&gt; True

with tf.Session(config&lt;/span&gt;=&lt;span&gt;config) as sess:
    a &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
    b &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
    add &lt;/span&gt;=&lt;span&gt; tf.add(a, b)
    sum &lt;/span&gt;= sess.run(add, feed_dict={a: 3, b: 4&lt;span&gt;})
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(sum)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;使用 allow_growth option，刚开始会分配少量的GPU容量，然后按需要慢慢的增加，有与不会释放内存，随意会导致内存碎片。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同样，上述的代码也可以在config创建时指定，&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; tensorflow as tf
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; numpy as np

gpu_options &lt;/span&gt;= tf.GPUOptions(allow_growth=&lt;span&gt;True)
config &lt;/span&gt;= tf.ConfigProto(gpu_options=&lt;span&gt;gpu_options)


with tf.Session(config&lt;/span&gt;=&lt;span&gt;config) as sess:
    a &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
    b &lt;/span&gt;=&lt;span&gt; tf.placeholder(tf.int32)
    add &lt;/span&gt;=&lt;span&gt; tf.add(a, b)
    sum &lt;/span&gt;= sess.run(add, feed_dict={a: 3, b: 4&lt;span&gt;})
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(sum)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;我们还可以给gpu分配固定大小的计算资源。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
gpu_options = tf.GPUOptions(allow_growth=True, per_process_gpu_memory_fraction=0.5)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;上述代码的含义是分配给tensorflow的GPU显存大小为：GPU的实际显存*0.5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1636554/201905/1636554-20190525230226022-730645487.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1636554/201905/1636554-20190525230314017-592457960.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 25 May 2019 15:05:00 +0000</pubDate>
<dc:creator>Baby-Lily</dc:creator>
<og:description>1.指定GPU运算 如果安装的是GPU版本，在运行的过程中TensorFlow能够自动检测。如果检测到GPU，TensorFlow会尽可能的利用找到的第一个GPU来执行操作。 如果机器上有超过一个可用</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/baby-lily/p/10924444.html</dc:identifier>
</item>
</channel>
</rss>