<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>讲透机器学习中的梯度下降 - TechFlow2019</title>
<link>http://www.cnblogs.com/techflow/p/12297753.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/techflow/p/12297753.html</guid>
<description>&lt;p&gt;本文始发于个人公众号：&lt;strong&gt;TechFlow，原创不易，求个关注&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在之前的文章当中，我们一起推导了&lt;strong&gt;线性回归&lt;/strong&gt;的公式，今天我们继续来学习上次没有结束的内容。&lt;/p&gt;
&lt;p&gt;上次我们推导完了公式的时候，曾经说过由于有许多的问题，比如最主要的复杂度问题。随着样本和特征数量的增大，通过公式求解的时间会急剧增大，并且如果特征为空，还会出现公式无法计算的情况。所以和直接公式求解相比，实际当中更倾向于使用另外一种方法来代替，它就是今天这篇文章的主角——梯度下降法。&lt;/p&gt;
&lt;p&gt;梯度下降法可以说是机器学习和深度学习当中最重要的方法，可以说是没有之一。尤其是在深度学习当中，几乎清一色所有的神经网络都是使用梯度下降法来训练的。那么，梯度下降法究竟是一种什么样的方法呢，让我们先从梯度的定义开始。&lt;/p&gt;

&lt;h2 id=&quot;梯度的定义&quot;&gt;梯度的定义&lt;/h2&gt;

&lt;p&gt;我们先来看看维基百科当中的定义：梯度（gradient）是一种关于多元导数的概括。平常的一元（单变量）函数的导数是标量值函数，而多元函数的梯度是向量值函数。多元可微函数&lt;span class=&quot;math inline&quot;&gt;\({\displaystyle f}\)&lt;/span&gt;在点&lt;span class=&quot;math inline&quot;&gt;\({\displaystyle P}\)&lt;/span&gt;上的梯度，是以&lt;span class=&quot;math inline&quot;&gt;\({\displaystyle f}\)&lt;/span&gt;在&lt;span class=&quot;math inline&quot;&gt;\({\displaystyle P}\)&lt;/span&gt;上的偏导数为分量的向量。&lt;/p&gt;
&lt;p&gt;这句话很精炼，但是不一定容易理解，我们一点一点来看。我们之前高中学过导数，但是高中时候计算的求导往往针对的是一元函数。也就是说只有一个变量x，求导的结果是一个具体的值，它是一个标量。而多元函数在某个点求导的结果是一个向量，n元函数的求导的结果分量就是n，导数的每个分量是对应的变量在该点的偏导数。这个偏导数组成的向量，就是这个函数在该点的梯度。&lt;/p&gt;
&lt;p&gt;那么，根据上面的定义，我们可以明确两点，首先梯度是一个向量，它既有方向，也有大小。&lt;/p&gt;

&lt;h2 id=&quot;梯度的解释&quot;&gt;梯度的解释&lt;/h2&gt;

&lt;p&gt;维基百科当中还列举了两个关于梯度的例子，帮助我们更好的理解。&lt;/p&gt;
&lt;p&gt;第一个例子是最经典的山坡模型，假设我们当下站在一个凹凸不平的山坡上，我们想要以最快的速度下山，那么我们应该该从什么方向出发呢？很简单，我们应该计算一下脚下点的梯度，梯度的方向告诉我们下山最快的方向，梯度的大小代表这点的坡度。&lt;/p&gt;
&lt;p&gt;第二个例子是房间温度模型，假设我们对房间建立坐标系，那么房间里的每一个点都可以表示成&lt;span class=&quot;math inline&quot;&gt;\({\displaystyle (x,y,z)}\)&lt;/span&gt;，该点的温度是&lt;span class=&quot;math inline&quot;&gt;\(\phi(x,y,z)\)&lt;/span&gt;。如果假设房间的温度不随时间变化，那么房间里每个点的梯度表示温度变热最快的方向，梯度的大小代表温度变化的速率。&lt;/p&gt;
&lt;p&gt;通过这两个例子，应该很容易理解梯度的方向和大小这两个概念。&lt;/p&gt;

&lt;h2 id=&quot;举例&quot;&gt;举例&lt;/h2&gt;

&lt;p&gt;假设f是一个定义在三维空间里的函数，那么，f在某一点的梯度，可以写成：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[\nabla f=(\frac{\partial f}{\partial x}, \frac{\partial f}{\partial y}, \frac{\partial f}{\partial z})=\frac{\partial f}{\partial x}i+\frac{\partial f}{\partial y}j + \frac{\partial f}{\partial z}k\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里的&lt;span class=&quot;math inline&quot;&gt;\(i, j, k\)&lt;/span&gt;都是标准单位向量，表示坐标轴&lt;span class=&quot;math inline&quot;&gt;\(x, y, z\)&lt;/span&gt;的方向。&lt;/p&gt;
&lt;p&gt;我们举个例子：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[f=3x^2+4y-sinz\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;套入刚才的梯度公式，可以得到：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[\nabla f = 6x\cdot i + 4\cdot j - \cos z\cdot k\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果我们知道&lt;span class=&quot;math inline&quot;&gt;\(x, y, z\)&lt;/span&gt;的坐标，代入其中，就可以知道对应的梯度了。&lt;/p&gt;

&lt;h2 id=&quot;梯度下降法&quot;&gt;梯度下降法&lt;/h2&gt;

&lt;p&gt;理解了梯度的概念之后，再来看梯度下降法其实就是一张图的事。请看下面这张图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036dd6dfa11101?w=600&amp;amp;h=311&amp;amp;f=png&amp;amp;s=80446&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里的黑色的曲线表示我们损失函数的函数曲线，我们要做的，就是找到这个最佳的参数x，使得损失函数的值最小。损失函数的值达到最小，也就说明了模型的效果达到了极限，这也就是我们预期的。&lt;/p&gt;
&lt;p&gt;我们一开始的时候显然是不知道最佳的x是多少的（废话，知道了还求啥），所以我们假设一开始的时候在一个随机的位置。就假设是图中的&lt;span class=&quot;math inline&quot;&gt;\(x_1\)&lt;/span&gt;的位置。接着我们对&lt;span class=&quot;math inline&quot;&gt;\(x_1\)&lt;/span&gt;求梯度。我们之前说了，梯度就是该点下降最陡峭的方向，梯度的大小就是它的陡峭程度。我们既然知道了梯度的方向之后，其实就很简单了，我们要做的就是朝着梯度下降，也就是最陡峭的方向向前走一小步。&lt;/p&gt;
&lt;p&gt;我们假设，&lt;span class=&quot;math inline&quot;&gt;\(x_1\)&lt;/span&gt;处的梯度是&lt;span class=&quot;math inline&quot;&gt;\(s_1\)&lt;/span&gt;，那么我们根据&lt;span class=&quot;math inline&quot;&gt;\(s_1\)&lt;/span&gt;通过迭代的方法优化损失函数。说起来有些空洞，我写出来就明白了。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[ \begin{aligned} x_2 &amp;amp;= x_1 + \eta \cdot s_1 \\ x_3 &amp;amp;= x_2 + \eta \cdot s_2 \\ \vdots \\ x_n &amp;amp;= x_{n-1} + \eta \cdot s_{n-1} \end{aligned} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从上面这个公式可以看出来，这是一个迭代公式。也就是说我们通过不停地迭代，来优化参数。理论上来说，这样的迭代是没有穷尽的，我们需要手动终止迭代。什么时候可以停止呢？我们可以判断每一次迭代的梯度，当梯度已经小到逼近于0的时候，就说明模型的训练已经收敛了，这个时候可以停止训练了。&lt;/p&gt;
&lt;p&gt;这里的&lt;span class=&quot;math inline&quot;&gt;\(\eta\)&lt;/span&gt;是一个固定的参数，称为学习率，它表示梯度对于迭代的影响程度。学习率越大，说明梯度对于参数变化的影响越大。如果学习率越小，自然每一次迭代参数的变化也就越小，说明到收敛需要的迭代次数也就越多，也可以单纯理解成，收敛需要的时间也就越长。&lt;/p&gt;
&lt;p&gt;那么是不是学习率越大越好呢？显然也不是的。因为如果学习率过大，很有可能会导致在迭代的过程当中错过最优点。就好像油门踩猛了，一下子就过头了，于是可能会出现永远也无法收敛的情况。比如我们可以参考下面这张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036dd70b4f94a4?w=822&amp;amp;h=402&amp;amp;f=png&amp;amp;s=161719&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从这张图上可以看到，变量一直在最值附近震荡，永远也达不成收敛状态。&lt;/p&gt;
&lt;p&gt;如果学习率设置得小一些是不是就没事了？也不是，如果设置的学习率过小，除了会导致迭代的次数非常庞大以至于训练花费的时间过久之外，还有可能由于小数的部分过大，导致超出了浮点数精度的范围，以至于出现非法值Nan这种情况出现。同样，我们可以参考一下下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036dd6bd248c04?w=830&amp;amp;h=404&amp;amp;f=png&amp;amp;s=122147&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这张图画的是学习率过小，导致一直在迭代，迟迟不能收敛的情况。&lt;/p&gt;
&lt;p&gt;从上面这两张图，我们可以看得出来，在机器学习领域学习率的设置非常重要。一个好的参数不仅可以缩短模型训练的时间，也可以使模型的效果更好。但是设置学习率业内虽然有种种方法，但是不同的问题场景，不同的模型的学习率设置方法都略有差别，也正因此，很多人才会调侃自己是调参工程师。&lt;/p&gt;
&lt;p&gt;我们来看一下一个合适的学习率的迭代曲线是什么样的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036dd6c07da62b?w=854&amp;amp;h=472&amp;amp;f=png&amp;amp;s=179015&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到这里还没有结束，好的学习率并不能解决所有的问题。在有些问题有些模型当中，很有可能最优解本身就是无法达到的，即使用非常科学的方法，设置非常好的参数。我们再来看一张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036dd704be2947?w=888&amp;amp;h=430&amp;amp;f=png&amp;amp;s=160312&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这张图有不止一个极值点，如果我们一开始的时候，参数落在了区间的左侧，那么很快模型就会收敛到一个极值，但是它并不是全局最优解，只是一个局部最优解。这时候无论我们如何设置学习率，都不可能找到右侧的那个全局最优解。同样，如果我们一开始参数落在了区间右侧，那里的曲线非常平坦，使得每次迭代的梯度都非常小，非常接近0.那么虽然最终可以到达全局最优解，但是需要经过漫长的迭代过程。&lt;/p&gt;
&lt;p&gt;所以，模型训练、梯度下降虽然方法简单，但是真实的使用场景也是非常复杂的。我们不可以掉以轻心，不过好在，对于线性回归的最小二乘法来说，损失函数是一个凸函数，意味着它一定有全局最优解，并且只有一个。随着我们的迭代，一定可以达到收敛。&lt;/p&gt;

&lt;h2 id=&quot;代码实战&quot;&gt;代码实战&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Talk is cheap, show me the code.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;光说不练假把式，既然我们已经学习到了梯度下降的精髓，也该亲身用代码体验一下了。我们还是用之前线性回归的问题。如果有遗忘的同学可以点击下方的链接回顾一下之前的内容：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyMTM5OTM2NA==&amp;amp;mid=2247484401&amp;amp;idx=1&amp;amp;sn=cf71a7ba01cbf6f0a1bfd9bfea3fe627&amp;amp;chksm=f9dafedacead77cc517e9e7945360f3a29622283a6c1495d47e1baa80d490844b0d071e7a070&amp;amp;scene=21#wechat_redirect&quot;&gt;一文讲透线性回归模型&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还是和之前一样，我们先生成一批点：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;import numpy as np
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是根据函数&lt;span class=&quot;math inline&quot;&gt;\(y = 3x + 4\)&lt;/span&gt;随机出来的，我们接下来就要通过梯度下降的方法来做线性回归。首先，我们来推导一下梯度公式：&lt;/p&gt;
&lt;p&gt;在使用梯度下降算法的时候，我们其实计算当前&lt;span class=&quot;math inline&quot;&gt;\(\theta\)&lt;/span&gt;下的梯度。这个量反应的是当我们的&lt;span class=&quot;math inline&quot;&gt;\(\theta\)&lt;/span&gt;发生变化的时候，整个的损失函数MSE(mean square error 均方差)会变化多少。而梯度，可以通过对变量求偏导得到。写成：&lt;span class=&quot;math inline&quot;&gt;\(\frac {\partial}{\partial \theta_j}MSE(\theta)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们单独计算&lt;span class=&quot;math inline&quot;&gt;\(\theta_j\)&lt;/span&gt;的损失函数偏导，写成：&lt;span class=&quot;math inline&quot;&gt;\(\frac {\partial}{\partial \theta_j}MSE(\theta)\)&lt;/span&gt;，带入之前的损失函数公式，计算化简可以得到：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[\frac {\partial}{\partial \theta_j}MSE(\theta)=\frac {1}{m}\sum_{i=1}^m(\theta^T \cdot x_i-y_i)x_j\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这只是&lt;span class=&quot;math inline&quot;&gt;\(\theta_j\)&lt;/span&gt;的偏导数，我们可以把向量&lt;span class=&quot;math inline&quot;&gt;\(\theta\)&lt;/span&gt;中每一个变量的偏导数合在一起计算。标记为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[\nabla_\theta MSE(\theta)=\begin{pmatrix} \frac {\partial}{\partial \theta_0}MSE(\theta) \\ \frac {\partial}{\partial \theta_1}MSE(\theta) \\ \vdots\\ \frac {\partial}{\partial \theta_n}MSE(\theta) \\ \end{pmatrix}=\frac {1}{m}X^T\cdot(X \cdot\theta-y)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们不难看出，在这个公式当中，我们涉及了全量的训练样本X。因此这种方法被称为批量梯度下降。因此，当我们的训练样本非常大的时候，会使得我们的算法非常缓慢。但是使用梯度下降算法，和特征的数量成正比，当特征数量很大的时候，梯度下降要比方程直接求解快得多。&lt;/p&gt;
&lt;p&gt;需要注意一点，我们推导得到的梯度是向上的方向。我们要下降，所以需要加一个负号，最后再乘上学习率，得到的公式如下：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[\theta^{next step}=\theta-\eta\nabla_\theta MSE(\theta)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据公式，写出代码就不复杂了：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;eta = 0.1 # 学习率
n_iterations = 1000 # 迭代次数
m = 100

theta = np.random.randn(2,1) # 随机初始值
X = np.c_[np.ones(100).T, X]
for iteration in range(n_iterations):
    gradients = 1/m * X.T.dot(X.dot(theta) - y) # 根据梯度公式迭代
    theta = theta - eta * gradients&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们调用一下这段代码，来查看一下结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036dd740ad6334?w=794&amp;amp;h=188&amp;amp;f=png&amp;amp;s=68700&quot;/&gt;&lt;/p&gt;
&lt;p&gt;和我们设置的参数非常接近，效果算是很不错了。如果我们调整学习率和迭代次数，最后的效果可能会更好。&lt;/p&gt;
&lt;p&gt;观察一下代码可以发现，我们在实现梯度下降的时候，用到了全部的样本。显然，随着样本的数量增大，梯度下降会变得非常慢。为了解决这个问题，专家们后续推出了许多优化的方法。不过由于篇幅的限制，我们会在下一篇文章当中和大家分享，感兴趣的同学可以小小地期待一下。&lt;/p&gt;
&lt;p&gt;梯度下降非常重要，可以说是机器学习领域至关重要的基础之一，希望大家都能学会。&lt;/p&gt;
&lt;p&gt;今天的文章就到这里，如果觉得有所收获，请顺手点个关注或者转发吧，你们的支持是我最大的动力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/2/12/17036def9ed8c48d?w=258&amp;amp;h=258&amp;amp;f=png&amp;amp;s=23988&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 12 Feb 2020 00:51:00 +0000</pubDate>
<dc:creator>TechFlow2019</dc:creator>
<og:description>本文始发于个人公众号： TechFlow，原创不易，求个关注 在之前的文章当中，我们一起推导了 线性回归 的公式，今天我们继续来学习上次没有结束的内容。 上次我们推导完了公式的时候，曾经说过由于有许多</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/techflow/p/12297753.html</dc:identifier>
</item>
<item>
<title>疫情之下远程办公，开启企业办公的全新时代！ - 葡萄城技术团队</title>
<link>http://www.cnblogs.com/powertoolsteam/p/12297746.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/powertoolsteam/p/12297746.html</guid>
<description>&lt;p&gt;2020年开春，新冠肺炎肆虐，为了切实落实疫情防控，保障业务有序开展，各大企业纷纷出台延期复工政策，被动开启【远程办公】模式。&lt;/p&gt;
&lt;p&gt;每一次大的疫情都将深刻改变世界。这也让人不禁好奇：当疫情过后，远程办公能否从非常时期的“不得不”，变成更多企业主动选择的新趋势?&lt;/p&gt;
&lt;p&gt;带着这个问题，小编综合分析了国内外“远程办公”现状，以及“远程办公”各细分领域发展，在此推断：未来，随着5G通讯技术的普及，企业对于远程办公的需求会日益剧增，远程办公将从非常态变为常态。&lt;/p&gt;
&lt;p&gt;对软件开发人员和系统供应商而言，远程“协同办公”这一细分场景，有望成为下一个行业风口。&lt;/p&gt;
&lt;h3&gt;什么是真正意义上的远程办公？&lt;/h3&gt;
&lt;p&gt;从市场反馈看，绝大多数企业目前能够实现的远程办公主要为：通过控制技术、远程控制软件，对公司电脑进行远程操作。&lt;/p&gt;
&lt;p&gt;而远程办公未来的发展方向和市场前景，则不限于此。&lt;/p&gt;
&lt;p&gt;真正意义上的远程办公，更像是：借助高速网络传输技术（5G）构筑一个稳定的公用网络，并建立一个快速、安全的连接通道，该通道为日常办公提供全方位支持，如线上沟通、协同办公、云存储、在线文档编辑、远程会议、访问局域网服务器、数据库链接等。&lt;/p&gt;
&lt;p&gt;了解了什么是真正的远程办公后，我们再来对国内外“远程办公”现状进行分析：&lt;/p&gt;
&lt;h3&gt;国内外“远程办公”现状&lt;/h3&gt;
&lt;p&gt;追述历史，“远程办公”这一概念首次出现于1979年，IBM 为缓解总部主机拥堵问题，将终端机安到了五位员工家里——某种意义上看，这就是现代企业远程办公的“雏形”。&lt;/p&gt;
&lt;p&gt;早在2009年， IBM 就已经对外宣布：其在全球173 个国家，约有154,400 名员工实现了“在家”远程办公，这一举措为IBM节省了5800万平方英尺的办公空间和每年近20亿美元的成本。&lt;/p&gt;
&lt;h4&gt;1、「远程办公」在国外&lt;/h4&gt;
&lt;p&gt;互联网的高速发展，带给许多初创公司前所未有的发展前景，营商环境争夺、人才竞争在这一行业尤为激烈。与国内一线城市表现相同，美国科技行业扎堆的地区（如硅谷）往往需要提供更高薪水和福利招聘人才，而这些地方的商业和住宅地产售价也普遍高于其他地区。&lt;/p&gt;
&lt;p&gt;如今，随着云计算基础设施的发展，偏远地区往往拥有更快的互联网速度以及更新一代的通信和协作工具，因此，&lt;strong&gt;弹性工作制与异地远程办公&lt;/strong&gt;正在美国逐步盛行。&lt;/p&gt;
&lt;p&gt;根据Glassdoor「远程办公」的调研结果，目前已有Airbnb、戴尔、德勤、甲骨文、Knonos等知名公司，为员工提供了在家办公的福利。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/i-beta/139239/202002/139239-20200212084346835-805068011.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;图片来源于网络&lt;/p&gt;
&lt;p class=&quot;ztext-empty-paragraph&quot;&gt; &lt;/p&gt;
&lt;h4&gt;2、「远程办公」在中国&lt;/h4&gt;
&lt;p&gt;远程办公在中国落地，从技术上说，没有任何难度：即时沟通有邮件、微信、钉钉；开会有视频会议工具Zoom；协同办公，有飞书和Teambition；在线文档，有WPS和腾讯文档；&lt;/p&gt;
&lt;p&gt;远程办公真正落地的难度体现在：信任机制。&lt;/p&gt;
&lt;p&gt;很多企业不愿让员工在家里工作，主要是担心在较小监督和远程沟通的情况下，员工的工作效率难以得到保证。&lt;/p&gt;
&lt;p&gt;其实，只要借助合理的目标设定和高效的协同办公工具，将企业和员工的利益达成一致，远程办公的工作效率并不差于传统办公模式，甚至能有更好的产出。&lt;/p&gt;
&lt;p class=&quot;ztext-empty-paragraph&quot;&gt; &lt;/p&gt;
&lt;h3&gt;“远程办公”领域的细分场景及信息化工具&lt;/h3&gt;
&lt;p&gt;一直以来，远程办公只是作为企业辅助管理手段出现，受本次疫情影响，远程办公行业将朝着纵深领域、细分场景方向发展。&lt;/p&gt;
&lt;h4&gt;远程办公领域发展的第一个细分场景，便是继续推动企业数字化转型。&lt;/h4&gt;
&lt;p&gt;目前，多数行业已经具备了一定的数字化基础，疫情过后，企业主一定会加快数字化转型的步伐，而远程办公这一方式，可以帮助企业实现组织与业务的在线化和数字化，进而提升企业管理效率。&lt;/p&gt;
&lt;p&gt;这一波在线办公潮将让中国企业拥有更强的数字化转型意识，学习和接纳在线办公的习惯，加速拥抱数字经济，因此，提供数字化服务的下游 to B 企业有望迎来快速增长期。&lt;/p&gt;
&lt;h4&gt;第二个细分场景则集中于企业协同办公。&lt;/h4&gt;
&lt;p&gt;企业协同办公是“远程办公”领域最具发展前景的细分场景。&lt;/p&gt;
&lt;p&gt;企业协同办公基于企业多元化的工作需求，如即时通讯、协同文档、在线会议、云存储，以及客户管理、合同管理、员工培训等。每一项需求都需要对应的协同功能和信息化系统，而每一个系统，都将是一个巨大的市场。&lt;/p&gt;
&lt;p&gt;市面上成型的协同办公产品有很多，其中不乏各大互联网巨头的身影，如阿里的钉钉、腾讯的企业微信、字节跳动的飞书，以及获得上亿元人民币融资的创业型公司，如石墨文档、小鱼易连等。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IM通讯：企业微信、钉钉、飞书、百度Hi；&lt;/li&gt;
&lt;li&gt;在线文档：WPS、腾讯文档、石墨文档、雷鸟365&lt;/li&gt;
&lt;li&gt;视频会议工具：Zoom；&lt;/li&gt;
&lt;li&gt;任务管理：Tower、Teambition；&lt;/li&gt;
&lt;/ul&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td colspan=&quot;4&quot; nowrap=&quot;nowrap&quot; width=&quot;432&quot; readability=&quot;5&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;国内主要&lt;/strong&gt;&lt;strong&gt;“&lt;/strong&gt;&lt;strong&gt;远程协同办公&lt;/strong&gt;&lt;strong&gt;”&lt;/strong&gt;&lt;strong&gt;软件融资情况&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;73&quot;&gt;
&lt;p align=&quot;center&quot;&gt;类别&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;名称&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;最新融资轮次&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;最新融资金额&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;4&quot; nowrap=&quot;nowrap&quot; width=&quot;73&quot;&gt;
&lt;p align=&quot;center&quot;&gt;IM通讯&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;企业微信&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;钉钉&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;A轮&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;17亿人民币&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;飞书&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;百度Hi&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;4&quot; nowrap=&quot;nowrap&quot; width=&quot;73&quot;&gt;
&lt;p align=&quot;center&quot;&gt;文档协作&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;石墨文档&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;战略投资&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;亿级人民币&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;腾讯文档&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;印象笔记&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;战略投资&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;亿元及以上人民币&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;有道云笔记&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; nowrap=&quot;nowrap&quot; width=&quot;73&quot;&gt;
&lt;p align=&quot;center&quot;&gt;视频会议&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;小鱼易连&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;C轮&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;数亿人民币&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;海纳视频面试&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;股权融资&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;/&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; nowrap=&quot;nowrap&quot; width=&quot;73&quot;&gt;
&lt;p align=&quot;center&quot;&gt;任务管理&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Tower&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;A+轮&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;2000万人民币&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Teambition&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;108&quot;&gt;
&lt;p align=&quot;center&quot;&gt;被阿里并购&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;143&quot;&gt;
&lt;p align=&quot;center&quot;&gt;1亿美元&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;国内主要&lt;/strong&gt;&lt;strong&gt;“&lt;/strong&gt;&lt;strong&gt;远程协同办公&lt;/strong&gt;&lt;strong&gt;”&lt;/strong&gt;&lt;strong&gt;软件融资情况&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;但是，目前国内的协同办公产品，多以单品能力突出取胜，如文档功能、音视频会议功能、 IM 功能以及任务管理功能等。现阶段“协同办公”风口正盛，用户最需要的是一款简单、能快速投入使用的协同软件。&lt;/p&gt;
&lt;p&gt;然而，长期看，企业需求纷繁复杂，产品的易用性、与业务的契合度、使用习惯等，都是非常重要的因素。如能针对不同业务场景，提供个性化的协同办公工具，帮助企业保证协同办公系统与业务的高度契合，将会大有可为。&lt;/p&gt;
&lt;p&gt;软件行业的系统供应商，可以借助第三方组件快速开发协同办公系统，用以支撑企业远程办公场景下的各项需求，步入这个赛道。比如，可通过&lt;a href=&quot;https://www.grapecity.com.cn/developer/spreadjs&quot;&gt;SpreadJS 前端表格控件&lt;/a&gt;，在协同办公系统中嵌入如Excel般的数据处理能力，打破Excel长久以来的技术壁垒，为用户提供类似Excel的使用习惯，并和企业原有的业务系统深度集成，定制化开发企业个性化协同办公系统。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/i-beta/139239/202002/139239-20200212084417714-1742625900.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;SpreadJS 在功能和界面上与Excel高度类似&lt;/p&gt;
&lt;h4&gt; 当企业主眼下最迫切的“痛点”解决后，第三个细分场景体现在企业用人方面。&lt;/h4&gt;
&lt;p&gt;对中小型企业来说，今年用人难、用人成本高的问题将会更加凸显，企业主对灵活用工的需求将明显增加，为企业提供灵活用工、随需随聘解决方案的供应商将更受欢迎，如阿里旗下盒马鲜生近日推出的“共享员工”，仅西贝一家就有逾千名员工赴盒马上班。&lt;/p&gt;
&lt;p&gt;企业用人开始从雇佣关系到合作关系转换：未来的你，可能不仅属于一家公司。&lt;/p&gt;

&lt;h3&gt;结语：远程办公对企业来说，更像一场关于体系制度的大考&lt;/h3&gt;
&lt;p&gt;对于企业来说，“远程办公”不能一蹴而就，只有形成“自信、包容、结果导向”的企业文化，设立合理的目标、辅助以高效的协同办公工具，将企业和员工的利益达成一致，才能提供最适合“远程办公”落地生根的土壤。&lt;/p&gt;
&lt;p&gt;尽管国内对于线上远程办公仍存在争议，但有争议是任何新兴事物的特性。成本低廉、方式灵活， “远程办公”势必会成为企业发展的最佳选择。&lt;/p&gt;
&lt;p&gt;当挑战来临之时，机会永远留给充分准备的人。未来的商业模式，两级分化不可避免，头部企业必将在寒冬之后蓄势爆发，而未能把握机会的企业，则可能面临更惨烈的寒冬。&lt;/p&gt;

&lt;h3&gt;下期预告&lt;/h3&gt;
&lt;p&gt;以上，就是小编关于企业“远程办公”的一些思考和总结。&lt;/p&gt;
&lt;p&gt;下面，我将通过分析“远程办公”领域的各细分场景，详细对比IM、文档协作、线上会议和任务管理的未来发展趋势，深入剖析：如何突破技术壁垒，使用SpreadJS定制化开发文档协同办公系统，敬请期待：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;远程办公迎来加速发展期，在线文档有望借势崛起&lt;/li&gt;
&lt;li&gt;突破技术壁垒，使用SpreadJS定制化开发文档协同办公系统&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，&lt;/p&gt;
&lt;p&gt;没有哪个寒冬不可逾越，&lt;/p&gt;
&lt;p&gt;没有哪个春天不会来临，&lt;/p&gt;
&lt;p&gt;让我们携手共克时艰，&lt;/p&gt;
&lt;p&gt;待春暖花开，我们一起去吃热干面火锅烧烤麻辣烫奶茶布丁冰淇淋糯米团子过桥米线灌汤包鸡蛋仔……&lt;/p&gt;
</description>
<pubDate>Wed, 12 Feb 2020 00:45:00 +0000</pubDate>
<dc:creator>葡萄城技术团队</dc:creator>
<og:description>2020年开春，新冠肺炎肆虐，为了切实落实疫情防控，保障业务有序开展，各大企业纷纷出台延期复工政策，被动开启【远程办公】模式。 每一次大的疫情都将深刻改变世界。这也让人不禁好奇：当疫情过后，远程办公能</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/powertoolsteam/p/12297746.html</dc:identifier>
</item>
<item>
<title>C语言寒假大作战03 - 李文威</title>
<link>http://www.cnblogs.com/liwenweiboy/p/12287526.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liwenweiboy/p/12287526.html</guid>
<description>&lt;h3 id=&quot;表头&quot;&gt;1.表头&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2.969262295082&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;1.0769230769231&quot;&gt;&lt;td&gt;这个作业要求在哪里&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://edu.cnblogs.com/campus/zswxy/SE2019-3/homework/10266&quot;&gt;C语言寒假大作战03&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;这个作业的目标在哪&lt;/td&gt;
&lt;td&gt;学习rand函数&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;作业正文&lt;/td&gt;
&lt;td&gt;使用上次作业的菜单框架，并在其基础上用rand函数随机生成增加各年级题目&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;其它参考文献&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.runoob.com/cprogramming/c-function-rand.html&quot;&gt;随机数rand&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;设计思路和遇到的问题&quot;&gt;2.设计思路和遇到的问题&lt;/h3&gt;
&lt;h4 id=&quot;请写上你的心路历程和程序设计思路并在其中写下你遇到的问题&quot;&gt;请写上你的心路历程和程序设计思路，并在其中写下你遇到的问题&lt;/h4&gt;
&lt;p&gt;首先感觉就是难度增加了不少！！！&lt;br/&gt;就是在上一次代码的基础上增加了rand随机函数，混合运算有点难搞。&lt;br/&gt;代码非常长，到处出现一些大大小小的错误，拼写错误，函数使用方面&lt;br/&gt;还要去想到取余，否则数字巨大。&lt;/p&gt;
&lt;h3 id=&quot;程序结果截图不少&quot;&gt;3.程序结果截图不少&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142244672-2106019142.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142257270-140988008.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142310039-985856453.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;程序代码&quot;&gt;4.程序代码&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142822296-1544981778.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142843365-1818439606.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142902366-1305437590.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211142917558-510427627.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;gitee上传截图与链接&quot;&gt;5.Gitee上传截图与链接&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211154103622-1800071133.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1809424/202002/1809424-20200211153351908-888961029.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;码云地址：Gitee.com &lt;a href=&quot;https://gitee.com/wen_wei_li/dashboard&quot; class=&quot;uri&quot;&gt;https://gitee.com/wen_wei_li/dashboard&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 12 Feb 2020 00:34:00 +0000</pubDate>
<dc:creator>李文威</dc:creator>
<og:description>1.表头 |这个作业属于哪个课程| &amp;quot;班级链接&amp;quot; | | | | |这个作业要求在哪里| &amp;quot;C语言寒假大作战03&amp;quot; | |这个作业的目标在哪|学习rand函数|</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/liwenweiboy/p/12287526.html</dc:identifier>
</item>
<item>
<title>数百个 HT 工业互联网 2D 3D 可视化应用案例分享 - 2019 篇 - HT学习笔记</title>
<link>http://www.cnblogs.com/htdaydayup/p/12297734.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/htdaydayup/p/12297734.html</guid>
<description>&lt;p&gt;继《&lt;a href=&quot;https://mp.weixin.qq.com/s/bt7j2I5b2dm2H8tilfD1cg&quot;&gt;分享数百个 HT 工业互联网 2D 3D 可视化应用案例&lt;/a&gt;》2018 篇，图扑软件定义 2018 为国内工业互联网可视化的元年后，2019 年里我们与各行业客户进行了更深度合作，拓展了&lt;a href=&quot;http://www.hightopo.com/&quot;&gt; HT for  Web&lt;/a&gt; 在更多新领域的应用，&lt;a href=&quot;http://www.hightopo.com/&quot;&gt;图扑软件&lt;/a&gt;作为在工业可视化领域的一线重度参与者，我们觉得有必要将该话题作为系列文章，在此对 2019 年做个总结回顾和分享，依然希望：激发行业和学术工作者对可视化的深度思考，为推进国内工业互联网发展出份薄力！&lt;/p&gt;
&lt;p&gt;2019 我们更新了数百个工业互联网2D/3D可视化案例集：&lt;a href=&quot;http://www.hightopo.com/demos/index.html&quot;&gt;http://www.hightopo.com/demos/index.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-4.33.31-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1105&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-4.33.31-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-08 at 4.33.31 PM&quot; width=&quot;2383&quot; height=&quot;1177&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 交互拆解发动机引擎  &lt;a href=&quot;https://hightopo.com/demo/engine/&quot;&gt;https://hightopo.com/demo/engine/&lt;br/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/engine.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1208&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/engine.jpg&quot; alt=&quot;engine&quot; width=&quot;1691&quot; height=&quot;888&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 病毒模拟视觉试验台  &lt;a href=&quot;https://mp.weixin.qq.com/s/tihkEPb3w9O9ciuIQlGsFw&quot;&gt;https://mp.weixin.qq.com/s/tihkEPb3w9O9ciuIQlGsFw&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/HIV.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1188&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/HIV.jpg&quot; alt=&quot;HIV&quot; width=&quot;1688&quot; height=&quot;923&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 科技感风机：&lt;a href=&quot;https://mp.weixin.qq.com/s/DB43Ye-CdcBCWTiIaxuSIg&quot;&gt;https://mp.weixin.qq.com/s/DB43Ye-CdcBCWTiIaxuSIg&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-2.50.09-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1181&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-2.50.09-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 2.50.09 PM&quot; width=&quot;1679&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 城市建筑群：&lt;a href=&quot;https://mp.weixin.qq.com/s/L48aQPqYkS_EAqpDO1tWKw&quot;&gt;https://mp.weixin.qq.com/s/L48aQPqYkS_EAqpDO1tWKw&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-2.58.27-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1182&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-2.58.27-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 2.58.27 PM&quot; width=&quot;1638&quot; height=&quot;926&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D WebVR 虚拟现实仿真培训 &lt;a href=&quot;https://mp.weixin.qq.com/s/vpR7p6qZafLtWYvMZNMO5A&quot;&gt;https://mp.weixin.qq.com/s/vpR7p6qZafLtWYvMZNMO5A&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/webvr.gif&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1183&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/webvr.gif&quot; alt=&quot;webvr&quot; width=&quot;800&quot; height=&quot;399&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;继去年图扑与三一合作的在挖机散点图在《&lt;a href=&quot;https://v.youku.com/v_show/id_XNDA4MjkyNDUwNA==.html&quot;&gt;智造将来 第一季&lt;/a&gt;》登陆浙江卫视后，2019 年图扑合作伙伴又有多个项目登陆央视 CCTV1、CCTV2 和 CCTV9 等电视节目：&lt;/p&gt;
&lt;p&gt;1、图扑 HT 与美的合作的智慧楼宇管理系统(M-BMS)，登陆 CCTV1 的《&lt;a href=&quot;http://tv.cctv.com/v/v1/VIDEt5AlMb3ivjicrj4qEC7E190907.html&quot;&gt;机智过人 第三季&lt;/a&gt;》智能温控系统一键遥控 ，一年四季温度如春。美的中央空调携同中国建筑科学研究院建筑环境与节能研究院的副主任魏峥博士一起见证“大型公共建筑制冷能效提升30%的目标”的节能测试。系统针对楼宇设备打造的自动化管理平台，采用最先进的技术、全新的软件架构和专利功能，通过优化楼宇的控制从而优化空调能效和健康舒适运行效果，更好的进行设备控制，实现楼宇的高效、舒适、节能和健康环保的理念。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/eb57d143f27975b1ae73f320aee88d79.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1130&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/eb57d143f27975b1ae73f320aee88d79.jpg&quot; alt=&quot;eb57d143f27975b1ae73f320aee88d79&quot; width=&quot;1080&quot; height=&quot;674&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;美的智慧楼宇管理系统(M-BMS)系统还包含空调通风、照明、给排水、电梯等系统，能实现远程楼宇自动化操作，针对不同形式的暖通系统机房，提供丰富的智能控制逻辑，通过监测系统状态及能耗，进行节能优化控制，实现建筑舒适度提升20%以上，用电量减少30%以上，设备管理人员减少50%以上。对楼宇物业的工作人员来说，他们不用再驻守中控室，通过手机便可实现在远程自如掌握大楼的通风、空调、供暖、照明等系统的运行状态。在当前疫情高发的特殊时期，美的M-BMS系统可以实现自动全新风+无接触控制，通过一键开启全楼宇健康新风模式实现空调通风系统的健康安全运行，从而改善室内空气品质，防止病毒在办公区域传播，最大限度保护人们的身体健康，保障生产、工作和生活的正常秩序。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG30.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1120&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG30.jpeg&quot; alt=&quot;WechatIMG30&quot; width=&quot;1978&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG34.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1117&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG34.jpeg&quot; alt=&quot;WechatIMG34&quot; width=&quot;1862&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、图扑 HT 与上海程析合作的透明工厂 MES (Manufacturing Execution System 制造企业生产过程执行管理系统)项目，登陆 CCTV2 的《&lt;a href=&quot;http://app.cctv.com/special/cbox/detail/index.html?guid=2871eb885d824cb2a715abba90daf7c7#0&quot;&gt;正点财经节目&lt;/a&gt;》，智能供应链为企业降本增效，助力国网智慧供应链，为打造智能工厂树立行业新高度。2019年，国家电网有限公司积极落实中央“在现代供应链领域培育新动能”的决策部署，打造现代智慧供应链，秉承“开放、共享、合作、共赢”理念，启动开展了电工装备智慧物联平台（EIP）建设。平台建设在相关政府部门指导下，基于互联网和物联网技术，实现电网企业、电工装备制造商、第三方服务机构互联互通和信息共享，打造“透明工厂”，通过开放共享，推动金融服务快速便捷融入实体经济，引领电工装备产业升级，推动产业创新发展，提升电工装备行业智能制造水平。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG29.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1108&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG29.jpeg&quot; alt=&quot;WechatIMG29&quot; width=&quot;1918&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG28.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1109&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG28.jpeg&quot; alt=&quot;WechatIMG28&quot; width=&quot;1958&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG27.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1110&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG27.jpeg&quot; alt=&quot;WechatIMG27&quot; width=&quot;1900&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3、图扑 HT 与东方国信在高炉炼铁工业组态领域合作的项目登陆 CCTV9 《&lt;a href=&quot;https://mp.weixin.qq.com/s/GkT3O7sYma4GDkCJMS7dOw&quot;&gt;纪录频道&lt;/a&gt;》。7月2日，由工业和信息化部与中央广播电视总台联合出品的中国首部大数据产业题材纪录片《大数据时代》第2集播出，报道了东方国信工业互联网平台炼铁大数据实现高炉数字化改造的卓越贡献。传统工业企业数字化转型是工业转型升级的一个重要议题。虽然我国钢铁业产量已连续多年位居世界首位，但仍走在由大到强的发展阶段。东方国信全资子公司北科亿力一直致力于炼铁传感器、物联网、工业模型软件、专家系统、企业级炼铁大数据平台以及行业级工业互联网平台整体解决方案的研发和推广。目前已完成国内260座高炉的数字化和智能化落地，并推动炼铁大数据平台在俄罗斯、越南、伊朗、印尼等“一带一路”国家钢铁企业中应用，单座高炉年降本增效超2400万元/年，实现了大数据、机理模型、人工智能和传统制造业的深度融合，是智能+工业的典型应用。 &lt;a href=&quot;http://www.hightopo.com/demo/large-screen-puddling/&quot;&gt;http://www.hightopo.com/demo/large-screen-puddling/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG35.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1123&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG35.jpeg&quot; alt=&quot;WechatIMG35&quot; width=&quot;1876&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年图扑与和三一的合作，从宏观全局挖机散点图，逐步深入到单台挖机的信息运维监控，现在已稳定接入 24 万台挖掘机，每天的工况数据达到 3 亿条，一年数据量高大 30TB，设计风格也进一步让工业走向科幻效果，DC/OS案例《&lt;a href=&quot;https://mp.weixin.qq.com/s/SPjBatSfioCp-5mCNL4AFA&quot;&gt;D2iQ助力三一重工洞察海量工业大数据，实现工业物联网转型&lt;/a&gt;》介绍了DC/OS如何助力三一重工实现工业互联网工业大数据战略。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.56.14-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1167&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.56.14-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 12.56.14 AM&quot; width=&quot;1196&quot; height=&quot;1306&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年图扑努力打造有图扑特色的 3D 数据中心可视化系统，成功实施了更多数据中心项目&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-1.26.33-AM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1171&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-1.26.33-AM.png&quot; alt=&quot;Screen Shot 2020-02-09 at 1.26.33 AM&quot; width=&quot;765&quot; height=&quot;1236&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.28.24-PM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1217&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.28.24-PM.png&quot; alt=&quot;Screen Shot 2020-02-09 at 11.28.24 PM&quot; width=&quot;1080&quot; height=&quot;538&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 图扑与合作伙伴成功实施了更多的动车站、地铁站和高速隧道等道桥隧领域的 3D 可视化系统&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-10.43.04-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1210&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-10.43.04-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 10.43.04 PM&quot; width=&quot;773&quot; height=&quot;1234&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-1.54.23-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1245&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-1.54.23-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 1.54.23 AM&quot; width=&quot;1098&quot; height=&quot;583&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年时值正泰成立35周年之际，图扑 HT 与正泰集团合作了大屏展示于九月的《&lt;a href=&quot;https://mp.weixin.qq.com/s/PQxYnqBGmdhdDWj5wlMUPA&quot;&gt;国际工业与能源物联网创新发展大会&lt;/a&gt;》，当前以大数据、云计算、人工智能、物联网、5G等为代表的新一代信息技术方兴未艾。积极推动信息技术与实体经济融合，加快制造业转型升级，大力发展新兴产业，是实现经济高质量发展的必由之路。此次大会以“智慧能源、物联世界”为主题，探索物联网技术与工业能源的深度融合，很有意义。与此同时，一场“黑科技”元素满满的物联网应用和产品展览展示在温州国际会展中心拉开序幕。展会面积达到7000平方米，分设正泰云、智慧新能源、智慧电力、智慧工业、智能制造、智慧城市、智慧家居、新材料新技术新动能、联通展区、电信展区、移动展区、铁塔展区等12个主题展区。&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG36.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1137&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG36.jpeg&quot; alt=&quot;WechatIMG36&quot; width=&quot;1324&quot; height=&quot;988&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-10.53.29-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1213&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-10.53.29-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 10.53.29 PM&quot; width=&quot;1624&quot; height=&quot;1108&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG42.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1132&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG42.jpeg&quot; alt=&quot;WechatIMG42&quot; width=&quot;1320&quot; height=&quot;988&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;智慧水务领域图扑基于 HTML5  的 Canvas 2D 和 WebGL 3D 可视化技术，将 HT 成功应用于《&lt;a href=&quot;https://mp.weixin.qq.com/s/73vCRjbTjzDHVQCQP4xhVQ&quot;&gt;深水光明水务公司的智慧水务系统&lt;/a&gt;》，加快了智慧水务建设步伐，对传统水厂进行智慧化改造，建立全流程自动化控制、运维数字化管理、资产全生命周期管理、一体化安全管控的智慧水厂。2019年，光明区供水总量达1.23亿立方米，同比上升7. 52%；售水量1.12亿立方米，同比上升8.01%；出厂水、管网水水质合格率达100%。2019年，深水光明水务公司在推进智慧水务建设的过程中，重点实施智慧水厂建设。在甲子塘水厂和光明水厂先后完成了智慧水厂硬件安装调优、自控调试、安防联动调试、智能算法实验、智慧平台联调等一系列工作，初步实现了水厂的自动化、智能化运行和数字化管理，水厂运营更加安全、优质和高效，努力打造智慧水务样板。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG47.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1142&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG47.jpeg&quot; alt=&quot;WechatIMG47&quot; width=&quot;1918&quot; height=&quot;1070&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG46.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1143&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG46.jpeg&quot; alt=&quot;WechatIMG46&quot; width=&quot;1916&quot; height=&quot;1068&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG44.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1145&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG44.jpeg&quot; alt=&quot;WechatIMG44&quot; width=&quot;1914&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑与伙伴合作的“智慧排水”综合管控平台，也成功实施于《&lt;a href=&quot;https://mp.weixin.qq.com/s/J2TgNl9dlEUEkevcMnEWJg&quot;&gt;义乌水务集团排水公司&lt;/a&gt; 》。排水公司立足义乌市污水治理实际，创新污水治理模式，建立金华市首个“城乡一体化”的智慧排水综合管控平台，对污水收集、输送、处理、中水回用等各环节进行智能化管控。实现“一个平台”综合管控污水厂、泵站、配套管网、在线监测点、源头监管、内河水系激活等排水要素，实时查看液位、水质、设施运行、事件上报处理等情况，达到污水系统信息化管理、智能化管控、高效化运维目标。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG48.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1149&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG48.jpeg&quot; alt=&quot;WechatIMG48&quot; width=&quot;1080&quot; height=&quot;674&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG49.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1148&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG49.jpeg&quot; alt=&quot;WechatIMG49&quot; width=&quot;1440&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年图扑 HT 增强了基于 WebGL 的 3D GIS 技术在水利、化工和矿山等领域的实施应用，在传统建模基础上引入了航拍的倾斜摄影3D建模方案，解决了如化工园区、矿山这种场景面积大，传统 3dsmax maya 之类工具手工实景建模工作量巨大的问题，通过无人机航拍，加后期数据处理，无缝融合 HT 原有 3D 模型，很好的解决了宏观和微观融合一体化的需求。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.12.39-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1228&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.12.39-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 12.12.39 AM&quot; width=&quot;1512&quot; height=&quot;929&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑软件与远大合作的《&lt;a href=&quot;https://mp.weixin.qq.com/s/igPpM92HigHClYtFUfe1HQ&quot;&gt;飞翔化工园区安全环保应急一体化平台&lt;/a&gt;》获省领导肯定，系统使用最新的无人机 3D 建模和 WebGIS 技术展示园区整体一张图、动态展示卡口、边界、重大危险源的安全参数信息，作为园区安全应急指挥的重要组成部分。在安全方面，系统集成了两重点一重大、危化品车辆、事故管理、应急管理、企业安全生成全流程管理等管理系统。在环保方面，系统集成了废水污染源、烟气污染源、环境空气、地表水、LDAR、一企一档、一园一档、特征污染物因子等监测监控管理系统。在能耗方面，园区整体加装改造了智能化电表、水表、气表，实现了园区能耗的综合性管理。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.39.05-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1165&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.39.05-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 12.39.05 AM&quot; width=&quot;678&quot; height=&quot;937&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;矿业领域，图扑 HT 与合作伙伴成功实施了紫金矿业全球多国矿山站点的 3D 可视化综合运维系统&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-1.10.33-AM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1169&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-1.10.33-AM.png&quot; alt=&quot;Screen Shot 2020-02-09 at 1.10.33 AM&quot; width=&quot;829&quot; height=&quot;617&quot;/&gt;&lt;br/&gt;&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.31.55-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1233&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.31.55-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 12.31.55 AM&quot; width=&quot;1023&quot; height=&quot;294&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;船港码头 3D 可视化监控&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-1.26.58-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1240&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-1.26.58-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 1.26.58 AM&quot; width=&quot;1229&quot; height=&quot;681&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年图扑更多项目落地到工业的一线工厂现场，如采用 UWB 技术的钢厂 3D 室内实时定位系统，工厂人员定位系统可对工人定位实时定位，方便监管人员随时了解定位区域内不同类型人员的实时状态，可以分区域统计人数。围栏报警，系统具备自定义围栏区域设置功能，当设置好虚拟的电子围栏后，当工人进入电子围栏立即发送报警信息到后台系统，方便工厂的管理人员第一时间了解有哪些人进入了工厂的危险区域。轨迹回放，工厂人员定位系统自动保存定位区域内不同类型人员的运动轨迹，监管人员可以通过姓名或卡号查看人员在某个时间段内的运动轨迹，运动轨迹数据保存时长可根据客户需求定制。 &lt;a href=&quot;http://www.hightopo.com/demo/indoor-position/&quot;&gt;http://www.hightopo.com/demo/indoor-position/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-8.34.00-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1202&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-8.34.00-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 8.34.00 PM&quot; width=&quot;1368&quot; height=&quot;772&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑与北京某设计研究院合作的 3D 可视化仓库管理系统 WMS (Warehouse Management System)&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/wms.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1215&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/wms.jpg&quot; alt=&quot;wms&quot; width=&quot;1806&quot; height=&quot;667&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑 HT 实施了武汉某 SMT 贴片机生产线 3D 可视化仿真运维系统 &lt;a href=&quot;http://www.hightopo.com/demo/paster-production-line/&quot;&gt;http://www.hightopo.com/demo/paster-production-line/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-9.34.26-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1204&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-9.34.26-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 9.34.26 PM&quot; width=&quot;1647&quot; height=&quot;752&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑设计实施了某水泥厂生产流水线 3D 大屏监控系统&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-9.24.37-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1205&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-9.24.37-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 9.24.37 PM&quot; width=&quot;1415&quot; height=&quot;634&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑 HT 在智慧能源精细化管控平台的 3D 可视化应用&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-10.29.31-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1207&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-10.29.31-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 10.29.31 PM&quot; width=&quot;1244&quot; height=&quot;379&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑在北京软博会上展示的数字孪生 WebVR 3D 虚拟工厂体验&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG140.jpeg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1206&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/WechatIMG140.jpeg&quot; alt=&quot;WechatIMG140&quot; width=&quot;1440&quot; height=&quot;1080&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在电力领域，2019 年图扑软件参与的《&lt;a href=&quot;https://mp.weixin.qq.com/s/sbgM-vfgbuN83OLjKGAdiQ&quot;&gt;国网上海虚拟电厂&lt;/a&gt;》系统投入试运行。12月5日，国网上海市电力公司组织开展迎峰度冬需求响应暨虚拟电厂运营项目试点工作，共有226个客户8.7万千瓦负荷资源从单纯的用电客户变为一个个潜力巨大的虚拟电厂，直接参与大电网的调度，推动城市用能更高效、更经济。本次虚拟电厂电力负荷交易和调配均通过国网上海电力虚拟电厂运营体系完成，标志着该体系投入试运行。&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.37.18-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1235&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.37.18-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 12.37.18 AM&quot; width=&quot;1031&quot; height=&quot;589&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年图扑也参与了多个智慧电厂项目，智慧火电厂解决方案通过工业互联网技术、智能数字传感技术、安全控制技术、大数据挖掘技术、三维/VR虚拟化技术等先进技术手段，实现智慧基建、智慧运行、智慧检修、智慧安全、智慧环保、智慧管理六大功能模块。通过将自动化与信息化的深度融合，为发电企业提高设备可靠性、降低安全风险、推进经营优化奠定基础，帮助发电企业实现更可靠、更安全、更经济、更环保、更高效的企业发展目标。&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.56.08-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1225&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.56.08-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 11.56.08 PM&quot; width=&quot;821&quot; height=&quot;857&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;泛在电力物联网的概念在 2019 年也开始实现了各种落地的应用。泛在电力物联网，就是围绕电力系统各环节，充分应用移动互联、人工智能等现代信息技术、先进通信技术，实现电力系统各环节万物互联、人机交互，具有状态全面感知、信息高效处理、应用便捷灵活特征的智慧服务系统，包含感知层、网络层、平台层、应用层四层结构。国网公司做出两个阶段的战略安排：到2021年初步建成泛在电力物联网，基本实现业务协同和数据贯通，初步实现统一物联管理，各级智慧能源综合服务平台具备基本功能，支撑电网业务与新兴业务发展。到2024年建成泛在电力物联网，全面实现业务协同、数据贯通和统一物联管理，公司级智慧能源综合服务平台具备强大功能，全面形成共建共治共享的能源互联网生态圈。2019 年图扑成功实施了多个城市的数字孪生泛在变电站 3D 可视化监控运维项目&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.09.45-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1162&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.09.45-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 12.09.45 AM&quot; width=&quot;1006&quot; height=&quot;1021&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图扑设计实施了某电力监控系统网络安全态势感大屏项目&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.32.53-PM1.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1221&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.32.53-PM1.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 11.32.53 PM&quot; width=&quot;900&quot; height=&quot;762&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.44.20-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1223&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-11.44.20-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 11.44.20 PM&quot; width=&quot;1127&quot; height=&quot;554&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;智慧园区和智能楼宇方面，2019 年图扑 HT 在设计上，更多采用了极简线框模式渲染出科技感风格，这样的设计能减少实施成本，有利于 Web 浏览器的呈现性能，同时能减少不必要信息的干扰，如 《&lt;a href=&quot;http://www.hightopo.com/blog/621.html&quot;&gt;基于 HTML5 的 WebGL 楼宇自控 3D 可视化监控&lt;/a&gt;》所言 HT 这种轻量化的方式比传统 BIM 方案更直观、实用、还漂亮！&lt;a href=&quot;http://www.hightopo.com/demo/city/&quot;&gt;http://www.hightopo.com/demo/city/&lt;/a&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.26.05-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1230&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-12.26.05-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 12.26.05 AM&quot; width=&quot;1700&quot; height=&quot;855&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;某公安 3D 智能运维分析管理平台&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-1.04.56-AM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1238&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-10-at-1.04.56-AM.jpg&quot; alt=&quot;Screen Shot 2020-02-10 at 1.04.56 AM&quot; width=&quot;901&quot; height=&quot;513&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;北京经开园区 3D 可视化&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.02.58-AM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1160&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-12.02.58-AM.png&quot; alt=&quot;Screen Shot 2020-02-09 at 12.02.58 AM&quot; width=&quot;1126&quot; height=&quot;645&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;北京大兴机场 3D 可视化项目&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.25.23-PM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1156&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.25.23-PM.png&quot; alt=&quot;Screen Shot 2020-02-08 at 10.25.23 PM&quot; width=&quot;988&quot; height=&quot;495&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;楼宇照明 3D 可视化项目&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.28.25-PM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1157&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.28.25-PM.png&quot; alt=&quot;Screen Shot 2020-02-08 at 10.28.25 PM&quot; width=&quot;1023&quot; height=&quot;489&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;智能楼宇 3D 可视化项目&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.32.02-PM.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1158&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.32.02-PM.png&quot; alt=&quot;Screen Shot 2020-02-08 at 10.32.02 PM&quot; width=&quot;1276&quot; height=&quot;373&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上海当父母的同学应该熟悉下图右侧为著名的上海国妇婴医院，2019 年医疗信息化赛道的确再次热起，特别是最近新型冠状病毒肺炎（Novel coronavirus pneumonia）NCP 事件，让我们每个人都能意识到智能医院将让医疗流程更便捷、医疗质量更安全有效、患者就医感受更好，实现医疗资源共享的重要性。智慧医疗的核心是便捷、规范、精准，这赛道从医药研发、到医疗设备管理、到各种流程优化还有很长的路要走，图形可视化技术在这领域的方方面面都能发挥出作用，如最近程序员贡献的《&lt;a href=&quot;http://mp.weixin.qq.com/s/TX63K7mRJx6A_F7ud1aQFQ&quot;&gt;疫情仿真传播图&lt;/a&gt;》&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.30.07-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1151&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-10.30.07-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-08 at 10.30.07 PM&quot; width=&quot;956&quot; height=&quot;766&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于这次疫情图扑团队也准备了例子，以便大家能方便的查看疫情实时数据（持续完善中，盼疫情早日得到控制，愿该例子早日不再受关注）：&lt;a href=&quot;http://www.hightopo.com/demo/coronavirus/&quot;&gt;http://www.hightopo.com/demo/coronavirus/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-6.01.15-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1195&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-6.01.15-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 6.01.15 PM&quot; width=&quot;1385&quot; height=&quot;817&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 无人机 &lt;a href=&quot;https://mp.weixin.qq.com/s/iyhX_pwlgCeHiNC1-laBBA&quot;&gt;https://mp.weixin.qq.com/s/iyhX_pwlgCeHiNC1-laBBA&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-7.53.50-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1197&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-7.53.50-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 7.53.50 PM&quot; width=&quot;1430&quot; height=&quot;802&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 医疗物流系统 &lt;a href=&quot;https://mp.weixin.qq.com/s/Kdy7DU40id3tgrr5j_TBWQ&quot;&gt;https://mp.weixin.qq.com/s/Kdy7DU40id3tgrr5j_TBWQ&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-5.45.22-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1190&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-5.45.22-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 5.45.22 PM&quot; width=&quot;1476&quot; height=&quot;859&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 太阳系可视化 &lt;a href=&quot;https://mp.weixin.qq.com/s/-Y7skWHbimQAzju-lwiIWA&quot;&gt;https://mp.weixin.qq.com/s/-Y7skWHbimQAzju-lwiIWA&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-3.57.27-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1186&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-3.57.27-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 3.57.27 PM&quot; width=&quot;1658&quot; height=&quot;809&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 挖掘机 &lt;a href=&quot;https://mp.weixin.qq.com/s/aT1ZIFKRGpH3Cp5h_4MM2g&quot;&gt;https://mp.weixin.qq.com/s/aT1ZIFKRGpH3Cp5h_4MM2g&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-8.06.32-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1200&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-8.06.32-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 8.06.32 PM&quot; width=&quot;1338&quot; height=&quot;772&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3D 风力发电场 &lt;a href=&quot;https://mp.weixin.qq.com/s/zqG_yv4GPtswl7n2Mw4cFw&quot;&gt;https://mp.weixin.qq.com/s/zqG_yv4GPtswl7n2Mw4cFw&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-5.55.55-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1193&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-09-at-5.55.55-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-09 at 5.55.55 PM&quot; width=&quot;1452&quot; height=&quot;640&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2019 年图扑软件的微信公众号发布了多篇文章，分享了各种案例实现过程的 23D 设计和 Web 开发经验，我们会持续更新客官们感兴趣的内容，欢迎关注和建议！&lt;br/&gt;&lt;a href=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-5.13.18-PM.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-1107&quot; src=&quot;http://www.hightopo.com/blog/wp-content/uploads/2020/02/Screen-Shot-2020-02-08-at-5.13.18-PM.jpg&quot; alt=&quot;Screen Shot 2020-02-08 at 5.13.18 PM&quot; width=&quot;1010&quot; height=&quot;925&quot;/&gt;&lt;br/&gt;&lt;/a&gt;求贤若渴，诚意求扰：&lt;a href=&quot;http://www.hightopo.com/joinus.html&quot;&gt;http://www.hightopo.com/joinus.html&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 12 Feb 2020 00:31:00 +0000</pubDate>
<dc:creator>HT学习笔记</dc:creator>
<og:description>继《分享数百个 HT 工业互联网 2D 3D 可视化应用案例》2018 篇，图扑软件定义 2018 为国内工业互联网可视化的元年后，2019 年里我们与各行业客户进行了更深度合作，拓展了&amp;#160;H</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/htdaydayup/p/12297734.html</dc:identifier>
</item>
<item>
<title>Java面试技巧—如何自我介绍 - yoodb</title>
<link>http://www.cnblogs.com/MrYoodb/p/12297248.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/MrYoodb/p/12297248.html</guid>
<description>&lt;p&gt;　　在企业面试环节中“自我介绍”这个老生常谈的话题就不用多说什么了，面试官必定会问的。那么如何在自我介绍的时候就能够打动面试官，吸引面试官对面试者的兴趣？如何进行自我介绍比较好？有没有什么方式方法呢？当然是有的。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/tJdrRlG3mibxRTDFrLPNCEZsoWyARmsbIWQ1wEQQXBNOz9b6Zsydj3r6PxYqPMDsEyMc5bhcx5q1HuNe4P3Kic2w/640?wx_fmt=jpeg&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; data-bd-imgshare-binded=&quot;1&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;01题目&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;为什么&lt;/strong&gt;面试官&lt;/span&gt;让面试者自我介绍？&lt;/p&gt;
&lt;p&gt;通过多年的被面试经验和面试别人的经验，在小编看来原因无非是其以下几点。&lt;/p&gt;
&lt;p&gt;1）面试官想对面试者有个初步的了解；&lt;/p&gt;
&lt;p&gt;2）面试官争取在仅有的时间内快速浏览简历；&lt;/p&gt;
&lt;p&gt;3）面试官通过让面试者自我介绍来缓冲一下面试气氛，使面试者不过于太紧张影响其发挥能力。&lt;/p&gt;
&lt;p&gt;注意：第一点需要重点关注一下，给自己制定一套标准的面试话语；而第二点和第三点就不用过多的解释了。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;02题目&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;如何进行自我介绍？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1）面试官您好，我叫素文宅博客网站（面试者姓名），本科毕业（211或985重点突出一下），来自于Java精选公众号（省份、市区）。从网上看到公司招聘的这个职位，觉得自己比较适合公司的岗位，对自己的发展也有帮助，所以来这里争取下这份工作。&lt;/p&gt;
&lt;p&gt;2）接下来主要讲解一下自己的核心竞争力（最擅长的技能、最深入研究的知识领域、最积极的部分）和闪光点（做过最成功的事，主要的成就）。核心就是要体现自己胜任这份工作（介绍时候要自然有底气，合情合理，面试前要充分准备好）。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/tJdrRlG3mibxRTDFrLPNCEZsoWyARmsbIkXlYCMO3p9cZxRQ9awpn7l5TqYaBZ5EQp67uzfxjekU4Wshyy320tQ/640?wx_fmt=jpeg&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; data-bd-imgshare-binded=&quot;1&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;初级Java工程师&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　面试初级Java工程师岗位时，首先应该重点突出一下自身的知识结构，因为面试初级岗位的应聘者往往没有实际工作经验，因此要强调自身的知识结构体系。如果是计算机相关专业的应届生，那么一定要首先突出描述自己的学历背景；因为学历背景是自身知识结构一个有力的“敲门砖”，如果是非计算机专业的毕业生，则要重点突出说一下自身的学习经历，强调自己的学习能力，与此同时突出一下自己的动手和实践能力。最后不管是计算机专业还是非计算机专业都要重点描述一下掌握了哪些Java技术，比如开源框架、数据库、大数据、消息队列、缓存等等。&lt;/p&gt;
&lt;p&gt;总的来说，初级Java工程师岗位的面试需要在自我介绍中突出三点内容，其一是自身的知识结构；其二是独立开发能力；其三是学习能力，这三个方面的表述往往能够决定最终的面试结果。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;中高级Java工程师&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　面试中高级Java工程师岗位时，首先应该重点强调一下自己的项目开发经验，从技术选型、方案设计到具体编码都要有一个清晰的思路来描述，在描述过程中要把自己的开发经验突出一下，比如经历了哪些不同的开发场景，解决了哪些疑难问题等，如果具有较多的行业经验，也一定要突出一下（多行业经验有时未必是好事，建议挑重点行业或者面试企业对口行业）。&lt;/p&gt;
&lt;p&gt;　　面试中高级Java工程师岗位时虽然比较看重经验，但同时也比较看重应聘者的沟通交流能力，因为不少开发问题说到底就是沟通不清楚导致的问题，沟通能力较强的程序员往往能够更高效地完成工作任务。&lt;/p&gt;
&lt;p&gt;3）先介绍到这里，面试官看看您还有什么问题，我可以再补充。&lt;/p&gt;
&lt;p&gt;4）在最后自我介绍结束时要说谢谢，任何面试官都喜欢有礼貌的人！&lt;/p&gt;
&lt;p&gt;注意：切记不要自曝其短（说自己的缺点），在进行自我介绍的时候千万不要和简历有冲突！（有的会说简历未更新，那也是面试者自身问题）&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;03题目&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;你有什么优劣势？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这个问题在企业面试过程中被问到的概率还是相当大的！面试官提问“你有什么优劣势？”问题主要是了解以下几方面：&lt;/p&gt;
&lt;p&gt;1）面试者是否对自己的能够正确的估价和定位？&lt;/p&gt;
&lt;p&gt;2）面试者的缺点和弱点，方面问题是否比较突出，能否胜任本公司岗位要求。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/tJdrRlG3mibxRTDFrLPNCEZsoWyARmsbI75h0SpCoI2uQhQkqMobjlCqibWVrNnjiayvCFsKfuibaEuJqcviaib3iavLQ/640?wx_fmt=jpeg&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; alt=&quot;&quot; data-bd-imgshare-binded=&quot;1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　应聘者应准备充足，在面试之前找出自申的3-5个优点，为每个优点找出几个例子，最好来自学习、工作和生活等三个方面，在这3-5个优点之中，尽可能精选出一两个和所申请职位最吻合的优点。当然也不要全都有帮助，那样显得太假。&lt;/p&gt;
&lt;p&gt;　　缺点方面在跟面试官表述自己的缺点时，既要结合本人实际，又要选择跟应聘岗位没有多大影响的缺点，当然最好的情况是可以把缺点暗示成你的优点，但也不要太夸张，这样容易引起面试官反感。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自我阐述优劣势&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作为程序员，最重要的是能否给企业带来好处，解决项目上的技术问题，小编建议如下：&lt;/p&gt;
&lt;p&gt;1）优点方面尽量突出一些的（技术痴迷、学习能力强、为人谦和），但要注意不要浮夸吹嘘，那样反而把优点变成了缺点。&lt;/p&gt;
&lt;p&gt;2）劣势方面不是计算机专业可以（非计算机专业人员），但是对技术很是痴迷。关注公众号“Java精选”更多关于面试技巧、面试经验分享。&lt;/p&gt;
&lt;p&gt;注意事项：面试时面试官谈及个人缺点，最好的办法还是坦然地承认它，为自己的缺点辩驳也无济于事，重要的是如何让别人在感情上认同你谈及自身缺点的态度。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;04题目&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;你为什么选择我们公司？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　面试者针对“你为什么选择我们公司？”问题的回答“不为什么，因为贵公司以诚为本的价值观我很认同，而且贵公司给的薪酬也符合我的期待，所以我选择了贵公司，愿意与公司一同成长，一起进步”。对于这个问题，其实是面试官试图从中了解你求职的动机、愿望以及对此项工作的态度。&lt;/p&gt;
&lt;p&gt;1）面试前，应对应聘公司各方面，要了解详尽！至少要了解到行业、企业、岗位这三方面！最好要准备一些具体的数据和实例！&lt;/p&gt;
&lt;p&gt;2）面试时，可以将之前对公司的了解（行业、企业、数据、实例）结合自己的JAVA岗位，大略的说一遍，然后强调自己“觉得这个工作合适”即可。&lt;/p&gt;
&lt;p&gt;3）面试者如果对面试公司所属行业确实很喜欢，要说出自身对这个行业的认知程度。&lt;/p&gt;
</description>
<pubDate>Wed, 12 Feb 2020 00:09:00 +0000</pubDate>
<dc:creator>yoodb</dc:creator>
<og:description>在企业面试环节中“自我介绍”这个老生常谈的话题就不用多说什么了，面试官必定会问的。那么如何在自我介绍的时候就能够打动面试官，吸引面试官对面试者的兴趣？如何进行自我介绍比较好？有没有什么方式方法呢？当然</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/MrYoodb/p/12297248.html</dc:identifier>
</item>
<item>
<title>Redis系列(三)：Redis的持久化机制(RDB、AOF) - 申城异乡人</title>
<link>http://www.cnblogs.com/zwwhnly/p/12295692.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zwwhnly/p/12295692.html</guid>
<description>&lt;p&gt;本篇博客是Redis系列的第3篇，主要讲解下Redis的2种持久化机制：RDB和AOF。&lt;/p&gt;
&lt;p&gt;本系列的前2篇可以点击以下链接查看：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/zwwhnly/p/12185696.html&quot;&gt;Redis系列(一)：Redis简介及环境安装&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/zwwhnly/p/12216550.html&quot;&gt;Redis系列(二)：Redis的5种数据结构及其常用命令&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;为什么需要持久化&quot;&gt;1. 为什么需要持久化？&lt;/h2&gt;
&lt;p&gt;因为Redis是内存数据库，它将自己的数据存储在内存里面，一旦Redis服务器进程退出或者运行Redis服务器的计算机停机，Redis服务器中的数据就会丢失。&lt;/p&gt;
&lt;p&gt;为了避免数据丢失，所以Redis提供了持久化机制，将存储在内存中的数据保存到磁盘中，用于在Redis服务器进程退出或者运行Redis服务器的计算机停机导致数据丢失时，快速的恢复之前Redis存储在内存中的数据。&lt;/p&gt;
&lt;p&gt;Redis提供了2种持久化方式，分别为：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;RDB持久化&lt;/li&gt;
&lt;li&gt;AOF持久化&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;接下来，我们一一详解。&lt;/p&gt;
&lt;h2 id=&quot;rdb持久化&quot;&gt;2. RDB持久化&lt;/h2&gt;
&lt;p&gt;RDB持久化是将某个时间点上Redis中的数据保存到一个RDB文件中，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200205_163214.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;基于RDB持久化的上述性质，所以RDB持久化也叫做快照持久化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该文件是一个经过压缩的二进制文件，通过该文件可以还原生成RDB文件时Redis中的数据，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200205_163351.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建rdb文件&quot;&gt;2.1 创建RDB文件&lt;/h3&gt;
&lt;p&gt;Redis提供了2个命令来创建RDB文件，一个是SAVE，另一个是BGSAVE。&lt;/p&gt;
&lt;p&gt;SAVE命令会阻塞Redis服务器进程，直到RDB文件创建完毕为止，在服务器进程阻塞期间，服务器不能处理任何命令请求，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200205_173248.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;BGSAVE命令会派生出一个子进程，然后由子进程负责创建RDB文件，服务器进程（父进程）继续处理命令请求，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200205_174200.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;以上描述也是这２个命令的区别，&lt;strong&gt;这里是重点，面试经常会问到&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为BGSAVE命令可以在不阻塞服务器进程的情况下执行，所以推荐使用BGSAVE命令。&lt;/p&gt;
&lt;p&gt;我们可以手动执行该命令，如上面截图所示，但还是推荐设置下Redis服务器配置文件的save选项，让服务器每隔一段时间自动执行一次BGSAVE命令。&lt;/p&gt;
&lt;p&gt;我们可以通过save选项设置多个保存条件，只要其中任意一个条件被满足，服务器就会执行BGSAVE命令。&lt;/p&gt;
&lt;p&gt;save选项设置的默认条件如下所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;save 900 1&lt;/p&gt;
&lt;p&gt;save 300 10&lt;/p&gt;
&lt;p&gt;save 60 10000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200206_155708.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;默认的配置条件表示，只要满足以下3个条件中的任意1个，BGSAVE命令就会被执行：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;服务器在900s（即15分钟）之内，对数据库进行了至少1次修改&lt;/li&gt;
&lt;li&gt;服务器在300s（即5分钟）之内，对数据库进行了至少10次修改&lt;/li&gt;
&lt;li&gt;服务器在60s（即1分钟）之内，对数据库进行了至少10000次修改&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;当满足条件执行BGSAVE命令时，输出日志如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_220123.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;生成的RDB文件会根据Redis配置文件中的名称和路径来保存，相关的2个配置如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200206_170048.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最终生成的RDB文件如下所示（截图为本机Windows环境，Linux环境下路径会稍有不同）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200206_170407.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;载入rdb文件&quot;&gt;2.2 载入RDB文件&lt;/h3&gt;
&lt;p&gt;首先，我们要明确的是，载入RDB文件的目的是为了在Redis服务器进程重新启动之后还原之前存储在Redis中的数据。&lt;/p&gt;
&lt;p&gt;然后，Redis载入RDB文件并没有专门的命令，而是在Redis服务器启动时自动执行的。&lt;/p&gt;
&lt;p&gt;而且，Redis服务器启动时是否会载入RDB文件还取决于服务器是否启用了AOF持久化功能，具体判断逻辑为：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;只有在AOF持久化功能处于关闭状态时，服务器才会使用RDB文件来还原数据。&lt;/li&gt;
&lt;li&gt;如果服务器开启了AOF持久化功能，那么服务器会优先使用AOF文件来还原数据。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;以上判断逻辑如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200206_234825.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，Redis服务器的AOF持久化功能是关闭的，所以Redis服务器在启动时会载入RDB文件，&lt;/p&gt;
&lt;p&gt;启动日志如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200206_235557.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;服务器状态&quot;&gt;2.3 服务器状态&lt;/h3&gt;
&lt;p&gt;创建和载入RDB文件，可能存在的服务器状态有以下3种：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;当执行SAVE命令时，Redis服务器会被阻塞，此时客户端发送的所有命令请求都会被阻塞，只有在服务器执行完SAVE命令，重新开始接受命令请求之后，客户端发送的命令请求才会被处理。&lt;/li&gt;
&lt;li&gt;当执行BGSAVE命令时，Redis服务器不会被阻塞，Redis服务器仍然可以继续处理客户端发送的命令请求。&lt;/li&gt;
&lt;li&gt;服务器在载入RDB文件期间，会一直处于阻塞状态，直到RDB文件载入成功。&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;aof持久化&quot;&gt;3. AOF持久化&lt;/h2&gt;
&lt;p&gt;AOF持久化是通过保存Redis服务器所执行的写命令来记录数据库数据的，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_145826.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，AOF持久化功能是关闭的，如果想要打开，可以修改下图所示的配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_150829.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;举个例子，假设Redis中还没有存储任何数据，我们执行了如下所示的命令：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_153106.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后我们会发现Redis服务器生成了1个名为appendonly.aof的文件，打开该文件，我们可以看到上面执行的3个写命令都存储在该文件中：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_153504.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_153830.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;aof持久化的实现&quot;&gt;3.1 AOF持久化的实现&lt;/h3&gt;
&lt;p&gt;当AOF持久化功能处于打开状态时，Redis服务器在执行完一个写命令之后，会以协议格式（如上面截图中AOF文件里保存写命令的格式）将被执行的写命令追加到服务器状态的AOF缓冲区的末尾，然后Redis服务器会根据配置文件中appendfsync选项的值来决定何时将AOF缓冲区中的内容写入和同步到AOF文件里面。&lt;/p&gt;
&lt;p&gt;appendfsync选项有以下3个值：&lt;/p&gt;
&lt;ol&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;always&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;从安全性来说，always是最安全的（丢失数据最少），因为即使出现故障停机，数据库也只会丢失一个事件循环中所产生的命令数据。&lt;/p&gt;
&lt;p&gt;从效率来说，always的效率最慢，因为服务器在每个事件循环都要将AOF缓冲区中的所有内容写入到AOF文件，并且同步AOF文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.5&quot;&gt;
&lt;p&gt;everysec&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;从安全性来说，everysec模式下，即使出现故障停机，数据库只会丢失一秒钟的命令数据。&lt;/p&gt;
&lt;p&gt;从效率来说，everysec模式足够快，因为服务器在每个事件循环都要将AOF缓冲区中的所有内容写入到AOF文件，并且每隔一秒就要在子线程中对AOF文件进行同步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.5&quot;&gt;
&lt;p&gt;no&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;从安全性来说，no模式下，如果出现故障停机，数据库会丢失上次同步AOF文件之后的所有写命令数据，具有不确定性，因为服务器在每个事件循环都要将AOF缓冲区中的所有内容写入到AOF文件，至于何时对AOF文件进行同步，则由操作系统控制。&lt;/p&gt;
&lt;p&gt;从效率来说，no模式和everysec模式的效率差不多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;appendfsync选项的默认值是everysec，也推荐使用这个值，因为既保证了效率又保证了安全性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_170229.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;载入aof文件&quot;&gt;3.2 载入AOF文件&lt;/h3&gt;
&lt;p&gt;因为AOF文件包含了重建数据库所需的所有写命令，所以Redis服务器只要读入并重新执行一遍AOF文件里面保存的写命令，就可以还原Redis服务器关闭之前的数据。&lt;/p&gt;
&lt;p&gt;Redis读取AOF文件并还原数据库的详细步骤如下：&lt;/p&gt;
&lt;ol readability=&quot;1&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;创建一个不带网络连接的伪客户端&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;因为Redis的命令只能在客户端上下文中执行，而载入AOF文件时所使用的命令直接来源于AOF文件而不是网络连接，所以服务器使用了一个没有网络连接的伪客户端来执行AOF文件保存的写命令。&lt;/p&gt;
&lt;p&gt;伪客户端执行命令的效果和带网络连接的客户端执行命令的效果完全一样。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;从AOF文件中分析并读取出一条写命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;使用伪客户端执行被读取出的写命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;一直执行步骤2和步骤3，直到AOF文件中的所有写命令都被执行完毕。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;以上步骤如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_160515.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果Redis服务器开启了AOF持久化功能，那么Redis服务器在启动时会载入AOF文件，&lt;/p&gt;
&lt;p&gt;启动日志如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200208_161420.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;aof重写&quot;&gt;3.3 AOF重写&lt;/h3&gt;
&lt;p&gt;因为AOF持久化是通过保存被执行的写命令来记录数据库数据的，所以随着Redis服务器运行时间的增加，AOF文件中的内容会越来越多，文件的体积会越来越大，如果不做控制，会有以下2点坏处：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;过多的占用服务器磁盘空间，可能会对Redis服务器甚至整个宿主计算机造成影响。&lt;/li&gt;
&lt;li&gt;AOF文件的体积越大，使用AOF文件来进行数据库还原所需的时间就越多。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;举个例子，在客户端执行如下命令：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200209_162424.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了记录这个list键的状态，AOF文件就需要保存上面执行的6条命令。&lt;/p&gt;
&lt;p&gt;为了解决AO文件体积越来越大的问题，Redis提供了AOF文件重写功能，即Redis服务器会创建一个新的AOF文件来替代现有的AOF文件，新旧两个AOF文件所保存的数据库数据相同，但新AOF文件不会包含任何浪费空间的冗余命令，所以新AOF文件的体积通常会比旧AOF文件的体积要小很多。&lt;/p&gt;
&lt;h4 id=&quot;aof重写的实现原理&quot;&gt;3.3.1 AOF重写的实现原理&lt;/h4&gt;
&lt;p&gt;AOF文件重写并不需要对现有的AOF文件进行任何读取、分析或者写入操作，而是通过读取服务器当前的数据库数据来实现的。&lt;/p&gt;
&lt;p&gt;仍然以上面的list键为例，旧的AOF文件保存了6条命令来记录list键的状态，但list键的结果是“C” &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot;这样的数据，所以AOF文件重写时，可以用一条&lt;code&gt;RPUSH list “C” &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot;&lt;/code&gt;命令来代替之前的六条命令，这样就可以将保存list键所需的命令从六条减少为一条了。&lt;/p&gt;
&lt;p&gt;按照上面的原理，如果Redis服务器存储的键值对足够多，AOF文件重写生成的新AOF文件就会减少很多很多的冗余命令，进而大大减小了AOF文件的体积。&lt;/p&gt;
&lt;p&gt;综上所述，&lt;strong&gt;AOF文件重写功能的实现原理为：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先从数据库中读取键现在的值，然后用一条命令去记录键值对，代替之前记录这个键值对的多条命令。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;aof后台重写&quot;&gt;3.3.2 AOF后台重写&lt;/h4&gt;
&lt;p&gt;因为AOF文件重写会进行大量的文件写入操作，所以执行这个操作的线程将被长时间阻塞。&lt;/p&gt;
&lt;p&gt;因为Redis服务器使用单个线程来处理命令请求，所以如果由服务器进程直接执行这个操作，那么在重写AOF文件期间，服务器将无法处理客户端发送过来的命令请求。&lt;/p&gt;
&lt;p&gt;为了避免上述问题，Redis将AOF文件重写功能放到子进程里执行，这样做有以下2个好处：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;子进程进行AOF文件重写期间，服务器进程（父进程）可以继续处理命令请求。&lt;/li&gt;
&lt;li&gt;子进程带有服务器进程的数据副本，使用子进程而不是线程，可以在避免使用锁的情况下，保证数据的安全性。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;AOF后台重写的步骤如下所示：&lt;/p&gt;
&lt;ol readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;服务器进程创建子进程，子进程开始AOF文件重写&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;从创建子进程开始，服务器进程执行的所有写命令不仅要写入AOF缓冲区，还要写入AOF重写缓冲区&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;写入AOF缓冲区的目的是为了同步到原有的AOF文件。&lt;/p&gt;
&lt;p&gt;写入AOF重写缓冲区的目的是因为子进程在进行AOF文件重写期间，服务器进程还在继续处理命令请求，&lt;/p&gt;
&lt;p&gt;而新的命令可能会对现有的数据库进行修改，从而使得服务器当前的数据库数据和重写后的AOF文件所&lt;/p&gt;
&lt;p&gt;保存的数据库数据不一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;子进程完成AOF重写工作，向父进程发送一个信号，父进程在接收到该信号后，会执行以下操作：&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;1.将AOF重写缓冲区中的所有内容写入到新AOF文件中，这样就保证了新AOF文件所保存的数据库数据和服务器当前的数据库数据是一致的。&lt;/p&gt;
&lt;p&gt;2.对新的AOF文件进行改名，原子地覆盖现有的AOF文件，完成新旧两个AOF文件的替换。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Redis提供了&lt;code&gt;BGREWRITEAOF&lt;/code&gt;命令来执行以上步骤，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200211_084323.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;执行完成后，打开appendonly.aof文件，发现保存list键的命令从六条变为了一条：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200211_084648.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;除了手动执行&lt;code&gt;BGREWRITEAOF&lt;/code&gt;命令外，Redis还提供了2个配置项用来自动执行&lt;code&gt;BGREWRITEAOF&lt;/code&gt;命令：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;auto-aof-rewrite-percentage 100&lt;/p&gt;
&lt;p&gt;auto-aof-rewrite-min-size 64mb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://images.zwwhnly.com/picture/2020/01/snipaste_20200211_085614.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;该配置表示，当AOF文件的体积大于64MB，并且AOF文件的体积比上一次重写之后的体积大了至少一倍（100%），Redis将自动执行&lt;code&gt;BGREWRITEAOF&lt;/code&gt;命令。&lt;/p&gt;
&lt;h2 id=&quot;rdb持久化aof持久化的区别&quot;&gt;4. RDB持久化、AOF持久化的区别&lt;/h2&gt;
&lt;p&gt;通过上面的讲解，我们会发现Redis提供的2种持久化方法是有区别的，可以总结为以下4点：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;实现方式&lt;/li&gt;
&lt;li&gt;文件体积&lt;/li&gt;
&lt;li&gt;安全性&lt;/li&gt;
&lt;li&gt;优先级&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;接下来一一讲解。&lt;/p&gt;
&lt;h3 id=&quot;实现方式&quot;&gt;4.1 实现方式&lt;/h3&gt;
&lt;p&gt;RDB持久化是通过将某个时间点Redis服务器存储的数据保存到RDB文件中来实现持久化的。&lt;/p&gt;
&lt;p&gt;AOF持久化是通过将Redis服务器执行的所有写命令保存到AOF文件中来实现持久化的。&lt;/p&gt;
&lt;h3 id=&quot;文件体积&quot;&gt;4.2 文件体积&lt;/h3&gt;
&lt;p&gt;由上述实现方式可知，RDB持久化记录的是结果，AOF持久化记录的是过程，所以AOF持久化生成的AOF文件会有体积越来越大的问题，Redis提供了AOF重写功能来减小AOF文件体积。&lt;/p&gt;
&lt;h3 id=&quot;安全性&quot;&gt;4.3 安全性&lt;/h3&gt;
&lt;p&gt;AOF持久化的安全性要比RDB持久化的安全性高，即如果发生机器故障，AOF持久化要比RDB持久化丢失的数据要少。&lt;/p&gt;
&lt;p&gt;因为RDB持久化会丢失上次RDB持久化后写入的数据，而AOF持久化最多丢失1s之内写入的数据（使用默认everysec配置的话）。&lt;/p&gt;
&lt;h3 id=&quot;优先级&quot;&gt;4.4 优先级&lt;/h3&gt;
&lt;p&gt;由于上述的安全性问题，如果Redis服务器开启了AOF持久化功能，Redis服务器在启动时会使用AOF文件来还原数据，如果Redis服务器没有开启AOF持久化功能，Redis服务器在启动时会使用RDB文件来还原数据，所以AOF文件的优先级比RDB文件的优先级高。&lt;/p&gt;
&lt;h2 id=&quot;源码及参考&quot;&gt;5. 源码及参考&lt;/h2&gt;
&lt;p&gt;Josiah L. Carlson 《Reids实战》&lt;/p&gt;
&lt;p&gt;黄健宏 《Redis设计与实现》&lt;/p&gt;
</description>
<pubDate>Tue, 11 Feb 2020 23:58:00 +0000</pubDate>
<dc:creator>申城异乡人</dc:creator>
<og:description>Redis的持久化机制(RDB、AOF)。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/zwwhnly/p/12295692.html</dc:identifier>
</item>
<item>
<title>再问你一遍，你真的了解try..catch(finally)吗？？? - 小雨小雨丶</title>
<link>http://www.cnblogs.com/xiaoyuxy/p/12297701.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaoyuxy/p/12297701.html</guid>
<description>&lt;h4 id=&quot;定义&quot;&gt;定义&lt;/h4&gt;
&lt;p&gt;首先来看下 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt;MDN&lt;/a&gt; 的定义：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;The try...catch statement marks a block of statements to try and specifies a response should an exception be thrown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;try...catch语句标记要执行的语句，并指定一个当有异常抛出时候的响应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简短的一句的确描述了try...catch的大部分功能。&lt;/p&gt;
&lt;p&gt;但是，最MDN的最后，有一段话是这么写的：&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;Returning from a finally-block&lt;/p&gt;
&lt;p&gt;If the finally-block returns a value, this value becomes the return value of the entire try-catch-finally statement, regardless of any return statements in the try and catch-blocks. This includes exceptions thrown inside of the catch-block:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;finally语句块的返回值&lt;/p&gt;
&lt;p&gt;如果finally语句块中有返回值，那么这个值将作为整个try...catch语句的返回，无论try语句块或者catch语句块中是否有返回，这包括了catch中的异常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ok，那我们就尝试加上return，看看会发生什么。&lt;/p&gt;
&lt;h4 id=&quot;case1&quot;&gt;case1&lt;/h4&gt;
&lt;h5 id=&quot;输入&quot;&gt;输入&lt;/h5&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function fn() {
  try {
    console.log('try块内log');
  } catch (error) {
    console.log('catch块内log');
  } finally {
    console.log('finally块内log====');
  }
  return '一般情况下的return';
}
console.log(fn());&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;输出&quot;&gt;输出：&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FoxDaxian/FoxDaxian.github.io/master/assets/picgo/20200211223115.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;一切看起来都如我们所想，没有问题，继续往下看。&lt;/p&gt;
&lt;h4 id=&quot;case2&quot;&gt;case2&lt;/h4&gt;
&lt;h5 id=&quot;输入-1&quot;&gt;输入&lt;/h5&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function fn() {
  try {
    console.log('try块内log');
    return 'try中的return'; // &amp;lt;=== 多了这么一句
  } catch (error) {
    console.log('catch块内log');
    return 'catch中的return语句';
  } finally {
    console.log('finally块内log====');
  }
  return '一般情况下的return';
}
console.log(fn());&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;输出-1&quot;&gt;输出&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FoxDaxian/FoxDaxian.github.io/master/assets/picgo/20200211223706.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;正如上图所示，这里打印的是try的return，但是，finally语句块中的log依然被执行了。&lt;br/&gt;看到这里，我们可以知道，finally的执行时机是在try(或者cache，cache同理)执行return之前被执行。&lt;br/&gt;那我们就可以验证下MDN上所说的：&lt;code&gt;finally语句块的返回值&lt;/code&gt; 这句话的真正含义。&lt;/p&gt;
&lt;h4 id=&quot;case3&quot;&gt;case3&lt;/h4&gt;
&lt;h5 id=&quot;输入-2&quot;&gt;输入&lt;/h5&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function fn() {
  try {
    console.log('try块内log');
    return 'try中的return'
  } catch (error) {
    console.log('catch块内log');
    return 'catch中的return语句';
  } finally {
    console.log('finally块内log====');
    return 'finaly中的return'; // &amp;lt;=== 多了这么一句
  }
  return '一般情况下的return';
}
console.log(fn());&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;输出-2&quot;&gt;输出&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FoxDaxian/FoxDaxian.github.io/master/assets/picgo/20200211224159.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;ok，依然很正常，因为finally会在try的return之前执行，所以拦截了try中的return，打印了&lt;code&gt;finally中的return&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;你以为这样就结束了吗？&lt;/p&gt;
&lt;p&gt;我们继续往下看。&lt;/p&gt;
&lt;h4 id=&quot;case4&quot;&gt;case4&lt;/h4&gt;
&lt;h5 id=&quot;输入-3&quot;&gt;输入&lt;/h5&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function justLog(){
  console.log('来自justLog的打印');
  return '来自justLog的return'
}

function fn() {
  try {
    console.log('try块内log');
    return justLog(); // &amp;lt;=== 这次我们return了一个函数
  } catch (error) {
    console.log('catch块内log');
    return 'catch中的return语句';
  } finally {
    console.log('finally块内log====');
    return 'finaly中的return';
  }
  return '一般情况下的return';
}
console.log(fn());&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;先思考一下会打印什么？看看是否和真实的输出一致。给我们几秒钟...&lt;/p&gt;
&lt;h2 id=&quot;section&quot;&gt;----&lt;/h2&gt;
&lt;h2 id=&quot;section-1&quot;&gt;----&lt;/h2&gt;
&lt;h2 id=&quot;section-2&quot;&gt;----&lt;/h2&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;小小的声援一下，希望战'役'早日胜利。加油！&lt;br/&gt;然后：&lt;br/&gt;我会长期更新有趣的，有料的前端知识，如果对你有帮忙，请关注我，日后接受第一手更新消息。非常感谢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FoxDaxian/FoxDaxian.github.io/master/assets/picgo/20200211224755.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;section-3&quot;&gt;----&lt;/h2&gt;
&lt;h2 id=&quot;section-4&quot;&gt;----&lt;/h2&gt;
&lt;h2 id=&quot;section-5&quot;&gt;----&lt;/h2&gt;
&lt;h5 id=&quot;输出-3&quot;&gt;输出&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FoxDaxian/FoxDaxian.github.io/master/assets/picgo/20200211225118.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;你答对了没有？&lt;br/&gt;可以看到，红框内为justLog函数的log，红框下面是finally中的打印和返回。&lt;br/&gt;所以finally真正的执行时机是：try(或catch)中 return关键字之前。&lt;br/&gt;所以我们才看到了justLog中的打印。&lt;br/&gt;有关return关键字的实现，可以自行查询&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/&quot;&gt;标准&lt;/a&gt;，这里不赘述。&lt;/p&gt;
&lt;h4 id=&quot;应用场景&quot;&gt;应用场景&lt;/h4&gt;
&lt;p&gt;比如我们有这样一个高阶函数：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function hoc(fn) {
  return fn()
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们想要返回所传递参数的执行结果，这样做是没问题的。&lt;/p&gt;
&lt;p&gt;那如果我们想在函数执行之后，return之前，做一些其他操作，应该怎么做呢？&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function hoc(fn) {
  const res = fn();
  // 其他操作
  return res;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;很简答，我们可以先获取返回值，再进行其他操作，然后return。&lt;br/&gt;不过这样我们就占用了额外的空间，而且无法便利的复用return后的语句，这个时候，我们的try...catch就可以排上用场了:&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;function hoc(fn) {
  try {
    return fn();
  } finally {
    // 一些其他操作，这些操作会在 `fn()执行后，return执行前` 被执行
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;总结&quot;&gt;总结&lt;/h4&gt;
&lt;p&gt;大白话来讲，&lt;code&gt;finally&lt;/code&gt;语句块会在try(或catch)中的 &lt;code&gt;return&lt;/code&gt; 关键字之前执行。一图以概之：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FoxDaxian/FoxDaxian.github.io/master/assets/picgo/20200211230354.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后，如果有帮到你的地方，欢迎关注、交流。&lt;/p&gt;
</description>
<pubDate>Tue, 11 Feb 2020 23:21:00 +0000</pubDate>
<dc:creator>小雨小雨丶</dc:creator>
<og:description>定义 首先来看下 &amp;quot;MDN&amp;quot; 的定义： The try...catch statement marks a block of statements to try and speci</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/xiaoyuxy/p/12297701.html</dc:identifier>
</item>
<item>
<title>解析《2019年度中国测试行业问卷调研报告》  - 老_张</title>
<link>http://www.cnblogs.com/imyalost/p/12294760.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/imyalost/p/12294760.html</guid>
<description>&lt;p&gt;&lt;span&gt;年前收到一份TesterHome的调查问卷邀请：2019年度问卷调查。最近翻邮箱发现结果已经出来了，和去年差不多，有2000+的童鞋参与了问卷调查。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;相比于去年，今年的问卷类型更丰富，做了两年的同比数据，大家可以通过两年数据的变化来获取个人关心的信息。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;正好年前我在自己公众号也做了一个问卷调查，这里取相同的问卷类型以及个人觉得比较重要的部分，做个解析。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PS：由于调研样本的局限性以及准确性，这份解析仅做参考，请理性看待。。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;相关链接：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome：&lt;a href=&quot;https://cloud.tencent.com/developer/article/1580288&quot; target=&quot;_blank&quot;&gt;2019年度中国测试行业问卷调研报告&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;工程师的自我修养之路：&lt;a href=&quot;https://mp.weixin.qq.com/s/4ntKlSLs31tKOZD7P3PaMg&quot; target=&quot;_blank&quot;&gt;2019年度软件测试行业调研问卷&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;去年的解析结果：&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/imyalost/p/10549472.html&quot;&gt;解析《中国互联网软件测试行业2018年度调研报告》&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、男女比例&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221211154-2139427116.png&quot; alt=&quot;&quot; width=&quot;723&quot; height=&quot;442&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221240473-1115877961.png&quot; alt=&quot;&quot; width=&quot;723&quot; height=&quot;187&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：综合来看，目前从事测试岗位的同学，男生还是相对较多一点。从QQ、微信群等测试或者技术群的人员性别分布来说，这个比例还算恰当。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;造成这种现象的原因，个人看来，和岗位所需要面临的加班压力，有很大关系。以及一部分岗位&lt;strong&gt;对技术要求较高&lt;/strong&gt;，这也是潜在的因素。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、年龄分布&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221349669-393035131.png&quot; alt=&quot;&quot; width=&quot;724&quot; height=&quot;599&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221441881-45815803.png&quot; alt=&quot;&quot; width=&quot;723&quot; height=&quot;333&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：IT这个行业，目前的主力军还是90后的同学，且近几年技术团队越来越有&lt;strong&gt;年轻化的趋势&lt;/strong&gt;。00后即将登上舞台，大家敬勉。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、工作城市&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221516330-708878790.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221543302-833709183.png&quot; alt=&quot;&quot; width=&quot;723&quot; height=&quot;336&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：相比于去年的解析结果，19年来看，二线重点城市的从业人员占比明显增加。虽然目前无论工作机会还是薪资待遇，一线城市依然是最好的选择。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;依照目前的行业发展趋势，未来二线城市，特别是&lt;strong&gt;苏杭、南京等城市，是很好的备选方案&lt;/strong&gt;，特别是对于将近而立之年的人来说，未来定居是个很好的方案。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、工作经验&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221703475-1869078266.png&quot; alt=&quot;&quot; width=&quot;719&quot; height=&quot;595&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221723172-506552004.png&quot; alt=&quot;&quot; width=&quot;719&quot; height=&quot;413&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：目前招聘市场，很多研发相关岗位都要求五年或者以上经验，这点正好匹配了上述的年纪分布区间。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;90后同学组成的研发团队，无论&lt;strong&gt;精力、创新能力、抗压能力，是目前最好的区间人选&lt;/strong&gt;。但团队年轻化依然是趋势，需要尽早做职业规划。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;五、工作岗位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221814928-626792108.png&quot; alt=&quot;&quot; width=&quot;722&quot; height=&quot;571&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221830700-1902688184.png&quot; alt=&quot;&quot; width=&quot;722&quot; height=&quot;555&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：综合来说，业务测试同学目前依然是主流，自动化紧随其后。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;按照我个人对求职市场以及所知道的互联网企业测试岗的了解，&lt;strong&gt;自动化已经成为了业务测试同学的必备技能&lt;/strong&gt;。测试开发/性能测试相对来说，是职能岗位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我个人对自动化的认知，后续的发展方向，专职的自动化岗位会越来越少，&lt;strong&gt;一专多能反而是比较吃香&lt;/strong&gt;的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;短时间内，测试开发/性能测试（这类可以统称为专项测试）可以作为奋斗目标（薪资相对好点，发展空间较大）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;六、收入范围&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221856599-1142116730.png&quot; alt=&quot;&quot; width=&quot;718&quot; height=&quot;576&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211221927717-1789246260.png&quot; alt=&quot;&quot; width=&quot;718&quot; height=&quot;491&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：无论从年纪或者工作经验分布来看，目前就业市场，高级/资深岗位（业务测试/性能/测试开发）对应的薪资范围，一般都是15-30K。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;15K是测试岗位的第一个坎，基本技术性要求较高的岗位（测试开发/性能测试）都是15K以上。而25K的月薪，有什么要求呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;简单来说，&lt;strong&gt;一个人carry一个较为复杂项目的某项工作！&lt;/strong&gt;往往这些童鞋在圈子里或者某一个细分领域都有较深的造诣。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;还有一点，从我最近面试候选人的经历来说，现在市场上&lt;strong&gt;高级性能测试/测试开发岗位，需求量蛮大的，供不应求&lt;/strong&gt;！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;七、团队规模&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222003997-771243518.png&quot; alt=&quot;&quot; width=&quot;717&quot; height=&quot;575&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222020781-1297846033.png&quot; alt=&quot;&quot; width=&quot;719&quot; height=&quot;334&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：目前来说，中小型测试团队依然是主流。团队成员的增加，带来的沟通、管理成本是很大的一笔开支。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;企业更希望招聘到&lt;strong&gt;自我驱动和自动管理型的人才，小而美，有时候反而是更好的选择！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;八、自我提升方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222157991-987662821.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222100953-2116809141.png&quot; alt=&quot;&quot; width=&quot;722&quot; height=&quot;537&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：从问卷结果看，专业书籍、教学视频、论坛博客依然是学习提升的主流，技术沙龙的占比在快速增加。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一方面是大厂希望定义技术标准，另一方面，技术的发展趋势越来越趋近同质化。百花齐放的时代目测会渐行渐远。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从我个人学习经验来说，一方面是&lt;strong&gt;学习要能快速落地变现&lt;/strong&gt;，另一方面，&lt;strong&gt;紧跟主流依然是推荐大部分同学的选择&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;九、核心竞争力&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222309263-1494504364.png&quot; alt=&quot;&quot; width=&quot;722&quot; height=&quot;581&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222321004-873903330.png&quot; alt=&quot;&quot; width=&quot;720&quot; height=&quot;458&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：如果按照上面的问卷结果来看，技术、业务、沟通、快速学习能力占比较为均衡。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这点我觉得可以从“文化”的角度来谈：&lt;strong&gt;自我驱动管理、向前一步拥抱变化、高效沟通协调资源&lt;/strong&gt;这些务虚的点，更应该受到关注和思考。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;硬能力好学，软能力，从我个人观察来说，依然是稀缺资源。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;十、未来职业规划&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TesterHome&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222357114-1933645590.png&quot; alt=&quot;&quot; width=&quot;715&quot; height=&quot;556&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/i-beta/983980/202002/983980-20200211222418331-1043961350.png&quot; alt=&quot;&quot; width=&quot;713&quot; height=&quot;609&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解析：关键词-大家都喜欢做管理（手动狗头），然而并没有那么多人和岗位需要管理。在这一点我觉得目前国内对管理岗的期待值，有点高。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;相比于去年的调查结果，令人欣慰的是今年其他选项的占比有了些许提升，可能是出于认清了现实？？？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我个人目前比较推荐的行业：&lt;strong&gt;电商&lt;/strong&gt;（基数大&amp;amp;需求多）、&lt;strong&gt;人工智能&lt;/strong&gt;（家居/车载平台）、&lt;strong&gt;金融&lt;/strong&gt;（银行&amp;amp;保险&amp;amp;三方）、&lt;strong&gt;数据分析&lt;/strong&gt;相关。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;以上，就是关于调查问卷报告的解析，由于采样样本数较少，请理性对待。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2019年，是过去十年最坏的一年，目前来看，是未来十年，最好的一年，共勉。。。&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 11 Feb 2020 15:57:00 +0000</pubDate>
<dc:creator>老_张</dc:creator>
<og:description>年前收到一份TesterHome的调查问卷邀请：2019年度问卷调查。最近翻邮箱发现结果已经出来了，和去年差不多，有2000+的童鞋参与了问卷调查。 相比于去年，今年的问卷类型更丰富，做了两年的同比数</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/imyalost/p/12294760.html</dc:identifier>
</item>
<item>
<title>如何快速查看Linux日志？ - 风尘博客</title>
<link>http://www.cnblogs.com/vandusty/p/12295504.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/vandusty/p/12295504.html</guid>
<description>&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;因为在生产环境会遇到很多问题，那么最快的定位方式莫过于去看日志，我们都知道服务器每天会产生大量的日志，那么如何快速的定位也就是最关键的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文介绍六种查看日志的命令：&lt;code&gt;tail&lt;/code&gt;、&lt;code&gt;head&lt;/code&gt;、&lt;code&gt;cat&lt;/code&gt;、&lt;code&gt;more&lt;/code&gt;、&lt;code&gt;less&lt;/code&gt;、&lt;code&gt;sed&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;一tail&quot;&gt;一、&lt;code&gt;tail&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&quot;命令功能&quot;&gt;1.1 命令功能&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tail&lt;/code&gt; 命令从指定点开始将文件写到标准输出。&lt;/p&gt;
&lt;h3 id=&quot;命令格式&quot;&gt;1.2 命令格式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tail[必要参数][选择参数][文件]&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;命令参数&quot;&gt;1.3 命令参数&lt;/h3&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;-f 循环读取
-q 不显示处理信息
-v 显示详细的处理信息
-c&amp;lt;数目&amp;gt; 显示的字节数
-n&amp;lt;行数&amp;gt; 显示行数
-q, --quiet, --silent 从不输出给出文件名的首部
-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用实例&quot;&gt;1.4 使用实例&lt;/h3&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;tail  -n  10   file.log   查询日志尾部最后10行的日志;
tail  -n +10   file.log   查询第10行之后的所有日志;
tail  -fn 100   file.log   循环实时查看最后100行记录&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;tail&lt;/code&gt;一般还会配合着&lt;code&gt;grep&lt;/code&gt;用&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;tail -fn 1000 file.log | grep '关键字'&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;如果查询的数据量太大,&lt;code&gt;Ctrl + F&lt;/code&gt; 或者 空格键可以翻页查看&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;tail -n 5000  file.log |more -1000&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;二head&quot;&gt;二、&lt;code&gt;head&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&quot;命令功能-1&quot;&gt;2.1 命令功能&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;head&lt;/code&gt;跟&lt;code&gt;tail&lt;/code&gt;是相反，用来显示档案的开头至标准输出中，默认&lt;code&gt;head&lt;/code&gt;命令打印其相应文件的开头&lt;code&gt;10&lt;/code&gt;行。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;head -n  10  file.log   查询日志文件中的头10行日志;
head -n -10  file.log   查询日志文件除了最后10行的其他所有日志;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;命令格式-1&quot;&gt;2.2 命令格式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tail[必要参数][选择参数][文件]&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;命令参数-1&quot;&gt;2.3 命令参数&lt;/h3&gt;
&lt;p&gt;参考&lt;code&gt;tail&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;三cat&quot;&gt;三、&lt;code&gt;cat&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&quot;命令功能-2&quot;&gt;3.1 命令功能&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;一次显示整个文件：&lt;code&gt;cat filename&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从键盘创建一个文件（只能创建新文件,不能编辑已有文件）：&lt;code&gt;cat &amp;gt; filename&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将几个文件合并为一个文件：&lt;code&gt;cat file1 file2 &amp;gt; file&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;命令格式-2&quot;&gt;3.2 命令格式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat [选项] [文件]...&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;命令参数-2&quot;&gt;3.3 命令参数&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;-A, --show-all           等价于 -vET
-b, --number-nonblank    对非空输出行编号
-e                       等价于 -vE
-E, --show-ends          在每行结束处显示 $
-n, --number     对输出的所有行编号,由1开始对所有输出的行数编号
-s, --squeeze-blank  有连续两行以上的空白行，就代换为一行的空白行 
-t                       与 -vT 等价
-T, --show-tabs          将跳格字符显示为 ^I
-v, --show-nonprinting   使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用实例-1&quot;&gt;3.4 使用实例&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;把 &lt;code&gt;file1.log&lt;/code&gt; 的文件内容加上行号后输入 &lt;code&gt;file2.log&lt;/code&gt; 这个文件里&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;cat -n file1.log file2.log&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;把 &lt;code&gt;file1.log&lt;/code&gt; 和 &lt;code&gt;file2.log&lt;/code&gt; 的文件内容加上行号（空白行不加）之后将内容附加到 &lt;code&gt;file.log&lt;/code&gt; 里&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;cat -b file1.log file1.log file.log&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;把 &lt;code&gt;file1.log&lt;/code&gt; 的文件内容加上行号后输入 &lt;code&gt;file.log&lt;/code&gt; 这个文件里&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;cat -n file1.log &amp;gt; file.log&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;code&gt;tac&lt;/code&gt; 是将 &lt;code&gt;cat&lt;/code&gt; 反写过来，所以他的功能就跟 &lt;code&gt;cat&lt;/code&gt; 相反&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;四more&quot;&gt;四、&lt;code&gt;more&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&quot;命令功能-3&quot;&gt;4.1 命令功能&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;more&lt;/code&gt;命令和&lt;code&gt;cat&lt;/code&gt;的功能一样都是查看文件里的内容，但有所不同的是&lt;code&gt;more&lt;/code&gt;可以按页来查看文件的内容，还支持直接跳转行等功能。&lt;/p&gt;
&lt;h3 id=&quot;命令语法&quot;&gt;4.2 命令语法&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;more [-dlfpcsu ] [-num ] [+/ pattern] [+ linenum] [file ... ] &lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;命令参数-3&quot;&gt;4.3 命令参数&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;+n      从笫n行开始显示
-n       定义屏幕大小为n行
+/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示  
-c       从顶部清屏，然后显示
-d       提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能
-l        忽略Ctrl+l（换页）字符
-p       通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似
-s       把连续的多个空行显示为一行
-u       把文件内容中的下画线去掉&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;常用操作命令&quot;&gt;4.4 常用操作命令&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;Enter 向下n行，需要定义，默认为1行
Ctrl + F 向下滚动一屏
空格键 向下滚动一屏
Ctrl + B 返回上一屏
= 输出当前行的行号
:f 输出文件名和当前行的行号
V 调用vi编辑器
!命令 调用Shell，并执行命令
q 退出more&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用示例&quot;&gt;4.5 使用示例&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;显示文件中从第&lt;code&gt;3&lt;/code&gt;行起的内容&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;more +3 file.log&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;从文件中查找第一个出现&lt;code&gt;test&lt;/code&gt;字符串的行，并从该处前两行开始显示输出&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;more +/test file.log&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;设定每屏显示行数&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;more -5 log2012.log&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;五less&quot;&gt;五、&lt;code&gt;less&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&quot;命令功能-4&quot;&gt;5.1 命令功能&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;less&lt;/code&gt;与&lt;code&gt;more&lt;/code&gt;类似，使用&lt;code&gt;less&lt;/code&gt;可以随意浏览文件，而&lt;code&gt;more&lt;/code&gt;仅能向前移动，不能向后移动，而 &lt;code&gt;less&lt;/code&gt; 既可以向前移动，也可以向后移动。&lt;/p&gt;
&lt;h3 id=&quot;命令格式-3&quot;&gt;5.2 命令格式&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;less [参数]  文件 &lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;命令参数-4&quot;&gt;5.3 命令参数&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;-b &amp;lt;缓冲区大小&amp;gt; 设置缓冲区的大小
-e  当文件显示结束后，自动离开
-f  强迫打开特殊文件，例如外围设备代号、目录和二进制文件
-g  只标志最后搜索的关键词
-i  忽略搜索时的大小写
-m  显示类似more命令的百分比
-N  显示每行的行号
-o &amp;lt;文件名&amp;gt; 将less 输出的内容在指定文件中保存起来
-Q  不使用警告音
-s  显示连续空行为一行
-S  行过长时间将超出部分舍弃
-x &amp;lt;数字&amp;gt; 将“tab”键显示为规定的数字空格&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;常用操作命令-1&quot;&gt;5.4 常用操作命令&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;/字符串：向下搜索“字符串”的功能
?字符串：向上搜索“字符串”的功能
n：重复前一个搜索（与 / 或 ? 有关）
N：反向重复前一个搜索（与 / 或 ? 有关）
b  向后翻一页
d  向后翻半页
h  显示帮助界面
Q  退出less 命令
u  向前滚动半页
y  向前滚动一行
空格键 滚动一行
回车键 滚动一页
[pagedown]： 向下翻动一页
[pageup]：   向上翻动一页&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;less命令在查询日志时一般流程是这样的&quot;&gt;5.5 &lt;code&gt;less&lt;/code&gt;命令在查询日志时，一般流程是这样的&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;less file.log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shift + G&lt;/code&gt; 命令到文件尾部 然后输入 &lt;code&gt;？&lt;/code&gt; 加上你要搜索的关键字例如：&lt;code&gt;？test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按 &lt;code&gt;n&lt;/code&gt; 向上查找关键字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shift + n&lt;/code&gt; 反向查找关键字&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;六sed&quot;&gt;六、&lt;code&gt;sed&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&quot;命令功能-5&quot;&gt;6.1 命令功能&lt;/h3&gt;
&lt;p&gt;这个命令可以查找日志文件特定的一段 , 根据时间的一个范围查询，可以按照行号和时间范围查询&lt;/p&gt;
&lt;h3 id=&quot;使用示例-1&quot;&gt;6.2 使用示例&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;按照行号：只查看文件的第&lt;code&gt;5&lt;/code&gt;行到第&lt;code&gt;10&lt;/code&gt;行&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;sed -n '5,10p' file.log&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;按照时间段&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;sed -n '/2019-12-17 16:17:20/,/2019-12-17 16:17:36/p'  file.log&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;七技术交流&quot;&gt;七、技术交流&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.dustyblog.cn&quot;&gt;风尘博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.im/user/5d5ea68e6fb9a06afa328f56/posts&quot;&gt;风尘博客-掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/vandusty/&quot;&gt;风尘博客-博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vanDusty&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Tue, 11 Feb 2020 15:54:00 +0000</pubDate>
<dc:creator>风尘博客</dc:creator>
<og:description>因为在生产环境会遇到很多问题，那么最快的定位方式莫过于去看日志，我们都知道服务器每天会产生大量的日志，那么如何快速的定位也就是最关键的。 本文介绍六种查看日志的命令： 、`head cat more</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/vandusty/p/12295504.html</dc:identifier>
</item>
<item>
<title>SpringMVC 参数映射与文件上传 - CoderJerry</title>
<link>http://www.cnblogs.com/yangyuanhu/p/12297329.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yangyuanhu/p/12297329.html</guid>
<description>&lt;p&gt;接下来就是Spring的各个处理细节了,无论框架如何疯转其实我们处理请求的流程是不变的,设计到的操作也是固定的,举个例子,当我们要实现一个登陆功能时:&lt;/p&gt;
&lt;ul readability=&quot;6&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;创建一个用于处理登录请求的Servlet&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;实现doget等其他http方法(一些情况可能根据业务需要限制请求方法)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;从request对象中取出数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;处理编码&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;验证参数是否符合要求&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;对参数数据类型进行转换(需要时)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;开始业务逻辑处理(登录)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;可能需要操作session来完成&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;组织响应给数据,可能是html可能是json,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;异常处理&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Header与cookie的处理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;整个SpringMVC其实就是帮我们对上面的操作进行封装,当然了SpringMVC也提供了更多的功能,如国际化..&lt;/p&gt;
&lt;h2 id=&quot;handler方法特殊参数&quot;&gt;Handler方法特殊参数&lt;/h2&gt;
&lt;p&gt;在handler方法中我们可以添加一下参数,用于获取一些特殊的对象:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;HttpServletRequest,HttpServletResponse&lt;/li&gt;
&lt;li&gt;HttpSession&lt;/li&gt;
&lt;li&gt;Model&lt;/li&gt;
&lt;li&gt;ModelMap&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;​ model 是框架帮我们创建好的的Model对象,若使用该参数作为返回的model,则需要修改方法返回值为String用于指定视图名称;&lt;/p&gt;
&lt;p&gt;案例:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;  @RequestMapping(&quot;/courseList2.action&quot;)
    public String courseList(Model model) {
        model.addAttribute(&quot;courses&quot;, courseService.selectCourseList());
        return &quot;courses.jsp&quot;;
    }
    @RequestMapping(&quot;/courseList3.action&quot;)
    public String courseList(ModelMap model, HttpSession session,HttpServletRequest request,HttpServletResponse response) {
        System.out.println(request);
        System.out.println(response);
        System.out.println(session.getId());
        model.addAttribute(&quot;courses&quot;, courseService.selectCourseList());
        return &quot;courses.jsp&quot;;
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;请求参数映射&quot;&gt;请求参数映射:&lt;/h2&gt;
&lt;p&gt;在使用Servlet开发的过程中我们会频繁的调用request.getAttribute来获取请求参数,参数较少时还没什么,一旦参数较多的时候就会产生大量的冗余代码,SpringMVC提供了多种以简化获取参数的过程的方法&lt;/p&gt;
&lt;h3 id=&quot;映射到handler方法的参数&quot;&gt;映射到handler方法的参数&lt;/h3&gt;
&lt;p&gt;在handler方法中添加与前台参数名称和类型匹配的参数,框架会自动解析参数传入handler方法中;&lt;/p&gt;
&lt;p&gt;案例:&lt;/p&gt;
&lt;p&gt;假设我们要修改课程信息的功能,首先要获取原始信息&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/edit.action&quot;)
public String edit(Model model,Integer id) {
    Course course = courseService.selectCourseByID(id);
    model.addAttribute(&quot;course&quot;,course);
    return &quot;edit.jsp&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;支持的参数类型:&lt;/p&gt;
&lt;pre class=&quot;sql&quot;&gt;
&lt;code&gt;整形:Integer、int 
字符串:String 
单精度:Float、float 
双精度:Double、double 
布尔型:Boolean、boolean&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;requestparam&quot;&gt;@RequestParam&lt;/h4&gt;
&lt;p&gt;当前后台参数名称不匹配时可以@RequestParam注解进行自定义映射;&lt;/p&gt;
&lt;p&gt;注解参数:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;value,name 两者都代表前台参数名称&lt;/li&gt;
&lt;li&gt;requerid 该参数是否必须&lt;/li&gt;
&lt;li&gt;defaultValue 参数默认值&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;案例:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/edit.action&quot;)
public String edit(Model model,@RequestParam(&quot;id&quot;) Integer iid) {
    Course course = courseService.selectCourseByID(iid);
    model.addAttribute(&quot;course&quot;,course);
    return &quot;edit.jsp&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意:参数类型可以是基础类型也可以是包装类型,建议使用包装类型,这样可以保证为获取到参数时不会因为null无法转换为基础类型而导致的异常;&lt;/p&gt;
&lt;p&gt;edit.jsp:&lt;/p&gt;
&lt;pre class=&quot;jsp&quot;&gt;
&lt;code&gt;&amp;lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&amp;gt;
&amp;lt;%@ taglib prefix=&quot;fmt&quot; uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; %&amp;gt;
&amp;lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;form action=&quot;updateCourse.action&quot; method=&quot;post&quot;&amp;gt;
    &amp;lt;input name=&quot;id&quot; value=&quot;${course.id}&quot; hidden=&quot;hidden&quot;/&amp;gt;
    &amp;lt;input name=&quot;name&quot; value=&quot;${course.name}&quot;/&amp;gt;
    &amp;lt;input name=&quot;teachName&quot; value=&quot;${course.teachName}&quot;/&amp;gt;
  &amp;lt;%--    &amp;lt;input name=&quot;startTime&quot; type=&quot;date&quot; value='&amp;lt;fmt:formatDate value=&quot;${course.startTime}&quot; pattern=&quot;yyyy-MM-dd&quot;/&amp;gt;'/&amp;gt;--%&amp;gt;
    &amp;lt;input name=&quot;score&quot; type=&quot;number&quot; value=&quot;${course.score}&quot;/&amp;gt;
    &amp;lt;input name=&quot;hours&quot; type=&quot;number&quot; value=&quot;${course.hours}&quot;/&amp;gt;
    &amp;lt;input type=&quot;submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;映射到实体类&quot;&gt;映射到实体类&lt;/h3&gt;
&lt;p&gt;当参数个数非常多时上面的方法就显得麻烦了,SpringMVC支持将参数映射到一个实体类;&lt;/p&gt;
&lt;p&gt;在handler方法中添加任意类型实体类作为参数; 同样的只有参数名称和实体属性一致时才能映射成功;&lt;/p&gt;
&lt;p&gt;我们继续完善修改功能,现在要获取修改后的内容了:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/updateCourse.action&quot;)
public String update(Course course) {
    courseService.updateCourse(course);
    return &quot;/courseList.action&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;乱码过滤器&quot;&gt;乱码过滤器&lt;/h3&gt;
&lt;p&gt;上面的例子中出现了中文乱码问题,请求方法为post, 只需要在request中设置编码方式即可,但是此时参数已经被框架解析了,我们在handler中通过request设置以及不生效了,所以我们需要在请求到达SpringMVC之前就进行处理,这就用到了以前学过的过滤器了;&lt;/p&gt;
&lt;p&gt;好消息是SpringMVC以及提供了过滤器,我们只需要配置到web.xml中即可&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;!--    编码过滤器--&amp;gt;
    &amp;lt;filter&amp;gt;
        &amp;lt;filter-name&amp;gt;encodingFilter&amp;lt;/filter-name&amp;gt;
        &amp;lt;filter-class&amp;gt;org.springframework.web.filter.CharacterEncodingFilter&amp;lt;/filter-class&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;encoding&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;utf-8&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;!--       是否对响应设置编码 --&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;forceResponseEncoding&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;true&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
    &amp;lt;/filter&amp;gt;
    &amp;lt;filter-mapping&amp;gt;
        &amp;lt;filter-name&amp;gt;encodingFilter&amp;lt;/filter-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/filter-mapping&amp;gt;
&amp;lt;!--    编码过滤器 END--&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;需要注意的是,该过滤器只对post生效,如果是get乱码则还是需要修改tomcat的server.xml或是通过代码从ISO-8859-重新编码为UTF-8&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;String username = request.getParameter(&quot;username&quot;); 
username = new String(username.getBytes(&quot;iso8859-1&quot;), &quot;utf-8&quot;); //重新编码&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;参数类型转换&quot;&gt;参数类型转换&lt;/h3&gt;
&lt;p&gt;我们将edit.jsp中的开课标签取消注释,然后测试会发现系统给出了400异常,查看控制台可以看到以下信息:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440878/202002/1440878-20200211230732058-399480141.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;意思是框架无法将String类型的请求参数转换为需要的Date类型,这就需要,这是因为日期格式多种多样,每个地区不同,所以这需要我们自己来实现转换;&lt;/p&gt;
&lt;h4 id=&quot;编写转换器&quot;&gt;编写转换器&lt;/h4&gt;
&lt;p&gt;实现convert接口即可作为转换器,该接口的两个两个泛型表示输入源类型和输出目标类型;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class StringToDateConverter implements Converter&amp;lt;String, Date&amp;gt; {
    @Override
    public Date convert(String s) {
        SimpleDateFormat sm = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        try {
            return sm.parse(s);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return null;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;mvc配置文件&quot;&gt;mvc配置文件&lt;/h4&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;bean id=&quot;conversionService&quot; class=&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;&amp;gt;
    &amp;lt;property name=&quot;converters&quot;&amp;gt;
        &amp;lt;set&amp;gt;
            &amp;lt;bean class=&quot;com.kkb.converter.StringToDateConverter&quot;/&amp;gt;
        &amp;lt;/set&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/bean&amp;gt;
&amp;lt;mvc:annotation-driven conversion-service=&quot;conversionService&quot;/&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;使用注解注册转换器&quot;&gt;使用注解注册转换器&lt;/h4&gt;
&lt;p&gt;使用@DateTimeFormat可以实现上面xml相同的配置:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class Course {
  private Integer id;
  private String name;
  private String teachName;

  @DateTimeFormat(pattern = &quot;yyyy-MM-dd&quot;)
  private Date startTime;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意:注解作用在实体类对应的属性上,且配置文件必须添加&lt;code&gt;&amp;lt;mvc:annotation-driven&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;包装类型映射&quot;&gt;包装类型映射&lt;/h3&gt;
&lt;p&gt;当需要将参数映射到实体类的关联对象中时,也称为包装类型;&lt;/p&gt;
&lt;p&gt;例如:在课程对象中有一个用户对象,表示这是某个用户的课程;前台需要同时传递课程对象的属性,和用户对象的属性,后台就需要要用一个包装类型来接收,即一个包装了用户对象的课程对象; 再说的简单点,即课程对象中包含一个用户对象;&lt;/p&gt;
&lt;p&gt;在前台需要指出关联对象的属性名称,如:&lt;code&gt;用户.name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实体:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class Course {
    private Integer id;
    private String name;
    private String teachName;
    private Date startTime;
    private Integer score;
    private Integer hours;
    private User user;//新添加的User类属性
  set/get....&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;handler:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/updateCourse.action&quot;)
public String update(Course course) {
    courseService.updateCourse(course);
    return &quot;/courseList.action&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;jsp:&lt;/p&gt;
&lt;pre class=&quot;jsp&quot;&gt;
&lt;code&gt;&amp;lt;form action=&quot;updateCourse.action&quot; method=&quot;post&quot;&amp;gt;
    &amp;lt;input name=&quot;id&quot; value=&quot;${course.id}&quot; hidden=&quot;hidden&quot;/&amp;gt;
    &amp;lt;input name=&quot;name&quot; value=&quot;${course.name}&quot;/&amp;gt;
    &amp;lt;input name=&quot;teachName&quot; value=&quot;${course.teachName}&quot;/&amp;gt;
    &amp;lt;input name=&quot;startTime&quot; type=&quot;date&quot; value='&amp;lt;fmt:formatDate value=&quot;${course.startTime}&quot; pattern=&quot;yyyy-MM-dd&quot;/&amp;gt;'/&amp;gt;
    &amp;lt;input name=&quot;score&quot; type=&quot;number&quot; value=&quot;${course.score}&quot;/&amp;gt;
    &amp;lt;input name=&quot;hours&quot; type=&quot;number&quot; value=&quot;${course.hours}&quot;/&amp;gt;
    &amp;lt;input name=&quot;user.username&quot;/&amp;gt;  &amp;lt;!-- 新添加的参数--&amp;gt;
    &amp;lt;input type=&quot;submit&quot;&amp;gt;
&amp;lt;/form&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;数组参数映射&quot;&gt;数组参数映射&lt;/h3&gt;
&lt;p&gt;一些情况下,某一参数可能会有多个值,例如要进行批量删除操作,要删除的id会有多个,那就需要将参数映射到一个数组中;HttPServletRequest原本就支持获取数组参数,SpringMVC仅是帮我们做了一个类型转换;&lt;/p&gt;
&lt;p&gt;1.修改页面添加多选框:&lt;/p&gt;
&lt;pre class=&quot;jsp&quot;&gt;
&lt;code&gt;&amp;lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&amp;lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&amp;gt;
&amp;lt;%@ taglib prefix=&quot;fmt&quot; uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; %&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form action=&quot;deleteCourses&quot;&amp;gt;
    &amp;lt;table border=&quot;1&quot;&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;选择&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;名称&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;讲师&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;开课日期&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;学分&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;课时&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;操作&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;c:forEach items=&quot;${courses}&quot; var=&quot;course&quot;&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;
                    &amp;lt;input type=&quot;checkbox&quot; name=&quot;ids&quot; value=&quot;${course.id}&quot;&amp;gt;
                &amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${course.name}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${course.teachName}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;
                    &amp;lt;fmt:formatDate value=&quot;${course.startTime}&quot; pattern=&quot;yyyy-MM-dd&quot;/&amp;gt;
                &amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${course.score}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${course.hours}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;
                    &amp;lt;a href=&quot;editCourse?id=${course.id}&quot;&amp;gt;修改&amp;lt;/a&amp;gt;
                &amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/c:forEach&amp;gt;
    &amp;lt;/table&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;批量删除&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.handler方法:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/deleteCourses&quot;)
public String deleteCourses(Integer[] ids){
    courseService.deleteCourses(ids);
    return &quot;/getCourses&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3.service方法:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public void deleteCourses(Integer[] ids) {
    for (Integer id : ids){
        courseMapper.deleteByPrimaryKey(id);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;list映射&quot;&gt;list映射&lt;/h3&gt;
&lt;p&gt;当请求参数包含多个对象的属性数据,是需要使用list来接收,通常用在批量修改批量添加等;&lt;/p&gt;
&lt;p&gt;list映射要求参数名称为&lt;code&gt;对象属性[下标].属性名称&lt;/code&gt;,同时handler中使要用包装类型来接收;&lt;/p&gt;
&lt;p&gt;以下是实现一个批量修改课程信息的功能;&lt;/p&gt;
&lt;p&gt;1.修改页面中的td,使得每一个td都可以编辑:&lt;/p&gt;
&lt;pre class=&quot;jsp&quot;&gt;
&lt;code&gt;&amp;lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&amp;lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&amp;gt;
&amp;lt;%@ taglib prefix=&quot;fmt&quot; uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; %&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form action=&quot;deleteCourses&quot; id=&quot;fm&quot;&amp;gt;
    &amp;lt;table border=&quot;1&quot;&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;选择&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;名称&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;讲师&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;开课日期&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;学分&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;课时&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;操作&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;c:forEach items=&quot;${courses}&quot; var=&quot;course&quot; varStatus=&quot;status&quot;&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;input type=&quot;checkbox&quot; name=&quot;ids&quot; value=&quot;${course.id}&quot;&amp;gt;&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;input value=&quot;${course.name}&quot; name=&quot;courses[${status.index}].name&quot;/&amp;gt;&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;input value=&quot;${course.teachName}&quot; name=&quot;courses[${status.index}].teachName&quot;/&amp;gt;&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;input value='&amp;lt;fmt:formatDate value=&quot;${course.startTime}&quot; pattern=&quot;yyyy-MM-dd&quot;/&amp;gt;' name=&quot;courses[${status.index}].startTime&quot;/&amp;gt;&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;input value=&quot;${course.score}&quot; name=&quot;courses[${status.index}].score&quot;/&amp;gt;&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;input value=&quot;${course.hours}&quot; name=&quot;courses[${status.index}].hours&quot;/&amp;gt;&amp;lt;/td&amp;gt;
                &amp;lt;input hidden=&quot;hidden&quot; name=&quot;courses[${status.index}].id&quot; value=&quot;${course.id}&quot;&amp;gt;
                &amp;lt;td&amp;gt;&amp;lt;a href=&quot;editCourse?id=${course.id}&quot;&amp;gt;修改&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/c:forEach&amp;gt;
    &amp;lt;/table&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;批量删除&quot;&amp;gt;
    &amp;lt;input type=&quot;button&quot; onclick='function updates() {
        document.getElementById(&quot;fm&quot;).action = &quot;updateCourses&quot;
        document.getElementById(&quot;fm&quot;).submit()
    }
    updates()' value=&quot;批量修改&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.包装类型:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public class RequestPack {
    //用于接收参数列表的list
    private List&amp;lt;Course&amp;gt; courses;

    public List&amp;lt;Course&amp;gt; getCourses() {
        return courses;
    }

    public void setCourses(List&amp;lt;Course&amp;gt; courses) {
        this.courses = courses;
    }

    public RequestPack(List&amp;lt;Course&amp;gt; courses) {
        this.courses = courses;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3.handler方法:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/updateCourses&quot;)
public String updateCourses(RequestPack data){
    courseService.updateCourses(data.getCourses());
    return &quot;/getCourses&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4.service方法:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;public void updateCourses(List&amp;lt;Course&amp;gt; courses) {
    for (Course course:courses){
        courseMapper.updateByPrimaryKey(course);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;强调:list只能映射到包装类型中,无法直接映射到handler参数上&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;错误案例:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/updateCourses&quot;)
public String updateCourses(RequestPack data, ArrayList&amp;lt;Course&amp;gt; courses){
    courseService.updateCourses(data.getCourses());
    return &quot;/getCourses&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;文件上传&quot;&gt;文件上传&lt;/h3&gt;
&lt;p&gt;文件上传是web项目中非常常见的需求,SpringMVC使用了apache开源的两个库用于处理文件上传,所以在编写代码前我们需要先导入下面两个依赖包:&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;commons-io&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-io&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.6&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;commons-fileupload&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-fileupload&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;假设需要实现一个上传图片的功能,需要现在数据库中添加一个字段用于存储图片的路径,同时不要忘记修改pojo以及mapper文件,使之与数据库字段对应&lt;/p&gt;
&lt;p&gt;1.页面增加input 用于提交文件,并修改表单的enctype为&lt;code&gt;multipart/form-data&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;jsp&quot;&gt;
&lt;code&gt;&amp;lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&amp;gt;
&amp;lt;%@ taglib prefix=&quot;fmt&quot; uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; %&amp;gt;
&amp;lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;form action=&quot;updateCourse&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&amp;gt;
    &amp;lt;input name=&quot;id&quot; value=&quot;${course.id}&quot; hidden=&quot;hidden&quot;/&amp;gt;
    名称:&amp;lt;input name=&quot;name&quot; value=&quot;${course.name}&quot;/&amp;gt;
    &amp;lt;br/&amp;gt;
    讲师:&amp;lt;input name=&quot;teachName&quot; value=&quot;${course.teachName}&quot;/&amp;gt;
    &amp;lt;br/&amp;gt;
    &amp;lt;input name=&quot;startTime&quot; type=&quot;date&quot; value='&amp;lt;fmt:formatDate value=&quot;${course.startTime}&quot; pattern=&quot;yyyy-MM-dd&quot;/&amp;gt;'/&amp;gt;
    &amp;lt;br/&amp;gt;
    学分:&amp;lt;input name=&quot;score&quot; type=&quot;number&quot; value=&quot;${course.score}&quot;/&amp;gt;
    &amp;lt;br/&amp;gt;
    课时:&amp;lt;input name=&quot;hours&quot; type=&quot;number&quot; value=&quot;${course.hours}&quot;/&amp;gt;
    &amp;lt;br/&amp;gt;
    &amp;lt;c:if test=&quot;${course.pic != null}&quot;&amp;gt;
        &amp;lt;img src=&quot;${pageContext.servletContext.contextPath}${course.pic}&quot; style=&quot;width: 100px;height: 100px&quot;&amp;gt;
    &amp;lt;/c:if&amp;gt;
    图片:&amp;lt;input name=&quot;picFile&quot; type=&quot;file&quot;/&amp;gt;&amp;lt;br/&amp;gt; &amp;lt;!-- 新增input--&amp;gt;
    
    &amp;lt;br/&amp;gt;
    &amp;lt;input type=&quot;submit&quot;&amp;gt;

&amp;lt;/form&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.在mvc配置文件中添加multipart解析器,(页面上传文件都是以,multipart编码方式)&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;bean id=&quot;multipartResolver&quot; class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;/&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3.handler方法中添加MultipartFile类型的参数&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(&quot;/updateCourse&quot;)
public String updateCourse(Course course, MultipartFile picFile) throws IOException {
    /***
     * 1.获得文件,取出文件后缀
     * 2.生成唯一标识,
     * 3.写入文件到指定路径
     * 4.存储文件路径到数据库
     */
    System.out.println(picFile.getName());
    String suffix = picFile.getOriginalFilename().substring(picFile.getOriginalFilename().lastIndexOf(&quot;.&quot;));
    String fileName = UUID.randomUUID() + suffix;
    String basepath = getClass().getClassLoader().getResource(&quot;.&quot;).getPath();
    System.out.println(basepath);
    picFile.transferTo(new File(basepath+&quot;../../images/&quot;+fileName));
    course.setPic(&quot;/images/&quot;+fileName);
    courseService.update(course);
    return  &quot;/getCourses&quot;;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;注意:实际开发中都是存储到文件服务器,不会放在项目里&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4.静态资源处&lt;/p&gt;
&lt;p&gt;若web.xml中DispatcherServlet的URLmapping 为/ 则还需要在SpringMVC中添加静态资源配置&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;mvc:resources mapping=&quot;/images/**&quot; location=&quot;/images/&quot;/&amp;gt;
&amp;lt;!--当请求地址为/images/开头时(无论后面有多少层目录),作为静态资源 到/images/下查找文件--&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;若URLMapping为*.action 或类似其他的时则无需处理,因为Tomcat会直接查找webapp下的资源,不会交给DispatcherServlet&lt;/p&gt;

&lt;p&gt;一些情况下我们可能需要对请求进行限制,比如仅允许POST,GET等...&lt;/p&gt;
&lt;p&gt;RequestMapping注解中提供了多个参数用于添加请求的限制条件&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;value 请求地址&lt;/li&gt;
&lt;li&gt;path 请求地址&lt;/li&gt;
&lt;li&gt;method 请求方法&lt;/li&gt;
&lt;li&gt;headers 请求头中必须包含指定字段&lt;/li&gt;
&lt;li&gt;params 必须包含某个请求参数&lt;/li&gt;
&lt;li&gt;consumes 接受的数据媒体类型 (与请求中的contentType匹配才处理)&lt;/li&gt;
&lt;li&gt;produce 返回的媒体类型 (与请求中的accept匹配才处理)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;案例:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@RequestMapping(value = &quot;/editCourse&quot;,method = RequestMethod.POST,headers = {&quot;id&quot;},params = {&quot;name&quot;},consumes = {&quot;text/plain&quot;})&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;为了简化书写,MVC还提供了集合路径和方法限制的注解,包括常见的请求方法:&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;PostMapping
GetMapping
DeleteMapping
PutMapping

例:
@PostMapping(&quot;/editCourse&quot;)&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 11 Feb 2020 15:08:00 +0000</pubDate>
<dc:creator>CoderJerry</dc:creator>
<og:description>handler参数映射: 接下来就是Spring的各个处理细节了,无论框架如何疯转其实我们处理请求的流程是不变的,设计到的操作也是固定的,举个例子,当我们要实现一个登陆功能时: 创建一个用于处理登录请</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnblogs.com/yangyuanhu/p/12297329.html</dc:identifier>
</item>
</channel>
</rss>