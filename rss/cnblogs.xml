<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Unity 大版本更新之APK的下载与覆盖安装 - wuzhang</title>
<link>http://www.cnblogs.com/wuzhang/p/wuzhang20190405.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuzhang/p/wuzhang20190405.html</guid>
<description>&lt;p&gt;　　&lt;span&gt;作为一个游戏开发者，更新这个技能是必不可少的！更新分为游戏内的更新，也就是所谓的资源热更包括AssetBundle更新和代码更新，代码其实也是所谓的二进制文件，在安卓上和普通资源文件毫无差异，然而在IOS上差别大来个去了，由于苹果爸爸所谓出于安全性的考虑，不支持JIT，我们也很无奈啊! 如今能绕过去的，只能靠解释器去执行这部分被视为&lt;span&gt;另类&lt;/span&gt;的代码文件了,能解决的也就是今天各种版本的Lua和ILRuntime了！好了，夜已深，废话不多说了，开始今天正题！！！&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;1，如何通过Unity进行应用内更新？&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　应用内的更新也就所谓的资源热更了，从CDN上直接下载就完事了，下载的方式有很多，WWW,WebRequest,HttpWebRequest等，最不推荐的就是WWW，原因一： www.bytes这家伙很占内存，句柄有限，在IOS上文件过多，开的WWW超过句柄限制会有意想不到的惊喜(Bug),Unity官方已逐渐适应WebRequest取而代之了，推荐使用HttpWebRequest,支持断点续传，很是方便！&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;2，何时进行大版本更新，该如何更新呢？&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　这个大版本更新要看如何设计了，我们游戏是采用高中低三位来决定该更新哪些东西，例如：当前版本号1.0.1，下次客户端提高版本号到1.0.2或者1.1.0都是资源更新，如果大版本好改为2.x.x则进行大版本更新，如何更新呢？两种方法，一通过&quot;market://details?id=com.xxx.xxx&quot;标记使用Android代码打开应用市场内的应用，那么有经验同学就看到了问题，如果我装的不是本应用商店的应用呢，那不就凉了！！！是的，装的不是手机应用商店的肯定凉不了啊，我们还有方法二呢，前往你下载的对应版本的cdn上直接下载就可以了啊！至于怎么下载请转到&lt;strong&gt;1&lt;/strong&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;3，下载完了，我该怎么安装呢？&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　不要着急，安装及其的简单，Android原生提供了很好API,如果你的Android OS低于7.0那么只需要这几行代码就OK了！&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    Intent intent = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent(Intent.ACTION_VIEW);
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    File apkFile &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; File(apkFullPath);
    Uri uri &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;; uri =&lt;span&gt; Uri.fromFile(apkFile);
    intent.setDataAndType(uri, &lt;/span&gt;&quot;application/vnd.android.package-archive&quot;&lt;span&gt;);
    MainActivity.instance.startActivity(intent);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;span&gt;为什么我强调了下是7.0的呢，因为&lt;a href=&quot;https://developer.android.com/about/versions/nougat/android-7.0-changes.html&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Android 7.0 行为变更&lt;/a&gt;了所以这么写会报错的，&lt;span&gt;尝试传递 &lt;code&gt;file://URI&lt;/code&gt;可能会触发&lt;/span&gt;&lt;/span&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;FileUriExposedException&lt;/span&gt;。不要慌，那么如何解决呢？我们首先需要在 AndroidManifest里添加 provider 标签，通过这个标签将apk所在路径的share出去，这样本次就能访问该路径下的apk了，那么这个错误也就引刃而解了！如何使用这个provider呢，别着急，手把手教你如何使用provider。&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一步：先在AndroidManfiest.xml添加provider标签，位置在 application内即可！&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;collapse:true;;gutter:true;&quot;&gt;
    &amp;lt;provider
            android:name=&quot;android.support.v4.content.FileProvider&quot;
            android:authorities=&quot;&lt;span&gt;com.wuzhang.testandroid&lt;/span&gt;.fileProvider&quot;
            android:grantUriPermissions=&quot;true&quot;
            android:exported=&quot;false&quot;&amp;gt;
            &amp;lt;meta-data
                android:name=&quot;android.support.FILE_PROVIDER_PATHS&quot;
                android:resource=&quot;@xml/provider_paths&quot; /&amp;gt;
      &amp;lt;/provider&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;别忘记还要加个安装的权限: &amp;lt;uses-permission android:name=&quot;android.permission.REQUEST_INSTALL_PACKAGES&quot;/&amp;gt; &lt;/p&gt;
&lt;p&gt;第二步：指定共享目录，在res下创建/xml/provider_paths.xml,路径见下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405024339217-325925457.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;provider_paths.xml文件&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;paths&amp;gt;
    &amp;lt;external-path
        name=&quot;publicDir&quot; path=&quot;&quot;/&amp;gt;
&amp;lt;/paths&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;解释下，此处name=&quot;publicDir&quot;无实际意义，就是一个解释而已，path=“”；表示的是这个目录是当前根目录下的不再添加子目录等价于Unity中的Application.persistentDataPath也就是安卓设备上的storage/0/android/data/com.wuzhang.testandroid/files/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第三步：再次调用apk安装代码&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
    Intent intent = new Intent(Intent.ACTION_VIEW);
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    File apkFile = new File(apkFullPath);
    Uri uri = null;
    String path = MainActivity.instance.getApplicationContext().getPackageName() + &quot;.fileProvider&quot;;
    uri = FileProvider.getUriForFile(MainActivity.instance, path,apkFile);
    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
    intent.setDataAndType(uri, &quot;application/vnd.android.package-archive&quot;);
    MainActivity.instance.startActivity(intent);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS：这里有个地方需要注意，为何非要是这个顺序？？？&lt;/p&gt;
&lt;p&gt;intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);&lt;/p&gt;
&lt;p&gt;　　...&lt;/p&gt;
&lt;p&gt;　　...&lt;/p&gt;
&lt;p&gt;intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);&lt;/p&gt;
&lt;p&gt;为什么setFlag放到上面就可以，addFlag放上面就不行呢？？？原因很简单，当setFlag时会先清空intent下之前所有的flag，所以addFlag的FLAG_GRANT_READ_URI_PERMISSION就无效了，本人亲自踩的坑，多么痛的礼物！&lt;/p&gt;
&lt;p&gt;这一切到搞定了，打包真机测试，android 7.0的果然好了，年轻人，别高兴的太早，说完又遇到一个坑，8.0以上的系统死活不会弹出安装界面，一首凉凉送给自己，，，但是马上就要看到胜利的曙光了，一定要淡定，车到山前必有路，办法总比困难多！！！&lt;/p&gt;
&lt;p&gt;最终安装代码，完美兼容，Android 7.0，8.0&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
public static void installApk(String apkFullPath)
{
    try
    {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        Log.v(&quot;android&quot;, apkFullPath);
        onCoderReturn(apkFullPath);
        File apkFile = new File(apkFullPath);
        Uri uri = null;
        if (Build.VERSION.SDK_INT &amp;gt;= 24)
        {
            String path = MainActivity.instance.getApplicationContext().getPackageName() + &quot;.fileProvider&quot;;
            Log.v(&quot;android&quot;, path);
            uri = FileProvider.getUriForFile(MainActivity.instance, path, apkFile);
            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
        }
        else
        {
            uri = Uri.fromFile(apkFile);
            Log.v(&quot;android&quot;, apkFile.getAbsolutePath());
        }
        onCoderReturn(&quot;install&quot; + uri.getPath());
        intent.setDataAndType(uri, &quot;application/vnd.android.package-archive&quot;);
        //解决安卓8.0安装界面不弹出
        //查询所有符合 intent 跳转目标应用类型的应用，注意此方法必须放置在 setDataAndType 方法之后
        List&amp;lt;ResolveInfo&amp;gt; resolveLists = MainActivity.instance.getPackageManager().queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY);
        // 然后全部授权
        for (ResolveInfo resolveInfo : resolveLists)
        {
            String packageName = resolveInfo.activityInfo.packageName;
            MainActivity.instance.grantUriPermission(packageName, uri, Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
        }
        MainActivity.instance.startActivity(intent);
    }
    catch (Exception e)
    {
        e.printStackTrace();
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;好了，到此基本上真的结束了，还有一个可优化的是安装完成可以做个自动启动app就完美了，这个有时间继续完善！时间过得好快1点开始写的，现在都快3点半了，困的不行了，得睡觉了，祝大家小长假玩的愉快，有问题可以联系我一起探讨！&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405034332761-1357716482.jpg&quot; alt=&quot;&quot; width=&quot;409&quot; height=&quot;815&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405034459140-1985675918.jpg&quot; alt=&quot;&quot; width=&quot;399&quot; height=&quot;825&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405034751553-9423638.jpg&quot; alt=&quot;&quot; width=&quot;405&quot; height=&quot;831&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405035013814-565475762.jpg&quot; alt=&quot;&quot; width=&quot;407&quot; height=&quot;832&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405035013814-565475762.jpg&quot; alt=&quot;&quot; width=&quot;408&quot; height=&quot;838&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/506960/201904/506960-20190405035125917-679573758.jpg&quot; alt=&quot;&quot; width=&quot;406&quot; height=&quot;837&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 04 Apr 2019 19:54:00 +0000</pubDate>
<dc:creator>wuzhang</dc:creator>
<og:description>作为一个游戏开发者，更新这个技能是必不可少的！更新分为游戏内的更新，也就是所谓的资源热更包括AssetBundle更新和代码更新，代码其实也是所谓的二进制文件，在安卓上和普通资源文件毫无差异，然而在I</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wuzhang/p/wuzhang20190405.html</dc:identifier>
</item>
<item>
<title>[java工具类01]__构建格式化输出日期和时间的工具类 - 小舍先生</title>
<link>http://www.cnblogs.com/gemuxiaoshe/p/10657828.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gemuxiaoshe/p/10657828.html</guid>
<description>&lt;p&gt;在之前的学习中,我写过一篇关于字符串格式化的,就主要设计到了时间以及日期的各种格式化显示的设置,其主要时通过String类的fomat()方法实现的.&lt;/p&gt;
&lt;p&gt;我们可以通过使用不同的转换符来实现格式化显示不同的时间以及日期信息,但我们了解到,时间以及日期的转换符实在是太多了,导致我们无法十分方便的在需要的时候格式化出想要的日期时间输出格式.&lt;/p&gt;
&lt;p&gt;然而在学习过程中,我们了解到类是可以相互调用的,以及静态方法是可以跨类使用的,,所以,通过本文,将构建一个显示时间日期的工具类,定义几个常用的日期时间格式,之后我们在使用的时候,只需要调用相应的方法即可.&lt;br/&gt;*&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;在2019项目下创建专门的包My_tools(工具类包),并在包FormatTimetool工具类.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package My_tools; // 创建包,我的工具类

import java.util.Date;
import java.util.Locale;

/**
 * @outhor xiaoshe
 * @date 2019/4/5  - @time 1:22
 * 创建格式时间的工具类.
 * 之前学到的格式化日期时间,,而我们知道,日期时间的表示,我们需要经常使用到,所以这里抽出为静态方法,作为工具类来使用.
 */
public class FormatTimetool {

    static Date date = new Date();  // 实例化一个静态的Date对象.

    //将时间按24小时制,分:秒格式输出
    public static void ShowTime_colon(){
        System.out.println(String.format(&quot;%tR&quot;,date));
    }
    //将时间按24小时制,以时:分:秒的格式完整输出
    public static void ShowAlltime_colon(){
        System.out.println(String.format(&quot;%tT&quot;,date));
    }
    //将时间按减号,以:年-月-日的格式输出.
    public static void Showdate_Minus(){
        System.out.println(String.format(&quot;%tF&quot;,date));
    }
    // 将时间按斜杠,以月/日/年的格式输出
    public static void Showdate_Slash(){
        System.out.println(String.format(&quot;%tD&quot;,date));
    }
    // 将年-月-日的格式的日期和时:分的格式的时间组合输出
    public static void SdateTime_mc(){
        System.out.println(String.format(&quot;%tF&quot;,date)+&quot; &quot;+String.format(&quot;%tR&quot;,date));
    }
    // 将年-月-日的格式的日期和时:分:秒的格式的时间组合输出
    public static void SdateAllTime_mc(){
        System.out.println(String.format(&quot;%tF&quot;,date)+&quot; &quot;+String.format(&quot;%tT&quot;,date));
    }
    //将月/日/年的格式的日期和时:分的格式的时间组合输出
    public static void Sdatetime_sc(){
        System.out.println(String.format(&quot;%tD&quot;,date)+&quot; &quot;+String.format(&quot;%tR&quot;,date));
    }

    //英文下的的星期几全称输出
    public static void ShowWeek_e(){
        System.out.println(String.format(Locale.ENGLISH,&quot;%tA&quot;,date));
    }
    //输出中文星期几
    public static void ShowWeek(){
        System.out.println(String.format(Locale.CHINA,&quot;%tA&quot;,date));
    }

    // 按固定格式输出: x年x月x日;x时x分;
    public static void Sdate_china(){
        String ayear = String.format(&quot;%tY&quot;,date);
        String amonth = String.format(&quot;%tm&quot;,date);
        String aday = String.format(&quot;%te&quot;,date);
        System.out.println(ayear+&quot;年&quot;+amonth+&quot;月&quot;+aday+&quot;日&quot;);
    }
    //按固定格式输出:x时x分
    public static void Stime_china(){
        String ahour = String.format(&quot;%tH&quot;,date);
        String aminute = String.format(&quot;%tM&quot;,date);
        System.out.println(ahour+&quot;时&quot;+aminute+&quot;分&quot;);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;测试&lt;br/&gt;我们任意新建一个类,调用FormatTimetool工具类的方法试试.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt; public static void main(String[] args) {  // 主方法。
        //显示时间的两种格式
        FormatTimetool.ShowTime_colon(); // 时:分
        FormatTimetool.ShowAlltime_colon(); // 时:分:秒
        //显示日期的两种格式
        FormatTimetool.Showdate_Minus(); // 年-月-日
        FormatTimetool.Showdate_Slash(); // 月/日/年
        // 三种显示日期时间的格式
        FormatTimetool.SdateTime_mc(); // 年-月-日 时:分
        FormatTimetool.SdateAllTime_mc(); // 年-月-日 时:分:秒
        FormatTimetool.Sdatetime_sc(); // 月/日/年 时:分
        //两种自定义日期时间输出
        FormatTimetool.Sdate_china(); // x年x月x日
        FormatTimetool.Stime_china(); // x时x分
        // 显示星期的两种格式
        FormatTimetool.ShowWeek(); // 中文星期几
        FormatTimetool.ShowWeek_e(); // 英文星期全称
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;结果&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/8067684-950053800bfdf704.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;2019-4-5-01.png&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;成功显示了各种不同的时间日期格式化输出.&lt;br/&gt;***&lt;br/&gt;在编写程序的时候,我们通常会将一些会多此重复使用到的公用方法单独抽出构建成为工具类,以达到方便我们编写程序,减少多余的重复性操作,在之后,我们也可以将编写的功能模块化,使其更具通用性.在需要使用的时候,只需要简单的调用就行.&lt;/p&gt;
&lt;p&gt;工具类系列将会记录我个人的工具类的构建过程,之后会持续更新自己将会使用到的一些工具类的构建.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;更新时间:&lt;br/&gt;2019-4-5&lt;br/&gt;3:07&lt;/p&gt;
</description>
<pubDate>Thu, 04 Apr 2019 19:10:00 +0000</pubDate>
<dc:creator>小舍先生</dc:creator>
<og:description>在之前的学习中,我写过一篇关于字符串格式化的,就主要设计到了时间以及日期的各种格式化显示的设置,其主要时通过String类的fomat()方法实现的. 我们可以通过使用不同的转换符来实现格式化显示不同</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gemuxiaoshe/p/10657828.html</dc:identifier>
</item>
<item>
<title>那些优秀的.NET开发者----汪宇杰：从重视细节，到成就技术专家 - 溪源More</title>
<link>http://www.cnblogs.com/xiyuanMore/p/10657773.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiyuanMore/p/10657773.html</guid>
<description>&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;strong&gt;初识汪宇杰&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;在长沙.NET技术社区筹建过程中，溪源有幸认识来自上海的MVP汪宇杰Edi Wang。在中国众多的微软MVP中，Edi Wang作为一名九零后，也是一位年轻而充满才气的开发者，或许他或许外表平(Ying)平(Jun)无(Xiao)奇(Sa)，但是却没有走奶油小生的颜值出道，而是心怀丘壑，视.net技术为精神动力，他对c#语言和微软的技术体系尤其充满了学习的兴趣，他甚至以微软大国王自称，写了许许多多有关.net 技术的博客，在坊间留下了许多精彩的故事。 当我说想写《&lt;a href=&quot;https://www.cnblogs.com/xiyuanMore/p/10445986.html&quot;&gt;我们身边那些优秀的.NET开发者&lt;/a&gt;》系列的第二篇博客，想写一写他的故事时，他起初还有点抗拒，他说别写我，应该没有人有我这么惨，遇到过那么多的坑吧，他说社区中优秀的开发者无比众多，每一个人都有自己的独特品质，而他也不过只是最平凡的一位。正是这种谦虚内秀的品质令我敬佩，并把这篇博客写了出来。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;&lt;span&gt;从UWP到.NET Core&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;在.NET技术体系中，最悲催的一种技术大概属于微软移动开发技术，包括Windows Mobile开发以及后来的UWP开发技术（通用Windows平台技术）。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201904/191302-20190405010752139-1597385948.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;在微软的产品线规划中，曾经对移动充满了梦想，花了72亿美刀的高价收购了没落贵族Nokia，然而由于各种原因，最终移动战略失败，留下满地鸡毛。直到萨提亚·纳德拉被推举成CEO之后，逐渐的将微软在移动领域上的积累往surface上发展，推出了UWP技术，其目的是为了能够通过开发一个应用，在所有的windows10设备上运行。不过对于广大.net开发者来说，虽然这种技术吸收了XAML和WPF技术的精华，可谓站在了巨人的肩膀上，但是由于学习资源的限制或市场原因，未能得到普及，尤其在中国内地，基于UWP开发app的开发者少之又少。2017年我也曾经学习和了解UWP技术，并试图使用这种技术来开发一个移动端的应用，但是后来由于项目过于赶工期，踩UWP的坑将面临的挑战过于巨大，因此仅仅开发了一个最简单的demo，然后就被迫放弃了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;而翻开Edi Wang的个人博客网站(edi.wang)，从2015年到2018年间前前后后发表了大约40多篇关于UWP开发的博客，他还曾经坚持使用UWP技术开发了30多个应用，目前在github上得到了较为瞩目的关注度，有的应用还拥有数百万用户，但是Edi Wang都将这些项目开源出来了，成为了UWP开发者们(如果还有的话)了解和学习这种技术过程中轻易可以获得的宝贵财富，尤其是他踩过的那么多坑，也可以为其他开发者提供便利。 &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;当然，后来有幸听ediwang说UWP只是他会的众多技术栈中间的一个，而他的主要技术依然是asp.net的技术栈。对于开发者来说，所谓技术，不过是解决问题的工具而已，优秀的开发者总是善于钻研技术和学习技术，并从技术中汲取进步的养分，并成长为更加优秀的开发者。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;Edi Wang就是这样的开发者，一位年轻的90后开发者，从最早的ASP.NET，UWP技术出发，现在又在.NET Core领域认真钻研，一方面为实现企业的技术转型做出了贡献，另一方面也为开源社区贡献了许多学习资料，这使得他得以成长为一位MVP，他的成长历程，堪称我们身边的典范。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;strong&gt;绿帽风波&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;3月初，微软vs2019预览版的发布成为不少.NET开发者关注的新闻，而其中一个不起眼的小问题格外引人注目，在此后的新闻中，被称为“微软绿帽事件”。在vs2019之前的宇宙第一IDE visual studio安装文件的启动项，都是一位头戴绿色遮阳帽的骑自行车少年。如下图：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201904/191302-20190405010805752-940741193.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;以前笔者也经常跟朋友谈起，说微软肯定不知道中国人对于绿帽子的避讳。但是在visual studio 2019预览版中，这个bug被微软进行了修复，而这个issue的提出者正是EdiWang。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201904/191302-20190405010813885-601559958.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;然而，在事件发生之后，这个新闻占领了一周的头条，不少看热闹的群众纷纷指责微软这是浪费时间、那么多优先级更高的bug不解决，却优先解决这个无关紧要的bug，而且Edi Wang作为一位mvp，一位社区领袖，不花时间做开源，却操这些闲心干这些无聊的事，根本就是尸位素餐，浪费资源，一时间Edi Wang莫名其妙的成为了一位网络红人。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;但是笔者却认为，作为一位负责任的技术专家、一位MVP，让微软技术能够在中国内地更好的落地，更好的符合当地的文化习俗，本身是他的义务。而遇到问题要较真，刨根问底，发现问题，并想办法解决，这正是体现了一位优秀工程师的精神。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;当然不仅仅是这件小事，在他的个人博客中，写了许许多多不同的问题，这些问题，有的看似简单却极其刁钻，有的则看起来非常的高大上，让人不明觉厉。 当然，他的博客很多都是英文版的，可能阅读需要花一点点时间，这也让他的博客在国内.net开发者中拥有大量拥趸的同时，也获得了大洋彼岸优秀开发者的关注。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;strong&gt;工程师思维&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;回到这个成功学泛滥的21世纪，大概大家心目中，认为优秀，一定是用来形容那些事业有成，财富自由的企业家，或者为国家做出突出贡献的专家，或者只有成为管理者，才能证明一个人的价值。然而，笔者认为，企业家和专家学者们，他们固然是优秀的典范，而那些在我们身边，深耕于技术，致力于技术的应用和普及的优秀开发者们，他们不仅仅是我们学习路上的良师益友，更是我们引以为傲的榜样，他们身上表现出来的精神，正是工程师精神和工程师思维，这种优秀的思维方式，让他们脱颖而出，得以成为企业的栋梁以及社区的精神支柱。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/191302/201904/191302-20190405010820304-1199322161.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;上面这张图，来源于《软件质量报道》公众号的文章《软件研发三大思维之三：工程思维》，在这张图表中，介绍了三种不同的思维，而工程思维则是与软件工程师们最为接近的一种思维方式。无论是基于目标为导向的解决问题、价值定向的基本能力外、做正确的事并正确地做事，并在做事中不断的提高质量与效率和规范化，也是一种正确的思维导向，由于全文太长，这里就不再赘述了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;随着中国互联网发展速度的逐渐放缓，也意味着像过去十年那样大规模的IT 基础设施投入的可能性将越来越小，IT 产业的寒冬显然将一直持续。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;而离开IT 我们还能干什么？这或许是个问题。但是在此之前，只有努力使自己成为最专业的软件工程师，或许可能让我们具备更多的筹码。 &lt;br/&gt;与软件行业莫过于制造业和建筑业吧，在这些工业领域，涌现出了许多大国工匠，这些工匠们他们对产品、技术孜孜不倦，一丝不苟，于小处着眼、矢志于产品品质的提高，持续五年、十年，乃至数十年的辛苦付出，最终让他们得以生产出最优质的产品，服务于最优质的客户，创造最优秀的价值。 &lt;br/&gt;而软件工程师或许同样应该如此，我们所设计开发的软件产品，就是我们的作品。 &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;对技术充满渴望，时刻探究技术细节，让每一个部分都能尽可能的了然如心，做一位刨根问底的开发者，培养自己的工程师思维，努力成为最优秀的工程师，或许，未来我们都将成为IT产业的大国工匠。 &lt;/p&gt;
&lt;p&gt;【版权声明】 &lt;/p&gt;
&lt;p&gt;作品来自于长沙.NET技术社区成员【邹溪源】，有兴趣了解长沙.NET技术社区详情，请关注公众号【DotNET技术圈】,作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。&lt;/p&gt;

</description>
<pubDate>Thu, 04 Apr 2019 17:12:00 +0000</pubDate>
<dc:creator>溪源More</dc:creator>
<og:description>初识汪宇杰 在长沙.NET技术社区筹建过程中，溪源有幸认识来自上海的MVP汪宇杰Edi Wang。在中国众多的微软MVP中，Edi Wang作为一名九零后，也是一位年轻而充满才气的开发者，或许他或许外</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiyuanMore/p/10657773.html</dc:identifier>
</item>
<item>
<title>oracle_dataGuard_11G - 花雨的季节</title>
<link>http://www.cnblogs.com/lilihong/p/10657728.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lilihong/p/10657728.html</guid>
<description>&lt;p&gt;【李红】--切记_从库只安装实例_不需要 dbca 创建数据库 但是 netca 创建监听看个人喜欢，我反正是创建了。&lt;br/&gt;【DataGuard_主数据库的参数配置】&lt;br/&gt;1.启用 force logging 功能&lt;br/&gt;SQL&amp;gt; select force_logging from v$database; //查看数据库有没有开启此功能 如果不是 YES 是 NO 的话执行下面一条语句。如果是的话，则不需要执行&lt;br/&gt;SQL&amp;gt; alter database force logging;&lt;/p&gt;
&lt;p&gt;2.启用归档&lt;br/&gt;SQL&amp;gt; archive log list;&lt;br/&gt;SQL&amp;gt; select log_mode from v$database;&lt;/p&gt;
&lt;p&gt;归档有两个参数如下：&lt;br/&gt;SQL&amp;gt; show parameter log;&lt;br/&gt;文件名格式的参数：log_archive_format&lt;br/&gt;SQL&amp;gt; alter system set log_archive_format='%t_%s_%r.arc' scope = spfile; //修改默认文件参数：log_archive_format&lt;/p&gt;
&lt;p&gt;位置：log_archive_dest&lt;br/&gt;SQL&amp;gt; alter system set log_archive_dest_1='location=/u02/oracle/archive'; //设置归档文件路径&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;SQL&amp;gt; shutdown immediate; //修改配置需要重启数据库实例&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; startup mount; //启动到 mount 状态 修改归档&lt;br/&gt;SQL&amp;gt; alter database archivelog; //打开数据库的归档模式&lt;br/&gt;SQL&amp;gt; alter database open; //启动数据库&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;3.设置主库监听&lt;br/&gt;主库：&lt;br/&gt;做静态监听 1522 端口&lt;br/&gt;备库：&lt;br/&gt;做静态监听 1522 端口&lt;/p&gt;
&lt;p&gt;[oracle@DBprimary admin]$ pwd&lt;br/&gt;/u01/app/oracle/product/11.2.0/db_1/network/admin&lt;/p&gt;
&lt;p&gt;[oracle@DBprimary admin]$ ls&lt;br/&gt;listener.ora samples shrept.lst tnsnames.ora&lt;br/&gt;[oracle@DBprimary admin]$ vim listener.ora&lt;br/&gt;# listener.ora Network Configuration File: /u01/app/oracle/product/11.2.0/db_1/network/admin/listener.ora&lt;br/&gt;# Generated by Oracle configuration tools.&lt;/p&gt;
&lt;p&gt;LISTENER =&lt;br/&gt;(DESCRIPTION_LIST =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1521))&lt;br/&gt;(ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;LISTENER1 =&lt;br/&gt;(DESCRIPTION_LIST =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS_LIST =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1522))&lt;br/&gt;)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;SID_LIST_LISTENER1 =&lt;br/&gt;(SID_LIST =&lt;br/&gt;(SID_DESC =&lt;br/&gt;(GLOBAL_DBNAME = primary)&lt;br/&gt;(SID_NAME = primary)&lt;br/&gt;(ORACLE_HOME = /u01/app/oracle/product/11.2.0/db_1)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;ADR_BASE_LISTENER = /u01/app/oracle&lt;/p&gt;
&lt;p&gt;[oracle@primary ~]$ lsnrctl start listener1 //启动刚刚配置的 静态监听&lt;/p&gt;
&lt;p&gt;4.配置主库的初始化参数：&lt;br/&gt;SQL&amp;gt; show parameter db_unique_name; //查看自己的服务名&lt;br/&gt;SQL&amp;gt; alter system set db_unique_name = '自己要设置的服务名' scope=spfile; //修改之后需要重启数据库_根据需要，这一步可以不操作&lt;br/&gt;SQL&amp;gt; alter system set log_archive_config='DG_CONFIG=(primary,standby)' scope=both;&lt;br/&gt;SQL&amp;gt; show parameter log_archive_config; //查看设置的 DG_CONFIG&lt;br/&gt;SQL&amp;gt; alter system set log_archive_dest_1='LOCATION=/u02/oracle/archive VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=primary' scope=both;&lt;br/&gt;SQL&amp;gt; alter system set log_archive_dest_2='SERVICE=tnsstandby LGWR SYNC AFFIRM VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=standby' scope=both;&lt;br/&gt;SQL&amp;gt; quit;&lt;/p&gt;
&lt;p&gt;[oracle@primary admin]$ pwd&lt;br/&gt;/u01/app/oracle/product/11.2.0/db_1/network/admin&lt;/p&gt;
&lt;p&gt;[oracle@primary admin]$ ls&lt;br/&gt;listener.ora samples shrept.lst tnsnames.ora&lt;/p&gt;
&lt;p&gt;[oracle@primary admin]$ vim tnsnames.ora&lt;br/&gt;# tnsnames.ora Network Configuration File: /u01/app/oracle/product/11.2.0/db_1/network/admin/tnsnames.ora&lt;br/&gt;# Generated by Oracle configuration tools.&lt;/p&gt;
&lt;p&gt;PRIMARY =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1521))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;tnsstandby =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = standby.localdomain)(PORT = 1522))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;[oracle@primary admin]$ sqlplus / as sysdba&lt;br/&gt;SQL&amp;gt; show parameter db_file;&lt;br/&gt;db_file_name_convert //设置这个参数:数据文件&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; show parameter log;&lt;br/&gt;log_file_name_convert //设置这个参数：重做日志文件&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; select name from v$datafile; //查看数据库的数据存放路径&lt;br/&gt;SQL&amp;gt; alter system set db_file_name_convert='/u01/app/oracle/oradata/standby','/u01/app/oracle/oradata/primary' scope = spfile; //做对望在前的绑定地址&lt;br/&gt;SQL&amp;gt; select * from v$logfile; //查看 redo 日志&lt;br/&gt;SQL&amp;gt; alter system set log_file_name_convert='/u01/app/oracle/oradata/standby','/u01/app/oracle/oradata/primary' scope = spfile; //做对望在前的绑定地址&lt;br/&gt;SQL&amp;gt; show parameter standby;&lt;br/&gt;SQL&amp;gt; alter system set standby_file_management = auto;&lt;br/&gt;SQL&amp;gt; show parameter fal;&lt;br/&gt;fal_client //这个参数可以不配置_如果要配置可以看下边的 alter&lt;br/&gt;fal_server //这个参数可以不配置_如果要配置可以看下边的 alter&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; alter system set fal_client='tnsprimary' scope = both;&lt;br/&gt;SQL&amp;gt; alter system set fal_server='tnsstandby' scope = both;&lt;/p&gt;

&lt;p&gt;【DataGuard_备数据库的参数配置】&lt;br/&gt;1.拷贝密码文件&lt;br/&gt;主库和备库的 oracle 用户的 sys 密码必须一致。&lt;br/&gt;在主库上操作：&lt;br/&gt;[oracle@primary admin]$ cd $ORACLE_HOME/dbs&lt;br/&gt;[oracle@primary dbs]$ pwd&lt;br/&gt;/u01/app/oracle/product/11.2.0/db_1/dbs&lt;br/&gt;[oracle@primary dbs]$ scp orapwprimary root@备库IP:/u01/app/oracle/product/11.2.0/db_1/dbs&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;在备库上操作：&lt;br/&gt;[oracle@standby dbs]$ ll&lt;br/&gt;total 16&lt;br/&gt;-rw-rw----. 1 oracle oinstall 1544 Mar 28 15:13 hc_standby.dat&lt;br/&gt;-rw-r--r--. 1 oracle oinstall 2851 May 15 2009 init.ora&lt;br/&gt;-rw-r-----. 1 oracle oinstall 24 Mar 15 14:53 lkDBSTANDB&lt;br/&gt;-rw-r----- 1 root root 1536 Mar 29 13:27 orapwprimary&lt;/p&gt;
&lt;p&gt;[oracle@standby dbs]$ mv orapwprimary orapwstandby&lt;/p&gt;
&lt;p&gt;[oracle@standby dbs]$ ll&lt;br/&gt;total 16&lt;br/&gt;-rw-rw----. 1 oracle oinstall 1544 Mar 28 15:13 hc_standby.dat&lt;br/&gt;-rw-r--r--. 1 oracle oinstall 2851 May 15 2009 init.ora&lt;br/&gt;-rw-r-----. 1 oracle oinstall 24 Mar 15 14:53 lkDBSTANDB&lt;br/&gt;-rw-r----- 1 root root 1536 Mar 29 13:27 orapwstandby&lt;/p&gt;
&lt;p&gt;[oracle@standby dbs]$ orapwd file=orapwstandby password = //或者这样设置 密码也可以&lt;br/&gt;[oracle@standby dbs]$ touch initstandby.ora //创建一个启动文件，因为备库不需要 dbca 来创建数据库，所以指定给文件的形式&lt;/p&gt;
&lt;p&gt;[oracle@primary dbs]$ strings spfileprimary.ora //在主库上操作查看这个文件&lt;/p&gt;
&lt;p&gt;[oracle@standby dbs]$ vim initstandby.ora //编辑文件类容&lt;br/&gt;db_name='standby'&lt;br/&gt;db_unique_name='standby'&lt;br/&gt;memory_target=1580204032&lt;br/&gt;audit_file_dest='/u01/app/oracle/admin/standby/adump'&lt;br/&gt;compatible='11.2.0.4.0'&lt;br/&gt;control_files='/u01/app/oracle/oradata/standby/control01.ctl','/u01/app/oracle/fast_recovery_area/standby/control02.ctl'&lt;br/&gt;fal_client='tnsstandby'&lt;br/&gt;fal_server='tnsprimary'&lt;br/&gt;log_archive_config='DG_CONFIG=(primary,standby)'&lt;br/&gt;log_archive_dest_1='LOCATION=/u02/oracle/archive VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=standby'&lt;br/&gt;log_archive_dest_2='SERVICE=tnsstandby LGWR SYNC AFFIRM VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=primary'&lt;br/&gt;db_file_name_convert='/u01/app/oracle/oradata/primary','/u01/app/oracle/oradata/standby'&lt;br/&gt;log_file_name_convert='/u01/app/oracle/oradata/primary','/u01/app/oracle/oradata/standby'&lt;br/&gt;log_archive_format='%t_%s_%r.arc'&lt;br/&gt;standby_file_management='AUTO'&lt;/p&gt;

&lt;p&gt;[oracle@standby ~]$ mkdir -p /u01/app/oracle/admin/standby/adump //创建目录&lt;br/&gt;[oracle@standby ~]$ mkdir -p /u01/app/oracle/oradata/standby&lt;br/&gt;[oracle@standby ~]$ mkdir -p /u02/oracle/archive&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;2.创建实例_启动到 mount 状态&lt;br/&gt;[oracle@standby dbs]$ sqlplus / as sysdba&lt;br/&gt;SQL&amp;gt; create spfile from pfile; //创建启动文件&lt;/p&gt;
&lt;p&gt;File created.&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; startup nomount; //启动到 nomount 状态&lt;br/&gt;ORACLE instance started.&lt;/p&gt;
&lt;p&gt;Total System Global Area 1586708480 bytes&lt;br/&gt;Fixed Size 2253624 bytes&lt;br/&gt;Variable Size 922750152 bytes&lt;br/&gt;Database Buffers 654311424 bytes&lt;br/&gt;Redo Buffers 7393280 bytes&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; show parameter spfile; //查看启动文件的路径地址_可以不看&lt;/p&gt;
&lt;p&gt;NAME TYPE VALUE&lt;br/&gt;------------------------------------ ----------- ------------------------------&lt;br/&gt;spfile string /u01/app/oracle/product/11.2.0&lt;br/&gt;.4/db_1/dbs/spfilestandby.ora&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; show parameter log; //可以同过 log 日志进行查看_设置的参数&lt;/p&gt;

&lt;p&gt;3.配置静态监听_和主库配置是一样的&lt;br/&gt;重要：为什么一定要配置静态监听&lt;br/&gt;nomount 状态下必须使用静态监听才能连接到实例&lt;/p&gt;
&lt;p&gt;[oracle@Standby admin]$ cd /u01/app/oracle/product/11.2.0.4/db_1/network/admin/ //进入该目录&lt;br/&gt;[oracle@Standby admin]$ vim listener.ora //编辑文件类容&lt;br/&gt;# listener.ora Network Configuration File: /u01/app/oracle/product/11.2.0.4/db_1/network/admin/listener.ora&lt;br/&gt;# Generated by Oracle configuration tools.&lt;/p&gt;
&lt;p&gt;LISTENER =&lt;br/&gt;(DESCRIPTION_LIST =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = standby.localdomain)(PORT = 1521))&lt;br/&gt;(ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;LISTENER1 =&lt;br/&gt;(DESCRIPTION_LIST =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS_LIST =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = standby.localdomain)(PORT = 1522))&lt;br/&gt;)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;SID_LIST_LISTENER1 =&lt;br/&gt;(SID_LIST =&lt;br/&gt;(SID_DESC =&lt;br/&gt;(GLOBAL_DBNAME = primary)&lt;br/&gt;(SID_NAME = standby)&lt;br/&gt;(ORACLE_HOME = /u01/app/oracle/product/11.2.0.4/db_1)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;ADR_BASE_LISTENER = /u01/app/oracle&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;[oracle@Standby admin]$ lsnrctl start //启动监听&lt;br/&gt;[oracle@Standby admin]$ lsnrctl start listener1 //启动静态监听&lt;/p&gt;
&lt;p&gt;[oracle@Standby admin]$ sqlplus / as sysdba //进入数据库&lt;/p&gt;
&lt;p&gt;SQL&amp;gt; select status from v$instance; //查看数据库处于什么样的状态&lt;/p&gt;
&lt;p&gt;STATUS&lt;br/&gt;------------&lt;br/&gt;STARTED&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;4.tns配置&lt;br/&gt;先在主库上操作_如下：&lt;br/&gt;[oracle@Primary admin]$ cd /u01/app/oracle/product/11.2.0.4/db_1/network/admin&lt;br/&gt;[oracle@Primary admin]$ vim tnsnames.ora&lt;br/&gt;# tnsnames.ora Network Configuration File: /u01/app/oracle/product/11.2.0.4/db_1/network/admin/tnsnames.ora&lt;br/&gt;# Generated by Oracle configuration tools.&lt;/p&gt;
&lt;p&gt;PRIMARY =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1521))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;tnsstandby =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = standby.localdomain)(PORT = 1522))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;tnsprimary =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1522))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;后再从库上操作_如下：&lt;br/&gt;[oracle@Standby admin]$ cd /u01/app/oracle/product/11.2.0.4/db_1/network/admin&lt;br/&gt;[oracle@Standby admin]$ vim tnsnames.ora&lt;br/&gt;# tnsnames.ora Network Configuration File: /u01/app/oracle/product/11.2.0.4/db_1/network/admin/tnsnames.ora&lt;br/&gt;# Generated by Oracle configuration tools.&lt;/p&gt;
&lt;p&gt;STANDBY =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1521))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;tnsstandby =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = standby.localdomain)(PORT = 1522))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;tnsprimary =&lt;br/&gt;(DESCRIPTION =&lt;br/&gt;(ADDRESS = (PROTOCOL = TCP)(HOST = primary.localdomain)(PORT = 1522))&lt;br/&gt;(CONNECT_DATA =&lt;br/&gt;(SERVER = DEDICATED)&lt;br/&gt;(SERVICE_NAME = primary)&lt;br/&gt;)&lt;br/&gt;)&lt;/p&gt;
&lt;p&gt;5.测试 tns&lt;br/&gt;主库_从库 都做以下操作，通过 OK 才能行&lt;br/&gt;tnsping tnsprimary&lt;br/&gt;tnsping tnsstandby&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;6.测试连接数据库&lt;br/&gt;主库_从库 都做以下操作，通过 OK 才能行 在这里我就不写 备库的操作了！&lt;br/&gt;[oracle@Primary admin]$ sqlplus sys/oracle@tnsprimary as sysdba //主库上操作&lt;/p&gt;
&lt;p&gt;SQL*Plus: Release 11.2.0.4.0 Production on Sat Mar 30 12:05:05 2019&lt;/p&gt;
&lt;p&gt;Copyright (c) 1982, 2013, Oracle. All rights reserved.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;Connected to:&lt;br/&gt;Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production&lt;br/&gt;With the Partitioning, OLAP, Data Mining and Real Application Testing options&lt;/p&gt;
&lt;p&gt;SQL&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;[oracle@Primary admin]$ sqlplus sys/oracle@tnsstandby as sysdba //主库上操作&lt;/p&gt;
&lt;p&gt;SQL*Plus: Release 11.2.0.4.0 Production on Sat Mar 30 12:06:44 2019&lt;/p&gt;
&lt;p&gt;Copyright (c) 1982, 2013, Oracle. All rights reserved.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;Connected to:&lt;br/&gt;Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production&lt;br/&gt;With the Partitioning, OLAP, Data Mining and Real Application Testing options&lt;/p&gt;
&lt;p&gt;SQL&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;【DataGuard主备库参数检查】&lt;br/&gt;[oracle@Primary admin]$ sqlplus / as sysdba //主库上操作&lt;br/&gt;SQL&amp;gt; show parameter db_unique_name; //检查 db_unique_name 是否一致&lt;br/&gt;SQL&amp;gt; show parameter compa; //查看版本信息是否一致&lt;br/&gt;SQL&amp;gt; show parameter log_archive_config; //查看 DG_config&lt;br/&gt;SQL&amp;gt; show parameter log_archive_dest_1; //查看归档路径_指定详细信息&lt;br/&gt;SQL&amp;gt; show parameter log_archive_dest_2; //查看归档路径_指定详细信息&lt;br/&gt;SQL&amp;gt; show parameter db_file; //查看数据文件存放路径&lt;br/&gt;SQL&amp;gt; show parameter log_file_name_convert; //查看数据LOG存放路径&lt;br/&gt;SQL&amp;gt; show parameter log_archive_format;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;[oracle@Standby admin]$ sqlplus / as sysdba //从库上操作&lt;br/&gt;SQL&amp;gt; show parameter db_unique_name; //检查 db_unique_name 是否一致&lt;br/&gt;SQL&amp;gt; show parameter compa; //查看版本信息是否一致&lt;br/&gt;SQL&amp;gt; show parameter log_archive_config; //查看 DG_config&lt;br/&gt;SQL&amp;gt; show parameter log_archive_dest_1; //查看归档路径_指定详细信息&lt;br/&gt;SQL&amp;gt; show parameter log_archive_dest_2; //查看归档路径_指定详细信息&lt;br/&gt;SQL&amp;gt; show parameter db_file; //查看数据文件存放路径&lt;br/&gt;SQL&amp;gt; show parameter log_file_name_convert; //查看数据LOG存放路径&lt;br/&gt;SQL&amp;gt; show parameter log_archive_format;&lt;/p&gt;
&lt;p&gt;【从库操作】&lt;br/&gt;[oracle@Standby ~]$ cd $ORACLE_HOME/dbs //发现 从库的 db_unique_name 是主库的 db_unique_name 需要更改&lt;br/&gt;[oracle@Standby dbs]$ vim initstandby.ora //编辑文件类容 往这个文件里面插入一条新数据——如下：&lt;br/&gt;db_unique_name='standby' //原有的文件内容不变，只是插入一条新的内容进去&lt;/p&gt;
&lt;p&gt;[oracle@Standby dbs]$ sqlplus / as sysdba //进入数据库&lt;br/&gt;SQL&amp;gt; shtudown immediate; //关闭数据库&lt;br/&gt;SQL&amp;gt; create spfile from pfile; //重新创建启动文件_因为你修改配置了，需要重新创建一个启动文件&lt;br/&gt;SQL&amp;gt; startup nomount; //启动到 nomount 状态下&lt;/p&gt;

&lt;p&gt;【使用 Duplicate 创建物理 standby】 备注：主库上操作&lt;br/&gt;[oracle@Primary primary]$ rman target sys/oracle@tnsprimary auxiliary sys/oracle@tnsstandby //这是第一种连接方式_下边的是第二种方式&lt;/p&gt;
&lt;p&gt;[oracle@Primary admin]$ rman target sys/oracle@tnsprimary //创建&lt;br/&gt;RMAN&amp;gt; connect auxiliary sys/oracle@tnsstandby //连接辅助实例 备库就是辅助实例&lt;br/&gt;RMAN&amp;gt; duplicate target database for standby from active database nofilenamecheck; //主备连接实例&lt;/p&gt;

</description>
<pubDate>Thu, 04 Apr 2019 16:40:00 +0000</pubDate>
<dc:creator>花雨的季节</dc:creator>
<og:description>【李红】--切记_从库只安装实例_不需要 dbca 创建数据库 但是 netca 创建监听看个人喜欢，我反正是创建了。【DataGuard_主数据库的参数配置】1.启用 force logging 功</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lilihong/p/10657728.html</dc:identifier>
</item>
<item>
<title>程序员抢复联4首映票的正确方式 - 初码</title>
<link>http://www.cnblogs.com/chuma/p/10657689.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chuma/p/10657689.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/4CE9B9FC94374D9C9F1AD179FFFA3DBE.png&quot; alt=&quot;咸鱼&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;是的，复联4国内定档了，全球最早，我们也当家做主了，争取到了不给外国友人剧透的机会。那么问题又来了，北美已经开启了预售，在Fandango上，前6小时就打破了一直由《星球大战7：原力觉醒》保持的首日24小时预售最高票房纪录，国内的反应却略显迟钝，我从早到晚刷呀刷呀，始终刷不出购票页面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;    众所周知，复联4全程使用IMAX摄影机拍摄，观影最佳体验即是新一代激光imax系统，但放眼全中国，似乎就四五家，再差一点也得是普通imax，最次也必须是Dolby Cinema，剩下的烂幕你敢去看就是条咸鱼。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    僧多肉少，那么这个时候，程序员必须要站出来了，得给自己做个提醒程序，第一时间获得开票信息，抢票付款就完了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    于是我就做了一个开票提醒系统，下面把设计过程介绍一下&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;找一个开票信息的信息源&quot;&gt;&lt;strong&gt;1、找一个开票信息的信息源&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;    既然万达Imax和杜比影院全国最佳，那自然是从万达的应用入手，我的方法也比较简单，&lt;strong&gt;一台安卓机&lt;/strong&gt;，装个&lt;strong&gt;抓包精灵&lt;/strong&gt;，再安装一个&lt;strong&gt;万达电影App&lt;/strong&gt;，首页载入信息必然是个&lt;strong&gt;JSON数据&lt;/strong&gt;，如果里面有“复仇者联盟”关键词，那自然就是开票了，如果没有，就还没有开票。&lt;/p&gt;
&lt;p&gt;    通过抓包可以看到，很顺利的拿到了首页JSON数据，Post地址是：&lt;a href=&quot;https://gateway-api-prd-mx.wandafilm.com/batch_request.api&quot; class=&quot;uri&quot;&gt;https://gateway-api-prd-mx.wandafilm.com/batch_request.api&lt;/a&gt; 。另外有一些特殊的Http头信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/CB14C6A5A1D64D0298F12CAA4285CF2A.png&quot; alt=&quot;抓包1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/90D37F47E94B4EFE80CBB35D09EB629F.png&quot; alt=&quot;抓包2&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;那么我们再用代码模拟一遍试试看经过测试也能顺利拿到结果&quot;&gt;那么我们再用代码模拟一遍试试看，经过测试，也能顺利拿到结果&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/714C46B7DD56462DADE5F4CB8C55131A.png&quot; alt=&quot;代码1&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;功能服务设计&quot;&gt;&lt;strong&gt;2、功能服务设计&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;    下面就要设计具体的功能，并考虑一个完整的闭环服务，使得功能能完整落地下来，具体包括&lt;/p&gt;
&lt;h4 id=&quot;功能设计&quot;&gt;1）功能设计&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;用户登录网站后，可以在绑定手机号和邮箱后，快速订阅开票通知，也可以随时关闭订阅&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;系统配置一个轮询服务，每分钟轮询开票状态，如果开票了，则更新数据库中的状态数据&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;系统再配置一个发送短信和邮件的轮询服务，检测到开票状态，则每分钟给100个用户发短信和邮件通知。&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;申请短信和邮件通道&quot;&gt;2）申请短信和邮件通道&lt;/h4&gt;
&lt;p&gt;    在SendCloud处申请了邮件和短信通道，用于发送通知。&lt;br/&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/4A7FE163328B48D685D29A597A789AC3.png&quot; alt=&quot;短信模板&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;最终功能界面&quot;&gt;&lt;strong&gt;3、最终功能界面&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;    好啦，设计一定要有始有终，我也把上述的设计给完整的发布出来了，给大家免费使用，相关界面如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/EFFABE49007249119145A03899E7477D.png&quot; alt=&quot;界面1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/DC1F17387880478F96A1D0EA930C3987.png&quot; alt=&quot;界面2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    收到通知的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/222838A5FB124CF9BBAC34843A50CD68.png&quot; alt=&quot;效果1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/2C0F916B962341BC97BF551E3140C1A0.png&quot; alt=&quot;效果2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;哈哈到这里就可以安心去睡觉啦也需要订阅的同学们可以通过-chuma.cnae-这个地址直接进入也可以微信扫描下方二维码进入也可以点击阅读原文前往&quot;&gt;哈哈到这里就可以安心去睡觉啦，也需要订阅的同学们，可以通过 chuma.cn/AE 这个地址直接进入，也可以微信扫描下方二维码进入，也可以点击阅读原文前往。&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://image.aliyun.cdn.chuma.cn/CMCore/WSA/Blog/Pic/2A395E3DCC7F412BBBE3C9C32E4D34E3.png&quot; alt=&quot;扫码&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;下面是近期文章的推荐阅读&quot;&gt;下面是近期文章的推荐阅读&lt;/h3&gt;
</description>
<pubDate>Thu, 04 Apr 2019 16:24:00 +0000</pubDate>
<dc:creator>初码</dc:creator>
<og:description>复联4不抢激光IMAX首映，那和咸鱼有什么分别</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chuma/p/10657689.html</dc:identifier>
</item>
<item>
<title>[原]Veracrypt使用Yubikey作为安全令牌 - 月渊</title>
<link>http://www.cnblogs.com/yzpopulation/p/10657657.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yzpopulation/p/10657657.html</guid>
<description>&lt;p&gt;今天刚刚到货Yubikey 5&lt;/p&gt;
&lt;p&gt;美亚 直邮 ，易客满国际，国内居然是顺丰配送，点个赞。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/754602/201904/754602-20190405000222760-1420136861.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;必备的控件&lt;/p&gt;
&lt;p&gt;https://developers.yubico.com/yubikey-manager-qt/Releases/yubikey-manager-qt-1.1.1-win64.exe&lt;/p&gt;
&lt;p&gt;https://github.com/OpenSC/OpenSC&lt;/p&gt;
&lt;p&gt;下面的反正我是装了，没有进行删除测试，反正缺了可以再装&lt;/p&gt;
&lt;p&gt;https://developers.yubico.com/windows-apis/Releases/yubikey-client-API_x64-4.1.0.msi&lt;/p&gt;
&lt;p&gt;https://developers.yubico.com/windows-apis/Releases/yubikey-configuration-API_x64-4.1.0.msi&lt;/p&gt;
&lt;p&gt;https://developers.yubico.com/yubikey-piv-manager/Releases/yubikey-piv-manager-1.4.2g-win.exe&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/754602/201904/754602-20190404235827732-568993203.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;证书是必须的，这个就不多说了&lt;/p&gt;
&lt;p&gt;插入证书 会自动导入到这里&lt;/p&gt;
&lt;p&gt;四个类别，每种可以导入一个&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/754602/201904/754602-20190404235331517-407659780.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 拔掉Yubikey 证书还在，密钥当然还在Yubikey上&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/754602/201904/754602-20190404235431298-226914073.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;文件夹内有两个dll，随便选了一个，测试可行，注意：！！！！x64 的版本问题 openSC 用那个版本 veracrypt就要哪个版本！！！&lt;/p&gt;
&lt;p&gt; C:\Program Files\OpenSC Project\OpenSC\pkcs11\opensc-pkcs11.dll&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/754602/201904/754602-20190404235927427-458462019.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;喜欢这篇文章的可以点个赞！&lt;/p&gt;
</description>
<pubDate>Thu, 04 Apr 2019 16:06:00 +0000</pubDate>
<dc:creator>月渊</dc:creator>
<og:description>今天刚刚到货Yubikey 5 美亚 直邮 ，易客满国际，国内居然是顺丰配送，点个赞。 必备的控件 https://developers.yubico.com/yubikey-manager-qt/R</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yzpopulation/p/10657657.html</dc:identifier>
</item>
<item>
<title>OSPF 基础实验 - Pretty_girll</title>
<link>http://www.cnblogs.com/prettygirll/p/10653087.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/prettygirll/p/10653087.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、环境准备&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1. 软件：GNS3&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2. 路由：c7200&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、实验操作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;WordSection1&quot; readability=&quot;77.5&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;实验要求：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、掌握多区域的 OSPF 配置方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、区别不同区域的路由。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、掌握 OSPF 的路由汇总配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4、掌握 OSPF 的基本配置命令。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5、掌握 OSPF 接口认证及区域认证的配置方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;实验拓扑：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404093343221-1006449209.png&quot; alt=&quot;&quot; width=&quot;684&quot; height=&quot;251&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;实验过程：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;WordSection1&quot; readability=&quot;23&quot;&gt;
&lt;p&gt;&lt;span&gt;1、根据实验拓扑，对路由器各接口配置 IP 地址。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、在各路由器上配置 OSPF 协议。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;R1 上的配置清单：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;R1(config)#router ospf 33                                  

R1(config-router)#net

R1(config-router)#network 192.33.4.0 0.0.0.255 area 1

R1(config-router)#network 192.33.5.0 0.0.0.255 area 1

R1(config-router)#network 192.33.1.0 0.0.0.255 area 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;R2 上的配置清单：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;R2(config)#router ospf 33                                  

R2(config-router)#network 192.33.1.0 0.0.0.255 area 0

R2(config-router)#network 192.33.3.0 0.0.0.255 area 0

R2(config-router)#network 192.33.2.0 0.0.0.255 area 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;R3 上的配置清单：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;R3(config)#router ospf 33                                 

R3(config-router)#network 192.33.2.0 0.0.0.255 area 2

R3(config-router)#network 172.33.0.0 0.0.0.255 area 2

R3(config-router)#network 172.33.1.0 0.0.0.255 area 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;问题 1：在 R2 上查看邻居信息，一共有几个邻居？邻居的路由 ID 是多少？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考命令：&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
show ip ospf neighbor
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;答：一共有两个邻居，邻居ID为：192.33.4.1 、192.33.0.1 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404192527740-2115509833.png&quot; alt=&quot;&quot; width=&quot;628&quot; height=&quot;87&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;问题 2：在 R3 上查看 OSPF 链路状态数据库，一共有几种链路状态，哪几种？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
show ip ospf database
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 答：共有三种链路状态：Router Link States、Net Link States、Summary Net Link States。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404214854867-2050011170.png&quot; alt=&quot;&quot; width=&quot;627&quot; height=&quot;380&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;问题 3：在 R1 上查看路由表，有哪些是其他区域路由？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答：其他区域路由条目&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;O IA    172.33.1.0/24 [110/3] via 192.33.1.2, 02:41:47, FastEthernet0/0
O IA    172.33.0.1/32 [110/3] via 192.33.1.2, 02:41:47, FastEthernet0/0
O IA    192.33.2.0/24 [110/2] via 192.33.1.2, 02:41:47, FastEthernet0/0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404224052662-1090875332.png&quot; alt=&quot;&quot; width=&quot;630&quot; height=&quot;330&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、区域汇总&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在路由器 R1 中查看链路状态数据库，会发现有 2 条类型 3 的 LSA，我们可以在路由器 R2&lt;/span&gt;&lt;span&gt;（ABR）上进行区域汇总，减少路由条目。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;R2(config)#router ospf 33                                 

R2(config-router)#area 2 range 172.33.0.0 255.255.0.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;问题 4：在每个路由器上清空路由表，查看 R1 上路由表有什么变化？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答：172.33.0.1/24 和 172.33.1.1/24两个网络的路由条目汇总为一条路由条目。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;初始R1路由:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404233624101-1951844174.png&quot; alt=&quot;&quot; width=&quot;627&quot; height=&quot;327&quot;/&gt;&lt;/p&gt;
&lt;p&gt;改变R1路由：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404233511815-734733931.png&quot; alt=&quot;&quot; width=&quot;628&quot; height=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同样我们可以在 R1 上对区域 1 的路由进行汇总，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
R1(config-router)#area 1 range 192.33.4.0 255.255.254.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;问题 5：在每个路由器上清空路由表，查看 R3 上路由表有什么变化？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答：R3 路由器上对路由器R1上的Loopback 0接口的网络进行了汇总。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404234815235-2058403223.png&quot; alt=&quot;&quot; width=&quot;622&quot; height=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4、在 R1 和 R2 上启用接口认证&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;明文认证：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;R1 上的参考命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;R1(config)#int f0/0

R1(config-if)#ip ospf authentication

R1(config-if)#ip ospf authentication-key jtc      &lt;/span&gt;&lt;span&gt;        &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;问题 6：配置后等待若干秒，在 R1 上查看路由表，还能看到 R2 和 R3 上的路由吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答：在 R1 上查看路由表，不能看到 R2 和 R3 上的路由条目。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404235211568-1284537936.png&quot; alt=&quot;&quot; width=&quot;632&quot; height=&quot;250&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;问题 7：参考 R1 的配置在 R2 的接口 f0/1 上配置认证，配置后等若干秒，在 R1 上能看到其&lt;/span&gt;&lt;span&gt;他路由器上的路由吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答：在 R1 上查看路由表，能看到 R2 和 R3 上的路由条目。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1594459/201904/1594459-20190404235553299-1760204669.png&quot; alt=&quot;&quot; width=&quot;629&quot; height=&quot;317&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5、密文认证：在 R2 和 R3 的接口上配置密文，参考下列命令配置密文认证，检查结果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;R2 上的参考命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;R2(config)#interface f0/0

R2(config-if)#ip ospf authentication message-digest

R2(config-if)#ip ospf message-digest-key 1 md5 jtc &lt;/span&gt;&lt;span&gt;             &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;在 R3 的 f0/1 接口上参考 R1 的配置进行配置。&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 04 Apr 2019 16:02:00 +0000</pubDate>
<dc:creator>Pretty_girll</dc:creator>
<og:description>一、环境准备 1. 软件：GNS3 2. 路由：c7200 二、实验操作 实验要求： 1、掌握多区域的 OSPF 配置方法。 2、区别不同区域的路由。 3、掌握 OSPF</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/prettygirll/p/10653087.html</dc:identifier>
</item>
<item>
<title>gitbook 入门教程之使用 gitbook.com 在线开发电子书 - 雪之梦技术驿站</title>
<link>http://www.cnblogs.com/snowdreams1006/p/10657647.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/snowdreams1006/p/10657647.html</guid>
<description>&lt;p&gt;&lt;code&gt;gitbook&lt;/code&gt; 官网是官方提供的图书托管的在线平台,分为&lt;strong&gt;新版官网(需要FQ)&lt;/strong&gt; &lt;a href=&quot;https://www.gitbook.com/&quot; class=&quot;uri&quot;&gt;https://www.gitbook.com/&lt;/a&gt; 和旧版官网(无需FQ) &lt;a href=&quot;https://legacy.gitbook.com&quot; class=&quot;uri&quot;&gt;https://legacy.gitbook.com&lt;/a&gt; 两个网站.&lt;/p&gt;
&lt;p&gt;目前均正常提供服务,但令人遗憾的是,两个网站的信息相互独立,而且现在注册的账号默认只能在新版官网中使用,而新版官网的访问速度简直比 &lt;code&gt;github&lt;/code&gt; 还要慢,所以国内用户在线访问你的电子书真的需要点技术手段了!&lt;/p&gt;
&lt;p&gt;本文主要介绍 &lt;code&gt;www.gitbook.com&lt;/code&gt; 官网的基本使用,而 &lt;code&gt;legacy.gitbook.com&lt;/code&gt; 网站我就算是想介绍也没有账号测试啊.&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&quot;巧妇难为无米之炊&quot;,明明你就在那里,可我却什么也做不了.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先大概说一下 &lt;code&gt;gitbook.com&lt;/code&gt; 网站的一些个人总结吧.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gitbook.com&lt;/code&gt; 提供收费和免费服务,有点像早期的 &lt;code&gt;github&lt;/code&gt; ,免费账号只能创建一个私有的命名空间,其他命名空间只能是公开的,这里的命名空间可以理解为一本书.&lt;/p&gt;
&lt;p&gt;这一点是不是有点像早期的 &lt;code&gt;github.com&lt;/code&gt;?免费账号无法创建私有仓库,只能是公开仓库.&lt;br/&gt;(现在 &lt;code&gt;github.com&lt;/code&gt; 已被微软收购,目前可以创建无限量的私有仓库了!)&lt;/p&gt;
&lt;p&gt;再说 &lt;code&gt;gitbook&lt;/code&gt; 的账号问题,像 &lt;code&gt;github&lt;/code&gt; 一样提供用户名和邮箱登录方式,他们的用户名都可以作为二级域名,比如我的用户名是&lt;strong&gt;snowdreams1006&lt;/strong&gt;,那么我的 &lt;code&gt;gitbook&lt;/code&gt; 第一本电子书网址就是 &lt;code&gt;https://snowdreams1006.gitbook.io/index/&lt;/code&gt; ,再看一下我的 &lt;code&gt;github&lt;/code&gt; 个人网址 &lt;code&gt;https://snowdreams1006.github.io/&lt;/code&gt; ,这两个是不是很类似?!&lt;/p&gt;
&lt;p&gt;如果不仔细看的话,八成你会觉得一样,一个是&lt;strong&gt;&lt;code&gt;gitbook.io&lt;/code&gt;&lt;/strong&gt;,另一个是&lt;strong&gt;&lt;code&gt;github.io&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;所以我严重怀疑他俩是不是有着不为人知的私密关系,太多的相似性,鼓励分享,限制私有等等特点.&lt;/p&gt;
&lt;p&gt;无图无真相,趁着这次教程顺便将 &lt;code&gt;github&lt;/code&gt; 个人网站项目同步到 &lt;code&gt;gitbook&lt;/code&gt; 电子书项目了,这样的好处是本地只需要推送到 &lt;code&gt;github&lt;/code&gt; ,自动更新 &lt;code&gt;github.io&lt;/code&gt; 网站(利用的是&lt;code&gt;github&lt;/code&gt; 静态网站托管服务) ,然后再自动同步到 &lt;code&gt;gitbook.io&lt;/code&gt; 网站.&lt;/p&gt;
&lt;p&gt;是不是很神奇,一份源码,两个官网!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-ec5edc86aa71dd30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-gitbook.io-snowdreams1006.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;1.1363636363636&quot;&gt;
&lt;p&gt;&lt;strong&gt;gitbook&lt;/strong&gt; : &lt;a href=&quot;https://snowdreams1006.gitbook.io/index/&quot;&gt;https://snowdreams1006.gitbook.io/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-083ca9343b1c9fc8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-github.io-snowdreams1006.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;1.0714285714286&quot;&gt;
&lt;p&gt;&lt;strong&gt;github&lt;/strong&gt; : &lt;a href=&quot;https://snowdreams1006.gitbook.io/index/&quot;&gt;https://snowdreams1006.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注册信息主要包括用户名和邮箱,还有一些其他信息,没什么特殊的注意事项.&lt;/p&gt;
&lt;blockquote readability=&quot;2.0731707317073&quot;&gt;
&lt;p&gt;访问 &lt;a href=&quot;https://www.gitbook.com/&quot; class=&quot;uri&quot;&gt;https://www.gitbook.com/&lt;/a&gt; 需要 &lt;strong&gt;FQ&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注册账后后会默认生成一个私有的命名空间,因为并不打算将私有电子书托管到 &lt;code&gt;gitbook&lt;/code&gt;,所以接下来直接将其转变成公开电子书进行演示.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-dd5919f151bbac92.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-namespace-list.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;个性性配置&quot;&gt;个性性配置&lt;/h2&gt;
&lt;h3 id=&quot;标题和图片&quot;&gt;标题和图片&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-70c7cbb0f1275684.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-customization-01.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;主题颜色和页面反馈&quot;&gt;主题颜色和页面反馈&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-6d0be0d975c57ab6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-customization-02.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;观众&quot;&gt;观众&lt;/h2&gt;
&lt;p&gt;观众指的是当前电子书面向的受众是谁,公开的和私有的的区别以及设置是否被谷歌搜索收录.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-e202ebe8827c1437.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-audience.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;域名&quot;&gt;域名&lt;/h2&gt;
&lt;p&gt;默认域名是 &lt;code&gt;https://snowdreams1006.gitbook.io/&amp;lt;space&amp;gt;&lt;/code&gt;,如果需要自定义域名,请保证 &lt;code&gt;dns&lt;/code&gt; 能够正确解析到该网站.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-c482bb3b7708a5ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-domain.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;url 设置的命名空间是 &lt;code&gt;index&lt;/code&gt;,因此最终访问路径是 &lt;code&gt;https://snowdreams1006.gitbook.io/index/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;整合&quot;&gt;整合&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gitbook&lt;/code&gt; 默认提供4种整合方式,在下孤陋寡闻只了解 &lt;code&gt;github&lt;/code&gt; ,其余三种没接触过,暂不涉及.&lt;/p&gt;
&lt;h3 id=&quot;选择-github-进行整合&quot;&gt;选择 &lt;code&gt;github&lt;/code&gt; 进行整合&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-f821a3d8f173d23c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;登录-github-并授权&quot;&gt;登录 &lt;code&gt;github&lt;/code&gt; 并授权&lt;/h3&gt;
&lt;p&gt;选择列出公开的仓库,然后输入用户名和密码进行登录并授权.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-11a6456c5a7b0ae1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-grand-access.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-73e913977cc9dfbb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-login.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-c198e785c69152a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-authorize.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;选择目标仓库&quot;&gt;选择目标仓库&lt;/h3&gt;
&lt;p&gt;授权成功后会列出当前 &lt;code&gt;github&lt;/code&gt; 账号下全部的公开仓库,选择目标仓库并点击下一步.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-d215ce3138165c58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-list.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里以 &lt;code&gt;snowdreams1006.github.io&lt;/code&gt; 公开仓库为例,因为该仓库是本人官网源码项目.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-3596a25f2953cc20.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-select.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;同步内容&quot;&gt;同步内容&lt;/h3&gt;
&lt;h4 id=&quot;选择同步分支&quot;&gt;选择同步分支&lt;/h4&gt;
&lt;p&gt;根据实际情况选择同步分支,因为我一般是直接推送到 &lt;code&gt;master&lt;/code&gt; 分支,所以 &lt;code&gt;master&lt;/code&gt; 分支是个人网站的维护分支,因此这一步我选择的是 &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-27711c3f0e0e39ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-sync-branch.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;选择同步内容&quot;&gt;选择同步内容&lt;/h4&gt;
&lt;p&gt;选择同步内容的方式,是从 &lt;code&gt;github&lt;/code&gt; 同步到 &lt;code&gt;gitbook&lt;/code&gt;,还是从 &lt;code&gt;gitbook&lt;/code&gt; 同步到 &lt;code&gt;github&lt;/code&gt;,因为我的项目已托管到 &lt;code&gt;github&lt;/code&gt; ,所以初次同步内容选择的是 &lt;code&gt;github --&amp;gt; gitbook&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-be82fef542c42069.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-sync-content.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;显示-github-按钮&quot;&gt;显示 &lt;code&gt;github&lt;/code&gt; 按钮&lt;/h4&gt;
&lt;p&gt;生成的电子书网站是否显示 &lt;code&gt;github&lt;/code&gt; 按钮,作用是点击该按钮会跳转到关联的&lt;code&gt;github&lt;/code&gt; 仓库上.&lt;/p&gt;
&lt;p&gt;此时心里在想,万一点进 &lt;code&gt;github&lt;/code&gt; ,随手就是一个 &lt;code&gt;star&lt;/code&gt; 呢?哈哈!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-73404044020c0222.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-sync-button.jpg&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;等待内容导入&quot;&gt;等待内容导入&lt;/h4&gt;
&lt;p&gt;根据目标仓库的大小不同,导入内容是的时长自然也不一样,耐心等待...&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-d38a606dc1e5087d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-sync-importing.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-9547e3e7928b8418.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-sync-imported.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;上线&quot;&gt;上线&lt;/h3&gt;
&lt;p&gt;导入完成,电子书终于正式上线了!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/16648241-b1e6222fce3751b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitbook-experience-gitbook-com-integration-github-go-live.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在赶紧分享一下好消息吧,访问 &lt;a href=&quot;https://snowdreams1006.gitbook.io/index/&quot;&gt;https://.gitbook.io/&lt;/a&gt; 在线阅读!&lt;/p&gt;

&lt;p&gt;本文以如何集成 &lt;code&gt;github&lt;/code&gt; 为例,演示了 &lt;code&gt;gitbook.com&lt;/code&gt; 发布电子书的基本流程,由于 &lt;code&gt;gitbook&lt;/code&gt; 电子书内容来自于 &lt;code&gt;github&lt;/code&gt; 项目,因此我们只要更新 &lt;code&gt;github&lt;/code&gt; 仓库,我们的 &lt;code&gt;gitbook&lt;/code&gt; 电子书网站自然也就相应更新了!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gitbook&lt;/code&gt; 是 &lt;code&gt;markdown&lt;/code&gt; 和 &lt;code&gt;github&lt;/code&gt; 的完美结合体,借助 &lt;code&gt;gitbook.com&lt;/code&gt; 官网我们很容易发布并托管电子书.&lt;/p&gt;
&lt;p&gt;美中不足的是,国内无法正常访问 &lt;code&gt;gitbook.com&lt;/code&gt; ,因此并不是很推荐将电子书发布到 &lt;code&gt;gitbook.com&lt;/code&gt; 网站.&lt;/p&gt;
&lt;p&gt;现在国内也有类似的产品,有一种产品叫做 &lt;a href=&quot;https://www.kancloud.cn/&quot;&gt;看云&lt;/a&gt;,还不错!&lt;/p&gt;
&lt;p&gt;后续还会介绍 &lt;code&gt;gitbook&lt;/code&gt; 如何结合 &lt;code&gt;github&lt;/code&gt; 发布个人网站,欢迎继续关注 &lt;code&gt;gitbook&lt;/code&gt; 系列教程!&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;如何打造免费的个人官网,想了解 &lt;code&gt;https://snowdreams1006.github.io/&lt;/code&gt; 背后的故事吗?&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Thu, 04 Apr 2019 16:00:00 +0000</pubDate>
<dc:creator>雪之梦技术驿站</dc:creator>
<og:description>`gitbook` 官网是官方提供的图书托管的在线平台,分为 新版官网(需要FQ) 'https://www.gitbook.com/' 和旧版官网(无需FQ) 'https://legacy.git</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/snowdreams1006/p/10657647.html</dc:identifier>
</item>
<item>
<title>在 CentOS/Fedora 下安装 JAVA 环境 - kelsen</title>
<link>http://www.cnblogs.com/kelsen/p/10657596.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kelsen/p/10657596.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/634103/201904/634103-20190405000319046-1615757202.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;
&lt;p&gt;本文介绍如何在 CentOS 7（6/6.5）、 Fedora、RHEL 上安装 Java。Java是一个流行的软件平台，允许您运行Java应用程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文涵盖了以下Java版本的安装：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;OpenJDK 8&lt;/li&gt;
&lt;li&gt;Oracle Java 8&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;先决条件&quot;&gt;先决条件&lt;/h2&gt;
&lt;p&gt;在开始之前，您应该有一个能够执行 root 权限命令的用户账户。&lt;/p&gt;
&lt;h2 id=&quot;java的变化&quot;&gt;Java的变化&lt;/h2&gt;
&lt;p&gt;Java平台有三个不同版本：标准版（SE）、企业版（EE）和微型版（ME）。本文主要关注Java SE。&lt;/p&gt;
&lt;p&gt;可以安装两个不同的Java SE包：Java运行时环境（JRE）和Java Development Kit（JDK）。JRE是Java虚拟机（JVM）的一种实现，它允许您运行已编译的Java应用程序和applet。JDK包括JRE及开发和编译Java应用所需的其他软件。&lt;/p&gt;
&lt;p&gt;还有两种不同的Java实现：OpenJDK 和 Oracle Java。这两种实现都基于相同的代码，但 OpenJDK（Java的参考实现）是完全开源的，而Oracle Java包含一些专有代码。&lt;/p&gt;
&lt;p&gt;您可以在单个系统上安装各种版本的Java，但大多数人只需要安装一个版本。考虑到这一点，请尝试仅安装运行或开发应用程序所需的Java版本。&lt;/p&gt;
&lt;h2 id=&quot;安装openjdk-8&quot;&gt;安装OpenJDK 8&lt;/h2&gt;
&lt;p&gt;本节介绍如何使用 dnf 包管理器安装预构建的OpenJDK 8 JRE和JDK包，这类似于Ubuntu / Debian的apt-get。&lt;/p&gt;
&lt;h3 id=&quot;安装openjdk-8-jre&quot;&gt;安装OpenJDK 8 JRE&lt;/h3&gt;
&lt;p&gt;要使用 dnf 安装OpenJDK 8 JRE，请运行以下命令：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ sudo dnf install java-1.8.0-openjdk&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在确认提示下，输入 y 然后 RETURN 继续安装。&lt;/p&gt;
&lt;h3 id=&quot;安装openjdk-8-jdk&quot;&gt;安装OpenJDK 8 JDK&lt;/h3&gt;
&lt;p&gt;要使用 dnf 安装OpenJDK 8 JDK，请运行以下命令：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ sudo dnf install java-1.8.0-openjdk-devel&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在确认提示下，输入 y 然后 RETURN 继续安装。&lt;/p&gt;
&lt;h3 id=&quot;安装oracle-java-8&quot;&gt;安装Oracle Java 8&lt;/h3&gt;
&lt;p&gt;这一部介绍如何安装 Oracle Java 8 JRE 和 JDK（64位）。&lt;strong&gt;注意：在安装Oracle Java之前，您必须接受 Java SE 的 Oracle 二进制代码许可协议，这是包含的步骤之一。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装oracle-java-8-jre&quot;&gt;安装Oracle Java 8 JRE&lt;/h3&gt;
&lt;p&gt;注意：要安装Oracle Java 8 JRE，您需要转到 Oracle Java 8 JRE 下载页面，接受许可协议，并复制相应 .rpm 软件包的下载链接。&lt;/p&gt;
&lt;p&gt;切换到您的主目录并使用以下命令下载 Oracle Java 8 JRE RPM：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ cd ~
$ wget --no-cookies --no-check-certificate --header &quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot; &quot;http://link_copied_from_site&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后使用此yum命令安装RPM（如果您下载了其他版本，请在此处替换文件名）：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ sudo yum localinstall jre-8u161-linux-x64.rpm&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在确认提示下，输入y然后RETURN继续安装。&lt;/p&gt;
&lt;p&gt;现在 Java 应该安装在&lt;code&gt;/usr/java/jre1.8.0_161/bin/java&lt;/code&gt;，并从&lt;code&gt;/usr/java/jre1.8.0_161/bin/java&lt;/code&gt;链接。&lt;/p&gt;
&lt;p&gt;您可以删除先前下载的存档文件：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ rm ~/jre-8u161-linux-x64.rpm&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;安装-oracle-java-8-jdk&quot;&gt;安装 Oracle Java 8 JDK&lt;/h3&gt;
&lt;p&gt;注意：要安装Oracle Java 8 JDK，您需要转到Oracle Java 8 JDK下载页面，接受许可协议，并复制相应Linux .rpm软件包的下载链接。&lt;br/&gt;切换到您的主目录并使用以下命令下载Oracle Java 8 JDK RPM：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ cd ~
$ wget --no-cookies --no-check-certificate --header &quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot; &quot;http://link_copied_from_site&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后使用此yum命令安装RPM（如果您下载了其他版本，请在此处替换文件名）：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ sudo yum localinstall jdk-8u161-linux-x64.rpm&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在确认提示下，输入y然后RETURN继续安装。&lt;/p&gt;
&lt;p&gt;现在Java应该安装在&lt;code&gt;/usr/java/jdk1.8.0_161/jre/bin/java&lt;/code&gt;，并从&lt;code&gt;/usr/java/jdk1.8.0_161/jre/bin/java&lt;/code&gt;链接。&lt;/p&gt;
&lt;p&gt;您可以删除先前下载的存档文件：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ rm ~/jdk-8u161-linux-x64.rpm&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;设置默认java&quot;&gt;设置默认Java&lt;/h2&gt;
&lt;p&gt;如果您安装了多个版本的Java，则需要将其中的某一个设置为默认值（即用户运行java命令时将运行的版本）。此外，某些应用程序需要设置某些环境变量来定位要使用的Java安装。本节将向您展示如何执行此操作。&lt;/p&gt;
&lt;p&gt;顺便说一句，要检查默认Java的版本，请运行以下命令：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ java -version&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用-alternatives&quot;&gt;使用 Alternatives&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;alternatives&lt;/code&gt; 命令通过符号链接管理默认命令，可用于选择默认Java命令。&lt;/p&gt;
&lt;p&gt;要打印提供java由其管理的命令的程序alternatives，请使用以下命令：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ sudo alternatives --config java&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出应该类似以下结果：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;output
There are 5 programs which provide 'java'.

  Selection    Command
-----------------------------------------------
   1           java-1.7.0-openjdk.x86_64 (/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.161-2.6.12.0.el7_4.x86_64/jre/bin/java)
   2           java-1.8.0-openjdk.x86_64 (/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-5.b12.el7_4.x86_64/jre/bin/java)
   3           /usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java
*+ 4           /usr/java/jre-9.0.4/bin/java
   5           /usr/java/jdk-9.0.4/bin/java




Enter to keep the current selection[+], or type selection number: 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;只需输入选择号即可选择java默认情况下应使用的可执行文件。&lt;/p&gt;
&lt;h3 id=&quot;使用环境变量&quot;&gt;使用环境变量&lt;/h3&gt;
&lt;p&gt;许多Java应用程序使用JAVA_HOME或JRE_HOME环境变量来确定java要使用的可执行文件。&lt;/p&gt;
&lt;p&gt;例如，如果您安装Java在 &lt;code&gt;/usr/java/jdk1.8.0_161/jre/bin&lt;/code&gt;（即可java执行文件位于/usr/java/jdk1.8.0_161/jre/bin/java），您可以设置环境变量 JAVA_HOME 在bash shell或脚本中，如下所示：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ export JAVA_HOME=/usr/java/jdk1.8.0_161/jre&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果要将环境变量 JAVA_HOME 在系统上为每个用户可用，请运行以下命令：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ sudo sh -c &quot;echo export JAVA_HOME=/usr/java/jdk1.8.0_161/jre &amp;gt;&amp;gt; /etc/environment&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;结论&quot;&gt;结论&lt;/h2&gt;
&lt;p&gt;恭喜，您现在可以运行和/或开发Java应用程序了！&lt;/p&gt;
</description>
<pubDate>Thu, 04 Apr 2019 15:43:00 +0000</pubDate>
<dc:creator>kelsen</dc:creator>
<og:description>介绍 本文介绍如何在 CentOS 7（6/6.5）、 Fedora、RHEL 上安装 Java。Java是一个流行的软件平台，允许您运行Java应用程序。 本文涵盖了以下Java版本的安装： Ope</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kelsen/p/10657596.html</dc:identifier>
</item>
<item>
<title>昂首阔步进入后互联网时代，我们有必要了解一下互联网是怎么互联的 - 土豆的奥特之父</title>
<link>http://www.cnblogs.com/xguo/p/10657584.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xguo/p/10657584.html</guid>
<description>&lt;p&gt;在这个世界上有俩种人，一种是天天趴在网上，跟计算机网络亲密接触的人，另一种是天外飞仙，不食人间烟火，自然也不使用互联网的人😀。&lt;/p&gt;
&lt;p&gt;所以，无论你是互联网世界的新用户，或者，你已经投身互联网工作很长时间了，亦或是你每天喜欢使用计算机和网络的网民，你都应该了解基本的网络知识，特别是计算机网络。&lt;/p&gt;
&lt;p&gt;如果你维护过服务器，或者是一个服务端的开发者，你了解远程的用户是如何连接到你的服务器或者访问到你的服务的吗？&lt;br/&gt;发现大部分人的回答是模糊的，有的根本不明就理，所以，本文就尽可能多的来聊一聊，有关这类计算机网络与网络组件的基本知识。&lt;/p&gt;
&lt;p&gt;我们先来给计算机网络下个定义：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;计算机网络可以被定义为，借助于数据传输介质（例如电缆、光纤等），连接贯穿世界各地的计算机，并交换网络数据包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;
&lt;div class=&quot;image-container-fill&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233520814-1397131216.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;这个图中包含了基本的网络组成结构，和常见的网络设施，以及一些网络术语，例如：因特网Internet、互联网服务提供商ISPs、路由器Router等，我们接下来，看一下这些组件是如何工作的，以及之间的交互关系。&lt;/p&gt;
&lt;h2&gt;计算机网络常用术语&lt;/h2&gt;
&lt;h3&gt;网络节点&lt;/h3&gt;
&lt;p&gt;节点在计算机网络中的意思是各种计算设备，例如个人PC、移动手机、平板电脑、服务器等等，可用通过网络与类似的设备进行数据包的交换。&lt;/p&gt;
&lt;h3&gt;互联网协议&lt;/h3&gt;
&lt;p&gt;任何沟通都需要一致的沟通基础，我们通常称为 协议，例如人类沟通的协议，包括各种地方语言、手语、表情等，都是需要事先约定好的规则。&lt;/p&gt;
&lt;p&gt;而互联网是一个远距离传输信息的协议，在传输之前，需要先知道对方的位置。&lt;br/&gt;比如，你考虑在你女朋友过生日的时候，送她一份礼物，你需要先知道把礼物送到哪里，她的家庭或工作地址。&lt;/p&gt;
&lt;p&gt;如何给网络节点设置地址呢？&lt;br/&gt;任何技术都不是凭空产生的，必须踩着前人的肩膀，参考现有技术的启发，演变而来的。&lt;br/&gt;早期计算机科学家们，想通过唯一的ID，来识别网络中在计算机，他们想到了当今的电话号码（telephone number），由此，也想出了一个IP（Internet Protocol）的概念。&lt;/p&gt;
&lt;p&gt;这个IP是计算设备在计算机网络中的地址，从技术的角度来讲，它是一个用于标识这个网络设备的32位数字，所有的网络设备都基于它们的IP地址往返通信。&lt;/p&gt;
&lt;p&gt;例如你上传一个文件到一个网站，或者从一个网站下载一个文件。在网络通信中，文件会被转化成网络中若干个数据包，每个 “包” 含有网络节点的目的地（ip和端口，服务端操作系统收到这个包以后，进行按序拼接，之后交给监听这个端口的进程，也就是一个程序）。&lt;/p&gt;
&lt;p&gt;IP地址分为俩个类别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IPv4，由4组数字组成，二进制每组1kb，8bits，所以共32bits来定义一个IP地址，例如 104.244.42.129 这个ip地址是 twitter.com 的全球唯一地址，它一般是稳定不变的；&lt;/li&gt;
&lt;li&gt;IPv6，IPv6地址是继IPv4之后，由于网络设备大量涌现，IPv4出现不够用的情况，而定义的一个新的网络地址协议，基于8个16进制数，用“:”来分割，例如：2001:0cb8:85a3:0000:0000:8a2e:0370:7334，由于还不太稳定，目前没有被广泛使用，出于稳定性的考虑，目前互联网主要还是使用IPv4协议。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;IPv4，为了方便治理，对它进行了分类，包括Class A, B, C, D, E等五类，每个类别可分配不同数量的IP地址，使得路由表能够做的非常小, 路由器能够快速地处理网络转发，根据网络规模需求（例如设备的数量），采用不同的IP分类，得到更好的网络性能。&lt;/p&gt;

&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;777&quot; data-height=&quot;435&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233532744-1500553900.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;&lt;em&gt;32位IP地址，用第一组数字来区分IP所属种类，更多关于IP分类的信息请自行科普“IP分类”，其实就是对所有的ip地址进行了人为分段&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;俩种类型的IPv4地址：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;静态， 随着时间的变化，这些设备的地址保持不变。例如一些远程服务器的ip地址通常是的固定不变的，确保用户每次都能访问到它。&lt;/li&gt;
&lt;li&gt;动态，一般来说，这些ip在网络中通常分配给普通计算机使用，例如在本地局域网中，内网设备的ip是由所在路由器来动态分配的，设备每次接入或者路由器从新启动，这些设备的ip地址都有可能发生变化。这个是DHCP(Dynamic Host Configuration Protocol）协议，一般路由器会集成这个服务。&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;需要注意的一点，每个设备都有可能同时有几个ip地址，例如一台计算机同时连接了有线和无线网络，那它就有俩个ip地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;路由器&lt;/h2&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;920&quot; data-height=&quot;527&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233543816-2134359429.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;顾名思义，路由器是一个物理的网络组件，负责转发数据包到指定的目的网络设备。网络中的设备本身是不知道自己通信的对方的具体位置，由路由器根据路由器自身维护的路由表，加上数据包中的目的设备地址来转发数据包的请求。&lt;/p&gt;
&lt;pre class=&quot;hljs css&quot;&gt;
&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;Routing &lt;span class=&quot;hljs-selector-tag&quot;&gt;table:
&lt;span class=&quot;hljs-selector-tag&quot;&gt;Destination  &lt;span class=&quot;hljs-selector-tag&quot;&gt;Gateway     &lt;span class=&quot;hljs-selector-tag&quot;&gt;Genmask        &lt;span class=&quot;hljs-selector-tag&quot;&gt;Flags &lt;span class=&quot;hljs-selector-tag&quot;&gt;Metric &lt;span class=&quot;hljs-selector-tag&quot;&gt;Refs &lt;span class=&quot;hljs-selector-tag&quot;&gt;Iface
&lt;span class=&quot;hljs-selector-tag&quot;&gt;default      192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;span class=&quot;hljs-selector-class&quot;&gt;.0&lt;span class=&quot;hljs-selector-class&quot;&gt;.1 0&lt;span class=&quot;hljs-selector-class&quot;&gt;.0&lt;span class=&quot;hljs-selector-class&quot;&gt;.0&lt;span class=&quot;hljs-selector-class&quot;&gt;.0        &lt;span class=&quot;hljs-selector-tag&quot;&gt;UG    1024   233  &lt;span class=&quot;hljs-selector-tag&quot;&gt;eth0
192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;span class=&quot;hljs-selector-class&quot;&gt;.0&lt;span class=&quot;hljs-selector-class&quot;&gt;.0  *           255&lt;span class=&quot;hljs-selector-class&quot;&gt;.255&lt;span class=&quot;hljs-selector-class&quot;&gt;.255&lt;span class=&quot;hljs-selector-class&quot;&gt;.0  &lt;span class=&quot;hljs-selector-tag&quot;&gt;UC    0      0    &lt;span class=&quot;hljs-selector-tag&quot;&gt;wlan0
192&lt;span class=&quot;hljs-selector-class&quot;&gt;.168&lt;span class=&quot;hljs-selector-class&quot;&gt;.0&lt;span class=&quot;hljs-selector-class&quot;&gt;.0  *           255&lt;span class=&quot;hljs-selector-class&quot;&gt;.255&lt;span class=&quot;hljs-selector-class&quot;&gt;.255&lt;span class=&quot;hljs-selector-class&quot;&gt;.0  &lt;span class=&quot;hljs-selector-tag&quot;&gt;UH    0      2    &lt;span class=&quot;hljs-selector-tag&quot;&gt;eth0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul readability=&quot;3.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Destination，目地设备的ip地址；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Gateway，网关，网络与网络连接的中间设备，例如俩台路由器的连接，然而，俩台路由器不能直接连接，需要借助另一台路由器，这台路由器就是网关。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;子网掩码（Genmask/Subnet mask），仅仅是为了划分网络，子网掩码结合ip地址可以分割成相对较小的ip逻辑区域，便于管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Flags，接入网络设备的标记，例如UG，U表示是路由器，G表示是网关。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Iface（网络接口），接入网络的网络类型，例如你的设备接入的Wifi，那这个网络接口就是“wlan”，如果接入的是有线LAN，那网络接口iface就是“eth”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;以上主要是网络基础层面的内容，主要包括ip地址和路由器俩大网络核心技术，如何识别设备，以及设备彼此之间如何通信，接下来咱们看看如何实现更高层的技术应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;NAT&lt;/h2&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;926&quot; data-height=&quot;759&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233553189-108674148.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Network Address Translation ，网络地址转换，为了让有限的公有ip连接更多网络设备，就需要用到NAT，网络地址转换，这个功能通常也是由路由器来实现。路由器一头与Internet服务商获取一个公网ip，另一头挂了很多网络设备，路由器为每一个设备分配一个内部私有的ip地址，只有这个路由器内部的设备之间可见，之外是无法与这些设备直接连接，需要通过路由器来转发信号，这就是NAT技术。&lt;br/&gt;例如，你在家里通过电脑访问Twitter，网络连接大概是这样的，电脑随机选择一个端口，去连接路由器，路由器随机选择一个端口去连接Twitter服务器，如下：&lt;/p&gt;
&lt;pre class=&quot;hljs ruby&quot;&gt;
&lt;code class=&quot;ruby&quot;&gt;Private IP   &lt;span class=&quot;hljs-params&quot;&gt;|PrivatePort |PublicIP &lt;span class=&quot;hljs-params&quot;&gt;|PublicPort |Remote &lt;span class=&quot;hljs-params&quot;&gt;|RemotePort
------------- ------------ --------- ----------- ------- -----------
192.168.1.100 | &lt;span class=&quot;hljs-number&quot;&gt;37641 &lt;span class=&quot;hljs-params&quot;&gt;| 104.244.42.129 | &lt;span class=&quot;hljs-number&quot;&gt;59273 &lt;span class=&quot;hljs-params&quot;&gt;| 104.244.42.129 | &lt;span class=&quot;hljs-number&quot;&gt;80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Private IP 和 PrivatePort 是你电脑的ip和端口，PublicIP 和 PublicPort 是路由器的公有ip和路由器的端口，而 Remote 和 RemotePort 是Twitter服务器的ip和端口。&lt;/p&gt;
&lt;h2&gt;DHCP&lt;/h2&gt;
&lt;p&gt;DHCP，Dynamic Host Configuration Protocol，&lt;br/&gt;Internet网络服务商和路由器都有这个功能，为网络设备动态分配地址，例如你的电脑第一次接入路由器的时候，可有手动的设置一个静态的ip地址，也可有由路由器随机分配一个ip地址，当然，路由器与Internet服务商的网络连接的时候，也可有动态获取一个ip地址。&lt;/p&gt;
&lt;h2&gt;DNS&lt;/h2&gt;
&lt;p&gt;DNS，Domain Name System/Server，&lt;br/&gt;我们现在都知道，所有的网络设备都有ip地址，无论是公有ip还是私有ip，通过这个ip就可以访问响应的网络设备或者网络服务，例如，我们访问 &lt;code&gt;104.244.42.129&lt;/code&gt; 这个地址的时候就能打开Twitter的网站，因为这是Twitter服务器的ip地址。&lt;/p&gt;
&lt;p&gt;但是，这个地址没有可解释性，就是几个随机的数字，人类很难记忆，或者可被记住的数量非常有线，所有，DNS就应用而生了，其实就是一个翻译的过程，将ip地址和人类容易理解的文字相互转换，这些文字叫做 域名，例如google.com, twitter.com等，我们访问这些地址的时候，DNS会将其对应的ip地址找到，然后通过ip去访问对应的服务器。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1073&quot; data-height=&quot;601&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233605514-2015125542.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;h4&gt;DNS是怎么工作的？&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;DNS是由Internet网络服务商来管理和维护的；&lt;/li&gt;
&lt;li&gt;在自己的电脑或者路由器上配置DNS服务的地址；&lt;/li&gt;
&lt;li&gt;当我们在浏览器敲入一个地址的时候，浏览器会向DNS服务商询问这个域名对应的ip地址，如果这个DNS服务商没有找到，就会向上级询问，直到对顶层，如果还没有找到，就返回域名无效的信息。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;域名的结构：&lt;/p&gt;

&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1031&quot; data-height=&quot;413&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233619103-1196015076.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;包括协议，域名名字，后缀等。&lt;/p&gt;
&lt;h2&gt;互联网服务提供商（ISPs）&lt;/h2&gt;
&lt;p&gt;注意，Internet 和 internet 不是同一个东西，&lt;br/&gt;internet是互联网，泛指所有可以互联互通的网络，而Internet是一个具体的互联网，叫因特网，就好比 人 和 黑人、白人、男人、女人的区别，一个是概念，一个是具象的东西。&lt;/p&gt;
&lt;p&gt;Internet是通过TCP/IP实现的internet，当然还有基于其他协议的internet，而，目前最大，应用范围最广的internet就是Internet（因特网）。&lt;/p&gt;
&lt;p&gt;而，ISPs（Internet Service Providers）就是Internet网络服务提供商，可以让人们很方便的接入Internet，实现与Internet互联，据说Internet的前身是ARPAnet，美国高等研究计划署开发的世界上第一个运营的网络，是全球Internet的鼻祖。&lt;/p&gt;
&lt;p&gt;Internet服务商是分层组织结构，包括1级、2级和3级，如下图：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1003&quot; data-height=&quot;694&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233631433-1418864407.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;1级服务商是Internet的主要服务商，国际级别，这些互联网服务提供商通过海底的大电缆相互连接，并且为2级服务商提供接入的服务。&lt;/p&gt;
&lt;h2&gt;小结：&lt;/h2&gt;
&lt;p&gt;整个Internet的结构看起来如下图：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1032&quot; data-height=&quot;753&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233643364-76354603.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;可见路由器是网络中非常重要的一个关键环节，对外通过公有ip相互通信，内部为各个设备分配私有的ip地址，然后通过NAT协议实现网络转发，形成了局域网。&lt;br/&gt;而不同的ISPs实现了上层网络的跨区域连接，形成了广域网，而最终形成的整张大网就是Internet，因特网，也就是我们天天都离不开的互联网。&lt;/p&gt;

&lt;p&gt;而，每个网络设备之间到底是如何传输数据，经过了哪些网络设备和转换，以及各种网络服务是如何，用什么方式对外提供的，这就是开放式系统互联通信模型（Open System Interconnection Reference Model，简称OSI），定义了不同设备互联的标准，是设计和描述计算机网络通信的基本框架。&lt;/p&gt;

&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1892&quot; data-height=&quot;1260&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/57355/201904/57355-20190404233652404-626356003.png&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://links.jianshu.com/go?to=https%3A%2F%2Fmedium.freecodecamp.org%2Fcomputer-networks-and-how-to-actually-understand-them-c1401908172d&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://medium.freecodecamp.org/computer-networks-and-how-to-actually-understand-them-c1401908172d&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Thu, 04 Apr 2019 15:40:00 +0000</pubDate>
<dc:creator>土豆的奥特之父</dc:creator>
<og:description>在这个世界上有俩种人，一种是天天趴在网上，跟计算机网络亲密接触的人，另一种是天外飞仙，不食人间烟火，自然也不使用互联网的人😀。 所以，无论你是互联网世界的新用户，或者，你已经投身互联网</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xguo/p/10657584.html</dc:identifier>
</item>
</channel>
</rss>