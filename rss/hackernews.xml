<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Adobe deactivates all Venezuelan accounts</title>
<link>https://helpx.adobe.com/la/x-productkb/policy-pricing/executive-order-venezuela.html</link>
<guid isPermaLink="true" >https://helpx.adobe.com/la/x-productkb/policy-pricing/executive-order-venezuela.html</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://helpx.adobe.com/la/x-productkb/policy-pricing/executive-order-venezuela.html&quot;&gt;https://helpx.adobe.com/la/x-productkb/policy-pricing/executive-order-venezuela.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21184623&quot;&gt;https://news.ycombinator.com/item?id=21184623&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 455&lt;/p&gt;
&lt;p&gt;# Comments: 317&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 18:58:10 +0000</pubDate>
<dc:creator>sndpsy</dc:creator>
<dc:language>es</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://helpx.adobe.com/la/x-productkb/policy-pricing/executive-order-venezuela.html</dc:identifier>
</item>
<item>
<title>macOS Catalina</title>
<link>https://www.apple.com/newsroom/2019/10/macos-catalina-is-available-today/</link>
<guid isPermaLink="true" >https://www.apple.com/newsroom/2019/10/macos-catalina-is-available-today/</guid>
<description>&lt;div class=&quot;pagebody-copy&quot; readability=&quot;57.284581497797&quot;&gt;macOS Catalina, the latest version of the world’s most advanced desktop operating system, is now available as a free software update. With &lt;a href=&quot;https://www.apple.com/macos/catalina/&quot; target=&quot;_blank&quot;&gt;macOS Catalina&lt;/a&gt;, users are able to enjoy Apple Arcade, a groundbreaking new game subscription service featuring new, exclusive games from some of the world’s most creative developers. Adding to great entertainment on the Mac, Catalina also features all-new Mac versions of Apple Music, Apple Podcasts and Apple TV apps. A new feature called Sidecar extends Mac desktops with iPad as a second display, or tablet input device using Apple Pencil with Mac apps. Voice Control, a transformative accessibility feature, allows Mac to be controlled entirely by voice. With Mac Catalyst, a new technology in Catalina that makes it easy for third-party developers to bring iPad apps to Mac, users will begin to see their favorite iPad apps in Mac versions, including Twitter, TripIt, Post-It, GoodNotes and Jira, with more to come. And for the first time, Screen Time comes to Mac, giving users insight into how they spend time in apps and on websites, and the ability to decide how to spend their time.&lt;/div&gt;
&lt;h3 class=&quot;pagebody-header&quot;&gt;&lt;strong&gt;Apple Arcade: Now on Mac App Store&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;With a subscription to Apple Arcade for $4.99 per month, users get unlimited access to an unprecedented catalog of games on Mac, all of which can also be played on iPhone, iPad, iPod touch and Apple TV. Games can even be played across devices, so players can pick up from their last game save, whether they’re at home or on the go. On Mac, games can be played with keyboard and trackpad or mouse, and many games support controllers as well, including Xbox Wireless Controllers with Bluetooth and PlayStation DualShock 4. &lt;/p&gt;
&lt;p&gt;Apple Arcade subscribers get the full version of every game including all updates and expansions, without any ads or additional in-game purchases. Instead of paying up front for each game, subscribers can download any Apple Arcade game right from the Mac App Store’s brand-new Arcade tab. From action and adventure games to party and puzzle games, Apple Arcade features games for players of all ages, so everyone can find something they’ll love. The service is launching with a 30-day free trial and a single subscription includes access for up to six family members with Family Sharing. The full catalog of 100 games will be available in the weeks ahead, with more games to come every month, including exciting new action, adventure, RPG, racing and strategy games.&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 17:04:24 +0000</pubDate>
<dc:creator>css</dc:creator>
<og:type>article</og:type>
<og:title>macOS Catalina is available today</og:title>
<og:description>macOS Catalina, the latest version of the world’s most advanced desktop operating system, is now available as a free software update.</og:description>
<og:url>https://www.apple.com/newsroom/2019/10/macos-catalina-is-available-today/</og:url>
<og:image>https://www.apple.com/newsroom/images/product/os/macos/standard/Apple_macOS-catalina-available-today_100719_LP_hero.jpg.og.jpg?201910071711</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.apple.com/newsroom/2019/10/macos-catalina-is-available-today/</dc:identifier>
</item>
<item>
<title>Elliptic Curve Cryptography Explained</title>
<link>https://fangpenlin.com/posts/2019/10/07/elliptic-curve-cryptography-explained/</link>
<guid isPermaLink="true" >https://fangpenlin.com/posts/2019/10/07/elliptic-curve-cryptography-explained/</guid>
<description>&lt;p&gt;Recently, I am learning how Elliptic Curve Cryptography works. I searched around the internet, found so many articles and videos explaining it. Most of them are covering only a portion of it, some of them skip many critical steps how you get from here to there. In the end, I didn’t find an article that really explains it from end-to-end in an intuitive way. With that in mind, I would like to write a post explaining Elliptic Curve Cryptography, cover from the basics to key exchange, encryption, and decryption.&lt;/p&gt;&lt;p&gt;To plot the curve for writing this article, and also get a sense of how things work, I wrote a Jupyter Notebook for curve plotting and calculations in Python. The plotting library is &lt;a href=&quot;https://matplotlib.org/&quot;&gt;matplotlib&lt;/a&gt;. And if you want to play around an elliptic curve and feel how it works yourself, lucky you! I made the source code open-sourced &lt;a href=&quot;https://github.com/fangpenlin/elliptic-curve-explained&quot;&gt;here on GitHub&lt;/a&gt;, &lt;a href=&quot;https://github.com/fangpenlin/elliptic-curve-explained/blob/master/elliptic-curve.ipynb&quot;&gt;one for real numbers&lt;/a&gt; and &lt;a href=&quot;https://github.com/fangpenlin/elliptic-curve-explained/blob/master/elliptic-curve-on-finite-field.ipynb&quot;&gt;one for finite field&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/jupyter-notebook.png&quot; alt=&quot;Screenshot of my Jupyter notebook for plotting Elliptic Curve&quot;/&gt;&lt;p&gt;Screenshot of my Jupyter notebook for plotting Elliptic Curve&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can find most of the article diagrams in the notebook.&lt;/p&gt;
&lt;p&gt;Please note that this article is &lt;strong&gt;not meant for explaining how to implement Elliptic Curve Cryptography securely&lt;/strong&gt;, the example we use here is just for making teaching you and myself easier. We also don’t want to dig too deep into the mathematical rabbit hole, I only want to focus on getting the sense of how it works essentially. So we will strip out many math details and only provide a reference read for it.&lt;/p&gt;
&lt;p&gt;Now, shall we begin?&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/star-trek-into-darkness.gif&quot; alt=&quot;Clip from Star Trek Into Darkness movie&quot;/&gt;&lt;p&gt;Clip from Star Trek Into Darkness movie&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;lets-play-a-game&quot;&gt;Let’s play a game&lt;/h2&gt;
&lt;p&gt;An elliptic curve is a curve defined by&lt;/p&gt;
&lt;p&gt;For example, let  and , then when you plot the curve, it looks like this:&lt;/p&gt;
&lt;div class=&quot;center&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve.png&quot; alt=&quot;A simple elliptic curve&quot;/&gt;&lt;p&gt;A simple elliptic curve&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, let’s play a game. Pick two different random points with different x value on the curve, connect these two points with a straight line, let’s say  and . Then you will notice the line touches the curve at a third point. Once we find that third point and flip its y value to the other side of x axis, let’s call it .&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-game.png&quot; alt=&quot;A and B line touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;A and B line touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The point  is the sum of  and . You can think of this process is some kind of space travel. Imagine there are enemies following your spacecraft. To lose your enemy, you are taking a straight shortcut off the route to another point on the route, bounce to the other side of the route sharply once you hit the third point.&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/star-war.gif&quot; alt=&quot;A clip from Star War movie&quot;/&gt;&lt;p&gt;A clip from Star War movie&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Well, the enemies still follow, let’s do the trick again. This time we start from last point  to another point .&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-game02.png&quot; alt=&quot;A + B and C line touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;A + B and C line touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, we can keep repeating the same trick by adding a new point to bounce to a new sum, as long as the new line is not vertical.&lt;/p&gt;
&lt;p&gt;Over time, you realize that it’s tedious to find a new point to jump to. To make the trick more intuitive and easier to repeat, let’s now take the shortcut along the tangent line of our current position , and it will look like this:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-2p.png&quot; alt=&quot;tangent line of P touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;tangent line of P touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Consider the previous two points style jumping trick, as if you see point  and point  are infinitely close to each other at , it’s actually the same trick. So we can apply the previous rule, call the result sum of  and , which is , i.e. .&lt;/p&gt;
&lt;p&gt;Likewise, we can repeat the same step more to lose our enemies, this time, we start from  back to the original point :&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-3p.png&quot; alt=&quot;tangent line of P touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;tangent line of 2P touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For the result, we call it  or . Obviously, we can keep doing this many times to reach . Now, here comes the question, given the coordinate of a point , can you find out what is the  value? In other words, how many times we’ve jumped from  to , like the following diagram:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-np.png&quot; alt=&quot;given a starting point P and final point NP, can you find what is the N value?&quot;/&gt;&lt;p&gt;given a starting point P and final point NP, can you find what is the N value?&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I can tell you the answer  of the  point on the diagram above is . It’s really easy for me to tell because I pick the number. It would be very hard for you to find out, as there’s no known easy and efficient way to figure out the  value.&lt;/p&gt;
&lt;p&gt;That’s it, you’ve just learned the basis of Elliptic Curve Cryptography! The curve and original point  is a shared value everybody knows and agreed to use, the final point  is your &lt;strong&gt;public key&lt;/strong&gt;, safe to share to anyone. How many steps you jump, the value  is your &lt;strong&gt;private key&lt;/strong&gt;. As we said, people who know just  and , it will be very hard for them to find out what’s your private key as this is known to be a hard problem to solve.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Not so fast!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I heard you yelled at me.&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;To get the point NP, doesn’t that mean you need to do it N times. If you can do it in a reasonable amount of time, can’t I just do the same, move forward one by one until I meet the same point NP to find out exactly how many steps it takes?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That’s a great question, I actually got the same one after reading many articles online, but found a few of them explain that clearly. So, next, let’s talk about how to really make your enemies lose track of you in the space.&lt;/p&gt;
&lt;h2 id=&quot;move-forward-in-warp-speed&quot;&gt;Move forward in warp speed&lt;/h2&gt;
&lt;p&gt;The trick we did to jump around curve for cutting loose enemies, it’s not wise to do it slowly, as it’s easily traceable. Your enemies can simply do the same until they figure out how many times it takes to get there. To really make you untraceable, you need to move forward in warp speed.&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/star-trek.gif&quot; alt=&quot;A clip from Star Trek, spacecraft is warping&quot;/&gt;&lt;p&gt;A clip from Star Trek, spacecraft is warping&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The thing is, for the sum operation, or the trick we did on the elliptic curve got an interesting characteristic. The points on the curve and the sum operation follow &lt;a href=&quot;https://en.wikipedia.org/wiki/Group_(mathematics)&quot;&gt;group law&lt;/a&gt;. The idea is, you can apply some kind of operation on the elements in a group, let’s call it “add” here, they will still stay in the group. And the operation comes with specific properties. One of the specific property associativity is like this:&lt;/p&gt;
&lt;p&gt;is the same as&lt;/p&gt;
&lt;p&gt;The mathematic proof behind this concept is actually not easy, you can read it &lt;a href=&quot;https://www.andrew.cmu.edu/user/tnayak/papers/EllipticCurves.pdf&quot;&gt;here&lt;/a&gt; or &lt;a href=&quot;https://math.rice.edu/~friedl/papers/AAELLIPTIC.PDF&quot;&gt;here&lt;/a&gt; if you are interested. While it’s hard to prove, but it’s easy to see it yourself if you plot the curve and lines. Let’s see an example. As you see we have a point  above, according to the associativity property, we should be able to do  first then , and it should arrive at the same final position. Now here’s .&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-bc-first.png&quot; alt=&quot;B and C line touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;B and C line touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Next, let’s do .&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-a-plus-bc.png&quot; alt=&quot;A and (B + C) line touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;A and (B + C) line touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Look at the final position, it’s exactly the same as . Don’t believe me? Here’s the value printed out from the program I wrote:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;ab_c = ab + c
a_bc = a + bc
(ab_c, a_bc)

(Point(0.9531851331698311, 1.733918191357413),
 Point(0.9531851331698316, 1.7339181913574133))
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, &lt;code class=&quot;highlighter-rouge&quot;&gt;ab_c&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;a_bc&lt;/code&gt; are mostly identical. The difference is due to floating-point calculation roundoff error. This is actually a &lt;strong&gt;big&lt;/strong&gt; problem, we will talk about this later.&lt;/p&gt;
&lt;p&gt;Similarly, for the single-point situation, the group law allows us to sum up to the same position by a different order. Here’s the critical one, remember how we get to  via ? Now I want to show you that&lt;/p&gt;
&lt;p&gt;is the same as&lt;/p&gt;
&lt;p&gt;At first, let’s see doing the calculation in a silly way, just keep adding . Here’s the final step :&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-p-plus-3p.png&quot; alt=&quot;P and 3P line touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;P and 3P line touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Then, let’s try to add the point  to itself, which is exactly the cutting tangent line trick we did before:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-2p-plus-2p.png&quot; alt=&quot;2P tangent line touches a third point on the curve, and its opposite point on the other side of x axis&quot;/&gt;&lt;p&gt;2P tangent line touches a third point on the curve, and its opposite point on the other side of x axis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;See? Both ways lead to the same result. This is it, since we can double a point easily, and the order of adding it doesn’t matter. We can “cheat” by keep doubling a point and pick the power of the point we need to composite the desired value quickly without adding it up one by one.&lt;/p&gt;
&lt;p&gt;Let’s try to add up to a slightly bigger number, say , let’s first break it down to binary so that we can get its power of two composition. Its binary representation is&lt;/p&gt;
&lt;p&gt;in other words, summing up all the power of two values would be&lt;/p&gt;
&lt;p&gt;and i.e&lt;/p&gt;
&lt;p&gt;So the operation we need would be&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add P and double P&lt;/li&gt;
&lt;li&gt;Add 2P and double 2P&lt;/li&gt;
&lt;li&gt;Double 4P&lt;/li&gt;
&lt;li&gt;Double 8P&lt;/li&gt;
&lt;li&gt;Double 16P&lt;/li&gt;
&lt;li&gt;Add 32P and double 32P&lt;/li&gt;
&lt;li&gt;Add 64P and double 64P&lt;/li&gt;
&lt;li&gt;Add 128P and double 128P&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;That’s only 8 steps, compares to 227 steps, it’s way faster. This method is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Elliptic_curve_point_multiplication#Double-and-add&quot;&gt;double and add&lt;/a&gt;. It allows us to get to the desired multiple times of point jumping on an elliptic curve pretty fast. The number  in this example is small, given that we can approach the number we want with , even the number is as big as the number of atoms in the universe, say , which is around , this method can still finish calculating it in 275 double-and-add steps.&lt;/p&gt;
&lt;p&gt;Now we know how to jump forward on the elliptic curve in warp speed, with that, we can jump forward bazillion times easily. While it’s easy for us, this is extremely difficult for the attacker to find out exactly how many times we jump, namely, find out what’s the  value from  and  point given if  is big enough. This is called Elliptic Curve Discrete Logarithm Problem, you can search it if you want to learn more about this topic.&lt;/p&gt;
&lt;h2 id=&quot;lets-meet-at-a-secret-coordinate&quot;&gt;Let’s meet at a secret coordinate&lt;/h2&gt;
&lt;p&gt;We have been talking about how to jump around a silly elliptic curve in light speed, but what about encryption? Hang on, we are about to introduce it. And before that, let’s introduce key exchange first.&lt;/p&gt;
&lt;p&gt;Think about this, Alice and Bob are traveling in the space, they are about to exchange the location of rebellion’s new HQ. Suddenly, they realized there are drones from the empire are tailing them and intercepting the communication between their spacecraft. To exchange information securely, they agree to meet at a secret coordinate where only both of them could know. But how can they exchange this secret coordinate if the enemy is eavesdropping? Now, Elliptic Curve Cryptography is here to rescue. Here’s what Alice and Bob are going to do:&lt;/p&gt;
&lt;p&gt;Alice:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Hey Bob, let’s use P as the starting point, here’s my public key NP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Bob:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;P as the starting point sounds good to me, and my public key is MP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here, as how we defined it,  is the point of  after  times of sum operation. And likewise,  is point of  after  times of sum operation.&lt;/p&gt;
&lt;p&gt;Next, Alice takes Bob’s , start adding this point to itself  times:&lt;/p&gt;
&lt;p&gt;Bob will instead take Alice’s public key  and add this point to itself  times:&lt;/p&gt;
&lt;p&gt;Well, both  and  are very big, as we don’t want the enemy to find it out easily. Obviously, they aren’t really adding one-by-one, they are cheating by using the double-and-add trick we just introduced. Eventually, they will meet at a secret coordination  only they could know&lt;/p&gt;
&lt;p&gt;Think about this, for Alice, each jump is  times worth of point , and she does it for  times. And for Bob, each jump is  times worth of point , and he does it for  time. Let’s say Alice is jumping 4 lightyears a time, and she jumps 3 times. And Bob is jumping 3 lightyears a time, and he jumps 4 times,  or  they are all going to end up at :&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/ecdh-jump.png&quot; alt=&quot;Jump 4 points 3 times or jump 3 points 4 times are the same&quot;/&gt;&lt;p&gt;Jump 4 points 3 times or jump 3 points 4 times are the same&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For eavesdroppers, they need to find out  or  to be able to get the same coordinate. One step off and the final point will be completely off. But as we mentioned previously, there’s no easy way to do that given the number is big enough, so that we can be sure only Alice and Bob could know this secret coordinate. This key exchange protocol is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Elliptic-curve_Diffie%E2%80%93Hellman&quot;&gt;Elliptic Curve Diffie–Hellman&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;encryption&quot;&gt;Encryption&lt;/h2&gt;
&lt;p&gt;Now let’s talk about encryption. For Alice, to send information securely to Bob, they need to perform Elliptic Curve Diffie–Hellman key exchange first as we just mentioned above:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/ecdh-encryption-key-exchange.png&quot; alt=&quot;Alice and Bob perform ECDH for key exchange and get shared key SK&quot;/&gt;&lt;p&gt;Alice and Bob perform ECDH for key exchange and get shared key SK&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Please note here, Alice needs to be able to verify that the public key  really belongs to Bob. Otherwise, an imposter could provide their own public key to Alice, and claim to be Bob. Alice will then exchange a shared secret key with the attacker. The attacker can then perform &lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot;&gt;man-in-middle attack&lt;/a&gt;. To address the problem, there’s another concept called &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_key_infrastructure&quot;&gt;Public key infrastructure&lt;/a&gt;, as it’s off-topic, you can search it if you’re interested.&lt;/p&gt;
&lt;p&gt;As today we want to only focus on Elliptic Curve Cryptography, let’s assume Alice already knew  and have good faith that it’s from Bob, and Bob also knew Alice’s public key. Now, after the key exchange, they end up getting the same shared secret coordinate, we can take the x value as the key. Once we have a shared secret, it’s now easy. We can then use any secure symmetric encryption method to encrypt our secret data with the shared key . Let’s say we use &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot;&gt;AES256&lt;/a&gt; here, for example. The receiver Bob can decrypt the encrypted message with the same shared secret key .&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/ecdh-encryption-encrypt.png&quot; alt=&quot;Alice encrypts the secret message with shared secret key SK and sends to Bob, Bob then decrypts it with shared secret key SK&quot;/&gt;&lt;p&gt;Alice encrypts the secret message with shared secret key SK and sends to Bob, Bob then decrypts it with shared secret key SK&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Great, now even with drones from empire eavesdropping all the communications, Alice can still share the location of rebellion’s new HQ securely to Bob. Likewise, Bob can use the same shared secret key  to encrypt a secure message and send it back to Alice.&lt;/p&gt;
&lt;p&gt;When Alice and Bob know each other, we know we can use Elliptic Curve Cryptography to send a message securely. However, what if there’s a case we want to send a message to someone securely, but they don’t know and probably don’t care who you are? Easy, in our example, we assume Bob already knew Alice’s public key, say if only Alice knows Bob’s public key , she can take her own private key , generate the same shared secret key , encrypt the data and send her public key  in plain text along with the encrypted data. Once Bob received the message, he can use the  and his private key  to create the same secret key  and decrypt the encrypted data. Just, however, Bob won’t be able to know the message is from whom, as the attached public key  could belong to anyone. Alice can also choose to create a temporary new pair of key for the same operation if Bob doesn’t care who the sender is.&lt;/p&gt;
&lt;h2 id=&quot;the-problem-of-floating-point&quot;&gt;The problem of floating-point&lt;/h2&gt;
&lt;p&gt;So far, we have been talking about Elliptic Curve Cryptography with real number calculations. The reason we use real numbers here is that it’s easier to explain and understand. In the real world, this actually isn’t how we do cryptography. Using real number bring many problems, one big problem we have shown previously is that there will be calculation errors. Another problem is, for some extreme cases, the number could be extremely huge, and floating-point may not be able to hold it.&lt;/p&gt;
&lt;p&gt;What should we use instead you may ask, the answer is to perform it on &lt;a href=&quot;https://en.wikipedia.org/wiki/Finite_field_arithmetic&quot;&gt;finite field&lt;/a&gt;, or more accurately, on a finite field of integers modulo p, where p is a prime number. Again, we don’t want to dig the rabbit hole too deep, so if you are interested, you can read &lt;a href=&quot;https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/&quot;&gt;Elliptic Curve Cryptography: finite fields and discrete logarithms&lt;/a&gt;, or watch &lt;a href=&quot;https://www.youtube.com/watch?v=mFVKuFZ29Fc&amp;amp;list=PLN9KZDpNfsHMd7d7PX87JGesGY_Qzyb3V&amp;amp;index=2&quot;&gt;this series of video from Trustica&lt;/a&gt; and &lt;a href=&quot;https://trustica.cz/en/category/ecc/page/3/&quot;&gt;their corresponding articles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To explain elliptic curve on finite field of integers modulo p in math:&lt;/p&gt;
&lt;p&gt;And let’s pick  and let  and , then visualize it:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-on-finite-field.png&quot; alt=&quot;Elliptic Curve on finite field of integers modulo p = 19&quot;/&gt;&lt;p&gt;Elliptic Curve on finite field of integers modulo p = 19&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This doesn’t look like too much of a “curve”, but it’s indeed what an elliptic curve looks like on a finite field. Basically,  will be equal to  only on specific integer points. Take point  as the example, for :&lt;/p&gt;
&lt;p&gt;and for :&lt;/p&gt;
&lt;p&gt;As the both sides have the same remainder  divided by , so that’s indeed a point on the curve.&lt;/p&gt;
&lt;p&gt;While it doesn’t look like a curve, but it does follow the same group law like the one on real numbers. Let’s see an example, set point  and , and calculate  with the same sum operation:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-on-field-a-plus-b.png&quot; alt=&quot;Elliptic Curve on the finite field of integers modulo p = 19, sum point A + B&quot;/&gt;&lt;p&gt;Elliptic Curve on the finite field of integers modulo p = 19, sum point A + B&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Yep, also, a bit special about this curve on a finite field, when a line hits the boundaries, it can actually warp around to the other end, as the modular operation is circling around. The line will hit the third point somewhere, just like the curve on the real number does.&lt;/p&gt;
&lt;p&gt;Given our example,  is the point we hit. And we flip  value  to be  and mod by  will get you . So the sum of  and  is .&lt;/p&gt;
&lt;p&gt;To make it easier to understand, personally I really like the presentation of it in 3D space as a donut shape, like the one from &lt;a href=&quot;https://www.youtube.com/watch?v=mFVKuFZ29Fc&amp;amp;list=PLN9KZDpNfsHMd7d7PX87JGesGY_Qzyb3V&amp;amp;index=2&quot;&gt;Trustica video series about ECC&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;But given that I am writing an article, it’s easier to present it in a simple 2D image.&lt;/p&gt;
&lt;p&gt;Now, let’s add a new point  to :&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-on-field-ab-plus-c.png&quot; alt=&quot;Elliptic Curve on finite field of integers modulo p = 19, sum point (A + B) + C&quot;/&gt;&lt;p&gt;Elliptic Curve on finite field of integers modulo p = 19, sum point (A + B) + C&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Next, let’s see if associativity of group law still holds with finite field, this time we add  first:&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-on-field-b-plus-c.png&quot; alt=&quot;Elliptic Curve on finite field of integers modulo p = 19, sum point B + C&quot;/&gt;&lt;p&gt;Elliptic Curve on finite field of integers modulo p = 19, sum point B + C&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Then, let’s add  to :&lt;/p&gt;
&lt;div class=&quot;center&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/elliptic-curve-on-field-a-plus-bc.png&quot; alt=&quot;Elliptic Curve on finite field of integers modulo p = 19, sum point A + (B + C)&quot;/&gt;&lt;p&gt;Elliptic Curve on finite field of integers modulo p = 19, sum point A + (B + C)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Yep, they both end up at the same point :&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;a_b = a + b
b_c = b + c
(a_b + c), (a + b_c)

(Point(p=19, x=14, y=16), Point(p=19, x=14, y=16))
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now you may ask, what about adding a point to itself? Yes, a point adding itself holds the same rule, using the tangent line on the finite field to connect the third. As we’ve already shown how this works with real numbers, we don’t want to repeat ourselves here, or, actually, that’s because I am lazy 😅.&lt;/p&gt;
&lt;p&gt;In the end, as the finite field only operates on integers, we won’t lose any precision. It’s more suitable for cryptography purposes.&lt;/p&gt;
&lt;h2 id=&quot;finally&quot;&gt;Finally&lt;/h2&gt;
&lt;p&gt;That’s it, now you know how Elliptic Curve Cryptography works. It took me an unexpected level of effort to write this post. If you like my writing, the best way to support me is to follow me on &lt;a href=&quot;https://twitter.com/fangpenlin&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://dev.to/fangpenlin&quot;&gt;dev.to&lt;/a&gt; or &lt;a href=&quot;https://medium.com/@fangpenlin&quot;&gt;Medium&lt;/a&gt; for new posts, share this article, or buy &lt;a href=&quot;https://leanpub.com/rough-road&quot;&gt;my book&lt;/a&gt;. Feedbacks are welcome. Finally, hopefully, it is as I promised this is intuitive, and you found it helpful. 😊&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 16:47:56 +0000</pubDate>
<dc:creator>fangpenlin</dc:creator>
<og:type>article</og:type>
<og:title>Elliptic Curve Cryptography Explained</og:title>
<og:description>Fang-Pen Lin's blog about programming</og:description>
<og:url>https://fangpenlin.com/posts/2019/10/07/elliptic-curve-cryptography-explained/</og:url>
<og:image>https://fangpenlin.com/images/2019-10-07-elliptic-curve-cryptography-explained/jupyter-notebook.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://fangpenlin.com/posts/2019/10/07/elliptic-curve-cryptography-explained/</dc:identifier>
</item>
<item>
<title>Apple Hides Taiwan Flag in Hong Kong</title>
<link>https://blog.emojipedia.org/apple-hides-taiwan-flag-in-hong-kong/</link>
<guid isPermaLink="true" >https://blog.emojipedia.org/apple-hides-taiwan-flag-in-hong-kong/</guid>
<description>&lt;p&gt;iPhone users in Hong Kong have noticed a change in the latest version of iOS: the &lt;a href=&quot;https://emojipedia.org/flag-for-taiwan/&quot;&gt;🇹🇼 Flag for Taiwan emoji&lt;/a&gt; is missing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.emojipedia.org/one-emoji-doesnt-show-on-ios-in-china/&quot;&gt;Previously restricted&lt;/a&gt; on Chinese iOS devices, all other regions of the world have continued to enjoy access to &lt;a href=&quot;http://emojipedia.org/flags/&quot;&gt;all flags&lt;/a&gt; in the iOS emoji font, until now.&lt;/p&gt;
&lt;img src=&quot;https://blog.emojipedia.org/content/images/2019/10/taiwan-flag-ios-before-after-emojipedia.gif&quot; class=&quot;kg-image&quot;/&gt;Above: Taiwan's flag has been removed from the iOS emoji keyboard in Hong Kong. GIF: Emojipedia.
&lt;p&gt;The change, &lt;a href=&quot;https://translate.google.com/translate?sl=auto&amp;amp;tl=en&amp;amp;u=https%3A%2F%2Fhiraku.tw%2F2019%2F10%2F4855%2F&quot;&gt;first discovered&lt;/a&gt; by iOS Developer &lt;a href=&quot;https://about.me/hirakujira&quot;&gt;Hiraku Wang&lt;/a&gt;, means that users with an iOS device region set to &lt;em&gt;Hong Kong&lt;/em&gt; will see one less flag on the emoji keyboard than if the region is set to anywhere else in the world (other than &lt;em&gt;China mainland&lt;/em&gt;, which also hides this flag).&lt;/p&gt;
&lt;p&gt;Notably, the emoji &lt;a href=&quot;https://emojipedia.org/flag-for-taiwan/&quot;&gt;🇹🇼 Flag: Taiwan&lt;/a&gt; is still supported by iOS in Hong Kong. As of iOS 13.1.2, released last week, this is now hidden from the emoji keyboard but remains available by other means.&lt;/p&gt;
&lt;img src=&quot;https://blog.emojipedia.org/content/images/2019/10/taiwan-flag-china-hong-kong-rest-of-world-emojipedia.jpg&quot; class=&quot;kg-image&quot;/&gt;Above: 🇹🇼Taiwan's flag is completely restricted in &lt;em&gt;China mainland&lt;/em&gt;, but only hidden when region is set to &lt;em&gt;Hong Kong&lt;/em&gt;. Image: Emojipedia / Photos: Jeremy Burge.
&lt;p&gt;Apple's Hong Kong approach differs from the &lt;a href=&quot;https://blog.emojipedia.org/one-emoji-doesnt-show-on-ios-in-china/&quot;&gt;complete ban&lt;/a&gt; on the emoji in China.&lt;/p&gt;
&lt;p&gt;Any iPhone purchased in China, or purchased elsewhere with the region set to &lt;em&gt;China mainland&lt;/em&gt;, replaces the flag of Taiwan with a missing character tofu (☒) so it cannot be used or displayed in any app, even via copy and paste.&lt;/p&gt;
&lt;p&gt;In Hong Kong, this emoji still appears when present in a document or message, and can be inserted via copy and paste with no change to the display. It also remains an auto-suggest option when typing the phrase &lt;em&gt;Taiwan&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As for the most obvious place to find it - the emoji keyboard - that's where this emoji has gone missing.&lt;/p&gt;
&lt;p&gt;This new restriction applies to all iPhones purchased in Hong Kong, as well as international iPhones where the region is set to Hong Kong.&lt;/p&gt;
&lt;img src=&quot;https://blog.emojipedia.org/content/images/2019/10/taiwan-autosuggest-ios.jpeg&quot; class=&quot;kg-image&quot;/&gt;Above: The Taiwan Flag emoji is still available via auto-suggest in Hong Kong.
&lt;p&gt;Emojipedia can confirm that this change also affects the built-in emoji picker in macOS 10.15 Catalina. As with iOS, macOS completely bans the Taiwan Flag emoji when the region is set to China, but only hides it from the emoji picker in Hong Kong.&lt;/p&gt;
&lt;p&gt;Previous releases of macOS had no restriction on this flag for Hong Kong users.&lt;/p&gt;
&lt;img src=&quot;https://blog.emojipedia.org/content/images/2019/10/emojipedia-taiwan-flag-hong-kong-china-row.gif&quot; class=&quot;kg-image&quot;/&gt;Above: The Taiwan Flag is hidden for Hong Kong users in the updated macOS emoji picker. GIF: Emojipedia.
&lt;p&gt;Note: While Taiwan is officially named Republic of China (ROC), the name &lt;em&gt;Taiwan&lt;/em&gt; is more common internationally, and reflected in the current name of this emoji as: &lt;a href=&quot;https://emojipedia.org/flag-for-taiwan/&quot;&gt;🇹🇼 Flag: Taiwan&lt;/a&gt; (previously 'Flag for Taiwan').&lt;/p&gt;
&lt;p&gt;For simplicity, this article refers to Republic of China (ROC) as Taiwan; and People's Republic of China (PRC) as China (or &lt;em&gt;China mainland&lt;/em&gt; as used in iOS region settings).&lt;/p&gt;
&lt;h2 id=&quot;emoji-context&quot;&gt;Emoji context&lt;/h2&gt;
&lt;p&gt;As with any Unicode character, vendors like Apple are free to hide or show any emoji on their platforms as they wish.&lt;/p&gt;
&lt;p&gt;If a vendor chooses &lt;em&gt;not&lt;/em&gt; to support an emoji, they can simply remove it from any emoji font they create, or an alternative is to support the emoji but hide it from obvious input.&lt;/p&gt;
&lt;p&gt;Microsoft hides the &lt;a href=&quot;https://emojipedia.org/reversed-hand-with-middle-finger-extended/&quot;&gt;middle finger emoji&lt;/a&gt; from the emoji picker on Windows, but still supports the emoji if you copy and paste it, or open a document including it. Apple supports code points for many &lt;a href=&quot;https://emojipedia.org/neutral/&quot;&gt;gender-neutral emojis&lt;/a&gt;, but hides them from input on the emoji keyboard, as most of these duplicate the appearance of the woman or man variation on iOS.&lt;/p&gt;
&lt;p&gt;Hiding an emoji from the emoji keyboard is somewhat of a half-way step between completely banning an emoji, and fully supporting it.&lt;/p&gt;
&lt;h2 id=&quot;global-context&quot;&gt;Global context&lt;/h2&gt;
&lt;p&gt;While all flags have potential to unite or divide, until recently the emoji keyboard has remained relatively separate from such matters.&lt;/p&gt;
&lt;p&gt;In recent years China has stepped up efforts in pressuring global companies in how they refer to Taiwan. Apple isn't alone here.&lt;/p&gt;
&lt;p&gt;PayPal shows &lt;a href=&quot;https://twitter.com/jeremyburge/status/1177174738969477121&quot;&gt;a generic globe&lt;/a&gt; instead of the Taiwan flag in its region picker. No other country gets that treatment.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.4378698224852&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Just noticed PayPal won't show a flag for 🇹🇼 Taiwan in the region picker. It used to. &lt;a href=&quot;https://t.co/iciDwimuTR&quot;&gt;pic.twitter.com/iciDwimuTR&lt;/a&gt;&lt;/p&gt;
— Jeremy Burge (@jeremyburge) &lt;a href=&quot;https://twitter.com/jeremyburge/status/1177174738969477121?ref_src=twsrc%5Etfw&quot;&gt;September 26, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Airlines have been &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-05-27/china-gives-airlines-extension-on-one-nation-rule-for-taiwan&quot;&gt;instructed to refer to Taiwan as &quot;Taiwan China&quot;&lt;/a&gt; if they wish to keep doing business in China. Some airlines thought they might get around this by listed cities only without reference to the country, but this &lt;a href=&quot;https://www.ft.com/content/d0b7e40a-8fb4-11e8-b639-7680cedcc421&quot;&gt;wasn't deemed sufficient&lt;/a&gt; by China.&lt;/p&gt;
&lt;p&gt;With protests ongoing in Hong Kong to uphold the freedoms granted under &quot;one country, two systems&quot;, the gradual re-aligning of Hong Kong and China continues.&lt;/p&gt;
&lt;p&gt;And so the next battle appears to be on the emoji keyboard.&lt;/p&gt;
&lt;h2 id=&quot;choices&quot;&gt;Choices&lt;/h2&gt;
&lt;p&gt;We all have choices to make in this world, both as individuals, and individuals within larger companies.&lt;/p&gt;
&lt;p&gt;What's difficult when it comes to global politics and a superpower like China is that the choices don't look great - no matter which way you look at them. While Apple has not made comment on this change, it seems entirely consistent that a decision such as this wouldn't have been made lightly.&lt;/p&gt;
&lt;p&gt;Is this half-way step of hiding, but not removing, the flag of Taiwan in Hong Kong a compromise that is better than banning the emoji altogether? I'd say so.&lt;/p&gt;
&lt;p&gt;What this means for the future of Hong Kong as a distinct region of China with its own laws is less certain, and a topic much larger than the emoji keyboard. Perhaps Microsoft was onto something when they decided not to support any country flags in Windows.&lt;/p&gt;
&lt;h2 id=&quot;workarounds&quot;&gt;Workarounds&lt;/h2&gt;
&lt;p&gt;Using the emoji &lt;a href=&quot;https://emojipedia.org/flag-for-taiwan/&quot;&gt;🇹🇼 Flag: Taiwan&lt;/a&gt; remains possible on Hong Kong-model iPhones via the following methods:&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 16:24:21 +0000</pubDate>
<dc:creator>pulisse</dc:creator>
<og:type>article</og:type>
<og:title>Apple Hides Taiwan Flag in Hong Kong</og:title>
<og:description>iPhone users in Hong Kong have noticed a change in the latest version of iOS: the 🇹🇼 Flag for Taiwan emoji [https://emojipedia.org/flag-for-taiwan/] is missing. Previously restricted [https://blog.emojipedia.org/one-emoji-doesnt-show-on-ios-in-china/] on Chinese iOS devices, all other regions of the world have continued to enjoy access to all flags [http://emojipedia.org/flags/] in the iOS emoji font, until now. Above: Taiwan's flag has been removed from the iOS emoji keyboard in Hong Kong.</og:description>
<og:url>https://blog.emojipedia.org/apple-hides-taiwan-flag-in-hong-kong/</og:url>
<og:image>https://blog.emojipedia.org/content/images/2019/10/taiwan-flag-emoji-missing-china-hong-kong-apple-ios-13.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.emojipedia.org/apple-hides-taiwan-flag-in-hong-kong/</dc:identifier>
</item>
<item>
<title>Collapse OS</title>
<link>https://collapseos.org/</link>
<guid isPermaLink="true" >https://collapseos.org/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;/&gt;&lt;title&gt;Collapse OS — Bootstrap post-collapse technology&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/normalize.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/main.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;50.932350390286&quot;&gt;

&lt;p&gt;&lt;em&gt;Bootstrap post-collapse technology&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://collapseos.org/why.html&quot;&gt;Winter is coming&lt;/a&gt; and Collapse OS aims to soften the blow. It is a z80 kernel and a collection of programs, tools and documentation that allows you to assemble an OS that can:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Run on minimal and improvised machines.&lt;/li&gt;
&lt;li&gt;Interface through improvised means (serial, keyboard, display).&lt;/li&gt;
&lt;li&gt;Edit text files.&lt;/li&gt;
&lt;li&gt;Compile assembler source files for a wide range of MCUs and CPUs.&lt;/li&gt;
&lt;li&gt;Read and write from a wide range of storage devices.&lt;/li&gt;
&lt;li&gt;Replicate itself.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Additionally, the goal of this project is to be as self-contained as possible. With a copy of this project, a capable and creative person should be able to manage to build and install Collapse OS without external resources (i.e. internet) on a machine of her design, built from scavenged parts with low-tech tools.&lt;/p&gt;
&lt;h2&gt;Status&lt;/h2&gt;
&lt;p&gt;The project &lt;a href=&quot;https://github.com/hsoft/collapseos&quot;&gt;lives on github&lt;/a&gt; and is progressing well! Highlights:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Self replicates: Can assemble itself from within itself, given enough RAM and storage.&lt;/li&gt;
&lt;li&gt;Known to run on:
&lt;ul&gt;&lt;li&gt;A RC2014 through a serial link. It can also have a PS/2 keyboard directly plugged in.&lt;/li&gt;
&lt;li&gt;A Sega Master System or a MegaDrive (Genesis) with video output and D-Pad input and/or a PS/2 keyboard adapter.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Has a shell that can poke memory, I/O, call arbitrary code from memory.&lt;/li&gt;
&lt;li&gt;Can read SD cards.&lt;/li&gt;
&lt;li&gt;Has a text editor modeled after UNIX's ed.&lt;/li&gt;
&lt;li&gt;Compact:
&lt;ul&gt;&lt;li&gt;Kernel: 2700 SLOC. binary size varies wildly. Generally around 3K.&lt;/li&gt;
&lt;li&gt;zasm: 5K binary, 2400 SLOC, 8K RAM usage to assemble kernel or itself.&lt;/li&gt;
&lt;li&gt;ed: 1K binary, 500 SLOC.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Extremely flexible: Kernel parts are written as loosely knit modules that are bound through glue code. This makes the kernel adaptable to many unforseen situations.&lt;/li&gt;
&lt;li&gt;Built from a GNU environment with minimal tooling: only &lt;a href=&quot;https://github.com/ggambetta/libz80&quot;&gt;libz80&lt;/a&gt; is needed.&lt;/li&gt;
&lt;li&gt;An exciting &lt;a href=&quot;https://collapseos.org/roadmap.html&quot;&gt;roadmap&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Try it out&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/hsoft/collapseos/tree/master/doc&quot;&gt;documentation&lt;/a&gt; for instructions.&lt;/p&gt;
&lt;h2&gt;Questions?&lt;/h2&gt;
&lt;p&gt;If you have further questions about the project, a &lt;a href=&quot;https://old.reddit.com/r/collapse/comments/dejmvz/collapse_os_bootstrap_postcollapse_technology/&quot;&gt;big discussion about it occurred on Reddit&lt;/a&gt; and I answered a lot of questions there. I still do.&lt;/p&gt;
&lt;p&gt;There was also a &lt;a href=&quot;https://news.ycombinator.com/item?id=21182628&quot;&gt;nice conversation on Hacker News&lt;/a&gt; about Collapse OS, but I didn't participate because I don't have a HN account. Also, this community doesn't seem collapse-aware so the idea of participation into this discussion seemed tedious to me. But the user &quot;yellowapple&quot; did a good job of answering many questions in a way that is similar to what I would have.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Mon, 07 Oct 2019 16:18:09 +0000</pubDate>
<dc:creator>spraak</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://collapseos.org/</dc:identifier>
</item>
<item>
<title>A multithreaded fork of Redis that is faster</title>
<link>https://docs.keydb.dev/blog/2019/10/07/blog-post/</link>
<guid isPermaLink="true" >https://docs.keydb.dev/blog/2019/10/07/blog-post/</guid>
<description>&lt;p&gt;&lt;span&gt;What if I told you there is a fork of Redis that can run 5x faster with nearly 5x lower latency. What if you no longer needed sentinel nodes and your replicas could accept both reads and writes? This could provide the potential to achieve a 10x reduction in the amount you shard.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;This article looks at &lt;a href=&quot;https://github.com/JohnSully/KeyDB&quot;&gt;&lt;span&gt;KeyDB&lt;/span&gt;&lt;/a&gt; which is an open source, multithreaded fork of Redis. We will review the latest benchmarking numbers and discuss how a more powerful, single instance of KeyDB can reduce cluster size and simplify your stack. We discuss the multithreading architecture and walkthrough how to replicate these numbers.&lt;br/&gt;&lt;/span&gt;
&lt;h2&gt;Why KeyDB? Why Consider A Fork?&lt;/h2&gt;
&lt;p&gt;With an uninhibited ability to evolve the codebase, KeyDB has been able to make huge strides in a short amount of time and are on a path that will disrupt the database landscape in the months to come.&lt;/p&gt;
&lt;p&gt;In regards to why fork Redis in the first place, KeyDB has a different philosophy on how the codebase should evolve. We feel that ease of use, high performance, and a &quot;batteries included&quot; approach is the best way to create a good user experience. While we have great respect for the Redis maintainers it is our opinion that the Redis approach focusses too much on simplicity of the code base at the expense of complexity for the user. This results in the need for external components and workarounds to solve common problems.&lt;/p&gt;
&lt;p&gt;Because of this difference of opinion features which are right for KeyDB may not be appropriate for Redis. A fork allows us to explore this new development path and implement features which may never be a part of Redis. KeyDB keeps in sync with upstream Redis changes, and where applicable we upstream bug fixes and changes. It is our hope that the two projects can continue to grow and learn from each other.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Latest Benchmarking Data&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/JohnSully/KeyDB&quot;&gt;&lt;span&gt;KeyDB&lt;/span&gt;&lt;/a&gt; launched in March of this year and even with our performance gains, we still expect to get even faster. Our latest benchmarking data shows a single instance of KeyDB getting just over 5 times more ops/sec (graph ranging 5.13-5.49) than a single instance of Redis (v5) and nearly 5 times lower latency (graph ranging 4.6-5.1):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://keydb.dev/assets/img/blog/5x_opspersecVSdatasize.PNG&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://keydb.dev/assets/img/blog/5x_latencyVSdatasize.PNG&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;Benefits of Multithreading&lt;/h2&gt;
&lt;p&gt;Being able to increase the power of a single instance/node of KeyDB reduces the need to shard and can greatly reduce the number of moving parts in your setup. You might be asking if running many Redis nodes in a cluster might get more throughput per core than multi-threading a single node? You can shard KeyDB just as you can Redis, and as your database grows extensively it makes sense to do so. But if you have the option to add horsepower without purchasing a second car why wouldn’t you? Being able to scale the size of your nodes in addition to sharding adds a new level of power and choice for the user. This is one of many differences of opinion between Redis and KeyDB. This is not only a common discussion point in the community but a point of contention in some circles.&lt;/p&gt;
&lt;p&gt;So to the question of “what does it look like running more threads with KeyDB”. We ran some basic numbers so you can get an idea. Below is a chart benchmarking ops/sec vs number of threads used:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://keydb.dev/assets/img/blog/opspersecVSthreads.PNG&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can see drastic improvements to the performance as more resources are allocated to the instance. There is an option to pin threads to CPUs for further improvement but the best option for you may depend on your setup. By default this option is disabled.&lt;/p&gt;
&lt;p&gt;At just one thread allocated to KeyDB, on average it still holds about 5% performance gain over a single threaded instance of Redis. So even with new features being added and architecture changes, performance has not been compromised.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Multithreading Architecture&lt;/h2&gt;
&lt;p&gt;KeyDB works by running the normal Redis event loop on multiple threads. Network IO, and query parsing are done concurrently. Each connection is assigned a thread on accept(). Access to the core hash table is guarded by spinlock. Because the hashtable access is extremely fast this lock has low contention. Transactions hold the lock for the duration of the EXEC command. Modules work in concert with the GIL which is only acquired when all server threads are paused. This maintains the atomicity guarantees modules expect.&lt;/p&gt;
&lt;p&gt;Unlike most databases the core data structure is the fastest part of the system. Most of the query time comes from parsing the REPL protocol and copying data to/from the network.&lt;/p&gt;
&lt;p&gt;Future work includes allowing rebalancing of connections to different threads after the connection, and allowing multiple readers access to the hashtable concurrently&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Optimizing Your Setup Further&lt;/h2&gt;
&lt;p&gt;KeyDB believes in features that help simplify the user experience. Our Active Replica feature has been widely adopted and used in production with our latest stable version 5. This feature enables you to have two master nodes replicated to each other both accepting reads and writes. Best of all there are no sentinel nodes controlling the failover. You get high availability and maximize the use of your resources. If you are not already balancing reads to replica nodes, you could double your throughput with this option. This means moving from a simple master-replica setup of Redis to a multi-threaded active-replica setup with KeyDB could reduce your sharding requirement by as much as 10x. Take a look at this article &lt;a href=&quot;https://docs.keydb.dev/blog/2019/08/05/blog-post/&quot;&gt;&lt;span&gt;”Redis Replication and KeyDB Active Replication: Optimizing System Resources”&lt;/span&gt;&lt;/a&gt; for a deeper dive on the topic of active replication.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Check Out KeyDB&lt;/h2&gt;
&lt;p&gt;To check out the KeyDB open source project on Github &lt;a href=&quot;https://github.com/JohnSully/KeyDB&quot;&gt;&lt;span&gt;click here&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;em&gt;Benchmarking – How To Reproduce These Tests Yourself:&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;The most important thing when benchmarking is to ensure that your benchmarking tool is not the bottleneck. We needed to use an amazon m5.8xlarge instance with 32 cores assigned in order to produce enough volume for our single instance testing. Any lower and the benchmarking tool would be the bottleneck for these tests. For the testing instance we used &lt;a href=&quot;https://github.com/RedisLabs/memtier_benchmark&quot;&gt;&lt;span&gt;Memtier&lt;/span&gt;&lt;/a&gt; by RedisLabs. The machine used for running the Redis and KeyDB instances during our tests was an amazon m5.4xlarge.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;For the first charts comparing Redis and KeyDB, the following commands were used:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Memtier: &lt;code&gt;memtier_benchmark -s &amp;lt;'ip of test instance&amp;gt; -p 6379 –hide-histogram --authenticate &amp;lt;'yourpassword&amp;gt; --threads 32 –data-size &amp;lt;size of test ranging 8-16384&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;KeyDB: &lt;code&gt;keydb-server --port 6379 --requirepass &amp;lt;'yourpassword&amp;gt; --server-threads 7 --server-thread-affinity true&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Redis: &lt;code&gt;redis-server --port 6379 --requirepass &amp;lt;'yourpassword&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;For the chart comparing KeyDB ops/sec vs #threads enabled:&lt;/strong&gt; Memtier: &lt;code&gt;memtier_benchmark -s &amp;lt;'ip of test instance&amp;gt; -p 6379 --hide-histogram --authenticate --threads 32 --data-size 32&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;KeyDB pinned: &lt;code&gt;keydb-server --port 6379 --requirepass &amp;lt;'yourpassword&amp;gt; --server-threads &amp;lt;#threads used for test&amp;gt; --server-thread-affinity true&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;KeyDB unpinned: &lt;code&gt;keydb-server --port 6379 --requirepass &amp;lt;'yourpassword&amp;gt; --server-threads &amp;lt;#threads used for test&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 16:17:58 +0000</pubDate>
<dc:creator>ericblenkarn</dc:creator>
<og:title>A Multithreaded Fork of Redis That’s 5X Faster Than Redis ·</og:title>
<og:type>website</og:type>
<og:url>https://docs.keydb.dev/blog/2019/10/07/blog-post</og:url>
<og:description>What if I told you there is a fork of Redis that can run 5x faster with nearly 5x lower latency. What if you no longer needed sentinel nodes and your replicas could accept both reads and writes? This could provide the potential to achieve a 10x reduction in the amount you shard.</og:description>
<og:image>https://docs.keydb.dev/img/undraw_online.svg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.keydb.dev/blog/2019/10/07/blog-post/</dc:identifier>
</item>
<item>
<title>Successful machine learning models: lessons learned at Booking.com</title>
<link>https://blog.acolyer.org/2019/10/07/150-successful-machine-learning-models/</link>
<guid isPermaLink="true" >https://blog.acolyer.org/2019/10/07/150-successful-machine-learning-models/</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://www.kdd.org/kdd2019/accepted-papers/view/150-successful-machine-learning-models-6-lessons-learned-at-booking.com&quot;&gt;150 successful machine learning models: 6 lessons learned at Booking.com&lt;/a&gt; Bernadi et al., &lt;em&gt;KDD’19&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here’s a paper that will reward careful study for many organisations. We’ve previously looked at the &lt;a href=&quot;https://blog.acolyer.org/2018/12/17/applied-machine-learning-at-facebook-a-datacenter-infrastructure-perspective/&quot;&gt;deep penetration of machine learning models in the product stacks of leading companies&lt;/a&gt;, and also some of the &lt;a href=&quot;https://blog.acolyer.org/2017/10/03/tfx-a-tensorflow-based-production-scale-machine-learning-platform/&quot;&gt;pre-requisites for being successful with it&lt;/a&gt;. Today’s paper choice is a wonderful summary of lessons learned integrating around 150 successful customer facing applications of machine learning at Booking.com. Oddly enough given the paper title, the six lessons are never explicitly listed or enumerated in the body of the paper, but they can be inferred from the division into sections. My interpretation of them is as follows:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Projects introducing machine learned models deliver strong business value&lt;/li&gt;
&lt;li&gt;Model performance is not the same as business performance&lt;/li&gt;
&lt;li&gt;Be clear about the problem you’re trying to solve&lt;/li&gt;
&lt;li&gt;Prediction serving latency matters&lt;/li&gt;
&lt;li&gt;Get early feedback on model quality&lt;/li&gt;
&lt;li&gt;Test the business impact of your models using randomised controlled trials (follows from #2)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;There are way more than 6 good pieces of advice contained within the paper though!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We found that driving true business impact is amazingly hard, plus it is difficult to isolate and understand the connection between efforts on modeling and the observed impact… Our main conclusion is that an iterative, hypothesis driven process, integrated with other disciplines was fundamental to build 150 successful products enabled by machine learning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In case you’re tempted to stop reading at this point, please don’t interpret that quote as saying that investing in machine learning isn’t worth it. On the contrary, developing an organisational capability to design, build, and deploy successful machine learned models in user-facing contexts is, in my opinion, as fundamental to an organisation’s competitiveness as all the other characteristics of high-performing organisations highlighted in the &lt;a href=&quot;https://cloud.google.com/blog/products/devops-sre/the-2019-accelerate-state-of-devops-elite-performance-productivity-and-scaling&quot;&gt;State of DevOps reports&lt;/a&gt;. (And by the way, wouldn’t it be wonderful to see data confirming or denying that hypothesis in future reports!).&lt;/p&gt;
&lt;h3&gt;Context&lt;/h3&gt;
&lt;p&gt;You’ve probably heard of Booking.com, ‘the world’s largest online travel agent.’ Delivering a great experience to their users is made challenging by a number of factors:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The stakes are high for recommendations – booking a stay at the wrong place is much worse than streaming a movie you don’t like!&lt;/li&gt;
&lt;li&gt;User’s provide scant information about what they’re really looking for when booking a trip&lt;/li&gt;
&lt;li&gt;The supply of accommodation is constrained, and changing prices impact guest preferences&lt;/li&gt;
&lt;li&gt;Guest preferences may change each time they use the platform (if e.g. booking only once or twice per year)&lt;/li&gt;
&lt;li&gt;There is a lot of rich information available regarding accommodations, which can be overwhelming for users&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Different types of model&lt;/h3&gt;
&lt;p&gt;With around 150 models now in production, you won’t be surprised to hear that machine learning has touched many parts of the Booking.com experience. Some models are very &lt;em&gt;specific&lt;/em&gt;, focusing on a particular use case in a particular context (e.g. recommendations tailored for one point in the funnel), other models act as a &lt;em&gt;semantic layer&lt;/em&gt;, modelling concepts that can be generally useful in many contexts. For example, a model indicating how flexible a user is with respect to the destination of their trip.&lt;/p&gt;
&lt;p&gt;The models deployed at Booking.com can be grouped into six broad categories:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Traveller preferences models&lt;/strong&gt; operate in the semantic layer, and make broad predictions about user preferences (e.g., degree of flexibiilty).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Traveller context models&lt;/strong&gt;, also semantic, which predictions about the context in which a trip is taking place (e.g. with family, with friends, for business, …).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Item space navigation models&lt;/strong&gt; which track what a user browses to inform recommendations both the the user’s history and the catalog as a whole.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User interface optimisation models&lt;/strong&gt; optimise elements of the UI such as background images, font sizes, buttons etc. Interestingly here, “&lt;em&gt;we found that it is hardly the case that one specific value is optimal across the board, so our models consider context and user information to decide the best user interface&lt;/em&gt;.”&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content curation models&lt;/strong&gt; curate human-generated content such as reviews to decide which ones to show&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content augmentation models&lt;/strong&gt; compute additional information about elements of a trip, such as which options are currently great value, or how prices in an area are trending.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Lesson 1: projects introducing machine learned models deliver strong business value&lt;/h3&gt;
&lt;p&gt;All of these families of models have provided business value at Booking.com. Moreover, compared to other &lt;em&gt;successful&lt;/em&gt; projects that have been deployed but did not use machine learning, the machine learning based projects tend to deliver &lt;em&gt;higher returns&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-2.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Once deployed, beyond the immediate business benefit they often go on to become a foundation for further product development. The following figure shows the impact of a succession of deployments, each building on the original and further improving the business outcome.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-3.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Lesson 2: model performance is not the same as business performance&lt;/h3&gt;
&lt;p&gt;Booking.com estimate the value delivered by a model through randomized controlled trials which measure the impact on business metrics.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An interesting finding is that increasing the performance of a model does not necessarily translate into a gain in [business] value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This could be for a number of reasons including saturation of business value (there’s no more to extract, whatever you do); segment saturation due to smaller populations being exposed to a treatment (as the old and new models are largely in agreement); over-optimisation on a proxy metric (e.g. clicks) that fails to convert into the desired business metric (e.g. conversion); and the &lt;em&gt;uncanny valley&lt;/em&gt; effect, which is best explained through the following picture:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-5.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Lesson 3: be clear about the problem you’re trying to solve&lt;/h3&gt;
&lt;p&gt;Before you start building models, it’s worth spending time carefully constructing a definition of the problem you are trying to solve.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Problem Construction Process takes as input a business case or concept and outputs a well-defined modeling problem (usually a supervised machine learning problem), such that a good solution effectively models the given business case or concept.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some of the most powerful improvements come not from improving a model in the context of a given setup, but changing the setup itself. For example, changing a user preference model based on clink data to a natural language processing problem based on guest review data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In general we found that often the best problem is not the one that comes to mind immediately and that changing the set up is a very effective way to unlock value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Lesson 4: prediction serving latency matters&lt;/h3&gt;
&lt;p&gt;Here we have yet another data point on the &lt;a href=&quot;https://blog.acolyer.org/2017/09/26/seven-rules-of-thumb-for-web-site-experimenters/&quot;&gt;impact of performance on business metrics&lt;/a&gt;. In a experiment introducing synthetic latency, Booking.com found that an increase of about 30% in latency cost about 0.5% in conversion rates “&lt;em&gt;a relevant cost for our business&lt;/em&gt;“.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is particularly relevant for machine learned models since they require significant computational resources when making predictions. Even mathematically simple models have the potential of introducing relevant latency.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Booking.com go to some lengths to minimise the latency introduced by models, including horizontally scaled distributed copies of models, a in-house developed custom linear prediction engine, favouring models with fewer parameters, batching requests, and pre-computation and/or caching.&lt;/p&gt;
&lt;h3&gt;Lesson 5: get early feedback on model quality&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;When models are serving requests, it is crucial to monitor the quality of their output but this poses at least two challenges…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Incomplete feedback due to the difficulty of observing true labels&lt;/li&gt;
&lt;li&gt;Delayed feedback e.g. a prediction made at time of booking as to whether a user will leave a review cannot be assessed until after the trip has been made.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;One tactic Booking. com have successfully deployed in these situations with respect to binary classifiers is to look at the distribution of responses generated by the model. “&lt;em&gt;Smooth bimodal distributions with one clear stable point are signs of a model that successfully distinguishes two classes&lt;/em&gt;.” Other shapes (see figure below) can be indicative of a model that is struggling.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-7.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;…Response Distribution Analysis has proved to be a very useful tool that allows us to detect defects in the models very early.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Lesson 6: test the business impact of your models through randomised controlled trials&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The large majority of the successful use cases of machine learning studied in this work have been enabled by sophisticated experiment designs, either to guide the development process or in order to detect their impact.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The paper includes suggestions for how to set up the experiments under different circumstances.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When not all subjects are eligible to be exposed to a change (e.g., they don’t have a feature the model requires), create treatment and non-treatments groups from within the eligible subset.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-8.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the model only produces outputs that influence the user experience in a subset of cases, then further restrict the treatment and non-treatment groups to only those cases where the model produces a user-observable output (which won’t of course be seen in the non-treatment group). To assess the impact of performance add a third control group where the model is not invoked at all.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-9.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When comparing models we are interested in situations where the two models &lt;em&gt;disagree&lt;/em&gt;, and we use as a baseline a control group that invokes the current model (assuming we’re testing a current model against a candidate improvement). That leads to an experiment design which looks like this:&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-10.jpeg?w=480&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The last word:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hypothesis driven iteration and interdisciplinary integration are the core of our approach to deliver value with machine learning, and we wish this work to serve as guidance to other machine learning practitioners and spark further investigations on the topic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-23592848-9141-5d9bdf668f064&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20190321#blog_id=23592848&amp;amp;post_id=9141&amp;amp;origin=adriancolyer.wordpress.com&amp;amp;obj_id=23592848-9141-5d9bdf668f064&amp;amp;domain=blog.acolyer.org&quot; data-name=&quot;like-post-frame-23592848-9141-5d9bdf668f064&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Mon, 07 Oct 2019 16:01:15 +0000</pubDate>
<dc:creator>joker3</dc:creator>
<og:type>article</og:type>
<og:title>150 successful machine learning models: 6 lessons learned at Booking.com</og:title>
<og:url>https://blog.acolyer.org/2019/10/07/150-successful-machine-learning-models/</og:url>
<og:description>150 successful machine learning models: 6 lessons learned at Booking.com Bernadi et al., KDD’19 Here’s a paper that will reward careful study for many organisations. We’ve previously looked a…</og:description>
<og:image>https://adriancolyer.files.wordpress.com/2019/10/booking.com-fig-10.jpeg?w=480</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.acolyer.org/2019/10/07/150-successful-machine-learning-models/</dc:identifier>
</item>
<item>
<title>For the first time on record, the 400 wealthiest Americans paid a lower tax rate</title>
<link>https://www.nytimes.com/interactive/2019/10/06/opinion/income-tax-rate-wealthy.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/interactive/2019/10/06/opinion/income-tax-rate-wealthy.html</guid>
<description>&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;Almost a decade ago, Warren Buffett made a claim that would become famous. He said that he paid &lt;a href=&quot;https://www.nytimes.com/2011/08/15/opinion/stop-coddling-the-super-rich.html&quot;&gt;a lower tax rate&lt;/a&gt; than his secretary, thanks to the many loopholes and deductions that benefit the wealthy.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;His claim sparked a debate about the fairness of the tax system. In the end, the expert consensus was that, whatever Buffett’s specific situation, most wealthy Americans did not actually pay a lower tax rate than the middle class. “Is it the norm?” the fact-checking outfit &lt;a href=&quot;https://www.politifact.com/truth-o-meter/article/2011/sep/21/does-secretary-pay-higher-taxes-millionaire/&quot;&gt;Politifact&lt;/a&gt; asked. “No.”&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;Time for an update: It’s the norm now.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;For the first time on record, the 400 wealthiest Americans last year paid a lower total tax rate — spanning federal, state and local taxes — than any other income group, according to newly released data.&lt;/p&gt;

&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;The overall tax rate on the richest 400 households last year was only 23 percent, meaning that their combined tax payments equaled less than one quarter of their total income. This overall rate was 70 percent in 1950 and 47 percent in 1980.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;For middle-class and poor families, the picture is different. Federal income taxes have also declined modestly for these families, but they haven’t benefited much if at all from the decline in the corporate tax or estate tax. And they now pay more in payroll taxes (which finance Medicare and Social Security) than in the past. Over all, their taxes have remained fairly flat.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;The combined result is that over the last 75 years the United States tax system has become radically less progressive.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;&lt;em&gt;[&lt;a href=&quot;https://www.nytimes.com/newsletters/david-leonhardt?module=inline&quot;&gt;Sign up for David Leonhardt’s daily newsletter with commentary on the news and reading suggestions from around the web.&lt;/a&gt;]&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;The data here come from the most important book on government policy that I’ve read in a long time — called &lt;a href=&quot;https://wwnorton.com/books/9781324002727&quot;&gt;“The Triumph of Injustice,”&lt;/a&gt; to be released next week. The authors are Emmanuel Saez and Gabriel Zucman, both professors at the University of California, Berkeley, who have done pathbreaking work on taxes. Saez has won &lt;a href=&quot;https://www.aeaweb.org/articles?id=10.1257/jep.24.3.183&quot;&gt;the award&lt;/a&gt; that goes to the top academic economist under age 40, and Zucman was recently &lt;a href=&quot;https://www.bloomberg.com/news/features/2019-05-23/the-wealth-detective-who-finds-the-hidden-money-of-the-super-rich&quot;&gt;profiled&lt;/a&gt; on the cover of Bloomberg BusinessWeek magazine as “the wealth detective.”&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;They have constructed a historical database that tracks the tax payments of households at different points along the income spectrum going back to 1913, when the federal income tax began. The story they tell is maddening — and yet ultimately energizing.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;“Many people have the view that nothing can be done,” Zucman told me. “Our case is, ‘No, that’s wrong. Look at history.’” As they write in the book: “Societies can choose whatever level of tax progressivity they want.” When the United States has raised tax rates on the wealthy and made rigorous efforts to collect those taxes, it has succeeded in doing so.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;And it can succeed again.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;Saez and Zucman portray the history of American taxes as a struggle between people who want to tax the rich and those who want to protect the fortunes of the rich. The story starts in the 17th century, when Northern colonies created more progressive tax systems than Europe had. Massachusetts even enacted &lt;a href=&quot;https://www.hoover.org/research/colonial-roots-american-taxation-1607-1700&quot;&gt;a wealth tax&lt;/a&gt;, which covered financial holdings, land, ships, jewelry, livestock and more.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;The Southern colonies, by contrast, were hostile to taxation. Plantation owners worried that taxes could undermine slavery by eroding the wealth of shareholders, as the historian Robin Einhorn &lt;a href=&quot;https://www.press.uchicago.edu/Misc/Chicago/194876.html&quot;&gt;has explained&lt;/a&gt;, and made sure to keep tax rates low and tax collection ineffective. (The Confederacy’s hostility to taxes ultimately hampered its ability to raise money and fight the Civil War.)&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;By the middle of the 20th century, the high-tax advocates had prevailed. The United States had arguably the world’s most progressive tax code, with a top income-tax rate of &lt;a href=&quot;https://www.taxpolicycenter.org/statistics/historical-highest-marginal-income-tax-rates&quot;&gt;91 percent&lt;/a&gt; and a corporate tax rate above 50 percent.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;But the second half of the 20th century was mostly a victory for the low-tax side. Companies found ways to take more deductions and dodge taxes. Politicians cut every tax that fell heavily on the wealthy: high-end income taxes, investment taxes, the estate tax and the corporate tax. The justification for doing so was usually that the economy as a whole would benefit.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;The justification turned out to be &lt;a href=&quot;https://www.nytimes.com/2012/09/16/opinion/sunday/do-tax-cuts-lead-to-economic-growth.html&quot;&gt;wrong&lt;/a&gt;. The wealthy, and only the wealthy, have done fantastically well over the last several decades. G.D.P. growth has been &lt;a href=&quot;https://www.nytimes.com/2019/03/10/opinion/us-economy-stagnation-growth.html&quot;&gt;disappointing&lt;/a&gt;, and middle-class income growth &lt;a href=&quot;https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html&quot;&gt;even worse&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;The American economy just doesn’t function very well when tax rates on the rich are low and inequality is sky high. It was true in the lead-up to the Great Depression, and it’s been true recently. Which means that raising high-end taxes isn’t about punishing the rich (who, by the way, will still be rich). It’s about creating an economy that works better for the vast majority of Americans.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;In their book, Saez and Zucman sketch out a modern progressive tax code. The overall tax rate on the richest 1 percent would roughly double, to about 60 percent. The tax increases would bring in about $750 billion a year, or 4 percent of G.D.P., enough to pay for &lt;a href=&quot;https://www.brookings.edu/research/do-we-already-have-universal-preschool/&quot;&gt;universal pre-K&lt;/a&gt;, an infrastructure program, medical research, clean energy and more. Those are the kinds of policies that do lift economic growth.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;One crucial part of the agenda is a &lt;a href=&quot;https://www.nytimes.com/interactive/2017/11/10/opinion/gabriel-zucman-paradise-papers-tax-evasion.html&quot;&gt;minimum global corporate tax&lt;/a&gt; of at least 25 percent. A company would have to pay the tax on its profits in the United States even if it set up headquarters in Ireland or Bermuda. Saez and Zucman also favor &lt;a href=&quot;https://www.brookings.edu/wp-content/uploads/2019/09/Saez-Zucman_conference-draft.pdf&quot;&gt;a wealth tax&lt;/a&gt;; Elizabeth Warren’s &lt;a href=&quot;https://elizabethwarren.com/ultra-millionaire-tax/&quot;&gt;version&lt;/a&gt; is based on their work. And they call for the creation of a Public Protection Bureau, to help the I.R.S. crack down on tax dodging.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;I already know what some critics will say about these arguments — that the rich will always figure out a way to avoid taxes. That’s simply not the case. True, they will always manage to avoid some taxes. But history shows that serious attempts to collect more taxes usually succeed.&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;Ask yourself this: If efforts to tax the super-rich were really doomed to fail, why would so many of the super-rich be fighting so hard to defeat those efforts?&lt;/p&gt;
&lt;div class=&quot;g-container g-methodology&quot; id=&quot;&quot; readability=&quot;18.019575856444&quot;&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;&lt;em&gt;&lt;em&gt;The Times is committed to publishing&lt;/em&gt; &lt;a href=&quot;https://www.nytimes.com/2019/01/31/opinion/letters/letters-to-editor-new-york-times-women.html&quot;&gt;a diversity of letters&lt;/a&gt; &lt;em&gt;to the editor. We’d like to hear what you think about this or any of our articles. Here are some&lt;/em&gt; &lt;a href=&quot;https://help.nytimes.com/hc/en-us/articles/115014925288-How-to-submit-a-letter-to-the-editor&quot;&gt;tips&lt;/a&gt;&lt;em&gt;. And here’s our email: letters@nytimes.com.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;&lt;em&gt;Listen to&lt;/em&gt; &lt;a href=&quot;https://www.nytimes.com/column/the-argument&quot;&gt;“The Argument” podcast&lt;/a&gt; &lt;em&gt;every Thursday morning, with Ross Douthat, Michelle Goldberg and David Leonhardt.&lt;/em&gt;&lt;/p&gt;

&lt;p class=&quot;g-body&quot; id=&quot;&quot;&gt;David Leonhardt is a former Washington bureau chief for the Times, and was the founding editor of The Upshot and head of &lt;a href=&quot;https://www.nytimes.com/projects/2020-report/index.html&quot;&gt;The 2020 Project&lt;/a&gt;, on the future of the Times newsroom. He won the 2011 Pulitzer Prize for commentary, for columns on the financial crisis. &lt;a href=&quot;https://twitter.com/DLeonhardt&quot;&gt;@&lt;/a&gt;&lt;a href=&quot;https://twitter.com/DLeonhardt&quot;&gt;DLeonhardt&lt;/a&gt; • &lt;a href=&quot;https://www.facebook.com/DavidRLeonhardt&quot;&gt;Facebook&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 07 Oct 2019 15:01:39 +0000</pubDate>
<dc:creator>denzil_correa</dc:creator>
<og:url>https://www.nytimes.com/interactive/2019/10/06/opinion/income-tax-rate-wealthy.html</og:url>
<og:type>article</og:type>
<og:title>Opinion | The Rich Really Do Pay Lower Taxes Than You</og:title>
<og:image>https://static01.nyt.com/images/2019/10/04/us/tax-trump-wealth-promo-1570228395029/tax-trump-wealth-promo-1570228395029-facebookJumbo.png</og:image>
<og:description>The 400 wealthiest Americans now pay a lower rate than the middle class.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/interactive/2019/10/06/opinion/income-tax-rate-wealthy.html</dc:identifier>
</item>
<item>
<title>Artificial blood developed for patients of any blood type, researchers say</title>
<link>http://www.asahi.com/ajw/articles/AJ201909290001.html</link>
<guid isPermaLink="true" >http://www.asahi.com/ajw/articles/AJ201909290001.html</guid>
<description>&lt;p&gt;Japanese researchers said they have developed artificial blood that can be transfused into patients regardless of their blood type and can vastly improve the chances for survival of seriously injured people.&lt;/p&gt;
&lt;p&gt;The artificial blood created by a team of scientists primarily from the National Defense Medical College has proved effective in experiments on rabbits.&lt;/p&gt;
&lt;p&gt;For possible applications on humans, the artificial blood gets around problems with identifying blood types in emergency situations and overcomes limits on storing real blood from donors.&lt;/p&gt;
&lt;p&gt;A severe loss of blood platelets that stop bleeding and red blood cells that carry oxygen to body cells will lead to death.&lt;/p&gt;
&lt;p&gt;Platelets can be stored for four days if shaken to prevent solidification, while red blood cells can be kept for 20 days at low temperatures.&lt;/p&gt;
&lt;p&gt;A large amount of platelets and red blood cells from donors of all blood types must be secured for emergencies.&lt;/p&gt;
&lt;p&gt;The team’s artificial blood consists of platelets and red blood cells. Each component is put in tiny bags known as liposome derived from the cell membrane to stop bleeding and transfer oxygen.&lt;/p&gt;
&lt;p&gt;The artificial blood can be stored at normal temperatures for more than a year.&lt;/p&gt;
&lt;p&gt;“It is difficult to stock a sufficient amount of blood for transfusions in such regions as remote islands,” said Manabu Kinoshita, an associate professor of immunology at the National Defense Medical College and a member of the team. “The artificial blood will be able to save the lives of people who otherwise could not be saved.”&lt;/p&gt;
&lt;p&gt;When the artificial blood was tested on 10 rabbits suffering from serious blood loss, six of them survived, a ratio comparable to that among rabbits treated with real blood, according to the team.&lt;/p&gt;
&lt;p&gt;No negative side effects, such as blood clotting, were reported, the researchers said.&lt;/p&gt;
&lt;p&gt;The blood types of patients must be confirmed before they can receive transfusions, so emergency medical technicians and other health care workers are prohibited from transfusing blood in ambulances.&lt;/p&gt;
&lt;p&gt;Since blood type is not an issue with the artificial blood, injured patients can be treated before they arrive at hospitals, resulting in a higher survival rate, the team said.&lt;/p&gt;
&lt;p&gt;The team’s findings were published in the U.S. journal Transfusion (&lt;a target=&quot;_blank&quot; href=&quot;https://doi.org/10.1111/trf.15427&quot;&gt;&lt;u&gt;https://doi.org/10.1111/trf.15427&lt;/u&gt;&lt;/a&gt;).&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 14:19:19 +0000</pubDate>
<dc:creator>ausjke</dc:creator>
<og:title>Artificial blood developed for patients of any blood type：The Asahi Shimbun</og:title>
<og:url>http://www.asahi.com/ajw/articles/AJ201909290001.html</og:url>
<og:image>http://www.asahicom.jp/ajw/articles/images/AS20190928002514_comm.jpg</og:image>
<og:type>article</og:type>
<og:description>Japanese researchers said they have developed artificial blood that can be transfused into patients</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.asahi.com/ajw/articles/AJ201909290001.html</dc:identifier>
</item>
<item>
<title>Web Graphics Done Right</title>
<link>https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques</link>
<guid isPermaLink="true" >https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques</guid>
<description>&lt;article class=&quot;post__intro&quot;&gt;&lt;p&gt;Start taking graphics on the web seriously and boost your applications’ performance by learning the essentials about image formats, both modern and old-school. Dig into SVGs and adopt the latest and greatest tools to optimize your graphical content: both vector and raster. Study the theory behind digital images and how humans perceive them—to improve the experience for your users.&lt;/p&gt;
&lt;/article&gt;&lt;p&gt;Did you know that the average web page destined for a desktop in 2019 &lt;a href=&quot;https://httparchive.org/reports/page-weight#bytesImg&quot;&gt;takes 2MB of traffic&lt;/a&gt;, and &lt;em&gt;half&lt;/em&gt; of everything that a web server sends to the user’s browser is graphics? JPEGs, PNGs, SVGs, GIFs, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Image_file_formats&quot;&gt;some other acronyms&lt;/a&gt; known to everyone who ever built a digital product. And while one can think that everything displayed on a web page has to do with front-end development, we assure you that understanding images is essential for all the members of product teams: from back-end to design to management and customer support.&lt;/p&gt;
&lt;h2 id=&quot;tldr-and-toc&quot;&gt;TL;DR and ToC&lt;/h2&gt;
&lt;p&gt;Instead of trying to describe the entire content of this long and winding article in words, we drew a graphical map for you. Start from the top, with a source image of a cupcake, and decide what you want to do with it to prepare it for the limelight!&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Visual TLDR&quot; width=&quot;1194&quot; height=&quot;834&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/tldr-a187308.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A visual TL;DR&lt;/p&gt;
&lt;p&gt;Or, you can directly jump to:&lt;/p&gt;
&lt;p&gt;But if you have time (and patience), just start reading from here down! Good luck!&lt;/p&gt;
&lt;h2 id=&quot;a-curve-and-a-tuple-walk-into-a-bar&quot;&gt;A curve and a tuple walk into a bar&lt;/h2&gt;
&lt;p&gt;While technically hypertext, &lt;a href=&quot;https://thehistoryoftheweb.com/brief-history-hypertext/&quot;&gt;envisioned&lt;/a&gt; by Douglas Engelbart as a pillar of modern communication, &lt;a href=&quot;http://motherfuckingwebsite.com/&quot;&gt;does not need images&lt;/a&gt; to convey information—the user’s attention needs to be guided by graphical content that stands out. Images, video clips, CSS-animations, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot;&gt;canvas&lt;/a&gt; drawings, WebGL, even Flash—the obscure technology of ancient times—all means are justified in a constant fight for user retention.&lt;/p&gt;
&lt;p&gt;From the computer’s perspective, every image is just a sequence of specific instructions. How they get translated into &lt;em&gt;hardware pixels&lt;/em&gt; displayed on a screen is an exciting story in itself. First of all, most image formats out there, with a notable exception of BMP (&lt;a href=&quot;https://www.youtube.com/watch?v=v2g5qbvb7F4&quot;&gt;Microsoft Paint&lt;/a&gt;, anyone?), &lt;em&gt;do not&lt;/em&gt; explicitly store pixel values. Some math is involved in decoding data contained in a file into an array of color-coded values, with &lt;a href=&quot;https://en.wikipedia.org/wiki/RGB_color_model&quot;&gt;Red, Green, Blue&lt;/a&gt; being the most obvious way to convey color.&lt;/p&gt;
&lt;p&gt;RGB is just one of many color models in existence. Our personal favorite is &lt;a href=&quot;https://en.wikipedia.org/wiki/YCbCr&quot;&gt;YCbCr&lt;/a&gt; that takes into account the way &lt;em&gt;human eyes and brain&lt;/em&gt; work: we are actually more perceptive to changes in luminance than to variations in color.&lt;/p&gt;
&lt;p&gt;When we are dealing with &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_graphics&quot;&gt;vector formats&lt;/a&gt;, we think not in tuples, triples, and &lt;a href=&quot;https://en.wikipedia.org/wiki/CMYK_color_model&quot;&gt;quadruples&lt;/a&gt;, as in raster formats, but in geometric primitives: lines, circles, and squares that are all, basically, just &lt;a href=&quot;https://en.wikipedia.org/wiki/B%C3%A9zier_curve&quot;&gt;curves&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;PNG, GIF, JPEG, WebP, HEIC, &lt;a href=&quot;https://evilmartians.com/chronicles/better-web-video-with-av1-codec&quot;&gt;AVIF&lt;/a&gt; are raster formats, SVG is a vector format. We will cover all of them below.&lt;/p&gt;
&lt;h2 id=&quot;see-the-big-picture&quot;&gt;See the big picture&lt;/h2&gt;
&lt;p&gt;The image below was meant to be 37.8MB in size, to show the source file from the professional video camera. Out of respect for your ISP and the &lt;a href=&quot;https://www.youtube.com/watch?v=KAJsdgTPJpU&quot;&gt;environment in general&lt;/a&gt;, we have done our best to compress it to 3.5MB without losing much quality.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;3.5MB image&quot; width=&quot;3414&quot; height=&quot;2277&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/big_image-4a74b8b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;37.8MB compressed into 3.5MB&lt;/p&gt;
&lt;p&gt;However, optimizing an image itself is &lt;em&gt;not&lt;/em&gt; the first thing you should consider when you deal with visual content on the web. First, you should evaluate the whole stack behind delivering those sweet, sweet bytes (yes, most of our image examples will have to do with food!) over the network to the end-user. Ask yourself the following questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Do you load all the pictures at once, or focus only on those that need to be rendered first? (check out &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Performance/Lazy_loading&quot;&gt;lazy loading&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Have you considered &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP/2&quot;&gt;HTTP/2&lt;/a&gt; that supports multiplexing at a protocol level?&lt;/li&gt;
&lt;li&gt;Are you compressing your assets effectively?&lt;/li&gt;
&lt;li&gt;Do you use a &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_delivery_network&quot;&gt;CDN&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We will leave that checklist as an exercise for the reader and focus on the images themselves.&lt;/p&gt;
&lt;h2 id=&quot;nothing-is-perfect&quot;&gt;Nothing is perfect&lt;/h2&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Quality &lt;em&gt;can&lt;/em&gt; be measured. Check out the &lt;a href=&quot;https://en.m.wikipedia.org/wiki/Structural_similarity&quot;&gt;Structural similarity index&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Your responsibility before your users is to deliver the highest-quality image by using the least amount of resources: processing power (both server and client), memory, and bandwidth.&lt;/p&gt;
&lt;p&gt;In this article, we are mostly concerned with &lt;em&gt;technical&lt;/em&gt; image quality—which means we don’t take into account things like composition, perspective, or color harmony. We can assume that we already start with some “ideal image”—and we need to put a version of it on the web in the most optimal way possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What we mean by image quality is the extent to which the resulting image differs from the ideal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Basically, when we say “quality,” we mostly mean the following things:&lt;/p&gt;
&lt;h4 id=&quot;sharpness&quot;&gt;Sharpness&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Precision and line sharpeness example&quot; width=&quot;1102&quot; height=&quot;431&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/precision_and_sharpeness-6e2c4c8.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Sharp vector image on the left versus blurry raster one on the right. Compare in &lt;a href=&quot;https://codepen.io/hellsquirrel/pen/xoBMym&quot;&gt;Codepen&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;color-accuracy&quot;&gt;Color accuracy&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Color accuracy example&quot; width=&quot;500&quot; height=&quot;250&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/colors-9d41e94.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;True color on the left versus twenty colors on the right. Compare in &lt;a href=&quot;https://codepen.io/hellsquirrel/pen/ZdPPGM&quot;&gt;Codepen&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;lack-of-artifacts&quot;&gt;Lack of artifacts&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Artifacts example&quot; width=&quot;460&quot; height=&quot;244&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/artifacts-4017e1d.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Smooth rendering on the left versus pixelating on the right Compare in &lt;a href=&quot;https://codepen.io/hellsquirrel/pen/NZJJbw&quot;&gt;Codepen&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;eyes-brain-and-context&quot;&gt;Eyes, brain, and context&lt;/h2&gt;
&lt;p&gt;As a front-end developer implementing a mockup in HTML and CSS, or as a designer who is creating this mockup, you are effectively solving the same problem: the need to illustrate some concept for your users through images. So it pays off to mind the context before you even get to the tools.&lt;/p&gt;
&lt;p&gt;Take a look at the following examples.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Different image contexts&quot; width=&quot;1189&quot; height=&quot;518&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/context-8319704.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Different image contexts&lt;/p&gt;
&lt;p&gt;In the case of a card (1), the picture itself is the main content: we expect the user to spend some time looking at it, so we need the best quality possible.&lt;/p&gt;
&lt;p&gt;In the case of a banner (2), the text is more important. The picture is there just to keep the company. You can take your optimizations &lt;a href=&quot;https://www.youtube.com/watch?v=4xgx4k83zzc&quot;&gt;to eleven&lt;/a&gt; without the fear of drawing your users away.&lt;/p&gt;
&lt;p&gt;In the case of an interactive element (3), both text and image are equally important as they call for the user’s action. Such elements need to be scalable, reusable, and take up as little space as possible—that is why it makes sense to ditch &lt;a href=&quot;https://en.wikipedia.org/wiki/Raster_graphics&quot;&gt;raster&lt;/a&gt; in favor of vector.&lt;/p&gt;
&lt;p&gt;Another critical factor is human perception. As we mentioned already, luminance and contrast are more important than color, so we can save on colors without anyone noticing.&lt;/p&gt;
&lt;p&gt;Let’s also keep in mind that images are rendered by browsers on a physical device—the screen—and different browsers render images a bit differently. Sometimes you need to squint really hard to notice it (if you don’t happen to have a Retina screen, you may be out of luck):&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;The same image in different browsers&quot; width=&quot;1432&quot; height=&quot;395&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/different-browsers-f5d288f.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Same image in different browsers&lt;/p&gt;
&lt;p&gt;You should account for those differences and provide different images based on screen type, viewport size, and a flavor of a browser.&lt;/p&gt;
&lt;h2 id=&quot;not-all-pixels-are-created-equal&quot;&gt;Not all pixels are created equal&lt;/h2&gt;
&lt;p&gt;What is a pixel, after all? Nowadays, even a toddler who spent some time watching “Peppa Pig” on a parent’s phone would probably have some idea of it. However, the initial intuition is not always correct.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When we say “pixel,” we actually mean one of at least three very different things: a point in a hardware sense, a point in a CSS sense, or a point in an “image data” sense.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The trickiest one is a so-called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSS_pixel&quot;&gt;CSS pixel&lt;/a&gt;, which is described as a &lt;em&gt;unit of length, which roughly corresponds to the width or height of a single dot that can be comfortably seen by the human eye without strain&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;When you are reading a text on your phone, you hold the screen at a certain distance from your eyeballs, but when you look at a computer screen—you tend to be further from it to read comfortably. The larger the distance between a retina and the Retina (pun intended), the larger the size of a “CSS pixel” will be.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;How CSS pixel is measured&quot; width=&quot;250&quot; height=&quot;180&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/distance-6d286a4.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;How CSS pixel is measured (from the &lt;a href=&quot;https://www.w3.org/TR/css-values-3/#reference-pixel&quot;&gt;CSS specification&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://alvyray.com/Memos/CG/Microsoft/6_pixel.pdf&quot;&gt;This paper&lt;/a&gt; from 1995 by Alvy Ray Smith of Microsoft talks about pixel &lt;em&gt;shape&lt;/em&gt; at length, feel free to nerd out!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Without getting into much detail, we can just keep in mind that the “physical size” of a CSS pixel is a value in millimeters that is different for every screen type and never changes. On Apple’s Retina screens (iPhones, iPads, Macs), this value varies from &lt;em&gt;0.11 mm&lt;/em&gt; to &lt;em&gt;0.23 mm&lt;/em&gt;. Don’t even ask us about the &lt;em&gt;shape&lt;/em&gt; of a pixel (it’s a loaded question!), just remember that we use a single value, not a tuple.&lt;/p&gt;
&lt;p&gt;CSS pixel is also not the same as a hardware pixel, with the latter being just a minimal size of a dot according to a particular screen’s physical specifications.&lt;/p&gt;
&lt;p&gt;Now we can finally talk about the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio&quot;&gt;device pixel ratio&lt;/a&gt;. Understanding DPR is extremely important if you want your images to look equally good on all devices.&lt;/p&gt;
&lt;p&gt;You can open your DevTools in whatever browser you’re using right now and type &lt;code&gt;devicePixelRatio&lt;/code&gt; to find out &lt;em&gt;your&lt;/em&gt; current screen DPR. Note that if you drag the window to another screen (e.g., external display)—the number will update. We calculate it like that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;devicePixelRatio = CSS pixel size / hardware pixel size&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s take an image with a width of 1000 pixels and a height of 1000 pixels. How does it map to our screen?&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;1000 × 1000 px image&quot; width=&quot;500&quot; height=&quot;500&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/1000-34ad776.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1000 × 1000 px image&lt;/p&gt;
&lt;p&gt;Now, let’s put this image on a web page:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cake.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: 1000px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;take note that we apply the DPR formula for each dimension, so we do it twice for a 1000 × 1000 image.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;By setting &lt;code&gt;width&lt;/code&gt; to &lt;code&gt;1000px&lt;/code&gt;, you tell your browser to render &lt;code&gt;1000 * 1000 = 1 000 000&lt;/code&gt; &lt;em&gt;CSS pixels&lt;/em&gt;. If your device pixel ratio is &lt;strong&gt;one&lt;/strong&gt; (non-Retina screen), than &lt;code&gt;1000 * 1 * 1000 * 1 = 1 000 000&lt;/code&gt; &lt;em&gt;hardware pixels&lt;/em&gt; are involved.&lt;/p&gt;
&lt;p&gt;One hardware pixel is responsible for one “image” pixel, as intuitively should be the case.&lt;/p&gt;
&lt;p&gt;But what if the DPR is &lt;strong&gt;two&lt;/strong&gt; (Retina)? Now your image is rendered by &lt;code&gt;1000 * 2 * 1000 * 2 = 4 000 000&lt;/code&gt; &lt;em&gt;hardware pixels&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That means that one pixel of your image is rendered by &lt;strong&gt;four&lt;/strong&gt; hardware pixels. Your image is upscaled: every pixel of the &lt;em&gt;image data&lt;/em&gt; is “stretched” to be painted on a screen.&lt;/p&gt;
&lt;h2 id=&quot;a-little-pixel-in-a-big-world&quot;&gt;A little pixel in a big world&lt;/h2&gt;
&lt;p&gt;As we have seen above, image dimensions no longer map to hardware one to one. As browsers have no way to tell what is the contents of the raster image, they use generic algorithms (Math! Math! Math!) to guess the best resizing strategy.&lt;/p&gt;
&lt;p&gt;And as you can guess, they don’t always guess right.&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Check out most common scaling algorithms &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_gallery_of_image_scaling_algorithms&quot;&gt;in comparison&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can control this process with the the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering&quot;&gt;image-rendering&lt;/a&gt; CSS property. It allows you to pick a strategy, but you still have no control over the particular algorithm chosen by the browser.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;CSS image-rendering property in Chrome&quot; width=&quot;400&quot; height=&quot;205&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/image-rendering-2511bd5.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Different CSS &lt;code&gt;image-rendering&lt;/code&gt; values displayed in Chrome&lt;/p&gt;
&lt;p&gt;The image below explains how upscaling works:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;1000 × 1000 px image&quot; width=&quot;327&quot; height=&quot;398&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/image_scaling-cc720ad.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Scaling a 4px region to 16px&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Interpolation uses a certain number of neighboring pixels.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When scaling a 4px region to 16px, the browser has only four image pixels available, the other 12 need to be guessed. So blurry edges and other artifacts are a result of &lt;em&gt;interpolation&lt;/em&gt; performed by a resizing algorithm.&lt;/p&gt;
&lt;p&gt;Your goal is to avoid upscaling by any means necessary. Here’s how to do it:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Try to understand the context and settle on accepted quality.&lt;/li&gt;
&lt;li&gt;Resize the original picture to &lt;code&gt;max_size_of_your_container * DPR&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Have multiple image versions for most common DPRs (one, two, even &lt;a href=&quot;https://cloudinary.com/blog/how_to_automatically_adapt_website_images_to_retina_and_hidpi_devices&quot;&gt;three&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Account for it in your markup, like so:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.png 1x, cupcake@2x.png 2x, cupcake@3x.png 3x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;svg-scales-very-good&quot;&gt;SVG: Scales Very Good&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Scalable_Vector_Graphics&quot;&gt;SVG&lt;/a&gt; stands for &lt;em&gt;scalable&lt;/em&gt; vector graphics. So, by definition, SVG images are not afraid of scaling. Why is that?&lt;/p&gt;
&lt;p&gt;Let’s take a closer look at the anatomy of an SVG file. The first thing we notice is that that the contents are written in plain text that is human readable and suspiciously resembles a good old &lt;a href=&quot;https://en.wikipedia.org/wiki/XML&quot;&gt;XML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here I did my best to draw a cookie using simple geometric shapes, and exported it it as an &lt;code&gt;.svg&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 200 120&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;g&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ellipse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;60&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#FDC970&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ry=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;60&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#794545&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M69.5433628,33.5480878 C65.8626549,33.5480878 61.7766372,31.1161129 58.1720354,32.2999373 C56.2746903,32.9232602 56.3815929,38.2702194 60.5900885,38.6347335 C65.4106195,39.0530408 69.8828319,39.0225705 69.3709735,33.1215047 C69.3550443,32.9383072 69.0442478,32.9992476 68.881062,32.9383072 M122.896283,19.855674 C118.705133,19.4005016 114.333451,17.1182445 110.322832,18.4897806 C108.631504,19.0679624 108.557522,23.9431975 110.322832,24.1549843 L110.835398,24.7019436 C113.283894,24.9953605 115.762124,25.3203762 118.217699,25.1021944 C121.980531,24.7681505 123.187611,20.541442 119.776283,18.861442 M153.981593,50.2878997 C152.356106,49.1322884 150.801062,47.8563009 149.105841,46.8206897 C143.614159,43.4659561 139.981239,46.0728527 142.624779,53.3021944 C142.882478,54.0071473 143.838938,54.2219436 144.547965,54.2862696 C146.88177,54.499185 149.286726,54.6590596 151.573097,54.1188715 C152.198584,53.9710345 152.378407,51.1380564 152.378407,48.2467712 M90.3642478,74.3676489 C90.1281416,74.2999373 82.6669027,71.6516614 80.7334513,72.3396865 C79.4789381,72.7862069 76.300177,74.2623197 77.5178761,74.8126646 L77.1681416,78.876489 C84.1083186,82.0122884 88.0523894,79.6845141 87.441062,74.061442 M41.1472566,60.9460815 C34.3621239,61.3455799 42.7111504,61.193605 35.5578761,60.1429467 C32.7461947,59.729906 25.1047788,62.6068966 30.1058407,66.3366771 C36.7384071,71.2830094 41.4778761,66.7895925 40.3543363,60.5902194 M141.784425,93.0744828 C135.735221,93.0744828 143.533451,93.3603762 131.213451,89.6674608 C127.678938,88.6081505 125.312566,93.9363009 127.677168,96.1651411 C130.754336,99.0647022 140.590442,98.4154232 140.590442,93.0221944 M113.093097,50.5941066 C110.309381,50.4473981 107.51823,49.9011912 104.740885,50.1547335 C103.281416,50.2878997 102.962832,56.4951724 105.088142,56.8611912 C108.850973,57.5097179 119.12708,58.2022571 112.47292,49.9373041&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;

&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;You can check &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths&quot;&gt;this tutorial&lt;/a&gt; to fully understand a &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can’t see a cookie &lt;em&gt;yet&lt;/em&gt; (wait for it), but what you can see is a set of tags:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; is a container for our image&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; is a unit of composition (actually this tag is useless in the previous code example, it’s there for demonstration only)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ellipse&amp;gt;, &amp;lt;path&amp;gt;&lt;/code&gt; are geometric primitives. &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is the most versatile shape. We can use it to represent all other shapes (circles, triangles, complex curves).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The appearance of the shape is determined by attributes.&lt;/p&gt;
&lt;p&gt;In our example, &lt;code&gt;rx&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;cx&lt;/code&gt;, and similar attributes are responsible for the size and position of the figures. The values of these attributes are just coordinates, but these coordinates have nothing to do with the coordinate system of the screen. Instead, they are calculated relative to the &lt;code&gt;viewBox&lt;/code&gt; of the SVG image. In our case:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;viewBox=&quot;0 0 200 120&quot;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That translates to 0 pixels from the left and 0 pixels from the top of the document with a width of 200 pixels and a height of 120 pixels. This is the size and location of a viewport where our image is placed. Our SVG also has &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes—they determine the real size of the image itself. In our case, it would be 200 × 120 &lt;em&gt;CSS pixels&lt;/em&gt; (1).&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Playing with SVG attributes&quot; width=&quot;950&quot; height=&quot;625&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/svg-example-12ad708.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Playing with different SVG attributes: 1. Initial picture; 2. Removing width and height; 3. width=30px; 4. preserveAspectRatio: none; 5. preserveAspectRatio: meet; 6. preserveAspectRatio: slice&lt;/p&gt;
&lt;p&gt;Let’s remove the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes. Now the size of our image is determined by the size of the browser window (2).&lt;/p&gt;
&lt;p&gt;Another way to set the size of our image is to set &lt;code&gt;width&lt;/code&gt; and/or &lt;code&gt;height&lt;/code&gt; in CSS. For instance:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 200 120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: 90px&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The size of our image now is 20% of the height of the browser window (3).&lt;/p&gt;
&lt;p&gt;But wait, why is our cookie vertically centered? The reason is yet another attribute that is called &lt;code&gt;preserveAspectRatio&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default value of this attribute is &lt;code&gt;xMidYMid meet&lt;/code&gt;. It means (admittedly, it can’t be guessed): keep the original proportions of the image, keep the contents of the current &lt;em&gt;viewBox&lt;/em&gt; visible, scale the image as much as possible, center the result both vertically and horizontally.&lt;/p&gt;
&lt;p&gt;Let’s play with this attribute (refer to figures (4) to (6) above):&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 200 120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=90px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 200 120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xMinYMin meet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=90px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 200 120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xMinYMin slice&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=90px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;What if we want to see only a half of the cookie? Just cut the &lt;code&gt;viewBox&lt;/code&gt; width:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 100 120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xMinYMin meet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: 90px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Changing SVG viewbox&quot; width=&quot;300&quot; height=&quot;300&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/svg-viewbox-1656b5a.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Changing SVG viewbox&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;viewBox&lt;/code&gt; and &lt;code&gt;preserveAspectRatio&lt;/code&gt; are your best friends.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Using these attributes together, we can scale our images in millions of ways.&lt;/p&gt;
&lt;h2 id=&quot;hidden-powers-of-svg&quot;&gt;Hidden powers of SVG&lt;/h2&gt;
&lt;p&gt;Besides tags, curves, and coordinates, SVG hides some surprises too. First, you can put &lt;em&gt;raster images&lt;/em&gt; inside. So, always make sure to check if the SVG image you are dealing with is &lt;em&gt;really&lt;/em&gt; a vector image, that might not be the case. This technique can be useful if we want to add some interactivity to an otherwise raster image, or to mark it up in some way.&lt;/p&gt;
&lt;p&gt;Second, we can animate the paths inside the SVG image. This opens the door to the beautiful world of &lt;a href=&quot;https://codepen.io/search/pens?q=svg%20animation&amp;amp;page=1&amp;amp;order=popularity&amp;amp;depth=everything&quot;&gt;SVG animations&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Look at some animations on &lt;a href=&quot;https://anycable.io/&quot;&gt;AnyCable&lt;/a&gt;’s website—those are partially animated SVGs too!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Last, SVG files can also be &lt;em&gt;dangerous&lt;/em&gt;. Nothing prevents someone from putting a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag and some JavaScript inside the XML syntax. The browser will run this code, happily.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Script tag inside SVG&quot; width=&quot;1598&quot; height=&quot;862&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/dangerous-svg-c871df2.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;SVG files can be dangerous&lt;/p&gt;
&lt;p&gt;Exercise caution, whenever dealing with SVG images from untrusted sources! Generally, it is always a good idea to peek inside before publishing SVG on the web.&lt;/p&gt;
&lt;h2 id=&quot;svg-vs-raster-formats&quot;&gt;SVG vs. Raster formats&lt;/h2&gt;
&lt;p&gt;ОK, SVG images have superpowers. Should we always use them for simple graphics? Nope! Using SVG gives us 26 kB of cookies, while WebP (read below!) stores the same amount of cookies in just 16 kB. And if there’s no distinction, visually, why pay more?&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;SVG image of cookies&quot; width=&quot;250&quot; height=&quot;165&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/cookies-d2ff94c.svg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A lot of cookies&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;WebP image of cookies&quot; width=&quot;500&quot; height=&quot;331&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/cookies-17c63de.webp&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A lot of cookies&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/smooth-code/svgr&quot;&gt;svgr&lt;/a&gt; if you want to transform your SVG files into React components &lt;em&gt;and&lt;/em&gt; optimize them with svgo.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can work with SVG—create and edit it—right in the browser’s console. But to do it in a more comfortable and professional setting, you can pick any vector image editor. We can recommend &lt;a href=&quot;https://boxy-svg.com&quot;&gt;Boxy SVG&lt;/a&gt;—it has a full set of options to work with vector graphics within the GUI, and it also has a built-in code editor if you want to get your hands dirty.&lt;/p&gt;
&lt;p&gt;Now it is time to optimize our SVG image with &lt;a href=&quot;https://github.com/svg/svgo&quot;&gt;svgo&lt;/a&gt;. Finally, we have a 13kb SVG versus a 16kb WebP. Look, vector won again!&lt;br/&gt;Now we want to make sure that we set up an asset compression correctly. Since SVG images are just text files, they compress very well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We will repeat this many times: “There is no perfect format.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But you can choose the right format for your task and apply as many optimizations as you want.&lt;/p&gt;
&lt;p&gt;Now, let’s get back to raster graphics.&lt;/p&gt;
&lt;h2 id=&quot;what-is-image-compression-anyway&quot;&gt;What is image compression anyway?&lt;/h2&gt;
&lt;p&gt;Let’s do some simple math. We have a &lt;em&gt;1000 × 1000&lt;/em&gt; image. We can represent every pixel with four numbers. Three for color and one for opacity. Each number is represented by one byte. So &lt;code&gt;4 * 1000 * 1000 * 1&lt;/code&gt; byte is a 4MB of raw image data—that’s quite a lot. We need to compress an image before sending it to the browser, and the browser needs to decode it back.&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;The limit of lossless compression is well known, take a look at Shannon’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Shannon%27s_source_coding_theorem&quot;&gt;source coding theorem&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Compression algorithms are divided into &lt;strong&gt;lossless&lt;/strong&gt; and &lt;strong&gt;lossy&lt;/strong&gt;: the former guarantees that the pixels that the image consists of will match the original &lt;strong&gt;exactly&lt;/strong&gt;, while the latter will not hesitate to degrade your image to preserve space.&lt;/p&gt;
&lt;p&gt;Compression is handled by &lt;em&gt;encoders&lt;/em&gt;: programs that use a pipeline of algorithms that operate on original image data at different stages of compression. At some stages, original data can be dropped, and that would result in a lossy compression (by the way, downscaling described above is lossy too).&lt;/p&gt;
&lt;p&gt;While working on a digital product, you don’t necessarily need to know the math behind compression algorithms, all you need to know is that the choice of an encoder, it’s settings, and the number of times you run it will yield different &lt;em&gt;visual quality&lt;/em&gt;, where the acceptable result depends entirely on your &lt;em&gt;context&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no such thing as perfect compression, there’s only the one that fits your use case.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See the different encoders in action:&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Cupcake image exported from Sketch&quot; width=&quot;102&quot; height=&quot;95&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/cupcake-sketch-bc3082e.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Cupcake exported from Sketch&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Cupcake image encoded with OptiPNG&quot; width=&quot;102&quot; height=&quot;95&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/cupcake-opti-eb67a1c.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Cupcake encoded with OptiPNG, it’s 21% smaller than the previous one&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;evil-martians-big-image-compression-cookbook&quot;&gt;Evil Martians’ Big Image Compression Cookbook&lt;/h2&gt;
&lt;p&gt;We have spent weeks compressing &lt;em&gt;raster&lt;/em&gt; images for you, so you don’t have to double-guess. Note that all comparison tables below are not &lt;em&gt;proper benchmarks&lt;/em&gt; per se, we did not perform measurements in a controlled setting, but rather used tools how you would in real life: play with settings and compare results.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We have scrutinized every common web image format through a set of tools, and we share our findings, so you can optimize your JPEGs, PNGs, WebPs, and GIFs in the most optimal way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are the tools at your disposal:&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://imagetragick.com/&quot;&gt;A serious security vulnerability&lt;/a&gt; was found in ImageMagic several years ago. It allowed the execution of third-party code when processing SVG files. So keep your tools up-to-date and don’t trust files from external sources.&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;Any graphics editor (Adobe Photoshop, GIMP, Figma, Sketch) will have a spaceship’s dashboard of compression options. However, if you have a lot of images, treating each of them individually in an often costly software is not the optimal way.&lt;/li&gt;
&lt;li&gt;If you’re a Mac user, don’t look any further than &lt;a href=&quot;https://imageoptim.com/mac&quot;&gt;ImageOptim&lt;/a&gt; (free, &lt;a href=&quot;https://github.com/ImageOptim/ImageOptim&quot;&gt;open-source&lt;/a&gt;), also available &lt;a href=&quot;https://imageoptim.com/online&quot;&gt;online&lt;/a&gt; (paid). It has a dead simple drag-n-drop interface, and does not overwhelm you with knobs and sliders, and comes with a &lt;a href=&quot;https://imageoptim.com/sketch&quot;&gt;Sketch plugin&lt;/a&gt;. It is a blessing and a curse, so if you want the fine-grained control over your settings, opt for CLI tools. Unfortunately, ImageOptim does not handle &lt;a href=&quot;https://en.wikipedia.org/wiki/Interlacing_(bitmaps)&quot;&gt;progressive&lt;/a&gt; JPEGs at all.&lt;/li&gt;
&lt;li&gt;In the vast land of CLI tools, &lt;a href=&quot;https://imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt; stands out the most. It can not only optimize but also crop, resize, rotate, adjust colors, apply various special effects to images of all possible formats, create progressive JPEGs, and much more.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Think Swiss Army Knife, for instance:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;convert &lt;span class=&quot;nt&quot;&gt;-strip&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-interlace&lt;/span&gt; Plane &lt;span class=&quot;nt&quot;&gt;-gaussian-blur&lt;/span&gt; 0.05 &lt;span class=&quot;nt&quot;&gt;-quality&lt;/span&gt; 85% image.jpg image_new.jpg
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This creates a new file from an original image with reduced quality, blurred a little to reduce the size, with stripped metadata and plain interlace to create a progressive JPEG.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://squoosh.app/&quot;&gt;Squoosh&lt;/a&gt; from Google has advanced compression options for lossy and lossless compression for images of different formats, allows you to resize them, or reduce palette with a side-by-side comparison. It is also one of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Interlacing_(bitmaps)&quot;&gt;best-engineered&lt;/a&gt; web apps out there. However, it works with only one file at a time.&lt;/li&gt;
&lt;li&gt;If you are a frontend developer who works within the Node.js ecosystem and relies on asset bundlers like Webpack, check out these libraries: &lt;a href=&quot;https://github.com/lovell/sharp&quot;&gt;sharp&lt;/a&gt; (uses lightning-fast &lt;code&gt;libvips&lt;/code&gt; image processing library) and &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;imagemin&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://evilmartians.com/chronicles/introducing-imgproxy&quot;&gt;imgproxy&lt;/a&gt; is a fast and secure standalone server written in Go that can take care of your &lt;a href=&quot;https://docs.imgproxy.net/#/GETTING_STARTED?id=resize-an-image&quot;&gt;image sizes&lt;/a&gt;, &lt;a href=&quot;https://docs.imgproxy.net/#/configuration?id=compression&quot;&gt;quality, progressiveness, and interlacing&lt;/a&gt;, and even &lt;a href=&quot;https://docs.imgproxy.net/#/configuration?id=webp-support-detection&quot;&gt;automatically detect when you can use WebP format&lt;/a&gt; for the current user! It transforms images on the fly as a separate service that you can easily host yourself, as it is free and open source. It is a game-changer when it comes to handling user-generated image content, as it saves your disk space, processing power, and handles main security concerns.&lt;/li&gt;
&lt;li&gt;Some CDNs provide automatic image optimization, detection of modern image formats, and conversion between supported browsers: &lt;a href=&quot;https://cloudinary.com/documentation/image_optimization&quot;&gt;Cloudinary&lt;/a&gt;, &lt;a href=&quot;https://developers.cloudflare.com/images/about/&quot;&gt;Cloudflare&lt;/a&gt;, &lt;a href=&quot;https://www.cloudimage.io/en/home&quot;&gt;Cloudimage&lt;/a&gt;, and others.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It is time to take a look at which options work better with any given popular web image format. Stay tuned for benchmarks, comparison tables, and other juicy details that will help you pick the optimal compression strategy!&lt;/p&gt;
&lt;h3 id=&quot;jpeg&quot;&gt;JPEG&lt;/h3&gt;
&lt;p&gt;We start with the decorated veteran of the web: &lt;a href=&quot;https://en.wikipedia.org/wiki/JPEG&quot;&gt;JPEG&lt;/a&gt; is around since 1992, and displaying &lt;em&gt;16 million&lt;/em&gt; colors was a big deal back then. It uses a lossy compression algorithm and is capable of storing metadata: dimensions, color profile, EXIF (camera settings information), and geolocation data.&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Here’s Cloudinary &lt;a href=&quot;https://cloudinary.com/blog/progressive_jpegs_and_green_martians&quot;&gt;explaining&lt;/a&gt; progressive JPEG on green Martians. Evil Martians have nothing to do with that.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Regardless of its age, JPEG still packs a powerful punch that is progressive loading. It ensures a smooth UX even in 2019 (GPRS is still a thing in half of the world)—just take a second to notice how Instagram or Twitter load your images on slow connections. To test if your JPEG image is progressive, you can use &lt;a href=&quot;http://techslides.com/demos/progressive-test.html&quot;&gt;that super-simple web tool&lt;/a&gt; or ImageMagick CLI with the command:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;identify &lt;span class=&quot;nt&quot;&gt;-format&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%[interlace]&quot;&lt;/span&gt; your_file_name.jpg
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;However, there are areas where the JPEG did not age well: it never learned to handle transparency. JPEG compression artifacts are so prominent that it practically spawned a new &lt;a href=&quot;https://apps.apple.com/us/app/glitch%C3%A9-photo-video-editor/id634467171&quot;&gt;art form&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;JPEG artifacts example&quot; width=&quot;856&quot; height=&quot;429&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/jpeg-artifacts-1081d75.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;These quality loss artifacts look not fancy at all. They may appear even if you re-save your image many times or just use JPEG for maps or schemes&lt;/p&gt;
&lt;p&gt;Say, you receive the following image as a design mockup:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Lemonades JPEG image in the foreground&quot; width=&quot;700&quot; height=&quot;338&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/context-1-59c6692.jpeg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;JPEG in the foreground&lt;/p&gt;
&lt;p&gt;One can quickly figure out a context: it is a banner meant to attract user’s attention where the picture of lemonades is the primary visual content that should stay in the foreground. It’s originally a photo taken by a digital camera, so JPEG seems like a perfect fit: we don’t need transparency, and we don’t care too much about sharpness or details. However, we still need to compress it, at about &lt;strong&gt;80%&lt;/strong&gt; to avoid losing quality. We also need progressiveness to improve UX.&lt;/p&gt;
&lt;p&gt;Let’s benchmark different options!&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Benchmark table of different JPEG compression tools at high quality&quot; width=&quot;1140&quot; height=&quot;240&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/benchmark-foreground-jpeg-7cee2e7.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Compressing foreground JPEG with different tools at 80% quality&lt;/p&gt;
&lt;p&gt;However, if a similar image needs to be used as a background, we can safely drop the quality to &lt;strong&gt;25%&lt;/strong&gt;, as the user’s attention will be drawn to the foreground text, not the image.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Lemonades JPEG image in the background&quot; width=&quot;700&quot; height=&quot;300&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/context-2-855625a.jpeg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;JPEG image in the background&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Benchmark table of different JPEG compression tools on low quality&quot; width=&quot;1140&quot; height=&quot;240&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/benchmark-background-jpeg-a2e0d15.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Compressing background JPEG with different tools at 25% quality&lt;/p&gt;
&lt;p&gt;As far as we see, Squoosh and ImageMin have similar great results (because they both use &lt;a href=&quot;https://en.wikipedia.org/wiki/Libjpeg#mozjpeg&quot;&gt;MozJPEG&lt;/a&gt; for compression and ImageMagick for &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantization_(image_processing)&quot;&gt;quantization&lt;/a&gt;). ImageOptim is really useful if you don’t want to add progressiveness to your image, but we see no reason not to do it.&lt;/p&gt;
&lt;p&gt;To summarize, JPEG is fine to be used in:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backgrounds;&lt;/li&gt;
&lt;li&gt;large camera photos: avatars, banners, etc.;&lt;/li&gt;
&lt;li&gt;images when super-precise quality is not our goal.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;png&quot;&gt;PNG&lt;/h3&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Interesting fact: &lt;a href=&quot;https://en.wikipedia.org/wiki/Mark_Adler&quot;&gt;Mark Adler&lt;/a&gt;, data compression specialist and one of the PNG authors and a co-author of gzip, later was the Spirit Cruise Mission Manager for &lt;a href=&quot;https://ru.wikipedia.org/wiki/Mars_Exploration_Rover&quot;&gt;Mars Exploration Rover&lt;/a&gt;! Evil Martians also have nothing to do with that.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;PNG, short for &lt;a href=&quot;https://en.wikipedia.org/wiki/Portable_Network_Graphics&quot;&gt;Portable Network Graphics&lt;/a&gt;, is a lossless format designed in 1996 as a superior, patent-free replacement for GIF (as GIF usage was not free back in the day). The format itself is more flexible than JPEG or GIF and supports considerably more &lt;a href=&quot;http://optipng.sourceforge.net/pngtech/optipng.html&quot;&gt;compression options&lt;/a&gt;, storing images effectively based on the number of colors they use. Its primary advantages over JPEG are the support for transparency and the much higher sharpness, making PNG a perfect choice for displaying computer-generated graphics like charts or schemas. It is also way better than JPEG at handling rasterized text.&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/BtI3d.gif&quot;&gt;PNG also can be interlaced&lt;/a&gt;, making the image loading experience similar to progressive JPEG.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The tradeoff is that PNG files generally weigh more than JPEGs.&lt;/p&gt;
&lt;p&gt;In real-world web development, PNGs are often used when we need to rely on transparency in our design. These vegetables will look good on a background of any color (except red and green, probably). PNG also helps to keep those baby spinach leaves incredibly sharp. Before deploying to production, we would want to compress the image at about 80% quality, let’s see how different tools would fare.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Vegetables PNG with transparency&quot; width=&quot;844&quot; height=&quot;487&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/png-02b71f2.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A PNG image to be compressed&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Benchmark table of different PNG compression tools on high quality&quot; width=&quot;1140&quot; height=&quot;309&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/benchmark-png-3dbc81e.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Compressing PNG with different tools at 80% quality&lt;/p&gt;
&lt;p&gt;We can safely say that interlacing does not improve our UX here, as the image becomes larger (and thus will take longer to load). The clear winner is ImageOptim.&lt;/p&gt;
&lt;p&gt;To summarize, PNG is ideal for:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Images that need to be transparent;&lt;/li&gt;
&lt;li&gt;charts, schemes, highly detailed maps, and details matter;&lt;/li&gt;
&lt;li&gt;images that contain text.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;webp&quot;&gt;WebP&lt;/h3&gt;
&lt;p&gt;The youngest static format that is supported by &lt;a href=&quot;https://caniuse.com/#feat=webp&quot;&gt;most web browsers&lt;/a&gt; today is actually 9 years old: it was created in 2010 &lt;a href=&quot;https://developers.google.com/speed/webp/docs/compression&quot;&gt;at Google&lt;/a&gt;, and perhaps the only reason &lt;em&gt;not&lt;/em&gt; to switch to it right now is the fact that Safari does not support it, and you still have to provide PNG or JPEG fallbacks. It is also hard to come by anywhere &lt;em&gt;outside&lt;/em&gt; of the web.&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;WebP supports both lossless and lossy compression, with lossy using a compression algorithm from Google’s &lt;em&gt;video&lt;/em&gt; codec, &lt;a href=&quot;https://en.wikipedia.org/wiki/VP8&quot;&gt;VP8&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But as you will soon see, the advantages outweigh compatibility problems. A lossless flavor of WebP outperforms PNG by still keeping images sharp and transparent while the lossy version of the format wipes the floor with JPEG and still supports opacity.&lt;/p&gt;
&lt;p&gt;If you want the best of both worlds, it can handle colors in a lossy way, while making sure that the alpha channel is still lossless. It also supports animations, but don’t get too excited over it, as we’ll show later.&lt;/p&gt;
&lt;p&gt;Where WebP really shines is the compression at the lowest possible quality. WebP at quality &lt;strong&gt;0%&lt;/strong&gt; is still perceived much better by your eyes than JPEG at quality &lt;strong&gt;10%&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Comparsion of JPEG and WebP on low quality&quot; width=&quot;857&quot; height=&quot;429&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/jpeg-vs-webp-d9b335a.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;JPEG high compression on quality 10 have block artifacts and costs 128KB, while WebP compression on 0 quality looks smoother and the weight became 107KB&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;80%&lt;/strong&gt; quality, the images are visually indistinguishable, but the WebP wins significantly in size with the same image from above weighing 412 kB versus 717 kB with JPEG.&lt;/p&gt;
&lt;p&gt;You can convert the image to WebP with all the tools we mentioned, except for ImageOptim. For the lossy benchmark we will convert the same first lemonade JPEG image to WebP and look at the numbers:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Benchmark table of transforming JPEG to WebP with different tools&quot; width=&quot;1140&quot; height=&quot;309&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/benchmark-webp-jpeg-2bddad4.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Converting JPEG to WebP&lt;/p&gt;
&lt;p&gt;For the lossless benchmark, the source image will be the a PNG image with green vegetables from the examples above:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Benchmark table of transforming PNG to WebP with different tools&quot; width=&quot;1140&quot; height=&quot;309&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/benchmark-webp-png-9f99eef.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Converting PNG to WebP&lt;/p&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Although WebP looks very promising, there is some &lt;a href=&quot;https://en.wikipedia.org/wiki/WebP#Criticism&quot;&gt;criticism&lt;/a&gt; around it. Our advice: try different formats with suitable encoders, compare the results, and decide if using WebP is worth it for your case.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The numbers speak for themselves with savings due to conversion into WebP, reaching &lt;strong&gt;90%&lt;/strong&gt; of the original file size. However, even with all the WebP’s technical prowess, JPEG and PNG are not leaving the ring anywhere soon as it only works in browsers environments: if you save a WebP image to a disk, you most likely won’t be able to open it with default image viewing software on your system.&lt;/p&gt;
&lt;h2 id=&quot;the-video-hack&quot;&gt;The video hack&lt;/h2&gt;
&lt;p&gt;If all you care about is performance and the browser support is not your primary concern, you can use the power of today’s most efficient video compression algorithms to compress a &lt;em&gt;single frame&lt;/em&gt;, effectively rendering an image on a web page as a tiny looped video file, like that:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;video&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;path_to_your_one_frame_video&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autoplay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;muted&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note &lt;code&gt;muted&lt;/code&gt;, as otherwise some browsers will refuse to show a video without an additional prompt from the user. If you want to try this extravagant approach, we recommend taking a look at the AV1 codec that we described at length in one of our &lt;a href=&quot;https://evilmartians.com/chronicles/better-web-video-with-av1-codec&quot;&gt;previous articles&lt;/a&gt;. Be warned about the &lt;a href=&quot;https://caniuse.com/#feat=av1&quot;&gt;adoption rates&lt;/a&gt;, though.&lt;/p&gt;
&lt;h2 id=&quot;animations-on-the-web&quot;&gt;Animations on the web&lt;/h2&gt;
&lt;p&gt;GIF is perhaps the only commonly used web format today that actually &lt;em&gt;precedes&lt;/em&gt; the World Wide Web itself: it was developed in 1987, long before cat memes became a thing. As it is so ancient, it only supports 256 colors, and its lossless compression is far from state of the art. The reason for its world domination is that the world, frankly, did not have much choice: internet browsers supported GIFs from day one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using GIFs for animations on your webpage in 2019 is an incredibly bad idea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GIF is really poor at &lt;a href=&quot;https://en.wikipedia.org/wiki/Inter_frame&quot;&gt;inter frame compression&lt;/a&gt;, which powers all modern moving image formats. The alternative for GIF would be &lt;a href=&quot;https://en.wikipedia.org/wiki/APNG&quot;&gt;APNG&lt;/a&gt; (an animated flavor of PNG developed in 2008) or animated &lt;a href=&quot;https://en.wikipedia.org/wiki/WebP&quot;&gt;WebP&lt;/a&gt; from 2010. APNG shows &lt;a href=&quot;http://littlesvr.ca/apng/gif_apng_webp.html&quot;&gt;better results both in compression and quality&lt;/a&gt;, while WebP may still look blurry for the human’s perception.&lt;/p&gt;
&lt;p&gt;APNG has &lt;a href=&quot;https://caniuse.com/#search=apng&quot;&gt;decent&lt;/a&gt; browser support (except Microsoft Edge), so this image will probably display:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Salt Bae&quot; width=&quot;240&quot; height=&quot;187&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/apng-e2e0212.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.instagram.com/nusr_et/&quot;&gt;Salt Bae&lt;/a&gt; at his craft&lt;/p&gt;
&lt;p&gt;APNG and WebP, while being technically more advanced, still have the same problem as GIF when it comes to inter frames. Even &lt;a href=&quot;https://giphy.com/&quot;&gt;GIPHY&lt;/a&gt;, your go-to place for animated memes, usually offers an HTML5 video alternative.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are better off publishing your animated content as video files: either MP4 or WebM.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;post__note&quot;&gt;
&lt;p&gt;Check out &lt;a href=&quot;https://evilmartians.com/chronicles/better-web-video-with-av1-codec&quot;&gt;“Better Web Video with AV1 Codec”&lt;/a&gt; by our own Andrey Sitnik.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;HTML5 &lt;code&gt;.mp4&lt;/code&gt; and &lt;code&gt;.webm&lt;/code&gt; video files are actually just containers that store video data compressed by either of a multitude of different codecs like &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Video_Coding&quot;&gt;H.264/AVC&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding&quot;&gt;H.265/HEVC&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/AV1&quot;&gt;AV1&lt;/a&gt;. We will not go into technical or legal details of these codecs as it deserves a separate article.&lt;/p&gt;
&lt;p&gt;Unlike animated “static” formats that store information about &lt;strong&gt;every particular frame&lt;/strong&gt;, “true” video formats store a number of so-called keyframes and the information about &lt;strong&gt;changes&lt;/strong&gt; between them (inter frames)—this allows for an unparalleled compression.&lt;/p&gt;
&lt;p&gt;But enough talk, time to crunch some numbers. We will start with a cheesy GIF source and convert it to WebP, APNG, AV1 as MP4, H.264 as MP4, and WebM to detect a winner. We will use CLI tools &lt;a href=&quot;https://developers.google.com/speed/webp/docs/gif2webp&quot;&gt;gif2webp&lt;/a&gt; and &lt;a href=&quot;http://gif2apng.sourceforge.net/&quot;&gt;gif2apng&lt;/a&gt;, as well as &lt;a href=&quot;https://www.ffmpeg.org/&quot;&gt;ffmpeg&lt;/a&gt;. We will also use &lt;a href=&quot;https://www.gimp.org/&quot;&gt;GIMP&lt;/a&gt; as an alternative way to convert GIF to WebP.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Flowing food GIF&quot; width=&quot;225&quot; height=&quot;148&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/gif-b20851f.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Animated GIF&lt;/p&gt;
&lt;p&gt;And here are the results:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;post-media__object&quot; alt=&quot;Benchmark table of transforming GIF to other animated formats with different tools&quot; width=&quot;1140&quot; height=&quot;452&quot; src=&quot;https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/benchmark-gif-to-others-813152a.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Transforming GIF to other formats&lt;/p&gt;
&lt;p&gt;The size of the GIF is reduced by 90% when using video codecs and by 67% using compressed WebP by GIMP. So if you want to make the web faster (and better), think about always using MP4 as an animated image instead of GIF. See, you don’t have to be a 10x engineer to reduce the size of the assets by 10x!&lt;/p&gt;
&lt;h2 id=&quot;how-to-use-raster-images-in-your-markup&quot;&gt;How to use raster images in your markup?&lt;/h2&gt;
&lt;p&gt;Since Safari does not support WebP, we need to add some additional HTML code to provide a fallback to other formats.&lt;br/&gt;Just use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;&lt;/a&gt; along with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images&quot;&gt;srcset&lt;/a&gt; attribute&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.webp 1x, cupcake@2x.webp 2x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/webp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.jpg 1x, cupcake@2x.jpg 2x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a yummy cupcake&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Art_direction&quot;&gt;media&lt;/a&gt; attribute into the mix to add dynamic conditions based on a browser’s window size:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(max-width: 799px)&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.webp 1x, cupcake@2x.webp 2x&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/webp&quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(min-width: 800px)&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;huge-cupcake.webp 1x, huge-cupcake@2x.webp 2x&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/webp&quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake.jpg 1x, cupcake@2x.jpg 2x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a yummy cupcake&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you want your image to behave like a background just use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&quot;&gt;&lt;code&gt;object-fit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/object-position&quot;&gt;&lt;code&gt;object-position&lt;/code&gt;&lt;/a&gt; styles on the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag inside the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Thank you for reading! We tried to make this journey as fun as engaging for you as possible with abundant &lt;em&gt;patisserie&lt;/em&gt; references, but if you noticed any mistakes or inconsistencies—please &lt;a href=&quot;https://evilmartians.com/#talk-to-us&quot;&gt;let us know&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Now you know that pixels are not created equal, what a &lt;em&gt;CSS pixel&lt;/em&gt; is and how it gets converted into hardware pixels through downscaling (or upscaling). You have learned about the wonders of SVG and whether or not you should prefer it to raster images (short answer: it depends!). Before getting your hands dirty with knobs and sliders of numerous &lt;a href=&quot;https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques#evil-martians-big-image-compression-cookbook&quot;&gt;optimization tools&lt;/a&gt;, you are thinking about your network stack and the visual context of the image in your design.&lt;/p&gt;
&lt;p&gt;Finally, you have all the information necessary to pick between different image formats, and you can compare how all of them perform &lt;a href=&quot;https://www.youtube.com/watch?v=YoDh_gHDvkk&quot;&gt;under pressure&lt;/a&gt;. You are not using WebP just out of &lt;a href=&quot;https://en.wikipedia.org/wiki/Fear_of_missing_out&quot;&gt;FOMO&lt;/a&gt;, but you also don’t clinch to image format dinosaurs (JPEG and GIF), because you are well aware of modern alternatives. And you never, never use GIFs for your animations.&lt;/p&gt;
&lt;p&gt;You can now savor every bite of your sweet, fresh web images 🧁!&lt;/p&gt;
&lt;p&gt;Don’t forget to save our &lt;a href=&quot;https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques#tldr-and-toc&quot;&gt;visual cheat-sheet&lt;/a&gt; for future reference, so it can help you make optimal decisions when it comes to cooking your images for the web!&lt;/p&gt;
</description>
<pubDate>Mon, 07 Oct 2019 14:14:17 +0000</pubDate>
<dc:creator>progapandist</dc:creator>
<og:title>Images done right: Web graphics, good to the last byte — Martian Chronicles</og:title>
<og:description>Start taking graphics on the web seriously and boost your applications' performance by learning the essentials about digital image formats.</og:description>
<og:url>https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques</og:url>
<og:type>article</og:type>
<og:image>https://cdn.evilmartians.com/front/posts/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques/cover-cd6b3fd.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://evilmartians.com/chronicles/images-done-right-web-graphics-good-to-the-last-byte-optimization-techniques</dc:identifier>
</item>
</channel>
</rss>