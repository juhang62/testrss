<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The Cube Rule of Food Identification</title>
<link>http://cuberule.com</link>
<guid isPermaLink="true" >http://cuberule.com</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;http://cuberule.com&quot;&gt;http://cuberule.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18658684&quot;&gt;https://news.ycombinator.com/item?id=18658684&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 234&lt;/p&gt;
&lt;p&gt;# Comments: 133&lt;/p&gt;
</description>
<pubDate>Tue, 11 Dec 2018 20:45:51 +0000</pubDate>
<dc:creator>zdw</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://cuberule.com/</dc:identifier>
</item>
<item>
<title>FreeBSD 12.0 is now available</title>
<link>https://lists.freebsd.org/pipermail/freebsd-announce/2018-December/001856.html</link>
<guid isPermaLink="true" >https://lists.freebsd.org/pipermail/freebsd-announce/2018-December/001856.html</guid>
<description>&lt;head&gt;&lt;title&gt;[FreeBSD-Announce] FreeBSD 12.0-RELEASE Now Available&lt;/title&gt;&lt;link rel=&quot;Index&quot; href=&quot;index.html&quot; /&gt;&lt;link rel=&quot;made&quot; href=&quot;mailto:freebsd-announce%40freebsd.org?Subject=Re%3A%20%5BFreeBSD-Announce%5D%20FreeBSD%2012.0-RELEASE%20Now%20Available&amp;amp;In-Reply-To=%3C20181211184928.F3AEA62A%40freefall.freebsd.org%3E&quot; /&gt;&lt;meta name=&quot;robots&quot; content=&quot;index,nofollow&quot; /&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;link rel=&quot;Previous&quot; href=&quot;001855.html&quot; /&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; id=&quot;readabilityBody&quot; readability=&quot;98.862696211871&quot;&gt;

&lt;p&gt;&lt;strong&gt;Glen Barber&lt;/strong&gt; &lt;a href=&quot;mailto:freebsd-announce%40freebsd.org?Subject=Re%3A%20%5BFreeBSD-Announce%5D%20FreeBSD%2012.0-RELEASE%20Now%20Available&amp;amp;In-Reply-To=%3C20181211184928.F3AEA62A%40freefall.freebsd.org%3E&quot; title=&quot;[FreeBSD-Announce] FreeBSD 12.0-RELEASE Now Available&quot;&gt;gjb at FreeBSD.org&lt;/a&gt;&lt;br /&gt;&lt;em&gt;Tue Dec 11 18:49:29 UTC 2018&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;pre&gt;
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

                       FreeBSD 12.0-RELEASE Announcement

   The FreeBSD Release Engineering Team is pleased to announce the
   availability of FreeBSD 12.0-RELEASE. This is the first release of the
   stable/12 branch.

   Some of the highlights:

     * OpenSSL has been updated to version 1.1.1a (LTS).

     * Unbound has been updated to version 1.8.1, and DANE-TA has been
       enabled by default.

     * OpenSSH has been updated to version 7.8p1.

     * Additonal capsicum(4) support has been added to sshd(8).

     * Clang, LLVM, LLD, LLDB, compiler-rt and libc++ has been updated to
       version 6.0.1.

     * The vt(4) Terminus BSD Console font has been update to version 4.46.

     * The bsdinstall(8) utility now supports UEFI+GELI as an installation
       option.

     * The VIMAGE kernel configuration option has been enabled by default.

     * The NUMA option has been enabled by default in the amd64 GENERIC and
       MINIMAL kernel configurations.

     * The netdump(4) driver has been added, providing a facility through
       which kernel crash dumps can be transmitted to a remote host after a
       system panic.

     * The vt(4) driver has been updated with performance improvements,
       drawing text at rates ranging from 2- to 6-times faster.

     * Various improvements to graphics support for current generation
       hardware.

     * Support for capsicum(4) has been enabled on armv6 and armv7 by
       default.

     * The UFS/FFS filesystem has been updated to consolidate
       TRIM/BIO_DELETE commands, reducing read/write requests due to fewer
       TRIM messages being sent simultaneously.

     * The NFS version 4.1 server has been updated to include pNFS server
       support.

     * The pf(4) packet filter is now usable within a jail(8) using vnet(9).

     * The bhyve(8) utility has been updated to add NVMe device emulation.

     * The bhyve(8) utility is now able to be run withing a jail(8).

     * Various Lua loader(8) improvements.

     * KDE has been updated to version 5.12.5.

     * And more...

   For a complete list of new features and known problems, please see the
   online release notes and errata list, available at:

     * &lt;a href=&quot;https://www.FreeBSD.org/releases/12.0R/relnotes.html&quot;&gt;https://www.FreeBSD.org/releases/12.0R/relnotes.html&lt;/a&gt;

     * &lt;a href=&quot;https://www.FreeBSD.org/releases/12.0R/errata.html&quot;&gt;https://www.FreeBSD.org/releases/12.0R/errata.html&lt;/a&gt;

   For more information about FreeBSD release engineering activities, please
   see:

     * &lt;a href=&quot;https://www.FreeBSD.org/releng/&quot;&gt;https://www.FreeBSD.org/releng/&lt;/a&gt;

Availability

   FreeBSD 12.0-RELEASE is now available for the amd64, i386, powerpc,
   powerpc64, powerpcspe, sparc64, armv6, armv7, and aarch64 architectures.

   FreeBSD 12.0-RELEASE can be installed from bootable ISO images or over
   the network. Some architectures also support installing from a USB memory
   stick. The required files can be downloaded as described in the section
   below.

   SHA512 and SHA256 hashes for the release ISO, memory stick, and SD card
   images are included at the bottom of this message.

   PGP-signed checksums for the release images are also available at:

     * &lt;a href=&quot;https://www.FreeBSD.org/releases/12.0R/signatures.html&quot;&gt;https://www.FreeBSD.org/releases/12.0R/signatures.html&lt;/a&gt;

   A PGP-signed version of this announcement is available at:

     * &lt;a href=&quot;https://www.FreeBSD.org/releases/12.0R/announce.asc&quot;&gt;https://www.FreeBSD.org/releases/12.0R/announce.asc&lt;/a&gt;

   The purpose of the images provided as part of the release are as follows:

   dvd1

           This contains everything necessary to install the base FreeBSD
           operating system, the documentation, debugging distribution sets,
           and a small set of pre-built packages aimed at getting a
           graphical workstation up and running. It also supports booting
           into a &quot;livefs&quot; based rescue mode. This should be all you need if
           you can burn and use DVD-sized media.

           Additionally, this can be written to an USB memory stick (flash
           drive) for the amd64 architecture and used to do an install on
           machines capable of booting off USB drives. It also supports
           booting into a &quot;livefs&quot; based rescue mode.

           As one example of how to use the memstick image, assuming the USB
           drive appears as /dev/da0 on your machine something like this
           should work:

           # dd if=FreeBSD-12.0-RELEASE-amd64-dvd1.iso \
             of=/dev/da0 bs=1m conv=sync

           Be careful to make sure you get the target (of=) correct.

   disc1

           This contains the base FreeBSD operating system. It also supports
           booting into a &quot;livefs&quot; based rescue mode. There are no pre-built
           packages.

           Additionally, this can be written to an USB memory stick (flash
           drive) for the amd64 architecture and used to do an install on
           machines capable of booting off USB drives. It also supports
           booting into a &quot;livefs&quot; based rescue mode. There are no pre-built
           packages.

           As one example of how to use the memstick image, assuming the USB
           drive appears as /dev/da0 on your machine something like this
           should work:

           # dd if=FreeBSD-12.0-RELEASE-amd64-disc1.iso \
             of=/dev/da0 bs=1m conv=sync

           Be careful to make sure you get the target (of=) correct.

   bootonly

           This supports booting a machine using the CDROM drive but does
           not contain the installation distribution sets for installing
           FreeBSD from the CD itself. You would need to perform a network
           based install (e.g., from an HTTP or FTP server) after booting
           from the CD.

           Additionally, this can be written to an USB memory stick (flash
           drive) for the amd64 architecture and used to do an install on
           machines capable of booting off USB drives. It also supports
           booting into a &quot;livefs&quot; based rescue mode. There are no pre-built
           packages.

           As one example of how to use the memstick image, assuming the USB
           drive appears as /dev/da0 on your machine something like this
           should work:

           # dd if=FreeBSD-12.0-RELEASE-amd64-bootonly.iso \
             of=/dev/da0 bs=1m conv=sync

           Be careful to make sure you get the target (of=) correct.

   memstick

           This can be written to an USB memory stick (flash drive) and used
           to do an install on machines capable of booting off USB drives.
           It also supports booting into a &quot;livefs&quot; based rescue mode. There
           are no pre-built packages.

           As one example of how to use the memstick image, assuming the USB
           drive appears as /dev/da0 on your machine something like this
           should work:

           # dd if=FreeBSD-12.0-RELEASE-amd64-memstick.img \
             of=/dev/da0 bs=1m conv=sync

           Be careful to make sure you get the target (of=) correct.

   mini-memstick

           This can be written to an USB memory stick (flash drive) and used
           to boot a machine, but does not contain the installation
           distribution sets on the medium itself, similar to the bootonly
           image. It also supports booting into a &quot;livefs&quot; based rescue
           mode. There are no pre-built packages.

           As one example of how to use the mini-memstick image, assuming
           the USB drive appears as /dev/da0 on your machine something like
           this should work:

           # dd if=FreeBSD-12.0-RELEASE-amd64-mini-memstick.img \
             of=/dev/da0 bs=1m conv=sync

           Be careful to make sure you get the target (of=) correct.

   FreeBSD/arm SD card images

           These can be written to an SD card and used to boot the supported
           arm system. The SD card image contains the full FreeBSD
           installation, and can be installed onto SD cards as small as
           512Mb.

           For convenience for those without console access to the system, a
           freebsd user with a password of freebsd is available by default
           for ssh(1) access. Additionally, the root user password is set to
           root, which it is strongly recommended to change the password for
           both users after gaining access to the system.

           To write the FreeBSD/arm image to an SD card, use the dd(1)
           utility, replacing KERNEL with the appropriate kernel
           configuration name for the system.

           # dd if=FreeBSD-12.0-RELEASE-arm-armv7-KERNEL.img \
             of=/dev/da0 bs=1m conv=sync

           Be careful to make sure you get the target (of=) correct.

   FreeBSD 12.0-RELEASE can also be purchased on CD-ROM or DVD from several
   vendors. One of the vendors that will be offering FreeBSD 12.0-based
   products is:

     * FreeBSD Mall, Inc. &lt;a href=&quot;https://www.freebsdmall.com&quot;&gt;https://www.freebsdmall.com&lt;/a&gt;

   Pre-installed virtual machine images are also available for the amd64
   (x86_64), i386 (x86_32), and AArch64 (arm64) architectures in QCOW2, VHD,
   and VMDK disk image formats, as well as raw (unformatted) images.

   FreeBSD 12.0-RELEASE amd64 is also available on these cloud hosting
   platforms:

     * Amazon(R) EC2(TM):
       AMIs are available in the following regions:

         ap-south-1 region: ami-024f703d85c3b1012
         eu-west-3 region: ami-04243f83cbdff155e
         eu-west-2 region: ami-019ecda9be40c3dc1
         eu-west-1 region: ami-01fe4421da59ecb30
         ap-northeast-2 region: ami-00714e1048e4f0d07
         ap-northeast-1 region: ami-07b604cf5a1d2d2e8
         sa-east-1 region: ami-05dd76ac6637fb42d
         ca-central-1 region: ami-03bb92c67ff9aaf90
         ap-southeast-1 region: ami-09f5032f4642114c0
         ap-southeast-2 region: ami-0e0c8be22c4801d9b
         eu-central-1 region: ami-01b35a0a834759fc1
         us-east-1 region: ami-03b0f822e17669866
         us-east-2 region: ami-0842e35b91bf08aa5
         us-west-1 region: ami-0519471b49bca30b3
         us-west-2 region: ami-04331586c79df8e01

       AMIs are also available in the Amazon(R) Marketplace at:
       &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B07L6QV354/&quot;&gt;https://aws.amazon.com/marketplace/pp/B07L6QV354/&lt;/a&gt;

     * Google(R) Compute Engine(TM):
       Instances can be deployed using the gcloud utility:

           % gcloud compute instances create INSTANCE \
             --image freebsd-12-0-release-amd64 \
             --image-project=freebsd-org-cloud-dev
           % gcloud compute ssh INSTANCE

       Replace INSTANCE with the name of the Google Compute Engine instance.

       FreeBSD 12.0-RELEASE will also available in the
       Google Compute Engine(TM) Marketplace once they have completed
       third-party specific validation at:
       &lt;a href=&quot;https://console.cloud.google.com/launcher/browse?filter=category:os&amp;amp;filter=price:free&quot;&gt;https://console.cloud.google.com/launcher/browse?filter=category:os&amp;amp;filter=price:free&lt;/a&gt;

     * Hashicorp/Atlas(R) Vagrant(TM):
       Instances can be deployed using the vagrant utility:

           % vagrant init freebsd/FreeBSD-12.0-RELEASE
           % vagrant up

Download

   FreeBSD 12.0-RELEASE may be downloaded via https from the following site:

     * &lt;a href=&quot;https://download.freebsd.org/ftp/releases/ISO-IMAGES/12.0/&quot;&gt;https://download.freebsd.org/ftp/releases/ISO-IMAGES/12.0/&lt;/a&gt;

   FreeBSD 12.0-RELEASE virtual machine images may be downloaded from:

     * &lt;a href=&quot;https://download.freebsd.org/ftp/releases/VM-IMAGES/12.0-RELEASE/&quot;&gt;https://download.freebsd.org/ftp/releases/VM-IMAGES/12.0-RELEASE/&lt;/a&gt;

   For instructions on installing FreeBSD or updating an existing machine to
   12.0-RELEASE please see:

     * &lt;a href=&quot;https://www.FreeBSD.org/releases/12.0R/installation.html&quot;&gt;https://www.FreeBSD.org/releases/12.0R/installation.html&lt;/a&gt;

Support

   Based on discussion surrounding reviewing the FreeBSD support model, the
   FreeBSD 12 release series will be supported until at least June 30, 2020.
   For more information, please see the official announcement regarding
   upcoming discussion on the support model.

     * &lt;a href=&quot;https://www.FreeBSD.org/security/&quot;&gt;https://www.FreeBSD.org/security/&lt;/a&gt;

Acknowledgments

   Many companies donated equipment, network access, or man-hours to support
   the release engineering activities for FreeBSD 12.0 including The
   FreeBSD Foundation, Yahoo!, NetApp, Internet Systems Consortium, ByteMark
   Hosting, Sentex Communications, New York Internet, Juniper Networks,
   NLNet Labs, iXsystems, CyberOne Data, and National Chiao Tung University.

   The release engineering team for 12.0-RELEASE includes:

   Glen Barber &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;gjb at FreeBSD.org&lt;/a&gt;&amp;gt;          Release Engineering Lead,
                                          12.0-RELEASE Release Engineer
   Konstantin Belousov &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;kib at FreeBSD.org&lt;/a&gt;&amp;gt;  Release Engineering
   Antoine Brodin &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;antoine at FreeBSD.org&lt;/a&gt;&amp;gt;   Package Building
   Bryan Drewery &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;bdrewery at FreeBSD.org&lt;/a&gt;&amp;gt;   Release Engineering, Package
                                          Building
   Marc Fonvieille &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;blackend at FreeBSD.org&lt;/a&gt;&amp;gt; Release Engineering, Documentation
   Rodney Grimes &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;rgrimes at FreeBSD.org&lt;/a&gt;&amp;gt;    Release Engineering
   Xin Li &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;delphij at FreeBSD.org&lt;/a&gt;&amp;gt;           Release Engineering
   Remko Lodder &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;remko at FreeBSD.org&lt;/a&gt;&amp;gt;       Security Officer Deputy, Security
                                          Team Liaison
   Ed Maste &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;emaste at FreeBSD.org&lt;/a&gt;&amp;gt;          Security Officer Deputy
   Hiroki Sato &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;hrs at FreeBSD.org&lt;/a&gt;&amp;gt;          Release Engineering, Documentation
   Gleb Smirnoff &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;glebius at FreeBSD.org&lt;/a&gt;&amp;gt;    Release Engineering
   Marius Strobl &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;marius at FreeBSD.org&lt;/a&gt;&amp;gt;     Release Engineering Deputy Lead
   Gordon Tetlow &amp;lt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;gordon at FreeBSD.org&lt;/a&gt;&amp;gt;     Security Officer

Trademark

   FreeBSD is a registered trademark of The FreeBSD Foundation.

ISO Image Checksums

  amd64 (x86_64):

   SHA512 (FreeBSD-12.0-RELEASE-amd64-bootonly.iso) = b2a39f0a965a08a4fedf122cb898667c62db80cfe674dc22c062e0c2bad59431fe6fe9730853afdaaefd21e64053c0dfcec5eb81cb56e72d7e5207ed6b8352bd
   SHA512 (FreeBSD-12.0-RELEASE-amd64-bootonly.iso.xz) = a222503d3f0094dc2292d52edf1f4df316f20ab76beca298bef6136e3f031d15fb7cbd3fe5792ed3f3a90adf56e1f2ba491c4778c717cc440ab7e580ad87537e
   SHA512 (FreeBSD-12.0-RELEASE-amd64-disc1.iso) = f070a18b76f525ad4ec2798c3b8fc301672202835bad99129a253f034218ac54c3d09048c2be2b4de111a2f301b2ebd60c128ae0577a6f162489ed21b7379792
   SHA512 (FreeBSD-12.0-RELEASE-amd64-disc1.iso.xz) = 5bc6a17b5c86f3e94b60cffd74d75c5973feb03d0c882db5eb11b3ed1dd919c45cfec0f6de9d1b7134c1ccb4ac4485af468a215c4e3daf71b5b88af1ea2ac864
   SHA512 (FreeBSD-12.0-RELEASE-amd64-dvd1.iso) = 9f5530868b7cbdfc08aeba511d976e6c31b73577a873b405cf45971c28c5038e5db2aba93d0da1aa45606905255323ec4d2d11d3edaa12374c2763c85c561483
   SHA512 (FreeBSD-12.0-RELEASE-amd64-dvd1.iso.xz) = ff7c0650969a31721841a6aa6afea9a7a53529383187b18d50178c930f7106fef94c6126d1ef6a846b5c3f91d775c6c54f50329645273eafb5bd1b12da590cb2
   SHA512 (FreeBSD-12.0-RELEASE-amd64-memstick.img) = 87b29c56828eb847371563b44ed84adcb0a060c710fd928d96798f2fceb60f13a52232b7bce6540b586fa4ee0c4af8de0110075d994d17b3dc57fb363f4b74d1
   SHA512 (FreeBSD-12.0-RELEASE-amd64-memstick.img.xz) = d630649a6e36132b34e3b1f97bf6a154a6dfe106bd13346ee0153b8804e48bf48aa55c65f50ca718e74f88fc56549db3ca07f8b7fe17bf4169b1e7da49ef0bdd
   SHA512 (FreeBSD-12.0-RELEASE-amd64-mini-memstick.img) = 39a01d41b79bfb8a1be7f7309581ef9a61c79bd28947014a7b318929fdd315015882ce7d21d27a4322e4a67e83d9931b71c70be15eb393d82642bf883dfc2c46
   SHA512 (FreeBSD-12.0-RELEASE-amd64-mini-memstick.img.xz) = fc23600d93a3ced2810146bee075d4bd158081db504d41e8fec83af59803400d0f38dd71e51b6f673edee9aa950167fe112a9acde37f64da7ae4d0517a0bd530


   SHA256 (FreeBSD-12.0-RELEASE-amd64-bootonly.iso) = 5964301f5b9c7f9cb7dab297452ce9583848cf200f2b582470b6d7c971c15ce7
   SHA256 (FreeBSD-12.0-RELEASE-amd64-bootonly.iso.xz) = 82c7e587016fba29391b6870d07e2c144e0ebf26e0f3008bf7683e6dd403526c
   SHA256 (FreeBSD-12.0-RELEASE-amd64-disc1.iso) = 63abec8aeb915f1a021dd2df6c7767251f9b6e87f403b7ddf9a423446d0a5453
   SHA256 (FreeBSD-12.0-RELEASE-amd64-disc1.iso.xz) = 1d40015bea89d05b8bd13e2ed80c40b522a9ec1abd8e7c8b80954fb485fb99db
   SHA256 (FreeBSD-12.0-RELEASE-amd64-dvd1.iso) = 5e47941e5e4c34c5ff1f4f33309a3633c9d0a0a9c1ef6857daf520482e167d55
   SHA256 (FreeBSD-12.0-RELEASE-amd64-dvd1.iso.xz) = c943ca3806aa6d7bd9fb16a477bfdac4a1d04dfd536e64310b64a04b177919a3
   SHA256 (FreeBSD-12.0-RELEASE-amd64-memstick.img) = d3a621df18c0a6262e1985c7229054519799194f8295a777297d7dd79e1eafbe
   SHA256 (FreeBSD-12.0-RELEASE-amd64-memstick.img.xz) = 830d1ab5aa18e3d55f26fbc1f804a422509229f60ca1f90f8098139acbe7f353
   SHA256 (FreeBSD-12.0-RELEASE-amd64-mini-memstick.img) = 7ee8277fa3e0cf64e3038445fd507b58bfd615b61fec4ff446085f1703000347
   SHA256 (FreeBSD-12.0-RELEASE-amd64-mini-memstick.img.xz) = 8ad8396c9c31ba26bfc4f572ff11d9753232ceb335154431d08a5ab8542f7ff2


  i386 (x86):

   SHA512 (FreeBSD-12.0-RELEASE-i386-bootonly.iso) = 3f830fd32a25bbcf14f8a4e1598c74466bb16016bbf86f79beba8aa568f0d6dfe438da1288d1bd0a7fd4a49419f4a81ba7ae2f8163c718a872724cafa97e2377
   SHA512 (FreeBSD-12.0-RELEASE-i386-bootonly.iso.xz) = 87a5761d7e989bdb52eadef37c2b93d35934181f5a77d2f2905c25f516252a4cd8293d2e5be01db8714be793c5eb2fe6095a9f3809a2199dc066a7a4e408d28b
   SHA512 (FreeBSD-12.0-RELEASE-i386-disc1.iso) = b2c339fe25c327f62eda6c9a846fd44ba9075288384db6033e8761bbb24ea90e2191cdeaa63e8640cbf839bb852afc43fc86f69436bab355513779e642080d0c
   SHA512 (FreeBSD-12.0-RELEASE-i386-disc1.iso.xz) = 8f27e9674cbee2945e55227cc54d2981a18e97c70e7ba134285ad8fa8f3f26521b2c9ec231312bcb97ba6df49b7f1392f3bab806c43f2c2974e2a7b38525e925
   SHA512 (FreeBSD-12.0-RELEASE-i386-dvd1.iso) = ccecb7c33dc7c3e7fb2fd3333a8b7c6bf63b9dbabbe28ecd47143a4152ebe6c58ec0267a99803e3675bceaaf8a62861ae6508e4fcbf6561065f1ca7e33c031f7
   SHA512 (FreeBSD-12.0-RELEASE-i386-dvd1.iso.xz) = bb0c480ea9887e2c869fb241116f86178919a1765daad0ee3c89432a4563cd55f254044cd20d3b5e5ed6c722ad98d06fdca214e15d1377ad605ccd1345548c4c
   SHA512 (FreeBSD-12.0-RELEASE-i386-memstick.img) = 880f52600db8e737673bab61185b8e2b4952143903f353f0348b20a4b8aec3f47bcbd743139b1afb1e331d05bf56fad651944134d299e2800cb02f6775089df0
   SHA512 (FreeBSD-12.0-RELEASE-i386-memstick.img.xz) = 3d0813a13f5069ce3986ef7f3dfe4fc3ee5e2884ad1226b0a4ba39ecee652701593d5e5882ce1af403043e65bdb6c796ffa89c7422f8de961f9d39edee26bb9d
   SHA512 (FreeBSD-12.0-RELEASE-i386-mini-memstick.img) = 9c88ef5045939690c2c507d223ab01afa0500604a0380325dc6a627a1113f47412946c95176a72d8ace70306a97cbc2d680cb8f5987b25d980a696524b49acc3
   SHA512 (FreeBSD-12.0-RELEASE-i386-mini-memstick.img.xz) = 63df47030e2d6d7f710f65d65d6438bbeb0566d0f2d7f38f2edf327ad315cca108f98eebdabbb9d6edec480a0094bb1f48bf95b33417c4cf599e2542d7c516bd


   SHA256 (FreeBSD-12.0-RELEASE-i386-bootonly.iso) = 40d76a964c6f4e53e604abb85f02ee35d3caa200ed6e270f5deaea1ca149d5d6
   SHA256 (FreeBSD-12.0-RELEASE-i386-bootonly.iso.xz) = 67cc28e21989696f5f23f5d2f982106b3597c0910cf4a79b27eeb509be334353
   SHA256 (FreeBSD-12.0-RELEASE-i386-disc1.iso) = c2a2a18e9e803e1849533c5c7640f1eec058ef1426fb8fa62769d2fcbd58d485
   SHA256 (FreeBSD-12.0-RELEASE-i386-disc1.iso.xz) = 35634a351284f337a63ed6d87620165b65eee00af04fa0e774219b78d78de9e2
   SHA256 (FreeBSD-12.0-RELEASE-i386-dvd1.iso) = b6d1ac91134a0b1636c65943e0964cb85c737ff77b41690a7161200486679737
   SHA256 (FreeBSD-12.0-RELEASE-i386-dvd1.iso.xz) = 0207efa27673416ab0b0fbc16069bd1640a182b73f7ae77d2f85ac511f5711bb
   SHA256 (FreeBSD-12.0-RELEASE-i386-memstick.img) = bae64d54dd62352ff5f3c8025ac4e7ad7b5d02436aa2628b78c273153ea9aec5
   SHA256 (FreeBSD-12.0-RELEASE-i386-memstick.img.xz) = 3dfbd160255f5ba5a788b298c1b854f9cc28fdcda77fe24c0cd0d027e4ad7566
   SHA256 (FreeBSD-12.0-RELEASE-i386-mini-memstick.img) = 61819259db48655bc0dde11c0d13b9405ad33b4bddf64e6559dc7fabfdb68444
   SHA256 (FreeBSD-12.0-RELEASE-i386-mini-memstick.img.xz) = 83cd2d3aa603c7a8d66c1da8a1410c004e63470bb65e39b10e5205bdd8d519ee


  powerpc:

   SHA512 (FreeBSD-12.0-RELEASE-powerpc-bootonly.iso) = b12b4ea409ab0b70ca99ec6a8002b52aee583a11172ea49950aec489bb5cdf73a122e1b7f685b1d7a03abb9714ff55870b09bda625f5d9cfd17bffe786f97326
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-bootonly.iso.xz) = 8c4fbc3465807e10666c9b09a691f5483e889dae17fe2585b8f9a98af516c6f4014455fd74ed853739bc578a53419b7532786c3c6aec1016408a46eb26992148
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-disc1.iso) = 405fda7832dfc7ee0018939392d231ffed365a1b7929a13c101c11d9b863f5248f96f20100c860112c0ec70951e23241da2b9bac6f4fbc59e4b6b8cbabe9a9af
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-disc1.iso.xz) = d0c8028a1e4917352da67611a13bf4b68edaffbc1a7b912776f58481d69820d480d2339c259ab073d486ae19b91e412f2f961be481d4c565e42731daebb27791
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-dvd1.iso) = 47c0424888b7ae9c9c44667798398df78ba6b7097f4a9ea82bc0ebf922c6a885a11a6ec6fc88b89ce99e340e19866f62372b25b3ad186f2a77725bc31d12e0ea
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-dvd1.iso.xz) = 1e549567dd744edb60b91dfa9d87ece9f3039d8e2dfd51a9e2a0c0b072dbd8085ef6a678caab456df8fc6066f66e500cbf68c7b46cd28810110d0aca12dffe88
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-memstick.img) = 4b18259a1f415b32bfed82c652b6cff916caa04f79b6c0d4c647d20180b3646ead55afaa00f717a9c61e7d21eb83e0725d4c96944122be78992ec0085b6926f8
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-memstick.img.xz) = 25e3a6ddc3a901a3abd0dae4c00086ea0b20ff53e5547e3b3035b43f0f90fc3d588fea2b66b482e0d41c832c422d82e8a1d416bbfed910d3fd0c86b6d3546443
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-mini-memstick.img) = 9b65f8aa5d90c1cddee94940526aa172325cf671b95c562771be8113a402685d3bb181abe397033924fc93eeb85991a161065f585ef840c83ad0536dddb62d50
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-mini-memstick.img.xz) = c2639cf82d2599de4f29ae3995f995c5e89743b0b1d12f37f08fa2ad27591ec5e0aefbbb855718064c8093ad9c984c79c5c61adda83d86a330c19015e485928c


   SHA256 (FreeBSD-12.0-RELEASE-powerpc-bootonly.iso) = 121a58244053c908b9fd47f8b6595d5045b7e9560eda9fcfb59ee2eb6c3e4e46
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-bootonly.iso.xz) = 98992ca3845a32b4d80d13c5e43df7a3bacc6fbc2ee8287d709da285ab60c77a
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-disc1.iso) = 7c95d376b65996ab506e6af6d0b57fd74d184d0bfc11f9cb5ccc3253425069ee
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-disc1.iso.xz) = 8db1495723f99e773477b729e3c12c04b11c256598a0d9c5fe0461c0579b12ba
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-dvd1.iso) = c63bc41ef46ab3ae2b620048ee0a0bb6ea46eae9f2947f012cc39b8305351cb2
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-dvd1.iso.xz) = 41902925ea0ad09597bb1857daabd0bf69a77d8c6b332b881549fe2078d2c6da
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-memstick.img) = 06c2b11ef5a965f9c7818f0135a5778b0f5d834188a28040c344a7e52ce2d77d
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-memstick.img.xz) = 043ef1c4a72527d25a77ef8004e9a5b84d933b40d335bc2ce5b0c4148947dcf5
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-mini-memstick.img) = 8b17e26860a47bfa39dfa9b62836d83d1b3904b6091b3d9f4e86b3fda935cab3
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-mini-memstick.img.xz) = ec0de81770f2fe6cfa2faeadf2cc156fc7d6a6c68ec67790c325fa26e59a5413


  powerpc64:

   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-bootonly.iso) = 3e92f09d2c63cdfee5ea2e9e61799dd00d1266a457ba1e962fbc1fcecd85fd31b3e2319a385fa769c8d643de898d6f80e5108129e80afa3a2f050d7101adb60a
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-bootonly.iso.xz) = d8ee66d52b1a9fef0c9b589a5b4c84986755062c772722bd9abf5e9b14fc9533496649631ff602a0062d0238b6c6ccb980afb033630812f3209d4b497db10c59
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-disc1.iso) = e6cf20eedae4721dd3635e79f7476953372936ee96b258543501a96b1fd7977fc8243bfbf4d5e373db8c2c864ef0f3c479f50b0b0888956cb1ba75b69af60968
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-disc1.iso.xz) = 032c85b2d842798c59b4b6ed7fe92477c57ef5750b1222c9d50106f5773d690f75f6db8715b2becbb4cc0fc3b70b8a7a38b0edced2724f9cac14e88ac915dce5
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-dvd1.iso) = 00a43cd5cb59109b5679cf3416aa46fc950bfb8e41a1206d0d5128484345e47ca05c28ce73658c737e43d86f8c311b5e68c0f4ef716132e93bd0426d5bbd9097
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-dvd1.iso.xz) = 6d67f652c86c95fa092318b0bdbb653cb089f7debd25355c4c07a91ab12839c67fef57e5788544e9ca1518e223c63da15b369890dedf13875c1a7a8cf02552a6
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-memstick.img) = 7c42b879de3bb6c83644d464ce2fd7d043ca7f572c8b928c034148ac2374d1b152eb360be98e7194e3276d1a9d24f3bd2d932376eac68fd9bbedd7f43de87f11
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-memstick.img.xz) = a64cfbe6607e8d3a2a20258797fe60ab144194ce5ae6e64f49c47e8ebaaeede57042ba1da0f190245528a4915ae33880531dbf584cd0e56503396224438c038f
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-mini-memstick.img) = b9164d201c71503857f71179c80b91ef50069b3fd5efad654d6590c79dab462ced1e09ad76c382363f91dce0a7404e06f88c6724e3f4751e0cce4a896011bcf7
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-mini-memstick.img.xz) = 24113bcb06222011643f0aea087fda482095a8b74997cedc03d06d59191a886978985924f5bdf9f7eb82d368882e432960b4bcb4f9990fb127ab32b8f54e4e6a


   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-bootonly.iso) = affe81638477a05d33a9511c3170bf33619b180b3a794cdde4161b3989e4d615
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-bootonly.iso.xz) = 6a35605035b0f107e4c9e6e95e48417b7c65aea9c4d0bb48d49aa943782863b2
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-disc1.iso) = ce7e8e5ff0ab76dd43beb708806cce2075a28f5722b596c9187f825a1e84a987
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-disc1.iso.xz) = 92b9574886bb524614a4cad9b84209fd093aebfe8e9bd0b98f48d37ed7eb7e18
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-dvd1.iso) = 512b8ec7a426f2f76e5a39750858f5e8c4e59d13244fa8571c30df43851972ce
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-dvd1.iso.xz) = 058353d5661736830e6e3ea2c8a5b3d78e48d26477bacfccd59ca0aa67ea2d94
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-memstick.img) = a330f750eb6aacb2dd317670be37931bdb2109c58534aff411a1ea1b51f5aa52
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-memstick.img.xz) = 29b67efc7a9c682d3a0c852396d2ec56d8b889035f2aa7df01a89a0f9d29ed58
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-mini-memstick.img) = 8c4f17a8ce80596a47bd61376387d8db7616bc2f2a1e1c5dd8d576247e2e074c
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpc64-mini-memstick.img.xz) = af2d8e002468afd7cc13566e30a25dca0221a306515228802dc35b8ed1515cbf


  powerpcspe:

   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-bootonly.iso) = acba7b9e1ec20ac69c9e4ac821a031e7e5368445dd3e19041c4c69ce7d1eb4268e8d928e3b4d57bca1d8b609e3bc73339d9337269e9c3f5717b2f1b1c9e556ed
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-bootonly.iso.xz) = a22f41d73b0597986ff8683f9d4bae1d869c807d759a1d6806dff981bfdabc2cc998a3ac2400d2e993302e0bd56905e3c46021df75705b11b68aca65a86895d7
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-disc1.iso) = 8b13cb63a11a8f38c14190f2bbf702324c004226bc5731c222ef5c5fcd8ea77327bd3a7abc6fd20ea759606b99e5a668e1e92f925057ff5eb245a60d7cf0e85d
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-disc1.iso.xz) = 433d509b525498d3ddd61e3986a04036a2bf8a1edc9372c7defd6a9a553fee20a57bb45f83d892d5831ddeead97045f9077abe02d0b3eaf483c38be5e38f5926
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-dvd1.iso) = 7f6ec525f547a01af572f0385ad8e0687db7b4dbe59899526f848a6bf179d4aef79ad0596718955cdf672fd319546ac3ae77f0889d17dd930d68d5ce8e2a8b03
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-dvd1.iso.xz) = abbd31e329c3848dfe3fc698577bd1d9cee62f730d7667215929512008d5c0e12c359e4f19086d344c934ed9207b9709b5312caed1e3927f251c916878ad1779
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-memstick.img) = 42493b05292a210e4936ffd35ac8d0fad9118ad335271cb59fd21f1e5158335c660298a53d6b0e68d2a0ed90f3006168958f83f567140fc0ef200077689e5173
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-memstick.img.xz) = d0d46e66123817858c2b390b60ef9b3c22253ecd901ff7c7974a8ea4583552270a6c62dde8026bc17156f60935ecc12be080389ebb9057180532e597518cc362
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-mini-memstick.img) = 74ecd9c4e170786f2d008d7577bed4f208e57a3ffab7006180b709acce068d479771fea893b7785dfae867f293035f4be2d279ea83e14388201a1affa7c6817f
   SHA512 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-mini-memstick.img.xz) = e27ffbe73016cb313815c39b8d4789e250f125c12e20e50e683e66918d5c041a371cdf6f36e5ceed445aa6c11509893ab34403d91b1395b194027f9e2f5b25d6


   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-bootonly.iso) = 066ab01f0c29759753f2f7beb7cc3076e9c5fc4583cd1318ddd0c18b17ab666c
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-bootonly.iso.xz) = cc95cc7ed3f9b4ea008adbffed1175c1a57a5203a359eac0331d007907d968b4
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-disc1.iso) = 31c6d49979f6ed9fc936602d022e4d453ec048a40965131c15cd686a4c2e959f
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-disc1.iso.xz) = e12725500f686645c73aff4d640fdacc68bc01ecdb024dfb3974ad3952b3379c
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-dvd1.iso) = 1d4cfc6ed757e7b03881554b68d3eb348230373f17486851c19bc76ecb1f2208
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-dvd1.iso.xz) = 9eac8015371b069417ae5e63229f0d3fabd75a797d54ca62d898fd21db434a71
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-memstick.img) = f89e8a934f09ef26bdf0db8581105e2b0fd694289c3732657d166465aedbad5a
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-memstick.img.xz) = 4f4ef16e2868422800ca64d8480dfe757da3cf22bbc8d88d3d5f13cc9202e075
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-mini-memstick.img) = 8e75e4648c4769204bd82ca87593a7e1f523935e9250bd8964360d9718a1f9a8
   SHA256 (FreeBSD-12.0-RELEASE-powerpc-powerpcspe-mini-memstick.img.xz) = acb00b13a2aa6a1da56cfb55512d976a1d0e0965f2b4b5b8e97aac79ea3acca2


  sparc64:

   SHA512 (FreeBSD-12.0-RELEASE-sparc64-bootonly.iso) = cd636e94efde60c51336a41727db011c18d001173292705edeeca8a2a49a95a25a9b23093b0f9881e8899df06f80518cb23250366a115c77c9e9ed621de072d4
   SHA512 (FreeBSD-12.0-RELEASE-sparc64-bootonly.iso.xz) = 9e31976ba2a9993e409f104d7b04407668bab965c55e5d396e1d5e886bb122a1886b21e6bea77841449f326f5cdf5c2efbd9768f45c305e693335053eacc8510
   SHA512 (FreeBSD-12.0-RELEASE-sparc64-disc1.iso) = 8642f856abbf753e276137e54fec43cbd3690612194b7aa0aa9991f337a772bd491fe3102aa10acbf183238d085b8e5ed2585a469fbcad793a48907c80fa946d
   SHA512 (FreeBSD-12.0-RELEASE-sparc64-disc1.iso.xz) = 26346fc4550f12cbd4fa8a037472cca8d5b5175d27f8cd14a5e0fc6e5e9297232be08d4f3049d91fd4ca1a5ce70576b8066b007c90962f1abbe4d35ea63ff099
   SHA512 (FreeBSD-12.0-RELEASE-sparc64-dvd1.iso) = d2856cd36f396b7bf3547ade4ef87508dab2d141fe09cb759b194eb36c713c531f349874636dbba0c6af897e4f25b8b215f28efb38368a7bc262763f0d778e3b
   SHA512 (FreeBSD-12.0-RELEASE-sparc64-dvd1.iso.xz) = 1ce49d92a4d15c48a9bc073cd2f5bfcbd375c990b4a57100cfd6653334fd75fe969f2c7048059b21b30e590fd3511f5276fbfbb8c7d6dd002c192314ec518593


   SHA256 (FreeBSD-12.0-RELEASE-sparc64-bootonly.iso) = 5093e75b0f761fe9838397ae1b85ed8456ca196db23a141a7597d53d2bd1a41c
   SHA256 (FreeBSD-12.0-RELEASE-sparc64-bootonly.iso.xz) = deb9729747a8254e9199a2121f6e1b6c33ff164bb0be8fd73943684e2c5fdfe5
   SHA256 (FreeBSD-12.0-RELEASE-sparc64-disc1.iso) = 5511b61ae25fec78c4c16eaddcaa40796017674c0978000fc309bf882e3a5b41
   SHA256 (FreeBSD-12.0-RELEASE-sparc64-disc1.iso.xz) = 276e6b079aadccbca109b61221f14d0d290386f037885de96bbb478585e804bd
   SHA256 (FreeBSD-12.0-RELEASE-sparc64-dvd1.iso) = 3fc20f87455db25e24d04185291e675af94d0696b5ba524b6919bc3f9620d527
   SHA256 (FreeBSD-12.0-RELEASE-sparc64-dvd1.iso.xz) = 02061f1cdaeb0fcdfbec9e8d4bb3f2889684cd04638f4af31fdd500e17e3e70e


  aarch64 GENERIC:

   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-memstick.img) = 6383121ba224de5ed3d3ea0df489767fe6093e075a559212e8e871a8d4b8898143c2d5871956096708381e91a4502ea397e4f29af2b0d0e1cbf21e77d90d3605
   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-memstick.img.xz) = d3416b0eb6db3480163753299458f4a872668ad0e0af55cb46d6698e0ce0a568334241b4835fabb35f1c68e6dc5869495077598c9183e480dba554ff5d009f2c
   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-mini-memstick.img) = e978e4a7225430d47e91460fc89df580a0d0e4e647c50efe8055d2546c6cf132428fe4009705dec04358f6532b352987819d508e90ae7e2ecaa90251f9c9601c
   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-mini-memstick.img.xz) = a046ed7bd7affd3a19b8526ed059fcc626f772bd02b8281252782ee61e359967708973acb0866ba0815b8156b1720482d71e6092375e38d5867635d7665f41b1


   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-memstick.img) = 20cad2d4ac2b2fa35899b59895ecfe0591eb61fd0a2cb43766cf360bde883fb5
   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-memstick.img.xz) = 5cffe96dec4206375c161bb72d6726594abac80d92b244d52520018757ba3731
   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-mini-memstick.img) = a93975e639f1b7ef5ec97431d16d100aeff6ecd269a72fa284380caf61991baa
   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-mini-memstick.img.xz) = ea10e36846a5399693e1aa9402f05233963ea99d571b1cd6acc9f4f26a8d53a4


  aarch64 PINE64:

   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-PINE64.img.xz) = 1540c5e0c428859992983e62785db2e49014b3a7e8f47a6f82651df4e9080f20106e5b5dade00a3876dc3f6a44436285ed54fffbd7cd5de3410e11905cf2adbb


   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-PINE64.img.xz) = 6ffd4e68de73d44c4f921e00dcdc66a05b554eabcfeda9a90cdd19e03f124e49


  aarch64 PINE64-LTS:

   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-PINE64-LTS.img.xz) = 1d1a237c6f83fc69440d5cb286a17cdfe3703c19b094abe6605b5a36cb4f86d1cbe384b839c8be8416e16abc9a931b7ee33c0c2ecf45168b2b842e6c9c184aa3


   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-PINE64-LTS.img.xz) = 38b5025ebaacfc8095d5bfc6b2dd0892f526d7fefdf1fc2ed59cac8c1a49d7ba


  aarch64 RPI3:

   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64-RPI3.img.xz) = 1e91ddc917f7ed2fe65be1b404a59e12e9f1793ec3b17315332925195973ddaecbb5340096ffa8f22b1a165fb92f1fbb98bffe305ca1b5648a62187b56718548


   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64-RPI3.img.xz) = 647af0d7350a94a71f0272749938db3a65cc16f3e5e7c9f86dee7c38cbc09e41


  armv6 RPI-B:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv6-RPI-B.img.xz) = b8e8807d8535b775996a1a6abb97392bf27d135ea779a67b83666eaf768d8d86dbe01bd47e344571bde4f5171e49f06a9c3bcbd5b8ce855bdb4a4874d0f4dd0c


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv6-RPI-B.img.xz) = 62015e596148afbf41c79e26ccf0aa03fced739f52f29da2e0daa53dd9b1e06f


  armv7 BANANAPI:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-BANANAPI.img.xz) = 16c02fbb5cca200545541dcc8fc489d1b5c0a97d088d561a3b5f23d9ccf3af927bbb629a0370f0d46f7d2b526237356f5ea9aabe62bd27e2b1fa6cc83078ab58


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-BANANAPI.img.xz) = cbae306000d780b83962ed80168fc10fb06934669f60e0b0593797af053e04e1


  armv7 BEAGLEBONE:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-BEAGLEBONE.img.xz) = 28606491d85f17c4714ee5364b1ca92e2ccc88202f52f53b8a228c785d79621eaf95ada9025dba15152ce2697fa134cf4a88eb98dc878a120881d7af9ee800eb


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-BEAGLEBONE.img.xz) = 85c9cb1664ba97462c52983cd716336bbee1baccb9762690bb5a91ebddefb0f1


  armv7 CUBIEBOARD:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-CUBIEBOARD.img.xz) = 74eb9e58a3154178ad92b37a135336dc64dbe25138b11e38c07a2c033df337eb366e27e7c86c0c2146c45644df150405a79fd4972610e6cf7ad0bdf14967ff77


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-CUBIEBOARD.img.xz) = 3292529893858544aca72779e42b826f115ac79f1c3d7e03c6175fa942af7b5f


  armv7 CUBIEBOARD2:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-CUBIEBOARD2.img.xz) = bffdd0c942058b33c65ebc50a39755f6064d8a90e742e5a49a2c2e83d3f98db986bb31c7f5d3ffaf81fff5b49cb0024db85cc0b64412b6e0f4b240e556507c57


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-CUBIEBOARD2.img.xz) = 429b595339c042e148bd26cb6df134af2598b266b044245e72012fc6b3591c92


  armv7 CUBOX-HUMMINGBOARD:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-CUBOX-HUMMINGBOARD.img.xz) = 4b26eb1c761a0446fcdd8584ae08b62c8cf1f3f023c8cb6cc93803e116511ac2b869366ff2067da991a1694d2d62d36c95a2b40e3005b26fc64921ed73d556b8


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-CUBOX-HUMMINGBOARD.img.xz) = 8b64e8a8d1cb13e854da4b553b0f582ee4e8813493e480fd68c9438c3ec3d3f3


  armv7 GENERICSD:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-GENERICSD.img.xz) = bfdca8bba4e78dc12774719d1bd25de7ebc8f45ec5f3f55c58c8ab83065e2f5c441608736b346aa31b7719c8402b965f92f1bcc55a1128a833c82fac19fe673c


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-GENERICSD.img.xz) = 032265f4168fe086b62757493f0f7ce1fb0a638743cca52602e2a5f202ca15d0


  armv7 RPI2:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-RPI2.img.xz) = 52a82585b206ca2c6bd5874462532ddda7c0cbc22ae97b2d9adc3434f90bc98b28ce4d7d9a397d26eb9d4d9175f00f7bb93ed36fbb9bd19391d95fcb63e527c9


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-RPI2.img.xz) = 3b6aa0ee7dc9109e07e7c4cec5b3f9c555d2a7ca5d1b67025c0bd17b3bbe3bd0


  armv7 PANDABOARD:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-PANDABOARD.img.xz) = 677057c74088cb0297b23e6e52b2b058a84018d0272a2d0739344765c7f382171407d951b664446d118cd20f43546ff907cf90e47c9b7e7818153a4fbb9b6c1f


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-PANDABOARD.img.xz) = e28241e87d249ac7d6b84552a379e8f299402fd9b7ffc25b026593776a28af9e


  armv7 WANDBOARD:

   SHA512 (FreeBSD-12.0-RELEASE-arm-armv7-WANDBOARD.img.xz) = 660aafb43c665e27d5647bf2e9795357fe0759eabddadf81d9b4d02f122e5f82be3d2f46c18f18af7b8af482a3efe0333b65c5a4f511849e22fb43925e48a48f


   SHA256 (FreeBSD-12.0-RELEASE-arm-armv7-WANDBOARD.img.xz) = fa71804e656f665bcd4a1413b2abfa4e190d1e8b3886d6bc229f0dc5e7a2b949


Virtual Machine Disk Image Checksums

  amd64 (x86_64):

   SHA512 (FreeBSD-12.0-RELEASE-amd64.qcow2.xz) = 48bd0a1d2906c55d79beedabf19b5ef6ae48697be0c4429998c9ceedc40fb085ac9647cf98d09ad0c5162e0bf104f9a0601fa521e60fea01fbe8d999b5467ba2
   SHA512 (FreeBSD-12.0-RELEASE-amd64.raw.xz) = a1bce53d3a83f777e0aaf5e8fe0cdf1dcfa3e30e5d0cd0f2738f5f1d1f4d7e5daac3af38ef800a0abcfc67ecf1c541e9d7c5d2b9680116417c69f78dae1e8829
   SHA512 (FreeBSD-12.0-RELEASE-amd64.vhd.xz) = 211d1ca2d7d516b0e46badb12cff474e18d620ee071c0eb53f7609cf624e452062c2fca2c138d42b24a08cb6039f66ca03a75d12ed9c50355a24470ed7c807fb
   SHA512 (FreeBSD-12.0-RELEASE-amd64.vmdk.xz) = eead73be215f5b38eb04aeed79c435a8f8f60582c0cef402f56217baddcda3562f4b1f47d67769b89ecd3cbf9677be2224245f111bf563a3c645556ace89143e


   SHA256 (FreeBSD-12.0-RELEASE-amd64.qcow2.xz) = f4a2b88566cb4f6a9cf115e8d180111eb513b810cfb778a2416af18dfce29334
   SHA256 (FreeBSD-12.0-RELEASE-amd64.raw.xz) = 9eb70a552f5395819904ed452a02e5805743459dbb1912ebafe4c9ae5de5eb53
   SHA256 (FreeBSD-12.0-RELEASE-amd64.vhd.xz) = c79756c0c8eaea98e47accb400cd5705a774bbcbdd611c722ec42ddef3357cce
   SHA256 (FreeBSD-12.0-RELEASE-amd64.vmdk.xz) = c37a4d01f0b7e71442ca9265373c279f6652bba88b34107e5a5b23e3ab8f6383


  i386 (x86):

   SHA512 (FreeBSD-12.0-RELEASE-i386.qcow2.xz) = 43d0e9b6fc0e93b996693e8a552a526320e39271058b4a344d042c6a59497a01edaf7a04d6312dfc9edd9e0bdd1e29417a2a38ca1bc7d9ac7f8b0af5ef7732b1
   SHA512 (FreeBSD-12.0-RELEASE-i386.raw.xz) = 1f07f2f762f2418a0afc7735403e9d1638eb67847d4fcd160edbbe01253f72d13d4247c818010033917a7f8632f0e97300e7d9483d0bdba16233202dc9a5433f
   SHA512 (FreeBSD-12.0-RELEASE-i386.vhd.xz) = a24c6a3a4776afbbf3d85622ea7d0d03c7cafaf31722035d2fa3691dec50da504768d7fd8b357518aec00d6e9700b6ee49d12795e440667e7d50cac780a24083
   SHA512 (FreeBSD-12.0-RELEASE-i386.vmdk.xz) = b6418819950a7931dc388a60be5898726d5de0d5654b695fa3e6eec260c0fd00bac910daaa1e25d8bdee04977e46ca80a984ab338429c0957176642a7db4da34


   SHA256 (FreeBSD-12.0-RELEASE-i386.qcow2.xz) = 756ecda4e2370afebe67fec96d4ca98ff06ac7a851609653bcbe54422f691b02
   SHA256 (FreeBSD-12.0-RELEASE-i386.raw.xz) = 6be6486b788a9d0f15d110cd26ce6b68501c968374c60a0d2158b9a2818cf5c2
   SHA256 (FreeBSD-12.0-RELEASE-i386.vhd.xz) = 0d194d325858eb896705a708bdf6dc6ac79fd85fc4f34db518d6229d660d00c3
   SHA256 (FreeBSD-12.0-RELEASE-i386.vmdk.xz) = 2a8548d11bb2890d2e3aa824e0659b4e684876c68d7f10c1ee7215a1e8c51ad0


  aarch64 (arm64):

   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64.qcow2.xz) = 24e3cc5c3929ab35cf2c363e7dd0fae7e2b8a30a834eb9d47a12fcad439c7b08d00b617360c19bdcd7f34e648edb801ff9e070f1bedcbe480126dfbf7af60c17
   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64.raw.xz) = 940770659fc1cdb4e620e0d10a7eadbece3c380a1947a63e13928efd2f8f1f69ea1fa931b1e7bcab01767a4a0a3cc0ca25591bd993126531fa9dd5be20c7fc98
   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64.vhd.xz) = 9abfdc5195322ba7ce3beb0be86038ec1049c3357af5c7d554327c86f72732f9fdcb752c6ba04e8bb370ab6168243fa9e28f9aa0d31a33a91cafbd6dc0a9b9ea
   SHA512 (FreeBSD-12.0-RELEASE-arm64-aarch64.vmdk.xz) = 4a745cac839fc179da7703a4e028ce612b16cce362c75830979274c92993ab3b3dfd4428025a112e4d4aa13692a7bc957da915bf212ec957cd087defd7c86d7b


   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64.qcow2.xz) = 7d442d6ebaa9c3f7178c8f4356c7136cc8dc8a39fda4042faa35fd3daf4e5553
   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64.raw.xz) = 832e4860ee8ac2f776872f8658b949dede2a5f26d719e2f20e98bc3038a167be
   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64.vhd.xz) = f6296b4b0bda1ab5a459803156fb2f5dc3c87231322baaf8969ed0f5cc21c882
   SHA256 (FreeBSD-12.0-RELEASE-arm64-aarch64.vmdk.xz) = c1355435c3a9304ee4895ba82716cfc6b758d00919652d478e25aeb5a1105e1e


   Love FreeBSD? Support this and future releases with a donation to The
   FreeBSD Foundation! &lt;a href=&quot;https://www.FreeBSDFoundation.org/donate/&quot;&gt;https://www.FreeBSDFoundation.org/donate/&lt;/a&gt;

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEjRJAPC5sqwhs9k2jAxRYpUeP4pMFAlwQAzcACgkQAxRYpUeP
4pP/PQ/+PCVvx3lGCe5UO2qtVHYz1b6YVTOrOsRFQ57P82wY2g+pN2AQ8n792ctz
C1V2MTqC9kULG5DLMhO1Z2Nsz7+Vy428WEzTRUl/b+j191O/TlJscYrD8tSH6Y8P
0YPoYmv+AHER2GLm/uWwGnqMnsVOhFwsoUpGpzA1RhF6pXL9bZbjXfGoAlpyQ6dD
Z0LIq9jO847zrgeMhVC89s91QZeXj99qLlgh5FZ7m2u4CITRW6lPdZzO9Q3h4oEK
xOPRK+NkM/Qx0bvbrZaBSvkTvuPTsjm+mN8ObbsJFPJQGk7vjCi+OA5O2suWXrGA
9q06bY9fGCFI+HhQDH9iyZSkfnvt9bafCqfSj4VY2wD0gOFfnB3TIp0TVjEZSitJ
VD584sMtgDKtEYtyTdEGSlpgODkgq8LaI8GdmMq3Z2QNGsN/tHJsE6NjF2uCQAC+
rponnyheFgmn1F7DcOqDMzvg4x2Bs3fqjsOKzvAqvffWCqftSi3Q9fxbv59gzu8X
EGHJAF3UQU3BGguoYIRCxT1jwQ8hQ80EGY69fkyJShu2SPglxieIEXL136nNXi6o
52JwqsSREMF+Dkwn+jqs4x/NPnF2bCeup/PG0au8Jp+twz+Gwe5nRfaRuuR3zBxq
nB7utMMnbrtGpdEHehQ+I1BczCFD/oPHXvPW/8pkGLwdfmAHWVs=
=SzNe
-----END PGP SIGNATURE-----
&lt;/pre&gt;
&lt;hr /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://lists.freebsd.org/mailman/listinfo/freebsd-announce&quot;&gt;More information about the freebsd-announce mailing list&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 11 Dec 2018 18:56:16 +0000</pubDate>
<dc:creator>tachion</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lists.freebsd.org/pipermail/freebsd-announce/2018-December/001856.html</dc:identifier>
</item>
<item>
<title>Firefox 64 Released</title>
<link>https://hacks.mozilla.org/2018/12/firefox-64-released/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2018/12/firefox-64-released/</guid>
<description>&lt;p&gt;Firefox 64 is &lt;a href=&quot;https://www.mozilla.org/firefox/new/&quot;&gt;available today&lt;/a&gt;! Our new browser has a wealth of exciting developer additions both in terms of interface features and web platform features, and we can’t wait to tell you about them. You can find out all the news in the sections below — please check them out, have a play around, and let us know your feedback in the comment section below.&lt;/p&gt;&lt;h2&gt;New Firefox interface features&lt;/h2&gt;
&lt;h3&gt;Multiple tab selection&lt;/h3&gt;
&lt;p&gt;We’re excited to introduce &lt;strong&gt;multiple tab selection&lt;/strong&gt;, which makes it easier to manage windows with many open tabs. Simply hold Control (Windows, Linux) or Command (macOS) and click on tabs to select them.&lt;/p&gt;
&lt;p&gt;Once selected, click and drag to move the tabs as a group — either within a given window, or out into a new window.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;500&quot; height=&quot;375&quot; src=&quot;https://www.youtube.com/embed/VZ48KfoTFLo?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;h3&gt;Devtools improvements&lt;/h3&gt;
&lt;p&gt;Our Developer Tools also gained a notable new feature: when hovering over text, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Accessibility_inspector&quot;&gt;Accessibility Inspector&lt;/a&gt; now displays &lt;strong&gt;text contrast ratios&lt;/strong&gt; in the pop-up infobar.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/12/Screenshot-2018-12-10-23.43.26.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-33016 size-full&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/12/Screenshot-2018-12-10-23.43.26.png&quot; alt=&quot;An element is selected by the Accessibility Inspector, and the highlighters shows a AA contrast ratio&quot; width=&quot;702&quot; height=&quot;304&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-10-23.43.26.png 702w, https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-10-23.43.26-250x108.png 250w, https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-10-23.43.26-500x217.png 500w&quot; sizes=&quot;(max-width: 702px) 100vw, 702px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The infobar also indicates whether or not the text meets &lt;a href=&quot;https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html&quot;&gt;WCAG 2.0 Level AA or AAA accessibility guidelines&lt;/a&gt; for minimum contrast.&lt;/p&gt;
&lt;p&gt;Another great addition is related to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Responsive_Design_Mode&quot;&gt;Responsive Design Mode&lt;/a&gt; — device selection is now saved between sessions.&lt;/p&gt;
&lt;h2&gt;New CSS features in 64&lt;/h2&gt;
&lt;h3&gt;Standardizing proprietary styling features&lt;/h3&gt;
&lt;p&gt;As part of our platform work, we’re trying to standardize some of the non-standard CSS features that have often caused developers cross-browser headaches. Landing in 64 we’ve got the following:&lt;/p&gt;
&lt;h3&gt;New media queries&lt;/h3&gt;
&lt;p&gt;Firefox 64 sees the addition of new media queries from the &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-4/&quot;&gt;Level 4&lt;/a&gt; and &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/&quot;&gt;Level 5&lt;/a&gt; specifications for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer&quot;&gt;detecting pointers/touchscreens&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover&quot;&gt;whether the user can hover&lt;/a&gt; over something, and whether the user prefers &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion&quot;&gt;reduced-motion&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Multi-position color stop gradients&lt;/h3&gt;
&lt;p&gt;CSS gradients now support multi-position color stops (e.g. see their use on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient#Gradient_with_multi-position_color_stops&quot;&gt;linear gradients&lt;/a&gt;). So now &lt;code&gt;yellow 25%, yellow 50%&lt;/code&gt; can now be written &lt;code&gt;yellow 25% 50%&lt;/code&gt;, for example.&lt;/p&gt;
&lt;h2&gt;JavaScript improvements&lt;/h2&gt;
&lt;p&gt;There were a lot of internal improvements this time around. In terms of developer facing improvements:&lt;/p&gt;
&lt;h2&gt;New Web API highlights&lt;/h2&gt;
&lt;h3&gt;Fullscreen API unprefixed&lt;/h3&gt;
&lt;p&gt;Goodbye &lt;code&gt;mozRequestFullScreen&lt;/code&gt;! The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API&quot;&gt;Fullscreen API&lt;/a&gt; is now available in Firefox without a prefix. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen&quot;&gt;requestFullscreen&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen&quot;&gt;exitFullscreen&lt;/a&gt; APIs now also return promises that resolve once the browser finishes transitioning between states.&lt;/p&gt;
&lt;h3&gt;WebVR 1.1 in macOS&lt;/h3&gt;
&lt;p&gt;What’s more immersive than Fullscreen? Virtual reality, of course. And Firefox 64 now supports &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebVR_API&quot;&gt;WebVR 1.1&lt;/a&gt; on macOS!&lt;br/&gt;&lt;a href=&quot;https://mixedreality.mozilla.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;alignnone wp-image-33020 size-large&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/12/firefox-webvr-500x281.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;281&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/12/firefox-webvr-500x281.jpg 500w, https://hacks.mozilla.org/files/2018/12/firefox-webvr-220x125.jpg 220w, https://hacks.mozilla.org/files/2018/12/firefox-webvr-250x141.jpg 250w, https://hacks.mozilla.org/files/2018/12/firefox-webvr-768x432.jpg 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;startMessages() for Service Workers&lt;/h3&gt;
&lt;p&gt;On a completely unrelated note, pages with Service Workers can now use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/startMessages&quot;&gt;startMessages() API&lt;/a&gt; to begin receiving queued worker messages, even before page loading has completed.&lt;/p&gt;
&lt;h2&gt;New Add-ons Features&lt;/h2&gt;
&lt;p&gt;What follows are the highlights. For more details, see &lt;a href=&quot;https://blog.mozilla.org/addons/2018/11/08/extensions-in-firefox-64/&quot;&gt;Extensions in Firefox 64&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Context menu enhancements&lt;/h3&gt;
&lt;p&gt;Firefox 64 introduces an entirely new API, &lt;code&gt;browser.menus.overrideContext&lt;/code&gt;, which allows complete customization of the context menu shown within add-on content like sidebars, popups, etc. These context menus can also automatically include custom entries from &lt;em&gt;other&lt;/em&gt; add-ons, as though the user had right-clicked on a tab or bookmark. &lt;a href=&quot;https://piro.sakura.ne.jp/latest/blosxom/mozilla/xul/2018-10-14_override-context-on-fx64.htm&quot;&gt;Piro’s blog post&lt;/a&gt; explains how it all works.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/12/Screenshot-2018-12-11-00.33.33.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-33017 size-full&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/12/Screenshot-2018-12-11-00.33.33.png&quot; alt=&quot;A custom context menu used by the Tree Style Tab extension&quot; width=&quot;1062&quot; height=&quot;874&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-11-00.33.33.png 1062w, https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-11-00.33.33-250x206.png 250w, https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-11-00.33.33-768x632.png 768w, https://hacks.mozilla.org/files/2018/12/Screenshot-2018-12-11-00.33.33-500x411.png 500w&quot; sizes=&quot;(max-width: 1062px) 100vw, 1062px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In addition:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can now restrict where context menus can appear in an add-on using the new &lt;code&gt;viewTypes&lt;/code&gt; property in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus/create&quot;&gt;menus.create()&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus/update&quot;&gt;menus.update()&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus/update&quot;&gt;menus.update()&lt;/a&gt; can now be used to update the icon of an existing menu item.&lt;/li&gt;
&lt;li&gt;Extensions can now detect which mouse button was used when a menu item was clicked — this can be found using the new &lt;code&gt;button&lt;/code&gt; property of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus/OnClickData&quot;&gt;menus.OnClickData&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Custom content in the Dev Tools inspector&lt;/h3&gt;
&lt;p&gt;Also, add-ons can now display custom content within the Dev Tools Inspector sidebar by calling the new &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1398734&quot;&gt;sidebar.setPage()&lt;/a&gt; API.&lt;/p&gt;
&lt;h3&gt;Managing add-ons updated&lt;/h3&gt;
&lt;p&gt;For users, the add-on management interface, &lt;code&gt;about:addons&lt;/code&gt;, was redesigned to match Firefox’s preferences page, and right-clicking an add-on icon in the browser toolbar now offers options to directly remove or manage that add-on.&lt;/p&gt;
&lt;h2&gt;Privacy features for your protection&lt;/h2&gt;
&lt;h3&gt;Symantec CA Distrust&lt;/h3&gt;
&lt;p&gt;Due to a &lt;a href=&quot;https://wiki.mozilla.org/CA:Symantec_Issues&quot;&gt;history of malpractice&lt;/a&gt;, Firefox 64 will not trust TLS certificates issued by Symantec (including under their GeoTrust, RapidSSL, and Thawte brands). Microsoft, Google, and Apple are implementing similar measures for their respective browsers.&lt;/p&gt;
&lt;h3&gt;Referrer-Policy for stylesheets&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy&quot;&gt;Referrer-Policy header&lt;/a&gt; now applies to requests &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#Integration_with_CSS&quot;&gt;initiated by CSS&lt;/a&gt; (e.g., &lt;code&gt;background-image: url(&quot;http://...&quot;)&lt;/code&gt; ). The default policy, &lt;code&gt;no-referrer-when-downgrade&lt;/code&gt;, omits referrer information when a secure origin (&lt;code&gt;https&lt;/code&gt;) requests data from an insecure origin (&lt;code&gt;http&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;buildID fixed timestamp&lt;/h3&gt;
&lt;p&gt;Lastly, from now on the non-standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/buildID&quot;&gt;navigator.buildID&lt;/a&gt; property will always return a fixed timestamp, &lt;code&gt;20181001000000&lt;/code&gt;, to mitigate its potential abuse for fingerprinting.&lt;/p&gt;
&lt;h2&gt;Further Reading&lt;/h2&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/64&quot;&gt;Firefox 64 for Developers&lt;/a&gt; on MDN, and the official &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/64.0/releasenotes/&quot;&gt;Firefox 64 Release Notes&lt;/a&gt;. If you’re a web developer, you may also be interested in the &lt;a href=&quot;https://www.fxsitecompat.com/en-CA/versions/64/&quot;&gt;Firefox 64 Site Compatibility&lt;/a&gt; notes.&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;17.955518945634&quot;&gt;
&lt;p&gt;Engineer with Mozilla Developer Relations, former Mozilla Persona developer.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/dcallahanmozilla-com/&quot;&gt;More articles by Dan Callahan…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chris Mills is a senior tech writer at Mozilla, where he writes docs and demos about open web apps, HTML/CSS/JavaScript, A11y, WebAssembly, and more. He loves tinkering around with web technologies, and gives occasional tech talks at conferences and universities. He used to work for Opera and W3C, and enjoys playing heavy metal drums and drinking good beer. He lives near Manchester, UK, with his good lady and three beautiful children.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/cmillsmozilla-com/&quot;&gt;More articles by Chris Mills…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Tue, 11 Dec 2018 18:32:52 +0000</pubDate>
<dc:creator>feross</dc:creator>
<og:url>https://hacks.mozilla.org/2018/12/firefox-64-released</og:url>
<og:title>Firefox 64 Released – Mozilla Hacks - the Web developer blog</og:title>
<og:description>The year's last release of Firefox bundles together goodies for all, including multi-tab management in the interface, new CSS features, devtools improvements, better privacy protections, add-ons updates, and much, much ...</og:description>
<og:image>https://hacks.mozilla.org/files/2018/12/multiselect-social.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2018/12/firefox-64-released/</dc:identifier>
</item>
<item>
<title>DigitalOcean launches its container service</title>
<link>https://techcrunch.com/2018/12/11/digital-ocean-launches-its-container-service/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/12/11/digital-ocean-launches-its-container-service/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;It’s &lt;a href=&quot;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2018/&quot;&gt;KubeCon/CloudNativeCon this week&lt;/a&gt;, the world’s largest confab for all things cloud-native, containers, Kubernetes and DevOps. Every company that’s doing anything remotely related to those topics is announcing news at the sold-out event. That includes the popular cloud hosting service &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt;, which is &lt;a href=&quot;https://blog.digitalocean.com/digitalocean-releases-k8s-as-a-service/&quot;&gt;announcing&lt;/a&gt; the launch of its Kubernetes-as-a-Service offering to all developers today. This is still a limited release, though, with full general availability planned for early 2019.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/digitalocean&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;digitalocean&quot;&gt;DigitalOcean’s&lt;/a&gt; service first launched into early access in May. In total, about 30,000 developers singed up for early access and the team now feels that it’s ready for a wider rollout.&lt;/p&gt;
&lt;p&gt;Like all of the company’s service, the focus here is on simplicity. By default, there’s nothing all that simple about setting up and managing &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/kubernetes&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;kubernetes&quot;&gt;Kubernetes&lt;/a&gt; clusters, but DigitalOcean has abstracted away most of this and promises that the service is “production-ready” for “developers of all skill levels.”&lt;/p&gt;
&lt;p&gt;The early access release of the service already introduced most of the basics, like node provisioning, handling durable storage, firewall, load balancing and similar tools. This new release adds open APIs for integrations with existing developer tools, support for the latest versions of Kubernetes (with 1.13.1 support coming soon), as well as a new configuration experience that guides developers through the process of provisioning, configuring and deploying new clusters.&lt;/p&gt;
&lt;p&gt;“Kubernetes promises to be one of the leading technologies in a developer’s arsenal to gain the scalability, portability and availability needed to build modern apps. Unfortunately, for many it’s extremely complex to manage and deploy,” said DigitalOcean VP of Product Shiven Ramji  in today’s announcement. “With DigitalOcean Kubernetes, we make running containerized apps consumable for any developer, regardless of their skills or resources.”&lt;/p&gt;
&lt;p&gt;While DigitalOcean started as a standard hosting company with virtual private servers, the company has recently expanded its portfolio to the point where it now looks more like a nascent cloud computing company with a set of offerings that include virtual machines, a storage service and load balancing tools. Kubernetes container support is a logical next step now that it has those pieces in place. And while the Kubernetes market often focuses on large enterprises, there’s plenty of room to grow for a company like DigitalOcean that focuses on individual developers and smaller companies — and they, too, would like to have an easy way to use and manage containers.&lt;/p&gt;
</description>
<pubDate>Tue, 11 Dec 2018 17:00:26 +0000</pubDate>
<dc:creator>neom</dc:creator>
<og:title>DigitalOcean launches its container service</og:title>
<og:description>It’s KubeCon/CloudNativeCon this week, the world’s largest confab for all things cloud-native, containers, Kubernetes and DevOps. Every company that’s doing anything remotely related to those topics is announcing news at the sold-out event. That includes the popular cloud hosting …</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2017/10/gettyimages-157113429.jpg?w=597</og:image>
<og:url>http://social.techcrunch.com/2018/12/11/digital-ocean-launches-its-container-service/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/12/11/digital-ocean-launches-its-container-service/</dc:identifier>
</item>
<item>
<title>GoDaddy is a scam</title>
<link>https://www.reddit.com/r/web_design/comments/a562gv/godaddy_is_a_scam/</link>
<guid isPermaLink="true" >https://www.reddit.com/r/web_design/comments/a562gv/godaddy_is_a_scam/</guid>
<description>&lt;p class=&quot;yklcuq-10 hpxQMr&quot;&gt;Okay, so I searched for one domain name on godaddy. It was available but it was on 'auction' being sold for more than $10k. I opened up the auction and it had started literally less than a minute ago and there had been only 1 views.&lt;/p&gt;
&lt;p class=&quot;yklcuq-10 hpxQMr&quot;&gt;The auction was supposed to last 90days. After these 90 days there were 4 views in total (all by me) and it got renewed for another 90 days and it keeps saying that the auction has started the day I searched for the domain for the first time.&lt;/p&gt;
&lt;p class=&quot;yklcuq-10 hpxQMr&quot;&gt;If someone is able to justify this as not a scam, please post your opinion&lt;/p&gt;
</description>
<pubDate>Tue, 11 Dec 2018 14:53:21 +0000</pubDate>
<dc:creator>k0t0n0</dc:creator>
<og:title>r/web_design - GoDaddy is a scam</og:title>
<og:type>website</og:type>
<og:url>https://www.reddit.com/r/web_design/comments/a562gv/godaddy_is_a_scam/</og:url>
<og:description>624 votes and 240 comments so far on Reddit</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reddit.com/r/web_design/comments/a562gv/godaddy_is_a_scam/</dc:identifier>
</item>
<item>
<title>Twenty Years of Open Source Erlang: A Retrospective from the trenches</title>
<link>https://www.erlang-solutions.com/blog/twenty-years-of-open-source-erlang.html</link>
<guid isPermaLink="true" >https://www.erlang-solutions.com/blog/twenty-years-of-open-source-erlang.html</guid>
<description>&lt;p class=&quot;subheading&quot;&gt;&lt;time datetime=&quot;2018-12-08&quot;&gt;2018-12-08&lt;/time&gt; by Francesco Cesarini&lt;/p&gt;
&lt;p&gt;Erlang was released as Open Source Tuesday December 8th, 1998. Do you remember where you were that week? I was in Dallas (Texas); one of my many visits helping the Ericsson US branch set up an Erlang team working with the AXD301 switch. Waking up on Tuesday morning, I got the news.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/boF1eoi.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The release was uneventful. There was no PR around the release, no build up or media coverage. Just a sparce &lt;a href=&quot;https://web.archive.org/web/19990125095124/http://www.erlang.org:80/&quot;&gt;erlang.org website&lt;/a&gt; (handcrafted using vi). An email was sent to the &lt;a href=&quot;https://groups.google.com/forum/#!topic/comp.lang.functional/sdiSrY6aVUs&quot;&gt;Erlang mailing list&lt;/a&gt;, a post made the front page on &lt;a href=&quot;https://tech.slashdot.org/story/98/12/08/156212/erlang-becomes-open-source&quot;&gt;slasdot&lt;/a&gt;, alongside a mention on &lt;a href=&quot;https://groups.google.com/forum/#!topic/comp.lang.functional/sdiSrY6aVUs&quot;&gt;comp.lang.functional&lt;/a&gt; (which Joe dutifully followed up on). There were no other marketing activities promoting the fact that Ericsson had released a huge open source project. My highlight that week was not the release of Erlang, but going to a Marky Ramone and the Intruders gig in a dive in downtown Dallas. Little did I know how Open Source Erlang would affect the tech industry, my career, and that of many others around me.&lt;/p&gt;

&lt;p&gt;What made it all happen? Many of us wanted Erlang to be released as open source, for a variety of reasons. Some of my Ericsson colleagues wanted to leave their current positions, but continue building products with what they believed was a silver bullet. Others wanted to make the world a better place by making superior tools for fault tolerant and scalable systems available to the masses. For Ericsson management, a wider adoption of Erlang would mean a larger pool of talent to recruit from.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.erlang-solutions.com/blog/20-years-of-open-source-erlang-openerlang-interview-with-jane-walerud.html&quot;&gt;Jane Walerud&lt;/a&gt; was amongst us trying to sell Erlang outside of Ericsson and one of the few who at the time knew how to speak to management; she understood that the time of selling programming languages was over. Håkan Millroth, head of the Ericsson Software Architecture Lab suggested trying this new thing called “Open Source”. Jane, armed with an early version of &lt;a href=&quot;http://www.unterstein.net/su/docs/CathBaz.pdf&quot;&gt;The Cathedral and the Bazaar paper&lt;/a&gt;, convinced Ericsson management to release the source code for the Erlang VM, the standard libraries and parts of OTP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/x3fgMrD.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Until Erlang was out, many did not believe it would happen. There was a fear that, at the last minute, Ericsson was going to pull the plug on the whole idea. Open Source, a term which had been coined a few months earlier, was a strange, scary new beast large corporations did not know how to handle. The concerns Ericsson had of sailing in uncharted territory, rightfully so, were many. To mitigate the risk of Erlang not being released, urban legend has it that our friend &lt;a href=&quot;https://en.wikipedia.org/wiki/Richard_O%27Keefe&quot;&gt;Richard O’Keefe&lt;/a&gt;, at the time working for the University of Otago in New Zealand, came to the rescue. Midnight comes earlier in the East, so as soon as the clocks struck midnight in New Zealand, the erlang.org website went online for a few minutes. Just long enough for an anonymous user to download the very first Erlang release, ensuring its escape. When the download was confirmed, the website went offline again, only to reappear twelve hours later, at midnight Swedish time. I was in Dallas, fast asleep, so I can neither confirm nor deny if any of this actually happened. But as with every legend, I am sure there is a little bit of truth behind it.&lt;/p&gt;

&lt;p&gt;Adoption in first few years was sluggish. Despite that, the OTP team, lead by Kenneth Lundin was hard at work. In May 1999, Björn Gustavsson’s refactoring of the BEAM VM (Bogdan’s Erlang Abstract Machine) becomes the official replacement of the JAM (Joe’s Abstract Machine). Joe had left Ericsson a year earlier and the BEAM, whilst faster, needed that time to make it production ready.&lt;/p&gt;
&lt;p&gt;I recall the excitement every time we found a new company using Erlang/OTP. Telia, the Swedish phone company, was working on a call center solution. And One2One - the UK mobile operator - had been initially using it for value added services, expanding its use to the core network. IdealX in Paris, did the first foray into messaging and XMPP. Vail System in Chicago and Motivity in Toronto were using it for auto dialler software. And Bluetail, of course, had many products helping internet service providers with scalability and resilience.&lt;/p&gt;
&lt;p&gt;The use of Erlang within Ericsson’s core products continued to expand. This coincided with my move to London in 1999, where I increasingly came across the need for Erlang expertise within Ericsson. Erlang Solutions was born. Within a year of founding the company, I had customers in Sweden, Norway, Australia, Ireland, France, the US, and of course, the UK. In 2000, we got our first non Ericsson customer; training, mentorship and a code review for IdealX in Paris.&lt;/p&gt;
&lt;p&gt;It was the Bluetail acquisition by &lt;a href=&quot;https://www.crunchbase.com/acquisition/alteon-websystems-acquires-bluetail-2--29ead616&quot;&gt;Alteon Web Systems&lt;/a&gt; for $152 million (a few days later Alteon were acquired by Nortel), which sent the first ripples through the Erlang community. An Ericsson competitor developing Erlang products! And a generation of successful entrepreneurs who had the funds to get involved in many other startups; Synapse, Klarna and Tail-f being some of them.&lt;/p&gt;
&lt;p&gt;Soon after the Bluetail success comes the dot com crash, the industry went into survival mode, and then later recovery, mode. The crash, however, did not affect academics who were moving full steam ahead. In 2002, Prof. John Hughes of Chalmers University managed to get the Erlang Workshop accredited by SIGPLAN and the ACM. We didn’t really know what this all meant, but were nonetheless, very proud of it. The ACM SIGPLAN Erlang Workshop in Pittsburgh (Pennsylvania) was the first accredited workshop. Here, a PhD student from Uppsala University named Richard Carlsson presents the Erlang version of try-catch to the world.&lt;/p&gt;
&lt;p&gt;In September 2004, Kostis Sagonas, from Uppsala University hijacks the lightning talks at the ACM SIGPLAN Erlang workshop in Snowbird (Utah) and gives the first public demo of Dialyzer. He runs it on a code base from South African Teba Bank. It was the first of many amazing tools he and his students contributed to the ecosystem.&lt;/p&gt;
&lt;p&gt;Erlang had for a long time been used to teach aspects of computer science in many Universities all over the world. This in turn lead to research, Master Thesis and PhD projects. The workshop provided a forum for academics to publish their results and validate them with industrial partners. Downloads from the erlang.org site kept on increasing, as did adoption.&lt;/p&gt;
&lt;p&gt;In 2003, Thomas Arts, program manager at the IT University of Gothenburg, invites me to teach an Erlang course to his undergraduate class. Prof. John Hughes, despite already knowing Erlang, wanted to learn about it from someone who had used it in production, so he joins the class. One morning, he shows up to class tired, having pulled an all nighter. He had developed the first version of Erlang QuickCheck, which he was dutifully using to test the course exercises. That was the start of Quviq and a commercial version of QuickCheck, a property based testing tool second to none. I ended up teaching at the IT University for a decade, with over 700 students attending the course.&lt;/p&gt;

&lt;p&gt;During the dot com crash, Alexey Shchepin starts work on an XMPP based instant messaging server called ejabberd. After working on it for three years, he releases version 1.0 December 1st, 2005. Facebook Chat forks it, rolling out a chat service to 70M users. At around the same time, Brian Acton and Jan Koum founded WhatsApp, also based on a fork of Ejabberd. As forking Ejabberd was all the hype, MongooseIM did the same, becoming a generic platform for large scale messaging solutions.&lt;/p&gt;
&lt;p&gt;In May 2006, RabbitMQ is born, as we find out that work was underway to define and implement a new pub/sub messaging standard called AMQP. RabbitMQ is today the backbone of tens of thousands of systems. By the end of the decade, Erlang had become the language of choice for many messaging solutions.&lt;/p&gt;

&lt;p&gt;It was not only Universities innovating during the dot com recovery. In May of 2005, a multi-core version of the BEAM VM is released by the OTP team, proving that the Erlang concurrency and programming models are ideal for future multi-core architectures. Most of the excitement was on the Erlang mailing list, as not many had realised that the free lunch was over. We took Ejabberd, and just by compiling it to the latest version of Erlang, got a 280% increase in throughput when running it on a quad-core machine.&lt;/p&gt;
&lt;p&gt;In May 2007, the original reel of the 1991 &lt;a href=&quot;https://www.youtube.com/watch?v=uKfKtXYLG78&quot;&gt;Erlang the Movie&lt;/a&gt; was anonymously leaked from a VHS cassette in an Ericsson safe and put on the erlang.org site, eventually making its way to YouTube. Still no one has publically taken responsibility for this action. The world, however, finally understood the relief felt by those still under Ericsson NDA that none of the computer scientists featured in the film had given up their day jobs for a career in acting. The film got a &lt;a href=&quot;https://www.youtube.com/watch?v=rRbY3TMUcgQ&quot;&gt;sequel in 2013&lt;/a&gt;, when a hipster tries to give Erlang cool look. This time, the curpruit releasing it is identified as Chicago resident &lt;a href=&quot;https://twitter.com/gar1t&quot;&gt;Garrett Smith&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/qF0Xn8g.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In 2007, &lt;em&gt;Programming Erlang&lt;/em&gt; by Joe Armstrong is published by the The Pragmatic Programmers. The following year, in June 2008, I held the first paper copy of &lt;em&gt;Erlang Programming&lt;/em&gt;; a book Simon Thompson and I had spent 18 months writing. At the time, an O’Reilly book was the seal of approval that emerging programming languages needed, giving way to many other fantastic and diverse range of books in many languages.&lt;/p&gt;
&lt;p&gt;The book launch party happened in conjunction with the first commercial Erlang conference, the Erlang eXchange in London June 2008. It was not the first event, as Bjarne Däcker, the former head of the Ericsson Computer Science Lab, had for almost a decade been running the yearly Erlang User Conference in Stockholm. But November in Sweden is cold, and the time had come to conquer the world. The Erlang eXchange gives way to the first Erlang Factory, taking place in March 2009 in Palo Alto (California). Much more exotic, though equally beautiful locations.&lt;/p&gt;
&lt;p&gt;For the first time, the European Erlang community meet their American peers. We all got on like a house on fire, as you can imagine. At the conference, Tony Arcieri presents &lt;a href=&quot;http://reia-lang.org&quot;&gt;Reia&lt;/a&gt;, a Ruby flavoured version of Erlang running on the BEAM. Who said that a Ruby like syntax is a bad idea? Other presenters and attendees that year had stellar careers as entrepreneurs and leaders in the tech space.&lt;/p&gt;
&lt;p&gt;An Erlang user in the US at the time was Tom Preston Werner. He was using it to scale the Ruby front-end of a social coding company called Github. In November of 2009, when in Stockholm for the Erlang User Conference, I introduced him and Scott Chacon to the OTP team. They spent an afternoon together, prompting the OTP team to move the development of Erlang to github, making it its main repository.&lt;/p&gt;
&lt;p&gt;Conferences spread all over the world. Events have been held in Amsterdam, Bangalore, Berlin, Buenos Aires, Brussels, Chicago, (many places I can not spell in) China, Krakow, Los Angeles, Paris, Moscow, Mexico City, Milan, Munich, New York, Rome, San Francisco, St Andrews, Tel Aviv, Vancouver, Washington DC and many many other places.&lt;/p&gt;

&lt;p&gt;In 2010, I teach my first graduate class at Oxford University. Erlang was picked for the Concurrency Oriented Programming course. It was also the year Bruce Tate’s Seven Languages in Seven Weeks was released. It was through this book where one of Rails’ core committers, José Valim, realized that Erlang was ahead of everyone in the concurrency race because it also tacked distribution.&lt;/p&gt;
&lt;p&gt;In January 2011, the first commit in the Elixir repo happens. The results are presented the following year at the Krakow Erlang Factory, reaching version 1.0 in September 2014. Like all successful languages, he was trying to solve a problem, namely bringing the power of Erlang to wider communities, starting with Web.&lt;/p&gt;
&lt;p&gt;The time was right. In January 2012, WhatsApp announce that by modifying FreeBSD and the BEAM, they achieved 2 million TCP/IP connections in a single VM and host. Their goal was to reduce operational costs, running a scalable service on a hardware footprint that was as small as possible. These results were applicable to many verticals, the Web being one of them.&lt;/p&gt;
&lt;p&gt;The same month as the WhatsApp announcement, a group of companies pool together knowledge, time and resources to create the Industrial Erlang User Group. They worked with Ericsson to move Erlang from a derivative of the Open Source Mozilla Public License to the Apache Licence, contribute to the dirty scheduler, get bug tracking tool launched, fund a new erlang.org site, launch Erlang Central, and worked together with an aim of setting up a foundation.&lt;/p&gt;

&lt;p&gt;In July 2014, Jim Freeze organises the first Elixir Conference in Austin (Texas). There were 106 attendees, including keynote speaker Dave Thomas’ dog. Chris Mccord presented Phoenix, rising from the ashes. Robert Virding and I are part of the lineup and I recall my message loud and clear: just because you know Ruby, don’t believe them when they tell you that learning Elixir is easy. Your challenge will be thinking concurrently.&lt;/p&gt;
&lt;p&gt;The main idea behind Elixir is concurrency, and knowing how to deal with it is critical to the success of the project. A year later, in August 2015, Phoenix 1.0 was released. It had the same effect Rails had on Ruby, bringing people to Elixir. Now, you didn’t need to master concurrency to get it! Nerves came along soon after, moving Elixir away from being a language solely for the web.&lt;/p&gt;
&lt;p&gt;At Elixir Conf, I spoke about the book I was co-authoring with Steve Vinoski, Designing For Scalability with Erlang/OTP. At the time, it was available as a beta release. Little did I know that I had to wait for June 2016 to hold to a paper copy. The last four chapters, which should have been a book on their own, ended up taking 1.5 years to write. The main lesson to others writing a book is that if your partner tells you “you are going to become a father”, you have 8 months to finish the book. The alternative is you ending up like me, attending the release party a few days before your second child is due. The book was dedicated to Alison, Peter and our baby bump. Baby bump was born in early July, bringing truth to the Erlang saying that “you do not truly understand concurrency until you have your second child”.&lt;/p&gt;

&lt;p&gt;Throughout 2016, Elixir adoption kept on growing. Conference talks on Lisp Flavoured Erlang and Effene - two other languages on the BEAM - revealed they had code running in production. New experimental ports kept appearing on our radar; the era of a language was over. As with .net, containing C#, F#, Visual Basic and others or the JVM ecosystem encompassing Java, Scala, Clojure, Groovy, to mention but a few. The same happened with Erlang and the BEAM, prompting Bruce Tate to coin the term Erlang Ecosystem.&lt;/p&gt;
&lt;p&gt;Alpaca, Clojerl, Efene, Elixir, Elm-beam,, Erlog, Erlua, Fez, Joxa, Lisp Flavoured Erlang and Reia, which alongside Erlang and Elixir, are opening an era of interaction and cooperation across languages. Together, we are stronger and can continue evolving!&lt;/p&gt;
&lt;p&gt;In December of 2018, the paperwork for the Erlang Ecosystem Foundation was submitted, setting up a non profit whose goal is to foster the ecosystem. I am looking forward to more languages on the BEAM gaining in popularity, as we improve interoperability, common tools and libraries. And as the demand for scalable and fault tolerant systems increases, so does the influence of Erlang’s constructs and semantics in the new languages within and outside the ecosystem. I hope this will set the direction for the next 20 years as a new generation of technology leaders and entrepreneurs spreading their wings.&lt;/p&gt;

&lt;p&gt;In 2018, at Code BEAM Stockholm conference discovering the Erlang Ecosystem (formerly known as Erlang User Conference), Johan Bevemyr from Cisco announces they ship two million devices per year with Erlang applications running on them. That blew the audience away, as it meant that 90% of all internet traffic went through routers and switches controlled by Erlang. Erlang powers Ericsson’s GPRS, 3, 4G/LTE and if recent job ads are anything to go by, their 5G networks. MQTT for IoT infrastructure through VerneMQ and EMQ, the most popular AMQP brokers. Erlang powers not only the internet and mobile data networks, it is the backbone of tens of thousands of distributed, fault tolerant systems. Switches billions of dollars each day through its financial switches and even more messages through its messaging solutions. You can’t make this stuff up!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/V0wmmIo.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;These are just some of my personal highlights from the last 20 years. In it all, there is a realisation that we are far from done. Joe Armstrong, in 1995, told me Erlang will not be around forever. Some day, he said, something better will come along. Fast forward to December 2018, I am still waiting, with an open mind, for that prophecy to come true. Whatever it is, there is no doubt Erlang will be a heavy influence on it.&lt;/p&gt;
&lt;p&gt;A big thank you to Joe, Mike and Robert for making that first phone call, and to Bjarne for enabling it. A shout out to Jane who, by getting it outside of Ericsson, ensured its survival. You all started something which has allowed me to meet, work and learn with amazing and talented people using a technology that we are all passionate about. It has given us a platform enabling many of us to drive the innovation forward for the next 20 years (at least)!&lt;/p&gt;
&lt;a class=&quot;more&quot; href=&quot;https://www.erlang-solutions.com/blog.html&quot;&gt;Go back to the blog&lt;/a&gt;

</description>
<pubDate>Tue, 11 Dec 2018 14:15:36 +0000</pubDate>
<dc:creator>francescoc</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.erlang-solutions.com/blog/twenty-years-of-open-source-erlang.html</dc:identifier>
</item>
<item>
<title>Super Micro says review found no malicious chips in motherboards</title>
<link>https://www.reuters.com/article/us-supermicro-chips/super-micro-says-review-found-no-malicious-chips-in-motherboards-idUSKBN1OA12R</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-supermicro-chips/super-micro-says-review-found-no-malicious-chips-in-motherboards-idUSKBN1OA12R</guid>
<description>&lt;p&gt;SAN FRANCISCO (Reuters) - Computer hardware maker Super Micro Computer Inc told customers on Tuesday that an outside investigations firm had found no evidence of any malicious hardware in its current or older-model motherboards.&lt;/p&gt;
&lt;p&gt;In a letter to customers, the San Jose, California, company said it was not surprised by the result of the review it commissioned in October after a Bloomberg article reported that spies for the Chinese government had tainted Super Micro equipment to eavesdrop on its clients.&lt;/p&gt;
&lt;p&gt;Super Micro had denied the allegations made in the report.&lt;/p&gt;
&lt;p&gt;A person familiar with the analysis told Reuters it had been conducted by global firm Nardello &amp;amp; Co and that customers could ask for more detail on that company’s findings.&lt;/p&gt;
&lt;p&gt;Nardello tested samples of motherboards in current production and versions that were sold to Apple Inc and Amazon.com Inc, which were both named in the article, the person said.&lt;/p&gt;
&lt;p&gt;It also examined software and design files without finding any unauthorized components or signals being sent out.&lt;/p&gt;
&lt;p&gt;He said the company was still reviewing its legal options.&lt;/p&gt;
&lt;p&gt;Apple, Amazon and U.S. and U.K. officials have all said they have no knowledge of any hardware attacks via Super Micro.&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Reporting by Joseph Menn; Editing by Peter Cooney&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 11 Dec 2018 12:58:51 +0000</pubDate>
<dc:creator>teddyfrozevelt</dc:creator>
<og:title>Super Micro says review found no malicious chips in motherboards</og:title>
<og:url>https://www.reuters.com/article/us-supermicro-chips-idUSKBN1OA12R</og:url>
<og:type>article</og:type>
<og:description>Computer hardware maker Super Micro Computer Inc told customers on Tuesday that ...</og:description>
<og:image>https://s4.reutersmedia.net/resources_v2/images/rcom-default.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-supermicro-chips/super-micro-says-review-found-no-malicious-chips-in-motherboards-idUSKBN1OA12R</dc:identifier>
</item>
<item>
<title>How the Dreamcast Copy Protection Was Defeated</title>
<link>http://fabiensanglard.net/dreamcast_hacking/</link>
<guid isPermaLink="true" >http://fabiensanglard.net/dreamcast_hacking/</guid>
<description>&lt;head&gt;&lt;title&gt;How the Dreamcast copy protection was defeated&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;167.54079849442&quot;&gt;

&lt;center&gt;&lt;a href=&quot;http://fabiensanglard.net/&quot;&gt;&lt;strong&gt;FABIEN SANGLARD'S  WEBSITE&lt;/strong&gt;&lt;br/&gt;--------------------------&lt;br/&gt;&lt;/a&gt; &lt;a href=&quot;http://fabiensanglard.net/about&quot;&gt;ABOUT&lt;/a&gt;  &lt;a href=&quot;http://fabiensanglard.net/rss.xml&quot;&gt;RSS&lt;/a&gt;  &lt;a href=&quot;mailto:fabiensanglard.net@gmail.com?subject=How%20the%20Dreamcast%20copy%20protection%20was%20defeated&quot;&gt;EMAIL&lt;/a&gt;  &lt;a href=&quot;https://twitter.com/fabynou&quot;&gt;TWITTER&lt;/a&gt;&lt;br/&gt;&lt;/center&gt;
&lt;p&gt;December 11, 2018&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How the Dreamcast copy protection was defeated&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/dreamcast_hacking/Dreamcast_logo.svg&quot; width=&quot;20%&quot;/&gt; After I shipped the &lt;a href=&quot;http://fabiensanglard.net/gebbdoom&quot;&gt;DOOM Black Book&lt;/a&gt;, I took some vacation in Japan where I was able to play Ikaruga on a real arcade at Taito HEY in Akihabara. The experience reignited my interest in SEGA's ultimate video game console, the Dreamcast.&lt;/p&gt;&lt;p&gt;There is a lot of documentation available online which made the studying process easier than expected. Marcus Comstedt's excellent &lt;a href=&quot;http://mc.pp.se/dc/&quot;&gt;website&lt;/a&gt; which describes everything down to the GPU registers and Jockel's &lt;a href=&quot;https://www.neogaf.com/threads/lets-build-a-sega-dreamcast-game-from-scratch-breakout.916501/&quot;&gt;Let's build a Sega Dreamcast game from scratch&lt;/a&gt; are two excellent resources which will rapidly bring anyone up to date.&lt;/p&gt;&lt;p&gt;Studying the machine revealed the fascinating story of how hackers cracked the game copy protection early on and doomed SEGA's last hardware hopes.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First protection level: GD-ROM&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;On paper the SEGA Dreamcast's copy protection mechanism looked strong. Games shipped on a special medium called GD-ROM which only SEGA was able to manufacture. With the GD part standing for &quot;Gigabyte Disc&quot;, its higher density brought the max capacity to 1 GiB, which was beyond what normal CD-ROM were able to provide (700 MiB).&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/dreamcast_hacking/ikaruga_gdrom.png&quot; type=&quot;image/png&quot; width=&quot;20%&quot;/&gt;&lt;img src=&quot;http://fabiensanglard.net/dreamcast_hacking/gd-rom.svg&quot; width=&quot;20%&quot;/&gt;A GD-ROM had the same physical dimensions as a CD-ROM but at the macro level it was made of two areas visible with naked eyes.&lt;/p&gt;&lt;p&gt;The first (dark) section was a low density, CD-ROM compatible, area holding up to 35 MiB. It contained a voiceover audio track reminding user that the content was intended for SEGA Dreamcast and not for a CD player&lt;a name=&quot;back_1&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_1&quot;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;. Developer also included a track with text files such as copyright and sometimes goodies such as artwork.&lt;/p&gt;

&lt;p&gt;The (clear) high density section storing up to 984 MiB&lt;a name=&quot;back_2&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_2&quot;&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt; is where all the game's content was located. As far as hackers were concerned, it seemed there was no way to extract the game from its support and there was no way to burn it back for distribution either.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Booting from a GD-ROM: IP.BIN and 1ST_READ.BIN&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;Before describing how pirates managed to copy games, we need to understand the boot sequence. The Dreamcast had no operating system. A common misconception is that it ran Windows CE but in fact Microsoft's OS was only an optional static library which Dreamcast developers could link against in order to use DirectX, DirectInput, and DirectSound&lt;a name=&quot;back_3&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_3&quot;&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/a&gt;. Some games used WinCE&lt;a name=&quot;back_4&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_4&quot;&gt;&lt;sup&gt;[4]&lt;/sup&gt;&lt;/a&gt; but many (like Ikaruga) did not. Regardless of what a developer used, a game was a fully-linked OS and a Dreamcast always booted in the same way.&lt;/p&gt;&lt;p&gt;Under normal usage, running an official game, a freshly powered up Dreamcast's BOOTROM started by loading the bootstrap from the GD-ROM to the RAM. Located in the last track on the GD-ROM and known in the community as &quot;IP.BIN&quot;, the tiny program was in charge of displaying SEGA's license screen and ran two bootstrap level to setup the hardware registers, create the CPU stack, and initialize the VBR&lt;a name=&quot;back_5&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_5&quot;&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;More importantly, IP.BIN contained the name of the game executable. This name was looked up in the GD-ROM file-system and loaded in RAM at 0x8C010000 before execution was transfered there. Usually the filename of the game executable was &quot;1ST_READ.BIN&quot;.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/dreamcast_hacking/gd-rom_loading.svg&quot; width=&quot;100%&quot;/&gt;&lt;br/&gt;With the CPU jumping to 0x8C010000, the game started as intended.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second protection level: Scrambler&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;The &quot;foot in the door&quot; came from a seemingly obscure capability of the Dreamcast to boot not from a GD-ROM but from a CD-ROM. Originally intended to add multimedia functions to music CDs, the functionality called &quot;MIL-CD&quot; was never used much, accounting for a mere seven karaoke applications.&lt;/p&gt;&lt;p&gt;SEGA engineers knew that MIL-CD booting could be used as an attack vector so they added a protection. When the console detected a CD-ROM, the BOOTROM loaded IP.BIN normally but scrambled 1ST_READ.BIN, seemingly at random. A valid executable was therefore turned into mashed potatoes which promptly crashed the console.&lt;br/&gt;&lt;img src=&quot;http://fabiensanglard.net/dreamcast_hacking/cd-rom_loading.svg&quot; width=&quot;100%&quot;/&gt;&lt;br/&gt;From there it looked like the console was safe. The Dreamcast was able to recognize a pirated game, corrupt the executable at load time, and defeated pirates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Give me my long sword, ho!&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;The mashed potatoes problem was solved when a Katana SDK (the official Sega SDK for the Dreamcast) was stolen&lt;a name=&quot;back_6&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_6&quot;&gt;&lt;sup&gt;[6]&lt;/sup&gt;&lt;/a&gt; by the hacking team &quot;Utopia&quot; in late 1999. It turned out that the scrambler was nothing more than &quot;security through obscurity&quot;. The SDK contained a reverse-scrambler which transformed a valid executable into reverse-mashed-potatoes so it would be valid again when loaded and scrambled by the Dreamcast when booting from a CD-ROM.&lt;br/&gt;&lt;img src=&quot;http://fabiensanglard.net/dreamcast_hacking/cd-rom_loading_reverse.svg&quot; width=&quot;100%&quot;/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extracting a game from its GD-ROM&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;The stolen SDK was all pirates needed. With the ability to run code on the machine, the Dreamcast was re-purposed to act not as a game console but as a GD-ROM drive. The SDK's &quot;Coder's Cable&quot;&lt;a name=&quot;back_7&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_7&quot;&gt;&lt;sup&gt;[7]&lt;/sup&gt;&lt;/a&gt; allowed to connect the console to a PC and establish a physical connection. To trigger the console to dump the GD track content, a special executable was written, reverse-scrambled and burned onto a CD-ROM in order to output the whole 1 GiB via the console's serial port. It was an error prone process which took up to 18 hours&lt;a name=&quot;back_8&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_8&quot;&gt;&lt;sup&gt;[8]&lt;/sup&gt;&lt;/a&gt; to complete&lt;a name=&quot;back_9&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_9&quot;&gt;&lt;sup&gt;[9]&lt;/sup&gt;&lt;/a&gt;. The result was stored in a custom made format called &quot;.gdi&quot;.&lt;/p&gt;
&lt;pre&gt;
ikaruga.gdi            153 bytes
track01.bin     13,982,640 bytes
track02.raw      2,088,576 bytes
track03.bin  1,185,760,800 bytes
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Trivia&lt;/strong&gt;: You will notice that the total account for 1.2 GiB and not the 1.0 GiB mentioned earlier. This is because GD-ROM 2,352-byte sectors follow the &quot;Red Book&quot; format where 12 bytes are used for synchronization, 4 bytes for the header, 2048 bytes for the payload, and 288 bytes are for Error Detection Code/Error Correcting Code&lt;a name=&quot;back_10&quot; href=&quot;http://fabiensanglard.net/dreamcast_hacking/#footnote_10&quot;&gt;&lt;sup&gt;[10]&lt;/sup&gt;&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
$ cat ikaruga.gdi 
3
1     0 4 2352 track01.bin 0
2  5945 0 2352 track02.raw 0
3 45000 4 2352 track03.bin 0
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Making a 1000 MiB GD-ROM fit inside a 700 MiB CD-ROM&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;To make the game fit on a 700 MiB CD-ROM, game's assets were reworked. The ISO-9660 file-system used on GD-ROM made it easy to down-sample/remove video sequences and musics. For most games however there was no need for such a complicated process since they did not use the whole 1 GiB space. For example, Treasure's Ikaruga was only 150 MiB and padded most of its content with zeros. In these cases, only adjusting the padding was enough.&lt;/p&gt;&lt;p&gt;In fact, ISO-9660 is such a well-known format that simple python scripts (such as &lt;a href=&quot;https://sourceforge.net/projects/dcisotools/&quot;&gt;gditools.py&lt;/a&gt;) were written to &lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/gditools.txt&quot;&gt;explore&lt;/a&gt; the content of .gdi archives.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Packing and Distribution&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;The last two steps of the process were to reverse-scramble 1ST_READ.BIN and pack everything into a .cdi archive so &lt;a href=&quot;https://legacy.padus.com/&quot;&gt;DiscJuggler&lt;/a&gt; could burn the image on a CD-R. The result ran flawlessly on any vanilla Dreamcast without need for a modification chip.&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Response from SEGA and after-match&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;SEGA quickly released a DC v2 which disabled MIL-CD altogether but unfortunately damage had been done. With revenues plummeting and the PS2 ogre coming out, developers abandoned the Dreamcast and SEGA retired from the hardware manufacturing business in order to focus on software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_1&quot;&gt;^&lt;/a&gt; [1] Source: &lt;a href=&quot;https://www.consolecopyworld.com/dc/gd-ws/gdws_big/sld009.htm&quot;&gt;SEGA GD Workshop&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_2&quot;&gt;^&lt;/a&gt; [2] Source: &lt;a href=&quot;https://segaretro.org/GD-ROM&quot;&gt;segaretro.org: GD-ROM&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_3&quot;&gt;^&lt;/a&gt; [3] Source: &lt;a href=&quot;https://news.microsoft.com/1999/03/16/microsoft-announces-windows-ce-toolkit-for-dreamcast/&quot;&gt;Microsoft Announces Windows CE Toolkit for Dreamcast&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_4&quot;&gt;^&lt;/a&gt; [4] Source: &lt;a href=&quot;https://segaretro.org/Windows_CE&quot;&gt;Dreamcast games utilising Windows CE&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_5&quot;&gt;^&lt;/a&gt; [5] Source: &lt;a href=&quot;http://mc.pp.se/dc/ip.bin.html&quot;&gt;IP.BIN and 1ST_READ.BIN&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_6&quot;&gt;^&lt;/a&gt; [6] Source: &lt;a href=&quot;https://www.neogaf.com/threads/lets-build-a-sega-dreamcast-game-from-scratch-breakout.916501/page-3#post-216433495&quot;&gt;Let's build a Sega Dreamcast game from scratch&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_7&quot;&gt;^&lt;/a&gt; [7] Source: &lt;a href=&quot;http://mc.pp.se/dc/serifc.html&quot;&gt;PC Serial Adaptor&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_8&quot;&gt;^&lt;/a&gt; [8] Source: &lt;a href=&quot;https://www.reddit.com/r/dreamcast/comments/15pww3/a_more_accurate_and_indepth_look_at_the/&quot;&gt;A more accurate and in-depth look at the Dreamcast's security&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_9&quot;&gt;^&lt;/a&gt; [9] Source: &lt;a href=&quot;https://assemblergames.com/threads/dumping-dreamcast-gd-rom-gd-r-discs.16679/&quot;&gt;Faster ways were designed latter, using the DC's broadband connector&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/dreamcast_hacking/#back_10&quot;&gt;^&lt;/a&gt; [10] Source: &lt;a href=&quot;https://xiaopang333.wordpress.com/2008/08/06/dreamcast-myth-gd-rom-storage-capacity/&quot;&gt;Dreamcast Myth: GD-ROM Storage Capacity&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;center&gt;*&lt;/center&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 11 Dec 2018 09:47:53 +0000</pubDate>
<dc:creator>fafner</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://fabiensanglard.net/dreamcast_hacking/</dc:identifier>
</item>
<item>
<title>Why I&amp;#039;m usually unnerved when modern SSDs die on us</title>
<link>https://utcc.utoronto.ca/~cks/space/blog/tech/SSDDeathDisturbing</link>
<guid isPermaLink="true" >https://utcc.utoronto.ca/~cks/space/blog/tech/SSDDeathDisturbing</guid>
<description>&lt;p&gt;Tonight, one of the SSDs on &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/sysadmin/ThirdGenFileserverHardware&quot;&gt;our new Linux fileservers&lt;/a&gt; died. It's not the first SSD death we've seen and probably not the last one, but as almost always, I found it an unnerving experience because of a combination of how our SSDs tend to die, how much of a black box they are, and how they're solid-state devices.&lt;/p&gt;
&lt;p&gt;Like most of the SSDs deaths that we've had, this one was very abrupt; the drive went from perfectly fine to completely unresponsive in at most 50 seconds or so, with no advance warning in SMART or anything else. One moment it was serving read and write IO perfectly happily (from all external evidence, and ZFS wasn't complaining about read checksums) and the next moment there was no Crucial MX300 at that SAS port any more. Or at least at very close to the next moment.&lt;/p&gt;
&lt;p&gt;(The first Linux kernel message about failed IO operations came at 20:31:34 and the kernel seems to have declared the drive officially vanished at 20:32:15. But the actual drive may have been unresponsive from the start; the driver messages aren't clear to me.)&lt;/p&gt;
&lt;p&gt;What unnerves me about these sorts of abrupt SSD failures is how inscrutable they are and how I can't construct a story in my head of what went wrong. With spinning HDs, drives might die abruptly but you could at least construct narratives about what could have happened to do that; perhaps the spindle motor drive seized or the drive had some other gross mechanical failure that brought everything to a crashing halt (perhaps literally). SSDs are both solid state and opaque, so I'm left with no story for what went wrong, especially when a drive is young and isn't supposed to have come anywhere near wearing out its flash cells (as this SSD was).&lt;/p&gt;
&lt;p&gt;(When a HD died early, you could also imagine undetected manufacturing flaws that finally gave way. With SSDs, at least in theory that shouldn't happen, so early death feels especially alarming. Probably there are potential undetected manufacturing flaws in the flash cells and so on, though.)&lt;/p&gt;
&lt;p&gt;When I have no story, my thoughts turn to unnerving possibilities, like that the drive was lying to us about how healthy it was in SMART data and that it was actually running through spare flash capacity and then just ran out, or that it had a firmware flaw that we triggered that bricked it in some way.&lt;/p&gt;
&lt;p&gt;(We had one SSD fail in this way and then come back when it was pulled out and reinserted, apparently perfectly healthy, which doesn't inspire confidence. But that was a different type of SSD. And of course &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/tech/SMARTAlarmingFlakyErrors&quot;&gt;we've had flaky SMART errors with Crucial MX500s&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Further, when I have no narrative for what causes SSD failures, it feels like every SSD is an unpredictable time bomb. Are they healthy or are they going to die tomorrow? It feels like I really have to hope in statistics, namely that not too many will fail not too fast before they can be replaced. And even that hope relies on an assumption that failures are uncorrelated, that what happened to this SSD isn't likely to happen to the ones on either side of it.&lt;/p&gt;
&lt;p&gt;(This isn't just an issue in our fileservers; it's also something I worry about for the SSDs in my home machine. All my data is mirrored, but what are the chances of a dual SSD failure?)&lt;/p&gt;
&lt;p&gt;In theory I know that SSDs are supposed to be much more reliable than spinning rust (and we have lots of SSDs that have been ticking along quietly for years). But after mysterious abrupt death failures like this, it doesn't feel like it. I really wish we generally got some degree of advance warning about SSDs failing, the way we not infrequently did with HDs (for instance, &lt;a href=&quot;https://utcc.utoronto.ca/~cks/space/blog/sysadmin/LazinessSometimesBackfires&quot;&gt;with one HD in my office machine&lt;/a&gt;, even though I ignored its warnings).&lt;/p&gt;
</description>
<pubDate>Tue, 11 Dec 2018 07:31:33 +0000</pubDate>
<dc:creator>stargrave</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://utcc.utoronto.ca/~cks/space/blog/tech/SSDDeathDisturbing</dc:identifier>
</item>
<item>
<title>Just tell me how to use Go Modules</title>
<link>https://www.kablamo.com.au/blog-1/2018/12/10/just-tell-me-how-to-use-go-modules</link>
<guid isPermaLink="true" >https://www.kablamo.com.au/blog-1/2018/12/10/just-tell-me-how-to-use-go-modules</guid>
<description>&lt;div class=&quot;sqs-layout sqs-grid-12 columns-12&quot; data-layout-label=&quot;Post Body&quot; data-type=&quot;item&quot; data-updated-on=&quot;1544428320240&quot; id=&quot;item-5c0e19f1f950b74959d85d86&quot;&gt;
&lt;div class=&quot;row sqs-row&quot;&gt;
&lt;div class=&quot;col sqs-col-12 span-12&quot;&gt;
&lt;div class=&quot;sqs-block image-block sqs-block-image&quot; data-block-type=&quot;5&quot; id=&quot;block-yui_3_17_2_1_1544428038759_20097&quot;&gt;
&lt;div class=&quot;sqs-block-content&quot;&gt;
&lt;div class=&quot;image-block-outer-wrapper layout-caption-below design-layout-inline combination-animation-none individual-animation-none individual-text-animation-none&quot;&gt;
&lt;div class=&quot;intrinsic&quot;&gt;
&lt;div class=&quot;image-block-wrapper has-aspect-ratio&quot; data-description=&quot;&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://static1.squarespace.com/static/5962c776e58c62cb70338206/t/5c0e1ad9032be4548e797729/1544428309045/Screen+Shot+2018-12-10+at+6.50.40+pm.png&quot; alt=&quot;Screen Shot 2018-12-10 at 6.50.40 pm.png&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;thumb-image&quot; alt=&quot;Screen Shot 2018-12-10 at 6.50.40 pm.png&quot; data-src=&quot;https://static1.squarespace.com/static/5962c776e58c62cb70338206/t/5c0e1ad9032be4548e797729/1544428309045/Screen+Shot+2018-12-10+at+6.50.40+pm.png&quot; data-image=&quot;https://static1.squarespace.com/static/5962c776e58c62cb70338206/t/5c0e1ad9032be4548e797729/1544428309045/Screen+Shot+2018-12-10+at+6.50.40+pm.png&quot; data-image-dimensions=&quot;689x228&quot; data-image-focal-point=&quot;0.5,0.5&quot; data-load=&quot;false&quot; data-image-id=&quot;5c0e1ad9032be4548e797729&quot; data-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sqs-block html-block sqs-block-html&quot; data-block-type=&quot;2&quot; id=&quot;block-f2b06330fcde11c04d0d&quot;&gt;
&lt;div class=&quot;sqs-block-content&quot;&gt;
&lt;p&gt;I recently started using Go’s new inbuilt vendoring tool, Go Modules, and having come from both govendor and dep, this new tool was more of a change than I expected. &lt;/p&gt;
&lt;p&gt;I’m a fan of quick guides – just tell me what to do so I can start using it now. I don’t need an essay on why I should be using it or painful detail on the tool’s inner workings.&lt;/p&gt;
&lt;p&gt;Unfortunately, a quick guide like this doesn’t seem to exist, so I’m writing one here. You’re welcome.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Put your code somewhere other than the gopath&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You can technically use Go Modules inside the gopath, but you’ll have to manually set GO111MODULES=on in your environment variables. &lt;/p&gt;
&lt;p&gt;That being said, the whole point of modules is to not have to put your code in the gopath, so don’t do that.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Initialise Go Modules&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Run this command in your go project:&lt;/p&gt;
&lt;p&gt;go mod init &amp;lt;modulename&amp;gt;&lt;/p&gt;
&lt;p&gt;‘Module name’ is whatever you want to call your module. This name should be fairly unique, because if you have module name clashes you’re gonna have a bad time. &lt;/p&gt;
&lt;p&gt;This creates a go.mod file, which you don’t need to touch.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Use go get to add the dependencies to the go.mod file&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Just run this:&lt;/p&gt;
&lt;p&gt;go get -u ./...&lt;/p&gt;
&lt;p&gt;This will add all of your project’s current dependencies to the go.mod file and create a go.sum file. You don’t need to touch that file either. &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Vendor those dependencies&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Run this:&lt;/p&gt;
&lt;p&gt;go mod vendor&lt;/p&gt;
&lt;p&gt;This will create a vendor folder and add copies of each dependency listed in your go.mod file to that folder. This folder also can’t be edited, so again, there’s no need to touch it. &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Update a dependency&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Just run:&lt;/p&gt;
&lt;p&gt;go get -u &amp;lt;repo url&amp;gt;&lt;/p&gt;
&lt;p&gt;go mod vendor&lt;/p&gt;
&lt;p&gt;This will update the dependency version in the go.mod file, and then update the code in your vendor folder for that dependency.&lt;/p&gt;
&lt;p&gt;This should be enough for you to get up and running with Go Modules on your go project.&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 11 Dec 2018 03:53:19 +0000</pubDate>
<dc:creator>boyter</dc:creator>
<og:title>Just tell me how to use Go Modules</og:title>
<og:url>https://www.kablamo.com.au/blog-1/2018/12/10/just-tell-me-how-to-use-go-modules</og:url>
<og:type>article</og:type>
<og:description>I recently started using Go’s new inbuilt vendoring tool, Go Modules, and having come from both govendor and dep, this new tool was more of a change than I expected.&amp;nbsp; I’m a fan of quick guides – just tell me what to do so I can start using it now. I don’t need an essay on why I should be u</og:description>
<og:image>http://static1.squarespace.com/static/5962c776e58c62cb70338206/t/5c0e1ad9032be4548e797729/1544428309045/Screen+Shot+2018-12-10+at+6.50.40+pm.png?format=1500w</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.kablamo.com.au/blog-1/2018/12/10/just-tell-me-how-to-use-go-modules</dc:identifier>
</item>
</channel>
</rss>