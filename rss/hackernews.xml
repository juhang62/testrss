<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Executive order expected to suspend H-1B, other visas until end of year</title>
<link>https://www.npr.org/2020/06/20/881245867/trump-expected-to-suspend-h-1b-other-visas-until-end-of-year</link>
<guid isPermaLink="true" >https://www.npr.org/2020/06/20/881245867/trump-expected-to-suspend-h-1b-other-visas-until-end-of-year</guid>
<description>&lt;div id=&quot;res881252020&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/06/20/ap_17109534945371-fe7ee6859becbd8f05512803071629401a821b8a-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/06/20/ap_17109534945371-fe7ee6859becbd8f05512803071629401a821b8a-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;President Trump speaks before signing an executive order to tighten the rules for technology companies seeking to bring highly skilled foreign workers to the U.S. in 2017, at Snap-on Tools in Kenosha, Wis. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Kiichiro Sato/AP&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Kiichiro Sato/AP&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2020/06/20/ap_17109534945371-fe7ee6859becbd8f05512803071629401a821b8a-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;President Trump speaks before signing an executive order to tighten the rules for technology companies seeking to bring highly skilled foreign workers to the U.S. in 2017, at Snap-on Tools in Kenosha, Wis.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Kiichiro Sato/AP&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;President Trump is expected to sign an order as soon as Saturday to suspend H-1B, L-1 and other temporary work visas through the end of the year, according to the multiple sources familiar with the plan.&lt;/p&gt;
&lt;p&gt;The new order — which is expected to come with broad exceptions — comes as the administration continues to wrestle with high unemployment among American workers because of the coronavirus pandemic as well as kick-start the economic recovery.&lt;/p&gt;
&lt;p&gt;The order would target H-1B visas, which are designed for certain skilled workers such as those employed in the tech industry, as well as L-1 visas, which are meant for executives who work for large corporations.&lt;/p&gt;
&lt;p&gt;The executive action is also expected to suspend H-2B visas for seasonal workers such as hotel and construction staff; J-1 visas, which are meant for research scholars and professors and other cultural and work-exchange programs. Trump could renew the suspensions when they lapse. The order is not expected to immediately affect anyone already in the United States.&lt;/p&gt;
&lt;p&gt;&quot;No matter how you slice it, this is shaping up to be a big win for American workers at a critical time,&quot; said RJ Hauman, government relations director at the Federation for American Immigration Reform, which advocates for lower levels of immigration. FAIR had called on Trump to suspend guest worker visas.&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;&quot;We have some concern over potential abuse of broadly written exceptions, but there is still time for that to be addressed, both now and during implementation,&quot; Hauman said.&lt;/p&gt;
&lt;p&gt;The White House did not immediately respond to questions about the plans.&lt;/p&gt;
&lt;p&gt;If signed, it would be the latest restriction on immigration imposed by the Trump administration since the beginning of the coronavirus pandemic earlier this year.&lt;/p&gt;
&lt;p&gt;In May, Trump issued a temporary halt on new green cards but stopped short of suspending guest-worker programs amid concerns from the business community.&lt;/p&gt;
&lt;p&gt;Negotiations are ongoing in the latest order over various exceptions, including whether au pairs should be included, and changes could still occur before Trump signs the measure, which could happen imminently. But plans for the order have already raised significant concerns among business and industry groups, as well as universities who depend on foreign workers and scholars.&lt;/p&gt;
&lt;p&gt;&quot;The ban on H-1B visas, which are often used to fill very niche positions that are not easily found in the American workforce, will ultimately prove to be counterproductive and is an example of using a nuclear bomb to address a bar fight,&quot; said Leon Fresco, a former deputy assistant attorney general in the Obama administration who now represents H-1B workers.&lt;/p&gt;
&lt;p&gt;The order does include many exceptions.&lt;/p&gt;
&lt;p&gt;It does not apply to H-2A agriculture workers who Trump says are necessary to ensure grocery store shelves remain stocked with fruits and vegetables. Health care workers involved in treating coronavirus patients would also be exempt.&lt;/p&gt;
&lt;p&gt;The order would make broad exceptions for travel in the national interest, including in the areas of economics, public health and national security. The U.S. State Department will review and approve these applications on a case-by-case basis.&lt;/p&gt;
&lt;p&gt;In 2018, the Trump administration &lt;a href=&quot;https://www.npr.org/sections/thetwo-way/2018/02/23/588469561/trump-administration-restricts-h-1b-worker-visas-coveted-by-high-tech&quot;&gt;first tightened rules&lt;/a&gt; for companies that contract out high-skilled workers who are in this country on H-1B visas. The visas themselves have become controversial. U.S. companies use them to hire highly skilled foreign workers in situations in which they say there is a shortage of U.S.-born talent.&lt;/p&gt;
&lt;p&gt;The visas are good for three years and renewable for another three-year term. &lt;a href=&quot;http://www.wbur.org/bostonomix/2017/02/23/h1b-visas-debate&quot;&gt;Critics&lt;/a&gt; of the visas — 85,000 of which are issued every year — say American workers are aced out of competition with workers who can be paid less.&lt;/p&gt;
</description>
<pubDate>Sat, 20 Jun 2020 18:17:24 +0000</pubDate>
<dc:creator>augustocallejas</dc:creator>
<og:title>Trump Expected To Suspend H-1B, Other Visas Until End Of Year</og:title>
<og:url>https://www.npr.org/2020/06/20/881245867/trump-expected-to-suspend-h-1b-other-visas-until-end-of-year</og:url>
<og:type>article</og:type>
<og:description>The new order, which could be signed as soon as Saturday, comes as the administration wrestles with how to protect unemployed American workers as well as kick-start the economic recovery.</og:description>
<og:image>https://media.npr.org/assets/img/2020/06/20/ap_17109534945371_wide-d41ed31b8440594ebbca7dcc30c157b4e3fe5d83.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2020/06/20/881245867/trump-expected-to-suspend-h-1b-other-visas-until-end-of-year</dc:identifier>
</item>
<item>
<title>Why Figma Wins</title>
<link>https://kwokchain.com/2020/06/19/why-figma-wins/</link>
<guid isPermaLink="true" >https://kwokchain.com/2020/06/19/why-figma-wins/</guid>
<description>&lt;p&gt;Companies are a sequencing of loops. While it’s possible to stumble into an initial core loop that works, the companies that are successful in the long term are the ones that can repeatedly find the next loop. However, this evolution is poorly understood relative to its existential impact on a company’s trajectory. &lt;a href=&quot;http://figma.com/&quot;&gt;Figma&lt;/a&gt; is a prime example of sequencing loops. They’re now widely viewed as successful, but the key factors in their success and what bets they must make to get to the next level are less widely understood.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/loops-2.gif?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-421&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
bet you didn’t know I could make gifs&lt;/div&gt;
&lt;p&gt;The core insight of Figma is that design is larger than just designers. Design is all of the conversations between designers and PMs about what to build. It is the mocks and prototypes and the feedback on them. It is the handoff of specs and assets to engineers and how easy it is for them to implement them. Building for this entire process doesn’t take away the importance of designers—it gives them a seat at the table for the core decisions a company makes.&lt;/p&gt;
&lt;p&gt;Building for everyone in the design process and not &lt;em&gt;just&lt;/em&gt; designers is also the foundation of Figma’s core loop, which drives their growth and compounding scale. That network effect is made possible by Figma’s key early choices like: &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Architecting Figma to be truly browser-first, instead of just having storage be in the cloud&lt;/li&gt;
&lt;li&gt;Their head start in new technologies like WebGL and CRDTs that made this browser-first approach possible&lt;/li&gt;
&lt;li&gt;Focusing on a product purpose built for those designing vector based digital products&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Figma’s compounding growth is not only due to product market fit, but is also driven by the alignment between their product and distribution. There are limits to Figma’s success if it remains only valued and spread within companies. In order to break through that asymptote, Figma must build a global network effect across the ecosystem. Figma’s value to new users should compound as Figma’s adoption grows, even for solo users outside of organizations. Figma has begun making its bets on how it will become a platform—namely centered around communities and plugins. While it’s still early, these bets can be unpacked and understood. &lt;/p&gt;
&lt;p&gt;Many companies are now at this inflection point. They have found success with their core product and are trying to push themselves to the next level of value to customers and scale. Our understanding of building platforms and sequencing towards them is still nascent. From how to shift the allocation of resources between a company’s core business and its potential future expansions to how to structure a platform to catalyze its growth and more. Until the playbook is well understood, it is more art than science. There are many decisions to make, including which layers should be centralized, whether the ecosystem should be driven by open source contributors or profit-seeking enterprises, how broad in scope to allow the ecosystem to grow and where to not let it grow, and more.&lt;/p&gt;
&lt;p&gt;Whether they can catalyze compounding productivity in design is a core question for the coming years. Engineering is one field that has exhibited significant compounding progress over time. Whether Figma’s bets in building out global network effects will be able to push this level of progress in design will be an important question to watch.&lt;/p&gt;
&lt;h2&gt;The Arc of Collaboration&lt;/h2&gt;
&lt;p&gt;When Figma first launched, its value proposition was primarily around making design collaborative. If design could happen in the browser, then designers could work together on the same projects. In fact, they could even work on a design at the same time.&lt;/p&gt;
&lt;p&gt;In 2014 as I helped diligence Figma &lt;em&gt;(disclaimer: I worked on Greylock’s investment in Figma, but I don’t have a personal stake in Figma. sadly.)&lt;/em&gt;, I used to sit with designers at startups and watch them work. The top right corner of their screens were always a nonstop cycle of Dropbox notifications. Because design teams saved all their files in a shared folder like Dropbox, every time a coworker made a revision they would get a notification. And often there were complex naming conventions to make sure that people were using the right versions.&lt;/p&gt;
&lt;p&gt;Figma solved this problem. Designs in Figma are not just stored in the cloud; they are edited in the cloud, too. This means that Figma users are always working on the same design. With Dropbox, this isn’t true. The files may be stored in the cloud, but the editing happens locally—imagine the difference between sharing Word files in Dropbox vs. editing in Google Docs.&lt;/p&gt;
&lt;p&gt;Any time a user edits a design, they are in effect checking out a temporary copy. This is why two users editing a file simultaneously creates issues. When designs are edited with Figma, there are no conflicts. And since revisions are a first party feature of each design in Figma, there’s no need to have complex files with names like “profile_design_v23_final_draft2”. Similarly, designers can comment directly in each other’s files, instead of sending emails with feedback.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.1-merged.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-385&quot; srcset=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.1-merged.png?w=800&amp;amp;ssl=1 800w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.1-merged.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.1-merged.png?resize=768%2C269&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
the one with less loops is better. I know, it’s the first time I’ve ever said that
&lt;p&gt;I used to be confused by the Figma’s team consistent framing of Figma as browser-first. What was the distinction between this and cloud-first? Over time I’ve come to see how important this distinction has been. When many creative tools companies talk about the cloud, they seem to view it as an amorphous place that they store files. But the fundamental user experience of creating in their products is done via a standalone app on the desktop. Figma is browser-first, which was made possible (and more importantly performant) by their understanding and usage of new technologies like WebGL, Operational Transforms, and CRDTs.&lt;/p&gt;
&lt;p&gt;From a user’s perspective, there are no files and no syncing that needs to be done with others editing a design. The actual *experience* of designing in Figma is native to the internet. Even today, competitors often talk about cloud, but are torn over how *much* of the experience to port over to the internet. Hint: “all of it” is the correct answer that they all eventually will converge on.&lt;/p&gt;
&lt;p&gt;Designers loved Figma and this drew initial distribution. And with features like team libraries, designers have incentive to pull in other designers on their team into Figma. But a tool designers love, while a prerequisite for success, does not fully capture the root of Figma’s traction so far. While Figma has been building the ideal tool for designers, they’ve actually built something more important: a way for non-designers to be involved in the design process.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.3-merged.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-386&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.3-merged.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.3-merged.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/01.3-merged.png?resize=768%2C269&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
having to slide into the DMs is bad&lt;/div&gt;
&lt;h3&gt;Tools for Design, not just Designers&lt;/h3&gt;
&lt;p&gt;While Figma was building better tools for designers, their browser-first approach had a much more radical and significant impact on non-designers.&lt;/p&gt;
&lt;p&gt;We often forget that the purpose of the tools we use at work isn’t to increase our individual productivity, but the entire team’s productivity. Companies themselves often forget this.&lt;/p&gt;
&lt;p&gt;The best tool for individuals may &lt;em&gt;also&lt;/em&gt; be the best for the entire team. But it’s the latter that matters. And beyond some level of enhancing individual productivity, it’s the team aspects that increasingly matter. Word processing is a good example of this. There used to be lots of experimentation and customization around individual features like typesetting. But once this was good enough, the focus has shifted towards collaboration. And for most use cases, few care about typesetting today. Increasingly our tools must understand and align with how we collaborate. This was less important when collaboration was logistically difficult and prohibitively costly, but as collaboration becomes easier its importance has risen. People’s work is less siloed—and their tools must reflect this.&lt;/p&gt;
&lt;p&gt;The best tools enable collaboration that was previously unthinkable.&lt;/p&gt;
&lt;p&gt;Historically it has been very difficult for non-designers to be involved *during* the design process. If PMs, engineers, or even the CEO wanted to be involved, there were many logistical frictions. If they wanted the full designs, the designer would need to send them the current file. They’d then need to not only download it, but also make sure they had the right Adobe product or Sketch installed on their computer—costly tools that were hard to justify for those who didn’t design regularly. And these tools were large, slow, specialized programs that were unwieldy for those not familiar with using them. It was hard to navigate a project without a designer to walk you through it. Comments were done out of band in separate emails. Even worse, if a designer made an update before viewers had finished looking at the file, the file would be out of date—without the viewer being aware.&lt;/p&gt;
&lt;p&gt;The experience was just as bad for designers. Even if they wanted their PMs and engineers to give feedback, they’d need to handhold them through the process. Designers would have to export the designs into images, send the screenshot, and later figure out how to translate the feedback into changes in the actual design. The feedback loop was so slow that they’d need to pause their process while waiting for feedback.&lt;/p&gt;
&lt;p&gt;Of course, what really happened is that most of the time non-designers just didn’t engage as much with the design process. The pain of reviewing designs wasn’t the primary problem, but there was enough friction that reviewing often never happened.&lt;/p&gt;
&lt;p&gt;Figma fixed this.&lt;/p&gt;
&lt;p&gt;Sharing designs with Figma is as easy as sending a link. Anyone can open it directly in their browser. It’s as easy as going to a website, because…well…it literally is going to a website.&lt;/p&gt;
&lt;p&gt;Once they have the link, non-designers will always have the latest design. They can comment directly in the designs, without disrupting the flow of designers. And with collaborative editing, they can talk through changes in a meeting and watch as they are implemented in real time.&lt;/p&gt;
&lt;p&gt;These technical changes are kindling for a far more important social norm shift. Figma makes it possible for non-designers to be part of the process earlier and throughout it all.&lt;/p&gt;
&lt;p&gt;Figma made companies realize that non-designers should and could be more involved in the design process and how crazy it is that other design tools aren’t built with the experience of and interactions with non-designers in mind.&lt;/p&gt;
&lt;h3&gt;Tightening the Feedback Loop&lt;/h3&gt;
&lt;p&gt;Figma allows closer collaboration between designers and non-designers, but the second order impact of this on the social norms of teams is far more impactful. Historically, there has been so much friction in the design process that design is brought in &lt;em&gt;after&lt;/em&gt; most decisions have been made. And conversely, there is a limited set of changes non-designers can push for once the design is set.&lt;br/&gt;Tightening the feedback loop of collaboration allows for non-linear returns on the process. Design can be drafted &lt;em&gt;simultaneously&lt;/em&gt; with the product, allowing feedback to flow in both directions throughout the process. Aligning the assets used by design and engineering allow more seamless handoffs, and allows for more lossless and iterative exchange.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-387&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image.png?w=800&amp;amp;ssl=1 800w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image.png?resize=768%2C269&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
it’s Figmas all the way down
&lt;p&gt;Designers can get feedback continuously from engineers or PMs on their team. Some will have sensitivities about non-designers sticking their nose too deep into the design process. In some cases they might be right, but this cost pales in comparison to the benefit to designers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bringing non-designers into the process is what gives designers a seat at the table of product and business decisions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For too long we’ve systematically siloed functional areas like design, sales, and customer service. But modern companies are internalizing that if their core loops are truly an iterative process, then functions like design must themselves be part of the feedback loop of the company. Design decisions cannot be entirely abstracted from the rest of a business—they are as intertwined as the decisions made in product and engineering.&lt;/p&gt;
&lt;p&gt;Historically, design has been opaque as a business unit due to the logistical and technical difficulties of making the design process legible to others. But as these hurdles are increasingly solved by companies like Figma, we’re seeing teams navigate how to best integrate design with the rest of a company’s processes. This should be no surprise, as we have seen the same arc play out in engineering over the last few decades.&lt;/p&gt;
&lt;h2&gt;Means of Ascent&lt;/h2&gt;
&lt;p&gt;Much of Figma’s current success is driven by its ability to spread within companies. Figma becomes more useful as more people within a company use it, driving advantaged speed and scale of penetration within companies.&lt;/p&gt;
&lt;p&gt;Figma was quick to recognize that the constraints on design at companies is often not a problem of pixels, but of people.&lt;/p&gt;
&lt;p&gt;Many of Figma’s competitors are great tools for designers. But that’s who they are for—designers.&lt;/p&gt;
&lt;p&gt;Figma is a tool for teams to design. Not for designers alone.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/04.1-means-of-ascent-merged.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-388&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/04.1-means-of-ascent-merged.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/04.1-means-of-ascent-merged.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/04.1-means-of-ascent-merged.png?resize=768%2C269&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
now you’re all stuck inside the orange box with me&lt;/div&gt;
&lt;p&gt;By bringing both designers and non-designers alike into Figma, they create a cross-side network effect. In a direct network effect, a homogenous group gets more value from a product as more of them join. In contrast, a cross-side network effect involves two (or more) distinct groups that grow in size and value as the other group does, too.&lt;/p&gt;
&lt;p&gt;Figma’s cross-side network effect between designers and non-designers is one of the primary and under-appreciated sources of their compounding success over the last few years.&lt;/p&gt;
&lt;p&gt;As more designers use Figma, they pull in the non-designers they work with. Similarly, as these non-designers use Figma, they encourage the other designers they work with to use Figma. It’s a virtuous circle and a powerful compounding loop.&lt;/p&gt;
&lt;h3&gt;Cross-side Network Effects&lt;/h3&gt;
&lt;p&gt;Cross-side network effects often get less attention than direct network effects—partially because our vocabulary around network effects is less robust than it should be, but primarily because they are typically viewed as being specific to marketplaces. While it’s true that cross-side network effects are most commonly seen in marketplaces, it’s wrong to think that they &lt;em&gt;only&lt;/em&gt; exist in marketplaces. Supply and demand is the most famous of cross-side network effects, but not the sole source.&lt;/p&gt;
&lt;p&gt;Figma’s direct network effect among designers helped it grow early on, but has limits on its ability to help Figma spread. The set of designers that a designer works with directly is a limited set—and unlikely to change often. While they may spread it via word of mouth and social referral to many other designers, the network effect has an asymptote on distribution.&lt;/p&gt;
&lt;p&gt;Figma’s cross-side network effect offers an additional vector. Designers who use Figma share their designs with engineers and PMs, introducing them to Figma. As these non-designers learn to appreciate Figma, they then evangelize it to other teams of designers they work with on different projects. These cross-side network effects jump across teams and help Figma metastasize throughout entire organizations.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/05.1-cross-side-network-effects-merged.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-389&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/05.1-cross-side-network-effects-merged.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/05.1-cross-side-network-effects-merged.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/05.1-cross-side-network-effects-merged.png?resize=768%2C269&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
more loops is better. Phew, all is right with the world&lt;/div&gt;
&lt;p&gt;This impacts monetization and purchasing at companies. Paying for a new design tool because it has new features for designers may not be a top priority. But if product managers, engineers, or even the CEO herself think it matters for the business as a whole—that has much higher priority and pricing leverage.&lt;/p&gt;
&lt;h3&gt;Product-Distribution Fit&lt;/h3&gt;
&lt;p&gt;It’s this cross-side network effect that has most shaped Figma’s growth. Like planting seeds, Figma can start small with a scattering of individuals using it at each company—but each of them can lead to serious expansion throughout their companies. Once Figma is adopted by a few designers, all their colleagues across departments get exposed to the product and especially its collaborative features and see how much better the experience is for them. They then encourage its usage and adoption across their other teams and projects and so on.&lt;/p&gt;
&lt;p&gt;This is what gives Figma the compounding growth rate it has. While it took Figma some time to ramp up its growth, there is now a predictability and compounding that is impressive.&lt;/p&gt;
&lt;p&gt;The core of Figma’s product &lt;em&gt;is&lt;/em&gt; the core of its distribution loop. That is incredibly rare and powerful. True alignment between product and core distribution loops is what’s needed to catalyze outlier ability to compound in growth.&lt;/p&gt;
&lt;p&gt;Like many of their peers in this generation of companies, Figma has developed a two-step sales motion: landing and expanding via a bottom-up, product-driven approach, then doing top-down sales once usage of the product has metastasized. Preparing for this entails a whole slew of enterprise features, building up the sales machine, and much more. Over the last few years Figma has begun to build these out, though there is still a lot of work for them to do here.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/06.2-product-distribution.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-390&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/06.2-product-distribution.png?w=800&amp;amp;ssl=1 800w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/06.2-product-distribution.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/06.2-product-distribution.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
yo dawg, I heard you liked loops…&lt;/div&gt;
&lt;p&gt;This new type of enterprise companies is a mix of both product and growth-driven consumer and sales-driven enterprise. We are still early when it comes to companies understanding how to re-architect their org structure, GTM motion, pricing model, and more to best fit this model. And like SaaS before it, this bottom-up to top-down model will mature from art to science over the coming years. Though Figma has significant work to do to make their traditional enterprise sales process robust, it would be disappointing if they stopped at simply recreating the traditional enterprise sales process. Practitioners are starting to understand that these sales loops can be understood in the same way growth loops have been and that there are ways to drive significantly advantaged sales velocity and scale via product and ops. Figma is one of the companies on the frontier of this, and there is an entirely different series of essays to be written about the maturation of this nascent field.*&lt;/p&gt;
&lt;h2&gt;Building an Ecosystem&lt;/h2&gt;
&lt;p&gt;Where does Figma go next?&lt;/p&gt;
&lt;p&gt;There is always more to improve in the core product. But there comes a time when companies need to start thinking about the next sequence of their growth.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-1.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-391&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-1.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-1.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-1.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
up and to the right!&lt;/div&gt;
&lt;p&gt;The competitive landscape has also matured. Competitors are beginning to copy and encroach on Figma’s core strengths. As they converge on Figma’s views on the space, they pressure Figma to push forward. Sketch, for example, has shifted its pricing model to subscription and oriented around teams and has focused on moving more of the product into Sketch Cloud. In the last year, they’ve gone from being entirely bootstrapped to raising a venture round from Benchmark. This capital and support has fueled a more aggressive move in Figma’s direction with a strong focus on collaboration, especially bringing Sketch to the browser and building team collaboration. &lt;/p&gt;
&lt;p&gt;Adobe has made similar moves. Though powerful and widely used, Photoshop and Illustrator were not particularly specialized products for designers of digital products. In 2019, they launched Adobe XD as a direct competitor to Sketch and Figma.&lt;/p&gt;
&lt;p&gt;Figma has been focused for the last few years on its value and spread &lt;em&gt;within&lt;/em&gt; companies. Figma’s next challenge is to improve its value and spread &lt;em&gt;across&lt;/em&gt; companies in the ecosystem at large.&lt;/p&gt;
&lt;h3&gt;Global Network Effects&lt;/h3&gt;
&lt;p&gt;There are cross-side network effects that drive compounding value within companies using Figma. But how does it spread to new companies?&lt;/p&gt;
&lt;p&gt;Given Figma’s growth rate, it clearly does, but in less consciously compounding ways. Many people work across companies, especially agencies, and spread Figma to their clients. Similarly, when people leave their jobs and join new companies, they bring Figma with them. And of course, word of mouth helps spread it. These are all effective and amplified by Figma’s intrinsic collaborative benefits, but they operate on their own natural cadence.&lt;/p&gt;
&lt;p&gt;Thanks to Figma’s hard work, the value in signing up is much higher for someone whose company already uses Figma. There are already teammates to collaborate with. There are assets and design libraries specific to their company. There are components that their team has built that they can reuse.&lt;/p&gt;
&lt;p&gt;But for users who don’t have co-workers using Figma, none of this value exists. They have the single-player benefits, but no direct increased value from the hard work Figma has done to add so many new users over the years.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/08.1-global-network-effects.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-392&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/08.1-global-network-effects.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/08.1-global-network-effects.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/08.1-global-network-effects.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
life is just an endless pursuit of trying to draw charts that go up and to the right&lt;/div&gt;
&lt;p&gt;Figma’s challenge is to create not just local network effects within companies, but global network effects that make Figma more useful to all users as it grows in scale. There are many directions Figma could expand its scope*, but our focus in this piece will be on the directions they have already begun to take.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-2.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-393&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-2.png?w=801&amp;amp;ssl=1 801w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-2.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-2.png?resize=768%2C268&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 801px) 100vw, 801px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
say it together now: more loops is better!&lt;/div&gt;
&lt;p&gt;In 2019, Figma began to plant the seeds for what their ecosystem loops across companies will be. With their launch of Figma Plugins last August and Communities more recently, they are starting to push the frontier of collaboration and productivity across companies.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-3.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-394&quot; srcset=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-3.png?w=800&amp;amp;ssl=1 800w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-3.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-3.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
this is my best graphic. It’s all down and to the right from here
&lt;h3&gt;Empowering Creativity through Communities&lt;/h3&gt;
&lt;p&gt;Communities push their network orientation further by allowing users and companies to publicly share their designs.&lt;/p&gt;
&lt;p&gt;Historically, when sharing designs on sites like Dribbble, it’s often only the output image file that’s shared. It’s hard for others to see and use the full design themselves, including the layers and components that went into it. Even if the actual design is shared, the friction of opening it in whichever program and resolving any dependencies is non-trivial.&lt;/p&gt;
&lt;p&gt;Sharing Figma designs removes this friction. Anyone can instantly open a design and start using it for their own projects. This enables users to frictionlessly become creators too, not just consumers.&lt;/p&gt;
&lt;p&gt;Some designers have shared their UI kits, components, and design systems using Github. This has the right idea, but Github isn’t meant for design. Forking a repo may be frictionless in engineering—but it is not for designs. The designs must still be downloaded and loaded into your app. For design, Github is more akin to a hosting site for downloading files. In many ways Figma’s Communities are a reflection of Github’s philosophy and intent, but built with design in mind. Duplicate a shared design, and a copy is instantly saved to your workspace and ready to be edited.&lt;/p&gt;
&lt;p&gt;This frictionless process makes it easy for people to share and build upon each other’s designs. But perhaps more importantly, including the entire design is a better abstraction layer that allows for new benefits.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-4.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-395&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-4.png?w=800&amp;amp;ssl=1 800w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-4.png?resize=300%2C105&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-4.png?resize=768%2C269&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
context is king&lt;/div&gt;
&lt;p&gt;Instead of just receiving the final output, recipients can see both the underlying components and assets within a design as well as more complex interactions and animations around designs. A great example is &lt;a href=&quot;https://www.figma.com/community/file/812143143597260055&quot;&gt;this design&lt;/a&gt; shared by Figma’s design director, Noah Levin, of smart animations within Figma. By sharing the entire design with the community, others can not just see the animations—but play with and tweak the actual designs and animations directly. This makes it easier for them to learn how to use smart animations, or even just copy parts of Levin’s demo into their designs.&lt;/p&gt;
&lt;h3&gt;The Promise of Plugins&lt;/h3&gt;
&lt;p&gt;I’ve been using Figma to create very niche memes to send friends. Figma is great, but as I’ve gotten more particular I’ve begun to add colored rectangles (with rounded corners because I’m not a barbarian) behind any text to make it more readable. This is a small but annoyingly rote series of tasks to do. Recently, I discovered the plugin &lt;a href=&quot;https://www.figma.com/community/plugin/739517744595900126&quot;&gt;Substrate for Text&lt;/a&gt; which simplifies this exact process. Now I can just select the text, activate the plugin and this text background gets auto-generated instantly. This plugin is made by a designer, &lt;a href=&quot;https://www.figma.com/@Andreslav&quot;&gt;Andreslav Kozlov&lt;/a&gt;, who lives in Russia. On the other side of the world, Andreslav had felt the same problem I had, built a plugin to solve it, and shared it with the internet. And that improved the power of Figma for me, making it far easier for me to immediately spin up memes mid-conversation with friends.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/figma-meme.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-396&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/figma-meme.png?w=800&amp;amp;ssl=1 800w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/figma-meme.png?resize=300%2C204&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/figma-meme.png?resize=768%2C522&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
though maybe he should also be blamed for the increased speed with which I can troll my friends now&lt;/div&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-5.png?fit=1024%2C513&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-397&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-5.png?w=1100&amp;amp;ssl=1 1100w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-5.png?resize=300%2C150&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-5.png?resize=1024%2C513&amp;amp;ssl=1 1024w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-5.png?resize=768%2C385&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 1100px) 100vw, 1100px&quot;/&gt;&lt;/p&gt;
this isn’t how this meme is meant to be used either&lt;/div&gt;
&lt;p&gt;This is a small example of the promise of plugins. Figma’s plugins make it extensible so designers can augment their workflows, be empowered with new abilities otherwise impossible, and easily share them with others.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-6.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-398&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-6.png?w=800&amp;amp;ssl=1 800w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-6.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-6.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
i hope you appreciate the precision of my squiggles in the productivity curve&lt;/div&gt;
&lt;p&gt;Most Figma plugins today simplify tasks that would otherwise be very repetitive or painstaking. Today, companies can build private plugins to address their specific needs. For example, companies have built plugins that automatically generate dark mode designs, pull in external data and lint for common design errors, or make it easy to generate design assets in the right orientation. These plugins level up their entire teams.&lt;/p&gt;
&lt;p&gt;The real power of plugins, however, is in making them publicly available across the ecosystem. Plugins are collective progress available to all users. Whether creating &lt;a href=&quot;https://www.figma.com/community/plugin/731451122947612104/Charts&quot;&gt;charts&lt;/a&gt;, &lt;a href=&quot;https://www.figma.com/community/plugin/736458162635847353/Mapsicle&quot;&gt;custom maps&lt;/a&gt;, &lt;a href=&quot;https://www.figma.com/community/plugin/731627216655469013/Content-Reel&quot;&gt;pulling data into your designs&lt;/a&gt;, &lt;a href=&quot;https://www.figma.com/community/plugin/781354942292031141/Redlines&quot;&gt;redlining for engineering handoff&lt;/a&gt;, or &lt;a href=&quot;https://www.figma.com/community/plugin/739208439270091369/Blobs&quot;&gt;random blobs&lt;/a&gt;, plugins leverage up designers’ productivity. And plugins like &lt;a href=&quot;https://www.figma.com/community/plugin/742073255743594050/Figma-Chat&quot;&gt;Figma Chat&lt;/a&gt; show that the frontier can be pushed out even further by enabling entirely new abilities for designers.&lt;/p&gt;
&lt;p&gt;As companies scale, it becomes harder to sustain consistently increasing value to customers. With more customers, it becomes harder for one company to address all the unique use cases and needs. Companies must also increasingly service less ideal customers as they expand beyond their core audience. This is especially true for users who don’t have all the compounding benefits of working with a team that all use Figma.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-7.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-399&quot; srcset=&quot;https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-7.png?w=800&amp;amp;ssl=1 800w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-7.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i1.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-7.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
your local and global utility curves should look like synchronized divers. That’s what everyone says right?&lt;/div&gt;
&lt;p&gt;Plugins help Figma fight this drag. As they scale in users, more plugins will be created, making the product better for new users and spurring more designs to be created.&lt;/p&gt;
&lt;h3&gt;Architecting a Platform&lt;/h3&gt;
&lt;p&gt;Companies like Sketch have shown the importance of a robust plugin ecosystem (and of course, Adobe before them has a long track record of encouraging plugins). It’s impossible for a single company to build all the features and tools needed by each user. Platforms are needed most when the diversity and scale of use cases is larger than can be built—or often even understood—by the company. Sketch’s plugins allow the value to Sketch customers to grow at a faster pace than Sketch can ship new features. Figma will also likely stay focused on a generalized and core set of features, leaving a huge surface area of user workflows for plugins to address.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-8.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-400&quot; srcset=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-8.png?w=800&amp;amp;ssl=1 800w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-8.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-8.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
this graphic will probably get its own essay&lt;/div&gt;
&lt;p&gt;Companies are still early on in understanding the nuances of becoming platforms. More and more companies are reaching the scale and dynamic range where this is a priority, but for the most part, they are individually recreating the wheel. In a decade, there will be clear frameworks, metrics, and supporting ecosystems for building platforms; today there are few. This is a natural maturation, and one that all business models go through, such as SaaS and subscription over the last decade.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-10.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-402&quot; srcset=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-10.png?w=800&amp;amp;ssl=1 800w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-10.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-10.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
they grow up so fast.&lt;/div&gt;
&lt;p&gt;Because of our lack of shared vocabulary around building platforms, it’s hard for many to understand the subtle but important delineations between the approaches of different companies. It’s easy to assume, for example, that all plugin systems are built the same, but this impulse is often incorrect.&lt;/p&gt;
&lt;h4&gt;Sketch: a Case Study&lt;/h4&gt;
&lt;p&gt;Take Sketch’s plugin ecosystem. The API is well documented and the plugin coverage is high. However, plugins are outside the scope of the core product. Users installing a plugin are most commonly directed to the Github page of the plugin, which they must manually download and install. This is another example of the gradients of what it means to put your product in the cloud. Even if Sketch is in the cloud, its plugins are local files. There is friction in downloading and installing them. This is compounded in a work setting as teams must manually make sure employees are using the same plugins if needed.&lt;/p&gt;
&lt;p&gt;Because plugins are not first-class citizens in the Sketch product and handled out of its scope, plugin management is very decentralized. Plugins can register to be listed on Sketch’s site and enable automatic updates, but otherwise Sketch is very hands-off. There is no official Sketch source for how popular a plugin is, nor do they have to approve plugins. Instead, users must rely on Github stars or reviews on third party sites. There is no oversight on plugins causing performance or stability issues.&lt;/p&gt;
&lt;p&gt;This shouldn’t be mistaken for criticism. The weaknesses in Sketch’s plugin architecture show only because of how successful they have been at encouraging a robust community of plugins  around Sketch.&lt;/p&gt;
&lt;p&gt;Platforms are emergent ecosystems, more akin to building a consumer social network than a traditional enterprise sales company. This is one of the core dilemmas of building platforms. They are complex organic systems that have to be carefully cultivated (gardening vs. engineering mindset) and it’s hard to predict beforehand what direction they will go and the scale they will achieve.&lt;/p&gt;
&lt;p&gt;Sketch cannot be faulted. To this day it’s still unclear how ambitious plugins can and should be. By defaulting to a relative hands-off approach, they allowed the community to flourish unhindered by them. And it’s by seeing Sketch’s success with plugins, as well as their struggles, that others like Figma and Adobe XD have been able to have increased confidence in the importance, potential, and levers of a plugin ecosystem.&lt;/p&gt;
&lt;p&gt;But while Sketch cannot be faulted, their choices have stunted the full potential of plugins built around them. Sketch understands this. They are rearchitecting their plugin system right now to be fully in the cloud, which is a necessary step in the right direction.&lt;/p&gt;
&lt;p&gt;Complex systems do not absolve companies of their need to make clear choices about the architecture, policy, and norms of their platforms. If anything, they magnify its importance. The structural choices made by companies ripple forward as the ecosystem emerges around them. And the direction and scale of the resulting platform are a function of the physics set by their initial conditions. We shape our abstractions, and thereafter they shape us.&lt;/p&gt;
&lt;h4&gt;Figma: Forming Foundations&lt;/h4&gt;
&lt;p&gt;Figma’s plugins are very early, but promising. Natively built in and browser-first, when you click to install a plugin, it’s available instantly. There’s nothing to install after all, just access privileges to activate. That’s magical.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-11.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-403&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-11.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-11.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-11.png?resize=768%2C538&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
stick figures included for scale&lt;/div&gt;
&lt;p&gt;Like all good magic, the work to make this feel effortless is quite arduous. Figma’s plugins must be secure, performant, and stable, especially since they are creating a plugin ecosystem for a browser-first system. Users should be able to trust that using plugins won’t expose them to security risk or hurt Figma’s performance. And both developers and users should feel confident that the APIs the plugins depend on won’t be suddenly deprecated or broken. Without these preconditions, plugins will always be at best a small aspect of Figma. This trust and stability is the bedrock of a strong ecosystem.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-12.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-404&quot; srcset=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-12.png?w=800&amp;amp;ssl=1 800w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-12.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-12.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
i think the takeaway is that plugins are like rainbow cake?&lt;/div&gt;
&lt;p&gt;This difficulty is best seen in Figma’s engineering blog posts on building their plugin system. Within a month of &lt;a href=&quot;https://www.figma.com/blog/how-we-built-the-figma-plugin-system/&quot;&gt;their post&lt;/a&gt; on how they decided the architecture for plugins, they &lt;a href=&quot;https://www.figma.com/blog/an-update-on-plugin-security/&quot;&gt;learned of vulnerabilities&lt;/a&gt; in their approach and had to switch it out.&lt;/p&gt;
&lt;p&gt;Ensuring the platform can be trusted is not just a matter of technical architecture. Figma doesn’t just host plugins, they also have a centralized &lt;a href=&quot;https://help.figma.com/hc/en-us/articles/360039958914-Plugin-Review-Guidelines&quot;&gt;approval process&lt;/a&gt;, more similar to Apple’s app store than to Sketch’s approach. Plugins that want to be listed must pass Figma’s policies around safety, business, usability, and legal.&lt;/p&gt;
&lt;h4&gt;The Path to Platforms&lt;/h4&gt;
&lt;p&gt;The business policies are worth noting in particular. While safety, usability, and legal are about maintaining the integrity and trust of the platform, Figma’s business policies are about shaping what they think the plugin ecosystem &lt;em&gt;should&lt;/em&gt; look like. For example, they allow monetization but prefer plugins be accessible to all users. Choices like how much to encourage an ecosystem of plugin businesses vs. a more open source community are important ones. There is no obviously correct answer, and it can and often needs to change over the life of a platform. One need only look at the makeup of Uber drivers, WordPress plugins, or Airbnb hosts over time to see this.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-13.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-405&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-13.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-13.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-13.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
this will also be its own essay haha&lt;/div&gt;
&lt;p&gt;Building platforms requires many hard choices like these. How should you balance encouraging growth today and building towards the ideal long term vision? To what degree should platforms influence which plugins get built or even which they should build themselves in the early days? How should you decide which features actually should be part of the platform itself vs. standalone plugins? How wide is the scope for what plugins can build? These are only a few of the core questions.&lt;/p&gt;
&lt;p&gt;Perhaps Figma’s most interesting choice is the heavy focus on ease of plugin creation. Figma’s plugin system is explicitly designed to turn designers into developers by enabling them to create plugins for their own workflows. In most platforms and marketplaces, the ecosystem tends to split and professionalize over time. This is the natural gravitational pull of ecosystems*. To bet that a significant amount of the platform’s leverage will come from individuals improving their own workflows is a bold one. It’s a bet on induced demand, which is always the most interesting type of bet.&lt;/p&gt;
&lt;p&gt;Figma’s plugin ecosystem is very nascent. From their &lt;a href=&quot;https://www.figma.com/plugin-docs/whats-supported/&quot;&gt;list of supported features&lt;/a&gt; and what’s to come, it’s clear that there is still a long way to go to open up their platform to more advanced plugins. And choosing the right abstraction layers for the plugin ecosystem is crucial. So far they have adopted a very strong stance on what the core technical decisions and promises around safety, performance, and stability need to be, but have been very hands-off on what plugins are built. This is to be expected early on. When it’s unclear what should be built, it’s not a bad policy to see where the creativity of the community leads. It often brings really amazing stuff, like this &lt;a href=&quot;https://twitter.com/eminsinani/status/1263883853283950592&quot;&gt;demo&lt;/a&gt; of a plugin. Over time, however, we should expect to see more focus. Right now their &lt;a href=&quot;https://www.figma.com/community/plugin/all&quot;&gt;plugin page&lt;/a&gt; is unsorted other than popularity and some that are featured. This works when the number of plugins is low enough, but eventually they will have to decide how to categorize plugins and what they want discovery to look like.&lt;/p&gt;
&lt;p&gt;As plugin categories begin to crystallize, Figma will need to form crisp views on which areas should be absorbed into their core product, what they want each category to look like as it matures, what essential plugins don’t yet exist that they must help catalyze, and what new APIs they should allow plugins to address. The choice of how much to encourage monetization of the plugin ecosystem, as discussed above, is a perfect example of the kind of key decisions Figma will need to make (repeatedly) as they build out their plugin platform. Perhaps most importantly, Figma must decide the meta-framework by which to make these decisions intentionally rather than capriciously.&lt;/p&gt;
&lt;h2&gt;Pushing Progress&lt;/h2&gt;
&lt;p&gt;Has design been improving? Are we getting better at designing, not as an art, but as a functional practice? &lt;/p&gt;
&lt;p&gt;The answer is certainly yes. We have tools that would have been unfathomable a decade ago, much less pre-computer. It is easier to design. It is easier to begin designing. Design is more scalable.&lt;/p&gt;
&lt;p&gt;But how does design’s rate of improvement compare to the rate at which engineering has been improving as a process? Design as a meta-process is less impressive by this benchmark.&lt;/p&gt;
&lt;p&gt;Engineering is almost unparalleled in the rate at which it commoditizes itself and pushes the frontier of progress out. The best practices in frameworks, languages, and infrastructure are always rapidly—and sometimes tumultuously—evolving. What used to take entire teams to build before, requires fewer and fewer people every year.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-14.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-406&quot; srcset=&quot;https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-14.png?w=800&amp;amp;ssl=1 800w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-14.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i2.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-14.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
this is the true up and to the right curve. and the one that needs to be figured out for every discipline&lt;/div&gt;
&lt;p&gt;As disciplines evolve, they figure out the social norms needed to operate better, build tools that can be shared across the industry, and invent abstractions that allow offloading more and more of the workload. They learn how to collaborate better, not just with each other but with all the other functions as well. Disciplines are not an end to themselves; the degree to which they contribute to the larger organizations and ecosystems they are part of is the final measure of their progress.&lt;/p&gt;
&lt;p&gt;Design appears to be inflecting in the direction of engineering. Figma is in pole position to drive this evolution. As a tool, it makes designers both more efficient and more collaborative by breaking down the walls between design and the other teams they work with.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-15.png?w=1100&amp;amp;ssl=1&quot; alt=&quot;&quot; class=&quot;wp-image-407&quot; srcset=&quot;https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-15.png?w=800&amp;amp;ssl=1 800w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-15.png?resize=300%2C210&amp;amp;ssl=1 300w, https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-15.png?resize=768%2C537&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/p&gt;
the dream&lt;/div&gt;
&lt;p&gt;But Figma’s true potential is if it can make the transition to becoming a platform. If Figma can, they’ll push progress in design as a &lt;em&gt;discipline&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Which companies are successful in a field is decided by many factors, not the least of which is a good measure of luck. But when disciplines undergo tectonic shifts, the companies that thrive have outsized influence. The choices they make in abstraction layers, social norms, architecture, and more have large ripples for a generation. This is even more true for platforms, whose loops become core to their ecosystems. Like wet clay, the choices they make eventually set and become the underlying substrate that defines how the entire ecosystem grows. That is both a tremendous opportunity and responsibility for the companies, like Figma, that take on this mantle.&lt;/p&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;Many thanks to &lt;a href=&quot;https://twitter.com/keilafong&quot;&gt;Keila Fong&lt;/a&gt;, for the many discussions about this topic and help with this piece. As well as unceasing pressure to publish it.&lt;/p&gt;
&lt;p&gt;Additionally, thanks to &lt;a href=&quot;https://twitter.com/maxbulger&quot;&gt;Max Bulger&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/mhdempsey&quot;&gt;Michael Dempsey&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/kane&quot;&gt;Kane Hsieh&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/borisjabes&quot;&gt;Boris Jabes&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/typesfaster&quot;&gt;Dave Petersen&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/typesfast&quot;&gt;Ryan Petersen&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/KevinSimler&quot;&gt;Kevin Simler&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/eugenewei&quot;&gt;Eugene Wei&lt;/a&gt; for their discussions, edits, and help with this piece. &lt;a href=&quot;https://twitter.com/johnolilly&quot;&gt;John Lilly&lt;/a&gt;, who led Greylock’s investment in Figma, deserves most of the credit for seeding all my views on productivity and collaboration. His investment memo from 2014 is still prescient in ways that took me years to fully appreciate.&lt;/p&gt;
&lt;p&gt;Thanks also to &lt;a href=&quot;https://twitter.com/onecaseman&quot;&gt;Casey Winters&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/bbalfour&quot;&gt;Brian Balfour&lt;/a&gt;. Building the &lt;a href=&quot;https://www.reforge.com/advanced-growth-strategy-series&quot;&gt;Advanced Growth Strategy&lt;/a&gt; course was the origin of many conversations about Figma’s loops. And I still teach the Figma case study every semester.&lt;/p&gt;
&lt;p&gt;All graphics in this piece were created with &lt;a href=&quot;https://procreate.art/&quot;&gt;Procreate&lt;/a&gt; and &lt;a href=&quot;https://www.figma.com/&quot;&gt;Figma&lt;/a&gt;. Procreate is a fantastic drawing app for iPad. If you have made it all the way through this essay and don’t know what Figma is then I don’t know what to tell you. An integration between these two might have a target audience of only me. But I would love it.&lt;/p&gt;
&lt;p&gt;* Further pieces to be written on these subjects&lt;/p&gt;
</description>
<pubDate>Sat, 20 Jun 2020 16:54:51 +0000</pubDate>
<dc:creator>adriand</dc:creator>
<og:type>article</og:type>
<og:title>Why Figma Wins - kwokchain</og:title>
<og:description>Companies are a sequencing of loops. While it’s possible to stumble into an initial core loop that works, the companies that are successful in the long term are the ones that can repeatedly find the next loop. However, this evolution is poorly understood relative to its existential impact on a company’s trajectory. Figma is a … Continue reading Why Figma Wins →</og:description>
<og:url>https://kwokchain.com/2020/06/19/why-figma-wins/</og:url>
<og:image>https://i0.wp.com/kwokchain.com/wp-content/uploads/2020/06/image-3.png?fit=800%2C559&amp;ssl=1</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://kwokchain.com/2020/06/19/why-figma-wins/</dc:identifier>
</item>
<item>
<title>A Nvidia Engineer Wrote a Vulkan Driver That Works on Older Raspberry Pi</title>
<link>https://www.phoronix.com/scan.php?page=news_item&amp;px=RPi-VK-Driver</link>
<guid isPermaLink="true" >https://www.phoronix.com/scan.php?page=news_item&amp;px=RPi-VK-Driver</guid>
<description>&lt;div&gt;&lt;img alt=&quot;VULKAN -- &quot; src=&quot;https://www.phoronix.com/assets/categories/vulkan.jpg&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;&lt;/div&gt;
The Raspberry Pi 1 through Raspberry Pi 3 Model B+ and even the Raspberry Pi Zero can now see Vulkan support via a new unofficial &quot;RPi-VK-Driver&quot; that is offering even better performance than the Broadcom OpenGL driver.&lt;p&gt;While there has been &lt;a href=&quot;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Raspberry-Pi-Vulkan-Summer-2020&quot;&gt;a Vulkan driver in development for the Raspberry Pi 4 and future models&lt;/a&gt; with the newer Broadcom VideoCore GPU that officially supports Vulkan, an independent developer has been developing a Vulkan driver for the VideoCore IV GPU found in pre-RPi4 SBCs. VideoCore 4 isn't compliant with Vulkan in full, but with enough effort, a Vulkan driver was brought up.&lt;br/&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://www.phoronix.net/image.php?id=raspberry-pi-3&amp;amp;image=raspberry_pi3_4_med&quot;/&gt;&lt;/p&gt;
&lt;br/&gt;This new RPi-VK-Driver was developed over the past two years by Martin Thomas, a graphics engineer currently working for NVIDIA who developed this driver in his spare time. It reportedly took about two years to get this unofficial Vulkan driver into shape for Friday's &quot;1.0&quot; release.&lt;br/&gt;&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.05&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;VkQuake3 running at 100+ FPS on a &lt;a href=&quot;https://twitter.com/Raspberry_Pi?ref_src=twsrc%5Etfw&quot;&gt;@Raspberry_Pi&lt;/a&gt; 3B+ using the new low level RPi-VK-Driver &lt;a href=&quot;https://t.co/UhhYgQrAEi&quot;&gt;pic.twitter.com/UhhYgQrAEi&lt;/a&gt;&lt;/p&gt;
— Martin Thomas (@0martint) &lt;a href=&quot;https://twitter.com/0martint/status/1274012749174013954?ref_src=twsrc%5Etfw&quot;&gt;June 19, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;br/&gt;This unofficial Vulkan driver for VideoCore IV implements a subset of the API and various hardware limitations encountered but enough that the likes of vkQuake3 can run on the driver with good speed. Performance compared to the VC4 OpenGL driver is quite good thanks to better memory management, multi-threaded command submission, and other improvements.&lt;p&gt;More details on this Raspberry Pi Vulkan driver for older boards via &lt;a href=&quot;https://github.com/Yours3lf/rpi-vk-driver&quot;&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;</description>
<pubDate>Sat, 20 Jun 2020 15:19:56 +0000</pubDate>
<dc:creator>reddotX</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.phoronix.com/scan.php?page=news_item&amp;px=RPi-VK-Driver</dc:identifier>
</item>
<item>
<title>RSS Box – RSS for websites that do not support RSS</title>
<link>https://rssbox.herokuapp.com/</link>
<guid isPermaLink="true" >https://rssbox.herokuapp.com/</guid>
<description>&lt;noscript readability=&quot;5&quot;&gt;
&lt;p&gt;FYI: If you enable JavaScript then you will be able to access additional options in the dropdown menus. The website should still be somewhat usable, but recent versions of Firefox will try to download the RSS feeds.&lt;/p&gt;
&lt;/noscript&gt;&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;This website lets you subscribe to RSS feeds for websites that do not support RSS themselves, by using the respective website's API and then translating that data to RSS feeds.&lt;/p&gt;
&lt;p&gt;If you get a page saying &quot;Application error&quot;, simply try again. This website resolves shortlink URLs to give the reader a better experience, and embeds linked content directly into the RSS feed. You will get this error if this takes longer than the web server allows.&lt;/p&gt;
&lt;p&gt;Some websites, like YouTube, support RSS feeds but they are quite hard to find, so this website will provide the URL.&lt;/p&gt;
&lt;p&gt;To open &lt;tt&gt;vlc://&lt;/tt&gt; links, see &lt;a href=&quot;https://github.com/stefansundin/vlc-protocol&quot;&gt;vlc-protocol&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/stefansundin/rssbox&quot;&gt;This app is free software.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Please do not overload this service. Do not make more requests than you need. If you require RSS feeds that are updated very frequently, then please host the app on your own infrastructure. The hosting for this free offering has very limited resources. If you use the service in a way that degrades the experience for others, then I will start blocking your requests. Please be responsible so that as many people as possible can enjoy this free service.&lt;/p&gt;
&lt;h2 id=&quot;donate&quot;&gt;Donate&lt;/h2&gt;
&lt;p&gt;I provide this service free of charge. If you find it useful, please make a donation. I greatly appreciate any support!&lt;/p&gt;

&lt;p&gt;You can also support me through &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/sponsors/stefansundin&quot;&gt;GitHub Sponsorship&lt;/a&gt; (there are perks), or through &lt;a target=&quot;_blank&quot; href=&quot;https://www.patreon.com/stefansundin&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a class=&quot;expander blue&quot; expand=&quot;donation-options&quot;&gt;Show other donation options: Bitcoin.&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;div id=&quot;donation-options&quot; readability=&quot;5.6&quot;&gt;
&lt;p&gt;Other donation options:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Bitcoin: &lt;tt&gt;1EhDUbc5MjC6JavC6idKiTCxnqSxY2sbTX&lt;/tt&gt; (&lt;a href=&quot;https://stefansundin.github.io/img/btc-qr.png&quot;&gt;QR code&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Contact me at &lt;a fubar=&quot;&quot;&gt;stefaNStefansundinCom&lt;/a&gt; if none of the above work.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;Made by &lt;a href=&quot;https://stefansundin.github.io/&quot;&gt;Stefan Sundin&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 20 Jun 2020 12:41:50 +0000</pubDate>
<dc:creator>mrzool</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://rssbox.herokuapp.com/</dc:identifier>
</item>
<item>
<title>Ask HN: Google won&amp;#039;t remove my site URL from random business using it on Maps</title>
<link>https://news.ycombinator.com/item?id=23582602</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=23582602</guid>
<description>&lt;td colspan=&quot;2&quot;/&gt;&lt;td readability=&quot;30&quot;&gt;Hello HN, I have a personal CS blog named X. When you search for X on google, on the right side, it will show a business located somewhere, with that very same name X. This business is for helping people for computer problems. They're even showing my website url.
&lt;p&gt;If you search for the X business name on official channels, it doesn't exists obviously. I've tried to have at least my website removed from the listing, but fun fact my removal request is handled by the listing owner itself. I've contacted Google directly, the answer was along the lines of the following:&lt;/p&gt;
&lt;p&gt;&amp;gt; We don't care if the business is using your website name and your url, we are just showing information. If you want to get the website removed please contact the owner of that listing.&lt;/p&gt;
&lt;p&gt;What makes me angry is that I legally hold the mark name in europe. It's possible to check my name on the whois of that website. And there is no way for me to get that sh*t removed. What's also incredible, is that people will need to do all the verification crap for singing on adsense, but everyone can put every website in the listing with no verification and no one can't do anything about that.&lt;/p&gt;
&lt;p&gt;What is even worst is that business will be associated with myself, and my users might call that business thinking to be speaking with me. And a business showing false information doesn't seems a business to trust. I've also explicitly talked about this, but Google didn't care.&lt;/p&gt;
&lt;p&gt;Please HN. Tell me what to do.&lt;/p&gt;
&lt;/td&gt;
</description>
<pubDate>Sat, 20 Jun 2020 08:22:47 +0000</pubDate>
<dc:creator>federicoponzi</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=23582602</dc:identifier>
</item>
<item>
<title>An Intro to Compilers (2017)</title>
<link>https://nicoleorchard.com/blog/compilers</link>
<guid isPermaLink="true" >https://nicoleorchard.com/blog/compilers</guid>
<description>&lt;p&gt;

&lt;h2&gt;How to Speak to Computers, Pre-Siri&lt;/h2&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/norchard/status/864246049266958336&quot;&gt;Learning new meanings for front-end and back-end&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A compiler is just a program that translates other programs. Traditional compilers translate source code into executable machine code that your computer understands. (Some compilers translate source code into another programming language. These compilers are called source-to-source translators or transpilers.) &lt;a href=&quot;https://llvm.org/&quot;&gt;LLVM&lt;/a&gt; is a widely used compiler project, consisting of many modular compiler tools.&lt;/p&gt;
&lt;p&gt;Traditional compiler design comprises three parts: &lt;img src=&quot;https://nicoleorchard.com/assets/img/blog/compilers/compiler1.jpg&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The Frontend&lt;/strong&gt; translates source code into an intermediate representation (IR)*. &lt;a href=&quot;https://clang.llvm.org/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clang&lt;/code&gt;&lt;/a&gt; is LLVM’s frontend for the C family of languages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Optimizer&lt;/strong&gt; analyzes the IR and translates it into a more efficient form. &lt;a href=&quot;https://llvm.org/docs/CommandGuide/opt.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opt&lt;/code&gt;&lt;/a&gt; is the LLVM optimizer tool.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Backend&lt;/strong&gt; generates machine code by mapping the IR to the target hardware instruction set. &lt;a href=&quot;https://llvm.org/docs/CommandGuide/llc.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;llc&lt;/code&gt;&lt;/a&gt; is the LLVM backend tool.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;* &lt;strong&gt;LLVM IR&lt;/strong&gt; is a low-level language that is similar to assembly. However, it abstracts away hardware-specific information.&lt;/p&gt;
&lt;h2 id=&quot;hello-compiler-&quot;&gt;Hello, Compiler 👋&lt;/h2&gt;
&lt;p&gt;Below is a simple C program that prints “Hello, Compiler!” to stdout. The C syntax is human-readable, but my computer wouldn’t know what to do with it. I’m going to walk through the three compilation phases to make this program machine-executable. &lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// compile_me.c
// Wave to the compiler. The world can wait.
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, Compiler!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;the-frontend&quot;&gt;The Frontend&lt;/h3&gt;
&lt;p&gt;As I mentioned above, &lt;code class=&quot;highlighter-rouge&quot;&gt;clang&lt;/code&gt; is LLVM’s frontend for the C family of languages. Clang consists of a C preprocessor, lexer, parser, semantic analyzer, and IR generator.&lt;/p&gt;
&lt;ul readability=&quot;11&quot;&gt;&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;The C Preprocessor&lt;/strong&gt; modifies the source code before beginning the translation to IR. The preprocessor handles including external files, like &lt;code class=&quot;highlighter-rouge&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/code&gt; above. It will replace that line with the entire contents of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stdio.h&lt;/code&gt; C standard library file, which will include the declaration of the &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See the output of the preprocessor step by running:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;clang -E compile_me.c -o preprocessed.i
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;strong&gt;The Lexer&lt;/strong&gt; (or scanner or tokenizer) converts a string of characters to a string of words. Each word, or token, is assigned to one of five syntactic categories: punctuation, keyword, identifier, literal, or comment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tokenization of compile_me.c&lt;/em&gt; &lt;img src=&quot;https://nicoleorchard.com/assets/img/blog/compilers/lexer.jpg&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;strong&gt;The Parser&lt;/strong&gt; determines whether or not the stream of words consists of valid sentences in the source language. After analyzing the grammar of the token stream, it outputs an abstract syntax tree (AST). Nodes in a Clang AST represent declarations, statements, and types.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The AST of compile_me.c&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://nicoleorchard.com/assets/img/blog/compilers/tree.jpg&quot;/&gt;&lt;/p&gt;
&lt;ul readability=&quot;3&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;The Semantic Analyzer&lt;/strong&gt; traverses the AST, determining if code sentences have valid meaning. This phase checks for type errors. If the main function in compile_me.c returned &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;zero&quot;&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, the semantic analyzer would throw an error because &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;zero&quot;&lt;/code&gt; is not of type &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;strong&gt;The IR Generator&lt;/strong&gt; translates the AST to IR.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Run the clang frontend on compile_me.c to generate LLVM IR:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;clang -S -emit-llvm -o llvm_ir.ll compile_me.c
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;The main function in llvm_ir.ll&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody readability=&quot;8.5&quot;&gt;&lt;tr readability=&quot;25.5&quot;&gt;&lt;td class=&quot;gutter gl&quot; readability=&quot;5&quot;&gt;
&lt;pre class=&quot;lineno&quot;&gt;
1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;18&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;c1&quot;&gt;; llvm_ir.ll&lt;/span&gt;

&lt;span class=&quot;vg&quot;&gt;@.str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unnamed_addr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;c&quot;Hello, Compiler!\0A\00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alloca&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- memory allocated on the stack&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;getelementptr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inbounds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]*&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@.str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;the-optimizer&quot;&gt;The Optimizer&lt;/h3&gt;
&lt;p&gt;The job of the optimizer is to improve code efficiency based on its understanding of the program’s runtime behavior. The optimizer takes IR as input and produces improved IR as output. LLVM’s optimizer tool, &lt;code class=&quot;highlighter-rouge&quot;&gt;opt&lt;/code&gt;, will optimize for processor speed with the flag &lt;code class=&quot;highlighter-rouge&quot;&gt;-O2&lt;/code&gt; (capital o, two) and for size with the flag &lt;code class=&quot;highlighter-rouge&quot;&gt;-Os&lt;/code&gt; (capital o, s).&lt;/p&gt;
&lt;p&gt;Take a look at the difference between the LLVM IR code our frontend generated above and the result of running:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;opt -O2 -S llvm_ir.ll -o optimized.ll
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;The main function in optimized.ll&lt;/em&gt;&lt;/p&gt;
&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td class=&quot;gutter gl&quot;&gt;
&lt;pre class=&quot;lineno&quot;&gt;
1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;c1&quot;&gt;; optimized.ll&lt;/span&gt;

&lt;span class=&quot;vg&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unnamed_addr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;c&quot;Hello, Compiler!\00&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%puts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;getelementptr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inbounds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]*&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i64&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i64&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;nocapture&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;In the optimized version, main doesn’t allocate memory on the stack, since it doesn’t use any memory. The optimized code also calls &lt;code class=&quot;highlighter-rouge&quot;&gt;puts&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; because none of &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;’s formatting functionality was used.&lt;/p&gt;
&lt;p&gt;Of course, the optimizer does more than just know when to use &lt;code class=&quot;highlighter-rouge&quot;&gt;puts&lt;/code&gt; in lieu of &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;. The optimizer also unrolls loops and inlines the results of simple calculations. Consider the program below, which adds two integers and prints the result.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// add.c
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%i + %i = %i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Here is the unoptimized LLVM IR:&lt;/em&gt;&lt;/p&gt;
&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody readability=&quot;18&quot;&gt;&lt;tr readability=&quot;54&quot;&gt;&lt;td class=&quot;gutter gl&quot; readability=&quot;5&quot;&gt;
&lt;pre class=&quot;lineno&quot;&gt;
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;vg&quot;&gt;@.str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unnamed_addr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;c&quot;%i + %i = %i\0A\00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alloca&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- allocate stack space for var a&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alloca&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- allocate stack space for var b&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alloca&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- allocate stack space for var c&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- store 5 at memory location %1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- store 10 at memory location %2&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- load the value at memory address %1 into register %4&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- load the value at memory address %2 into register %5&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;nsw&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%5&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- add the values in registers %4 and %5. put the result in register %6&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- put the value of register %6 into memory address %3&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- load the value at memory address %1 into register %7&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- load the value at memory address %2 into register %8&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;; &amp;lt;- load the value at memory address %3 into register %9&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;getelementptr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inbounds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]*&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@.str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;em&gt;Here is the optimized LLVM IR:&lt;/em&gt;&lt;/p&gt;
&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody readability=&quot;6.5&quot;&gt;&lt;tr readability=&quot;19.5&quot;&gt;&lt;td class=&quot;gutter gl&quot;&gt;
&lt;pre class=&quot;lineno&quot;&gt;
1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;16&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;vg&quot;&gt;@.str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unnamed_addr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;c&quot;%i + %i = %i\0A\00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;%1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;getelementptr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inbounds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]*&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@.str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i64&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i64&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;@printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;nocapture&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Our optimized main function is essentially lines 16 and 17 of the unoptimized version, with the variable values inlined. &lt;code class=&quot;highlighter-rouge&quot;&gt;opt&lt;/code&gt; calculated the addition because all of the variables were constant. Pretty cool, huh?&lt;/p&gt;
&lt;h3 id=&quot;the-backend&quot;&gt;The Backend&lt;/h3&gt;
&lt;p&gt;LLVM’s backend tool is &lt;code class=&quot;highlighter-rouge&quot;&gt;llc&lt;/code&gt;. It generates machine code from LLVM IR input in three phases:&lt;/p&gt;
&lt;ul readability=&quot;3&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Instruction selection&lt;/strong&gt; is the mapping of IR instructions to the instruction-set of the target machine. This step uses an infinite namespace of virtual registers.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Register allocation&lt;/strong&gt; is the mapping of virtual registers to actual registers on your target architecture. My CPU has an x86 architecture, which is limited to 16 registers. However, the compiler will use as few registers as possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Instruction scheduling&lt;/strong&gt; is the reordering of operations to reflect the target machine’s performance constraints.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Running this command will produce some machine code!&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;llc -o compiled-assembly.s optimized.ll
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;_main:
        pushq   %rbp
        movq    %rsp, %rbp
        leaq    L_str(%rip), %rdi
        callq   _puts
        xorl    %eax, %eax
        popq    %rbp
        retq
L_str:
        .asciz  &quot;Hello, Compiler!&quot;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This program is x86 assembly language, which is the human readable syntax for the language my computer speaks. Someone finally understands me 🙌&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Engineering-Compiler-Second-Keith-Cooper/dp/012088478X&quot;&gt;Engineering a compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Getting-Started-LLVM-Core-Libraries/dp/1782166920&quot;&gt;Getting Started with LLVM Core Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Sat, 20 Jun 2020 06:48:29 +0000</pubDate>
<dc:creator>memexy</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nicoleorchard.com/blog/compilers</dc:identifier>
</item>
<item>
<title>Discovering Dennis Ritchie’s Lost Dissertation</title>
<link>https://computerhistory.org/blog/discovering-dennis-ritchies-lost-dissertation/</link>
<guid isPermaLink="true" >https://computerhistory.org/blog/discovering-dennis-ritchies-lost-dissertation/</guid>
<description>&lt;p&gt;Many of you, dear readers, will have heard of Dennis Ritchie. In the late 1960s, he left graduate studies in applied mathematics at Harvard for a position at the Bell Telephone Laboratories, where he spent the entirety of his career. Not long after joining the Labs, Ritchie linked arms with Ken Thompson in efforts that would create a fundamental dyad of the digital world that followed: the operating system Unix and the programming language C. Thompson led the development of the system, while Ritchie was lead in the creation of C, in which Thompson rewrote Unix. In time, Unix became the basis for most of the operating systems on which our digital world is built, while C became—and remains—one of the most popular languages for creating the software that animates this world.&lt;/p&gt;
&lt;div id=&quot;attachment_17338&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-17338&quot; class=&quot;size-full wp-image-17338&quot; src=&quot;https://computerhistory.org/wp-content/uploads/2020/06/Thompson_and_Ritchie_source_unknown.jpg&quot; alt=&quot;&quot; width=&quot;980&quot; height=&quot;606&quot;/&gt;&lt;p id=&quot;caption-attachment-17338&quot; class=&quot;wp-caption-text&quot;&gt;Unix creators Ken Thompson and Dennis Ritchie. Original source unknown.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On Ritchie’s personal web pages at the Labs (still maintained by Nokia, the current owner), he writes with characteristic dry deprecation of his educational journey into computing:&lt;/p&gt;
&lt;p&gt;“I . . . received Bachelor’s and advanced degrees from Harvard University, where as an undergraduate I concentrated in Physics and as a graduate student in Applied Mathematics . . . The subject of my 1968 doctoral thesis was subrecursive hierarchies of functions. My undergraduate experience convinced me that I was not smart enough to be a physicist, and that computers were quite neat. My graduate school experience convinced me that I was not smart enough to be an expert in the theory of algorithms and also that I liked procedural languages better than functional ones.”&lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;Whatever the actual merits of these self-evaluations, his path certainly did lead him into a field and an environment in which he made extraordinary contributions.&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;&quot;Everything but bound copy&quot;&lt;/h2&gt;
&lt;p&gt;It may come as some surprise to learn that until just this moment, despite Ritchie’s much-deserved computing fame, his dissertation—the intellectual and biographical fork-in-the-road separating an academic career in computer science from the one at Bell Labs leading to C and Unix—was &lt;em&gt;lost&lt;/em&gt;. Lost? Yes, very much so in being both unpublished and absent from any public collection; not even an entry for it can be found in Harvard’s library catalog nor in dissertation databases.&lt;/p&gt;
&lt;p&gt;After Dennis Ritchie’s death in 2011, his sister Lynn very caringly searched for an official copy and for any records from Harvard. There were none, but she did uncover a copy from the widow of Ritchie’s former advisor. Until very recently then, across a half-century perhaps fewer than a dozen people had ever had the opportunity to read Ritchie’s dissertation. Why?&lt;/p&gt;
&lt;p&gt;In Ritchie’s description of his educational path, you will notice that he does not explicitly say that he earned a PhD based on his 1968 dissertation. This is because he did not. Why not? The reason seems to be his failure to take the necessary steps to officially deposit his completed dissertation in Harvard’s libraries. Professor Albert Meyer of MIT, who was in Dennis Ritchie’s graduate school cohort, recalls the story in a recent &lt;a href=&quot;https://www.computerhistory.org/collections/catalog/102717373&quot;&gt;oral history interview&lt;/a&gt; with CHM:&lt;/p&gt;
&lt;p&gt;“So the story as I heard it from Pat Fischer [Ritchie and Meyer’s Harvard advisor] . . . was that it was definitely true at the time that the Harvard rules were that you needed to submit a bound copy of your thesis to the Harvard— you needed the certificate from the library in order to get your PhD. And as Pat tells the story, Dennis had submitted his thesis. It had been approved by his thesis committee, he had a typed manuscript of the thesis that he was ready to submit when he heard the library wanted to have it bound and given to them. And the binding fee was something noticeable at the time . . . not an impossible, but a nontrivial sum. And as Pat said, Dennis’ attitude was, ‘If the Harvard library wants a bound copy for them to keep, they should pay for the book, because I’m not going to!’ And apparently, he didn’t give on that. And as a result, never got a PhD. So he was more than ‘everything but thesis.’ He was ‘everything but bound copy.’”&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;While Lynn Ritchie’s inquiries confirmed that Dennis Ritchie never did submit the bound copy of his dissertation, and did not then leave Harvard with his PhD, his brother John feels that there was something else going on with Dennis Ritchie’s actions beyond a fit of pique about fees: He already had a coveted job as a researcher at Bell Labs, and “never really loved taking care of the details of living.” We will never really know the reason, and perhaps it was never entirely clear to Ritchie himself. But what we can know with certainty is that Dennis Ritchie’s dissertation was lost for a half-century, until now.&lt;/p&gt;
&lt;div id=&quot;attachment_17340&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;35&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-17340&quot; class=&quot;size-large wp-image-17340&quot; src=&quot;https://computerhistory.org/wp-content/uploads/2020/06/Alistair-Dennis-and-Keister_Courtesy-Ritchie-Family.-1024x810.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;810&quot;/&gt;&lt;p id=&quot;caption-attachment-17340&quot; class=&quot;wp-caption-text&quot;&gt;Dennis Ritchie (right) around the time he started working at Bell Laboratories, with two other figures from the Labs: His father Alistair Ritchie (left) and electronic switching pioneer William Keister (center). Courtesy Ritchie Family.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;In the Collection&lt;/h2&gt;
&lt;p&gt;Within the &lt;a href=&quot;https://www.computerhistory.org/collections/catalog/102788942&quot;&gt;Dennis Ritchie collection&lt;/a&gt;, recently donated by Ritchie’s siblings to CHM, lay several historical gems that we have identified to date. One is a &lt;a href=&quot;https://computerhistory.org/blog/the-earliest-unix-code-an-anniversary-source-code-release/&quot;&gt;collection of the earliest Unix source code&lt;/a&gt; dating from 1970–71. Another is a fading and stained photocopy of Ritchie’s doctoral dissertation, &lt;em&gt;Program Structure and Computational Complexity&lt;/em&gt;. CHM is delighted to now make a digital copy of Ritchie’s own dissertation manuscript (as well as a more legible digital scan of a copy of the manuscript owned by Albert Meyer) available publicly for the first time.&lt;/p&gt;
&lt;h2&gt;Decoding Ritchie’s Dissertation&lt;/h2&gt;
&lt;div id=&quot;attachment_17337&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-17337&quot; class=&quot;wp-image-17337 size-large&quot; src=&quot;https://computerhistory.org/wp-content/uploads/2020/06/Ritchie_Copy-773x1024.png&quot; alt=&quot;&quot; width=&quot;773&quot; height=&quot;1024&quot;/&gt;&lt;p id=&quot;caption-attachment-17337&quot; class=&quot;wp-caption-text&quot;&gt;Page from Dennis Ritchie’s previously lost dissertation manuscript available publicly for the first time.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Recovering a copy of Ritchie’s lost dissertation and making it available is one thing, understanding it is another. To grasp what Ritchie’s dissertation is all about, we need to leap back to the early 20th century to a period of creative ferment in which mathematicians, philosophers, and logicians struggled over the ultimate foundations of mathematics. For centuries preceding this ferment, the particular qualities of mathematical knowledge—its exactitude and certitude—gave it a special, sometimes divine, status. While philosophical speculation about the source or foundation for these qualities stretches back to Pythagoras and Plato at least, in the early 20th century influential mathematicians and philosophers looked to formal logic—in which rules and procedures for reasoning are expressed in symbolic systems—as this foundation for mathematics.&lt;/p&gt;
&lt;p&gt;Across the 1920s, the German mathematician David Hilbert was incredibly influential in this attempt to secure the basis of mathematics in formal logic. In particular, Hilbert believed that one could establish certain qualities of mathematics—for example, that mathematics was free of contradictions and that any mathematical assertion could be shown to be true or to be false—by certain kinds of proofs in formal logic. In particular, the kinds of proofs that Hilbert advocated, called “finitist,” relied on applying simple, explicit, almost mechanical rules to the manipulation of the expressive symbols of formal logic. These would be proofs based on rigid creation of strings of symbols, line by line, from one another.&lt;/p&gt;
&lt;p&gt;In the 1930s, it was in the pursuit of such rules for logical manipulation of symbols that mathematicians and philosophers made a connection to &lt;em&gt;computation&lt;/em&gt;, and the step-by-step rigid processes by which human “computers” and mechanical calculators performed mathematical operations. Kurt Gödel provided a proof of just the sort that Hilbert advocated, but distressingly showed the opposite of what Hilbert and others had hoped. Rather than showing that logic ensured that everything that was true in mathematics could be proven, Gödel’s logic revealed mathematics to be the opposite, to be &lt;em&gt;incomplete&lt;/em&gt;. For this stunning result, Gödel’s proof rested on arguments about certain kinds of mathematical objects called &lt;em&gt;primitive recursive functions&lt;/em&gt;. What’s important about recursive functions for Gödel is that they were eminently &lt;em&gt;computable&lt;/em&gt;, that is they relied on “finite procedures,” just the kind of simple, almost mechanical, rules for which Hilbert had called.&lt;/p&gt;
&lt;div id=&quot;attachment_17348&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-17348&quot; class=&quot;size-large wp-image-17348&quot; src=&quot;https://computerhistory.org/wp-content/uploads/2020/06/Godel_Hilbert-1024x684.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;684&quot;/&gt;&lt;p id=&quot;caption-attachment-17348&quot; class=&quot;wp-caption-text&quot;&gt;Left: Kurt Gödel as a student in 1925. Wikipedia/Public domain. Right: David Hilbert, 1912. Wikipedia&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Quickly following Gödel, in the US, Alonzo Church used similar arguments about computability to formulate a logical proof that showed also that mathematics was not always &lt;em&gt;decidable&lt;/em&gt;, that is, that there were some statements about mathematics for which it is not possible to determine if they are true or are false. Church’s proof is based on a notion of “effectively calculable functions,” grounded in Gödel’s recursive functions. At almost the same time, and independently in the UK, Alan Turing constructed a proof of the very same result, but based on a notion of “computability” defined by the operation of an abstract “computing machine.” This abstract Turing machine, capable of any computation or calculation, would later become an absolutely critical basis for theoretical computer science.&lt;/p&gt;
&lt;p&gt;In the decades that followed, and before the emergence of computer science as a recognized discipline, mathematicians, philosophers, and others began to explore the nature of computation in its own right, increasingly divorced from connections to the foundation of mathematics. As Albert Meyer explains in his interview:&lt;/p&gt;
&lt;p&gt;“In the 1930s and 1940s, the notion of what was and wasn’t computable was very extensively worked on, was understood. There were logical limits due to Gödel and Turing about what could be computed and what couldn’t be computed. But the new idea [in the early 1960s] was ‘Let’s try to understand what you can do with computation, that was when the idea of computational complexity came into being . . . there were . . . all sorts of things you could do with computation, but not all of it was easy . . . How well could it be computed?”&lt;/p&gt;
&lt;p&gt;With the rise of electronic digital computing, then, for many of these researchers the question was less what logical arguments about computability could teach about the nature of mathematics, but what could these logical arguments reveal about the limits of computability itself. As those limits came to be well understood, the interests of these researchers shifted to the nature of computability within these limits. What could be proven about the realm of &lt;em&gt;possible&lt;/em&gt; computations?&lt;/p&gt;
&lt;div id=&quot;attachment_17350&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;35&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-17350&quot; class=&quot;size-large wp-image-17350&quot; src=&quot;https://computerhistory.org/wp-content/uploads/2020/06/MayerA_PortraitSimple152757-1024x819.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;819&quot;/&gt;&lt;p id=&quot;caption-attachment-17350&quot; class=&quot;wp-caption-text&quot;&gt;Professor Albert Meyer of MIT, who was in Dennis Ritchie’s graduate school cohort, and shares his recollections of Ritchie in a 2018 oral history interview.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;One of few places where these new investigations were taking place in the mid 1960s, when Dennis Ritchie and Albert Meyer both entered their graduate studies at Harvard, was in certain corners of departments of applied mathematics. These departments were also, frequently, where the practice of electronic digital computing took root early on academic campuses. As Meyer recalls:&lt;/p&gt;
&lt;p&gt;“Applied Mathematics was a huge subject in which this kind of theory of computation was a tiny, new part.”&lt;/p&gt;
&lt;p&gt;For both Ritchie and Meyer, theirs was a gravitation into Harvard’s applied mathematics department from their undergraduate studies in mathematics at the university, although Meyer does not recall having known Ritchie as an undergraduate. In their graduate studies, both became increasingly interested in the theory of computation, and thus alighted on Patrick Fischer as their advisor. Fischer at the time was a freshly minted PhD who was only at Harvard for the critical first years of Ritchie and Meyer’s studies, before alighting to Columbia in 1965. (Later, in 1982, Fischer was one of the Unabomber’s targets.) As Meyer recalls:&lt;/p&gt;
&lt;p&gt;“Patrick was very much interested in this notion of understanding the nature of computation, what made things hard, what made things easy, and they were approached in various ways . . . What kinds of things could different kinds of programs do?”&lt;/p&gt;
&lt;h2&gt;A Summer Problem—and Solution&lt;/h2&gt;
&lt;p&gt;After their first year of graduate study, unbeknownst to at least Meyer, Fischer independently hired both Ritchie and Meyer as summer research assistants. Meyer’s assignment? Work on a particular “open problem” in the theory of computation that Fischer had identified, and report back at the end of the summer. Fischer, for his part, would be away. Meyer spent a miserable summer working alone on the problem, reporting to Fischer at the end that he had only accomplished minor results. Soon after, walking to Fischer’s graduate seminar, Meyer was shocked as he realized a solution to the summer problem. Excitedly reporting his breakthrough to Fisher, Meyer was “surprised and a little disappointed to hear that Pat said that Dennis had also solved the problem.” Fischer had set Ritchie and Meyer the very same problem that summer but had not told them!&lt;/p&gt;
&lt;div id=&quot;attachment_17343&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;37&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-17343&quot; class=&quot;size-large wp-image-17343&quot; src=&quot;https://computerhistory.org/wp-content/uploads/2020/06/Dennis_Alistair_Graduate_Days_Motorcycle_Courtesy-Ritchie-Family.-1024x710.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;710&quot;/&gt;&lt;p id=&quot;caption-attachment-17343&quot; class=&quot;wp-caption-text&quot;&gt;Dennis Ritchie, during his graduate school days. His father, Alistair E. Ritchie (who also worked at Bell Labs), is seated on the back of Dennis Ritchie’s BSA 650 motorcycle. Courtesy Ritchie Family.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Fischer’s summer problem was a take on the large question of computational complexity, about the relative ease or time it takes to compute one kind of thing versus another. Recall that Gödel had used primitive recursive functions to exemplify computability by finite procedures, key to his famous work. In the 1950s, the Polish mathematician Andrzej Grzegorczyk defined a hierarchy of these same recursive functions based on how fast or slow the functions grow. Fischer’s summer question, then, was for Meyer and Ritchie to explore how this hierarchy of functions related to computational complexity. &lt;/p&gt;
&lt;p&gt; To his great credit, Meyer’s disappointment at summer’s end gave way to a great appreciation for Ritchie’s solution to Fischer’s problem: &lt;em&gt;loop programs&lt;/em&gt;. Meyer recalls “. . . this concept of loop programs, which was Dennis’s invention . . . was so beautiful and so important and such a terrific expository mechanism as well as an intellectual one to clarify what the subject was about, that I didn’t care whether he solved the problem.”&lt;/p&gt;
&lt;p&gt;Ritchie’s loop program solution to Fischer’s summer problem was the core of his 1968 dissertation. They are essentially very small, limited computer programs that would be familiar to anyone who ever used the FOR command for programming loops in BASIC. In loop programs, one can set a variable to zero, add 1 to a variable, or move the value of one variable to another. That’s it. The only control available in loop programs is . . . a simple loop, in which an instruction sequence is repeated a certain number of times. Importantly, loops can be “nested,” that is, loops within loops.&lt;/p&gt;
&lt;p&gt;What Ritchie shows in his dissertation is that these loop functions are exactly what is needed to produce Gödel’s primitive recursive functions, and only these functions; just those functions of Grzegorczyk hierarchy. Gödel held out his recursive functions as eminently computable, and Ritchie showed that loop programs were just the right tools for that job. Ritchie’s dissertation shows that the degree of “nestedness” of loop programs—the depth of loops within loops—is a measure of computational complexity for them, as well as a gauge for how much time is required for their computation. Further, he shows that assessing loop programs by their depth of loops is exactly equivalent to Grzegorczyk’s hierarchy. The rate of growth of primitive recursive functions is indeed related to their computational complexity, in fact, they are identical.&lt;/p&gt;
&lt;p&gt;As Meyer recalls:&lt;/p&gt;
&lt;p&gt;“Loop programs made into a very simple model that any computer scientist could understand instantly, something that the traditional formulation…in terms for primitive recursive hierarchies…with very elaborate logician’s notation for complicated syntax and so on that would make anybody’s eyes glaze over—Suddenly you had a three-line, four-line computer science description of loop programs.”&lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;While, as we have seen, Ritchie’s development of this loop program approach to computer science never made it out into the world through his dissertation, it did nevertheless make it into the literature in a joint publication with Albert Meyer in 1967.&lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;Meyer explains:&lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;“[Dennis] was a very sweet, easy going, unpretentious guy. Clearly very smart, but also kind of taciturn . . . So we talked a little, and we talked a about this paper that we wrote together, which I wrote, I believe. I don’t think he wrote it at all, but he read it . . . he read and made comments . . . and he explained loop programs to me.”&lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;The paper, “The Complexity of Loop Programs,” was published by the ACM in 1967, and was an important step in the launch of a highly productive and regarded career in theoretical computer science by Meyer.&lt;sup&gt;3&lt;/sup&gt; But it was a point of departure for and with Ritchie. As Meyer recalls:&lt;/p&gt;
&lt;p&gt;“It was a disappointment. I would have loved to collaborate with him, because he seemed like a smart, nice guy who’d be fun to work with, but yeah, you know, he was already doing other things. He was staying up all night playing Spacewar!”  &lt;/p&gt;
&lt;p class=&quot;newdcb&quot; align=&quot;left&quot;&gt;At the start of this essay, we noted that in his biographical statement on his website, Ritchie quipped, “My graduate school experience convinced me that I was not smart enough to be an expert in the theory of algorithms and also that I liked procedural languages better than functional ones.” While his predilection for procedural languages is without question, our exploration of his lost dissertation puts the lie to his self-assessment that he was not smart enough for theoretical computer science. More likely, Ritchie’s graduate school experience was one in which the lure of the theoretical gave way to the enchantments of implementation, of building new systems and new languages as a way to explore the bounds, nature, and possibilities of computing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Read Dennis Ritchie’s lost dissertation:&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.bell-labs.com/usr/dmr/www/bigbio1st.html&quot;&gt;Dennis M. Ritchie bio, Bell Labs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.computerhistory.org/collections/catalog/102717373&quot;&gt;Oral History of Albert Meyer, interviewed by David C. Brock, September 5, 2018, CHM &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Albert R. Meyer and Dennis M. Ritchie, “The Complexity of Loop Programs,” in &lt;em&gt;Proceedings of the 1967 22nd National Conference On -&lt;/em&gt; (the 1967 22nd national conference, Washington, D.C., United States: ACM Press, 1967), 465–69, https://doi.org/10.1145/800196.806014.&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Sat, 20 Jun 2020 05:59:03 +0000</pubDate>
<dc:creator>beefhash</dc:creator>
<og:type>article</og:type>
<og:title>Discovering Dennis Ritchie’s Lost Dissertation - CHM</og:title>
<og:description>Until recently, across a half-century perhaps fewer than a dozen people had ever had the opportunity to read Dennis Ritchie’s dissertation—the intellectual and biographical fork-in-the-road separating an academic career in computer science from the one at Bell Labs leading to C and Unix. Why?</og:description>
<og:url>https://computerhistory.org/blog/discovering-dennis-ritchies-lost-dissertation/</og:url>
<og:image>https://computerhistory.org/wp-content/uploads/2020/06/Ritchie_Copy.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://computerhistory.org/blog/discovering-dennis-ritchies-lost-dissertation/</dc:identifier>
</item>
<item>
<title>Ghoti</title>
<link>https://en.wikipedia.org/wiki/Ghoti</link>
<guid isPermaLink="true" >https://en.wikipedia.org/wiki/Ghoti</guid>
<description>&lt;a class=&quot;mw-jump-link&quot; href=&quot;https://en.wikipedia.org/wiki/Ghoti#mw-head&quot;&gt;Jump to navigation&lt;/a&gt;
		&lt;a class=&quot;mw-jump-link&quot; href=&quot;https://en.wikipedia.org/wiki/Ghoti#p-search&quot;&gt;Jump to search&lt;/a&gt;
		&lt;div id=&quot;mw-content-text&quot; lang=&quot;en&quot; dir=&quot;ltr&quot; class=&quot;mw-content-ltr&quot;&gt;&lt;div class=&quot;mw-parser-output&quot;&gt;
&lt;div role=&quot;note&quot; class=&quot;hatnote navigation-not-searchable&quot;&gt;For other uses, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti_(disambiguation)&quot; class=&quot;mw-disambig&quot; title=&quot;Ghoti (disambiguation)&quot;&gt;Ghoti (disambiguation)&lt;/a&gt;.&lt;/div&gt;
&lt;p&gt;&lt;i&gt;&lt;b&gt;Ghoti&lt;/b&gt;&lt;/i&gt; is a creative respelling of the word &lt;i&gt;fish&lt;/i&gt;, used to illustrate irregularities in &lt;a href=&quot;https://en.wikipedia.org/wiki/English_language&quot; title=&quot;English language&quot;&gt;English&lt;/a&gt; spelling and pronunciation.
&lt;/p&gt;


&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Explanation&quot;&gt;Explanation&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;The word is intended to be pronounced in the same way (&lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;'f' in 'find'&quot;&gt;f&lt;/span&gt;&lt;span title=&quot;/ɪ/: 'i' in 'kit'&quot;&gt;ɪ&lt;/span&gt;&lt;span title=&quot;/ʃ/: 'sh' in 'shy'&quot;&gt;ʃ&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;), using these sounds:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;gh&lt;/i&gt;, pronounced &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;'f' in 'find'&quot;&gt;f&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; as in &lt;i&gt;enough&lt;/i&gt; &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ɪ/: 'i' in 'kit'&quot;&gt;ɪ&lt;/span&gt;&lt;span title=&quot;/ˈ/: primary stress follows&quot;&gt;ˈ&lt;/span&gt;&lt;span title=&quot;'n' in 'nigh'&quot;&gt;n&lt;/span&gt;&lt;span title=&quot;/ʌ/: 'u' in 'cut'&quot;&gt;ʌ&lt;/span&gt;&lt;span title=&quot;'f' in 'find'&quot;&gt;f&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; or &lt;i&gt;tough&lt;/i&gt; &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;'t' in 'tie'&quot;&gt;t&lt;/span&gt;&lt;span title=&quot;/ʌ/: 'u' in 'cut'&quot;&gt;ʌ&lt;/span&gt;&lt;span title=&quot;'f' in 'find'&quot;&gt;f&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;o&lt;/i&gt;, pronounced &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ɪ/: 'i' in 'kit'&quot;&gt;ɪ&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; as in &lt;i&gt;women&lt;/i&gt; &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ˈ/: primary stress follows&quot;&gt;ˈ&lt;/span&gt;&lt;span title=&quot;'w' in 'wind'&quot;&gt;w&lt;/span&gt;&lt;span title=&quot;/ɪ/: 'i' in 'kit'&quot;&gt;ɪ&lt;/span&gt;&lt;span title=&quot;'m' in 'my'&quot;&gt;m&lt;/span&gt;&lt;span title=&quot;/ɪ/: 'i' in 'kit'&quot;&gt;ɪ&lt;/span&gt;&lt;span title=&quot;'n' in 'nigh'&quot;&gt;n&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;ti&lt;/i&gt;, pronounced &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ʃ/: 'sh' in 'shy'&quot;&gt;ʃ&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; as in &lt;i&gt;nation&lt;/i&gt; &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ˈ/: primary stress follows&quot;&gt;ˈ&lt;/span&gt;&lt;span title=&quot;'n' in 'nigh'&quot;&gt;n&lt;/span&gt;&lt;span title=&quot;/eɪ/: 'a' in 'face'&quot;&gt;eɪ&lt;/span&gt;&lt;span title=&quot;/ʃ/: 'sh' in 'shy'&quot;&gt;ʃ&lt;/span&gt;&lt;span title=&quot;/ən/: 'on' in 'button'&quot;&gt;ən&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; or &lt;i&gt;motion&lt;/i&gt; &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ˈ/: primary stress follows&quot;&gt;ˈ&lt;/span&gt;&lt;span title=&quot;'m' in 'my'&quot;&gt;m&lt;/span&gt;&lt;span title=&quot;/oʊ/: 'o' in 'code'&quot;&gt;oʊ&lt;/span&gt;&lt;span title=&quot;/ʃ/: 'sh' in 'shy'&quot;&gt;ʃ&lt;/span&gt;&lt;span title=&quot;/ən/: 'on' in 'button'&quot;&gt;ən&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The key to the phenomenon is that the pronunciations of the constructed word's three parts are inconsistent with how they would ordinarily be pronounced in those placements. To illustrate: &lt;i&gt;gh&lt;/i&gt; can only resemble &lt;i&gt;f&lt;/i&gt; when following the letters &lt;i&gt;ou&lt;/i&gt; or &lt;i&gt;au&lt;/i&gt; at the end of certain &lt;a href=&quot;https://en.wikipedia.org/wiki/Morpheme&quot; title=&quot;Morpheme&quot;&gt;morphemes&lt;/a&gt; (&quot;tough&quot;, &quot;cough&quot;, &quot;laugh&quot;), while &lt;i&gt;ti&lt;/i&gt; would only resemble &lt;i&gt;sh&lt;/i&gt; when followed by a vowel sound (&quot;mention&quot;, &quot;martian&quot;, &quot;patient&quot;, &quot;spatial&quot;). The expected pronunciation in English would sound like &quot;goaty&quot; &lt;span class=&quot;rt-commentedText nowrap&quot;&gt;&lt;span class=&quot;IPA nopopups noexcerpt&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English&quot; title=&quot;Help:IPA/English&quot;&gt;/&lt;span style=&quot;border-bottom:1px dotted&quot;&gt;&lt;span title=&quot;/ˈ/: primary stress follows&quot;&gt;ˈ&lt;/span&gt;&lt;span title=&quot;/ɡ/: 'g' in 'guy'&quot;&gt;ɡ&lt;/span&gt;&lt;span title=&quot;/oʊ/: 'o' in 'code'&quot;&gt;oʊ&lt;/span&gt;&lt;span title=&quot;'t' in 'tie'&quot;&gt;t&lt;/span&gt;&lt;span title=&quot;/i/: 'y' in 'happy'&quot;&gt;i&lt;/span&gt;&lt;/span&gt;/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;.&lt;sup id=&quot;cite_ref-nytzimmer_1-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-nytzimmer-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;History&quot;&gt;History&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;In 1815, there were several examples of absurd spellings given in a book by Alexander J. Ellis, &lt;i&gt;A Plea for Phonotypy and Phonography&lt;/i&gt;, which advocated spelling reform. However, &lt;i&gt;ghoti&lt;/i&gt; was not among the examples, which were all relatively lengthy and thus harder to remember.&lt;sup id=&quot;cite_ref-llog_2-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-llog-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;The first confirmed use of &lt;i&gt;ghoti&lt;/i&gt; is in a letter dated 11 December 1855 from &lt;a href=&quot;https://en.wikipedia.org/wiki/Charles_Ollier&quot; title=&quot;Charles Ollier&quot;&gt;Charles Ollier&lt;/a&gt; to &lt;a href=&quot;https://en.wikipedia.org/wiki/Leigh_Hunt&quot; title=&quot;Leigh Hunt&quot;&gt;Leigh Hunt&lt;/a&gt;. On the third page of the letter, Ollier explains, &quot;My son William has hit upon a new method of spelling Fish.&quot; Ollier then demonstrates the rationale, &quot;So that &lt;i&gt;ghoti&lt;/i&gt; is &lt;i&gt;fish&lt;/i&gt;.&quot;&lt;sup id=&quot;cite_ref-3&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt; The letter credits &lt;i&gt;ghoti&lt;/i&gt; to William Ollier Jr., born 1824.&lt;sup id=&quot;cite_ref-llog_2-1&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-llog-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-SJM_4-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-SJM-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;An early known &lt;i&gt;published&lt;/i&gt; reference is an October 1874 article by S. R. Townshend Mayer in &lt;i&gt;St. James's Magazine&lt;/i&gt;, which cites the letter.&lt;sup id=&quot;cite_ref-SJM_4-1&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-SJM-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;Another relatively early appearance of &lt;i&gt;ghoti&lt;/i&gt; was in a 1937 newspaper article,&lt;sup id=&quot;cite_ref-llog_2-2&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-llog-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; and the term is alluded to in the 1939 &lt;a href=&quot;https://en.wikipedia.org/wiki/James_Joyce&quot; title=&quot;James Joyce&quot;&gt;James Joyce&lt;/a&gt; milestone experimental work of fiction &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Finnegans_Wake&quot; title=&quot;Finnegans Wake&quot;&gt;Finnegans Wake&lt;/a&gt;&lt;/i&gt;.
&lt;/p&gt;&lt;p&gt;&lt;i&gt;Ghoti&lt;/i&gt; is often cited to support &lt;a href=&quot;https://en.wikipedia.org/wiki/English_spelling_reform&quot; class=&quot;mw-redirect&quot; title=&quot;English spelling reform&quot;&gt;English spelling reform&lt;/a&gt;, and is often attributed to &lt;a href=&quot;https://en.wikipedia.org/wiki/George_Bernard_Shaw&quot; title=&quot;George Bernard Shaw&quot;&gt;George Bernard Shaw&lt;/a&gt;,&lt;sup id=&quot;cite_ref-5&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt; a supporter of this cause. However, the word does not appear in Shaw's writings,&lt;sup id=&quot;cite_ref-llog_2-3&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-llog-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; and a biography of Shaw attributes it instead to an anonymous spelling reformer.&lt;sup id=&quot;cite_ref-6&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt; Similar constructed words exist that demonstrate English idiosyncrasies,&lt;sup id=&quot;cite_ref-nytzimmer_1-1&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-nytzimmer-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; but &lt;i&gt;ghoti&lt;/i&gt; is the most widely recognized.&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Notable_usage&quot;&gt;Notable usage&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;In &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Finnegans_Wake&quot; title=&quot;Finnegans Wake&quot;&gt;Finnegans Wake&lt;/a&gt;&lt;/i&gt; (published in 1939), &lt;a href=&quot;https://en.wikipedia.org/wiki/James_Joyce&quot; title=&quot;James Joyce&quot;&gt;James Joyce&lt;/a&gt; alludes to &lt;i&gt;ghoti&lt;/i&gt;: &quot;Gee each owe tea eye smells fish.&quot; (&quot;G-H-O-T-I spells 'fish'.&quot;) (p. 299).&lt;/li&gt;
&lt;li&gt;In the &lt;a href=&quot;https://en.wikipedia.org/wiki/Artistic_language&quot; title=&quot;Artistic language&quot;&gt;artistic language&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Klingon_language&quot; title=&quot;Klingon language&quot;&gt;Klingon&lt;/a&gt;, &lt;i&gt;&lt;code&gt;ghotI'&lt;/code&gt;&lt;/i&gt; is the proper word for &quot;fish&quot;.&lt;sup id=&quot;cite_ref-7&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-7&quot;&gt;[7]&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;In  &quot;An Egg Grows in Gotham&quot;, a 1966 episode of the television series &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Batman_(TV_series)&quot; title=&quot;Batman (TV series)&quot;&gt;Batman&lt;/a&gt;&lt;/i&gt;, the villain &lt;a href=&quot;https://en.wikipedia.org/wiki/Egghead_(DC_Comics)&quot; title=&quot;Egghead (DC Comics)&quot;&gt;Egghead&lt;/a&gt; uses &quot;Ghoti Oeufs&quot; as the name for his caviar business, and Batman explains the reference to Robin.&lt;sup id=&quot;cite_ref-8&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-8&quot;&gt;[8]&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti_Hook&quot; title=&quot;Ghoti Hook&quot;&gt;Ghoti Hook&lt;/a&gt; is a 1990s Christian punk band.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Ghoti&lt;/i&gt; has been used to test &lt;a href=&quot;https://en.wikipedia.org/wiki/Speech_synthesizer&quot; class=&quot;mw-redirect&quot; title=&quot;Speech synthesizer&quot;&gt;speech synthesizers&lt;/a&gt;.&lt;sup id=&quot;cite_ref-kevelson198601_9-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-kevelson198601-9&quot;&gt;[9]&lt;/a&gt;&lt;/sup&gt; The &lt;i&gt;Speech!&lt;/i&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Allophone&quot; title=&quot;Allophone&quot;&gt;allophone&lt;/a&gt;-based speech synthesizer software for the &lt;a href=&quot;https://en.wikipedia.org/wiki/BBC_Micro&quot; title=&quot;BBC Micro&quot;&gt;BBC Micro&lt;/a&gt; was tweaked to pronounce &lt;i&gt;ghoti&lt;/i&gt; as &lt;i&gt;fish&lt;/i&gt;.&lt;sup id=&quot;cite_ref-speechsynth_10-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_note-speechsynth-10&quot;&gt;[10]&lt;/a&gt;&lt;/sup&gt; Examination of the code reveals the string &lt;b&gt;GHOTI&lt;/b&gt; used to identify the special case.&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;See_also&quot;&gt;See also&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/English-language_spelling_reform&quot; title=&quot;English-language spelling reform&quot;&gt;English-language spelling reform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/English_orthography&quot; title=&quot;English orthography&quot;&gt;English orthography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/English_phonology&quot; title=&quot;English phonology&quot;&gt;English phonology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Chaos&quot; title=&quot;The Chaos&quot;&gt;The Chaos&lt;/a&gt;&quot;, a poem which demonstrates the irregularity of English orthography&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;References&quot;&gt;References&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;reflist&quot; style=&quot;list-style-type: decimal;&quot;&gt;
&lt;div class=&quot;mw-references-wrap&quot;&gt;&lt;ol class=&quot;references&quot;&gt;&lt;li id=&quot;cite_note-nytzimmer-1&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;^ &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-nytzimmer_1-0&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;a&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-nytzimmer_1-1&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFZimmer2010&quot; class=&quot;citation web&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Benjamin_Zimmer&quot; class=&quot;mw-redirect&quot; title=&quot;Benjamin Zimmer&quot;&gt;Zimmer, Ben&lt;/a&gt; (25 June 2010). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.nytimes.com/2010/06/27/magazine/27FOB-onlanguage-t.html&quot;&gt;&quot;Ghoti&quot;&lt;/a&gt;. &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/The_New_York_Times&quot; title=&quot;The New York Times&quot;&gt;The New York Times&lt;/a&gt;&lt;/i&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=unknown&amp;amp;rft.jtitle=The+New+York+Times&amp;amp;rft.atitle=Ghoti&amp;amp;rft.date=2010-06-25&amp;amp;rft.aulast=Zimmer&amp;amp;rft.aufirst=Ben&amp;amp;rft_id=https%3A%2F%2Fwww.nytimes.com%2F2010%2F06%2F27%2Fmagazine%2F27FOB-onlanguage-t.html&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;style data-mw-deduplicate=&quot;TemplateStyles:r951705291&quot;&gt;&lt;![CDATA[.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output .citation q{quotes:&quot;\&quot;&quot;&quot;\&quot;&quot;&quot;'&quot;&quot;'&quot;}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg&quot;);background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg&quot;);background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg&quot;);background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-ws-icon a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/12px-Wikisource-logo.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg&quot;);background-repeat:no-repeat;background-size:12px;background-position:right .1em center}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-maint{display:none;color:#33aa33;margin-left:0.3em}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}]]&gt;&lt;/style&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-llog-2&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;^ &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-llog_2-0&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;a&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-llog_2-1&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-llog_2-2&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;c&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-llog_2-3&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;d&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFZimmer2008&quot; class=&quot;citation web&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Benjamin_Zimmer&quot; class=&quot;mw-redirect&quot; title=&quot;Benjamin Zimmer&quot;&gt;Zimmer, Ben&lt;/a&gt; (23 April 2008). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://languagelog.ldc.upenn.edu/nll/?p=81&quot;&gt;&quot;&lt;span class=&quot;cs1-kern-left&quot;&gt;&quot;&lt;/span&gt;Ghoti&quot; before Shaw&quot;&lt;/a&gt;. &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Language_Log&quot; title=&quot;Language Log&quot;&gt;Language Log&lt;/a&gt;&lt;/i&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=unknown&amp;amp;rft.jtitle=Language+Log&amp;amp;rft.atitle=%22Ghoti%22+before+Shaw&amp;amp;rft.date=2008-04-23&amp;amp;rft.aulast=Zimmer&amp;amp;rft.aufirst=Ben&amp;amp;rft_id=https%3A%2F%2Flanguagelog.ldc.upenn.edu%2Fnll%2F%3Fp%3D81&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-3&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-3&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;The original letter is housed in the British Library.&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-SJM-4&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;^ &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-SJM_4-0&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;a&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-SJM_4-1&quot;&gt;&lt;sup&gt;&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFMayer1874&quot; class=&quot;citation magazine&quot;&gt;Mayer, S. R. Townshend (October 1874). &quot;Leigh Hunt and Charles Ollier&quot;. &lt;i&gt;St. James's Magazine&lt;/i&gt;. p. 406.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=St.+James%27s+Magazine&amp;amp;rft.atitle=Leigh+Hunt+and+Charles+Ollier&amp;amp;rft.pages=406&amp;amp;rft.date=1874-10&amp;amp;rft.aulast=Mayer&amp;amp;rft.aufirst=S.+R.+Townshend&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-5&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-5&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFHolroyd1994&quot; class=&quot;citation book&quot;&gt;Holroyd, Michael (1994). &lt;i&gt;Bernard Shaw: Volume III: 1918–1950: The Lure of Fantasy&lt;/i&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Random_House&quot; title=&quot;Random House&quot;&gt;Random House&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/ISBN_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;ISBN (identifier)&quot;&gt;ISBN&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Special:BookSources/0517130351&quot; title=&quot;Special:BookSources/0517130351&quot;&gt;&lt;bdi&gt;0517130351&lt;/bdi&gt;&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=book&amp;amp;rft.btitle=Bernard+Shaw%3A+Volume+III%3A+1918%E2%80%931950%3A+The+Lure+of+Fantasy&amp;amp;rft.pub=Random+House&amp;amp;rft.date=1994&amp;amp;rft.isbn=0517130351&amp;amp;rft.aulast=Holroyd&amp;amp;rft.aufirst=Michael&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-6&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-6&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFScobbie&quot; class=&quot;citation web&quot;&gt;Scobbie, Jim. &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://web.archive.org/web/20010225063805/http://www.alt-usage-english.org/excerpts/fxwhat04.html&quot;&gt;&quot;What is &quot;ghoti&quot;?&quot;&lt;/a&gt;. Archived from &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://alt-usage-english.org/excerpts/fxwhat04.html&quot;&gt;the original&lt;/a&gt; on 25 February 2019&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=What+is+%22ghoti%22%3F&amp;amp;rft.aulast=Scobbie&amp;amp;rft.aufirst=Jim&amp;amp;rft_id=http%3A%2F%2Falt-usage-english.org%2Fexcerpts%2Ffxwhat04.html&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-7&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-7&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation web&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.kli.org/about-klingon/new-klingon-words/gh/&quot;&gt;&quot;Klingon Language Institute&quot;&lt;/a&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Klingon+Language+Institute&amp;amp;rft_id=https%3A%2F%2Fwww.kli.org%2Fabout-klingon%2Fnew-klingon-words%2Fgh%2F&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-8&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-8&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation episode&quot;&gt;Teleplay by Stanley Ralph Ross, Story by Ed Self (19 October 1966). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.youtube.com/watch?v=c_de5St_97M#t=3m06s&quot;&gt;&quot;An Egg Grows in Gotham&quot;&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Batman_(TV_series)&quot; title=&quot;Batman (TV series)&quot;&gt;&lt;i&gt;Batman&lt;/i&gt;&lt;/a&gt;. Season 2. Episode 13.  Event occurs at 13 minutes. &lt;a href=&quot;https://en.wikipedia.org/wiki/American_Broadcasting_Company&quot; title=&quot;American Broadcasting Company&quot;&gt;ABC&lt;/a&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Batman&amp;amp;rft.series=Season+2.+Episode+13&amp;amp;rft.date=1966-10-19&amp;amp;rft_id=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dc_de5St_97M%23t%3D3m06s&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-kevelson198601-9&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-kevelson198601_9-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFKevelson1986&quot; class=&quot;citation news&quot;&gt;Kevelson, Morton (January 1986). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://archive.org/stream/Ahoy_Issue_25_1986-01_Ion_International_US#page/n31/mode/2up&quot;&gt;&quot;Speech Synthesizers for the Commodore Computers / Part II&quot;&lt;/a&gt;. &lt;i&gt;Ahoy!&lt;/i&gt;. p. 32&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=Ahoy%21&amp;amp;rft.atitle=Speech+Synthesizers+for+the+Commodore+Computers+%2F+Part+II&amp;amp;rft.pages=32&amp;amp;rft.date=1986-01&amp;amp;rft.aulast=Kevelson&amp;amp;rft.aufirst=Morton&amp;amp;rft_id=https%3A%2F%2Farchive.org%2Fstream%2FAhoy_Issue_25_1986-01_Ion_International_US%23page%2Fn31%2Fmode%2F2up&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-speechsynth-10&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ghoti#cite_ref-speechsynth_10-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation web&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://newsgroups.derkeiler.com/Archive/Rec/rec.games.computer.ultima.dragons/2006-05/msg01548.html&quot;&gt;&quot;Re: Spelling Bees&quot;&lt;/a&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;23 May&lt;/span&gt; 2019&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Re%3A+Spelling+Bees&amp;amp;rft_id=http%3A%2F%2Fnewsgroups.derkeiler.com%2FArchive%2FRec%2Frec.games.computer.ultima.dragons%2F2006-05%2Fmsg01548.html&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AGhoti&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;External_links&quot;&gt;External links&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.alphadictionary.com/articles/ling006.html&quot;&gt;How to pronounce &quot;ghoti&quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://www.zompist.com/spell.html&quot;&gt;Hou tu pranownse Inglish&lt;/a&gt;, an essay on grapheme-to-phoneme rules that discusses &quot;ghoti&quot;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://web.archive.org/web/20060226003520/http://www.alt-usage-english.org/excerpts/fxwhat04.html&quot;&gt;&quot;What is ghoti?&quot; by Jim Scobbie&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;mw-empty-elt&quot;&gt;
&lt;/p&gt;
&lt;!-- 
NewPP limit report
Parsed by mw1405
Cached time: 20200618213314
Cache expiry: 2592000
Dynamic content: false
Complications: [vary&amp;#8208;revision&amp;#8208;sha1]
CPU time usage: 0.252 seconds
Real time usage: 0.375 seconds
Preprocessor visited node count: 940/1000000
Post&amp;#8208;expand include size: 21785/2097152 bytes
Template argument size: 1137/2097152 bytes
Highest expansion depth: 13/40
Expensive parser function count: 2/500
Unstrip recursion depth: 1/20
Unstrip post&amp;#8208;expand size: 35189/5000000 bytes
Number of Wikibase entities loaded: 0/400
Lua time usage: 0.140/10.000 seconds
Lua memory usage: 4.5 MB/50 MB
--&gt;
&lt;!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  343.074      1 -total
 43.14%  148.014      1 Template:Reflist
 29.08%   99.780      5 Template:Cite_web
 12.76%   43.769     10 Template:IPAc-en
 12.14%   41.643      1 Template:Short_description
  8.98%   30.824      1 Template:Fact
  8.58%   29.426      1 Template:Italic_title
  6.93%   23.767      1 Template:Pagetype
  6.57%   22.529      1 Template:Fix
  5.91%   20.284      1 Template:Otheruses
--&gt;

&lt;!-- Saved in parser cache with key enwiki:pcache:idhash:767800-0!canonical and timestamp 20200618213313 and revision id 961295888
 --&gt;
&lt;/div&gt;&lt;noscript&gt;&lt;img src=&quot;https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&quot; alt=&quot;&quot; title=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; style=&quot;border: none; position: absolute;&quot;/&gt;&lt;/noscript&gt;&lt;/div&gt;
		&lt;div class=&quot;printfooter&quot;&gt;Retrieved from &quot;&lt;a dir=&quot;ltr&quot; href=&quot;https://en.wikipedia.org/w/index.php?title=Ghoti&amp;amp;oldid=961295888&quot;&gt;https://en.wikipedia.org/w/index.php?title=Ghoti&amp;amp;oldid=961295888&lt;/a&gt;&quot;&lt;/div&gt;
		
		&lt;div class=&quot;visualClear&quot;/&gt;
		
	</description>
<pubDate>Sat, 20 Jun 2020 05:05:38 +0000</pubDate>
<dc:creator>marvindanig</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://en.wikipedia.org/wiki/Ghoti</dc:identifier>
</item>
<item>
<title>The Nova Scotia shooter case has hallmarks of an undercover operation?</title>
<link>https://www.macleans.ca/news/canada/the-nova-scotia-shooter-case-has-hallmarks-of-an-undercover-operation/</link>
<guid isPermaLink="true" >https://www.macleans.ca/news/canada/the-nova-scotia-shooter-case-has-hallmarks-of-an-undercover-operation/</guid>
<description>&lt;p&gt;The withdrawal of $475,000 in cash by the man who killed 22 Nova Scotians in April matches the method the RCMP uses to send money to confidential informants and agents, sources say.&lt;/p&gt;
&lt;p&gt;Gabriel Wortman, who is responsible for the largest mass killing in Canadian history, withdrew the money from a Brink’s depot in Dartmouth, N.S., on March 30, stashing a carryall filled with hundred-dollar bills in the trunk of his car.&lt;/p&gt;
&lt;p&gt;According to a source close to the police investigation the money came from CIBC Intria, a subsidiary of the chartered bank that handles currency transactions.&lt;/p&gt;
&lt;p&gt;Sources in both banking and the RCMP say the transaction is consistent with how the RCMP funnels money to its confidential informants and agents, and is not an option available to private banking customers.&lt;/p&gt;
&lt;p&gt;The RCMP has repeatedly said that it had no “special relationship” with Wortman.&lt;/p&gt;
&lt;p&gt;Court documents show Wortman owned a New Brunswick-registered company called Berkshire-Broman, the legal owner of two of his vehicles (including one of his police replica cars). Whatever the purpose of that company, there is no public evidence that it would have been able to move large quantities of cash. Wortman also ran his own denturist business and there is no reason to believe it also would require him to handle large amounts of cash.&lt;/p&gt;
&lt;p&gt;If Wortman was an RCMP informant or agent, it could explain why the force appeared not to take action on complaints about his illegal guns and his assault on his common-law wife.&lt;/p&gt;
&lt;blockquote readability=&quot;0.66666666666667&quot;&gt;
&lt;p&gt;&lt;strong&gt;READ MORE: &lt;a href=&quot;https://www.macleans.ca/news/canada/the-nova-scotia-killer-had-ties-to-criminals-and-withdrew-a-huge-sum-of-cash-before-the-shooting/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The Nova Scotia killer had ties to criminals and withdrew a huge sum of cash before the shooting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A Mountie familiar with the techniques used by the force in undercover operations, but not with the details of the investigation into the shooting, says Wortman could not have collected his own money from Brink’s as a private citizen.&lt;/p&gt;
&lt;p&gt;“There’s no way a civilian can just make an arrangement like that,” he said in an interview.&lt;/p&gt;
&lt;p&gt;He added that Wortman’s transaction is consistent with the Mountie’s experience in how the RCMP pays its assets. “I’ve worked a number of CI cases over the years and that’s how things go. All the payments are made in cash. To me that transaction alone proves he has a secret relationship with the force.”&lt;/p&gt;
&lt;p&gt;A second Mountie, who does not know the first one but who has also been involved in CI operations, also believes that Wortman’s ability to withdraw a large sum of money from Brink’s is an indication that Wortman had a link with the police. “That’s tradecraft,” the Mountie said, explaining that by going through CIBC Intria, the RCMP could avoid typical banking scrutiny, as there are no holds placed on the money.&lt;/p&gt;
&lt;p&gt;“That’s what we do when we need flash money for a buy. We don’t keep stashes of money around the office. When we suddenly need a large sum of money to make a buy or something, that’s the route we take. I think [with the Brink’s transaction] you’ve proved with that single fact that he had a relationship with the police. He was either a CI or an agent.”&lt;/p&gt;


&lt;p&gt;A Canadian retail banking expert speaking on condition that they not be identified says it is unlikely that Wortman was cashing out his own savings when he collected the money from Brinks after the money was transferred from CIBC Intria.&lt;/p&gt;
&lt;p&gt;“When you come into my branch and you want a ton of cash, then I say, you gotta give us a couple of days. We put in our Brink’s order, I order the money through Brink’s, then when the money arrives, you come back into the branch, I bring you into a back room and I count the money out for you,” the banking expert said. “Sending someone to Brink’s to get the money? I’ve never heard of that before. The reason is, if I’m the banker, and you’ve deposited your savings in my bank branch, I’m responsible for making sure the money goes to the right person. If you want this money, I’m going to verify your identity and document that. I can’t do that if I’m transferring the money to Brink’s.”&lt;/p&gt;
&lt;p&gt;In response to detailed questions from &lt;em&gt;Maclean’s&lt;/em&gt; about the transaction, a CIBC spokesperson replied via email: “Our hearts and thoughts are with the families and the entire community as they deal with this senseless tragedy and loss. Unfortunately we are not able to comment on specific client matters.” Brinks did not reply to questions about the transaction.&lt;/p&gt;
&lt;p&gt;The banking expert speculates that the RCMP could keep transactions relatively quiet by going through Brink’s instead of a bank to transfer money to a confidential informant or an agent.&lt;/p&gt;
&lt;p&gt;“You can imagine that if someone comes in with large sums of cash, that stuff is not kept quiet. You don’t want that. Maybe what the RCMP was doing is they thought they could keep things quieter simply by transferring funds via Brink’s.”&lt;/p&gt;
&lt;p&gt;At a press briefing on June 4, Nova Scotia RCMP Superintendent Darren Campbell seemed to rule out the possibility that Wortman was a confidential informant for the force. “The gunman was never associated to the RCMP as a volunteer or auxiliary police officer, nor did the RCMP ever have any special relationship with the gunman of any kind.”&lt;/p&gt;
&lt;p&gt;The RCMP Operations Manual, a copy of which was obtained by &lt;em&gt;Maclean’s&lt;/em&gt;, authorizes the force to mislead all but the courts in order to conceal the identity of confidential informants and agent sources.&lt;/p&gt;
&lt;p&gt;“The identity of a source must be protected at all times except when the administration of justice requires otherwise, i.e. a member cannot mislead a court in any proceeding in order to protect a source.”&lt;/p&gt;
&lt;p&gt;A spokeswoman for the Nova Scotia RCMP declined further comment after &lt;em&gt;Maclean’s&lt;/em&gt; reported on the financial transaction.&lt;/p&gt;
&lt;p&gt;“This is still an active, ongoing investigation,” said Cpl. Jennifer Clarke in an email on Friday. “All investigative avenues and possibilities continue to be explored, analyzed, and processed with due diligence. This is to ensure that the integrity of the investigation is not compromised. We cannot release anything more related to your questions.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Maclean’s&lt;/em&gt; &lt;a href=&quot;https://www.macleans.ca/news/canada/the-nova-scotia-killer-had-ties-to-criminals-and-withdrew-a-huge-sum-of-cash-before-the-shooting/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;reported earlier this week&lt;/a&gt; that sources say Wortman had social relationships with Hells Angels, and with a neighbour, Peter Alan Griffon, who recently finished serving part of a seven-year sentence for drug and firearm offences linked to La Familia, a Mexican cartel. Sources say Griffon printed the decals that Wortman used on the replica RCMP cruiser he used in his rampage.&lt;/p&gt;
&lt;p&gt;Sources say that RCMP in New Brunswick, not Nova Scotia, recently took over operational control of investigations into outlaw bikers in the Maritimes, which means that Nova Scotia Mounties may not have been aware of any connection to Wortman.&lt;/p&gt;
&lt;p&gt;The RCMP Operations Manual identifies two types of sources: informant sources and agent sources. A law enforcement source said the force uses Brink’s to make large payments to agent sources, not informant sources.&lt;/p&gt;
&lt;p&gt;“Informants are never paid more than a couple hundred at a time,” said a person briefed on RCMP operations. “Anything over $10,000 is agent money.”&lt;/p&gt;
&lt;p&gt;Agents typically have greater responsibilities than informants. Only officers who have received specialized training are allowed to handle agents.&lt;/p&gt;
&lt;p&gt;“An agent source is a person tasked by investigators to assist in the development of target operations,” says the manual. “Direct involvement and association with a target may result in his/her becoming a material and compellable witness, ie. a source used to introduce undercover operations, act as a courier for controlled delivers or act in place of an RCMP undercover operator by obtaining evidence.”&lt;/p&gt;
&lt;p&gt;If the money was a transfer from the RCMP to an agent, there would be a paper trail through FINTRAC, the Financial Transactions and Reports Analysis Centre of Canada, which tracks large cash transactions and suspicious transactions.&lt;/p&gt;
&lt;p&gt;“Brink’s does the FINTRAC paperwork saying it’s coming from us, it’s from a chartered bank, and the RCMP liaison at FINTRAC signs off, handles the paperwork,” said a source briefed on the system. “The RCMP guys clear it or they refer it for further investigation. They manually clear those FINTRAC reports coming from Brink’s related to paid agents.”&lt;/p&gt;
&lt;p&gt;The RCMP Operations Manual requires officers handling confidential informants and agents to send reports to the director of the Covert Operations Branch at National Headquarters.&lt;/p&gt;
&lt;p&gt;Headquarters’ media relations office said in an email Friday that Campbell’s statement that the force never had a “special relationship” with Wortman “still stands.”&lt;/p&gt;
&lt;p&gt;The attorney general of Nova Scotia, former RCMP staff sergeant Mark Furey, has said the province is in talks with Ottawa about a joint federal-provincial inquiry or review of Wortman’s murderous rampage.&lt;/p&gt;
&lt;p&gt;Furey’s office did not reply before deadline to a question about whether the terms of the inquiry would allow inquiry counsel to pierce the powerful legal privilege that attaches to confidential informants.&lt;/p&gt;
&lt;p&gt;Family members of the victims have complained that the process is dragging out. As calls for an inquiry mount, so does speculation about what happened, among both the general public and the RCMP.&lt;/p&gt;
&lt;p&gt;One former Mountie says he doesn’t understand why Wortman would turn against the Mounties if they were paying him. “What seems inconsistent to me is why are you going to bite the hand that feeds you? If he’s getting money, and that’s a lot of money for an agent, or a CI, that part doesn’t make sense to me.”&lt;/p&gt;
&lt;p&gt;The former investigator pointed out that if Wortman was acting for the RCMP, and receiving that amount of money, he would eventually be expected to testify.&lt;/p&gt;
&lt;p&gt;“If he was an agent, he should show up on a witness docket.”&lt;/p&gt;
&lt;p&gt;But another Mountie says, “This guy always wanted to be a Mountie. He was acting like a Mountie. He was doing Mountie things. It’s clear to me that something went wrong.”&lt;/p&gt;
&lt;hr/&gt;&lt;h3&gt;Contact our reporters:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Stephen Maher: &lt;/strong&gt;stephenjamesmaher@gmail.com&lt;br/&gt;&lt;strong&gt;Shannon Gormley:&lt;/strong&gt; shannon.n.gormley@gmail.com&lt;br/&gt;&lt;strong&gt;Paul Palango:&lt;/strong&gt; paulpalango@eastlink.ca&lt;/p&gt;



&lt;span class=&quot;ctx-article-root&quot;/&gt;


</description>
<pubDate>Sat, 20 Jun 2020 03:18:45 +0000</pubDate>
<dc:creator>AndrewBissell</dc:creator>
<og:type>article</og:type>
<og:title>The Nova Scotia shooter case has hallmarks of an undercover operation - Macleans.ca</og:title>
<og:description>Police sources say the killer's withdrawal of $475,000 was highly irregular, and how an RCMP ‘agent’ would get money</og:description>
<og:url>https://www.macleans.ca/news/canada/the-nova-scotia-shooter-case-has-hallmarks-of-an-undercover-operation/</og:url>
<og:image>https://www.macleans.ca/wp-content/uploads/2020/06/GABRIEL-WORTMAN-BRINKS-04-JUNE17-767x431.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.macleans.ca/news/canada/the-nova-scotia-shooter-case-has-hallmarks-of-an-undercover-operation/</dc:identifier>
</item>
<item>
<title>“This resentment runs deep and is stunningly widespread”</title>
<link>https://daringfireball.net/linked/2020/06/19/swisher-app-store-hey</link>
<guid isPermaLink="true" >https://daringfireball.net/linked/2020/06/19/swisher-app-store-hey</guid>
<description>&lt;p&gt;Kara Swisher’s New York Times column on Apple’s rejection of Basecamp’s Hey app from the App Store is an outstanding overview of the whole dispute — accurate and fair. One central point that jumped out to me:&lt;/p&gt;
&lt;blockquote readability=&quot;21&quot;&gt;
&lt;p&gt;Yet Apple has also changed rules in ways that many developers find capricious and unfair and, more to the point, scary. While complaints have been raised for a long time about what Ben Thompson of Stratechery calls Apple’s “rent-seeking” practices, many developers do not want to speak out for fear of falling afoul of Apple and, worse, getting banned from its store.&lt;/p&gt;
&lt;p&gt;But not Basecamp’s iconoclastic and outspoken founders, Jason Fried and David Heinemeier Hansson, who took to Twitter and other media to complain loudly after the Hey.com app had been accepted by Apple and then flagged for being in violation of its rules last week. In practice, that means Hey.com cannot make crucial bug updates.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To say that “many developers do not want to speak out for fear of falling afoul of Apple” is an understatement. Almost &lt;em&gt;none&lt;/em&gt; do. And one thing I’ve learned this week — mostly via private communication, because, again, they fear speaking out publicly — is that there are a &lt;em&gt;lot&lt;/em&gt; of them. Without touching upon the question of who’s right and who’s wrong in the specific case of Basecamp’s Hey app, or the broader questions of what, if anything, ought to change in Apple’s App Store policies, an undeniable and important undercurrent to this story is that the business model policies of the App Store have resulted in a tremendous amount of resentment. This spans the entire gamut from one-person indies all the way up to the handful of large corporations that can be considered Apple’s peers or near-peers.&lt;/p&gt;
&lt;p&gt;This resentment runs deep and is stunningly widespread. You have to trust me on the number of stories I’ve been told in confidence, just this week. Again, putting aside everything else — legal questions of antitrust and competition, ethical questions about what’s fair, procedural questions regarding what should change in the written and unwritten App Store rules, acknowledgement of all the undeniably great things about the App Store from the perspective of users and developers — this deep widespread resentment among developers large and small is a serious problem for Apple.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Even if you think Apple is doing nothing wrong&lt;/em&gt;, it’s not healthy or sustainable if the developers of a huge number of popular apps are only in the App Store because they feel they &lt;em&gt;have&lt;/em&gt; to be there, not because they &lt;em&gt;want&lt;/em&gt; to be there, and if they feel — justifiably or not — that Apple is taking advantage of their need to be there. Tim Cook rightly loves to cite Apple’s high customer satisfaction scores as a measure of success. I think if Apple measured developer satisfaction scores on the App Store, the results would be jarring.&lt;/p&gt;
&lt;p class=&quot;smallprint&quot;&gt;★ &lt;em&gt;Friday, 19 June 2020&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 20 Jun 2020 01:38:29 +0000</pubDate>
<dc:creator>mortenjorck</dc:creator>
<og:title>Kara Swisher: ‘Is It Finally Hammer Time for Apple and Its App Store?’</og:title>
<og:url>https://daringfireball.net/linked/2020/06/19/swisher-app-store-hey</og:url>
<og:description>Link to: https://www.nytimes.com/2020/06/19/opinion/apple-app-store-hey.html</og:description>
<og:image>https://daringfireball.net/graphics/df-square-1024.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://daringfireball.net/linked/2020/06/19/swisher-app-store-hey</dc:identifier>
</item>
</channel>
</rss>