<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Zig cc: A drop-in replacement for GCC/Clang</title>
<link>https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html</link>
<guid isPermaLink="true" >https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html</guid>
<description>&lt;p&gt;If you have heard of &lt;a href=&quot;https://ziglang.org/&quot;&gt;Zig&lt;/a&gt; before, you may know it as a promising new programming language which is ambitiously trying to overthrow C as the de-facto systems language. But did you know that it also can straight up compile C code?&lt;/p&gt;
&lt;p&gt;This has been possible for a while, and you can see some &lt;a href=&quot;https://ziglang.org/#Zig-is-also-a-C-compiler&quot;&gt;examples of this on the home page&lt;/a&gt;. What's new is that the &lt;code&gt;zig cc&lt;/code&gt; sub-command is available, and it supports the same options as &lt;a href=&quot;https://clang.llvm.org/&quot;&gt;Clang&lt;/a&gt;, which, in turn, supports the same options as &lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;GCC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, I'm sure you're feeling pretty skeptical right about now, so let me hook you real quick before I get into the juicy details.&lt;/p&gt;
&lt;h2&gt;Clang and GCC cannot do this:&lt;/h2&gt;
&lt;pre&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; cat hello.c&lt;/strong&gt;
#include &amp;lt;stdio.h&amp;gt;

int main(int argc, char **argv) {
    fprintf(stderr, &quot;Hello, World!\n&quot;);
    return 0;
}
&lt;strong&gt;andy@ark ~/tmp&amp;gt; clang -o hello.exe hello.c -target x86_64-windows-gnu&lt;/strong&gt;
clang-7: warning: argument unused during compilation: '--gcc-toolchain=/nix/store/ificps9si1nvz85f9xa7gjd9h6r5lzg6-gcc-9.2.0' [-Wunused-command-line-argument]
/nix/store/7bhi29ainf5rjrk7k7wyhndyskzyhsxh-binutils-2.31.1/bin/ld: unrecognised emulation mode: i386pep
Supported emulations: elf_x86_64 elf32_x86_64 elf_i386 elf_iamcu elf_l1om elf_k1om
clang-7: &lt;span&gt;error&lt;/span&gt;: linker command failed with exit code 1 (use -v to see invocation)
&lt;strong&gt;andy@ark ~/tmp&amp;gt; clang -o hello hello.c -target mipsel-linux-musl&lt;/strong&gt;
In file included from hello.c:1:
In file included from /nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/stdio.h:27:
In file included from /nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/bits/libc-header-start.h:33:
In file included from /nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/features.h:452:
/nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/gnu/stubs.h:7:11: &lt;span&gt;fatal error&lt;/span&gt;: 
      'gnu/stubs-32.h' file not found
# include &amp;lt;gnu/stubs-32.h&amp;gt;
          ^~~~~~~~~~~~~~~~
1 error generated.
&lt;strong&gt;andy@ark ~/tmp&amp;gt; clang -o hello hello.c -target aarch64-linux-gnu&lt;/strong&gt;
In file included from hello.c:1:
In file included from /nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/stdio.h:27:
In file included from /nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/bits/libc-header-start.h:33:
In file included from /nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/features.h:452:
/nix/store/8pp3i3hcp7bv0f8jllzqq7gcp9dbzvp9-glibc-2.27-dev/include/gnu/stubs.h:7:11: &lt;span&gt;fatal error&lt;/span&gt;: 
      'gnu/stubs-32.h' file not found
# include &amp;lt;gnu/stubs-32.h&amp;gt;
          ^~~~~~~~~~~~~~~~
1 error generated.
&lt;/pre&gt;
&lt;h2&gt;`zig cc` can:&lt;/h2&gt;
&lt;pre&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; zig cc -o hello.exe hello.c -target x86_64-windows-gnu&lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; wine64 hello.exe&lt;/strong&gt;
Hello, World!
&lt;strong&gt;andy@ark ~/tmp&amp;gt; zig cc -o hello hello.c -target mipsel-linux-musl&lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; qemu-mipsel ./hello&lt;/strong&gt;
Hello, World!
&lt;strong&gt;andy@ark ~/tmp&amp;gt; zig cc -o hello hello.c -target aarch64-linux-gnu&lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; qemu-aarch64 -L ~/Downloads/glibc/multi-2.31/install/glibcs/aarch64-linux-gnu ./hello&lt;/strong&gt;
Hello, World!
&lt;/pre&gt;
&lt;h2&gt;Features of `zig cc`&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;zig cc&lt;/code&gt; is &lt;em&gt;not the main purpose of the Zig project&lt;/em&gt;. It merely exposes the already-existing capabilities of the Zig compiler via a small frontend layer that parses C compiler options.&lt;/p&gt;
&lt;h3&gt;Install simply by unzipping a tarball&lt;/h3&gt;
&lt;p&gt;Zig is an open source project, and of course can be &lt;a href=&quot;https://github.com/ziglang/zig/#building-from-source&quot;&gt;built and installed from source the usual way&lt;/a&gt;. However, the Zig project also has tarballs available on &lt;a href=&quot;https://ziglang.org/download/&quot;&gt;the download page&lt;/a&gt;. You can download a 45 MiB tarball, unpack it, and you're done. You can even have multiple versions at the same time, no problem.&lt;/p&gt;
&lt;p&gt;Here, rather than downloading the x86_64-linux version, which matches the computer I am currently using, I'll download the Windows version and run it in &lt;a href=&quot;https://www.winehq.org/&quot;&gt;Wine&lt;/a&gt; to show how simple installation is:&lt;/p&gt;
&lt;pre&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; wget --quiet https://ziglang.org/builds/zig-windows-x86_64-0.5.0+13d04f996.zip&lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; unzip -q zig-windows-x86_64-0.5.0+13d04f996.zip &lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; wine64 ./zig-windows-x86_64-0.5.0+13d04f996/zig.exe cc -o hello hello.c -target x86_64-linux&lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; ./hello&lt;/strong&gt;
Hello, World!
&lt;/pre&gt;
&lt;p&gt;Take a moment to appreciate what just happened here - I downloaded a Windows build of Zig, ran it in Wine, using it to cross compile for Linux, and then ran the binary natively. Computers are fun!&lt;/p&gt;
&lt;p&gt;Compare this to &lt;a href=&quot;https://github.com/llvm/llvm-project/releases/tag/llvmorg-9.0.1&quot;&gt;downloading Clang&lt;/a&gt;, which has 380 MiB Linux-distribution-specific tarballs. Zig's Linux tarballs are fully statically linked, and therefore work correctly on all Linux distributions. The size difference here comes because the Clang tarball ships with more utilities than a C compiler, as well as pre-compiled static libraries for both LLVM and Clang. Zig does not ship with any pre-compiled libraries; instead it ships with source code, and builds what it needs on-the-fly.&lt;/p&gt;
&lt;h3 id=&quot;caching-system&quot;&gt;Caching System&lt;/h3&gt;
&lt;p&gt;The Zig compiler uses a sophisticated caching system to avoid needlessly rebuilding artifacts. I carefully designed this caching system to make optimal use of the file system while maintaining correct semantics - which is &lt;a href=&quot;https://apenwarr.ca/log/20181113&quot;&gt;trickier than you might think&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The caching system uses a combination of hashing inputs and checking the fstat values of file paths, while being mindful of mtime granularity. This makes it avoid needlessly hashing files, while at the same time detecting when a modified file has the same contents. It always has correct behavior, whether the file system has nanosecond mtime granularity, second granularity, always sets mtime to zero, or anything in between.&lt;/p&gt;
&lt;p&gt;You can find a &lt;a href=&quot;https://ziglang.org/download/0.4.0/release-notes.html#Build-Artifact-Caching&quot;&gt;detailed description of the caching system in the 0.4.0 release notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zig cc&lt;/code&gt; makes this caching system available when compiling C code. For simple enough projects, this obviates the need for a Makefile or other build system.&lt;/p&gt;
&lt;pre&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; cat foo.c&lt;/strong&gt;
#include &amp;lt;stdio.h&amp;gt;

#include &quot;another_file.c&quot;

int main(int argc, char **argv) {
#include &quot;printf_many_times.c&quot;
}
&lt;strong&gt;andy@ark ~/tmp&amp;gt; cat another_file.c &lt;/strong&gt;
void another(void) {}
&lt;strong&gt;andy@ark ~/tmp&amp;gt; time zig cc -c foo.c&lt;/strong&gt;
0.12
&lt;strong&gt;andy@ark ~/tmp&amp;gt; time zig cc -c foo.c&lt;/strong&gt;
0.01
&lt;strong&gt;andy@ark ~/tmp&amp;gt; touch another_file.c &lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; time zig cc -c foo.c&lt;/strong&gt;
0.01
&lt;strong&gt;andy@ark ~/tmp&amp;gt; echo &quot;/* add a comment */&quot; &amp;gt;&amp;gt;another_file.c&lt;/strong&gt;
&lt;strong&gt;andy@ark ~/tmp&amp;gt; time zig cc -c foo.c&lt;/strong&gt;
0.12
&lt;strong&gt;andy@ark ~/tmp&amp;gt; time zig cc -c foo.c&lt;/strong&gt;
0.01
&lt;/pre&gt;
&lt;p&gt;Here you can see the caching system is smart enough to find dependencies that are included with the preprocessor, and smart enough to avoid a full rebuild when the mtime of another_file.c was updated.&lt;/p&gt;
&lt;p&gt;One last thing before I move on. I want to point out that this caching system is not some fluffy bloated feature - rather it is an absolutely critical component to making cross-compiling work in a usable manner. As we'll see below, other compilers ship with pre-compiled, target-specific binaries, while Zig ships with &lt;em&gt;source code only&lt;/em&gt; and cross-compiles on-the-fly, caching the result.&lt;/p&gt;
&lt;h3&gt;Cross Compiling&lt;/h3&gt;
&lt;p&gt;I have carefully designed Zig since the very beginning to treat cross compilation as a first class use case. Now that the &lt;code&gt;zig cc&lt;/code&gt; frontend is available, it brings these capabilities to C code.&lt;/p&gt;
&lt;p&gt;I showed you above cross-compiling some simple &quot;Hello, World!&quot; programs. But now let's try a real-world C project.&lt;/p&gt;
&lt;p&gt;Let's try &lt;a href=&quot;https://luajit.org/&quot;&gt;LuaJIT&lt;/a&gt;!&lt;/p&gt;
&lt;pre&gt;
[~/Downloads]$ &lt;strong&gt;git clone https://github.com/LuaJIT/LuaJIT&lt;/strong&gt;
[~/Downloads]$ &lt;strong&gt;cd LuaJIT&lt;/strong&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;ls&lt;/strong&gt;
COPYRIGHT  doc  dynasm  etc  Makefile  README  src
&lt;/pre&gt;
&lt;p&gt;OK so it uses standard Makefiles. Here we go, first let's make sure it works natively with &lt;code&gt;zig cc&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;export CC=&quot;zig cc&quot;&lt;/strong&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;make CC=&quot;$CC&quot;&lt;/strong&gt;
==== Building LuaJIT 2.1.0-beta3 ====
make -C src
make[1]: Entering directory '/home/andy/Downloads/LuaJIT/src'
HOSTCC    host/minilua.o
HOSTLINK  host/minilua
DYNASM    host/buildvm_arch.h
HOSTCC    host/buildvm.o
HOSTCC    host/buildvm_asm.o
HOSTCC    host/buildvm_peobj.o
HOSTCC    host/buildvm_lib.o
HOSTCC    host/buildvm_fold.o
HOSTLINK  host/buildvm
BUILDVM   lj_vm.S
ASM       lj_vm.o
CC        lj_gc.o
BUILDVM   lj_ffdef.h
CC        lj_err.o
CC        lj_char.o
BUILDVM   lj_bcdef.h
CC        lj_bc.o
CC        lj_obj.o
CC        lj_buf.o
CC        lj_str.o
CC        lj_tab.o
CC        lj_func.o
CC        lj_udata.o
CC        lj_meta.o
CC        lj_debug.o
CC        lj_state.o
CC        lj_dispatch.o
CC        lj_vmevent.o
CC        lj_vmmath.o
CC        lj_strscan.o
CC        lj_strfmt.o
CC        lj_strfmt_num.o
CC        lj_api.o
CC        lj_profile.o
CC        lj_lex.o
CC        lj_parse.o
CC        lj_bcread.o
CC        lj_bcwrite.o
CC        lj_load.o
CC        lj_ir.o
CC        lj_opt_mem.o
BUILDVM   lj_folddef.h
CC        lj_opt_fold.o
CC        lj_opt_narrow.o
CC        lj_opt_dce.o
CC        lj_opt_loop.o
CC        lj_opt_split.o
CC        lj_opt_sink.o
CC        lj_mcode.o
CC        lj_snap.o
CC        lj_record.o
CC        lj_crecord.o
BUILDVM   lj_recdef.h
CC        lj_ffrecord.o
CC        lj_asm.o
CC        lj_trace.o
CC        lj_gdbjit.o
CC        lj_ctype.o
CC        lj_cdata.o
CC        lj_cconv.o
CC        lj_ccall.o
CC        lj_ccallback.o
CC        lj_carith.o
CC        lj_clib.o
CC        lj_cparse.o
CC        lj_lib.o
CC        lj_alloc.o
CC        lib_aux.o
BUILDVM   lj_libdef.h
CC        lib_base.o
CC        lib_math.o
CC        lib_bit.o
CC        lib_string.o
CC        lib_table.o
CC        lib_io.o
CC        lib_os.o
CC        lib_package.o
CC        lib_debug.o
CC        lib_jit.o
CC        lib_ffi.o
CC        lib_init.o
AR        libluajit.a
CC        luajit.o
BUILDVM   jit/vmdef.lua
DYNLINK   libluajit.so
LINK      luajit
warning: unsupported linker arg: -E
OK        Successfully built LuaJIT
make[1]: Leaving directory '/home/andy/Downloads/LuaJIT/src'
==== Successfully built LuaJIT 2.1.0-beta3 ====

[~/Downloads/LuaJIT]$ &lt;strong&gt;ls&lt;/strong&gt;
COPYRIGHT  doc  dynasm  etc  Makefile  README  src

[~/Downloads/LuaJIT]$ &lt;strong&gt;./src/&lt;/strong&gt;
host/         jit/          libluajit.so  luajit        zig-cache/    

[~/Downloads/LuaJIT]$ &lt;strong&gt;./src/luajit &lt;/strong&gt;
LuaJIT 2.1.0-beta3 -- Copyright (C) 2005-2020 Mike Pall. http://luajit.org/
JIT: ON SSE2 SSE3 SSE4.1 BMI2 fold cse dce fwd dse narrow loop abc sink fuse
&amp;gt; &lt;strong&gt;print(3 + 4)&lt;/strong&gt;
7
&amp;gt; 
&lt;/pre&gt;
&lt;p&gt;OK so that worked. Now for the real test - can we make it cross compile?&lt;/p&gt;
&lt;pre&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;git clean -xfdq&lt;/strong&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;export CC=&quot;zig cc -target aarch64-linux-gnu&quot;&lt;/strong&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;export HOST_CC=&quot;zig cc&quot;&lt;/strong&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;make CC=&quot;$CC&quot; HOST_CC=&quot;$HOST_CC&quot; TARGET_STRIP=&quot;echo&quot;&lt;/strong&gt;
==== Building LuaJIT 2.1.0-beta3 ====
make -C src
make[1]: Entering directory '/home/andy/Downloads/LuaJIT/src'
HOSTCC    host/minilua.o
HOSTLINK  host/minilua
DYNASM    host/buildvm_arch.h
HOSTCC    host/buildvm.o
HOSTCC    host/buildvm_asm.o
HOSTCC    host/buildvm_peobj.o
HOSTCC    host/buildvm_lib.o
HOSTCC    host/buildvm_fold.o
HOSTLINK  host/buildvm
BUILDVM   lj_vm.S
ASM       lj_vm.o
CC        lj_gc.o
BUILDVM   lj_ffdef.h
CC        lj_err.o
CC        lj_char.o
BUILDVM   lj_bcdef.h
CC        lj_bc.o
CC        lj_obj.o
CC        lj_buf.o
CC        lj_str.o
CC        lj_tab.o
CC        lj_func.o
CC        lj_udata.o
CC        lj_meta.o
CC        lj_debug.o
CC        lj_state.o
CC        lj_dispatch.o
CC        lj_vmevent.o
CC        lj_vmmath.o
CC        lj_strscan.o
CC        lj_strfmt.o
CC        lj_strfmt_num.o
CC        lj_api.o
CC        lj_profile.o
CC        lj_lex.o
CC        lj_parse.o
CC        lj_bcread.o
CC        lj_bcwrite.o
CC        lj_load.o
CC        lj_ir.o
CC        lj_opt_mem.o
BUILDVM   lj_folddef.h
CC        lj_opt_fold.o
CC        lj_opt_narrow.o
CC        lj_opt_dce.o
CC        lj_opt_loop.o
CC        lj_opt_split.o
CC        lj_opt_sink.o
CC        lj_mcode.o
CC        lj_snap.o
CC        lj_record.o
CC        lj_crecord.o
BUILDVM   lj_recdef.h
CC        lj_ffrecord.o
CC        lj_asm.o
CC        lj_trace.o
CC        lj_gdbjit.o
CC        lj_ctype.o
CC        lj_cdata.o
CC        lj_cconv.o
CC        lj_ccall.o
CC        lj_ccallback.o
CC        lj_carith.o
CC        lj_clib.o
CC        lj_cparse.o
CC        lj_lib.o
CC        lj_alloc.o
CC        lib_aux.o
BUILDVM   lj_libdef.h
CC        lib_base.o
CC        lib_math.o
CC        lib_bit.o
CC        lib_string.o
CC        lib_table.o
CC        lib_io.o
CC        lib_os.o
CC        lib_package.o
CC        lib_debug.o
CC        lib_jit.o
CC        lib_ffi.o
CC        lib_init.o
AR        libluajit.a
CC        luajit.o
BUILDVM   jit/vmdef.lua
DYNLINK   libluajit.so
libluajit.so
LINK      luajit
warning: unsupported linker arg: -E
luajit
OK        Successfully built LuaJIT
make[1]: Leaving directory '/home/andy/Downloads/LuaJIT/src'
==== Successfully built LuaJIT 2.1.0-beta3 ====

[~/Downloads/LuaJIT]$ &lt;strong&gt;file ./src/luajit &lt;/strong&gt;
./src/luajit: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 2.0.0, with debug_info, not stripped
&lt;/pre&gt;
&lt;p&gt;It worked! Will it run in &lt;a href=&quot;https://www.qemu.org/&quot;&gt;QEMU&lt;/a&gt; though?&lt;/p&gt;
&lt;pre&gt;
[~/Downloads/LuaJIT]$ &lt;strong&gt;qemu-aarch64 -L ~/Downloads/glibc/multi-2.31/install/glibcs/aarch64-linux-gnu ./src/luajit&lt;/strong&gt;
LuaJIT 2.1.0-beta3 -- Copyright (C) 2005-2020 Mike Pall. http://luajit.org/
JIT: ON fold cse dce fwd dse narrow loop abc sink fuse
&amp;gt; &lt;strong&gt;print(4 + 3)&lt;/strong&gt;
7
&amp;gt; 
&lt;/pre&gt;
&lt;p&gt;Amazing. QEMU never fails to impress me.&lt;/p&gt;
&lt;p&gt;Before we move on, I want to show one more thing. You can see above, in order to run the foreign-architecture binary, I had to pass &lt;code&gt;-L ~/Downloads/glibc/multi-2.31/install/glibcs/aarch64-linux-gnu&lt;/code&gt;. This is due to the binary being dynamically linked. You can confirm this with the output from &lt;code&gt;file&lt;/code&gt; above where it says: &lt;code&gt;dynamically linked, interpreter /lib/ld-linux-aarch64.so.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Often, when cross-compiling, it is useful to make a &lt;em&gt;static&lt;/em&gt; binary. In the case of Linux, for example, this will make the resulting binary able to run on any Linux distribution, rather than only ones with a hard-coded glibc dynamic linker path of &lt;code&gt;/lib/ld-linux-aarch64.so.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can accomplish this by targeting musl rather than glibc:&lt;/p&gt;
&lt;pre&gt;
[~/Downloads/LuaJIT]$ git clean -qxfd
[~/Downloads/LuaJIT]$ export CC=&quot;zig cc -target aarch64-linux-musl&quot;
[~/Downloads/LuaJIT]$ make CC=&quot;$CC&quot; CXX=&quot;$CXX&quot; HOST_CC=&quot;$HOST_CC&quot; TARGET_STRIP=&quot;echo&quot;
==== Building LuaJIT 2.1.0-beta3 ====
(same output)
==== Successfully built LuaJIT 2.1.0-beta3 ====
[~/Downloads/LuaJIT]$ file src/luajit
src/luajit: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), statically linked, not stripped
[~/Downloads/LuaJIT]$ qemu-aarch64 ./src/luajit
LuaJIT 2.1.0-beta3 -- Copyright (C) 2005-2020 Mike Pall. http://luajit.org/
JIT: ON fold cse dce fwd dse narrow loop abc sink fuse
&amp;gt; print(11 + 22)
33
&lt;/pre&gt;
&lt;p&gt;Here you can see the &lt;code&gt;file&lt;/code&gt; command reported &lt;em&gt;statically linked&lt;/em&gt;, and in the qemu command, the &lt;code&gt;-L&lt;/code&gt; parameter was not needed.&lt;/p&gt;
&lt;h2&gt;Use Cases of `zig cc`&lt;/h2&gt;
&lt;p&gt;Alright, so I've given you a taste of what &lt;code&gt;zig cc&lt;/code&gt; can do, but now I will list explicitly what I consider to be the use cases:&lt;/p&gt;
&lt;h3&gt;Experimentation&lt;/h3&gt;
&lt;p&gt;Sometimes you just want a tool that you can use to try out different things. It can quickly answer questions such as &quot;What assembly does this code generate on MIPS vs ARM?&quot;. The widely popular &lt;a href=&quot;https://godbolt.org/&quot;&gt;Compiler Explorer&lt;/a&gt; serves this purpose.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zig cc&lt;/code&gt; provides a lightweight tool which can also answer questions such as, &quot;What happens if I swap out glibc for &lt;a href=&quot;https://musl.libc.org/&quot;&gt;musl&lt;/a&gt;?&quot; and &quot;How big is this executable when cross-compiled for Windows?&quot;. &lt;a href=&quot;https://twitter.com/andy_kelley/status/1242183564512366595&quot;&gt;Here's me using Zig to quickly find out what the maximum UDP packet size is on Linux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since Zig is so easy to install - and it actually works everywhere without patches, even Linux distributions such as &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; - it can often be a more convenient tool for running quick C test programs on your computer.&lt;/p&gt;
&lt;p&gt;At the time of this writing, LLVM 10 was just released two hours ago. It will take days or weeks for it to become available in various system package managers. But you can already &lt;a href=&quot;https://ziglang.org/download/&quot;&gt;download a master branch build of Zig&lt;/a&gt; and play with the new features of Clang/LLVM 10. For example, improved RISC-V support!&lt;/p&gt;
&lt;pre&gt;
andy@ark ~/tmp&amp;gt; &lt;strong&gt;zig cc -o hello hello.c -target riscv64-linux-musl&lt;/strong&gt;
andy@ark ~/tmp&amp;gt; &lt;strong&gt;qemu-riscv64 ./hello&lt;/strong&gt;
Hello, World!
&lt;/pre&gt;
&lt;h3&gt;Bundling a C compiler as part of a larger project&lt;/h3&gt;
&lt;p&gt;With Zig tarballs weighing in at under 45 MiB, zero system dependencies, no configuration, and MIT license, it makes for an ideal candidate when you need to bundle a C compiler along with another project.&lt;/p&gt;
&lt;p&gt;For example, maybe you have &lt;a href=&quot;https://nim-lang.org/&quot;&gt;a programming language that compiles to C&lt;/a&gt;. Zig is an obvious choice for what C compiler to ship with your language.&lt;/p&gt;
&lt;p&gt;Or maybe you want to make a batteries-included &lt;a href=&quot;https://en.wikipedia.org/wiki/Integrated_development_environment&quot;&gt;IDE&lt;/a&gt; that ships with a compiler.&lt;/p&gt;
&lt;h3&gt;Lightweight alternative to a cross compilation environment&lt;/h3&gt;
&lt;p&gt;If you're trying to build something with a large dependency tree, you'll probably want to use a full cross compilation environment, such as &lt;a href=&quot;https://mxe.cc/&quot;&gt;mxe.cc&lt;/a&gt; or &lt;a href=&quot;http://musl.cc/&quot;&gt;musl.cc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But if you don't need such a sledgehammer, &lt;code&gt;zig cc&lt;/code&gt; could be a useful alternative, especially if your goal is to compile for N different targets. Consider that musl.cc lists different tarballs for each architecture, each weighing in at roughly 85 MiB. Meanwhile Zig weighs in at 45 MiB and it supports all those architectures, plus glibc and Windows.&lt;/p&gt;
&lt;h3&gt;An alternative to installing MSVC on Windows&lt;/h3&gt;
&lt;p&gt;You could spend days - literally! - waiting for Microsoft Visual Studio to install, or you could install Zig and &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt; in a matter of minutes.&lt;/p&gt;
&lt;h2&gt;Under the Hood&lt;/h2&gt;
&lt;p&gt;If &lt;code&gt;zig cc&lt;/code&gt; is built on top of Clang, why doesn't Clang just do this? What exactly is Zig doing on top of Clang to make this work?&lt;/p&gt;
&lt;p&gt;The answer is, &lt;em&gt;a lot&lt;/em&gt;, actually. I'll go over how it works here.&lt;/p&gt;
&lt;h3&gt;compiler-rt&lt;/h3&gt;
&lt;p&gt;compiler-rt is a library that provides &quot;polyfill&quot; implementations of language-supported features when the target does not have machine code instructions for it. For example, compiler-rt has the function &lt;code&gt;__muldi3&lt;/code&gt; to perform signed 64-bit integer multiplication on architectures that do not have a 64-bit wide integer multiplication instruction.&lt;/p&gt;
&lt;p&gt;In the GNU world, compiler-rt is named &lt;strong&gt;libgcc&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Most C compilers ship with this library pre-built for the target. For example, on an Ubuntu (Bionic) system, with the &lt;code&gt;build-essential&lt;/code&gt; package installed, you can find this at &lt;code&gt;/lib/x86_64-linux-gnu/libgcc_s.so.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you download &lt;a href=&quot;https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang+llvm-9.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz&quot;&gt;clang+llvm-9.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz&lt;/a&gt; and take a look around, clang actually does not even ship with compiler-rt. Instead, it relies on the system libgcc noted above. This is one reason that this tarball is Ubuntu-specific and does not work on other Linux distributions, &lt;a href=&quot;https://www.leidinger.net/blog/2010/09/28/the-freebsd-linuxulator-explained-for-users/&quot;&gt;FreeBSD's Linuxulator&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux&quot;&gt;WSL&lt;/a&gt;, which have system files in different locations.&lt;/p&gt;
&lt;p&gt;Zig's strategy with compiler-rt is that we have &lt;a href=&quot;https://github.com/ziglang/zig/blob/0.5.0/lib/std/special/compiler_rt.zig&quot;&gt;our own implementation of this library&lt;/a&gt;, written in Zig. Most of it is ported from &lt;a href=&quot;https://github.com/llvm/llvm-project/tree/llvmorg-10.0.0-rc6/compiler-rt&quot;&gt;LLVM's compiler-rt project&lt;/a&gt;, but we also have some of our own improvements on top of this.&lt;/p&gt;
&lt;p&gt;Anyway, rather than depending on system compiler-rt being installed, or shipping a pre-compiled library, Zig ships its compiler-rt &lt;em&gt;in source form&lt;/em&gt;, and lazily builds compiler-rt for the compilation target, and then caches the result using &lt;a href=&quot;https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html#caching-system&quot;&gt;the caching system discussed above&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Zig's compiler-rt is &lt;a href=&quot;https://github.com/ziglang/zig/issues/1290&quot;&gt;not yet complete&lt;/a&gt;. However, completing it is a prerequisite for releasing Zig version 1.0.0.&lt;/p&gt;
&lt;h3&gt;libc&lt;/h3&gt;
&lt;p&gt;When C code calls &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt; has to be implemented &lt;em&gt;somewhere&lt;/em&gt;, and that somewhere is libc.&lt;/p&gt;
&lt;p&gt;Some operating systems, such as &lt;a href=&quot;https://www.freebsd.org/&quot;&gt;FreeBSD&lt;/a&gt; and macOS, have an designated system libc, and it is the kernel syscall interface. On others, such as Windows and Linux, libc is optional, and therefore there are multiple options of which libc to use, if any.&lt;/p&gt;
&lt;p&gt;As of the time of this writing, Zig can provide libcs for the following targets:&lt;/p&gt;
&lt;pre&gt;
andy@ark ~&amp;gt; zig targets | jq .libc
[
  &quot;aarch64_be-linux-gnu&quot;,
  &quot;aarch64_be-linux-musl&quot;,
  &quot;aarch64_be-windows-gnu&quot;,
  &quot;aarch64-linux-gnu&quot;,
  &quot;aarch64-linux-musl&quot;,
  &quot;aarch64-windows-gnu&quot;,
  &quot;armeb-linux-gnueabi&quot;,
  &quot;armeb-linux-gnueabihf&quot;,
  &quot;armeb-linux-musleabi&quot;,
  &quot;armeb-linux-musleabihf&quot;,
  &quot;armeb-windows-gnu&quot;,
  &quot;arm-linux-gnueabi&quot;,
  &quot;arm-linux-gnueabihf&quot;,
  &quot;arm-linux-musleabi&quot;,
  &quot;arm-linux-musleabihf&quot;,
  &quot;arm-windows-gnu&quot;,
  &quot;i386-linux-gnu&quot;,
  &quot;i386-linux-musl&quot;,
  &quot;i386-windows-gnu&quot;,
  &quot;mips64el-linux-gnuabi64&quot;,
  &quot;mips64el-linux-gnuabin32&quot;,
  &quot;mips64el-linux-musl&quot;,
  &quot;mips64-linux-gnuabi64&quot;,
  &quot;mips64-linux-gnuabin32&quot;,
  &quot;mips64-linux-musl&quot;,
  &quot;mipsel-linux-gnu&quot;,
  &quot;mipsel-linux-musl&quot;,
  &quot;mips-linux-gnu&quot;,
  &quot;mips-linux-musl&quot;,
  &quot;powerpc64le-linux-gnu&quot;,
  &quot;powerpc64le-linux-musl&quot;,
  &quot;powerpc64-linux-gnu&quot;,
  &quot;powerpc64-linux-musl&quot;,
  &quot;powerpc-linux-gnu&quot;,
  &quot;powerpc-linux-musl&quot;,
  &quot;riscv64-linux-gnu&quot;,
  &quot;riscv64-linux-musl&quot;,
  &quot;s390x-linux-gnu&quot;,
  &quot;s390x-linux-musl&quot;,
  &quot;sparc-linux-gnu&quot;,
  &quot;sparcv9-linux-gnu&quot;,
  &quot;wasm32-freestanding-musl&quot;,
  &quot;x86_64-linux-gnu&quot;,
  &quot;x86_64-linux-gnux32&quot;,
  &quot;x86_64-linux-musl&quot;,
  &quot;x86_64-windows-gnu&quot;
]
&lt;/pre&gt;
&lt;p&gt;In order to provide libc on these targets, Zig ships with a subset of the source files for these projects:&lt;/p&gt;
&lt;p&gt;For each libc, there is a &lt;a href=&quot;https://github.com/ziglang/zig/wiki/Updating-libc&quot;&gt;process for upgrading to a new release&lt;/a&gt;. This process is a sort of pre-processing step. We still end up with source files, but we de-duplicate non-multi-arch source files into multi-arch source files.&lt;/p&gt;
&lt;h4&gt;glibc&lt;/h4&gt;
&lt;p&gt;glibc is the most involved. The first step is building glibc for every target that it supports, which takes upwards of 24 hours and 74 GiB of disk space.&lt;/p&gt;
&lt;p&gt;From here, the &lt;a href=&quot;https://github.com/ziglang/zig/blob/dc44fe053c609f389e375f6857f96b6bb3794897/tools/process_headers.zig&quot;&gt;process_headers tool&lt;/a&gt; inspects all the header files from all the targets, and identifies which files are the same across all targets, and which header files are target-specific. They are then sorted into the corresponding directories in Zig's source tree, in:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;lib/libc/include/generic-glibc/&lt;/li&gt;
&lt;li&gt;lib/libc/include/$ARCH-linux-$ABI/ (there are multiple of these directories)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Additionally, Linux header files are not included in glibc, and so the same process is applied to Linux header files, with the directories:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;lib/libc/include/any-linux-any/&lt;/li&gt;
&lt;li&gt;lib/libc/include/$ARCH-linux-any/&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;That takes care of the header files, but now we have the problem of dynamic linking against glibc, without touching any system files.&lt;/p&gt;
&lt;p&gt;For this, we have the &lt;a href=&quot;https://github.com/ziglang/zig/blob/dc44fe053c609f389e375f6857f96b6bb3794897/tools/update_glibc.zig&quot;&gt;update_glibc tool&lt;/a&gt;. Given the path to the glibc source directory, it finds all the &lt;code&gt;.abilist&lt;/code&gt; text files and uses them to produce 3 simple but crucial files:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ziglang/zig/blob/master/lib/libc/glibc/vers.txt&quot;&gt;vers.txt&lt;/a&gt; - the list of all glibc versions.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ziglang/zig/blob/master/lib/libc/glibc/fns.txt&quot;&gt;fns.txt&lt;/a&gt; - the list of all symbols that glibc provides, followed by the library it appears in (for example libm, libpthread, libc, librt).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ziglang/zig/blob/master/lib/libc/glibc/abi.txt&quot;&gt;abi.txt&lt;/a&gt; - for each target, for each function, tells which versions of glibc, if any, it appears in.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Together, these files amount to only 192 KB (27 KB gzipped), and they allow Zig to target any version of glibc.&lt;/p&gt;
&lt;p&gt;Yes, I did not make a typo there. Zig can target any of the 42 versions of glibc for any of the architectures listed above. I'll show you:&lt;/p&gt;
&lt;pre&gt;
andy@ark ~/tmp&amp;gt; &lt;strong&gt;cat rand.zig &lt;/strong&gt;
const std = @import(&quot;std&quot;);

pub fn main() anyerror!void {
    var buf: [10]u8 = undefined;
    _ = std.c.getrandom(&amp;amp;buf, buf.len, 0);
    std.debug.warn(&quot;random bytes: {x}\n&quot;, .{buf});
}
andy@ark ~/tmp&amp;gt; &lt;strong&gt;zig build-exe rand.zig -lc -target native-native-gnu.2.25&lt;/strong&gt;
andy@ark ~/tmp&amp;gt; &lt;strong&gt;./rand&lt;/strong&gt;
random bytes: e2059382afb599ea6d29
andy@ark ~/tmp&amp;gt; &lt;strong&gt;zig build-exe rand.zig -lc -target native-native-gnu.2.24&lt;/strong&gt;
lld: error: undefined symbol: getrandom
&amp;gt;&amp;gt;&amp;gt; referenced by rand.zig:5 (/home/andy/tmp/rand.zig:5)
&amp;gt;&amp;gt;&amp;gt;               ./rand.o:(main.0)
&lt;/pre&gt;
&lt;p&gt;Sure enough, if you look at the &lt;a href=&quot;http://man7.org/linux/man-pages/man2/getrandom.2.html&quot;&gt;man page for getrandom&lt;/a&gt;, it says:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Support was added to glibc in version 2.25.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When no explicit glibc version is requested, and the target OS is the native (host) OS, Zig detects the native glibc version by inspecting the Zig executable's own dynamically linked libraries, looking for glibc, and checking the version. It turns out you can look for &lt;code&gt;libc.so.6&lt;/code&gt; and then &lt;code&gt;readlink&lt;/code&gt; on that, and it will look something like &lt;code&gt;libc-2.27.so&lt;/code&gt;. When this strategy does not work, Zig looks at &lt;code&gt;/usr/bin/env&lt;/code&gt;, looking for the same thing. Since this file path is hard-coded into countless shebang lines, it's a pretty safe bet to find out the dynamic linker path and glibc version (if any) of the native system!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zig cc&lt;/code&gt; currently does not provide a way to choose a specific glibc version (because C compilers do not provide a way), and so Zig chooses the native version for compiling natively, and the default (2.17) for cross-compiling. However, I'm sure this problem can be solved, even when using &lt;code&gt;zig cc&lt;/code&gt;. For example, maybe it could support an environment variable, or simply introduce an extra command line option that does not conflict with any Clang options.&lt;/p&gt;
&lt;p&gt;When you request a certain version of glibc, Zig uses those text files noted above to create dummy &lt;code&gt;.so&lt;/code&gt; files to link against, which contain exactly the correct set of symbols (with appropriate name mangling) based on the requested version. The symbols will be resolved at runtime, by the dynamic linker on the target platform.&lt;/p&gt;
&lt;p&gt;In this way, most of libc in the glibc case resides on the target file system. But not all of it! There are still the &quot;C runtime start files&quot;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Scrt1.o&lt;/li&gt;
&lt;li&gt;crti.o&lt;/li&gt;
&lt;li&gt;crtn.o&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These are statically compiled into every binary that dynamically links glibc, and their &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_binary_interface&quot;&gt;ABI&lt;/a&gt; is therefore Very Very Stable.&lt;/p&gt;
&lt;p&gt;And so, Zig bundles a small subset of glibc's source files needed to build these object files from source for every target. The total size of this comes out to 1.4 MiB (252 KB gzipped). I do think there is some room for improvement here, but I digress.&lt;/p&gt;
&lt;p&gt;There are a couple of patches to this small subset of glibc source files, which simplify them to avoid including too many .h files, since the end result that we need is some bare bones object files, and not all of glibc.&lt;/p&gt;
&lt;p&gt;And finally, we certainly do not ship the build system of glibc with Zig! I manually inspected, audited, and analyzed glibc's build system, and then by hand wrote code in the Zig compiler which hooks into Zig's &lt;a href=&quot;https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html#caching-system&quot;&gt;caching system&lt;/a&gt; and performs a minimal build of only these start files, as needed.&lt;/p&gt;
&lt;h4&gt;musl&lt;/h4&gt;
&lt;p&gt;The process for preparing musl to ship with Zig is much simpler by comparison.&lt;/p&gt;
&lt;p&gt;It still involves building musl for every target architecture that it supports, but in this case only the &lt;code&gt;install-headers&lt;/code&gt; target has to be run, and it takes less than a minute, even to do it for all targets.&lt;/p&gt;
&lt;p&gt;The same &lt;a href=&quot;https://github.com/ziglang/zig/blob/dc44fe053c609f389e375f6857f96b6bb3794897/tools/process_headers.zig&quot;&gt;process_headers tool&lt;/a&gt; tool used for glibc headers is used on the musl headers:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;lib/libc/include/generic-musl/&lt;/li&gt;
&lt;li&gt;lib/libc/include/$ARCH-linux-$ABI/ (there are multiple of these directories)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Unlike glibc, musl supports building statically. Zig currently assumes a static libc when musl is chosen, and does not support dynamically linking against musl, although that could potentially be added in the future.&lt;/p&gt;
&lt;p&gt;And so for musl, zig actually bundles most - but still not all - of musl's source files. Everything in &lt;code&gt;arch&lt;/code&gt;, &lt;code&gt;crt&lt;/code&gt;, &lt;code&gt;compat&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt;, and &lt;code&gt;include&lt;/code&gt; gets copied in.&lt;/p&gt;
&lt;p&gt;Again much like glibc, I carefully studied musl's build system, and then hand-coded logic in the Zig compiler to build these source files. In musl's case it is simpler - just a bit of logic having to do with the file extension, and whether to override files with an architecture-specific file. The only file that needs to be patched (by hand) is &lt;code&gt;version.h&lt;/code&gt;, which is normally generated during the configure phase in musl's build system.&lt;/p&gt;
&lt;p&gt;I really appreciate Rich Felker's efforts to make musl simple to utilize in this way, and he has been incredibly helpful in the &lt;code&gt;#musl&lt;/code&gt; IRC channel when I ask questions. &lt;a href=&quot;https://andrewkelley.me/post/why-donating-to-musl-libc-project.html&quot;&gt;I proudly sponsor Rich Felker for $150/month&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;mingw-w64&lt;/h4&gt;
&lt;p&gt;mingw-w64 was an absolute joy to support in Zig. The beautiful thing about this project is that they have already been transitioning into having one set of header files that applies to all architectures (using &lt;code&gt;#ifdefs&lt;/code&gt; only where needed). One set of header files is sufficient to support all four architectures: arm, aarch64, x86, and x86_64.&lt;/p&gt;
&lt;p&gt;So for updating headers, all we have to do is build mingw-w64, then:&lt;/p&gt;
&lt;pre&gt;
mv $INSTALLPREFIX/include $ZIGSRC/lib/libc/include/any-windows-any
&lt;/pre&gt;
&lt;p&gt;After doing this for all 3 libcs, the libc/include directory looks like this:&lt;/p&gt;
&lt;pre&gt;
aarch64_be-linux-any   i386-linux-musl           powerpc-linux-any
aarch64_be-linux-gnu   mips64el-linux-any        powerpc-linux-gnu
aarch64-linux-any      mips64el-linux-gnuabi64   powerpc-linux-musl
aarch64-linux-gnu      mips64el-linux-gnuabin32  riscv32-linux-any
aarch64-linux-musl     mips64-linux-any          riscv64-linux-any
any-linux-any          mips64-linux-gnuabi64     riscv64-linux-gnu
any-windows-any        mips64-linux-gnuabin32    riscv64-linux-musl
armeb-linux-any        mips64-linux-musl         s390x-linux-any
armeb-linux-gnueabi    mipsel-linux-any          s390x-linux-gnu
armeb-linux-gnueabihf  mipsel-linux-gnu          s390x-linux-musl
arm-linux-any          mips-linux-any            sparc-linux-gnu
arm-linux-gnueabi      mips-linux-gnu            sparcv9-linux-gnu
arm-linux-gnueabihf    mips-linux-musl           x86_64-linux-any
arm-linux-musl         powerpc64le-linux-any     x86_64-linux-gnu
generic-glibc          powerpc64le-linux-gnu     x86_64-linux-gnux32
generic-musl           powerpc64-linux-any       x86_64-linux-musl
i386-linux-any         powerpc64-linux-gnu
i386-linux-gnu         powerpc64-linux-musl
&lt;/pre&gt;
&lt;p&gt;When Zig generates a C command line to send to clang, it puts the appropriate include paths using &lt;code&gt;-I&lt;/code&gt; depending on the target. For example, if the target is &lt;code&gt;aarch64-linux-musl&lt;/code&gt;, then the following command line parameters are appended:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-I$LIB/libc/include/aarch64-linux-musl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I$LIB/libc/include/aarch64-linux-any&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I$LIB/libc/include/generic-musl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Anyway back to mingw-w64.&lt;/p&gt;
&lt;p&gt;Again, Zig includes a subset of source files from mingw-w64 with a few patches applied to make things compile successfully.&lt;/p&gt;
&lt;p&gt;The Zig compiler code that builds mingw-w64 from source files emulates only the parts of the build system that are needed for this subset. This includes preprocessing &lt;code&gt;.def.in&lt;/code&gt; files to get &lt;code&gt;.def&lt;/code&gt; files, and then in-turn using LLD to generate &lt;code&gt;.lib&lt;/code&gt; files from the &lt;code&gt;.def&lt;/code&gt; files, which allows Zig to provide &lt;code&gt;.lib&lt;/code&gt; files for any Windows DLL, such as kernel32.dll or even opengl32.dll.&lt;/p&gt;
&lt;h3&gt;Invoking Clang Without a System Dependency&lt;/h3&gt;
&lt;p&gt;Since Zig already links against Clang libraries for the &lt;a href=&quot;https://ziglang.org/#Integration-with-C-libraries-without-FFIbindings&quot;&gt;translate-c feature&lt;/a&gt;, it was not much more cost to expose the &lt;code&gt;main()&lt;/code&gt; entry point from Zig. So that's exactly what we do:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;llvm-project/clang/tools/driver/driver.cpp&lt;/code&gt; is copied to &lt;code&gt;$ZIGGIT/src/zig_clang_driver.cpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;llvm-project/clang/tools/driver/cc1_main.cpp&lt;/code&gt; is copied to &lt;code&gt;$ZIGGIT/src/zig_clang_cc1_main.cpp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;llvm-project/clang/tools/driver/cc1as_main.cpp&lt;/code&gt; is copied to &lt;code&gt;$ZIGGIT/src/zig_clang_cc1as_main.cpp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The following patch is applied:&lt;/p&gt;
&lt;pre&gt;
--- a/src/zig_clang_driver.cpp
+++ b/src/zig_clang_driver.cpp
@@ -206,8 +205,6 @@
                     void *MainAddr);
 extern int cc1as_main(ArrayRef&amp;lt;const char *&amp;gt; Argv, const char *Argv0,
                       void *MainAddr);
&lt;span class=&quot;diff0&quot;&gt;-extern int cc1gen_reproducer_main(ArrayRef&amp;lt;const char *&amp;gt; Argv,&lt;/span&gt;
&lt;span class=&quot;diff0&quot;&gt;-                                  const char *Argv0, void *MainAddr);&lt;/span&gt;
 
 static void insertTargetAndModeArgs(const ParsedClangName &amp;amp;NameParts,
                                     SmallVectorImpl&amp;lt;const char *&amp;gt; &amp;amp;ArgVector,
@@ -330,19 +327,18 @@
   if (Tool == &quot;-cc1as&quot;)
     return cc1as_main(makeArrayRef(ArgV).slice(2), ArgV[0],
                       GetExecutablePathVP);
&lt;span class=&quot;diff0&quot;&gt;-  if (Tool == &quot;-cc1gen-reproducer&quot;)&lt;/span&gt;
&lt;span class=&quot;diff0&quot;&gt;-    return cc1gen_reproducer_main(makeArrayRef(ArgV).slice(2), ArgV[0],&lt;/span&gt;
&lt;span class=&quot;diff0&quot;&gt;-                                  GetExecutablePathVP);&lt;/span&gt;
   // Reject unknown tools.
   llvm::errs() &amp;lt;&amp;lt; &quot;error: unknown integrated tool '&quot; &amp;lt;&amp;lt; Tool &amp;lt;&amp;lt; &quot;'. &quot;
                &amp;lt;&amp;lt; &quot;Valid tools include '-cc1' and '-cc1as'.\n&quot;;
   return 1;
 }
 
&lt;span class=&quot;diff0&quot;&gt;-int main(int argc_, const char **argv_) {&lt;/span&gt;
&lt;span class=&quot;diff1&quot;&gt;+extern &quot;C&quot; int ZigClang_main(int argc_, const char **argv_);&lt;/span&gt;
&lt;span class=&quot;diff1&quot;&gt;+int ZigClang_main(int argc_, const char **argv_) {&lt;/span&gt;
   noteBottomOfStack();
   llvm::InitLLVM X(argc_, argv_);
&lt;span class=&quot;diff0&quot;&gt;-  SmallVector&amp;lt;const char *, 256&amp;gt; argv(argv_, argv_ + argc_);&lt;/span&gt;
&lt;span class=&quot;diff1&quot;&gt;+  size_t argv_offset = (strcmp(argv_[1], &quot;-cc1&quot;) == 0 || strcmp(argv_[1], &quot;-cc1as&quot;) == 0) ? 0 : 1;&lt;/span&gt;
&lt;span class=&quot;diff1&quot;&gt;+  SmallVector&amp;lt;const char *, 256&amp;gt; argv(argv_ + argv_offset, argv_ + argc_);&lt;/span&gt;
 
   if (llvm::sys::Process::FixupStandardFileDescriptors())
     return 1;
&lt;/pre&gt;
&lt;p&gt;This disables some cruft, and then renames &lt;code&gt;main&lt;/code&gt; to &lt;code&gt;ZigClang_main&lt;/code&gt; so that it can be called like any other function. Next, in Zig's actual &lt;code&gt;main&lt;/code&gt;, it looks for &lt;code&gt;clang&lt;/code&gt; as the first parameter, and calls it.&lt;/p&gt;
&lt;p&gt;So, &lt;code&gt;zig clang&lt;/code&gt; is low-level undocumented API that Zig exposes for directly invoking Clang. But &lt;code&gt;zig cc&lt;/code&gt; is much higher level than that. When Zig needs to compile C code, it invokes itself as a child process, taking advantage of &lt;code&gt;zig clang&lt;/code&gt;. &lt;code&gt;zig cc&lt;/code&gt; on the other hand, has a more difficult job: it must parse Clang's command line options and map those to the Zig compiler's settings, so that ultimately &lt;code&gt;zig clang&lt;/code&gt; can be invoked as a child process.&lt;/p&gt;
&lt;h3&gt;Parsing Clang Command Line Options&lt;/h3&gt;
&lt;p&gt;When using &lt;code&gt;zig cc&lt;/code&gt;, Zig acts as a proxy between the user and Clang. It does not need to understand all the parameters, but it does need to understand some of them, such as the target. This means that Zig must understand when a C command line parameter expects to &quot;consume&quot; the next parameter on the command line.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;-z -target&lt;/code&gt; would mean to pass &lt;code&gt;-target&lt;/code&gt; to the linker, whereas &lt;code&gt;-E -target&lt;/code&gt; would mean that the next parameter specifies the target.&lt;/p&gt;
&lt;p&gt;Clang has a &lt;a href=&quot;https://clang.llvm.org/docs/ClangCommandLineReference.html&quot;&gt;long list of command line options&lt;/a&gt; and so it would be foolish to try to hard-code all of them.&lt;/p&gt;
&lt;p&gt;Fortunately, LLVM has a file &quot;options.td&quot; which describes all of its command line parameter options in some obscure format. But fortunately again, LLVM comes with the &lt;code&gt;llvm-tblgen&lt;/code&gt; tool that can dump it as JSON format.&lt;/p&gt;
&lt;p&gt;Zig has an &lt;a href=&quot;https://github.com/ziglang/zig/blob/dc44fe053c609f389e375f6857f96b6bb3794897/tools/update_clang_options.zig&quot;&gt;update_clang_options tool&lt;/a&gt; which processes this JSON dump and produces a &lt;a href=&quot;https://github.com/ziglang/zig/blob/dc44fe053c609f389e375f6857f96b6bb3794897/src-self-hosted/clang_options_data.zig&quot;&gt;big sorted list of Clang's command line options&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Combined with a list of &quot;known options&quot; which correspond to Zig compiler options, this is used to make an iterator API that &lt;code&gt;zig cc&lt;/code&gt; uses to parse command line parameters and instantiate a Zig compiler instance. Any Clang options that Zig is not aware of are forwarded to Clang directly. Some parameters are handled specially.&lt;/p&gt;
&lt;h3&gt;Linking&lt;/h3&gt;
&lt;p&gt;This part is pretty straightforward. Zig depends on LLD for linking rather than shelling out to the system linker, like GCC and Clang do.&lt;/p&gt;
&lt;p&gt;When you use &lt;code&gt;-o&lt;/code&gt; with &lt;code&gt;zig cc&lt;/code&gt;, Clang is not actually acting as a linker driver here. Zig is still the linker driver.&lt;/p&gt;
&lt;h2&gt;Everybody Wins&lt;/h2&gt;
&lt;p&gt;Now that I've spent this entire blog article comparing Zig and Clang as if they are competitors, let me make it absolutely clear that both of these are harmonious, mutually beneficial open-source projects. It's pretty obvious how Clang and the entire LLVM project are massively beneficial to the Zig project, since Zig builds on top of them.&lt;/p&gt;
&lt;p&gt;But it works the other way, too.&lt;/p&gt;
&lt;p&gt;With Zig's focus on cross-compiling, its test suite has been expanding rapidly to cover a large number of architectures and operating systems, leading to &lt;a href=&quot;https://github.com/ziglang/zig/issues?q=is%3Aissue+label%3Aupstream+is%3Aclosed&quot;&gt;dozens of bugs reported upstream and patches sent&lt;/a&gt;, including, for example:&lt;/p&gt;
&lt;p&gt;Everybody wins.&lt;/p&gt;
&lt;h2&gt;This is still experimental!&lt;/h2&gt;
&lt;p&gt;I have only recently landed &lt;code&gt;zig cc&lt;/code&gt; support last week, and it is still experimental. Please do not expect it to be production quality yet.&lt;/p&gt;
&lt;p&gt;Zig's 0.6.0 release is right around the corner, scheduled for April 13th. I will be sure to provide an update on the release notes on how stable and robust you can expect &lt;code&gt;zig cc&lt;/code&gt; to be in the 0.6.0 release.&lt;/p&gt;
&lt;p&gt;There are some follow-up issues related to &lt;code&gt;zig cc&lt;/code&gt; which are still open:&lt;/p&gt;

As always, &lt;a href=&quot;https://github.com/ziglang/zig/blob/master/CONTRIBUTING.md&quot;&gt;Contributions are most welcome&lt;/a&gt;.
&lt;h2&gt;💖 Sponsor Zig 💖&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/andrewrk&quot;&gt;Sponsor Andrew Kelley on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're reading this and you already sponsor me, thank you so much! I wake up every day absolutely thrilled that I get to do this for my full time job.&lt;/p&gt;
&lt;p&gt;As Zig has been gaining popularity, demands for my time have been growing faster than funds to hire another full-time programmer. Every recurring donation helps, and if the funds keep growing then soon enough the Zig project will have two full-time programmers.&lt;/p&gt;
&lt;p&gt;That's all folks. I hope you and your loved ones are well.&lt;/p&gt;
</description>
<pubDate>Tue, 24 Mar 2020 21:19:57 +0000</pubDate>
<dc:creator>hazebooth</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html</dc:identifier>
</item>
<item>
<title>CDC coronavirus testing decision likely to haunt nation for months to come</title>
<link>https://khn.org/news/cdc-coronavirus-testing-decision-likely-to-haunt-nation-for-months-to-come/</link>
<guid isPermaLink="true" >https://khn.org/news/cdc-coronavirus-testing-decision-likely-to-haunt-nation-for-months-to-come/</guid>
<description>&lt;div class=&quot;article-body&quot;&gt;
&lt;aside class=&quot;related partner-box top&quot;&gt;
&lt;/aside&gt;&lt;p&gt;As the novel coronavirus snaked its way across the globe, the Centers for Disease Control and Prevention in early February distributed 200 test kits it had produced to more than 100 public health labs run by states and counties nationwide.&lt;/p&gt;
&lt;p&gt;Each kit contained material to test a mere 300 to 400 patients. And labs, whether serving the population of New York City or tiny towns in rural America, apparently received the same kits.&lt;/p&gt;
&lt;p&gt;The kits were distributed roughly equally to locales in all 50 states. That decision presaged weeks of chaos, in which the availability of COVID-19 tests seemed oddly out of sync with where testing was needed.&lt;/p&gt;
&lt;p&gt;A woman in South Dakota with mild symptoms and no fever readily got the test and the results. Meanwhile, political leaders and public officials in places like New York, Boston, Seattle and the San Francisco Bay Area — all in the throes of serious outbreaks ― couldn’t get enough tests to screen ill patients or, thereby, the information they needed to protect the general public and stem the outbreak of the virus, whose symptoms mimic those of common respiratory illnesses.&lt;/p&gt;
&lt;p&gt;Rapid testing is crucial in the early stages of an outbreak. It allows health workers and families to identify and focus on treating those infected and isolate them.&lt;/p&gt;
&lt;aside class=&quot;related inline&quot;&gt;&lt;div class=&quot;slab email-slab&quot;&gt;
&lt;div class=&quot;email-signup&quot;&gt;
&lt;div class=&quot;signup-text&quot;&gt;
&lt;h3&gt;Email Sign-Up&lt;/h3&gt;
&lt;div class=&quot;slab-content&quot;&gt;
&lt;p&gt;Subscribe to KHN’s free Morning Briefing.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;Yet health officials in New York City and such states as New York, Washington, Pennsylvania and Georgia confirmed to Kaiser Health News that they each initially got one test kit, calling into question whether they would have even stood a chance to contain the outbreaks that would emerge. They would soon discover that the tests they did receive were flawed, lacking critical components and delivering faulty results.&lt;/p&gt;
&lt;p&gt;During those early weeks, the virus took off, infecting thousands of people and leading to nationwide social distancing and sheltering in place. Public health officials are just beginning to grapple with the fallout from that early bungling of testing, which is likely to haunt the country in the months to come.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Too Little Too Late&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The first shipment to Washington state arrived more than two weeks after officials there announced the first U.S. case of coronavirus, and at a moment when deadly outbreaks of the disease were already festering in places like the Life Care Center in Kirkland. Within weeks, three dozen people infected with COVID-19 would die at the nursing home in the suburbs of Seattle.&lt;/p&gt;
&lt;p&gt;The spread of COVID19 would not take long to overwhelm the state, which as of Friday had more than 1,300 cases.&lt;/p&gt;
&lt;p&gt;The Trump administration in recent days has attempted to speed testing for the virus after early missteps hampered the government’s response to contain the contagion, and officials have had to respond to a barrage of criticism from public health experts, state officials and members of Congress.&lt;/p&gt;
&lt;p&gt;Federal health officials have eased the process for university and commercial labs to perform their own tests, and they are ramping up their capacity. As of March 16, public and private labs in the U.S. had the ability to test more than 36,000 people a day, according to estimates compiled by the American Enterprise Institute, a conservative-leaning think tank in Washington, D.C., a figure expected to rapidly escalate in coming weeks. That figure, however, can vary considerably by state and does not indicate how many tests are actually given to patients.&lt;/p&gt;
&lt;p&gt;“We are now beginning to see that they have spread out in a prioritized way. We asked them to prioritize the regions that were mostly affected,” Deborah Birx, the coronavirus response coordinator for the White House Coronavirus Task Force, said Wednesday of private labs’ testing, without elaboration.&lt;/p&gt;
&lt;p&gt;The scaling up of testing is set to take place after weeks of faltering and hundreds, if not thousands, of undiagnosed people spreading the virus. For example, New York’s state health department received a faulty CDC test kit on Feb. 8 for 800 patient specimens, an amount that’s consistent with other states, according to a spokesperson. It later began testing patients with a test that state officials developed based on the CDC protocol and has significantly increased testing — as of Friday, more than 7,200 people had tested positive statewide.&lt;/p&gt;
&lt;p&gt;In New York City, the first batch was obtained on Feb. 7.&lt;/p&gt;
&lt;p&gt;“The other state and local public health laboratories got test kits as they became available,” said Eric Blank, chief program officer of the Association of Public Health Laboratories.&lt;/p&gt;
&lt;p&gt;Places in the middle of the country with no outbreaks had the luxury of time to plan. For example, Missouri officials have had about 800 tests to work with, leading to only 395 performed so far in the region by public health labs ― 26 of which were positive. When private lab tests are accounted for, as of Friday there were 47 confirmed cases.&lt;/p&gt;
&lt;p&gt;Health care providers and public health staff in the state, however, benefited from the fact that there is less international travel to the region, according to infectious disease expert Dr. Steven Lawrence of Washington University in St. Louis.&lt;/p&gt;
&lt;p&gt;“This is very similar to 1918 with the influenza pandemic — St. Louis had more time to prepare and was able to put measures in place to flatten the curve than, say, Philadelphia,” Lawrence said. “Seattle didn’t have an opportunity to prepare as much in advance.”&lt;/p&gt;
&lt;p&gt;While commercial labs are coming online, &lt;a href=&quot;https://health.mo.gov/living/healthcondiseases/communicable/novel-coronavirus-lpha/pdf/mo-pui-guidance.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;strict restrictions&lt;/a&gt; are &lt;a href=&quot;https://www.theatlantic.com/science/archive/2020/03/who-gets-tested-coronavirus/607999/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;limiting&lt;/a&gt; testing capabilities, Lawrence said.&lt;/p&gt;
&lt;p&gt;“The state has had their hands tied,” he added.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Waiting And Wondering&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because of a widespread lag in testing, it is still a mystery for thousands of people to know whether they’ve come into contact with an infected person until well after it happens. As of Friday, the pandemic had killed more than 11,000 globally. More than 16,000 Americans were confirmed infected and at least 216 have died.&lt;/p&gt;
&lt;p&gt;“CDC will distribute tests based on where they can do the most good. But without hospital-based testing and commercial testing, it will not be possible to meet the need,” said Tom Frieden, who led the CDC during the Obama administration and is a former commissioner of the New York City Health Department.&lt;/p&gt;
&lt;p&gt;In California, public school teacher Claire Dugan, whose state was among the hardest hit in the initial wave of U.S. coronavirus cases, was told she didn’t qualify for testing because she had not traveled abroad to any country with an outbreak of the virus or been in contact with an infected person. Dugan, who lives in the San Francisco Bay Area and is already medically fragile after a stray bullet nearly killed her while driving four years ago, sought a test from her doctor after registering a temperature of 100.7 degrees earlier this month.&lt;/p&gt;
&lt;p&gt;“There are a lot of layers as to why this is so messed up,” said Dugan, who relies on a feeding tube and said she sought a test not only to protect herself but her students. “It’s community spreading right now, so it’s kind of silly we’re still insisting on [the early criteria for testing]. How would I know?”&lt;/p&gt;
&lt;p&gt;Since the CDC’s initial distribution, states have been reordering more tests through the office’s International Reagent Resource ― a long-standing tool that public health labs have relied on. They have also revised testing protocols to use only one sample per person, which boosts the number of people screened.&lt;/p&gt;
&lt;p&gt;Yet problems still abound with tests or other materials needed to be able to detect the virus. California Gov. Gavin Newsom said on March 12 that county public health labs can’t use all of the 8,000 test kits the state has because they are missing key components.&lt;/p&gt;
&lt;p&gt;In Pennsylvania, state officials weren’t able to begin testing until March 2 because of problems with the CDC’s initial kit, according to Nate Wardle, a spokesperson at its department of health. New York City received two newly manufactured CDC test kits on Feb. 29 and also began performing tests March 2, its health department told KHN.&lt;/p&gt;
&lt;p&gt;“We are still limited on extraction kits,” Mandy Cohen, the Health and Human Services secretary in North Carolina, said in an interview in mid-March. Officials earlier this month could test only 300 patients because of shortages in the extraction materials needed to register whether the novel coronavirus is present.&lt;/p&gt;
&lt;p&gt;In North Dakota, Loralyn Hegland wrote her physician’s practice an email on March 10 with the subject line “dry cough,” wondering if she should come in for testing after learning that was one symptom of COVID-19. The recommendation she got echoes those of countless others across the U.S., saying her risk of being exposed was very low because she hadn’t traveled outside the U.S. and had not come into contact with a person who had been “definitely” diagnosed with the virus.&lt;/p&gt;
&lt;p&gt;Hegland, who lives in Fargo, didn’t have a fever but decided to shelter herself, anyway, out of caution.&lt;/p&gt;
&lt;p&gt;Would she push to get a test?&lt;/p&gt;
&lt;p&gt;“What’s the point?” she said. “You can’t know what you don’t know. It’s just that simple. How else do you explain it to people when you’re not testing?”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;KHN Midwest correspondent Lauren Weber in St. Louis contributed to this article.&lt;/em&gt;&lt;/p&gt;
&lt;aside class=&quot;related partner-box bottom&quot;&gt;
&lt;/aside&gt;&lt;aside class=&quot;meta-authors meta&quot;&gt;&lt;p&gt;&lt;span class=&quot;author-name&quot;&gt;Rachana Pradhan:&lt;/span&gt; &lt;a href=&quot;mailto:rpradhan@kff.org&quot;&gt;rpradhan@kff.org&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/rachanadixit&quot; target=&quot;_blank&quot;&gt;@rachanadixit&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;&lt;section class=&quot;meta-tags&quot;&gt;&lt;h3&gt;Related Topics&lt;/h3&gt;
&lt;span class=&quot;categories&quot;&gt;&lt;a href=&quot;https://khn.org/topics/global-health-watch/&quot; rel=&quot;category tag&quot;&gt;Global Health Watch&lt;/a&gt; &lt;a href=&quot;https://khn.org/topics/public-health/&quot; rel=&quot;category tag&quot;&gt;Public Health&lt;/a&gt; &lt;a href=&quot;https://khn.org/topics/states/&quot; rel=&quot;category tag&quot;&gt;States&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;tags&quot;&gt;&lt;a href=&quot;https://khn.org/news/tag/cdc/&quot; rel=&quot;tag&quot;&gt;CDC&lt;/a&gt; &lt;a href=&quot;https://khn.org/news/tag/coronavirus/&quot; rel=&quot;tag&quot;&gt;COVID-19&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 24 Mar 2020 19:42:11 +0000</pubDate>
<dc:creator>bookofjoe</dc:creator>
<og:type>article</og:type>
<og:title>CDC Coronavirus Testing Decision Likely To Haunt Nation For Months To Come</og:title>
<og:url>https://khn.org/news/cdc-coronavirus-testing-decision-likely-to-haunt-nation-for-months-to-come/</og:url>
<og:description>The Centers for Disease Control and Prevention gave huge cities roughly the same number of test kits as some rural spots, which crippled efforts by health officials to contain the virus.</og:description>
<og:image>https://khn.org/wp-content/uploads/sites/2/2020/03/13-UW-virology-lab_1350.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://khn.org/news/cdc-coronavirus-testing-decision-likely-to-haunt-nation-for-months-to-come/</dc:identifier>
</item>
<item>
<title>Little Snitch and the deprecation of kernel extensions</title>
<link>https://blog.obdev.at/little-snitch-and-the-deprecation-of-kernel-extensions/</link>
<guid isPermaLink="true" >https://blog.obdev.at/little-snitch-and-the-deprecation-of-kernel-extensions/</guid>
<description>&lt;img src=&quot;https://blog.obdev.at/content/images/2020/03/legacy-system-extension-warning.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;&lt;strong&gt;You probably came here because your Mac showed a message telling you that software from “Objective Development Software GmbH” (Little Snitch) loaded a system extension that will no longer be compatible with a future version of macOS and that you should contact us, the developer, to get more information. Well, here you are.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;In order to be able to perform filtering of network traffic, Little Snitch 4 installs a kernel extension (the above mentioned “System Extension”) which is based on Apple’s “Network Kernel Extension” API (NKE).&lt;/p&gt;
&lt;p&gt;This API will be deprecated in macOS 10.16 and replaced with a new “NetworkExtension” API (NE). Despite their similarity in name, these two APIs work very differently, so the underpinnings of Little Snitch do require a substantial rework.&lt;/p&gt;
&lt;h3 id=&quot;willtherebeanupdatedversionoflittlesnitchthatiscompatiblewithmacos1016&quot;&gt;Will there be an updated version of Little Snitch that is compatible with macOS 10.16?&lt;/h3&gt;
&lt;p&gt;Yes. We are going to release an update of Little Snitch that will be compatible with macOS 10.16.&lt;/p&gt;
&lt;h3 id=&quot;whenwilllittlesnitch4becomeincompatible&quot;&gt;When will Little Snitch 4 become incompatible?&lt;/h3&gt;
&lt;p&gt;Little Snitch 4 will not be loaded on macOS 10.16, but there will still be an option to allow the loading. &lt;/p&gt;
&lt;h3 id=&quot;whathappensintheunlikelycasethatnoupdatedversionoflittlesnitchisavailablewhenmacos1016isreleased&quot;&gt;What happens in the unlikely case that no updated version of Little Snitch is available when macOS 10.16 is released?&lt;/h3&gt;
&lt;p&gt;We do our best to have an updated version available right in time. But if you’re still concerned – keep in mind that there will be an option in macOS to allow running Little Snitch 4.&lt;/p&gt;
&lt;h3 id=&quot;ifibuylittlesnitch4nowwilligettheupdateforfree&quot;&gt;If I buy Little Snitch 4 now, will I get the update for free?&lt;/h3&gt;
&lt;p&gt;Yes. All licenses sold now include a free upgrade to Little Snitch 5. In addition, customers who purchased Little Snitch 4 within a one-year period prior to the final release of Little Snitch 5 (about this fall) will also get a free upgrade. And if you purchased Little Snitch 4 before that period, we will offer you an upgrade at a reduced price.&lt;/p&gt;
&lt;h3 id=&quot;whenwilllittlesnitchbeupdatedtothenewapis&quot;&gt;When will Little Snitch be updated to the new APIs?&lt;/h3&gt;
&lt;p&gt;The replacements APIs that are currently available (NetworkExtension framework on macOS 10.15.4) are not yet completely sufficient to implement the full functionality of Little Snitch. But we are working closely with Apple to fill the remaining gaps and we expect that a beta version of macOS 10.16 (most likely available at the next WWDC) or even an upcoming version of 10.15 will provide what is missing. As soon as the APIs allow us, we will complete the transition of Little Snitch to the new NetworkExtension API. It’s our goal to provide a public beta in June 2020 and a stable version in October.&lt;/p&gt;
</description>
<pubDate>Tue, 24 Mar 2020 19:09:59 +0000</pubDate>
<dc:creator>guessmyname</dc:creator>
<og:type>article</og:type>
<og:title>Little Snitch and the Deprecation of Kernel Extensions</og:title>
<og:description>You probably came here because your Mac showed a message telling you that software from “Objective Development Software GmbH” (Little Snitch) loaded a system extension that will no longer be compatible with a future version of macOS and that you should contact us, the developer, to get more information. Well,</og:description>
<og:url>https://blog.obdev.at/little-snitch-and-the-deprecation-of-kernel-extensions/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.obdev.at/little-snitch-and-the-deprecation-of-kernel-extensions/</dc:identifier>
</item>
<item>
<title>Every default macOS wallpaper, in glorious 5k resolution</title>
<link>https://512pixels.net/projects/default-mac-wallpapers-in-5k/</link>
<guid isPermaLink="true" >https://512pixels.net/projects/default-mac-wallpapers-in-5k/</guid>
<description>&lt;p&gt;Every major version of &lt;del&gt;Mac OS X&lt;/del&gt; macOS has come with a new default wallpaper. As you can see, I have collected them all here.&lt;/p&gt;
&lt;p&gt;While great in their day, the early wallpapers are now quite small in the world of 5K displays.&lt;/p&gt;
&lt;p&gt;Major props to &lt;a href=&quot;https://grafiksyndikat.com&quot;&gt;the world-class designer&lt;/a&gt; who does all the art of Relay FM, the mysterious &lt;a href=&quot;https://twitter.com/forgottentowel&quot;&gt;@forgottentowel&lt;/a&gt;, for upscaling some of these for modern screens.&lt;/p&gt;
&lt;p&gt;If you want to see detailed screenshots of every release of OS X, &lt;a href=&quot;https://512pixels.net/projects/aqua-screenshot-library/&quot;&gt;&lt;strong&gt;click here.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.0 Cheetah &amp;amp; 10.1 Puma&lt;/h2&gt;
&lt;p&gt;The first two releases of Mac OS X shared the same wallpaper. The sweeping blue arcs and curves helped set the tone of the new Aqua interface.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-0_10.1--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-0_10.1.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.2 Jaguar&lt;/h2&gt;
&lt;p&gt;Jaguar took the same Aqua-inspired theme but added some depth and motion to things. In my head, the trails streaking across the screen were from a set of comets.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-2--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-2.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.3 Panther&lt;/h2&gt;
&lt;p&gt;While Panther inflicted Macs everywhere with &lt;a href=&quot;https://2ig18m1zutag3bjpoclbo8am-wpengine.netdna-ssl.com/wp-content/uploads/2018/08/10-3-Panther-Command-Tab.png&quot;&gt;Brushed Metal,&lt;/a&gt; its wallpaper stayed on brand, refreshing the original 10.0 image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-3--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-3.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.4 Tiger&lt;/h2&gt;
&lt;p&gt;Many consider Tiger to be the best “classic” version of Mac OS X. While that may or may not be true, it has my favorite Aqua-inspired wallpaper.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-4--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-4.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.5 Leopard&lt;/h2&gt;
&lt;p&gt;Complete with a revised, unified user interface and shiny new Dock, 10.5 broke the Aqua mold. As such, Leopard was the first version of OS X to break from the Aqua-themed wallpaper. It ushered in the “space era” of OS X wallpapers, which was used heavily in the new Time Machine interface as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-5--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-5.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.6 Snow Leopard&lt;/h2&gt;
&lt;p&gt;The “no new features” mantra for Snow Leopard didn’t ban a new wallpaper, thankfully. This starscape is still one of my favorites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-6--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-6.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.7 Lion&lt;/h2&gt;
&lt;p&gt;Lion kept up the space theme, this time showing off the Andromeda galaxy. The space nerd in me likes the idea, but the execution of this one leaves dead-last on my list of favorites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-7--thumb.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-7.png&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.8 Mountain Lion&lt;/h2&gt;
&lt;p&gt;Just like Snow Leopard before it, with Mountain Lion, Apple opted to clean up and revise the existing theme as opposed to changing directions for what would be a less-impactful release of OS X.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-8--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-8.jpg&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.9 Mavericks&lt;/h2&gt;
&lt;p&gt;Mavericks marked the beginning of Apple’s “California location” naming scheme for Mac releases. The wave depicted looks as intimidating as the ones in the famous surfing location.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-9--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-9.jpg&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.10 Yosemite&lt;/h2&gt;
&lt;p&gt;Yosemite brought another UI refresh to the Mac, making things flatter and more modern. The wallpaper ushered in a new era based on … well … mountains.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-10--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-10.jpg&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.11 El Capitan&lt;/h2&gt;
&lt;p&gt;Named after a breathtaking spot in Yosemite National Park, El Capitan was a clean-up year after 10.10.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-11--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-11.jpg&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.12 Sierra&lt;/h2&gt;
&lt;p&gt;More mountains.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-12--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-12.jpg&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.13 High Sierra&lt;/h2&gt;
&lt;p&gt;Even more mountains.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-13--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers/10-13.jpg&quot;&gt;&lt;strong&gt;Download 5K version.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10.14 Mojave&lt;/h2&gt;
&lt;p&gt;No more mountains! Mojave brought a new system-wide Dark Mode, and the OS shipped with two versions of its default wallpaper to match. Users could even have macOS slowly fade between the two background images over the course of the day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-14-Day-Thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-14-Night-Thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Download multiple versions:&lt;/p&gt;
&lt;h2&gt;10.15 Catalina&lt;/h2&gt;
&lt;p&gt;macOS Catalina brought big changes to the Mac, including the ability to run iPad apps natively, opening the platform up to a much larger number of developers than ever before. Catalina shipped with eight variants of its default wallpaper,&lt;sup id=&quot;fnref-14130-fn-6k&quot;&gt;&lt;a href=&quot;https://512pixels.net/projects/default-mac-wallpapers-in-5k/#fn-14130-fn-6k&quot; class=&quot;jetpack-footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and the ability to shift between them as time progresses throughout the day:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-15-beta-light--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-15-beta-dark--thumb.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Become a member of 512 Pixels.&lt;/strong&gt; Support projects like these, receive exclusive content in the monthly newsletter and enjoy advanced screenings of my YouTube videos.&lt;/p&gt;

</description>
<pubDate>Tue, 24 Mar 2020 18:44:31 +0000</pubDate>
<dc:creator>whalesalad</dc:creator>
<og:image>https://ismh.s3.amazonaws.com/macos-wallpapers-thumbs/10-0_10.1--thumb.png</og:image>
<og:type>article</og:type>
<og:title>Every Default macOS Wallpaper – in Glorious 5K Resolution – 512 Pixels</og:title>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://512pixels.net/projects/default-mac-wallpapers-in-5k/</dc:identifier>
</item>
<item>
<title>Albert Uderzo has died</title>
<link>https://www.theguardian.com/books/2020/mar/24/asterix-creator-albert-uderzo-dies-at-92</link>
<guid isPermaLink="true" >https://www.theguardian.com/books/2020/mar/24/asterix-creator-albert-uderzo-dies-at-92</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/books/asterix&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Asterix&lt;/a&gt; illustrator Albert Uderzo has died at the age of 92, his family has announced.&lt;/p&gt;
&lt;p&gt;The French comic book artist, who created the beloved Asterix comics in 1959 with the writer René Goscinny, died on Tuesday. He “died in his sleep at his home in Neuilly from a heart attack unrelated to the coronavirus. He had been very tired for several weeks,” his son-in-law Bernard de Choisy told AFP.&lt;/p&gt;
&lt;p&gt;One of the best-loved characters in French popular culture, with more than 370m albums sold worldwide, 11 films and an Asterix theme park, the small-statured Asterix is a warrior from Roman-occupied ancient Gaul, who together with his best friend Obelix and dog Dogmatix – Idéfix in the French original – takes pleasure in outwitting Roman legionnaires. Fortunately for Asterix, Obelix fell into a cauldron of magic potion as a child, making him invincibly strong.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Asterix creator Albert Uderzo in 1987.&quot; src=&quot;https://i.guim.co.uk/img/media/ecdb152a9dea15e74799620ea397c4e4618c59b1/0_0_5100_3424/master/5100.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;fit=max&amp;amp;s=1f45b8d840f9bc3bdf87e97efaddfb21&quot;/&gt;&lt;/div&gt;

Uderzo in 1987. Photograph: Ulf Andersen/Gamma-Rapho via Getty Images
&lt;p&gt;Each comic starts in the same way, before Asterix and his friends go on increasingly farflung adventures – in Asterix in Britain, he introduces tea to the ancient Britons; in Asterix and Cleopatra, Obelix knocks off the Sphinx’s nose. “The year is 50BC. Gaul is entirely occupied by the Romans. Well, not entirely … One small village of indomitable Gauls still holds out against the invaders. And life is not easy for the Roman legionaries who garrison the fortified camps of Totorum, Aquarium, Laudanum and Compendium.”&lt;/p&gt;
&lt;p&gt;Waterstones children’s laureate Cressida Cowell, author and illustrator of the How to Train Your Dragon books, said: “I loved Asterix as a child, and his style was absolutely iconic. Creating a huge cast of individually recognisable characters, and the minute detail of all those group battles and the action scenes is an achievement in itself, but his real skill was combining fast-paced adventure with such humour and warmth. Children come to reading in a lot of different ways, with comics and graphic novels being hugely important for a lot of kids. Asterix has taught generations of children around the world to love reading.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theguardian.com/profile/chris-addison&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Comedian Chris Addison&lt;/a&gt; was one of many fans to mourn Uderzo’s passing online. “Very few people’s work will ever give me the amount of pleasure his has ever since I was very young. One of my greatest culinary regrets is that I’ll never get to eat wild boar the way he drew them for Asterix. Chapeau, monsieur,” he said on Twitter.&lt;/p&gt;
&lt;p&gt;Mark Millar, the creator of comics including Kingsman and &lt;a href=&quot;https://www.theguardian.com/books/2018/jun/12/mark-millar-kingsman-kick-ass-the-magic-order&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Kick-Ass&lt;/a&gt;, called Uderzo “the Master” and “my gateway drug to beautiful European comics”, while Rafael Albuquerque, illustrator and co-creator of American Vampire, said Uderzo was “one of my biggest influences in comics”. “Asterix was the first comic I read, from my aunt’s bookshelf. With him I learnt about expression more than anyone. Merci maître!” he wrote on Twitter.&lt;/p&gt;
&lt;p&gt;Writer Oliver Kamm, whose mother, &lt;a href=&quot;https://www.theguardian.com/books/2018/oct/18/anthea-bell-obituary&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Anthea Bell&lt;/a&gt;, translated the Asterix books into English, said Uderzo was “a cartoonist of genius, whose skills perfectly combined with those of the brilliant René Goscinny”. Kamm said he was deeply sad and added: “Though not an English speaker like Goscinny (a keen anglophile), Uderzo had gracious appreciation of the Asterix translations of my mother.”&lt;/p&gt;
&lt;p&gt;Uderzo met Goscinny in 1951, and the pair began creating characters together, including Oumpah-Pah, seen as a precursor to Asterix. In 1959, they were asked to create a magazine called Pilote, which would feature a “typically French hero”. They agreed to set their story in ancient Gaul, with the first issue published in October featuring The Adventures of Asterix the Gaul. More than 300,000 copies were sold.&lt;/p&gt;
&lt;p&gt;Goscinny died in 1977, during an exercise stress test for a medical checkup. Uderzo continued the adventures of Asterix alone. The Great Divide, the 25th Asterix album, was published in 1980 and was the first to be written and drawn by Uderzo alone. In 2009, &lt;a href=&quot;https://www.theguardian.com/books/2009/jan/15/comics-france&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Uderzo retired, selling the rights to the character to Hachette&lt;/a&gt;.&lt;/p&gt;


</description>
<pubDate>Tue, 24 Mar 2020 18:07:55 +0000</pubDate>
<dc:creator>finphil</dc:creator>
<og:url>http://www.theguardian.com/books/2020/mar/24/asterix-creator-albert-uderzo-dies-at-92</og:url>
<og:description>French comic-book artist, who created Asterix with the writer René Goscinny, dies at home ‘from a heart attack unrelated to the coronavirus’</og:description>
<og:image>https://i.guim.co.uk/img/media/d10f86dbc8c22c4501fa8af6b98ba3464f64d1f5/0_444_2952_1772/master/2952.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;fit=crop&amp;overlay-align=bottom%2Cleft&amp;overlay-width=100p&amp;overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&amp;enable=upscale&amp;s=9881cd3b015bc52cf6b7ad41c2078492</og:image>
<og:type>article</og:type>
<og:title>Asterix creator Albert Uderzo dies at 92</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/books/2020/mar/24/asterix-creator-albert-uderzo-dies-at-92</dc:identifier>
</item>
<item>
<title>Show HN: Screen – screen sharing for remote work, by the cofounder of Screenhero</title>
<link>https://screen.so</link>
<guid isPermaLink="true" >https://screen.so</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://screen.so&quot;&gt;https://screen.so&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22676040&quot;&gt;https://news.ycombinator.com/item?id=22676040&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 297&lt;/p&gt;
&lt;p&gt;# Comments: 176&lt;/p&gt;
</description>
<pubDate>Tue, 24 Mar 2020 16:34:03 +0000</pubDate>
<dc:creator>jsherwani</dc:creator>
<og:type>website</og:type>
<og:url>https://screen.so/</og:url>
<og:title>Screen — Screen sharing for remote teams</og:title>
<og:description>Work together like you’re in the same room. Supports Mac, Windows, Linux, iOS, Android, Safari, Firefox &amp; Chrome.</og:description>
<og:image>https://screen.so/assets/img/logo/unfurl.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://screen.so/</dc:identifier>
</item>
<item>
<title>India announces nationwide lockdown to stop spread of coronavirus</title>
<link>https://www.axios.com/india-coronavirus-lockdown-fd753cb9-efbd-45b0-9008-16d51272c961.html</link>
<guid isPermaLink="true" >https://www.axios.com/india-coronavirus-lockdown-fd753cb9-efbd-45b0-9008-16d51272c961.html</guid>
<description>&lt;p&gt;India's Prime Minister Narendra Modi announced on Tuesday that the entire country will be locked down for three weeks beginning at midnight in an effort to stop the spread of the coronavirus.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why it matters:&lt;/strong&gt; With 1.3 billion people, India is the second-most populated country in the world. India currently has 519 confirmed cases.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Between the lines:&lt;/strong&gt; Modi hopes to avoid a crisis on the scale of China's or Europe's, but his new measures will have a massive economic cost.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The prime minister ordered a trial run of a national lockdown on Sunday and had urged Indians to stay home when possible, knowing the country’s health care capacity lags far behind its population.&lt;/li&gt;
&lt;li&gt;Modi has claimed that there are not yet signs of community spread, but experts caution that India is not testing enough people to know the true extent of the situation. About 15,000 tests had been conducted as of Tuesday, per &lt;a class=&quot;gtm-content-click&quot; data-vars-link-text=&quot;CNN&quot; data-vars-click-url=&quot;https://www.cnn.com/2020/03/24/asia/india-coronavirus-outbreak-risk-intl-hnk/index.html&quot; data-vars-content-id=&quot;fd753cb9-efbd-45b0-9008-16d51272c961&quot; data-vars-headline=&quot;India announces nationwide lockdown to stop spread of coronavirus&quot; data-vars-event-category=&quot;story&quot; data-vars-sub-category=&quot;story&quot; data-vars-item=&quot;in_content_link&quot; href=&quot;https://www.cnn.com/2020/03/24/asia/india-coronavirus-outbreak-risk-intl-hnk/index.html&quot; target=&quot;_blank&quot;&gt;CNN&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Go deeper:&lt;/strong&gt; &lt;a class=&quot;gtm-content-click&quot; data-vars-link-text=&quot;What world leaders are doing and saying about coronavirus&quot; data-vars-click-url=&quot;https://www.axios.com/world-leaders-coronavirus-response-5bd3c35f-24a9-408d-bc22-c31b1c8f21b9.html&quot; data-vars-content-id=&quot;fd753cb9-efbd-45b0-9008-16d51272c961&quot; data-vars-headline=&quot;India announces nationwide lockdown to stop spread of coronavirus&quot; data-vars-event-category=&quot;story&quot; data-vars-sub-category=&quot;story&quot; data-vars-item=&quot;in_content_link&quot; href=&quot;https://www.axios.com/world-leaders-coronavirus-response-5bd3c35f-24a9-408d-bc22-c31b1c8f21b9.html&quot; target=&quot;_self&quot;&gt;What world leaders are doing and saying about coronavirus&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 24 Mar 2020 14:52:16 +0000</pubDate>
<dc:creator>JumpCrisscross</dc:creator>
<og:title>India announces nationwide lockdown to stop spread of coronavirus</og:title>
<og:type>article</og:type>
<og:url>https://www.axios.com/india-coronavirus-lockdown-fd753cb9-efbd-45b0-9008-16d51272c961.html</og:url>
<og:image>https://images.axios.com/mQeRWMnzg0XMs5eMoLekLgKDoJQ=/2020/03/24/1585060950931.jpg</og:image>
<og:description>It's the second-most populated country in the world.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.axios.com/india-coronavirus-lockdown-fd753cb9-efbd-45b0-9008-16d51272c961.html</dc:identifier>
</item>
<item>
<title>A mother and son who unraveled a geographic hoax</title>
<link>https://www.atlasobscura.com/articles/moose-boulder-debunked</link>
<guid isPermaLink="true" >https://www.atlasobscura.com/articles/moose-boulder-debunked</guid>
<description>&lt;p class=&quot;item-body-text-graf&quot;&gt;&lt;span class=&quot;section-start-text&quot;&gt;It was 3 a.m.&lt;/span&gt; on a nearly deserted island, and two hikers were badly lost. Roger Dickey and his mother, Ellie Talburtt, had been exploring Michigan’s Isle Royale—the least-visited national park in the United States—and were trying to recover the trail in the island’s murky and bewildering woods. This was not what they had had in mind for a mother-son getaway, no matter how good a story it would make if things turned out okay.&lt;/p&gt;&lt;p class=&quot;item-body-text-graf&quot;&gt;What had brought them there, and into this rather dicey situation, was something called Moose Boulder, a kind of geological &lt;em&gt;matryoshka&lt;/em&gt;. Here’s what makes Moose Boulder special, from the outside in: Lake Superior is the world’s largest freshwater lake, and its largest island is Isle Royale, whose largest lake is called Siskiwit, whose largest island is called Ryan. According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Siskiwit_Lake_(Isle_Royale)&quot;&gt;Wikipedia&lt;/a&gt;, at least, Ryan Island is home to a seasonal pond called Moose Flats that, when flooded, contains its own island—Moose Boulder. This makes it “the largest island in the largest lake on the largest island in the largest lake on the largest island in the largest lake in the world.” Pity it’s not in Greenland, it could have gone all the way.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Not the most promising sight. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73182&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/73182/image.jpg&quot;/&gt;Not the most promising sight. &lt;span class=&quot;caption-credit&quot;&gt;Courtesy Roger Dickey&lt;/span&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Spoiler: Mother and son made it out alive, but it wasn’t because they stumbled on a geological/hydrological anomaly that they could use to get their bearings. They couldn’t have, because, despite what the internet has to say, Moose Boulder almost surely doesn’t exist.&lt;/p&gt;
&lt;hr class=&quot;baseline-grid-hr&quot;/&gt;&lt;p class=&quot;item-body-text-graf section-break-graf&quot;&gt;&lt;span class=&quot;section-start-text&quot;&gt;Let’s give Roger Dickey some&lt;/span&gt; credit, though. He actually knew that Moose Boulder was some kind of hoax before trekking across Isle Royale. But when he first heard about it, the San Francisco–based entrepreneur knew where he was taking his next trip. “I just like finding extreme features on maps,” he says, and he’s prepared to travel far and wide to see them for himself.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Over the course of his travels, Dickey has crossed the Arctic Circle. When he visits more populous tourist destinations, he goes hunting for the unbeaten path, like the time he trekked to the westernmost point in Portugal—also the westernmost point in continental Europe—just to watch the sun set. Next, he says, he’s planning a trip to Newfoundland because the Flat Earth Society has deemed it one of the four corners of the Earth.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Dickey set out to ground-truth his internet sleuthing. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73179&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/73179/image.jpg&quot;/&gt;Dickey set out to ground-truth his internet sleuthing. &lt;span class=&quot;caption-credit&quot;&gt;Courtesy Roger Dickey&lt;/span&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;In short, Dickey is the &lt;em&gt;Atlas Obscura&lt;/em&gt; reader par excellence, the kind of person who looks at a map, notices a “funny-shaped peninsula,” and feels that his trip won’t be complete without seeing it—come hell or high water. So when his mother sent him an article about Moose Boulder, which linked to this very website, Dickey had no choice. He was already planning the trip.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;A diligent hiker and thoughtful son, Dickey wanted to make sure he had solid GPS coordinates for Moose Boulder before trying to visit. Its very existence, he recalls, depended on a pond that isn’t even always there. Google Maps didn’t have a mark for Moose Boulder, nor did the alternative specialty mapping services that Dickey downloaded just for this search. It’s not hard to find Ryan Island, but “a little spot of blue” inside it? That had proved impossible.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Dickey’s next move was to turn to fellow hikers and topography enthusiasts, so he consulted several online forums that had hosted discussions about Moose Boulder over the years. Between all of these sites, fewer than a dozen people had actually discussed this place—and none had actually seen it, not even those who had been to Ryan Island and looked around. Some wondered if they had simply visited during the wrong season.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Belle Harbor on Isle Royale—perfectly remote. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73183&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/73183/image.jpg&quot;/&gt;Belle Harbor on Isle Royale—perfectly remote. &lt;a class=&quot;caption-credit&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; href=&quot;https://www.nps.gov/npgallery/GetAsset/B7B69D96-1DD8-B71B-0B53980E3C4E8796&quot;&gt;National Park Service&lt;/a&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;It’s doubtful that any of these other hikers, however, had consulted &lt;em&gt;Atlas Obscura&lt;/em&gt;. Had they done so, Dickey soon realized, they would have found the precise coordinates: &lt;a href=&quot;https://www.google.com/maps/place/48%C2%B000'31.7%22N+88%C2%B046'19.2%22W/@48.0088036,-88.774194,590m/data=!3m2!1e3!4b1!4m5!3m4!1s0x0:0x0!8m2!3d48.0088!4d-88.772&quot;&gt;48.0088°, -88.7720°&lt;/a&gt;. They would have seen that some people had marked visiting it on their &lt;em&gt;Atlas Obscura&lt;/em&gt; profiles. Dickey had to get creative to actually contact these people. “I did Google reverse image search for their profile photos,” he says, which led him to two people with social media presences, neither of whom responded to his messages. Dickey wasn’t exactly discouraged: On the contrary, he was starting to have some fun. “It became kind of a pet project for me,” he says. This might be an understatement.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;The &lt;em&gt;Atlas Obscura&lt;/em&gt; entry for Moose Boulder led Dickey to the Wikipedia page for Siskiwit Lake, and he got in touch with the Wikipedia user who had edited the page in 2012 to include information about Moose Boulder. That user, whose identity Dickey wants to keep secret—like a good investigative reporter might—pointed Dickey to a book, &lt;em&gt;Superior Wilderness: Isle Royale National Park&lt;/em&gt;, by Napier Shelton, also cited on Wikipedia. So Dickey ordered a copy and read it, only to discover that it contained absolutely no information regarding Moose Boulder. (I know what you’re thinking: Yes, he did try to contact Shelton, but he couldn’t find any contact information. A research society to which Shelton once belonged didn’t get back to Dickey, either.) The case had by now become highly suspicious, but did not yet seem unsolvable. After all, says Dickey, “&lt;em&gt;Atlas Obscura&lt;/em&gt; is a trusted source to me.” Thanks—it is to us too.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;And then it hit him like a bolt of lightning: Dickey realized that he had overlooked a major piece of evidence. Pictures, those internet-age angels of truth. “Pictures or it didn’t happen,” right? Naturally, as they all do, the &lt;em&gt;Atlas Obscura&lt;/em&gt; entry for the site had an image—albeit a grainy one—of a lonely little rock, cautiously jutting out of the water, feebly sprouting some weeds. (For good measure, there’s a yellow arrow drawn onto the photo, in case you weren’t sure what you should be looking at.) A photographer, of all people, had scaled the Everest of seasonal ponds and come back with this piece of evidence.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;It's like the Nessie of geographical quirks. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73175&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/73175/image.jpg&quot;/&gt;It’s like the Nessie of geographical quirks. &lt;span class=&quot;caption-credit&quot;&gt;WHOI Seafloor Samples Laboratory, apparently.&lt;/span&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Many photos that users upload to &lt;em&gt;Atlas Obscura&lt;/em&gt; link to their original sources, but this one was a dead end. Using the Wayback Machine, Dickey found that it had come from a defunct website that appeared to document a geological research expedition to Ryan Island. So Dickey got in touch with one of the members of that research crew, from the Woods Hole Oceanographic Institution, who—you guessed it!—had never heard of Moose Boulder. The team, in fact, hadn’t even made it to Ryan Island. The supposed photographic evidence had indeed come from that expedition, but it was merely a photo of an ordinary rock, off the coast of Isle Royale itself and not of the &lt;em&gt;Inception&lt;/em&gt; of islands deep inside it.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;By now, the odds seemed overwhelming to Dickey that Moose Boulder was a myth, a spasm of the internet’s imagination that had managed to proliferate and live on. But still, something didn’t quite add up. There was a missing piece to the puzzle that stopped Dickey short of declaring it all a hoax. He had found another article about Moose Boulder, published in 2009, that cited Wikipedia as its source of information. But the information about Moose Boulder had been added to Siskiwit Lake’s Wikipedia page in 2012. It was like a scene in a bad horror movie in which someone gets a phone call from a dead person. Dickey joked with his girlfriend that perhaps Moose Boulder does exist, but only in some kind of “temporal anomaly.”&lt;/p&gt;
&lt;aside class=&quot;article-pullquote&quot; readability=&quot;26.5&quot;&gt;&lt;blockquote class=&quot;article-pullquote-content&quot; readability=&quot;31&quot;&gt;
&lt;p&gt;Maybe Moose Boulder does exist, but only in some kind of “temporal anomaly.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p class=&quot;item-body-text-graf&quot;&gt;Here’s the rub: Wikipedia is a nesting doll, too. Before a page for Siskiwit Lake had been added to the site, the page for Isle Royale had pointed readers to Moose Boulder, and had been doing so since 2009. It was put there by a different user than the one who added it to the Siskiwit page in 2012. Either way, that’s where the trail goes cold, and there’s no other evidence that the place exists. The identity of that first Wikipedia user to write about it—with those completely unrelated sources—remains a mystery, but all available evidence suggests that it was a person having a laugh, nothing more. Dickey had now grown certain of that himself, but with the end of summer approaching and the plans booked, he packed up and left for the wilderness of Isle Royale.&lt;/p&gt;
&lt;hr class=&quot;baseline-grid-hr&quot;/&gt;&lt;p class=&quot;item-body-text-graf section-break-graf&quot;&gt;&lt;span class=&quot;section-start-text&quot;&gt;Ellie Talburtt, Dickey’s mother and&lt;/span&gt; traveling companion, did not yet know the truth. Dickey had kept her apprised of the early stages of his investigation, but he decided to keep the final Moose Boulder revelation a surprise until after they met up in Michigan. “Hey mom,” Dickey said at the airport, “I’m excited about this trip. By the way, Moose Boulder isn’t real.” Talburtt took the news well, perhaps suspecting this to some degree all along. As lovers of geographical obscura, the duo were still excited to be heading to the least-visited national park in the United States. They didn’t know it, but there was more excitement to come.&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;It's a shame more people don't see Isle Royale. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73181&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/73181/image.jpg&quot;/&gt;It’s a shame more people don’t see Isle Royale. &lt;span class=&quot;caption-credit&quot;&gt;Courtesy Roger Dickey&lt;/span&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;There is little that’s easy about getting to and around Isle Royale. The pair got there by seaplane, and stayed overnight at a lodge on Rock Harbor. They caught a water taxi to Malone Bay, the embarkation point closest to Siskiwit Lake. Dickey brought along a canoe, which they hefted to the lake and then paddled 2.5 miles to Ryan Island, which is barely a mile long. Moose Boulder may have been off the table, but that wasn’t going to stop them from visiting the largest island in the largest lake on the largest island in the largest lake in the world—even if it ended up being a brief stop. (Dickey and Talburtt did, however, consider “creating” Moose Boulder by pouring some water around a rock.)&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;All told, Dickey doesn’t recommend heading to Ryan Island should you find yourself on Isle Royale. It requires a tremendous amount of effort and, frankly, is not without risk. Very few people visit the Isle Royale complex at all. Dickey estimates seeing between 20 and 30 people while on the outermost part of the island, near the lodge, and almost none of them would venture much farther inland. They saw none of the island’s wolves and just one moose (the dueling subjects of &lt;a href=&quot;https://en.wikipedia.org/wiki/Wolves_and_moose_on_Isle_Royale&quot;&gt;a long-term predator-prey study&lt;/a&gt; on the island)—to which lodge staff replied, “Oh yeah, you saw Bruce.”&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;Our explorers on their way to Ryan Island. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73185&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/73185/image.jpg&quot;/&gt;Our explorers on their way to Ryan Island. &lt;span class=&quot;caption-credit&quot;&gt;Courtesy Roger Dickey&lt;/span&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;After canoeing back from Ryan Island, mother and son got well and truly lost. At some point during their 18 miles of hiking, they lost the trail. In their genuine terror—it was, by then, the middle of the night—they realized that their best shot was to find the coastline, since following that was guaranteed, eventually, to get them back to the lodge. Finally, they found the park ranger’s house, and had no choice but to knock on his door until he woke up. They didn’t know it, but they were still 10 miles from the lodge, and would have missed their flight off of the island had they not been driven back.&lt;/p&gt;
&lt;hr class=&quot;baseline-grid-hr&quot;/&gt;&lt;p class=&quot;item-body-text-graf section-break-graf&quot;&gt;&lt;span class=&quot;section-start-text&quot;&gt;“I don’t think anyone in&lt;/span&gt; the world has researched [Moose Boulder] as much as me,” says Dickey. He’s almost definitely right. So when he contacted &lt;em&gt;Atlas Obscura&lt;/em&gt; to share his findings, we took the page down, lest anyone else get lost chasing this phantom anomaly.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Dickey is pretty sure that the second Wikipedia editor—who perpetuated the earlier misinformation on Moose Boulder—had been “genuinely duped” rather than a conspirator. He was hardly the only one. It’s probably the same for the &lt;em&gt;Atlas Obscura&lt;/em&gt; user who created the Moose Boulder page. It’s also true for the U.S. Coast Guard. In 2017, the Coast Guard’s Great Lakes division posted about Moose Boulder on &lt;a href=&quot;https://www.facebook.com/uscggreatlakes/photos/a.426448284127641/1104278753011254/?type=3&amp;amp;theater&quot;&gt;Facebook&lt;/a&gt;, playing up the novelty and its comical complexity. When the (satirical) Twitter account of East Africa’s &lt;a href=&quot;https://www.britannica.com/place/Lake-Kivu&quot;&gt;Lake Kivu&lt;/a&gt; boasted of its nearby volcano and challenged Lake Superior to best that, Superior’s Coast Guard–run &lt;a href=&quot;https://twitter.com/LakeSuperior/status/954500569351294976?s=20&quot;&gt;Twitter&lt;/a&gt; replied: “I have Moose Boulder. Which is the largest island in the largest lake on the largest island in the largest lake on the largest island in the largest lake in the world. #GLOAT.” (Read: “Greatest Lake of All Time.”)&lt;/p&gt;
&lt;img class=&quot;article-image with-structured-caption lazy&quot; src=&quot;https://assets.atlasobscura.com/assets/blank-11b9c95a68e295dddd0ea924647536578ce285b2c8469a223c01df1ff3166af1.png&quot; alt=&quot;A stereographic image of Isle Royale from the 1870s. &quot; width=&quot;auto&quot; data-kind=&quot;article-image&quot; id=&quot;article-image-73176&quot; data-src=&quot;https://assets.atlasobscura.com/article_images/lg/73176/image.jpg&quot;/&gt;A stereographic image of Isle Royale from the 1870s. &lt;a class=&quot;caption-credit&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; href=&quot;https://digitalcollections.nypl.org/items/510d47e0-14be-a3d9-e040-e00a18064a99%20https://images.nypl.org/index.php?id=G90F415_022ZF&amp;amp;t=w&amp;amp;download=1&amp;amp;suffix=510d47e0-14be-a3d9-e040-e00a18064a99.001&quot;&gt;New York Public Library; The Miriam and Ira D. Wallach Division of Art, Prints and Photographs&lt;/a&gt;
&lt;p class=&quot;item-body-text-graf&quot;&gt;Let’s be honest about the stakes here: They’re not high. Nonetheless, the case of Moose Boulder attests to the ease with which a hoax or a prank or harmless goofing off can penetrate our official discourse, and become a kind of “real.” This is all part of why Dickey felt so fiercely determined to visit Moose Boulder, or at least solve its mystery. There’s something exciting, he says, about being a “modern-day explorer”—about arriving at one of the world’s few remaining unknown destinations. In a world where you can sit in New York City and watch a live street view of Tambov, Russia, a rock in a tiny seasonal pond grows in stature for being genuinely elusive.&lt;/p&gt;
&lt;p class=&quot;item-body-text-graf item-body-last&quot;&gt;And so, perhaps, after developing a safer contingency plan for getting lost, Dickey will return to Ryan Island—and keep searching. He may not be able to help it. After all, he says, he “can’t be 100 percent sure that it doesn’t exist, without exploring every square foot of the island, which is very densely forested.” He’s just the explorer for the job.&lt;/p&gt;
</description>
<pubDate>Tue, 24 Mar 2020 12:41:04 +0000</pubDate>
<dc:creator>bryanrasmussen</dc:creator>
<og:title>The Intrepid Mother and Son Who Unraveled a Geographic Hoax</og:title>
<og:url>http://www.atlasobscura.com/articles/moose-boulder-debunked</og:url>
<og:image>https://assets.atlasobscura.com/media/W1siZiIsInVwbG9hZHMvYXNzZXRzL2I4NjRkOTE2OTliOGU2ZDgwYV9JTUdfMzg4NC5qcGciXSxbInAiLCJjb252ZXJ0IiwiLWF1dG8tb3JpZW50ICJdLFsicCIsInRodW1iIiwiMTg1NngxMjM3KzE5Mis3NCJdLFsicCIsImNvbnZlcnQiLCItcXVhbGl0eSA4MSAtYXV0by1vcmllbnQiXSxbInAiLCJ0aHVtYiIsIjYwMHg-Il1d/IMG_3884.jpg</og:image>
<og:description>Atlas Obscura had a page for something called Moose Boulder, until fan Roger Dickey called us on it.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.atlasobscura.com/articles/moose-boulder-debunked</dc:identifier>
</item>
<item>
<title>Setting up Git identities</title>
<link>https://www.micah.soy/posts/setting-up-git-identities/</link>
<guid isPermaLink="true" >https://www.micah.soy/posts/setting-up-git-identities/</guid>
<description>&lt;p&gt;Working on many projects across multiple identities can be difficult to manage. This is a procedure for leveraging git aliases to set an identity at the project level for any project with support for GPG-based commit signing.&lt;/p&gt;
&lt;h3 id=&quot;first-remove-any-existing-global-identity&quot;&gt;First, remove any existing global identity&lt;/h3&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git config --global --unset user.name
git config --global --unset user.email
git config --global --unset user.signingkey
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;require-config-to-exist-in-order-to-make-commits&quot;&gt;Require config to exist in order to make commits&lt;/h3&gt;
&lt;p&gt;Without the global user name and user email, git would use the system’s hostname and username to make commits. Tell git to throw an error instead, requiring you to specify an identity for every new project.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git config --global user.useConfigOnly true
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;for-each-identity-generate-gpg-keys&quot;&gt;For each identity, generate GPG keys&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://www.micah.soy/posts/setting-up-git-identities/keygen.png&quot; alt=&quot;GPG key generation output&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Generate a GPG public/private key pair:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;gpg --full-gen-key
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Choose (1) RSA and RSA (default) key type. Choose key size of 4096 bits. Set the key to not expire (0) unless you want to repeat this step periodically. Finally, set your name and email address. Comment can be left blank.&lt;/p&gt;
&lt;p&gt;Once the key pair is generated we need to export the public key.&lt;/p&gt;
&lt;h3 id=&quot;export-the-public-keys&quot;&gt;Export the public keys&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://www.micah.soy/posts/setting-up-git-identities/key-export.png&quot; alt=&quot;GPG key export&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For each identity&lt;/em&gt;, export the public key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;gpg --list-secret-keys --keyid-format LONG user@example.com
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;user@example.com&lt;/code&gt; is the email address of the identity you just created.&lt;/p&gt;
&lt;p&gt;This will output a &lt;code&gt;sec&lt;/code&gt; ID in the format of &lt;code&gt;rsa4096/[serial]&lt;/code&gt;. Copy the serial number, then run this command to output the public key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;gpg --armor --export &lt;span&gt;[&lt;/span&gt;serial&lt;span&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Copy the public key block and add it to your Github or Gitlab settings. With the public key, Github and Gitlab can cryptographically verify your commits, placing a “Verified” label next to each.&lt;/p&gt;
&lt;h3 id=&quot;set-global-git-config-identities&quot;&gt;Set global git config identities&lt;/h3&gt;
&lt;p&gt;Now we need to create the identities in git’s global config. For example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git config --global user.gitlab.name &lt;span&gt;&quot;Your Name&quot;&lt;/span&gt;
git config --global user.gitlab.email &lt;span&gt;&quot;gitlab@example.com&quot;&lt;/span&gt;
git config --global user.gitlab.signingkey 543166183AE7043A
git config --global user.github.name &lt;span&gt;&quot;Your Name&quot;&lt;/span&gt;
git config --global user.github.email &lt;span&gt;&quot;github@example.com&quot;&lt;/span&gt;
git config --global user.github.signingkey BCF8B7A8C138D16B
git config --global user.identity3.name &lt;span&gt;&quot;Your Name&quot;&lt;/span&gt;
git config --global user.identity3.email &lt;span&gt;&quot;identity3@example.com&quot;&lt;/span&gt;
git config --global user.identity3.signingkey 4F3FFC37B1A027BD
git config --global user.identity4.name &lt;span&gt;&quot;Your Name&quot;&lt;/span&gt;
git config --global user.identity4.email &lt;span&gt;&quot;identity4@example.com&quot;&lt;/span&gt;
git config --global user.identity4.signingkey D921F8BA473CF1FC
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;create-git-alias&quot;&gt;Create git alias&lt;/h3&gt;
&lt;p&gt;Setting a git alias will give us a new git command to use to set the identity at a project level. This really is just a script that sets a particular global identity to the local config.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git config --global alias.identity &lt;span&gt;'! git config user.name &quot;$(git config user.$1.name)&quot;; git config user.email &quot;$(git config user.$1.email)&quot;; git config user.signingkey &quot;$(git config user.$1.signingkey)&quot;; :'&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;specify-git-identity&quot;&gt;Specify git identity&lt;/h3&gt;
&lt;p&gt;For each project, specify the git identity to use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ cd /path/to/git/repo
$ git config user.email &lt;span&gt;# should be no response&lt;/span&gt;
$ git config user.github.email
github@example.com
$ git identity github
$ git config user.email
github@example.com
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s it! Now whenever you start a new project or work on an existing project, you can be confident that the correct name, email address, and GPG signing key are being used.&lt;/p&gt;
&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
</description>
<pubDate>Tue, 24 Mar 2020 06:24:15 +0000</pubDate>
<dc:creator>micahhenning</dc:creator>
<og:title>Setting Up Git Identities</og:title>
<og:description>Working on many projects across multiple identities can be difficult to manage. This is a procedure for leveraging git aliases to set an identity at the project level.</og:description>
<og:type>article</og:type>
<og:url>https://www.micah.soy/posts/setting-up-git-identities/</og:url>
<og:image>https://www.micah.soy/images/micah.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.micah.soy/posts/setting-up-git-identities/</dc:identifier>
</item>
<item>
<title>Don’t bail out the cruise industry</title>
<link>https://www.theverge.com/2020/3/23/21187076/cruise-line-industry-bailout-trump-coronavirus-us-companies-tax</link>
<guid isPermaLink="true" >https://www.theverge.com/2020/3/23/21187076/cruise-line-industry-bailout-trump-coronavirus-us-companies-tax</guid>
<description>&lt;p id=&quot;hYi4cv&quot;&gt;The United States economy is grinding to a halt as the country grapples with the novel coronavirus pandemic, and one of the first major actions President Trump has floated is having the government bail out the cruise line industry, which he says is a “&lt;a href=&quot;https://www.nytimes.com/2020/03/20/travel/coronavirus-carnival-cruise-ships-hospitals.html&quot;&gt;prime candidate&lt;/a&gt;.” He shouldn’t do it.&lt;/p&gt;
&lt;p id=&quot;CgxuYe&quot;&gt;It may be wishful thinking that he won’t. Trump has proven he’s willing to give preferential treatment to big corporations over almost anything else (save for himself), like when he signed a &lt;a href=&quot;https://www.vox.com/policy-and-politics/2018/12/18/18146253/tax-cuts-and-jobs-act-stock-market-economy&quot;&gt;giant tax cut for corporations masked as relief for the working class&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;Cocg4q&quot;&gt;But there are myriad reasons not to bail out the cruise industry’s biggest players. Here are just a few:&lt;/p&gt;
&lt;p id=&quot;treg8l&quot;&gt;&lt;strong&gt;They’re not really US companies.&lt;/strong&gt; Carnival Corporation is incorporated in Panama. Royal Caribbean is incorporated in Liberia. Norwegian Cruise Line is incorporated in Bermuda. These three cruise companies combine to make up around &lt;a href=&quot;https://www.businessinsider.com/carnival-cruise-vs-royal-caribbean-vs-norwegian-cruise-line-ranked-2019-6&quot;&gt;&lt;em&gt;70 percent or more&lt;/em&gt;&lt;/a&gt; &lt;em&gt;of the global cruise ship market&lt;/em&gt;, depending on how you measure it. And while they operate offices in Miami, Florida, they are all incorporated in countries with very different labor, tax, and other laws than those of the US. Their ships fly flags of these countries, too. What’s more, a large number of cruise ship employees are &lt;a href=&quot;https://www.businessinsider.com/why-cruise-ship-workers-take-brutal-jobs-2018-11&quot;&gt;from Europe, the Caribbean islands, and the Philippines&lt;/a&gt;. These companies are not big job creators for US citizens in the way that other bailout targets like Boeing or airlines like Delta, United, and American are. Also...&lt;/p&gt;
&lt;p id=&quot;lJBl1h&quot;&gt;&lt;strong&gt;They pay basically zero federal income tax.&lt;/strong&gt; With all of that in mind, it shouldn’t surprise many people that these big cruise companies essentially pay no federal income tax in the US. True, each company is actually a conglomeration of a bunch of smaller companies, and there are some cases where their subsidiaries might be subject to federal (and state) income tax laws. But most of &lt;em&gt;those&lt;/em&gt; entities don’t have to pay, thanks to Section 883 of the Internal Revenue Code, which &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/26/883&quot;&gt;exempts&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p id=&quot;O2XOU3&quot;&gt;Gross income derived by a corporation organized in a foreign country from the international operation of a ship or ships if such foreign country grants an equivalent exemption to corporations organized in the United States.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;mMwS4W&quot;&gt;Carnival, the biggest of the three, said in its &lt;a href=&quot;https://www.carnivalcorp.com/static-files/dda3ed91-579c-4930-96bf-55bc4e839497&quot;&gt;most recent annual filing&lt;/a&gt; with the Securities and Exchange Commission that it is made up of “primarily foreign corporations engaged in the business of operating cruise ships in international transportation.” Its Holland America Princess Alaska Tours subsidiary is the company’s only truly domestic operation, so that is subject to federal and state income tax. But that’s about it.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;NdcZAR&quot;&gt;&lt;q&gt;The top three cruise companies are incorporated in Panama, Liberia, and Bermuda — places with low taxes and lax labor laws&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;DWZe21&quot;&gt;And that’s the &lt;em&gt;point&lt;/em&gt;. Cruise companies &lt;em&gt;could&lt;/em&gt; base their operations in the US and whip up &lt;a href=&quot;https://www.theverge.com/2019/12/31/21044662/google-end-tax-loophole-double-irish-dutch-sandwich-2020&quot;&gt;complex corporate structures to evade some or all income taxes&lt;/a&gt;, just like many other multinational corporations do. But they don’t bother with the facade. Norwegian said flat out in its &lt;a href=&quot;http://www.nclhltdinvestor.com/static-files/ebce2e02-cf0d-42ce-b3f6-4c91efcd3c9a&quot;&gt;most recent annual filing&lt;/a&gt; that under “current Bermuda law,” where it’s incorporated, the company is “not subject to tax on income and capital gains.” In fact, it recorded &lt;a href=&quot;https://go.redirectingat.com?id=66960X1514734&amp;amp;xs=1&amp;amp;url=https%3A%2F%2Fwww.fool.com%2Finvesting%2F2020%2F03%2F19%2Fwhy-cruise-line-stocks-may-be-doomed.aspx&amp;amp;referrer=theverge.com&amp;amp;sref=https%3A%2F%2Fwww.theverge.com%2F2020%2F3%2F23%2F21187076%2Fcruise-line-industry-bailout-trump-coronavirus-us-companies-tax&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;a net tax &lt;em&gt;benefit&lt;/em&gt; in 2019&lt;/a&gt;. Royal Caribbean explained &lt;a href=&quot;http://app.quotemedia.com/data/downloadFiling?webmasterId=101533&amp;amp;ref=114824592&amp;amp;type=PDF&amp;amp;symbol=RCL&amp;amp;companyName=Royal+Caribbean+Cruises+Ltd.&amp;amp;formType=10-K&amp;amp;dateFiled=2020-02-25&amp;amp;CK=884887&quot;&gt;in its filing&lt;/a&gt; that “most of our income (including that of our subsidiaries) is derived from or incidental to the international operation of ships,” and is therefore exempt under Section 883. These companies are so reliant on this setup that they admit in those same documents that changes to the way they are taxed would put the health of their businesses at risk.&lt;/p&gt;
&lt;p id=&quot;v1mNK2&quot;&gt;&lt;strong&gt;They’re bad corporate actors.&lt;/strong&gt; These companies use the protections offered by the countries they are incorporated in as a shield. They make passengers &lt;a href=&quot;https://www.cruiselawnews.com/2011/06/articles/passenger-rights/top-10-shocking-clauses-in-your-cruise-contract/&quot;&gt;sign over&lt;/a&gt; a ton of rights &lt;a href=&quot;https://www.businessinsider.com/why-its-nearly-impossible-for-cruise-workers-to-sue-employers-2019-11&quot;&gt;before they even come aboard&lt;/a&gt;. Many employees often &lt;a href=&quot;https://story.californiasunday.com/below-deck&quot;&gt;face long hours and brutal working conditions&lt;/a&gt;. Worst of all...&lt;/p&gt;
&lt;p id=&quot;c4gQ9R&quot;&gt;&lt;strong&gt;They pollute the air and&lt;/strong&gt; &lt;strong&gt;oceans.&lt;/strong&gt; Every fossil fuel-powered mode of transportation pollutes the air, but cruise ships are among the worst. They emit &lt;a href=&quot;https://www.ft.com/content/8bceef94-86cd-11e9-a028-86cea8523dc2&quot;&gt;more sulfur dioxide than all of the passenger vehicles in Europe combined&lt;/a&gt;. Cruise ships &lt;em&gt;also&lt;/em&gt; pollute the oceans &lt;a href=&quot;https://www.theguardian.com/environment/2016/dec/02/the-40m-magic-pipe-princess-cruises-given-record-fine-for-dumping-oil-at-sea&quot;&gt;by dumping waste&lt;/a&gt;. Not just illegally, for which these companies have been &lt;a href=&quot;https://www.nytimes.com/2019/06/04/business/carnival-cruise-pollution.html&quot;&gt;repeatedly&lt;/a&gt; fined, but also in some cases with impunity, again thanks to protections afforded by the laws of the countries where they’re incorporated. And where they’ve been caught, there &lt;a href=&quot;https://www.nytimes.com/2019/06/04/business/carnival-cruise-pollution.html&quot;&gt;have been coverups&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;RvG4Os&quot;&gt;&lt;strong&gt;They aren’t necessary.&lt;/strong&gt; You can make a compelling argument that the airlines should be bailed out because they are a type of transportation we’ve become reliant on. (Whether they should be, or what strings should be attached, is a whole other argument that has already been competently made &lt;a href=&quot;https://www.vice.com/en_us/article/5dm453/dont-bail-out-the-airlines-coronavirus-stockholder-buybacks&quot;&gt;by Aaron Gordon at &lt;em&gt;Vice&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.nytimes.com/2020/03/16/opinion/airlines-bailout.html&quot;&gt;Tim Wu at &lt;em&gt;The New York Times&lt;/em&gt;&lt;/a&gt;.) Cruise ships are not essential, though. Nobody gets on a cruise ship because they &lt;em&gt;need&lt;/em&gt; to go to Turks and Caicos. Cruise ship companies offer a tantalizing proposition, to be sure, by selling all-inclusive, hassle-free vacations at what can feel like cut-rate prices. But they’re not something we &lt;em&gt;need&lt;/em&gt;.&lt;/p&gt;
&lt;div id=&quot;9ek0EZ&quot; readability=&quot;6.394422310757&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;6.8207171314741&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;The giant cruise companies incorporate overseas to dodge US taxes, flag vessels overseas to avoid US taxes and laws, and pollute without offset. Why should we bail them out?&lt;a href=&quot;https://t.co/DazdJmdRv1&quot;&gt;https://t.co/DazdJmdRv1&lt;/a&gt;&lt;/p&gt;
— Sheldon Whitehouse (@SenWhitehouse) &lt;a href=&quot;https://twitter.com/SenWhitehouse/status/1239914574343798784?ref_src=twsrc%5Etfw&quot;&gt;March 17, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p id=&quot;GwLciK&quot;&gt;If the Trump administration is really going to bail out the cruise industry, there should be a focused attempt on making these companies change these behaviors. Sens. Ed Markey (D-MA), Richard Blumenthal (D-CT), Sheldon Whitehouse (D-RI), and Tammy Baldwin (D-WI) got the &lt;a href=&quot;https://www.markey.senate.gov/imo/media/doc/Letter%20to%20leadership%20re%20Coronavirus%20Stimulus%20Consumer%20and%20Labor%20Protections.pdf&quot;&gt;ball rolling in a letter to Senate leadership last week&lt;/a&gt;, though it was mostly focused on the airlines. Cruise ship reform would take a much more concentrated effort.&lt;/p&gt;
&lt;p id=&quot;sabSiQ&quot;&gt;The role that cruise ships played in the spread of the novel coronavirus should also be considered in any bailout package. Top employees in charge of Carnival’s Diamond Princess ship were &lt;a href=&quot;https://www.nytimes.com/2020/03/08/world/asia/coronavirus-cruise-ship.html&quot;&gt;delayed in responding to an early confirmed case of the coronavirus&lt;/a&gt;. The ship ultimately became “the largest outbreak outside mainland China” in the early stages of the pandemic, &lt;a href=&quot;https://www.cdc.gov/mmwr/volumes/69/wr/mm6912e3.htm?s_cid=mm6912e3_w&quot;&gt;according to the Centers for Disease Control and Prevention&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;ly3JDC&quot;&gt;Another Carnival-owned ship, the Costa Luminosa, &lt;a href=&quot;https://www.nytimes.com/2020/03/20/us/coronavirus-cruise-ship-costa-luminosa.html&quot;&gt;reportedly took a week to implement strict sanitary protocols&lt;/a&gt; after a passenger was evacuated when she showed symptoms of COVID-19, the disease caused by the novel coronavirus. Mangers at Norwegian Cruise Line &lt;a href=&quot;https://www.motherjones.com/environment/2020/03/norwegian-cruises-coronavirus/&quot;&gt;pushed disinformation to try to keep booking people onto cruises after the virus went global&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;dkKKPQ&quot;&gt;These companies &lt;em&gt;do&lt;/em&gt; employ workers in the US, and the government should be doing what it can to help them, just like they should be doing with everyone else who makes up our now-imperiled economy. But handing these companies money with no strings attached is a bad idea. Even Carnival Corporation’s CEO told &lt;em&gt;Axios&lt;/em&gt; that he &lt;a href=&quot;https://www.axios.com/carnival-cruises-coronavirus-bailout-99a765ad-8bd2-4647-9690-94a4dca0a8ce.html&quot;&gt;doesn’t think a straight bailout is the best path forward&lt;/a&gt;. So don’t do it. Put the money to better use, like &lt;a href=&quot;https://www.vox.com/2020/3/19/21186910/mass-transit-bailout-needed&quot;&gt;saving our country’s public transportation systems&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 24 Mar 2020 06:00:44 +0000</pubDate>
<dc:creator>nobita</dc:creator>
<og:description>They’re not even US companies to begin with.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/SjY-x3KZ7wn0Z8cfocA_Bh0rbjE=/0x215:3000x1786/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/19826278/590222848.jpg.jpg</og:image>
<og:title>Don’t bail out the cruise industry</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2020/3/23/21187076/cruise-line-industry-bailout-trump-coronavirus-us-companies-tax</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2020/3/23/21187076/cruise-line-industry-bailout-trump-coronavirus-us-companies-tax</dc:identifier>
</item>
</channel>
</rss>