<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Apple Threatens to Remove App &amp;#039;Hey&amp;#039; from App Store over No In-App Subscriptions</title>
<link>https://www.macrumors.com/2020/06/16/apple-threatens-to-remove-hey-from-app-store/</link>
<guid isPermaLink="true" >https://www.macrumors.com/2020/06/16/apple-threatens-to-remove-hey-from-app-store/</guid>
<description>&lt;p&gt;A new email app called &quot;Hey&quot; from the team at Basecamp has run into trouble with Apple for refusing to offer a subscription option that can be purchased in the iOS app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.macrumors.com/t/cS-lhS83l7RWT55_IqAQAm0RXQ8=/400x0/filters:quality(90)/article-new/2020/06/heyemailapp.jpg&quot; srcset=&quot;https://images.macrumors.com/t/cS-lhS83l7RWT55_IqAQAm0RXQ8=/400x0/filters:quality(90)/article-new/2020/06/heyemailapp.jpg 400w,https://images.macrumors.com/t/Nq9ILieraNNVQnksQTeCAz5nwXo=/800x0/filters:quality(90)/article-new/2020/06/heyemailapp.jpg 800w,https://images.macrumors.com/t/vzjI1FnozspJM371zieMgdkz9yY=/1600x0/filters:quality(90)/article-new/2020/06/heyemailapp.jpg 1600w,https://images.macrumors.com/t/-A-UstalCO2oRwdjpH3zRTvKJ8k=/2500x0/filters:no_upscale():quality(90)/article-new/2020/06/heyemailapp.jpg 2500w&quot; sizes=&quot;(max-width: 900px) 100vw, 697px&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;1946&quot; class=&quot;aligncenter size-full wp-image-746218&quot;/&gt;&lt;br/&gt;Hey, which &lt;a href=&quot;https://hey.com&quot;&gt;launched on Monday&lt;/a&gt;, is priced at $99 per year. Subscriptions for the service must be purchased on the Hey website and are not offered in the iOS app because Hey's developers don't want to pay Apple a 15 to 30 percent cut of their fees.&lt;/p&gt;
&lt;p&gt;Apple, however, has told the Hey team that customers need to be able to purchase the service in the iOS app and that if in-app purchases are not implemented, the Hey app could be removed from the &lt;a href=&quot;https://www.macrumors.com/guide/app-store/&quot;&gt;App Store&lt;/a&gt;. Apple has a long running rule that apps can't link to outside purchase options and must use the in-app purchasing tools when offering paid content or subscriptions, but many apps skirt that rule by avoiding in-app purchases and not providing links to outside websites.&lt;/p&gt;
&lt;p&gt;Netflix and Spotify, for example, do not allow customers to sign up for or subscribe to their services on the &lt;a href=&quot;https://www.macrumors.com/guide/iphone/&quot;&gt;iPhone&lt;/a&gt; or the &lt;a href=&quot;https://www.macrumors.com/roundup/ipad/&quot;&gt;iPad&lt;/a&gt;, and do not link to their respective websites. Each app instead offers a message about sign ups being unavailable in the app.&lt;/p&gt;
&lt;p&gt;The Hey email app does the same thing, and as Basecamp CTO David Heinemeier Hansson explains in an interview with &lt;em&gt;&lt;a href=&quot;https://www.protocol.com/hey-email-app-store-rejection&quot;&gt;Protocol&lt;/a&gt;&lt;/em&gt;, the team thought that it would be exempt from Apple's rules because it's following in the footsteps of apps like Netflix.&lt;/p&gt;
&lt;p&gt;Downloading the Hey app presents a simple sign in screen with no sign up option, and tapping on the &quot;Help Me&quot; link informs users that there are no sign up options in the app. Like Netflix and Spotify, it does not direct users to the website to sign up.&lt;/p&gt;
&lt;p&gt;Updates for Hey have been stalled until the developers comply with Apple's request to add in-app purchase options, and despite appeals and escalation requests, Apple has held firm on the requirement. Apple says that Hey does not qualify as a &quot;reader&quot; app, which means new users need to be able to sign up within the app using in-app purchases.&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;Apple didn't respond to a request for comment. But on Tuesday afternoon, it sent Basecamp a slightly softer written notice. &quot;We noticed that your app allows customers to access content, subscriptions, or features they have purchased elsewhere, but those items were not available as in-app purchases within the app,&quot; it said. Because Hey didn't qualify as a &quot;Reader&quot; app, Apple said that existing subscribers could log in as normal but Hey needed to make all subscriptions available to new users as in-app purchases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's not entirely clear why Apple is requiring Hey to provide an in-app subscription option when it allows Netflix and Spotify to decline to offer in-app purchase options while still having their apps in the ‌App Store‌.&lt;/p&gt;
&lt;p&gt;Hey's developers do not intend to comply with Apple's request for in-app purchase options. &quot;There is never in a million years a way that I am paying Apple a third of our revenues,&quot; Heinemeier Hansson told &lt;em&gt;Protocol&lt;/em&gt;. That is obscene, and it's criminal, and I will spend every dollar that we have or ever make to burn this down until we get to somewhere better.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Apple provided a statement to &lt;em&gt;&lt;a href=&quot;https://www.protocol.com/hey-email-app-store-rejection&quot;&gt;Protocol&lt;/a&gt;&lt;/em&gt; and said that it made a mistake approving the Hey app in the first place when it didn't conform to Apple's guidelines. Apple said that sign-in only apps are allowed for business services, but not consumer products.&lt;/p&gt;
&lt;blockquote readability=&quot;16&quot;&gt;
&lt;p&gt;Apple told me that its actual mistake was approving the app in the first place, when it didn't conform to its guidelines. Apple allows these kinds of client apps -- where you can't sign up, only sign in -- for business services but not consumer products. That's why Basecamp, which companies typically pay for, is allowed on the ‌App Store‌ when Hey, which users pay for, isn't. Anyone who purchased Hey from elsewhere could access it on iOS as usual, the company said, but the app must have a way for users to sign up and pay through Apple's infrastructure. That's how Apple supports and pays for its work on the platform.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
<pubDate>Tue, 16 Jun 2020 22:43:31 +0000</pubDate>
<dc:creator>sixhobbits</dc:creator>
<og:title>Apple Threatens to Remove Email App 'Hey' From App Store Over Lack of In-App Subscription Option [Updated]</og:title>
<og:type>article</og:type>
<og:url>https://www.macrumors.com/2020/06/16/apple-threatens-to-remove-hey-from-app-store/</og:url>
<og:image>https://images.macrumors.com/article-new/2020/06/heyemailapp.jpg</og:image>
<og:description>A new email app called &quot;Hey&quot; from the team at Basecamp has run into trouble with Apple for refusing to offer a subscription option that can...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.macrumors.com/2020/06/16/apple-threatens-to-remove-hey-from-app-store/</dc:identifier>
</item>
<item>
<title>Bootstrap 5 alpha</title>
<link>https://blog.getbootstrap.com/2020/06/16/bootstrap-5-alpha/</link>
<guid isPermaLink="true" >https://blog.getbootstrap.com/2020/06/16/bootstrap-5-alpha/</guid>
<description>&lt;span class=&quot;post-date&quot;&gt;16 Jun 2020&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://v5.getbootstrap.com&quot;&gt;&lt;strong&gt;Bootstrap 5’s very first alpha has arrived!&lt;/strong&gt;&lt;/a&gt; We’ve been working hard for several months to refine the work we started in v4, and while we’re feeling great about our progress, there’s still even more to do.&lt;/p&gt;
&lt;p&gt;We’ve been focused on making the migration from v4 to v5 more approachable, but we’ve also not been afraid to step away from what’s outdated or no longer appropriate. As such, we’re very happy to say that with v5, &lt;strong&gt;Bootstrap no longer depends on jQuery&lt;/strong&gt; and &lt;strong&gt;we’ve dropped support for Internet Explorer&lt;/strong&gt;. We’re sharpening our focus on building tools that are more future-friendly, and while we’re not fully there yet, the promise of CSS variables, faster JavaScript, fewer dependencies, and better APIs certainly feel right to us.&lt;/p&gt;
&lt;p&gt;Before you jump to updating, please remember v5 is now in alpha—breaking changes will continue to occur until our first beta. We haven’t finished adding or removing everything, so check for open issues and pull requests as you have questions or feedback.&lt;/p&gt;
&lt;p&gt;Now let’s dig in with some highlights!&lt;/p&gt;
&lt;h2 id=&quot;new-look-and-feel&quot;&gt;New look and feel&lt;/h2&gt;
&lt;p&gt;We’ve built on the improvements to our docs homepage in v4.5.0 with an updated look and feel for the rest of our docs. Our docs pages are no longer full-width to improve readability and make our site feel less app-like and more content-like. In addition, we’ve upgraded our sidebar to use expandable sections (powered by our own Collapse plugin) for faster navigation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://v5.getbootstrap.com&quot;&gt;&lt;img src=&quot;https://blog.getbootstrap.com/assets/img/2020/06/v5-home.png&quot; alt=&quot;New Bootstrap docs layout&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We’re also sporting a brand new logo! More on that when v5 goes stable, but suffice to say we wanted to give the ol’ B in a rounded square a small upgrade.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.getbootstrap.com/assets/img/2020/06/v5-new-logo.png&quot; alt=&quot;New Bootstrap logo&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Inspired by the CSS that created the very beginnings of this project, our logo embodies the feeling of a rule set—style bounded by curly braces. We love it and think you will, too. Expect to see it roll out to v4’s documentation, our blog, and more over time as we continue to refine things and ship new releases.&lt;/p&gt;
&lt;h2 id=&quot;jquery-and-javascript&quot;&gt;jQuery and JavaScript&lt;/h2&gt;
&lt;p&gt;jQuery brought unprecedented access to complex JavaScript behaviors to millions (billions?) of people over the last decade and a half. Personally, I’m forever grateful for the empowerment and support it gave me to continue writing front-end code, learning new things, and embracing plugins from the community. Perhaps most importantly, it’s forever changed JavaScript itself, and that in itself is a monument to jQuery’s success. Thank you to every jQuery contributor and maintainer who made that possible for folks like me.&lt;/p&gt;
&lt;p&gt;Thanks to advancement made in front-end development tools and browser support, we’re now able to drop jQuery as a dependency, but you’d never notice otherwise. This migration was a huge undertaking by &lt;a href=&quot;https://github.com/johann-s&quot;&gt;@Johann-S&lt;/a&gt;, our primary JavaScript maintainer these days. It marks one of the largest changes to the framework in years and means projects built on Bootstrap 5 will be significantly lighter on file size and page load moving forward.&lt;/p&gt;
&lt;p&gt;In addition to dropping jQuery, we’ve made a handful of other changes and enhancements to our JavaScript in v5 that focus on code quality and bridging the gap between v4 and v5. One of our other larger changes was dropping the bulk of our Button plugin for an HTML and CSS only approach to toggle states. Now toggle buttons are powered by checkboxes and radio buttons and are much more reliable.&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&quot;https://github.com/twbs/bootstrap/issues?q=label%3Ajs+project%3Atwbs%2Fbootstrap%2F11+is%3Aclosed&quot;&gt;see the full list of JS related changes&lt;/a&gt; in the first v5 alpha project on GitHub.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Interested in helping out on Bootstrap’s JavaScript? We’re always looking for new contributors to the team to help write new plugins, review pull requests, and fix bugs. Let us know!&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;css-custom-properties&quot;&gt;CSS custom properties&lt;/h2&gt;
&lt;p&gt;As mentioned, we’ve begun using CSS custom properties in Bootstrap 5 thanks to dropping support for Internet Explorer. In v4 we only included a handful of root variables for color and fonts, and now we’ve added them for a handful of components and layout options.&lt;/p&gt;
&lt;p&gt;Take for example our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.table&lt;/code&gt; component, where we’ve added a handful of local variables to make striped, hoverable, and active table styles easier:&lt;/p&gt;
&lt;div class=&quot;language-scss highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-bg&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-accent-bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-striped-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-striped-color&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-striped-bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-striped-bg&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-active-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-active-color&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-active-bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-active-bg&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-hover-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-hover-color&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;--bs-table-hover-bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table-hover-bg&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Styles here...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We’re working to utilize the superpowers of both Sass and CSS custom properties for a more flexible system. You can &lt;a href=&quot;https://v5.getbootstrap.com/docs/5.0/content/tables/#how-do-the-variants-and-accented-tables-work&quot;&gt;read more about this in the Tables docs page&lt;/a&gt; and expect to see more usage in components like buttons in the near future.&lt;/p&gt;
&lt;h2 id=&quot;improved-customizing-docs&quot;&gt;Improved customizing docs&lt;/h2&gt;
&lt;p&gt;We’ve hunkered down and improved our documentation in several places, giving more explanation, removing ambiguity, and providing much more support for extending Bootstrap. It all starts with a whole &lt;a href=&quot;https://v5.getbootstrap.com/docs/5.0/customize/overview/&quot;&gt;new Customize section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/98681/84740682-ac43c600-af62-11ea-88a4-79c1362061c8.png&quot; alt=&quot;Bootstrap 5 customize docs&quot;/&gt;&lt;/p&gt;
&lt;p&gt;v5’s Customize docs expand on v4’s Theming page with more content and code snippets for building on top of Bootstrap’s source Sass files. We’ve fleshed out more content here and even provided a &lt;a href=&quot;https://github.com/twbs/bootstrap-npm-starter&quot;&gt;starter npm project&lt;/a&gt; for you to get started with faster and easier. It’s also available as a template repo on GitHub, so you can freely fork and go.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/98681/84801339-e5585680-afb3-11ea-8743-29647ff3f3a9.png&quot; alt=&quot;Bootstrap 5 color palette&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We’ve expanded our color palette in v5, too. With an extensive color system built-in, you can more easily customize the look and feel of your app without ever leaving the codebase. We’ve also done some work to improve color contrast, and even provided color contrast metrics in our Color docs. Hopefully, this will continue to help make Bootstrap-powered sites more accessible to folks all over.&lt;/p&gt;
&lt;h2 id=&quot;updated-forms&quot;&gt;Updated forms&lt;/h2&gt;
&lt;p&gt;In addition to the new Customize section, we’ve overhauled our Forms documentation and components. We’ve consolidated all our forms styles into a new Forms section (including the input group component) to give them the emphasis they deserve.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.getbootstrap.com/assets/img/2020/06/v5-forms.png&quot; alt=&quot;New Bootstrap 5 forms docs&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Alongside new docs pages, we’ve redesigned and de-duped all our form controls. In v4 we introduced an extensive suite of custom form controls—checks, radios, switches, files, and more—but those were in addition to whatever defaults each browser provided. With v5, we’ve gone fully custom.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.getbootstrap.com/assets/img/2020/06/v5-checks.png&quot; alt=&quot;New Bootstrap 5 checks&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If you’re familiar with v4’s form markup, this shouldn’t look too far off for you. With a single set of form controls and a focus on redesigning existing elements vs generating new ones via pseudo-elements, we have a much more consistent look and feel.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check-input&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexCheckDefault&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check-label&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexCheckDefault&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    Default checkbox
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check-input&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexRadioDefault&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexRadioDefault1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check-label&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexRadioDefault1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    Default radio
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check form-switch&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check-input&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexSwitchCheckDefault&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-check-label&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flexSwitchCheckDefault&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Default switch checkbox input&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Every checkbox, radio, select, file, range, and more includes a custom appearance to unify the style and behavior of form controls across OS and browser. These new form controls are all built on completely semantic, standard form controls—no more superfluous markup, just form controls and labels.&lt;/p&gt;
&lt;p&gt;Be sure to &lt;a href=&quot;https://v5.getbootstrap.com/docs/5.0/forms/overview/&quot;&gt;explore the new forms docs&lt;/a&gt; and let us know what you think.&lt;/p&gt;
&lt;h2 id=&quot;utilities-api&quot;&gt;Utilities API&lt;/h2&gt;
&lt;p&gt;We love seeing how many folks are building new and interesting CSS libraries and toolkits, challenging the way we’ve built on the web for the last decade-plus. It’s refreshing, to say the least, and affords us all an opportunity to discuss and iterate. As such, we’ve implemented a brand new utility API into Bootstrap 5.&lt;/p&gt;
&lt;div class=&quot;language-scss highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$utilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$utilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;m&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;25%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;m&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;75%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;margin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;responsive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$utilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ever since utilities become a preferred way to build, we’ve been working to find the right balance to implement them in Bootstrap while providing control and customization. In v4, we did this with global &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$enable-*&lt;/code&gt; classes, and we’ve even carried that forward in v5. But with an API based approach, we’ve created a language and syntax in Sass to create your own utilities on the fly while also being able to modify or remove those we provide. This is all thanks to &lt;a href=&quot;https://github.com/martijncuppens&quot;&gt;@MartijnCuppens&lt;/a&gt;, who also maintains &lt;a href=&quot;https://github.com/twbs/rfs&quot;&gt;the RFS project&lt;/a&gt;, and is responsible for the initial PR and subsequent improvements.&lt;/p&gt;
&lt;p&gt;We think this will be a game-changer for those who build on Bootstrap via our source files, and if you haven’t built a Bootstrap-powered project that way yet, your mind will be blown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Heads up!&lt;/strong&gt; We’ve moved some of our former v4 utilities to a new Helpers section. These helpers are snippets of code that are longer than your usual &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;property-value&lt;/code&gt; pairing for our utilities. Just our way of reorganizing things for easier naming and improved documentation.&lt;/p&gt;
&lt;h2 id=&quot;enhanced-grid-system&quot;&gt;Enhanced grid system&lt;/h2&gt;
&lt;p&gt;By design Bootstrap 5 isn’t a complete departure from v4. We wanted everyone to be able to more easily upgrade to this future version after hearing about the difficulties from the v3 to v4 upgrade path. We’ve kept the bulk of the build system in place (minus jQuery) for this reason, and we’ve also built on the existing grid system instead of replacing it with something newer and hipper.&lt;/p&gt;
&lt;p&gt;Here’s a rundown of what’s changed in our grid:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We’ve added a new grid tier! Say hello to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xxl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gutter&lt;/code&gt; classes have been replaced with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.g*&lt;/code&gt; utilities, much like our margin/padding utilities. We’ve also added &lt;a href=&quot;https://v5.getbootstrap.com/docs/5.0/layout/gutters/&quot;&gt;options to your grid gutter spacing&lt;/a&gt; that matches the spacing utilities you’re already familiar with.&lt;/li&gt;
&lt;li&gt;Form layout options have been replaced with the new grid system.&lt;/li&gt;
&lt;li&gt;Vertical spacing classes have been added.&lt;/li&gt;
&lt;li&gt;Columns are no longer &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; by default.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here’s a quick example of how to use the new grid gutter classes:&lt;/p&gt;
&lt;div class=&quot;language-scss highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;row g-5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Take a look at the &lt;a href=&quot;https://v5.getbootstrap.com/docs/5.0/layout/&quot;&gt;redesigned and restructured Layout docs to learn more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CSS’s grid layout is increasingly ready for prime time, and while we haven’t made use of it here yet, we’re continuing to experiment and learn from it. Look to future releases of v5 to embrace it in more ways.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;docs&quot;&gt;Docs&lt;/h2&gt;
&lt;p&gt;We switched our documentation static site generator from &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;. Jekyll has long been our generator of choice given how easy it is to get up and running, and its simplicity with deploying to GitHub Pages.&lt;/p&gt;
&lt;p&gt;Unfortunately, we’ve reached two major issues with Jekyll over the years:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Jekyll requires Ruby to be installed&lt;/li&gt;
&lt;li&gt;Site generation was very slow&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Hugo on the other hand is written in Go, so it has no external runtime dependencies, and it’s much faster. We build our current master branch site, including the doc’s Sass -&amp;gt; CSS in ~1.6s. Our local server reloads in milliseconds instead of 8-12 seconds, so working on the docs has become a pleasant experience again.&lt;/p&gt;
&lt;p&gt;The Hugo switch wouldn’t have been possible without Hugo’s main developer work, Bjørn Erik Pedersen (&lt;a href=&quot;https://github.com/bep&quot;&gt;@bep&lt;/a&gt;), who made quite a few codebase changes to make the transition possible and smooth!&lt;/p&gt;
&lt;p&gt;Also a shoutout to &lt;a href=&quot;https://github.com/xhmikosr&quot;&gt;@xhmikosr&lt;/a&gt; who led the charge here in converting hundreds of files and working with the Hugo developers to make sure our local development was fast, efficient, and maintainable.&lt;/p&gt;
&lt;h2 id=&quot;coming-soon-rtl-offcanvas-and-more&quot;&gt;Coming soon: RTL, offcanvas, and more&lt;/h2&gt;
&lt;p&gt;There’s a ton we just didn’t have time to tackle in our first alpha that’s still on the todo list for future alphas. We wanted to give them some love here so you know what’s on our radar throughout v5’s development.&lt;/p&gt;
&lt;ul readability=&quot;8.5580357142857&quot;&gt;&lt;li readability=&quot;3.8222222222222&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/pull/30980&quot;&gt;RTL is coming!&lt;/a&gt;&lt;/strong&gt; We’ve spiked out a PR using RTLCSS and are continuing to explore logical properties as well. Personally, I’m sorry for taking so long for us to officially tackle this knowing all the effort that’s gone into it community efforts and pull requests to the project. Hopefully, the wait is worth it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6.4545454545455&quot;&gt;
&lt;p&gt;&lt;strong&gt;There’s a forked version of our modal that’s &lt;a href=&quot;https://github.com/twbs/bootstrap/pull/29017&quot;&gt;implementing an offcanvas menu&lt;/a&gt;.&lt;/strong&gt; We still have some work to do here to get this right without adding too much overhead, but the idea of having an offcanvas wrapper to place any sidebar-worth content—navigation, shopping cart, etc—is huge. Personally, I know we’re behind the times on this one, but it should be awesome nonetheless.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;We’re evaluating a number of other changes to our codebase, including the Sass module system, increased usage of CSS custom properties, embedding SVGs in our HTML instead of our CSS, and more.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There’s a ton yet to come, including more documentation improvements, bug fixes, and quality of life changes. Be sure to review our open issues and PRs to see where you can help out by providing feedback, testing community PRs, or sharing your ideas.&lt;/p&gt;
&lt;h2 id=&quot;get-started&quot;&gt;Get started&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Head to &lt;a href=&quot;https://v5.getbootstrap.com&quot;&gt;https://v5.getbootstrap.com&lt;/a&gt; to explore the new release.&lt;/strong&gt; We’ve also published this updated as a pre-release to npm, so if you’re feeling bold or are curious about what’s new, you can pull the latest in that way.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;npm i bootstrap@next
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What’s next&lt;/h2&gt;
&lt;p&gt;We still have more work to do in v5, including some breaking changes, but we’re incredibly excited about this release. Let the feedback rip and we’ll do our best to keep up with y’all. Our goal is to ship another alpha within 3-4 weeks, and likely a couple more after that. We’ll also be shipping a v4.5.1 release to fix a couple of regressions and continue to bridge the gap between v4 and v5.&lt;/p&gt;
&lt;p&gt;Beyond that, keep an eye for more updates to the &lt;a href=&quot;https://icons.getbootstrap.com&quot;&gt;Bootstrap Icons&lt;/a&gt; project, our &lt;a href=&quot;https://github.com/twbs/rfs&quot;&gt;RFS project&lt;/a&gt; (now enabled by default in v5), and the &lt;a href=&quot;https://github.com/twbs/bootstrap-npm-starter&quot;&gt;npm starter project&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;support-the-team&quot;&gt;Support the team&lt;/h2&gt;
&lt;p&gt;Visit our &lt;a href=&quot;https://opencollective.com/bootstrap&quot;&gt;Open Collective page&lt;/a&gt; or our &lt;a href=&quot;https://github.com/orgs/twbs/people&quot;&gt;team members&lt;/a&gt;’ GitHub profiles to help support the maintainers contributing to Bootstrap.&lt;/p&gt;
&lt;p&gt;&amp;lt;3,&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mdo&quot;&gt;@mdo&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/twbs&quot;&gt;team&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 19:50:13 +0000</pubDate>
<dc:creator>mkurz</dc:creator>
<og:title>Bootstrap 5 alpha!</og:title>
<og:description>Bootstrap 5’s very first alpha has arrived! We’ve been working hard for several months to refine the work we started in v4, and while we’re feeling great about our progress, there’s still even more to do.</og:description>
<og:url>https://blog.getbootstrap.com/2020/06/16/bootstrap-5-alpha/</og:url>
<og:image>https://blog.getbootstrap.com/assets/img/bootstrap-social.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.getbootstrap.com/2020/06/16/bootstrap-5-alpha/</dc:identifier>
</item>
<item>
<title>The Next Step for Generics</title>
<link>https://blog.golang.org/generics-next-step</link>
<guid isPermaLink="true" >https://blog.golang.org/generics-next-step</guid>
<description>&lt;p class=&quot;author&quot;&gt;Ian Lance Taylor and Robert Griesemer&lt;br/&gt;16 June 2020&lt;/p&gt;
&lt;h4 id=&quot;TOC_1.&quot;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;It’s been almost a year since we &lt;a href=&quot;https://blog.golang.org/why-generics&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;last wrote about the possibility of adding generics to Go&lt;/a&gt;. It’s time for an update.&lt;/p&gt;
&lt;h4 id=&quot;TOC_2.&quot;&gt;Updated design&lt;/h4&gt;
&lt;p&gt;We’ve been continuing to refine the &lt;a href=&quot;https://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-contracts.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;generics design draft&lt;/a&gt;. We’ve written a type checker for it: a program that can parse Go code that uses generics as described in the design draft and report any type errors. We’ve written example code. And we’ve collected feedback from many, many people—thanks for providing it!&lt;/p&gt;
&lt;p&gt;Based on what we’ve learned, we’re releasing an &lt;a href=&quot;https://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-type-parameters.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;updated design draft&lt;/a&gt;. The biggest change is that we are dropping the idea of contracts. The difference between contracts and interface types was confusing, so we’re eliminating that difference. Type parameters are now constrained by interface types. Interface types are now permitted to include type lists, though only when used as constraints; in the previous design draft type lists were a feature of contracts. More complex cases will use a parameterized interface type.&lt;/p&gt;
&lt;p&gt;We hope that people will find this design draft simpler and easier to understand.&lt;/p&gt;
&lt;h4 id=&quot;TOC_3.&quot;&gt;Experimentation tool&lt;/h4&gt;
&lt;p&gt;To help decide how to further refine the design draft, we are releasing a translation tool. This is a tool that permits people to type check and run code written using the version of generics described in the design draft. It works by translating generic code into ordinary Go code. This translation process imposes some limitations, but we hope that it will be good enough for people to get a feel for what generic Go code might look like. The real implementation of generics, if they are accepted into the language, will work differently. (We have only just begun to sketch out what a direct compiler implementation would look like.)&lt;/p&gt;
&lt;p&gt;The tool is available on a variant of the Go playground at &lt;a href=&quot;https://go2goplay.golang.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://go2goplay.golang.org&lt;/a&gt;. This playground works just like the usual Go playground, but it supports generic code.&lt;/p&gt;
&lt;p&gt;You can also build and use the tool yourself. It is available in a branch of the master Go repo. Follow the &lt;a href=&quot;https://golang.org/doc/install/source&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;instructions on installing Go from source&lt;/a&gt;. Where those instructions direct you to check out the latest release tag, instead run &lt;code&gt;git checkout dev.go2go&lt;/code&gt;. Then build the Go toolchain as directed.&lt;/p&gt;
&lt;p&gt;The translation tool is documented in &lt;a href=&quot;https://go.googlesource.com/go/+/refs/heads/dev.go2go/README.go2go.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;README.go2go&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;TOC_4.&quot;&gt;Next steps&lt;/h4&gt;
&lt;p&gt;We hope that the tool will give the Go community a chance to experiment with generics. There are two main things that we hope to learn.&lt;/p&gt;
&lt;p&gt;First, does generic code make sense? Does it feel like Go? What surprises do people encounter? Are the error messages useful?&lt;/p&gt;
&lt;p&gt;Second, we know that many people have said that Go needs generics, but we don’t necessarily know exactly what that means. Does this draft design address the problem in a useful way? If there is a problem that makes you think “I could solve this if Go had generics,” can you solve the problem when using this tool?&lt;/p&gt;
&lt;p&gt;We will use the feedback we gather from the Go community to decide how to move forward. If the draft design is well received and doesn’t need significant changes, the next step would be a &lt;a href=&quot;https://golang.org/s/proposal&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;formal language change proposal&lt;/a&gt;. To set expectations, if everybody is completely happy with the design draft and it does not require any further adjustments, the earliest that generics could be added to Go would be the Go 1.17 release, scheduled for August 2021. In reality, of course, there may be unforeseen problems, so this is an optimistic timeline; we can’t make any definite prediction.&lt;/p&gt;
&lt;h4 id=&quot;TOC_5.&quot;&gt;Feedback&lt;/h4&gt;
&lt;p&gt;The best way to provide feedback for the language changes will be on the mailing list &lt;code&gt;golang-nuts@googlegroups.com&lt;/code&gt;. Mailing lists are imperfect, but they seem like our best option for initial discussion. When writing about the design draft, please put &lt;code&gt;[generics]&lt;/code&gt; at the start of the Subject line and to start different threads for different specific topics.&lt;/p&gt;
&lt;p&gt;If you find bugs in the generics type checker or the translation tool, they should be filed in the standard Go issue tracker at https://golang.org/issue. Please start the issue title with &lt;code&gt;cmd/go2go:&lt;/code&gt;. Note that the issue tracker is not the best place to discuss changes to the language, because it does not provide threading and it is not well suited to lengthy conversations.&lt;/p&gt;
&lt;p&gt;We look forward to your feedback.&lt;/p&gt;
&lt;h4 id=&quot;TOC_6.&quot;&gt;Acknowledgements&lt;/h4&gt;
&lt;p&gt;We’re not finished, but we’ve come a long way. We would not be here without a lot of help.&lt;/p&gt;
&lt;p&gt;We’d like to thank Philip Wadler and his collaborators for thinking formally about generics in Go and helping us clarify the theoretical aspects of the design. Their paper &lt;a href=&quot;https://arxiv.org/abs/2005.11710&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Featherweight Go&lt;/a&gt; analyzes generics in a restricted version of Go, and they have developed a prototype &lt;a href=&quot;https://github.com/rhu1/fgg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We would also like to thank &lt;a href=&quot;https://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-type-parameters.md#acknowledgements&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;the people&lt;/a&gt; who provided detailed feedback on an earlier version of the design draft.&lt;/p&gt;
&lt;p&gt;And last but definitely not least, we’d like to thank many people on the Go team, many contributors to the Go issue tracker, and everybody else who shared ideas and feedback on earlier design drafts. We read all of it, and we’re grateful. We wouldn’t be here without you.&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 19:34:28 +0000</pubDate>
<dc:creator>ainar-g</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.golang.org/generics-next-step</dc:identifier>
</item>
<item>
<title>Drive through cities in the browser while listening to local radio stations</title>
<link>https://driveandlisten.herokuapp.com/</link>
<guid isPermaLink="true" >https://driveandlisten.herokuapp.com/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://driveandlisten.herokuapp.com/&quot;&gt;https://driveandlisten.herokuapp.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=23543043&quot;&gt;https://news.ycombinator.com/item?id=23543043&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 288&lt;/p&gt;
&lt;p&gt;# Comments: 74&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 19:26:47 +0000</pubDate>
<dc:creator>herval</dc:creator>
<og:url>https://driveandlisten.herokuapp.com</og:url>
<og:title>Drive &amp; Listen</og:title>
<og:description>Listen to local radio stations while driving through the cities around the world. Istanbul, Berlin, London, Paris, New York City and many more</og:description>
<og:image>https://ph-files.imgix.net/76a102e0-4873-470d-b8ce-2e4b8addf160?auto=format&amp;auto=compress&amp;codec=mozjpeg&amp;cs=strip&amp;w=304&amp;h=190&amp;fit=max&amp;dpr=2</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://driveandlisten.herokuapp.com/</dc:identifier>
</item>
<item>
<title>Apple rejects Hey for second time, threatens removal from App Store</title>
<link>https://twitter.com/dhh/status/1272968382329942017</link>
<guid isPermaLink="true" >https://twitter.com/dhh/status/1272968382329942017</guid>
<description>&lt;p&gt;Like any good mafioso, they paid us a visit by phone. Stating that, firstly, that smashing our windows (by denying us the ability to fix bugs) was not a mistake. Then, without even as much of a curtesy euphemism, said they'd burn down our store (remove our app!), lest we paid up.&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 19:16:03 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/dhh/status/1272968382329942017</dc:identifier>
</item>
<item>
<title>FreeBSD 11.4</title>
<link>https://www.freebsd.org/releases/11.4R/announce.html</link>
<guid isPermaLink="true" >https://www.freebsd.org/releases/11.4R/announce.html</guid>
<description>&lt;p&gt;The FreeBSD Release Engineering Team is pleased to announce the availability of FreeBSD 11.4-RELEASE. This is the fifth and final release of the stable/11 branch.&lt;/p&gt;
&lt;p&gt;Some of the highlights:&lt;/p&gt;
&lt;ul readability=&quot;10.5&quot;&gt;&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;The &lt;tt&gt;clang&lt;/tt&gt;, &lt;tt&gt;llvm&lt;/tt&gt;, &lt;tt&gt;lld&lt;/tt&gt;, &lt;tt&gt;lldb&lt;/tt&gt;, and &lt;tt&gt;compiler-rt&lt;/tt&gt; utilities as well as &lt;tt&gt;libc++&lt;/tt&gt; have been updated to upstream version 10.0.0.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;OpenSSL has been updated to version 1.0.2u.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Unbound has been updated to version 1.9.6.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The pkg(8) utility has been updated to version 1.13.2.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The KDE desktop environment has been updated to version 5.18.4.1.19.12.3.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The GNOME desktop environment has been updated to version 3.28.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Support for renaming ZFS bookmarks has been added.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The &lt;tt&gt;certctl(8)&lt;/tt&gt; utility has been added.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Several feature additions and updates to userland applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Warnings for features deprecated in future releases will now be printed on all FreeBSD versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Warnings have been added for Kerberos GSS API algorithms deprecated in RFCs 6649 and 8429.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And more...&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For a complete list of new features and known problems, please see the online release notes and errata list, available at:&lt;/p&gt;
&lt;p&gt;For more information about FreeBSD release engineering activities, please see:&lt;/p&gt;
&lt;h2&gt;Dedication&lt;/h2&gt;
&lt;p&gt;The FreeBSD Project dedicates the FreeBSD 11.4-RELEASE to the memory of Bruce Evans.&lt;/p&gt;
&lt;h2 id=&quot;availability&quot;&gt;Availability&lt;/h2&gt;
&lt;p&gt;FreeBSD 11.4-RELEASE is now available for the amd64, i386, powerpc, powerpc64, sparc64, armv6, and aarch64 architectures.&lt;/p&gt;
&lt;p&gt;FreeBSD 11.4-RELEASE can be installed from bootable ISO images or over the network. Some architectures also support installing from a USB memory stick. The required files can be downloaded as described in the section below.&lt;/p&gt;
&lt;p&gt;SHA512 and SHA256 hashes for the release ISO, memory stick, and SD card images are included at the bottom of this message.&lt;/p&gt;
&lt;p&gt;PGP-signed checksums for the release images are also available at:&lt;/p&gt;
&lt;p&gt;A PGP-signed version of this announcement is available at:&lt;/p&gt;
&lt;p&gt;The purpose of the images provided as part of the release are as follows:&lt;/p&gt;
&lt;dl readability=&quot;28.5&quot;&gt;&lt;dt&gt;dvd1&lt;/dt&gt;
&lt;dd readability=&quot;5&quot;&gt;
&lt;p&gt;This contains everything necessary to install the base FreeBSD operating system, the documentation, debugging distribution sets, and a small set of pre-built packages aimed at getting a graphical workstation up and running. It also supports booting into a &quot;livefs&quot; based rescue mode. This should be all you need if you can burn and use DVD-sized media.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;disc1&lt;/dt&gt;
&lt;dd readability=&quot;0&quot;&gt;
&lt;p&gt;This contains the base FreeBSD operating system. It also supports booting into a &quot;livefs&quot; based rescue mode. There are no pre-built packages.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;bootonly&lt;/dt&gt;
&lt;dd readability=&quot;2&quot;&gt;
&lt;p&gt;This supports booting a machine using the CDROM drive but does not contain the installation distribution sets for installing FreeBSD from the CD itself. You would need to perform a network based install (e.g., from an HTTP or FTP server) after booting from the CD.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;memstick&lt;/dt&gt;
&lt;dd readability=&quot;9&quot;&gt;
&lt;p&gt;This can be written to a USB memory stick (flash drive) and used to do an install on machines capable of booting off USB drives. It also supports booting into a &quot;livefs&quot; based rescue mode. There are no pre-built packages.&lt;/p&gt;
&lt;p&gt;As one example of how to use the memstick image, assuming the USB drive appears as /dev/da0 on your machine something like this should work:&lt;/p&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
          # dd if=FreeBSD-11.4-RELEASE-amd64-memstick.img \
            of=/dev/da0 bs=1m conv=sync
&lt;/pre&gt;
&lt;p&gt;Be careful to make sure you get the target (of=) correct.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;mini-memstick&lt;/dt&gt;
&lt;dd readability=&quot;11&quot;&gt;
&lt;p&gt;This can be written to a USB memory stick (flash drive) and used to boot a machine, but does not contain the installation distribution sets on the medium itself, similar to the bootonly image. It also supports booting into a &quot;livefs&quot; based rescue mode. There are no pre-built packages.&lt;/p&gt;
&lt;p&gt;As one example of how to use the mini-memstick image, assuming the USB drive appears as /dev/da0 on your machine something like this should work:&lt;/p&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
          # dd if=FreeBSD-11.4-RELEASE-amd64-mini-memstick.img \
            of=/dev/da0 bs=1m conv=sync
&lt;/pre&gt;
&lt;p&gt;Be careful to make sure you get the target (of=) correct.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;FreeBSD/arm SD card images&lt;/dt&gt;
&lt;dd readability=&quot;18&quot;&gt;
&lt;p&gt;These can be written to an SD card and used to boot the supported arm system. The SD card image contains the full FreeBSD installation, and can be installed onto SD cards as small as 512Mb.&lt;/p&gt;
&lt;p&gt;For convenience for those without console access to the system, a &lt;tt&gt;freebsd&lt;/tt&gt; user with a password of &lt;tt&gt;freebsd&lt;/tt&gt; is available by default for &lt;tt&gt;ssh(1)&lt;/tt&gt; access. Additionally, the &lt;tt&gt;root&lt;/tt&gt; user password is set to &lt;tt&gt;root&lt;/tt&gt;, which it is strongly recommended to change the password for both users after gaining access to the system.&lt;/p&gt;
&lt;p&gt;To write the FreeBSD/arm image to an SD card, use the &lt;tt&gt;dd(1)&lt;/tt&gt; utility, replacing &lt;em&gt;KERNEL&lt;/em&gt; with the appropriate kernel configuration name for the system.&lt;/p&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
          # dd if=FreeBSD-11.4-RELEASE-arm-armv6-&lt;em&gt;KERNEL&lt;/em&gt;.img \
            of=/dev/da0 bs=1m conv=sync
&lt;/pre&gt;
&lt;p&gt;Be careful to make sure you get the target (of=) correct.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;p&gt;FreeBSD 11.4-RELEASE can also be purchased on CD-ROM or DVD from several vendors. One of the vendors that will be offering FreeBSD 11.4-based products is:&lt;/p&gt;
&lt;p&gt;Pre-installed virtual machine images are also available for the amd64 (x86_64), i386 (x86_32), and AArch64 (arm64) architectures in &lt;tt&gt;QCOW2&lt;/tt&gt;, &lt;tt&gt;VHD&lt;/tt&gt;, and &lt;tt&gt;VMDK&lt;/tt&gt; disk image formats, as well as raw (unformatted) images.&lt;/p&gt;
&lt;p&gt;FreeBSD 11.4-RELEASE amd64 is also available on these cloud hosting platforms:&lt;/p&gt;
&lt;ul readability=&quot;8.6646981627297&quot;&gt;&lt;li readability=&quot;6.5892215568862&quot;&gt;
&lt;p&gt;Amazon® EC2™:&lt;br clear=&quot;none&quot; /&gt;
AMIs are available in the following regions:&lt;/p&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
      eu-north-1 region: ami-0423a41bfde7000c9
        ap-south-1 region: ami-040d7e3c5045b1dc8
        eu-west-3 region: ami-079764f404d0f0135
        eu-west-2 region: ami-08b5c1b428efd6acc
        eu-west-1 region: ami-010453360ad13bdbc
        ap-northeast-2 region: ami-09b7e1c3e361260e1
        ap-northeast-1 region: ami-06a2ecfa39652b8ff
        sa-east-1 region: ami-08b649133aa9f8f35
        ca-central-1 region: ami-0124b7468bd38bfdf
        ap-southeast-1 region: ami-0703c8c6acfb41206
        ap-southeast-2 region: ami-0933856ea67133b1a
        eu-central-1 region: ami-01bd88d4f25033055
        us-east-1 region: ami-01599ad2c214322ae
        us-east-2 region: ami-01ea9c04961787c29
        us-west-1 region: ami-03eb1febfd346acb8
        us-west-2 region: ami-04b8ff0baafd96cad
&lt;/pre&gt;
&lt;p&gt;AMIs are also available in the Amazon® Marketplace at:&lt;br clear=&quot;none&quot; /&gt;&lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01LWSWRED/&quot; shape=&quot;rect&quot;&gt;https://aws.amazon.com/marketplace/pp/B01LWSWRED/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6.7568555758684&quot;&gt;
&lt;p&gt;Google® Compute Engine™:&lt;br clear=&quot;none&quot; /&gt;
Instances can be deployed using the &lt;tt&gt;gcloud&lt;/tt&gt; utility:&lt;/p&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
          % gcloud compute instances create &lt;em&gt;INSTANCE&lt;/em&gt; \
            --image freebsd-11-4-release-amd64 \
            --image-project=freebsd-org-cloud-dev
          % gcloud compute ssh &lt;em&gt;INSTANCE&lt;/em&gt;
&lt;/pre&gt;
&lt;p&gt;Replace &lt;em&gt;INSTANCE&lt;/em&gt; with the name of the Google Compute Engine instance.&lt;/p&gt;
&lt;p&gt;FreeBSD 11.4-RELEASE is also expected to be available in the Google Compute Engine™ Marketplace once they have completed third-party specific validation at:&lt;br clear=&quot;none&quot; /&gt;&lt;a href=&quot;https://console.cloud.google.com/launcher/browse?filter=category:os&amp;amp;filter=price:free&quot; shape=&quot;rect&quot;&gt;https://console.cloud.google.com/launcher/browse?filter=category:os&amp;amp;filter=price:free&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Hashicorp/Atlas® Vagrant™:&lt;br clear=&quot;none&quot; /&gt;
Instances can be deployed using the &lt;tt&gt;vagrant&lt;/tt&gt; utility:&lt;/p&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
          % vagrant init freebsd/FreeBSD-11.4-RELEASE
          % vagrant up
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Download&lt;/h2&gt;
&lt;p&gt;FreeBSD 11.4-RELEASE may be downloaded via https from the following site:&lt;/p&gt;
&lt;p&gt;FreeBSD 11.4-RELEASE virtual machine images may be downloaded from:&lt;/p&gt;
&lt;p&gt;For instructions on installing FreeBSD or updating an existing machine to 11.4-RELEASE please see:&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;Based on the new FreeBSD support model, the FreeBSD 11 release series will be supported until at least September 30, 2021.&lt;/p&gt;
&lt;p&gt;Please note that 11.3 will be supported until three months from the 11.4 release date, currently scheduled for September 30, 2020.&lt;/p&gt;
&lt;h2&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;Many companies donated equipment, network access, or human time to support the release engineering activities for FreeBSD 11.4 including:&lt;/p&gt;
&lt;p&gt;The release engineering team for 11.4-RELEASE includes:&lt;/p&gt;
&lt;h2&gt;Trademark&lt;/h2&gt;
&lt;p&gt;FreeBSD is a registered trademark of The FreeBSD Foundation.&lt;/p&gt;
&lt;h2&gt;ISO Image Checksums&lt;/h2&gt;
&lt;h3&gt;amd64 (x86_64):&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso) = eb235bdd9472a607de3ccbaefddc268c086d99bdb6fe962a4f4d5de9d70ae9935dc34a9f15eb381d950396edd02fb88c44d70d8eb724007b00840c0ebb58dc38
  SHA512 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso.xz) = 9152f66cc07813e67092f5b8d7ce0aa718e0dc1c0797f02bc88261992d1659f8504ae44aa9439ef75b7b64b0204d79882a8eb7d9ccfbceb8331dc7e9aefa5c86
  SHA512 (FreeBSD-11.4-RELEASE-amd64-disc1.iso) = 473b35bf7835de4adf57603fdfee90f87742c57f885de2b282952b121fc84404432c77c804028b42576482e3c76183f224985b0292b9f69302186f03fdad919d
  SHA512 (FreeBSD-11.4-RELEASE-amd64-disc1.iso.xz) = 9a5a0cb9c07ec04e095a7375acd48842643de80938b1cba10652399eeb49ef7f55b7b2495e014e531040b929728ac3da7f38310e153d4b335b932490c69fa578
  SHA512 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso) = da9f68ca92e9b12e261c3668693acf125090052bec6a7f961cb8862dbebe2c9cc047d65f93fb55c0f328daaaa8fc888cdef506927f2a1edeae6d11ff21ca89c6
  SHA512 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso.xz) = 4ec0379e2d44f7571ac7932d80740a8952e8b5274ecfd1a47770e5b9a2dfed9975b5a368c70e8e905814feeb865a865db13751b9527466e04ba8f7711f6962bc
  SHA512 (FreeBSD-11.4-RELEASE-amd64-memstick.img) = 4e88b3c2bcd49519f1416b586c61a9e090a2b6783d0a4845c8aba6c9a78203ea60541e9760a7ea8a78a5ce5fdba931df91a0f21a5584d95e1d309aaf19f5dab8
  SHA512 (FreeBSD-11.4-RELEASE-amd64-memstick.img.xz) = ee8340ea4d441acecffaaa802e0f7b653ecd90ce005f760286c112f86dd2ddc105f813d46a52de658763a1f6e5189ca57050f44a3971f59b72cc1b986a2674aa
  SHA512 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img) = 09ce747555046f8baa271960166d74cf47526727f77a4a9fdbb8f57684b719723f4f7eb3c10a128783439c475811bc6bcfe9e98319379878ca3e069534f7bc8b
  SHA512 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img.xz) = 6137690cacf217753ccbc6d6940a15c3c54f0b0f1a3aa26a88728b9df11640ed0c65d88401c29da50b6c49f0a7204a2ca890d1436a312f6d0ae05eb65941d8bc

  SHA256 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso) = cafc5a8d95a639d426d72f897690d8f54ba723fba299e44d39f424674092ee51
  SHA256 (FreeBSD-11.4-RELEASE-amd64-bootonly.iso.xz) = 65327683bf4e6b85f6537c8d67c990414af9a0f2da7bd2ece6ed9db2ec8bc082
  SHA256 (FreeBSD-11.4-RELEASE-amd64-disc1.iso) = d76c1ded99b2c1005b1ff94cc0c811fbcd8a2d04196432009ab5f203c2146914
  SHA256 (FreeBSD-11.4-RELEASE-amd64-disc1.iso.xz) = ec3e34826452368e53ea86c3a48b7af749c8787af3798ea246fa18d12bc04130
  SHA256 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso) = a9c552ea01a751a092cdf75b28f67959277d025dbd24d6f62adc6ac37468c13d
  SHA256 (FreeBSD-11.4-RELEASE-amd64-dvd1.iso.xz) = 1d6cd4e525ec4e5883904d184c483cf0a0dafcda4906655c9cded617e6971115
  SHA256 (FreeBSD-11.4-RELEASE-amd64-memstick.img) = 45412df7ef29c5ef27b5747203502975f202612a98c3fd71deb9aa38c4f818b3
  SHA256 (FreeBSD-11.4-RELEASE-amd64-memstick.img.xz) = aa38e0f03aba4cce31872da25e9d3cf0aba9b31cb4e39816e176660aa33f93bc
  SHA256 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img) = 870359fc7c61af157ea63a0b08c3bb02861caa37b847313a3c484dd878147afc
  SHA256 (FreeBSD-11.4-RELEASE-amd64-mini-memstick.img.xz) = c2480d775ddb42223f3af90452f2b116cc4f1e22dcaa4af2f6f4842ec22e7c61
&lt;/pre&gt;
&lt;h3&gt;i386 (x86):&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-i386-bootonly.iso) = 66649cab6d536d3a93bde59083e4d1ae6cbf8c53c4d48c212c1bcb30ba404922173c1704a6be4afaa8a1839abdd8c05c8577209b939e05c0f01d359a7146b7b3
  SHA512 (FreeBSD-11.4-RELEASE-i386-bootonly.iso.xz) = f8e72e1ecd0d3aabe8e37eaebfb986955412b19813936373462542379adceabfe1be1b6e5cafbbc2e95ab93667bcc8c215944cc13bce507cd4b5ae16a0b1bf59
  SHA512 (FreeBSD-11.4-RELEASE-i386-disc1.iso) = a806e91c2b79efc01e2ca4e1691b6cf90e242688c92cbb1ea25e73df1c11fd7d0d765f844975bab27338597cc08ea44f35166ef360d9675d18c356145aaa8be7
  SHA512 (FreeBSD-11.4-RELEASE-i386-disc1.iso.xz) = dec27fa196b526c7b498417a20301a9e435b48ba9054c05d4df5268bad3d7bc1d5b6b4f889ad11518f461d88c1aea44fe8f62403d01ba3535e0667f8ec877fa7
  SHA512 (FreeBSD-11.4-RELEASE-i386-dvd1.iso) = 303f3c512cda1aa27f0a4a124864bae5fc1d23d31cfd6f3b02ef1d759a9fa6e5b08f2a6a0d8f4d0d4da7e966b3739c59012b6672828e526e2f816d3c7650df9d
  SHA512 (FreeBSD-11.4-RELEASE-i386-dvd1.iso.xz) = bbc3b56dfd4b69566a4f73527a0568d39b3bca6923e6f054dba4efe27affc0835f0c524031269ce646a81de28cf1be1a321cdcb5640a78fe781b7b261a1820f2
  SHA512 (FreeBSD-11.4-RELEASE-i386-memstick.img) = 211487dce03636851b0d962f6ddacaa94dd068741a51088899c9aea8b05615e54c3a5f382fa260ce9940eb0c14343527a31716874b113cccfa304a32c38e43ac
  SHA512 (FreeBSD-11.4-RELEASE-i386-memstick.img.xz) = 65abed1a8093ebfdfacd32de9d721ff93530abc0b2661e5b030a2e5ec0536d9167aff707506a526eb3e085350f12289fc52212063c994f4ac2e936d07e49fb30
  SHA512 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img) = 2dbf59ad34e8c227fb6b0b9d6b9e83d6702186974cb1930d04ab9ebf98b20715519cd787e089ef0210cc4380544d84a47de0e548ebe6d413b10ec27d089e47db
  SHA512 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img.xz) = b1983a46427d9b4050ae8d5f44432a7eb374dac660008a824480b686af5650087eadc953e54c3ec62b264dee8591a7ef406f28faf040918930b0d510cd0a5c37

  SHA256 (FreeBSD-11.4-RELEASE-i386-bootonly.iso) = dc26a4e8e7596052af9d167a06c57fb9ea7b7b51f6179dc19f071703c6165de9
  SHA256 (FreeBSD-11.4-RELEASE-i386-bootonly.iso.xz) = 07817b1551b9fd188e251e59c8517a4fa0b233e77542c13ae6ce471f22f827fd
  SHA256 (FreeBSD-11.4-RELEASE-i386-disc1.iso) = cab3c03fc45b84bffcf818d11147af491eb0226be4bf8e4092b1ecafdc096d33
  SHA256 (FreeBSD-11.4-RELEASE-i386-disc1.iso.xz) = 6f9e64792b0fbd999321c8657c1122674253f5678cb6442ec6c54c76c2d11573
  SHA256 (FreeBSD-11.4-RELEASE-i386-dvd1.iso) = 54d2b553d212ed53b0c3ce989646907fe50814c66194adf0c8ec2c75242f7fd0
  SHA256 (FreeBSD-11.4-RELEASE-i386-dvd1.iso.xz) = 17cf920ca4167ba44e96a2bff21994e17990b99464d7d9dbd8c95e1caf98969d
  SHA256 (FreeBSD-11.4-RELEASE-i386-memstick.img) = 6414eaebc92cde06a1c5b9fb888586dbd28820b75abceef4283e622908759d19
  SHA256 (FreeBSD-11.4-RELEASE-i386-memstick.img.xz) = 9e9b1f24e3e809d5ecdd3f41a7eacc884ee02d50662eec7f70074d9820242031
  SHA256 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img) = 0e4158ef35bf166caf57248e438e1fc5ad4bd1c20620127e5916cd79004b5ad3
  SHA256 (FreeBSD-11.4-RELEASE-i386-mini-memstick.img.xz) = a7b3b6fc27630aeb32ac10c4533bb3976c3a83e4bab4dcb285101065a2c0501e
&lt;/pre&gt;
&lt;h3&gt;powerpc:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso) = 47ffaa0d5e719ffa1dfab905a59b7e1446af99e8bf84bd847a18000ab37f4804a0a6b02b0213ef7d1d3b037b3b5a7eb060e7aea2d75fa4e87436928e7735b8c5
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso.xz) = 16f562b09e304ed545f197259d654d194e95140b61c93f8de44c1a4d05d4da9003cc809d1118627fcfbdbccfaf92e9cf133d91c9c184d010727f8c394c8f6a4f
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso) = 39bfc5eb77fc9f4298ad3b36c65667fe1a28743c128e943cf8a6523e0dc0b26c7bcc3afce9b6db0165d1ab1ec7dde7398dbd5fc8465d9a374461c349a6750a04
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso.xz) = e4004fd181a7c898964468b2a67e7f223ad512bca318e20c8c2a55475f425da543a5c46853a1c0f6ad7f890d5d0253e93c99470e982d421b262f50efb7bf7305
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso) = 4081eac6919335418995b1d9354f45dd674b852de83e442ec721fc2ee8e08b9fd32567581799750ff635ab0ecd3a5f04f724db66411f1817521ac7dabc56c48b
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso.xz) = bdaa0f684ea88bd9bac0fad67a8538b7777ac89b8345e76a0804bc6216a1eddae2d5ec4747ca76764a58ec2cc15309b3e3028d4d778911fc8fb3ade6360a8d0c
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-memstick.img) = 04effb804c1d62fe0670a0aef94850ee5aae7bb6bff29eb99923d7e2288869616b74ce823c09cf975097b0d44e7dfcc7fc0b94f904d6c05bc49fa7ad460d28ea
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-memstick.img.xz) = 1688092d59b4bb630bf5f45c3969357c43fcf73dd2fac6546722b62f9e8ad1ccaf81c0d50970ab53b7584b8c9d8240a72fe15460e9e2ee3c285e98486e0e3e05
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img) = 079f74a6f636d3df57639c0932797a17531b6629924ba4dc5d3c2032553dd70fcabbebbd41f4e3dd42a18da883a74311e90afe02e4a26654ba69955ceccc3c57
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img.xz) = 5c402f54bbf22fd0b60fd2050d4c1f1af56b11b7af8d2493cf8bf63c37478e4ec98a160e98ad88d7267636bb8788f7433e342d9ca31888e90f62ee7ce3b73789

  SHA256 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso) = 8d40ef27accb7d7bdfedc529d7b94df48c8cb34abeb3599559c3830e68216301
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-bootonly.iso.xz) = 35bc3e9b24af37b897b803b4fd1c39d12bdc824e6e3ca35b83f54079b04704c6
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso) = 87356f93d21263c087320eba28ca78891097220c9e22fd391d8e56998a899310
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-disc1.iso.xz) = 3895c88e0128c33c5bb18f929698a90859def5dacb06533cf21e5bbf7237b04b
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso) = db3543011035e682de1378ac73632f716ae1e9ae33a5fd16e31ce4fcdc10ad39
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-dvd1.iso.xz) = 2ebc365f8d14ab7e074d797725dfc33c46bd8681d7f49d969c724deb5e7ab1cc
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-memstick.img) = ef997b548303735887f6c697ab77905bd922fe7e3059a5d97f903efb97dd49f8
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-memstick.img.xz) = 261588f59fb68c1c630dd7599b366a9916af8c58f89914231707125cc36f1fe4
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img) = 6591db97732cdd6b413d447879f538dc16ea19fd0a0aaec2570f0380dfb72b9d
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-mini-memstick.img.xz) = 6cebbc2e08c96962b0517a4f7a328742fb128f7ebacbf72e9d53ef766eb76958
&lt;/pre&gt;
&lt;h3&gt;powerpc64:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso) = 5162392afcb435aaeb8d8fe690133f83948b7851fe9e343a98d9c82e7b57ea040e3eb276a7a8bca136493ab66ab35acf91488fd03e773a9bf8611bc8f4a8bc77
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso.xz) = 887e0a5bc24cc1d6d9a3930c944447e4912842f578117c32ad9a9f5133edaad4c4d6a3a68c9a231f5c3736d059ccfe5e72faf8c958b72547cd9afcb636e4d25c
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso) = d10ac40a4f129e9b97f1343c566e9cfa27eac29c21890c757c4cc6700a7ad2367973743b9acac01cab85eba9dbca4d8a77d02162f7c4c906d9b5090a00a6e6da
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso.xz) = cda60a69cd3f31098ce42840709a19f50afae0f0da1a1d2c363146ca88e38bbcc721f57210e0a1b7d72d041ba8f27dba1072e27521bbff967630b0016490eee3
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso) = 35d82711053282dceac2d48a264d4883e1a0731eb48e73af9e498a60f344f826caef6a2b19120bcbec01843c01b8afe0d7b2c25f8cac9344f4d014dc73622acf
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso.xz) = 6825921ddcaef8ef4824b5f1d67b63a29cb2c048b88ab92ec87f6576c3a051ea8b923a6e0c7793961b234ff21c22454bd689c3461db0ed34e5a5a857b9782d75
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img) = 9babb52f97258febb9c9eb3035d594e33063afb49982ec3a4894fef69814b2fb1ca1ca3395cc8fc41d8be3b2121311d852713cecde240ad864be7efac902475b
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img.xz) = 177161654718a2bdd2240c2a72b5523ce77f3837d362f1e2223175e7cd09aa6bce54ae50da80fd886fa67fb5e42fd164b98e1a159b45d41a29bdf86813b9a639
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img) = 9794d59a459b32bfe4cdb1fca2ceeed2bf322e8ce9dd86fc5f8cceaf5081f81755cb6427883663342e14d1aba2ed5a188d76b81dcde1186c6d066247611a8040
  SHA512 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img.xz) = 33a3701d99a1a5b94de0df32ea1e1ae06083ca734c1d20d7809091fbb3cfc8b638e411782d479d12a173a6979d2d4355804cbacb6c60760e96098d0485466d6e

  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso) = 24543ae8eb78121d75a5ee403c02594372a25db27abb80e9e6e4de77d5536c15
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-bootonly.iso.xz) = 63a3eee3018a162b49f560ec796fa66570fcf244e55d79783c0b861448ed7185
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso) = 81e22fc4fac1958cfe226ee04179a3fb0fbc4e1ab3013b981ef7fa4c758c17a7
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-disc1.iso.xz) = b064e8cb0e2cbde9d98198c6d9f42e0d6158e3898f380afbf8b63788a2600ce1
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso) = 3d4ebbe27b143c825074a9add89448cd37a19b0c42e8789cd63bd0069e07f54b
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-dvd1.iso.xz) = 113ad821f07d7e09948ff4d6448512ecad21cda3a4cab341b7c124caf23908a2
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img) = 8f3cae59ff70bec49f491a50c5e94dc518c30b243530b77cb3f6d943ceb3213d
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-memstick.img.xz) = 088c2718eeedd88862a1d878f3b218c5451f06a6d078d283cb6ff3c98744ed63
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img) = 24ae08bae930022afe792535657adb23d39c935f0e0837e86262b1180ba1e9a6
  SHA256 (FreeBSD-11.4-RELEASE-powerpc-powerpc64-mini-memstick.img.xz) = 6130aed94da4b35021ab35448a43ba678d4a9e6c9dfc53f86e45d280a118d88f
&lt;/pre&gt;
&lt;h3&gt;sparc64:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso) = 6aaf0ba38b72db8a8c2f5ae4dfae76dde0991f41a3439739b5149ba9b6e51c8d360116a42de7fb5011e1dd5d6fc5f6e16ba36d003f045ca584e8438eec329f93
  SHA512 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso.xz) = 4e8587df377ffed8b76e2ae998db4079de039be1892227e23fb0c6c88aab1c96df76082619c661ceabfaa1a752330977bae433963c129104c247e05390e46a52
  SHA512 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso) = 84cd6a668f01b3ab07dd316e194fbe4a3ecbb59a50c345fb17d119497773be2a2acda38e88bb1f1ceb55b604b1cf1c4f4f8ce7dc05514ef0eb8153649eaf3dfd
  SHA512 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso.xz) = 5fc5549cb312775998e2a29b36f038148f37bce09d51e58e5bf7d269a5aac806058e0094fd33026fd2c2949d4be6c7fef278b9e76f73de7ce50521842a978bba
  SHA512 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso) = 62a597fc9b4c66c462d27ab85a6920acb5bba908e4bc2d18f6d02351533927d12138abd8e9af6708357c7b36f3c298f9fea5e440b7b11980b594f95e0d2ba8d1
  SHA512 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso.xz) = 844bbfe15dd9cde0eeec6f772308c78bfbcfd4925935f2062701e7fecdd67747d6a6a7bc5082e00729fbae03aa96178ed1fd747177323b21434ce5e7377a6621

  SHA256 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso) = 44c0beaebc78d0244abba43a1f495bd73706f5df172b96e94af3a5ea8491fdc7
  SHA256 (FreeBSD-11.4-RELEASE-sparc64-bootonly.iso.xz) = f847f0d4b80deeb96e487457f8b07d72c76547423eb4a7bbfc25f5e8e6189dd1
  SHA256 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso) = 2062cf882728d34c5c1435522b6dbe4cb8985b3100d191e528f197d8579c1e2a
  SHA256 (FreeBSD-11.4-RELEASE-sparc64-disc1.iso.xz) = 7bc088e70712ee395ad541a915d7ad11cc8a270052f86706ab739a104b234c96
  SHA256 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso) = 61f6118f59bc10f1038f2bf0ab02d77eaf5c2eec97195c55475a152c10317d5b
  SHA256 (FreeBSD-11.4-RELEASE-sparc64-dvd1.iso.xz) = 14fb660e5d8eeb42a47f409dbd11036d1f5f676670138011693eaacc2852bbda
&lt;/pre&gt;
&lt;h3&gt;aarch64:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-memstick.img) = e843d8e40387fbe78e3e828e35e1d6173d8642a6013bb30649dd0b5fadd96eec0a60cd902f9edece217f4fc140a6267bad44cb67784c15754b84704c7b87a9ef
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-memstick.img.xz) = cb620fcddb130a098425ba7e43ce3f858a092cbfd9538271734c88a55c58cec28cbd30fb924138abf53ff0954805088b8df45cc5cd12f374d1587e55f5f00aaa
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-mini-memstick.img) = 7592cf554bf715ffbaae1b8faefd68b4d56d7bdd0491251f856e8e245e20f37d4a1decf168a2f0eca989d8eef02332d84705c181f0e2ee2d26ef97fa7ef3fa2b
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64-mini-memstick.img.xz) = 8b1fb0db7c96b96612cf7d9335fac26142bf82ab664e24e5cf79b4b337bd812de14206476c560ddc737ba16d0219bb288d44c81006317d7ba1853301b624a4c3

  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64-memstick.img) = 9d43ad28489f6232a4c4948f969c856eb3aa0179478477a5fcbad7d71a5604d0
  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64-memstick.img.xz) = 92ad3f48afc8fd2291b99e295dc782b0712a36e3c04c7894fdb5ccfb1d4d2a72
  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64-mini-memstick.img) = 83542441e4155434db4a6079c5356cd3c1cd33a299ff04c709ba65efbf4c4a0d
  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64-mini-memstick.img.xz) = cc9a6226da6e1ee00372cb25687d46c2045603a4b0cce62fa2cb9eae49ea2a90
&lt;/pre&gt;
&lt;h3&gt;armv6 BANANAPI:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-BANANAPI.img.xz) = c717142910a46467c96e6fd3e9916427da861bc77f1a6725693ac29d1c56d76a98aad28629f0a48b238712fccd2791070b6b359b9fc0025b44c12c8c5288e1dc

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-BANANAPI.img.xz) = 1722574fe5740e5462f04f96d9c0ca31c8b156509ccbf200187059156ed5ad7d
&lt;/pre&gt;
&lt;h3&gt;armv6 BEAGLEBONE:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-BEAGLEBONE.img.xz) = 198c85a51b5826b31e8192f18d0c39912a2c71e1017e4f65078d54483c505f31e7a8f71f97b2d1fad77b1706be2b888e24c1c4854f305323a22bb42067eb88e5

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-BEAGLEBONE.img.xz) = 23c2b6c4600135765081c08fe6d3770cfeef00f868a8c18b3f64b40a4431d5c8
&lt;/pre&gt;
&lt;h3&gt;armv6 CUBIEBOARD:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-CUBIEBOARD.img.xz) = 3fbb2d412ff1aa098696f86029618807a0bcc8c46da588d43f4341d31f81436200dc349b71eaa64dafac73d8f08818faf2e805cee83307578c930c18db20e6b4

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-CUBIEBOARD.img.xz) = 5980ad0d8d3a65cf9c1240c12e26b20a16e8b0d1338f11c813fa5e543ccad05f
&lt;/pre&gt;
&lt;h3&gt;armv6 CUBIEBOARD2:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-CUBIEBOARD2.img.xz) = d9fe322e967f414eae2ad2ea7d2885b686cb20cbc5649c7ac26f72e6d5e513f43edd2a0b6e10ced1a4508af514a08293582399df6e1f6e1a5bffa398db768ebd

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-CUBIEBOARD2.img.xz) = ce5cce67351990c130b04fc4fea9625c9d7d6bcad1862937ae44424321755ed6
&lt;/pre&gt;
&lt;h3&gt;armv6 CUBOX-HUMMINGBOARD:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-CUBOX-HUMMINGBOARD.img.xz) = 79db9dc4b275e2a02a4363e0f161215635b84627497fbb41a8180f18d23495ccccff20cc1adb3ccee5530a4630c79e7f39022c9b037c436e016005aa80f0eede

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-CUBOX-HUMMINGBOARD.img.xz) = a2b564b8d977546cf596911408756b1e4719bc6b4b77a405cb319746b735bd3b
&lt;/pre&gt;
&lt;h3&gt;armv6 RPI-B:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-RPI-B.img.xz) = 526ece0c97435b263a187578d800f88e4420ec32b821396f3f619b70cc02761298c579ad2dfb2c0213fe61ae936a642cc4479545f198c26df5aa112c18c84399

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-RPI-B.img.xz) = 940b16d13598851a8353a90dc48749853264850171061a832409f6602661c055
&lt;/pre&gt;
&lt;h3&gt;armv6 RPI2:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-RPI2.img.xz) = e90b6abbfc0d84235e8fbcf4abddba26b15a4d80cb883a415b9615465f85aa2b5222670c5beb40374c095156bdfc82783970a813d0b83504412bbabbf4cdc14d

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-RPI2.img.xz) = 5920feae395e5417b98aa606fa7980a6a78b644d0fdb99bcffb6fbdd9b4704ea
&lt;/pre&gt;
&lt;h3&gt;armv6 WANDBOARD:&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm-armv6-WANDBOARD.img.xz) = 3214b4bc7ef8ecff0bb9549a0a89f66a25488572193bc6f1d57388be5f6d5481e7ec9b6ae8c4bc1050e43ceeb8c62109a37c36e67c0495810ae9a5c62ddbfc97

  SHA256 (FreeBSD-11.4-RELEASE-arm-armv6-WANDBOARD.img.xz) = 170f7bad07084f167ed703ea83f3f7e8b561a7c7b82a64d5ab1d14723085f6a5
&lt;/pre&gt;
&lt;h2&gt;Virtual Machine Disk Image Checksums&lt;/h2&gt;
&lt;h3&gt;amd64 (x86_64):&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-amd64.qcow2.xz) = d61340a5df9808cb02706386e11fab21c1e128961cab412fe4b3dad22431c189bacf4361601bb33ca327b083e2a55ab8e8f3cf0247db82b89de806b6b88a8f39
  SHA512 (FreeBSD-11.4-RELEASE-amd64.raw.xz) = 23ff92503c790746a69c4cc015724d2b1f9647d09b182cc47702782bf29a3f6afb44de413b5f1792a46ddf4b873c1c28c6161545bed53413b89d2af44904e2fe
  SHA512 (FreeBSD-11.4-RELEASE-amd64.vhd.xz) = 50431b427691ebcd096714874f92ada247e14751dfb6b187491bd0d251e86e0304550eb331aba2f9197fde3e540a5c4a7f0673fb61e59adae168737648548abe
  SHA512 (FreeBSD-11.4-RELEASE-amd64.vmdk.xz) = d85a0a45f9a36474bf26332181e69edb7d15710eba16ea0a04e3fad8aeb04e26fa95912d48268f514824eec5dd756520c018abdf7d61ab953a75dede6aa551f4

  SHA256 (FreeBSD-11.4-RELEASE-amd64.qcow2.xz) = 2bc1b8c753a35e26c23ce25070c12653d7048990a71a1ae4316dcb58801eb61a
  SHA256 (FreeBSD-11.4-RELEASE-amd64.raw.xz) = 53a9db4dfd9c964d487d9f928754c964e2c3610c579c7f3558c745a75fa430f0
  SHA256 (FreeBSD-11.4-RELEASE-amd64.vhd.xz) = a4e26c03b23e03b42045df83f994ed4ca431a2250314eb08957d99de6f6a06b7
  SHA256 (FreeBSD-11.4-RELEASE-amd64.vmdk.xz) = 9a28aab8c5ba2c1ed32cc7c50c234c9425fc7ecf4b08a262ba37597492d453c5
&lt;/pre&gt;
&lt;h3&gt;i386 (x86):&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-i386.qcow2.xz) = d5e2b6de758fb9d43e4e3761e74cdb843d15554450378d971dd2c556c86cc027a00dedc35b7a3191cfc14bf4a579d5baa71cb54af5ddefc73a22c2f6cf62029b
  SHA512 (FreeBSD-11.4-RELEASE-i386.raw.xz) = 81a9a9f5be3cba7d967fece68651688d8347c62d17d2e1c78f921df091cc91f2c2581f41b1fe552cbb59ae8a30095bd8dd39584c8a4c5007cf847daa9724fb2d
  SHA512 (FreeBSD-11.4-RELEASE-i386.vhd.xz) = 29c5d51dbfc3f92d063bc15e6b90aed7076fa38a6002bd2b7477d6871086fd8bc303c5d5276c334e2f8185e215d8428cbbf2b7e53d72021bcbc5fc16f795b79f
  SHA512 (FreeBSD-11.4-RELEASE-i386.vmdk.xz) = 456d9fd8338eacb8fc935134f7b0183e13271bc70cb89062281789a3bcb8800c356edab79eb083944212648dfc3228f0e4f9c6df1923d099b648d5df9e13f175

  SHA256 (FreeBSD-11.4-RELEASE-i386.qcow2.xz) = 33573f3f5964d2d72e6c0ea312a79348631e83281c152417a055963a4eadf863
  SHA256 (FreeBSD-11.4-RELEASE-i386.raw.xz) = 2e7ba763f77a7aa299fff9e978067da794e59ba612f05ca5ddcde603c898c1ce
  SHA256 (FreeBSD-11.4-RELEASE-i386.vhd.xz) = ba6d5fde3d749d826549eaa250ac38364a596cc81edc6217370860457d0f24ff
  SHA256 (FreeBSD-11.4-RELEASE-i386.vmdk.xz) = 782bd74e4c5cce4800edeb3ecdc5818fb0d16fed3ddbd003d3db94af772c18f6
&lt;/pre&gt;
&lt;h3&gt;aarch64 (arm64):&lt;/h3&gt;
&lt;pre xml:space=&quot;preserve&quot;&gt;
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64.qcow2.xz) = aef01f3b558c5ebfb9a736a98501a29ba09f5c51ee99d00501522b897856e098c861384622f6bc3dbd195a3c6dbe30e4341ba0acab1884fa9d6512ec9d8b95e4
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64.raw.xz) = 4e4e913b7dcf0109068fece4493eb7dcc859c76ad2fd76a3b3acaa15e8cbcf93e3bd0171d64cb8347cb39a478e0090c1096e10a6eff0202144394fefdc75984f
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64.vhd.xz) = 97f96f58640320087a6eaf6c429d2e811c6303dc79f0d5ebe098e904f410c807fb8fec54b61b0f198379b63cbcaba1576bb043a535498aeec4afe7951c307d4b
  SHA512 (FreeBSD-11.4-RELEASE-arm64-aarch64.vmdk.xz) = 1bae076f3b8892aa66708b187b0d19c8886e44b0454d48bdee25d5028ea068963979c7b838b85b5f636fbabc3c6ce11bce6b1dfd0c37c2e82da93b578d368a90

  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64.qcow2.xz) = 9d0c264f5a7ad2b86ac55893d50b303155c832422dab42cd33a397f14e51dd17
  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64.raw.xz) = 8357c028c8710127389c17623f382bc3f7b6eaea823e9f4f432052716d05a792
  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64.vhd.xz) = 978f980656b7e845f300433d26bd1df858ac83604ee5fa137f088e36fdd4294d
  SHA256 (FreeBSD-11.4-RELEASE-arm64-aarch64.vmdk.xz) = 38bf4a58a218604b921ca96cb245eface5d4bf92677544742c9897bd6bde4bb5
&lt;/pre&gt;
&lt;p&gt;Love FreeBSD? Support this and future releases with a &lt;a href=&quot;https://www.freebsdfoundation.org/donate/&quot; shape=&quot;rect&quot;&gt;donation&lt;/a&gt; to The FreeBSD Foundation!&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 16:34:49 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.freebsd.org/releases/11.4R/announce.html</dc:identifier>
</item>
<item>
<title>FFmpeg 4.3</title>
<link>http://ffmpeg.org/download.html#release_4.3</link>
<guid isPermaLink="true" >http://ffmpeg.org/download.html#release_4.3</guid>
<description>&lt;h4 class=&quot;first&quot;&gt;&lt;small class=&quot;pull-right&quot;&gt;If you find FFmpeg useful, you are welcome to contribute by &lt;a href=&quot;http://ffmpeg.org/donations.html&quot;&gt;donating&lt;/a&gt;.&lt;/small&gt; More downloading options&lt;/h4&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-md-6&quot; readability=&quot;2.3646953405018&quot;&gt;
&lt;div class=&quot;well&quot; id=&quot;get-packages&quot; readability=&quot;2.910394265233&quot;&gt;
&lt;h3&gt;Get packages &amp;amp; executable files&lt;/h3&gt;
&lt;p&gt;FFmpeg only provides source code. Below are some links that provide it already compiled and ready to go.&lt;/p&gt;

&lt;div class=&quot;tab-content&quot;&gt;
&lt;div id=&quot;build-linux&quot; class=&quot;tab-pane active&quot;&gt;
&lt;h3&gt;Linux Packages&lt;/h3&gt;

&lt;h3&gt;Linux Static Builds&lt;/h3&gt;

&lt;/div&gt;
&lt;div id=&quot;build-windows&quot; class=&quot;tab-pane active&quot;&gt;
&lt;h3&gt;Windows EXE Files&lt;/h3&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;col-md-6&quot; readability=&quot;8.1573033707865&quot;&gt;
&lt;div class=&quot;well&quot; id=&quot;get-sources&quot; readability=&quot;11.782771535581&quot;&gt;
&lt;h3&gt;Get the Sources&lt;/h3&gt;
&lt;div class=&quot;btn-download text-center&quot;&gt;&lt;a href=&quot;http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2&quot; class=&quot;btn btn-success btn-lg&quot;&gt;Download Snapshot&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;You can retrieve the source code through &lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot;&gt;Git&lt;/a&gt; by using the command:&lt;/p&gt;
&lt;pre&gt;
git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg
&lt;/pre&gt;
&lt;div&gt;

&lt;small&gt;Cannot access Git or wish to speed up the cloning and reduce the bandwidth usage?&lt;/small&gt;&lt;/div&gt;
&lt;p class=&quot;info&quot;&gt;FFmpeg has always been a very experimental and developer-driven project. It is a key component in many multimedia projects and has new features added constantly. Development branch snapshots work really well 99% of the time so people are not afraid to use them.&lt;/p&gt;
&lt;div class=&quot;text-center&quot;&gt;&lt;a href=&quot;http://ffmpeg.org/download.html#repositories&quot; class=&quot;btn btn-success&quot;&gt;Git Repositories&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&quot;repositories&quot;&gt;Git Repositories&lt;/h4&gt;
&lt;p&gt;Since FFmpeg is developed with &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;, multiple repositories from developers and groups of developers are available.&lt;/p&gt;

&lt;h4 id=&quot;releases&quot;&gt;Releases&lt;/h4&gt;
&lt;p&gt;Approximately every 6 months the FFmpeg project makes a new major release. Between major releases point releases will appear that add important bug fixes but no new features. Note that these releases are intended for distributors and system integrators. Users that wish to compile from source themselves are strongly encouraged to consider using the development branch (see above), this is the only version on which FFmpeg developers actively work. The release branches only cherry pick selected changes from the development branch, which therefore receives much more and much faster bug fixes such as additional features and security patches.&lt;/p&gt;
&lt;h3 id=&quot;release_4.3&quot;&gt;FFmpeg 4.3 &quot;4:3&quot;&lt;/h3&gt;
&lt;p&gt;4.3 was released on 2020-06-15. It is the latest stable FFmpeg release from the 4.3 release branch, which was cut from master on 2020-06-08.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      56. 51.100
libavcodec     58. 91.100
libavformat    58. 45.100
libavdevice    58. 10.100
libavfilter     7. 85.100
libswscale      5.  7.100
libswresample   3.  7.100
libpostproc    55.  7.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_4.2&quot;&gt;FFmpeg 4.2.3 &quot;Ada&quot;&lt;/h3&gt;
&lt;p&gt;4.2.3 was released on 2020-05-21. It is the latest stable FFmpeg release from the 4.2 release branch, which was cut from master on 2019-07-21.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      56. 31.100
libavcodec     58. 54.100
libavformat    58. 29.100
libavdevice    58.  8.100
libavfilter     7. 57.100
libswscale      5.  5.100
libswresample   3.  5.100
libpostproc    55.  5.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_4.1&quot;&gt;FFmpeg 4.1.5 &quot;al-Khwarizmi&quot;&lt;/h3&gt;
&lt;p&gt;4.1.5 was released on 2020-01-07. It is the latest stable FFmpeg release from the 4.1 release branch, which was cut from master on 2018-11-02.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      56. 22.100
libavcodec     58. 35.100
libavformat    58. 20.100
libavdevice    58.  5.100
libavfilter     7. 40.101
libswscale      5.  3.100
libswresample   3.  3.100
libpostproc    55.  3.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_4.0&quot;&gt;FFmpeg 4.0.5 &quot;Wu&quot;&lt;/h3&gt;
&lt;p&gt;4.0.5 was released on 2019-11-22. It is the latest stable FFmpeg release from the 4.0 release branch, which was cut from master on 2018-04-16.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      56. 14.100
libavcodec     58. 18.100
libavformat    58. 12.100
libavdevice    58.  3.100
libavfilter     7. 16.100
libswscale      5.  1.100
libswresample   3.  1.100
libpostproc    55.  1.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_3.4&quot;&gt;FFmpeg 3.4.7 &quot;Cantor&quot;&lt;/h3&gt;
&lt;p&gt;3.4.7 was released on 2019-12-02. It is the latest stable FFmpeg release from the 3.4 release branch, which was cut from master on 2017-10-11.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      55. 78.100
libavcodec     57.107.100
libavformat    57. 83.100
libavdevice    57. 10.100
libavfilter     6.107.100
libavresample   3.  7.  0
libswscale      4.  8.100
libswresample   2.  9.100
libpostproc    54.  7.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_3.3&quot;&gt;FFmpeg 3.3.9 &quot;Hilbert&quot;&lt;/h3&gt;
&lt;p&gt;3.3.9 was released on 2018-11-18. It is the latest stable FFmpeg release from the 3.3 release branch, which was cut from master on 2017-04-02.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      55. 58.100
libavcodec     57. 89.100
libavformat    57. 71.100
libavdevice    57.  6.100
libavfilter     6. 82.100
libavresample   3.  5.  0
libswscale      4.  6.100
libswresample   2.  7.100
libpostproc    54.  5.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_3.2&quot;&gt;FFmpeg 3.2.14 &quot;Hypatia&quot;&lt;/h3&gt;
&lt;p&gt;3.2.14 was released on 2019-05-14. It is the latest stable FFmpeg release from the 3.2 release branch, which was cut from master on 2016-10-26.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      55. 34.100
libavcodec     57. 64.101
libavformat    57. 56.101
libavdevice    57.  1.100
libavfilter     6. 65.100
libavresample   3.  1.  0
libswscale      4.  2.100
libswresample   2.  3.100
libpostproc    54.  1.100
&lt;/pre&gt;

&lt;h3 id=&quot;release_2.8&quot;&gt;FFmpeg 2.8.16 &quot;Feynman&quot;&lt;/h3&gt;
&lt;p&gt;2.8.16 was released on 2020-04-28. It is the latest stable FFmpeg release from the 2.8 release branch, which was cut from master on 2015-09-05. Amongst lots of other changes, it includes all changes from ffmpeg-mt, libav master of 2015-08-28, libav 11 as of 2015-08-28.&lt;/p&gt;
&lt;p&gt;It includes the following library versions:&lt;/p&gt;
&lt;pre&gt;
libavutil      54. 31.100
libavcodec     56. 60.100
libavformat    56. 40.101
libavdevice    56.  4.100
libavfilter     5. 40.101
libavresample   2.  1.  0
libswscale      3.  1.101
libswresample   1.  2.101
libpostproc    53.  3.100
&lt;/pre&gt;

&lt;h3 id=&quot;old_releases&quot;&gt;Old Releases&lt;/h3&gt;
&lt;p&gt;Older versions are available at the &lt;a href=&quot;http://ffmpeg.org/olddownload.html&quot;&gt;Old Releases&lt;/a&gt; page.&lt;/p&gt;

</description>
<pubDate>Tue, 16 Jun 2020 15:59:26 +0000</pubDate>
<dc:creator>mfilion</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://ffmpeg.org/download.html</dc:identifier>
</item>
<item>
<title>3K, 60fps, 130ms: achieving it with Rust</title>
<link>https://blog.tonari.no/why-we-love-rust</link>
<guid isPermaLink="true" >https://blog.tonari.no/why-we-love-rust</guid>
<description>&lt;p&gt;How we chose the Rust programming language to advance the state-of-the-art in real-time communication&lt;/p&gt;&lt;div readability=&quot;331.87384203992&quot;&gt;
&lt;p&gt;&lt;em&gt;T&lt;/em&gt;&lt;em&gt;his post was written collectively with Ryo Kawaguchi,&lt;/em&gt; &lt;em&gt;Andrea Law, Brian Schwind&lt;/em&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Our goal for tonari is to build a virtual doorway to another space that allows for truly natural human interactions. Nearly two years in development, tonari is, to the best of our knowledge, the lowest-latency high resolution production-ready &quot;teleconferencing&quot; (we are truly not fond of that word) product available.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;130ms&lt;/strong&gt; glass-to-glass latency (the time from light hitting the camera to when it appears on-screen on the other side)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3K, 60fps&lt;/strong&gt; video transmission&lt;/li&gt;
&lt;li&gt;High-bitrate 48kHz stereo audio&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Compare this to the typical &lt;strong&gt;315-500ms&lt;/strong&gt; latency for Zoom and WebRTC, as measured between two laptops (X1 Carbon and MacBook Pro) on the same network at our office. It's a huge difference. It's the difference between constantly interrupting each other versus having a natural flow of conversation. It's the difference between a blurry face from a camera seemingly pointed up someone's nose versus a wide-view high fidelity image that smoothly transfers all the subtle body language of an in-person conversation.&lt;/p&gt;
&lt;div class=&quot;asset-wrapper&quot;&gt;&lt;img src=&quot;https://blog.tonari.no/images/ea56c74d-a55d-4183-9a7b-d697954c5159-tonari-frontier-2.png.optimized.jpg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Since launching &lt;a href=&quot;https://blog.tonari.no/changing-communication-and-culture-in-an-organization&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;our first pilot&lt;/a&gt; in February, we've experienced no software-related downtime (tripping over ethernet cables is a different story). And as much as we would love to think we're infallible engineers, we truly don't believe we could have achieved these numbers with this level of stability without Rust.&lt;/p&gt;

&lt;p&gt;The very first tonari proof-of-concept used a basic projector, bluetooth speakers, and a website running on top of vanilla WebRTC (JavaScript). We've come a long way since those days.&lt;/p&gt;
&lt;p&gt;While that prototype (and our opinionated vision of the future) got us grant funding, we knew that tonari would be dead on arrival unless we could achieve &lt;em&gt;significantly&lt;/em&gt; lower latency and higher fidelity than WebRTC—two things that aren't currently associated with video chat in 2020.&lt;/p&gt;
&lt;p&gt;We figured, “Okay&lt;em&gt;, so we can just&lt;/em&gt; &lt;em&gt;modify&lt;/em&gt; &lt;em&gt;WebRTC directly and wrap it up with a slick UI in C++ and launch it in no time&lt;/em&gt;.”&lt;/p&gt;
&lt;p&gt;A week of struggling with WebRTC’s nearly 750,000 LoC &lt;em&gt;behemoth&lt;/em&gt; of a codebase revealed just how painful a single small change could be — how hard it was to test, and feel truly &lt;em&gt;safe,&lt;/em&gt; with the code you were dealing with.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#let-there-be-light...weight-code&quot; id=&quot;let-there-be-light...weight-code&quot;&gt;Let there be light...weight code&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So in a furious (read: calm and thoroughly-discussed) rage quit we decided it was easier to re-implement the whole stack from scratch. We wanted to &lt;em&gt;know and understand every line of code&lt;/em&gt; being run on our hardware, and it should be designed for the &lt;em&gt;exact&lt;/em&gt; hardware we wanted.&lt;/p&gt;
&lt;p&gt;Thus began our journey to the depths beyond high-level interfaces like a browser or existing RTC project, and into the world of low-level systems and hardware interaction from scratch.&lt;/p&gt;
&lt;p&gt;We needed it to be inherently &lt;strong&gt;&lt;em&gt;secure&lt;/em&gt;&lt;/strong&gt; to protect the privacy of those who use tonari. We needed it to be &lt;strong&gt;&lt;em&gt;performant&lt;/em&gt;&lt;/strong&gt; to make it feel as human and real-time as possible. And we needed it to be &lt;strong&gt;&lt;em&gt;maintainable&lt;/em&gt;&lt;/strong&gt; as the code becomes more mature, as new brains show up and have to learn our work and expand on it.&lt;/p&gt;
&lt;p&gt;We discussed and ruled out a handful of alternative approaches:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Security:&lt;/em&gt;&lt;/strong&gt; C and C++ are memory- and concurrency-unsafe, and their disparate and seemingly infinite build systems make it hard to have a consistent and simple development experience.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Performance:&lt;/strong&gt;&lt;/em&gt; Java, C#, and Go's memory management is opaque and can be difficult to work with in latency-sensitive applications where you want full control over your memory.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Maintainability:&lt;/strong&gt;&lt;/em&gt; Haskell, Nim, D, and a handful of other more bespoke languages tend to be more limited in tooling, community, and hire-ability.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Rust is really the only production-ready language that we found confidently satisfies these needs.&lt;/p&gt;

&lt;p&gt;Rust's beauty lies in the countless decisions made by the development community that constantly make you feel like you have can ten cakes and eat all of them too.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Its build system is opinionated, and cleanly designed. It is itself a complete ecosystem that makes introducing new engineers to your project and setting up dev environments remarkably simple.&lt;/li&gt;
&lt;li&gt;The memory and concurrency safety guarantees cannot be over-appreciated. We're confident that we wouldn't have done our first deployment yet if we had continued this in C++ - we'd still probably be stuck on subtle snags.&lt;/li&gt;
&lt;li&gt;Our ability to interact at the lowest level with hardware via APIs like CUDA, oftentimes through existing &lt;a href=&quot;https://crates.io/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;crates&lt;/a&gt; (Rust's term for a code library), has allowed us to have higher standards about the latency we want from our first production release.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As tonari is getting more advanced, we're now choosing embedded microcontrollers whose firmware can be written in Rust so we don't have to leave our idyllic utopia into the old world of unsafe system programming.&lt;/p&gt;

&lt;p&gt;We're not going to &lt;code&gt;cat Cargo.toml&lt;/code&gt; here, instead focusing on some select crates that have earned the prestigious award of a lifetime invitation to each of our birthday parties forever.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#%22better-than-std%22-crates&quot; id=&quot;&amp;quot;better-than-std&amp;quot;-crates&quot;&gt;&quot;Better-than-std&quot; crates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;crossbeam&lt;/code&gt;&lt;/a&gt; is better for inter-thread communication than &lt;code&gt;std::sync::mpsc&lt;/code&gt; in almost every way, and may be merged into &lt;code&gt;std&lt;/code&gt; eventually.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Amanieu/parking_lot&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;parking_lot&lt;/code&gt;&lt;/a&gt; has a mutex implementation better than &lt;code&gt;std::sync::Mutex&lt;/code&gt; in almost every way, and may be merged into the standard library (one day). It also provides many other useful synchronization primitives.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tokio-rs/bytes&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; is a more robust, and often more performant, way to play with bytes compared to &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alexcrichton/socket2-rs&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;socket2&lt;/code&gt;&lt;/a&gt; is what you will end up at if you are ever doing lower-level networking optimizations.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#beauty-supply&quot; id=&quot;beauty-supply&quot;&gt;Beauty supply&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/daboross/fern&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;fern&lt;/code&gt;&lt;/a&gt; is a dead-simple way to customize and prettify your logging output. We use it to keep our logs readable and internally standardized.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TeXitoi/structopt&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;structopt&lt;/code&gt;&lt;/a&gt; is how you always dreamed CLI arguments would be handled. There's no reason not to use it unless you're going for bare-minimum dependencies.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#cargo-cult-classics&quot; id=&quot;cargo-cult-classics&quot;&gt;Cargo cult classics&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/sunng87/cargo-release&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;cargo-release&lt;/code&gt;&lt;/a&gt; allows us to cut internal releases painlessly.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/est31/cargo-udeps&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;cargo-udeps&lt;/code&gt;&lt;/a&gt; identifies unused dependencies and allows us to keep our build times minimal.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cargo tree&lt;/code&gt; (recently integrated in cargo) shows a dependency tree that's useful in many ways, but namely in identifying ways to minimize dependencies.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-secure-code/cargo-geiger&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;cargo-geiger&lt;/code&gt;&lt;/a&gt; helps us quickly evaluate external dependencies for possible security (or correctness) concerns.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flamegraph-rs/flamegraph&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;cargo-flamegraph&lt;/code&gt;&lt;/a&gt; helps us enormously when tracking down performance hot-spots in our code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tonari codebase is a monorepo. At its root we have a Cargo workspace with a &lt;code&gt;binaries&lt;/code&gt; crate, and a number of supporting library crates.&lt;/p&gt;
&lt;p&gt;Having our crates in one repo makes them easy to reference in our &lt;code&gt;binaries&lt;/code&gt; crate without needing to publish to &lt;a href=&quot;https://crates.io/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;crates.io&lt;/a&gt; or get too fancy with specifying git dependencies in our &lt;code&gt;Cargo.toml&lt;/code&gt;. When the time comes to publish these libraries as open source, it's trivial to break it out into its own repo.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#library,-binary,-why-not-both&quot; id=&quot;library,-binary,-why-not-both&quot;&gt;Library, binary, why not both?&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have one main library crate that contains a unified API for talking to hardware, media codecs, network protocols, etc. Outside of that private API, we also have standalone crates in our workspace that we consider candidates for open-sourcing. For example, we’ve written our own actor framework fit for long-running high-throughput actors, as well as our own network protocol for reliable, high-bandwidth, low-latency media streaming. We use separate binaries for different parts of the tonari system and each of these lives in &lt;code&gt;binaries&lt;/code&gt;, a combination library/binary crate. Its library modules contains a set of reusable actors that combine our private API with our actor system, and then a collection of individual binaries that consume these actors and define the plumbing between them.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#flags-as-far-as-the-eye-can-see&quot; id=&quot;flags-as-far-as-the-eye-can-see&quot;&gt;Flags as far as the eye can see&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We make extensive use of feature flags to allow development of our project on different OSes (like Brian's 1970s-era MacBook Pro) or different hardware configurations. This allows us to easily swap out camera hardware without extra runtime checks or using awful &lt;code&gt;sed&lt;/code&gt; hacks. For example, Linux uses &lt;code&gt;v4l2&lt;/code&gt; (Video For Linux...2) to access most webcams, but other webcams might have their own SDK. To compile for platforms that don't use &lt;code&gt;v4l2&lt;/code&gt; or when an SDK isn't available for a particular OS, we can put those SDKs behind feature flags and export a common interface. As a (simplified) concrete example, let's say we have a common camera interface defined as a trait:&lt;/p&gt;
&lt;pre class=&quot;jsx-237597551&quot;&gt;
&lt;code class=&quot;jsx-237597551&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;trait&lt;/span&gt; Capture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&amp;gt;&lt;/span&gt; Vec&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;u8&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's also say we have three different camera interfaces - &lt;code&gt;v4l2&lt;/code&gt;, &lt;code&gt;corevideo&lt;/code&gt;, and &lt;code&gt;polaroid.&lt;/code&gt; We can make our binaries work exclusively with this trait to be flexible, and we can swap in different implementations of &lt;code&gt;Capture&lt;/code&gt; with feature flags.&lt;/p&gt;
&lt;pre class=&quot;jsx-237597551&quot;&gt;
&lt;code class=&quot;jsx-237597551&quot;&gt;&lt;span class=&quot;token attribute attr-name&quot;&gt;#[cfg(feature = &quot;v4l2&quot;)]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;mod&lt;/span&gt; v4l2 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; V4l2Capture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;impl&lt;/span&gt; Capture &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; V4l2Capture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&amp;gt;&lt;/span&gt; Vec&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;u8&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token attribute attr-name&quot;&gt;#[cfg(feature = &quot;corevideo&quot;)]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;mod&lt;/span&gt; corevideo &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; CoreVideoCapture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;impl&lt;/span&gt; Capture &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; CoreVideoCapture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&amp;gt;&lt;/span&gt; Vec&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;u8&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token attribute attr-name&quot;&gt;#[cfg(feature = &quot;polaroid&quot;)]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;mod&lt;/span&gt; polaroid &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; PolaroidCapture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;impl&lt;/span&gt; Capture &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; PolaroidCapture &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&amp;gt;&lt;/span&gt; Vec&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;u8&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token attribute attr-name&quot;&gt;#[cfg(feature = &quot;v4l2&quot;)]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; VideoCapture &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; v4l2&lt;span class=&quot;token punctuation&quot;&gt;::&lt;/span&gt;V4l2Capture&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token attribute attr-name&quot;&gt;#[cfg(feature = &quot;corevideo&quot;)]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; VideoCapture &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; corevideo&lt;span class=&quot;token punctuation&quot;&gt;::&lt;/span&gt;CoreVideoCapture&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token attribute attr-name&quot;&gt;#[cfg(feature = &quot;polaroid&quot;)]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; VideoCapture &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; polaroid&lt;span class=&quot;token punctuation&quot;&gt;::&lt;/span&gt;PolaroidCapture&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we make our code work with things which implement the &lt;code&gt;Capture&lt;/code&gt; trait instead of concrete types, we can now compile on and target various platforms by simply toggling feature flags. For example, we can have a struct which has a field - &lt;code&gt;video_capture: Box&amp;lt;dyn Capture&amp;gt;&lt;/code&gt; which will let us store any type which can &lt;code&gt;Capture&lt;/code&gt; from a camera. An example &lt;code&gt;Cargo.toml&lt;/code&gt; file to support the capture implementations we wrote above might look something like this:&lt;/p&gt;
&lt;pre class=&quot;jsx-237597551&quot;&gt;
&lt;code class=&quot;jsx-237597551&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;tonari&quot;&lt;/span&gt;
version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;
edition &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2018&quot;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;features&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;v4l2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
macos &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;corevideo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
classic &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;polaroid&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
v4l2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;rscam&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;dependencies&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
rscam &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.5&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optional &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;     # v4l2 linux camera library
corevideo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optional &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; # MacOS camera library
polaroid &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; version &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;0.1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optional &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  # Polaroid camera &lt;span class=&quot;token function&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;very slow &lt;span class=&quot;token constant&quot;&gt;FPS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This way we can avoid building and linking to platform-specific libraries like &lt;code&gt;v4l2&lt;/code&gt; which aren't available everywhere.&lt;/p&gt;

&lt;p&gt;A year after switching over to Rust, we onboarded our fourth engineer to the team, who didn't have much prior experience in either Rust or systems engineering. While the learning curve is undeniable (&lt;a href=&quot;https://rufflewind.com/2017-02-15/rust-move-copy-borrow&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;borrow checker&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;https://rufflewind.com/2017-02-15/rust-move-copy-borrow&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;, my old friend&lt;/em&gt;&lt;/a&gt;), we've found that Rust is incredibly empowering for those new to lower-level programming.&lt;/p&gt;
&lt;p&gt;As mentioned, memory and concurrency safety built into the language means that an entire class of problems not only fail to compile, but the compiler itself is often the only teacher you need since its warnings are so descriptive. Much has already been written about Rust's &lt;a href=&quot;https://twitter.com/b0rk/status/954366146505052160?lang=en&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;great compiler messages&lt;/a&gt;, as well as &lt;a href=&quot;https://doc.rust-lang.org/stable/book/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;excellent docs&lt;/a&gt; (for example, take a look at this &lt;a href=&quot;https://doc.rust-lang.org/book/ch08-02-strings.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;lengthy discussion on strings&lt;/a&gt;), and in our case as well these have been incredibly helpful resources.&lt;/p&gt;
&lt;p&gt;There is usually one obvious &quot;right way&quot; to do a thing in Rust, unlike many other languages. Code that isn't written the &quot;right way&quot; tends to stand out, and is easy to pick out in reviews, often times automatically by &lt;code&gt;cargo clippy&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In practice, this has meant that new engineers can quickly start contributing production-ready code. Code reviews can remain focused on the implementation, as opposed to expending energy doing manual correctness checks.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#an-ide-census&quot; id=&quot;an-ide-census&quot;&gt;An IDE census&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the IDE department, Rust still shows its relative immaturity compared to some of its predecessors. This year especially, though, there have been huge strides, and each of us has found a pretty comfortable development environment at this point. • 1 of us use macOS, and 3 of us use Linux (Arch, Ubuntu, and Pop!_OS, revealing our respective levels of masochism) • 2 of us use VS Code with the &lt;code&gt;rust-analyzer&lt;/code&gt; plugin, and 2 of us use Sublime Text with &lt;code&gt;RustEnhanced&lt;/code&gt;. We’re often sharing setups and trying each other’s out (except Brian, who is stuck in his ways at the ripe old age of 29), and we’re constantly keeping an eye on new development tools that can help us work better together.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#code-style-guidelines-are-dead,-long-live-rustfmt&quot; id=&quot;code-style-guidelines-are-dead,-long-live-rustfmt&quot;&gt;Code style guidelines are dead, long live &lt;code&gt;rustfmt&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You know what's &lt;em&gt;wild&lt;/em&gt;? We don't have a code style guideline document that you have to read before submitting code. We don't need one. We just enforce &lt;code&gt;rustfmt&lt;/code&gt;. &lt;em&gt;Let me tell you:&lt;/em&gt; it really takes the edge off of code reviews.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#how-we-review-code&quot; id=&quot;how-we-review-code&quot;&gt;How we review code&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Our code reviews are straightforward since there's only four of us so far, and we are lucky to have a lot of trust amongst us. Our main goal is to have &lt;strong&gt;&lt;em&gt;at least two pairs of eyes&lt;/em&gt;&lt;/strong&gt; on every line of code, and to not block each other so we can maintain momentum.&lt;/p&gt;

&lt;p&gt;We use Google’s Cloud Builder for running our CI build, as our infrastructure stack is mostly built on GCP and it allows for easy-ish tweaking of build machine specs and custom build images. It's triggered for every commit and runs &lt;code&gt;cargo clippy&lt;/code&gt; and &lt;code&gt;cargo build&lt;/code&gt;. We pass &lt;code&gt;-D warnings&lt;/code&gt; to the compiler to promote warnings into errors to ensure our changes don’t make our poor fellow coworker’s &lt;code&gt;rustc&lt;/code&gt; rain warnings on them the next time they pull changes. To improve the CI build time, we cache the &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;.cargo&lt;/code&gt; directories in Cloud Storage, so it can be download next time for incremental build.&lt;/p&gt;
&lt;pre class=&quot;jsx-237597551&quot;&gt;
&lt;code class=&quot;jsx-237597551&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token for-or-select variable&quot;&gt;crate&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; */Cargo.toml &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;xargs&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;pushd&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$crate&lt;/span&gt;

  
  cargo +&lt;span class=&quot;token variable&quot;&gt;$NIGHTLY_TOOLCHAIN&lt;/span&gt; clippy --no-default-features -- -D warnings

  
  &lt;span class=&quot;token function&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;RUSTFLAGS&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;-D warnings&quot;&lt;/span&gt; cargo build --no-default-features

  
  &lt;span class=&quot;token function&quot;&gt;time&lt;/span&gt; cargo &lt;span class=&quot;token builtin class-name&quot;&gt;test&lt;/span&gt; --no-default-features

  &lt;span class=&quot;token function&quot;&gt;popd&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We've also heard good things about &lt;code&gt;&lt;a href=&quot;https://github.com/mozilla/sccache&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;sccache&lt;/a&gt;&lt;/code&gt; and will evaluate it soon!&lt;/p&gt;

&lt;p&gt;The Rust ecosystem is great, but there are huge existing projects out there which just aren't feasible to port to Rust yet without a huge time investment. &lt;code&gt;webrtc-audio-processing&lt;/code&gt; is a good example. The benefits it provides (clear audio with no vocal echoes or feedback) are huge and porting it to Rust in the near-term is not likely (it's around 80k lines of C and C++ code).&lt;/p&gt;
&lt;p&gt;Thankfully, Rust makes it quite easy to use existing C and C++ libraries. The &lt;a href=&quot;https://crates.io/crates/bindgen&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;bindgen&lt;/a&gt; crate does most of the heavy-lifting. Give it a header file in C or C++ and it will automatically generate (unsafe) Rust code which can call the functions defined in the header. At that point, it's up to you to create a higher level Rust crate which exposes a safe API.&lt;/p&gt;
&lt;p&gt;A lot of this process is fairly automatic for libraries with straightforward or commonly-used build processes. Creating the higher level safe API is important though - the Rust API that bindgen provides is not very fun to use directly as it's unsafe and typically not very idiomatic. Fortunately, once you have a higher level API you can eventually swap the C library out with your own Rust version and consumers of the crate are none the wiser.&lt;/p&gt;
&lt;p&gt;These features let us work with APIs and hardware which would either never have a native Rust API or take months or years to re-implement. Low-level OS libraries, large codebases such as &lt;code&gt;webrtc-audio-processing&lt;/code&gt;, and manufacturer-supplied camera SDKs all become available for use in our Rust codebase without having to move our entire application language over to C++, while still performing as if we had.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://blog.tonari.no/why-we-love-rust#c++-specific-quirks&quot; id=&quot;c++-specific-quirks&quot;&gt;C++-specific quirks&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some C++ libraries are difficult to interface with directly from Rust. You have to whitelist types because &lt;code&gt;bindgen&lt;/code&gt; can't handle all the &lt;code&gt;std::*&lt;/code&gt; types that get pulled in, it doesn't play well with templated functions and copy/move constructors, and a whole host of other issues documented &lt;a href=&quot;https://rust-lang.github.io/rust-bindgen/cpp.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get around these issues, we'll typically create a simplified C++ header and source wrapper which exports &lt;code&gt;bindgen&lt;/code&gt;-friendly functions. It's a bit more work, but far less work than porting the entire library to Rust. You can see an example of this wrapper creation &lt;a href=&quot;https://github.com/tonarino/webrtc-audio-processing/tree/2a973929c3afbc24beea75aa235f3341a7be275a/webrtc-audio-processing-sys/src&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With all of Rust's ecosystem, and C/C++ projects being only a &lt;code&gt;bindgen&lt;/code&gt; invocation away, we have easy access to some of the highest quality software packages in existence, all without having to sacrifice execution speed.&lt;/p&gt;

&lt;p&gt;Rust is not problem-free. It's a relatively new language that is constantly evolving, and there are shortcomings that you should consider when evaluating a move to Rust. Here is our non-exhaustive list:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Long compile times&lt;/strong&gt;; &lt;a href=&quot;https://xkcd.com/303/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;the popular xkcd comic&lt;/a&gt;, the coffee break while waiting for Rust code to compile is very real. Our codebase for example takes about 8 mins to compile non-incrementally on a moderately beefy laptop, but it can be a lot &lt;a href=&quot;https://pingcap.com/blog/rust-compilation-model-calamity/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;worse&lt;/a&gt;. The Rust compiler has a lot of work to do enforcing strong language guarantees, and it must compile your entire dependency tree from source. Incremental builds are better, but some crates come with build scripts that pull and compile non-Rust dependency code, and the build cache may need to be cleared when upgrading their versions and switching branches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Library coverage&lt;/strong&gt;; The library ecosystem is quite mature but the coverage is limited compared to C / C++. We ended up implementing our own jitter buffer, and we also wrap several C / C++ libraries with Rust's &lt;a href=&quot;https://github.com/rust-lang/rust-bindgen&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;bindgen&lt;/a&gt;, which means we have &lt;code&gt;unsafe&lt;/code&gt; regions in our Rust code. Non-trivial projects tend to have some minimal amount of &lt;code&gt;unsafe&lt;/code&gt; coding, which adds to the learning curve and chance of memory bugs.&lt;/li&gt;
&lt;li&gt;Rust demands you to write &lt;strong&gt;correct and explicit code up-front&lt;/strong&gt;. If you get it wrong, the compiler won't let it slide. If you care less about concurrency and memory guarantees, development can feel needlessly slow. Rust developers are constantly working on improving the error messages, though. They are friendly and actionable, often with an included fix suggestion. A good foundational model on memory &amp;amp; concurrency also helps getting over the initial hump quicker, so we suggest taking time to truly understand the language and its guarantees.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rust's type inferencer&lt;/strong&gt; is so strong it makes you feel sometimes like you're using a dynamically-typed language. That said, there comes the moment where it does not quite work the way you want, especially when generics and &lt;a href=&quot;https://doc.rust-lang.org/book/ch15-02-deref.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;deref coercion&lt;/a&gt; are involved, and you end up having to fumble around to make the inferencer happy. It can come with frustration, and it's really helpful to have someone in the team who already has gone through that stage of learning. With enough patience, that frustration often turns into a wow moment, with a deeper understanding of the language design and why it's done that way, as well as a possible bug that you would have otherwise introduced.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Language evolution&lt;/strong&gt;; The Rust language is constantly evolving. Some of the language constructs like &lt;code&gt;async&lt;/code&gt; are still volatile, and you may find it's best to stick with threads and the standard library when you can.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Experiencing no software-related downtime so far is both a pleasant surprise, and a testament to the safety provided by Rust's guarantees. Rust has also made it easy to write performant code with efficient resource usage - both our CPU and memory usage has been predictable and consistent. Without a garbage collector, we can guarantee consistent latency and frame rates.&lt;/p&gt;
&lt;p&gt;Our experience maintaining a Rust codebase has also been great. We've been able to introduce significant improvements to our latency through sizable changes to our codebase with confidence. A clean compile doesn't always imply everything will work, but honestly, that's been the case more often than not.&lt;/p&gt;
&lt;p&gt;The end result is a reliable product which hasn't been a nightmare to maintain (strong words, we know), and performs quickly at the high specs we demand for frame rate, latency, and resource efficiency. Again, it's hard to imagine where we might be without Rust!&lt;/p&gt;

&lt;p&gt;We've open sourced one &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;FFI&lt;/a&gt; crate so far, &lt;code&gt;&lt;a href=&quot;https://github.com/tonarino/webrtc-audio-processing&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;webrtc-audio-processing&lt;/a&gt;&lt;/code&gt;. This is one of the crates that used to live in the top level of our repo, and there are many more like it on their way to open-source.&lt;/p&gt;
&lt;p&gt;There will be more on this subject later as we release more code, but one thing feels true: even before open-sourcing our crates, it’s felt very healthy to our code's clarity to &lt;em&gt;assume&lt;/em&gt; each crate we crate privately &lt;em&gt;will&lt;/em&gt; be open-sourced. This philosophy keeps our boundaries between crates more clean, and encourages us to make quicker decisions about opening up parts of our codebase with minimal fuss.&lt;/p&gt;

&lt;p&gt;Thanks for making it this far, we hope this brain-dump might have offered a useful thought or two for those getting into Rust, or those with advanced knowledge of Rust but using it in different environments. Please feel free to say hi at &lt;a href=&quot;mailto:hey@tonari.no&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;hey@tonari.no&lt;/a&gt; or find us on &lt;a href=&quot;https://twitter.com/heytonari&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; with any feedback.&lt;/p&gt;
&lt;div class=&quot;asset-wrapper&quot;&gt;&lt;img src=&quot;https://blog.tonari.no/images/cc0e4c37-b0a6-4072-8f41-d74c3d23bdee-Untitled.png.optimized.jpg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In an earlier version of this post, we called our audio &quot;audiophile-quality&quot; which is a phrase that, at this point, could mean anything. We've updated the post with more details.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Tue, 16 Jun 2020 15:50:25 +0000</pubDate>
<dc:creator>clpwn</dc:creator>
<og:description>How we chose the Rust programming language to advance the state-of-the-art in real-time communication</og:description>
<og:title>3K, 60fps, 130ms: achieving it with Rust | tonari blog</og:title>
<og:url>https://blog.tonari.no/why-we-love-rust</og:url>
<og:image>https://blog.tonari.no/images/3bcb8b5c-7ac2-4710-97fa-9d4fa0eafc90-tonari-rust-logo-heartssomewhere-whitebg.png.optimized.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.tonari.no/why-we-love-rust</dc:identifier>
</item>
<item>
<title>For black CEOs in Silicon Valley, humiliation is a part of doing business</title>
<link>https://www.bloomberg.com/news/articles/2020-06-16/black-lives-matter-highlights-adversity-facing-black-tech-ceos</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2020-06-16/black-lives-matter-highlights-adversity-facing-black-tech-ceos</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-06-16/black-lives-matter-highlights-adversity-facing-black-tech-ceos&quot;&gt;https://www.bloomberg.com/news/articles/2020-06-16/black-lives-matter-highlights-adversity-facing-black-tech-ceos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=23540162&quot;&gt;https://news.ycombinator.com/item?id=23540162&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 348&lt;/p&gt;
&lt;p&gt;# Comments: 286&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 15:19:14 +0000</pubDate>
<dc:creator>saeedjabbar</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=13d1a390-b036-11ea-a734-f3f7d6aa540d&amp;url=L25ld3MvYXJ0aWNsZXMvMjAyMC0wNi0xNi9ibGFjay1saXZlcy1tYXR0ZXItaGlnaGxpZ2h0cy1hZHZlcnNpdHktZmFjaW5nLWJsYWNrLXRlY2gtY2Vvcw==</dc:identifier>
</item>
<item>
<title>A Jupyter Kernel for SQLite</title>
<link>https://blog.jupyter.org/a-jupyter-kernel-for-sqlite-9549c5dcf551</link>
<guid isPermaLink="true" >https://blog.jupyter.org/a-jupyter-kernel-for-sqlite-9549c5dcf551</guid>
<description>&lt;div&gt;

&lt;div class=&quot;ei&quot;&gt;
&lt;div class=&quot;n ej ek el em&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://blog.jupyter.org/@3l3ktr?source=post_page-----9549c5dcf551----------------------&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Mariana Meireles&quot; class=&quot;r en eo ep&quot; src=&quot;https://miro.medium.com/fit/c/96/96/2*8Mc2s_NbrGLkbODucwUYeA.jpeg&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id=&quot;ebb6&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;While it is well known in the Python scientific computing community, Jupyter is in fact a language-agnostic development environment. High-quality language kernels exist for the main languages of data sciences, such as &lt;a href=&quot;https://github.com/jupyter-xeus/xeus-python&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;https://github.com/jupyter-xeus/xeus-cling&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C++&lt;/a&gt;, &lt;a href=&quot;https://github.com/JuniperKernel/JuniperKernel&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;R&lt;/a&gt; or &lt;a href=&quot;https://github.com/JuliaLang/IJulia.jl&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Julia&lt;/a&gt;.&lt;br/&gt;But another important tool for data science is the SQL family of programming languages. Today, we announce the release of a Jupyter kernel for SQLite.&lt;/p&gt;

&lt;p id=&quot;f88a&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;This new kernel allows the user to use the complete SQLite syntax as well as some extra operations such as opening or closing a database file, or visualizing the data in different ways using Jupyter magics.&lt;/p&gt;

HTML and Text table visualizations for different Jupyter interfaces
&lt;p id=&quot;8303&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;To make the task of implementing a new Kernel for Jupyter easier, we make use of &lt;a href=&quot;https://github.com/jupyter-xeus/xeus&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong class=&quot;gg is&quot;&gt;Xeus&lt;/strong&gt;&lt;/a&gt;&lt;strong class=&quot;gg is&quot;&gt;,&lt;/strong&gt; a library providing a solid implementation ofthe Jupyter kernel protocol, so that we can focus on implementing the language-specific parts of the kernel.&lt;/p&gt;
&lt;p id=&quot;fa12&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;As a connection between SQLite’s native C implementation and C++ we’re using SRombauts’ library &lt;a href=&quot;https://github.com/SRombauts/SQLiteCpp&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong class=&quot;gg is&quot;&gt;SQLiteCpp&lt;/strong&gt;&lt;/a&gt;&lt;strong class=&quot;gg is&quot;&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p id=&quot;0ba3&quot; class=&quot;ge gs dq as gg b gh jf gt gj jg gu gl jh gv gn ji gw gp jj gx gr di&quot;&gt;xeus-SQLite is still under active development but it offers a fully functional SQLite interface and magics to perform higher-level operations that are outside of the scope of the SQL syntax, such as creating, opening, or closing SQLite databases. Some of the things you can do with xeus-SQLite are creating a new database, loading it, backing it up or deleting it. You can also check if a table exists, set and reset keys of a database and get information about it. You can find more about the use of these methods in SQLite’s &lt;a href=&quot;https://xeus-sqlite.readthedocs.io/en/latest/&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;c792&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;xeus-SQLite provides rich HTML display of tables in the Jupyter Notebook and Jupyter Lab. For the Jupyter Console we make use of the &lt;a href=&quot;https://github.com/p-ranav/tabulate&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong class=&quot;gg is&quot;&gt;tabulate&lt;/strong&gt;&lt;/a&gt; library for textual display.&lt;/p&gt;

Different commands being executed on xeus-SQLite

&lt;p id=&quot;b4ea&quot; class=&quot;ge gs dq as gg b gh jf gt gj jg gu gl jh gv gn ji gw gp jj gx gr di&quot;&gt;For the future of xeus-SQLite we want to create an intuitive form of visualizing data: creating plots, graphs, charts, maps and much more from your SQLite query results, all in the same notebook. Currently we’re exploring the use of &lt;a href=&quot;https://vega.github.io/vega/&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong class=&quot;gg is&quot;&gt;Vega&lt;/strong&gt;&lt;/a&gt; in xeus-SQLite, a declarative language for creating interactive visualization designs and can do bar plots using jupyter magics:&lt;/p&gt;

SQLite query result with bar and table outputs for same query
&lt;p id=&quot;cee2&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;This feature is still in very early stages and being developed in this &lt;a href=&quot;https://github.com/jupyter-xeus/xeus-sqlite/tree/vega-visualization&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;branch&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;f07b&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;We also plan on producing a static build of xeus-SQLite bundling xeus and the SQLite library into a single executable that can be easily distributed.&lt;/p&gt;
&lt;h2 id=&quot;2b62&quot; class=&quot;jo iu dq as ar iv jp jq jr js jt ju jv jw jx jy jz&quot;&gt;Try it online!&lt;/h2&gt;
&lt;p id=&quot;95b5&quot; class=&quot;ge gs dq as gg b gh jf gt gj jg gu gl jh gv gn ji gw gp jj gx gr di&quot;&gt;You can try the stable version without the need of installing anything on your computer just by clicking on the image below:&lt;/p&gt;


&lt;p id=&quot;6be0&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;This won’t grant you access to the experimental branch where we’re testing, if you’re interested in trying it please check the &lt;a href=&quot;https://github.com/jupyter-xeus/xeus-sqlite#installation&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;installation&lt;/a&gt; guide and make sure you’re in the right &lt;a href=&quot;https://github.com/jupyter-xeus/xeus-sqlite/tree/vega-visualization&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;branch&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;499a&quot; class=&quot;jo iu dq as ar iv jp jq jr js jt ju jv jw jx jy jz&quot;&gt;Installation&lt;/h2&gt;
&lt;p id=&quot;5822&quot; class=&quot;ge gs dq as gg b gh jf gt gj jg gu gl jh gv gn ji gw gp jj gx gr di&quot;&gt;Note that you first need to have Jupyter installed on your computer. You can install &lt;code class=&quot;hq kc kd ke kf b&quot;&gt;xeus-sqlite&lt;/code&gt; using mamba:&lt;/p&gt;
&lt;pre class=&quot;hd he hf hg hh kg kh bz&quot;&gt;
&lt;span id=&quot;bfa9&quot; class=&quot;jo iu dq as kf b et ki kj r kk&quot;&gt;mamba install xeus-sqlite -c conda-forge&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;d056&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;Or conda:&lt;/p&gt;
&lt;pre class=&quot;hd he hf hg hh kg kh bz&quot;&gt;
&lt;span id=&quot;89fc&quot; class=&quot;jo iu dq as kf b et ki kj r kk&quot;&gt;conda install xeus-sqlite -c conda-forge&lt;/span&gt;
&lt;/pre&gt;


&lt;p id=&quot;d8c9&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;My name is &lt;a href=&quot;https://twitter.com/3l3ktr&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mariana Meireles&lt;/a&gt; and I’m a software developer working for &lt;a href=&quot;http://quantstack.net/&quot; class=&quot;co fs gy gz ha hb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;QuantStack&lt;/a&gt;. I care deeply about the impacts that technology has in the world and try my best to be the change I want to see by contributing to open source projects that stand upon libre and diverse standards.&lt;/p&gt;
&lt;p id=&quot;250d&quot; class=&quot;ge gs dq as gg b gh gi gt gj gk gu gl gm gv gn go gw gp gq gx gr di&quot;&gt;Prior to QuantStack I worked as a developer on the PySide team at the Qt Company and as a web performance developer at Mozilla.&lt;/p&gt;
</description>
<pubDate>Tue, 16 Jun 2020 14:31:24 +0000</pubDate>
<dc:creator>Tomte</dc:creator>
<og:type>article</og:type>
<og:title>A Jupyter kernel for SQLite</og:title>
<og:description>While it is well known in the Python scientific computing community, Jupyter is in fact a language-agnostic development environment…</og:description>
<og:url>https://blog.jupyter.org/a-jupyter-kernel-for-sqlite-9549c5dcf551</og:url>
<og:image>https://miro.medium.com/max/453/1*pzPTGCJVgIO10N7OwOGWKw.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jupyter.org/a-jupyter-kernel-for-sqlite-9549c5dcf551?gi=28576257d00c</dc:identifier>
</item>
</channel>
</rss>