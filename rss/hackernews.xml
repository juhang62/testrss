<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Stripe records user movements on its customers&amp;#039; websites</title>
<link>https://mtlynch.io/stripe-recording-its-customers/</link>
<guid isPermaLink="true" >https://mtlynch.io/stripe-recording-its-customers/</guid>
<description>&lt;p&gt;Among startups and tech companies, Stripe seems to be the near-universal favorite for payment processing. When I needed paid subscription functionality for my new web app, Stripe felt like the natural choice. After integration, however, I discovered that Stripe’s official JavaScript library records all browsing activity on my site and reports it back to Stripe. This data includes:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Every URL the user visits on my site, including pages that never display Stripe payment forms&lt;/li&gt;
&lt;li&gt;Telemetry about how the user moves their mouse cursor while browsing my site&lt;/li&gt;
&lt;li&gt;Unique identifiers that allow Stripe to correlate visitors to my site against other sites that accept payment via Stripe&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This post shares what I found, who else it affects, and how you can limit Stripe’s data collection in your web applications.&lt;/p&gt;
&lt;h2 id=&quot;whos-affected&quot;&gt;Who’s affected? &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#whos-affected&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Stripe collects this data on your website if either of the following is true:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Your base page template includes the Stripe script tag:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;lt;script src=&quot;https://js.stripe.com/v3&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Your website is a single-page app, such as one created with React, Vue, or Angular, and you use Stripe to process payments.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I discovered this by accident while adding paid plans to my &lt;a href=&quot;https://assetrebalancer.com&quot;&gt;portfolio rebalancer&lt;/a&gt;. As part of development, I was using &lt;a href=&quot;https://portswigger.net/burp&quot;&gt;an HTTP proxy&lt;/a&gt; that allows me to inspect HTTP traffic from my browser.&lt;/p&gt;
&lt;p&gt;After successfully implementing my app’s payment flow with Stripe, I noticed that every page navigation generated a new HTTP POST request to a Stripe URL:&lt;/p&gt;
&lt;div class=&quot;video-inner&quot; readability=&quot;9&quot;&gt;Your browser does not support the video tag.
&lt;p&gt;The Stripe.js library reports back to Stripe every time I visit a new page in my app&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This was strange because none of the pages I visited contained any calls to Stripe’s library. In fact, my app doesn’t collect payment information from users until they create an account, but Stripe was making HTTP requests when I landed on my app’s homepage as a brand new user with no cookies or stored credentials.&lt;/p&gt;
&lt;h2 id=&quot;what-is-stripe-reporting&quot;&gt;What is Stripe reporting? &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#what-is-stripe-reporting&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All of the outgoing requests Stripe generated looked like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;POST /4 HTTP/1.1
Host: m.stripe.com
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: text/plain;charset=UTF-8
Content-Length: 692
Origin: https://m.stripe.network
Connection: close
Referer: https://m.stripe.network/inner.html
Cookie: m=e29f7c00-b748-4e5f-8625-34d14dbc1c01; m=e29f7c00-b748-4e5f-8625-34d14dbc1c01

JTdCJTIydjIlMjIlM0ExJTJDJTIyaWQlMjIlM0ElMjI4MTBiOWIxY2E3ODU5YzNlYzExYTY0NTI0NzNkMTZmYyUyMiUyQyUyMnQlMjIlM0E4JTJDJTIydGFnJTIyJTNBJTIyNC41LjIxJTIyJTJDJTIyc3JjJTIyJTNBJTIyanMlMjIlMkMlMjJhJTIyJTNBbnVsbCUyQyUyMmIlMjIlM0ElN0IlMjJhJTIyJTNBJTIyJTIyJTJDJTIyYiUyMiUzQSUyMmh0dHBzJTNBJTJGJTJGYXNzZXRyZWJhbGFuY2VyLmNvbSUyRnByaWNpbmclMjIlMkMlMjJjJTIyJTNBJTIyUG9ydGZvbGlvJTIwUmViYWxhbmNlciUyMiUyQyUyMmQlMjIlM0ElMjIxYjVhMDcxOS1jMTFjLTQwOTEtYWZiYi00NGE1MjRhMDM2ZGUlMjIlMkMlMjJlJTIyJTNBJTIyMWJhOTYwOWMtMjI0Ni00YjYwLTk1ZWUtYzg0YTRlNDhmOTkzJTIyJTJDJTIyZiUyMiUzQWZhbHNlJTJDJTIyZyUyMiUzQXRydWUlMkMlMjJoJTIyJTNBdHJ1ZSUyQyUyMmklMjIlM0ElNUIlMjJsb2NhdGlvbiUyMiU1RCUyQyUyMmolMjIlM0ElNUIlNUQlMkMlMjJuJTIyJTNBMTkzJTdEJTdE
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The string shown at the bottom, beginning with &lt;code&gt;JTdCJTIydj...&lt;/code&gt;, is a URL-encoded, base64-encoded JSON blob. The following bash commands decode it to a human-readable string:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;JTdCJTIydjIlMjIlM0ExJTJDJTIyaWQlMjIlM0ElMjI4MTBiOWIxY2E3ODU5YzNlYzExYTY0NTI0NzNkMTZmYyUyMiUyQyUyMnQlMjIlM0E4JTJDJTIydGFnJTIyJTNBJTIyNC41LjIxJTIyJTJDJTIyc3JjJTIyJTNBJTIyanMlMjIlMkMlMjJhJTIyJTNBbnVsbCUyQyUyMmIlMjIlM0ElN0IlMjJhJTIyJTNBJTIyJTIyJTJDJTIyYiUyMiUzQSUyMmh0dHBzJTNBJTJGJTJGYXNzZXRyZWJhbGFuY2VyLmNvbSUyRnByaWNpbmclMjIlMkMlMjJjJTIyJTNBJTIyUG9ydGZvbGlvJTIwUmViYWxhbmNlciUyMiUyQyUyMmQlMjIlM0ElMjIxYjVhMDcxOS1jMTFjLTQwOTEtYWZiYi00NGE1MjRhMDM2ZGUlMjIlMkMlMjJlJTIyJTNBJTIyMWJhOTYwOWMtMjI0Ni00YjYwLTk1ZWUtYzg0YTRlNDhmOTkzJTIyJTJDJTIyZiUyMiUzQWZhbHNlJTJDJTIyZyUyMiUzQXRydWUlMkMlMjJoJTIyJTNBdHJ1ZSUyQyUyMmklMjIlM0ElNUIlMjJsb2NhdGlvbiUyMiU1RCUyQyUyMmolMjIlM0ElNUIlNUQlMkMlMjJuJTIyJTNBMTkzJTdEJTdE&quot;&lt;/span&gt; &lt;span&gt;\
&lt;/span&gt;  | base64 --decode &lt;span&gt;\
&lt;/span&gt;  | python -c &lt;span&gt;&quot;import sys; import json; from urllib.parse import unquote; print(json.dumps(json.loads(unquote(sys.stdin.read())), indent=2, sort_keys=True))&quot;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;26&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
  &lt;span&gt;&quot;a&quot;&lt;/span&gt;: &lt;span&gt;null&lt;/span&gt;,
  &lt;span&gt;&quot;b&quot;&lt;/span&gt;: {
    &lt;span&gt;&quot;a&quot;&lt;/span&gt;: &lt;span&gt;&quot;&quot;&lt;/span&gt;,
    &lt;span&gt;&quot;b&quot;&lt;/span&gt;: &lt;span&gt;&quot;https://assetrebalancer.com/pricing&quot;&lt;/span&gt;,
    &lt;span&gt;&quot;c&quot;&lt;/span&gt;: &lt;span&gt;&quot;Portfolio Rebalancer&quot;&lt;/span&gt;,
    &lt;span&gt;&quot;d&quot;&lt;/span&gt;: &lt;span&gt;&quot;1b5a0719-c11c-4091-afbb-44a524a036de&quot;&lt;/span&gt;,
    &lt;span&gt;&quot;e&quot;&lt;/span&gt;: &lt;span&gt;&quot;1ba9609c-2246-4b60-95ee-c84a4e48f993&quot;&lt;/span&gt;,
    &lt;span&gt;&quot;f&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,
    &lt;span&gt;&quot;g&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,
    &lt;span&gt;&quot;h&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,
    &lt;span&gt;&quot;i&quot;&lt;/span&gt;: [
      &lt;span&gt;&quot;location&quot;&lt;/span&gt;
    ],
    &lt;span&gt;&quot;j&quot;&lt;/span&gt;: [],
    &lt;span&gt;&quot;n&quot;&lt;/span&gt;: &lt;span&gt;193&lt;/span&gt;
  },
  &lt;span&gt;&quot;id&quot;&lt;/span&gt;: &lt;span&gt;&quot;810b9b1ca7859c3ec11a6452473d16fc&quot;&lt;/span&gt;,
  &lt;span&gt;&quot;src&quot;&lt;/span&gt;: &lt;span&gt;&quot;js&quot;&lt;/span&gt;,
  &lt;span&gt;&quot;t&quot;&lt;/span&gt;: &lt;span&gt;8&lt;/span&gt;,
  &lt;span&gt;&quot;tag&quot;&lt;/span&gt;: &lt;span&gt;&quot;4.5.21&quot;&lt;/span&gt;,
  &lt;span&gt;&quot;v2&quot;&lt;/span&gt;: &lt;span&gt;1&lt;/span&gt;
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Stripe library generates a new request like this every time a user views a new page in my app. Each request looks pretty similar except that the URL field reflects whatever URL is in the address bar at the time of the request. It appeared that Stripe was recording every single pageview in my app. What’s more, Stripe records the full URL, including query parameters and URL fragments (e.g., &lt;code&gt;/account?id=12345#name=michael&lt;/code&gt;), which some websites use to store sensitive information.&lt;/p&gt;
&lt;p&gt;You may have noticed from the video that when I initially loaded the app, the first page generated two requests, whereas every other page load created only one. Here’s what I found when I decoded that second request:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
  &lt;span&gt;&quot;data&quot;&lt;/span&gt;: [
    &lt;span&gt;4669&lt;/span&gt;,
    &lt;span&gt;20&lt;/span&gt;,
    &lt;span&gt;26&lt;/span&gt;,
    &lt;span&gt;13&lt;/span&gt;,
    &lt;span&gt;21&lt;/span&gt;,
    &lt;span&gt;20&lt;/span&gt;,
    &lt;span&gt;40&lt;/span&gt;,
    &lt;span&gt;21&lt;/span&gt;,
    &lt;span&gt;25&lt;/span&gt;,
    &lt;span&gt;14&lt;/span&gt;
  ],
  &lt;span&gt;&quot;muid&quot;&lt;/span&gt;: &lt;span&gt;&quot;1b5a0719-c11c-4091-afbb-44a524a036de&quot;&lt;/span&gt;,
  &lt;span&gt;&quot;sid&quot;&lt;/span&gt;: &lt;span&gt;&quot;1ba9609c-2246-4b60-95ee-c84a4e48f993&quot;&lt;/span&gt;,
  &lt;span&gt;&quot;source&quot;&lt;/span&gt;: &lt;span&gt;&quot;mouse-timings-10&quot;&lt;/span&gt;,
  &lt;span&gt;&quot;url&quot;&lt;/span&gt;: &lt;span&gt;&quot;https://assetrebalancer.com/&quot;&lt;/span&gt;
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Based on the name &lt;code&gt;mouse-timings&lt;/code&gt;, it seems that Stripe is recording my users’ mouse movements.&lt;/p&gt;
&lt;p&gt;Lastly, each request contains the same cookie, uniquely identifying the user:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Cookie: m=e29f7c00-b748-4e5f-8625-34d14dbc1c01
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The cookie allows Stripe to track my users as they visit other sites across the web that integrate Stripe, even if they never see a payment form.&lt;/p&gt;
&lt;h2 id=&quot;is-this-a-mistake&quot;&gt;Is this a mistake? &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#is-this-a-mistake&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At first, I thought this was surely my mistake. There must have made a careless error in my Stripe integration that made it phone home erroneously.&lt;/p&gt;
&lt;p&gt;To investigate, I &lt;a href=&quot;https://google.com/search?q=https%3A%2F%2Fm.stripe.com%2F4&quot;&gt;googled the URL&lt;/a&gt; that was receiving the HTTP POST requests from my app:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;https://m.stripe.com/4
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead of finding a bug in my code, I discovered dozens of posts from other developers surprised to see this behavior in their apps. The reports go &lt;a href=&quot;https://stackoverflow.com/q/45718026/90388&quot;&gt;all the way back to 2017&lt;/a&gt;.&lt;/p&gt;
&lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/stripe-reports.png&quot;&gt;&lt;img class=&quot;img-border&quot; sizes=&quot;(min-width: 768px) 800px, 98vw&quot; srcset=&quot; /stripe-recording-its-customers/stripe-reports_hu0feacb3425c5d20f67f01519585fcbc4_258218_300x0_resize_lanczos_2.png 300w, /stripe-recording-its-customers/stripe-reports_hu0feacb3425c5d20f67f01519585fcbc4_258218_600x0_resize_lanczos_2.png 600w, /stripe-recording-its-customers/stripe-reports_hu0feacb3425c5d20f67f01519585fcbc4_258218_800x0_resize_lanczos_2.png 800w, /stripe-recording-its-customers/stripe-reports_hu0feacb3425c5d20f67f01519585fcbc4_258218_1200x0_resize_lanczos_2.png 1200w, /stripe-recording-its-customers/stripe-reports.png 1733w&quot; src=&quot;https://mtlynch.io/stripe-recording-its-customers/stripe-reports.png&quot; alt=&quot;Collage of previous users reports about this behavior&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Developers have been posting on StackOverflow and Github about Stripe’s tracking behavior for years&lt;/p&gt;
&lt;p&gt;In one of the issue threads on Github, a Stripe employee &lt;a href=&quot;https://github.com/stripe/react-stripe-elements/issues/99#issuecomment-528987443&quot;&gt;suggested that this behavior was unintentional&lt;/a&gt; and Stripe would look for a fix:&lt;/p&gt;
&lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/asolove-comment.png&quot;&gt;&lt;img class=&quot;img-border&quot; sizes=&quot;(min-width: 768px) 756px, 98vw&quot; srcset=&quot; /stripe-recording-its-customers/asolove-comment_hu2f48127328b8a9afee8f2226a276eb9b_53513_300x0_resize_lanczos_2.png 300w, /stripe-recording-its-customers/asolove-comment_hu2f48127328b8a9afee8f2226a276eb9b_53513_600x0_resize_lanczos_2.png 600w, /stripe-recording-its-customers/asolove-comment.png 754w&quot; src=&quot;https://mtlynch.io/stripe-recording-its-customers/asolove-comment.png&quot; alt=&quot;Screenshot of Adam Solove's comment on Github&quot;/&gt;&lt;/a&gt;
&lt;p&gt;In a &lt;a href=&quot;https://github.com/stripe/react-stripe-elements/issues/99#issuecomment-528987443&quot;&gt;Github comment&lt;/a&gt;, a Stripe employee suggests that Stripe.js should only send data when the app calls the library and only on pages where the user submits payment information.&lt;/p&gt;
&lt;p&gt;That was 7 months ago, and there has been no follow up from Stripe on that thread or anywhere else I could find.&lt;/p&gt;
&lt;h2 id=&quot;confirming-the-issue&quot;&gt;Confirming the issue &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#confirming-the-issue&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To be sure that nothing else in my app was triggering this behavior, I &lt;a href=&quot;https://github.com/mtlynch/stripe-snooping-example&quot;&gt;created a minimal project&lt;/a&gt; to reproduce the issue. It’s a barebones Vue app with only the &lt;a href=&quot;https://www.npmjs.com/package/@stripe/stripe-js&quot;&gt;&lt;code&gt;@stripe/stripe-js&lt;/code&gt; npm package&lt;/a&gt; installed.&lt;/p&gt;
&lt;p&gt;My experiments confirmed that the following line causes the Stripe library to load and initiate user tracking:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; { loadStripe } from &lt;span&gt;'@stripe/stripe-js'&lt;/span&gt;;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that my app never even &lt;em&gt;calls&lt;/em&gt; the &lt;code&gt;loadStripe&lt;/code&gt; function. Stripe.js begins tracking user behavior as soon as the client app imports the library. For a single-page app, this occurs the moment the end-user loads any page of the website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;loadStripe&lt;/code&gt; is a misleading name because Stripe loads before the client application ever calls that function. A more appropriate name would be &lt;code&gt;ensureStripeIsLoaded&lt;/code&gt; because the function’s real job is to queue any of the app’s API calls until the Stripe library has finished loading.&lt;/p&gt;
&lt;h2 id=&quot;reporting-this-to-stripe&quot;&gt;Reporting this to Stripe &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#reporting-this-to-stripe&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/email-to-stripe-support.txt&quot;&gt;reported this issue to Stripe support&lt;/a&gt; to see whether it was intended behavior and how to prevent it.&lt;/p&gt;
&lt;p&gt;Stripe responded promptly to tell me that user tracking was by design, and I should, in fact, welcome this functionality:&lt;/p&gt;
&lt;blockquote readability=&quot;15.974874371859&quot;&gt;
&lt;p&gt;Hi Michael,&lt;/p&gt;
&lt;p&gt;Thanks for getting in touch. Faith here from Stripe support.&lt;/p&gt;
&lt;p&gt;Jumping right in, the calls being seen are by design in order to detect fraud and is in the best interests of the user. According to the docs: “To best leverage Stripe’s advanced fraud functionality, include this script on every page, not just the checkout page. This allows Stripe to detect anomalous behavior that may be indicative of fraud as customers browse your website.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stripe.com/docs/js/including&quot;&gt;https://stripe.com/docs/js/including&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please let us know should you run into any other issues or have any other concerns.&lt;/p&gt;
&lt;p&gt;All the best,&lt;br/&gt;Faith&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The “in the best interests of the user” line felt particularly patronizing. The party benefiting most from this data collection is clearly Stripe and not the user. Stripe is getting free data to train its fraud-detection models and potentially selling that information to advertisers.&lt;/p&gt;
&lt;p&gt;For the user, Stripe.js degrades their experience by forcing them to download an extra JavaScript library and sending extra HTTP requests from their browser. This happens even if the user never visits a page that accepts credit card payments.&lt;/p&gt;
&lt;h2 id=&quot;is-stripe-disclosing-this&quot;&gt;Is Stripe disclosing this? &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#is-stripe-disclosing-this&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I looked around for an official disclosure from Stripe about this behavior, but I couldn’t find anything. The closest I found is this vague paragraph on &lt;a href=&quot;https://www.npmjs.com/package/@stripe/stripe-js&quot;&gt;their npm package description&lt;/a&gt;, which the Stripe support rep quoted to me:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;To best leverage Stripe’s advanced fraud functionality, ensure that Stripe.js is loaded on every page, not just your checkout page. This allows Stripe to detect anomalous behavior that may be indicative of fraud as customers browse your website.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;a href=&quot;https://stripe.com/privacy&quot;&gt;privacy policy&lt;/a&gt; is a bit more specific about the data they collect, but it implies that they’re collecting this data on stripe.com rather than on customer sites:&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;Our Sites use cookies and other technologies to function effectively. These technologies record information about your use of our Sites, including:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Browser and device data, such as IP address, device type, operating system and Internet browser type, screen resolution, operating system name and version, device manufacturer and model, language, plug-ins, add-ons and the language version of the Sites you are visiting;&lt;/li&gt;
&lt;li&gt;Usage data, such as time spent on the Sites, pages visited, links clicked, language preferences, and the pages that led or referred you to our Sites.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We also may collect information about your online activities on websites and connected devices over time and across third-party websites, devices, apps and other online features and services.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Worryingly, the privacy policy also includes loose wording that allows Stripe to sell this data to advertisers:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;When you visit our Sites or online services, both we and certain third parties collect information about your online activities over time and across different sites to provide you with advertising about products and services tailored to your individual interests (this type of advertising is called “interest-based advertising”).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For site owners to prevent this invasive tracking from Stripe, there are two problems to solve:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Delay execution of Stripe’s library until the user reaches a page where payment is required&lt;/li&gt;
&lt;li&gt;Unload the Stripe library after the user completes payment.&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;solving-problem-one-defer-stripes-script-loading&quot;&gt;Solving problem one: defer Stripe’s script loading &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#solving-problem-one-defer-stripes-script-loading&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As mentioned &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#confirming-the-issue&quot;&gt;above&lt;/a&gt;, Stripe begins executing as soon as the app imports the library. Some developers intentionally prevent this behavior by &lt;a href=&quot;https://stackoverflow.com/a/61248986/90388&quot;&gt;adding asynchronous wrapper functions&lt;/a&gt; or using &lt;a href=&quot;https://webpack.js.org/guides/code-splitting/&quot;&gt;code splitting&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fortunately, the stripe-js v.1.4.0 release, published last week &lt;a href=&quot;https://github.com/stripe/stripe-js/issues/43#issuecomment-614864800&quot;&gt;offers a cleaner solution&lt;/a&gt;. The update introduced the &lt;code&gt;@stripe/stripe-js/pure&lt;/code&gt; import path, which allows clients to import Stripe without side-effects:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;import&lt;/span&gt; { loadStripe } from &lt;span&gt;'@stripe/stripe-js/pure'&lt;/span&gt;;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This delays Stripe’s library execution until the app explicitly calls the &lt;code&gt;loadStripe&lt;/code&gt; function. If you limit calls to the &lt;code&gt;loadStripe&lt;/code&gt; function only to pages or components that involve Stripe payments, Stripe will only load on those pages, thus preventing user tracking earlier in the browsing session.&lt;/p&gt;
&lt;h3 id=&quot;solving-problem-two-unloading-stripe-after-payment&quot;&gt;Solving problem two: unloading Stripe after payment &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#solving-problem-two-unloading-stripe-after-payment&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Deferring Stripe’s library load is only half the battle. Even if you load Stripe only at payment time, their JavaScript persists in your app and continues tracking the user for the rest of their session. To prevent this, your app must force Stripe to unload when the customer’s payment is complete.&lt;/p&gt;
&lt;p&gt;Stripe unfortunately offers no supported way to unload its library or disable its user monitoring. One intrepid developer &lt;a href=&quot;https://github.com/stripe/react-stripe-elements/issues/99#issuecomment-522045812&quot;&gt;created a JavaScript snippet to aggressively unload all Stripe code&lt;/a&gt;, but it’s specific to React and is, by nature, a brittle solution because it depends on undocumented properties of the Stripe library that may change at any time.&lt;/p&gt;
&lt;p&gt;I addressed the issue in my app by forcing an HTTP reload when the user exits my payment page. In Vue, the &lt;a href=&quot;https://router.vuejs.org/guide/advanced/navigation-guards.html#in-component-guards&quot;&gt;&lt;code&gt;beforeRouteLeave&lt;/code&gt;&lt;/a&gt; hook executes before leaving the page. I added a hook that interrupts the routing process and forces the application to make a full HTTP request to the next route:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;beforeRouteLeave(to) {
  &lt;span&gt;// Force an HTTP request instead of a JavaScript route change because we need
&lt;/span&gt;  &lt;span&gt;// a new page load that does *not* import Stripe.
&lt;/span&gt;  &lt;span&gt;window&lt;/span&gt;.location.replace(to.path);
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;optional-content-security-policy-for-defense-in-depth&quot;&gt;(optional) Content Security Policy for defense in depth &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#optional-content-security-policy-for-defense-in-depth&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The previous two steps are sufficient to prevent Stripe’s tracking. For additional protection, apply &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&quot;&gt;Content Security Policy&lt;/a&gt; (CSP) to restrict Stripe to your payment pages.&lt;/p&gt;
&lt;p&gt;Here’s what it looks like for my app:&lt;/p&gt;
&lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/stripe-csp.png&quot;&gt;&lt;img sizes=&quot;(min-width: 768px) 815px, 98vw&quot; srcset=&quot; /stripe-recording-its-customers/stripe-csp_hu0256bd851b21eae71838e75d524d53ca_52651_300x0_resize_lanczos_2.png 300w, /stripe-recording-its-customers/stripe-csp_hu0256bd851b21eae71838e75d524d53ca_52651_600x0_resize_lanczos_2.png 600w, /stripe-recording-its-customers/stripe-csp_hu0256bd851b21eae71838e75d524d53ca_52651_800x0_resize_lanczos_2.png 800w, /stripe-recording-its-customers/stripe-csp.png 815w&quot; src=&quot;https://mtlynch.io/stripe-recording-its-customers/stripe-csp.png&quot; alt=&quot;Screenshot of CSP headers on my payment page vs. a normla page&quot;/&gt;&lt;/a&gt;
&lt;p&gt;&lt;a href=&quot;https://assetrebalancer.com&quot;&gt;Portfolio Rebalancer&lt;/a&gt; uses per-page &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&quot;&gt;Content Security Policy&lt;/a&gt; to prevent Stripe from loading anywhere in the app except the payment page.&lt;/p&gt;
&lt;p&gt;It’s a bit tricky to implement per-page CSP in a single-page app because the browser, by default, won’t query the server for new policies when the user navigates to a new page. To force a policy refresh, I use Vue’s &lt;a href=&quot;https://router.vuejs.org/guide/advanced/navigation-guards.html#in-component-guards&quot;&gt;&lt;code&gt;beforeRouteEnter&lt;/code&gt;&lt;/a&gt; guard on my payment page to force a new HTTP request when the page loads.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;beforeRouteEnter(to, from) {
  &lt;span&gt;// If we're landing on this page from another route, force an HTTP request
&lt;/span&gt;  &lt;span&gt;// so that we retrieve the route-specific Content Security Policy header.
&lt;/span&gt;  &lt;span&gt;if&lt;/span&gt; (from.matched.length &amp;gt; &lt;span&gt;0&lt;/span&gt;) {
    &lt;span&gt;window&lt;/span&gt;.location.replace(to.path);
  }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s probably not worth implementing CSP solely to hobble Stripe, but if you have a working policy in place, it provides additional assurance that Stripe’s library runs only on your payment pages.&lt;/p&gt;

&lt;p&gt;To see Stripe’s behavior on a live site, I created a minimal Vue app that demonstrates this behavior:&lt;/p&gt;

&lt;p&gt;Websites that use Stripe to collect payment usually include Stripe’s JavaScript library within their application. Integrating it according to Stripe’s documentation causes the library to share user tracking data with Stripe throughout the user’s browsing session, even on pages that do not interact with Stripe or display payment forms. This data includes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Full URLs of each page the user visits, including query parameters and URL fragments&lt;/li&gt;
&lt;li&gt;Timings of how quickly the user moves their mouse during browsing&lt;/li&gt;
&lt;li&gt;A cookie that allows Stripe to track the same user across the web&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Stripe does not clearly disclose their collection of this data, and they make it difficult for client applications to limit the library’s tracking behavior.&lt;/p&gt;
&lt;p&gt;When discussing the issue informally, Stripe has &lt;a href=&quot;https://github.com/stripe/react-stripe-elements/issues/99#issuecomment-528987443&quot;&gt;publicly stated&lt;/a&gt; that they use the data exclusively for fraud protection and diagnostics, but language in their &lt;a href=&quot;https://stripe.com/privacy&quot;&gt;privacy policy&lt;/a&gt; suggests that they may also use or sell it for marketing purposes.&lt;/p&gt;
&lt;h2 id=&quot;recommendations-to-stripe&quot;&gt;Recommendations to Stripe &lt;a href=&quot;https://mtlynch.io/stripe-recording-its-customers/#recommendations-to-stripe&quot; class=&quot;hanchor&quot; arialabel=&quot;Anchor&quot;&gt;🔗︎&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given how seriously Stripe seems to take security and privacy, it’s surprising that they have been collecting so much data from their customers with so little transparency. My hope is that this is simply an oversight that’s persisted because too few customers have noticed.&lt;/p&gt;
&lt;p&gt;There are several actions Stripe can take to rectify this situation:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Clearly disclose data sharing.
&lt;ul&gt;&lt;li&gt;The npm package pages and the Stripe.js documentation should clearly define what browsing and telemetry data the library transmits to Stripe when a client application integrates it.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Support library unloading.
&lt;ul&gt;&lt;li&gt;Give client applications a supported mechanism to unload Stripe after the app has collected a user’s payment.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Grant client applications control over what data to share via opt-in.
&lt;ul&gt;&lt;li&gt;Stripe clients bear the cost of chargebacks against their application, so they should decide how much information to share with Stripe to reduce those chargebacks.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;notice notice-info&quot; readability=&quot;18.16958041958&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update: 2020-04-21, 2:47pm ET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Stripe co-founder Patrick Collison &lt;a href=&quot;https://news.ycombinator.com/item?id=22937303&quot;&gt;responded to this article&lt;/a&gt; reasserting Stripe’s commitment to use the data collected exclusively for fraud detection. He added that Stripe will soon clarify language in its terms of service around their data collection practices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Correction&lt;/strong&gt;: The article originally said, “Websites that use Stripe to collect payment &lt;strong&gt;must&lt;/strong&gt; include Stripe’s JavaScript library,” but Collison points out that this is inaccurate, as it is possible for websites to integrate with Stripe without using the Stripe JS library.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 21 Apr 2020 17:01:03 +0000</pubDate>
<dc:creator>mtlynch</dc:creator>
<og:title>Stripe is Silently Recording Your Movements On its Customers' Websites</og:title>
<og:description>An investigation into how Stripe tracks your users and what you can do to prevent it</og:description>
<og:type>article</og:type>
<og:url>https://mtlynch.io/stripe-recording-its-customers/</og:url>
<og:image>https://mtlynch.io/stripe-recording-its-customers/og-image.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://mtlynch.io/stripe-recording-its-customers/</dc:identifier>
</item>
<item>
<title>Show HN: I made a Chrome extension to stop mindless browsing</title>
<link>https://www.getintention.com/</link>
<guid isPermaLink="true" >https://www.getintention.com/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.getintention.com/&quot;&gt;https://www.getintention.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22936742&quot;&gt;https://news.ycombinator.com/item?id=22936742&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 324&lt;/p&gt;
&lt;p&gt;# Comments: 101&lt;/p&gt;
</description>
<pubDate>Tue, 21 Apr 2020 16:54:41 +0000</pubDate>
<dc:creator>dkthehuman</dc:creator>
<og:title>Intention</og:title>
<og:description>Build the habit of focus.</og:description>
<og:type>website</og:type>
<og:image>https://getintention.com/static/og-image-c6bdf95d4cd2cb9c9ce8f9aa0f2568cd.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.getintention.com/</dc:identifier>
</item>
<item>
<title>GitHub is degraded/down</title>
<link>https://githubstatus.com/</link>
<guid isPermaLink="true" >https://githubstatus.com/</guid>
<description>&lt;p&gt;&lt;strong&gt;Resolved&lt;/strong&gt; - This incident has been resolved.&lt;br/&gt;&lt;small&gt;Apr &lt;var data-var=&quot;date&quot;&gt;21&lt;/var&gt;, &lt;var data-var=&quot;time&quot;&gt;17:06&lt;/var&gt; UTC&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; - We have rolled out a fix and are monitoring recovery.&lt;br/&gt;&lt;small&gt;Apr &lt;var data-var=&quot;date&quot;&gt;21&lt;/var&gt;, &lt;var data-var=&quot;time&quot;&gt;16:29&lt;/var&gt; UTC&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; - We have identified a source for the elevated errors and are working on mitigation.&lt;br/&gt;&lt;small&gt;Apr &lt;var data-var=&quot;date&quot;&gt;21&lt;/var&gt;, &lt;var data-var=&quot;time&quot;&gt;16:16&lt;/var&gt; UTC&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; - We are continuing to investigate degradations in GitHub.com services.&lt;br/&gt;&lt;small&gt;Apr &lt;var data-var=&quot;date&quot;&gt;21&lt;/var&gt;, &lt;var data-var=&quot;time&quot;&gt;16:01&lt;/var&gt; UTC&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Investigating&lt;/strong&gt; - We are investigating degradations to GitHub.com.&lt;br/&gt;&lt;small&gt;Apr &lt;var data-var=&quot;date&quot;&gt;21&lt;/var&gt;, &lt;var data-var=&quot;time&quot;&gt;15:45&lt;/var&gt; UTC&lt;/small&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 21 Apr 2020 15:41:52 +0000</pubDate>
<dc:creator>juancampa</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.githubstatus.com/</dc:identifier>
</item>
<item>
<title>Remote software developers earn more than non-remote developers</title>
<link>https://whoisnnamdi.com/remote-software-developers-earn-more/</link>
<guid isPermaLink="true" >https://whoisnnamdi.com/remote-software-developers-earn-more/</guid>
<description>&lt;p&gt;&lt;em&gt;This post is an excerpt from my &lt;a href=&quot;https://whoisnnamdi.com/highest-paid-software-engineers-2020/&quot;&gt;2020 software developer pay analysis&lt;/a&gt;. Read the rest of the analysis &lt;a href=&quot;https://whoisnnamdi.com/highest-paid-software-engineers-2020/&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Organizations around the world have pivoted to remote work to shield themselves against the &lt;a href=&quot;https://www.cdc.gov/coronavirus/2019-ncov/index.html&quot;&gt;novel coronavirus / COVID-19&lt;/a&gt; threat.&lt;/p&gt;
&lt;p&gt;The sudden change prompts numerous questions. To start, how will this new (for some &lt;a href=&quot;https://about.gitlab.com/company/culture/all-remote/&quot;&gt;but not all&lt;/a&gt;) paradigm affect the way we work and collaborate?&lt;/p&gt;
&lt;p&gt;One piece of good news among all the dread—remote work could lead to higher take-home pay, at least for software engineers.&lt;/p&gt;
&lt;h2 id=&quot;remote-work-pays&quot;&gt;Remote work pays&lt;/h2&gt;
&lt;div class=&quot;igraph&quot;&gt;&lt;a href=&quot;https://plot.ly/~whoisnnamdi/82/?share_key=A4rtkRSqRGar7d19Zq3Xf6&quot; target=&quot;_blank&quot; title=&quot;Remote Work&quot;&gt;&lt;img src=&quot;https://plot.ly/~whoisnnamdi/82.png?share_key=AeS6BZEpGR5FXWfIFa29gc&quot; alt=&quot;Remote Work&quot; width=&quot;600&quot; onerror=&quot;this.onerror=null;this.src='https://plot.ly/404.png';&quot;/&gt;&lt;/a&gt; &lt;/div&gt;
&lt;p&gt;Fully-remote software developers earn &lt;strong&gt;21.9%&lt;/strong&gt; more than developers who never or rarely work remote.&lt;/p&gt;
&lt;p&gt;Even once I &lt;a href=&quot;https://en.wikipedia.org/wiki/Controlling_for_a_variable&quot;&gt;control&lt;/a&gt; for various observable factors (including &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;experience&lt;/code&gt;, &lt;code&gt;hours worked&lt;/code&gt;, &lt;code&gt;size of employer&lt;/code&gt;, &lt;code&gt;programming languages&lt;/code&gt;, and &lt;a href=&quot;https://whoisnnamdi.com/highest-paid-software-engineers-2020/&quot;&gt;more&lt;/a&gt;), fully-remote software developers earn &lt;strong&gt;9.4%&lt;/strong&gt; more than developers who never or only rarely work remotely.&lt;/p&gt;
&lt;p&gt;Further, the remote work pay advantage increases proportionately with the time spent working remotely. Therefore, fully-remote developers earn more than&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;those who work remotely more than half the time, who earn more than&lt;/li&gt;
&lt;li&gt;those who work remotely roughly half the time, who earn more than&lt;/li&gt;
&lt;li&gt;those who work remotely less than half the time.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Even working only a few days each month yields a substantial pay advantage of &lt;strong&gt;15.5%&lt;/strong&gt; on average and &lt;strong&gt;4.9%&lt;/strong&gt; controlling for observable factors, and the estimates are quite precise.&lt;/p&gt;
&lt;p&gt;In other words, &lt;strong&gt;half or more of the benefit comes from being able to work remotely at least a small portion of the time&lt;/strong&gt; (vs. not at all), while the remainder comes from increased remote time, maxing out at fully-remote.&lt;/p&gt;
&lt;p&gt;This is an impressive result.&lt;/p&gt;
&lt;p&gt;While I can’t be sure this is &lt;a href=&quot;https://towardsdatascience.com/causal-vs-statistical-inference-3f2c3e617220&quot;&gt;causal&lt;/a&gt;, the &lt;strong&gt;large apparent effects&lt;/strong&gt; (even after controlling for other variables) paired with the &lt;strong&gt;clear upward trend&lt;/strong&gt; as remote work increases gives me confidence there is something real here.&lt;/p&gt;
&lt;section class=&quot;subscribe-form&quot;&gt;&lt;h3 class=&quot;subscribe-form-title&quot;&gt;Receive a report with the full results&lt;/h3&gt;

&lt;/section&gt;&lt;h2 id=&quot;wait-but-why&quot;&gt;Wait but why?&lt;/h2&gt;
&lt;p&gt;The obvious next question is… &lt;em&gt;why&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Hard to say—by definition the adjusted pay premium already controls for any other data I had access to.&lt;/p&gt;
&lt;p&gt;However, I can show how the other factors contribute to the explainable premium (i.e. the gap between the unadjusted and adjusted pay premium):&lt;/p&gt;
&lt;div class=&quot;igraph&quot;&gt;&lt;a href=&quot;https://plot.ly/~whoisnnamdi/84/?share_key=A4rtkRSqRGar7d19Zq3Xf6&quot; target=&quot;_blank&quot; title=&quot;Explaining Remote Work&quot;&gt;&lt;img src=&quot;https://plot.ly/~whoisnnamdi/84.png?share_key=AeS6BZEpGR5FXWfIFa29gc&quot; alt=&quot;Explaining Remote Work&quot; width=&quot;600&quot; onerror=&quot;this.onerror=null;this.src='https://plot.ly/404.png';&quot;/&gt;&lt;/a&gt; &lt;/div&gt;
&lt;p&gt;Here we can see some of the other factors contributing to the pay advantage for fully-remote developers:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;years of professional coding experience&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;age&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;and a variable that proxies for the &lt;code&gt;influence&lt;/code&gt; a developer has within their organization (their decision making power over new technology purchases)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Combined with other &lt;a href=&quot;https://www.theanalysisfactor.com/what-is-a-confounding-variable/&quot;&gt;confounding variables&lt;/a&gt;, these account for &lt;strong&gt;12.5 percentage points&lt;/strong&gt; of the 21.9 percentage point pay advantage.&lt;/p&gt;
&lt;p&gt;Much of the apparent premium earned by remote developers is in fact driven by seniority and tenure. These are older, more experienced developers who either prefer to work remote or whose organizations grant them that privilege.&lt;/p&gt;
&lt;div class=&quot;igraph&quot;&gt;&lt;a href=&quot;https://plot.ly/~whoisnnamdi/80/?share_key=A4rtkRSqRGar7d19Zq3Xf6&quot; target=&quot;_blank&quot; title=&quot;Years of Professional Coding Experience vs. Remote Work&quot;&gt;&lt;img src=&quot;https://plot.ly/~whoisnnamdi/80.png?share_key=AeS6BZEpGR5FXWfIFa29gc&quot; alt=&quot;Years of Professional Coding Experience vs. Remote Work&quot; width=&quot;600&quot; onerror=&quot;this.onerror=null;this.src='https://plot.ly/404.png';&quot;/&gt;&lt;/a&gt; &lt;/div&gt;
&lt;p&gt;That said, the remaining &lt;strong&gt;9.4%&lt;/strong&gt; adjusted pay advantage for fully-remote developers is nothing to scoff at. The other variables cannot explain this meaningful earnings bump.&lt;/p&gt;
&lt;h2 id=&quot;this-one-weird-trick&quot;&gt;This one weird trick&lt;/h2&gt;
&lt;p&gt;I find an economically and statistically significant pay premium for remote developers, even those who are only away from the office a few days each month. In fact, &lt;em&gt;most of the earnings gains&lt;/em&gt; come from this initial foray into remote work, while the rest come with additional hours spent away from the office.&lt;/p&gt;
&lt;p&gt;Would this hold in a world where remote work is more the norm than the exception? No idea.&lt;/p&gt;
&lt;p&gt;Does this apply to non-software developers? Again, can’t say.&lt;/p&gt;
&lt;p&gt;But it’s an interesting result nonetheless, and one that deserves further investigation as more knowledge workers shift their work online and away from the corporate office—&lt;a href=&quot;https://www.cdc.gov/coronavirus/2019-ncov/index.html&quot;&gt;virus&lt;/a&gt; or no virus.&lt;/p&gt;
&lt;section class=&quot;subscribe-form&quot;&gt;&lt;h3 class=&quot;subscribe-form-title&quot;&gt;Receive my next thought in your inbox&lt;/h3&gt;

&lt;/section&gt;</description>
<pubDate>Tue, 21 Apr 2020 14:58:56 +0000</pubDate>
<dc:creator>ashitlerferad</dc:creator>
<og:type>article</og:type>
<og:title>Remote Software Developers Earn 22% More Than Non-Remote Developers</og:title>
<og:description>Working remote even just a few days per month leads to higher pay</og:description>
<og:url>https://whoisnnamdi.com/remote-software-developers-earn-more/</og:url>
<og:image>https://whoisnnamdi.com/content/images/2020/03/WorkRemote-4.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://whoisnnamdi.com/remote-software-developers-earn-more/</dc:identifier>
</item>
<item>
<title>Ok Google – it&amp;#039;s time you discovered cyclists</title>
<link>https://www.cyklistbloggen.se/dear-google-its-time-for-cyclists/</link>
<guid isPermaLink="true" >https://www.cyklistbloggen.se/dear-google-its-time-for-cyclists/</guid>
<description>&lt;p&gt;Dear Google.&lt;/p&gt;
&lt;p&gt;Here is a humble suggestion from us as cyclists, especially urgent in Corona times. We see how people around the world turn to the bicycle to get to where they are going and at the same time avoid overcrowded busses and trams.&lt;/p&gt;
&lt;iframe width=&quot;459&quot; height=&quot;344&quot; src=&quot;https://www.youtube.com/embed/cyrV_lMFv9o?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;Here is where you both can be a part, and improve!&lt;/p&gt;
&lt;p&gt;One of the great challenges a cyclists, especially as a newcomer like all those corona-driven cyclists, faces is the infrastructure. Across the globe (not looking at you Amsterdam and Copenhagen), the infrastructure for cyclists is lacking, poorly designed, and not very intuitive organised.&lt;/p&gt;
&lt;p&gt;Getting around on a bicycle can be a hassle. Add to that often lack of directional road signs, the cyclists struggle is real.&lt;/p&gt;
&lt;p&gt;Google on the other hand has Google Maps and Waze, both giving excellent driving directions. When you are in a car.&lt;/p&gt;
&lt;img src=&quot;https://www.cyklistbloggen.se/content/images/2020/04/No-commute.png&quot; class=&quot;kg-image&quot;/&gt;No commute for you
&lt;p&gt;There is directional funtionality for cyclists, but it's lacking. We remember back in 2012 &lt;a href=&quot;https://maps.googleblog.com/2012/08/half-gigameter-of-biking-navigation-in.html&quot;&gt;when you announced this functionality&lt;/a&gt; (illustrated by a picture of our home town Stockholm no less). &lt;a href=&quot;https://www.cyklistbloggen.se/recension-google-cykelnavigering/&quot;&gt;We tried it then&lt;/a&gt;, but didn't find it useful at the time. It has improved somewhat, but there are still issues.&lt;/p&gt;
&lt;p&gt;Its often outdated. Cycling is going through rapid expansion in many places, and Google maps doesn't keep up.&lt;/p&gt;
&lt;p&gt;Its often plain wrong, suggesting cumbersome detours.&lt;/p&gt;
&lt;p&gt;It doesn't appear to factor in aspects unique to cycling, for instance difference in elevation, when calculating the best route. There are no options such as &quot;avoid gravel roads&quot; or &quot;prefer traffic separated roads&quot;.&lt;/p&gt;
&lt;p&gt;Also, there are no means to choose multimodal travel. When you go by car you often go from a to b using the same mode of transportation - the car.&lt;/p&gt;
&lt;p&gt;When by bike you might want to do part of the journey on bike, part of it by bus or other public transport.&lt;/p&gt;
&lt;p&gt;In short, it treats the cycle as a car, but with access to less information.&lt;/p&gt;
&lt;img src=&quot;https://www.cyklistbloggen.se/content/images/2020/04/Be-carfuel.png&quot; class=&quot;kg-image&quot;/&gt;Be careful, directions might not always be real.
&lt;p&gt;Another thing its lacking is Streetview. Streetview is brilliant if you want to check a destination, look for parking et cetera. However there are precious few bike paths present in Streetview. Often this isn't an issue, since you can follow the adjacent road instead. But with dedicated bike paths without road next to it, you are out of luck. We guess this differs across the world, a quick check of the Netherlands shows that a lot of freestanding bike paths are there, but not all.&lt;/p&gt;
&lt;p&gt;Our guess is that you rely on local entrepreneurs for all Street View mapping not reachable by car.&lt;/p&gt;&lt;p&gt;So, our suggestion is this:&lt;/p&gt;
&lt;p&gt;When it comes to addressing road directional functionality: consider aquiring an already present service such as Strava. Using their database of ever updating heatmaps you should be able to improve you directional services, by letting your AI learn from actual cyclists.&lt;/p&gt;
&lt;img src=&quot;https://www.cyklistbloggen.se/content/images/2020/04/Screen-Shot-20-04-21-at-12-37-10.JPG&quot; class=&quot;kg-image&quot;/&gt;Strava &lt;a href=&quot;https://www.strava.com/heatmap#13.62/-0.10079/51.50270/hot/all&quot;&gt;heatmap&lt;/a&gt; London
&lt;p&gt;Or even better, since the Strava crowd might lean towards the excercing segment, start your own. For instance, give those already permitting locations sharing, an option to classify themselves as &quot;cyclists&quot; or even &quot;commuting cyclists&quot; and use that data to see how cyclists get around in cities. With enough participants you should also be able to see when the map becomes out-of-date, for instance when new roads changes the behaviour of everyday commuters. Add an option to report road blockage, something sadly common when it comes to bicycle paths.&lt;/p&gt;&lt;p&gt;When it comes to mapping freestanding bike paths in Streetview, consider getting your car-flottilla an addition of bikes (as a bonus you will increase the overall health and well being of your employees!) and/or cooperate with local bicycle organzations.&lt;/p&gt;&lt;p&gt;Because its time.  Map services for motorists are great and has been for several years. Google can be a force to expand that, to also help cyclists across the globe getting around safe and fast, which surely should be a part of a search company's core business?&lt;/p&gt;
&lt;img src=&quot;https://www.cyklistbloggen.se/content/images/2020/04/9599461299_784923688c_k.jpg&quot; class=&quot;kg-image&quot;/&gt;Google bikes at Google HQ Photo: &lt;a href=&quot;https://www.flickr.com/photos/romanboed/9599461299&quot;&gt;R Boed/Flickr&lt;/a&gt; &lt;a href=&quot;https://creativecommons.org/licenses/by/2.0/&quot;&gt;CC BY 2.0&lt;/a&gt;</description>
<pubDate>Tue, 21 Apr 2020 14:35:31 +0000</pubDate>
<dc:creator>pivip</dc:creator>
<og:type>article</og:type>
<og:title>Ok Google - it's time you discovered cyclists</og:title>
<og:description>Dear Google. Here is a humble suggestion from us as cyclists, especially urgent in Corona times. We see how people around the world turn to the bicycle to get to where they are going and at the same time avoid overcrowded busses and trams. Here is where you both can</og:description>
<og:url>https://www.cyklistbloggen.se/dear-google-its-time-for-cyclists/</og:url>
<og:image>https://www.cyklistbloggen.se/content/images/2020/04/9599461299_784923688c_k-1.jpg</og:image>
<dc:language>sv</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cyklistbloggen.se/dear-google-its-time-for-cyclists/</dc:identifier>
</item>
<item>
<title>A possible new back end for Rust</title>
<link>https://jason-williams.co.uk/a-possible-new-backend-for-rust</link>
<guid isPermaLink="true" >https://jason-williams.co.uk/a-possible-new-backend-for-rust</guid>
<description>&lt;p&gt;Meanwhile, there exists &lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/README.md&quot;&gt;Cranelift&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt;, a [machine] code generator written in Rust developed by the Bytecode Alliance&lt;sup&gt;8&lt;/sup&gt;. &lt;/p&gt;
&lt;p&gt;It generates code for WebAssembly and replaces the optimizing compiler in Firefox. It was designed to generate code fast (using parallelism) but is generic enough to be a compile target, meaning just like LLVM you can compile any language to its IR and have it do the rest.&lt;/p&gt;
&lt;p&gt;The idea of using it for Rust has floated around for years&lt;sup&gt;9&lt;/sup&gt;, and why not? It introduces some healthy competition on the backend, is defined for speedy compilation and the Rust team (plus Mozilla) would be able to help steer the design goals. There’s also the added bonus of giving rustaceans an all-rust compiler for the first time compared to the Rust/C++ hybrid that exists today.&lt;/p&gt;
&lt;p&gt;Of course, Cranelift may not be able to catch-up with LLVM’s optimizations and support for all those architectures, but using it for debug builds could prove useful.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em&gt;“One of the things is that LLVM has several layers of IR while Cranelift has only one. Another is that Cranelift does use a graph coloring register allocator, but simply a dumber one, thus being faster.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That’s Bjorn3, he decided to experiment in this area whilst on a summer vacation, and a year &amp;amp; half later single-handedly (bar a couple of PRs) achieved a working Cranelift frontend. The effort here cannot be understated, this is usually the work of an entire team not a curious student in his spare time. There’s worry about the high bus-factor but I can imagine this made the initial development process faster.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;“I have the freedom to change what I want whenever I want. Sometimes there are problems I can’t solve myself though as I am not familiar enough with the respective area. For example object files, linkers and DWARF debuginfo. Luckily I know people who do know a lot about those things.”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So &lt;a href=&quot;https://github.com/bjorn3/rustc_codegen_cranelift&quot;&gt;rustc_codegen_cranelift&lt;/a&gt; (cg_clif for short) exists and has existed quietly in the background for some time, not only it proved worthwhile as a proof-of-concept, it exceeded expectations. In 2018 measurements showed it being 33% faster to compile.&lt;sup&gt;10&lt;/sup&gt; In 2020 we’re seeing anything from 20-80% depending on the crate.&lt;sup&gt;11&lt;/sup&gt; That’s an incredible feat considering there are more improvements in sight.&lt;/p&gt;
&lt;p&gt;There are bits and pieces missing, such as partial SIMD support, ABI Compatibility, unsized values and many more. There’s also lack of feature parity with Cranelift itself, such as cg_clif being blocked because Cranelift doesn’t support a feature LLVM does. However, these problems are shrinking and most crates do build today.&lt;/p&gt;
</description>
<pubDate>Tue, 21 Apr 2020 13:39:58 +0000</pubDate>
<dc:creator>obl</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://jason-williams.co.uk/a-possible-new-backend-for-rust</dc:identifier>
</item>
<item>
<title>Show HN: Pattern.css – CSS-only library to fill empty background with patterns</title>
<link>https://github.com/bansal-io/pattern.css</link>
<guid isPermaLink="true" >https://github.com/bansal-io/pattern.css</guid>
<description>&lt;p&gt;CSS only library to fill your empty background with beautiful patterns.&lt;/p&gt;
&lt;p&gt;See the full &lt;a href=&quot;https://bansal.io/pattern-css&quot; rel=&quot;nofollow&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/bansal-io/pattern.css/blob/master/preview.jpg&quot;&gt;&lt;img src=&quot;https://github.com/bansal-io/pattern.css/raw/master/preview.jpg&quot; alt=&quot;Preview&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Only CSS. No JavaScript!&lt;/li&gt;
&lt;li&gt;&amp;lt; 1KB minified and gzipped!&lt;/li&gt;
&lt;li&gt;Supports all modern browsers&lt;/li&gt;
&lt;li&gt;Built Using SCSS.&lt;/li&gt;
&lt;li&gt;Full color control.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;via npm&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
npm install pattern.css
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;via cdn&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/pattern.css&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;download&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dist/pattern.min.css&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;pattern.css can be used with any css framework.&lt;/p&gt;
&lt;h3&gt;With shorthand framework&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pattern-checks-sm bg-blue white&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;With bootstrap framework&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pattern-checks-sm bg-primary text-white&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Pattern Classes&lt;/h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;small&lt;/th&gt;
&lt;th&gt;medium&lt;/th&gt;
&lt;th&gt;large&lt;/th&gt;
&lt;th&gt;extra large&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;24&quot;&gt;&lt;tr&gt;&lt;td&gt;pattern-checks-sm&lt;/td&gt;
&lt;td&gt;pattern-checks-md&lt;/td&gt;
&lt;td&gt;pattern-checks-lg&lt;/td&gt;
&lt;td&gt;pattern-checks-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pattern-grid-sm&lt;/td&gt;
&lt;td&gt;pattern-grid-md&lt;/td&gt;
&lt;td&gt;pattern-grid-lg&lt;/td&gt;
&lt;td&gt;pattern-grid-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pattern-dots-sm&lt;/td&gt;
&lt;td&gt;pattern-dots-md&lt;/td&gt;
&lt;td&gt;pattern-dots-lg&lt;/td&gt;
&lt;td&gt;pattern-dots-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pattern-cross-dots-sm&lt;/td&gt;
&lt;td&gt;pattern-cross-dots-md&lt;/td&gt;
&lt;td&gt;pattern-cross-dots-lg&lt;/td&gt;
&lt;td&gt;pattern-cross-dots-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;pattern-diagonal-lines-sm&lt;/td&gt;
&lt;td&gt;pattern-diagonal-lines-md&lt;/td&gt;
&lt;td&gt;pattern-diagonal-lines-lg&lt;/td&gt;
&lt;td&gt;pattern-diagonal-lines-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;pattern-horizontal-lines-sm&lt;/td&gt;
&lt;td&gt;pattern-horizontal-lines-md&lt;/td&gt;
&lt;td&gt;pattern-horizontal-lines-lg&lt;/td&gt;
&lt;td&gt;pattern-horizontal-lines-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;pattern-vertical-lines-sm&lt;/td&gt;
&lt;td&gt;pattern-vertical-lines-md&lt;/td&gt;
&lt;td&gt;pattern-vertical-lines-lg&lt;/td&gt;
&lt;td&gt;pattern-vertical-lines-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;pattern-diagonal-stripes-sm&lt;/td&gt;
&lt;td&gt;pattern-diagonal-stripes-md&lt;/td&gt;
&lt;td&gt;pattern-diagonal-stripes-lg&lt;/td&gt;
&lt;td&gt;pattern-diagonal-stripes-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;pattern-horizontal-stripes-sm&lt;/td&gt;
&lt;td&gt;pattern-horizontal-stripes-md&lt;/td&gt;
&lt;td&gt;pattern-horizontal-stripes-lg&lt;/td&gt;
&lt;td&gt;pattern-horizontal-stripes-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;pattern-vertical-stripes-sm&lt;/td&gt;
&lt;td&gt;pattern-vertical-stripes-md&lt;/td&gt;
&lt;td&gt;pattern-vertical-stripes-lg&lt;/td&gt;
&lt;td&gt;pattern-vertical-stripes-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pattern-triangles-sm&lt;/td&gt;
&lt;td&gt;pattern-triangles-md&lt;/td&gt;
&lt;td&gt;pattern-triangles-lg&lt;/td&gt;
&lt;td&gt;pattern-triangles-xl&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;pattern-zigzag-sm&lt;/td&gt;
&lt;td&gt;pattern-zigzag-md&lt;/td&gt;
&lt;td&gt;pattern-zigzag-lg&lt;/td&gt;
&lt;td&gt;pattern-zigzag-xl&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
</description>
<pubDate>Tue, 21 Apr 2020 10:42:20 +0000</pubDate>
<dc:creator>bansal10</dc:creator>
<og:image>https://repository-images.githubusercontent.com/256725670/8695b700-8420-11ea-8164-c60d0d1380fd</og:image>
<og:type>object</og:type>
<og:title>bansal-io/pattern.css</og:title>
<og:url>https://github.com/bansal-io/pattern.css</og:url>
<og:description>CSS only library to fill empty background with beautiful patterns. - bansal-io/pattern.css</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/bansal-io/pattern.css</dc:identifier>
</item>
<item>
<title>Vercel, formerly Zeit, raises $21M Series A</title>
<link>https://vercel.com/blog/zeit-is-now-vercel</link>
<guid isPermaLink="true" >https://vercel.com/blog/zeit-is-now-vercel</guid>
<description>&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Today, we have some very special news regarding the evolution of our company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;strong&gt;ZEIT is now Vercel&lt;/strong&gt;. This new identity aligns with our new focus — to provide the ultimate workflow for developing, previewing, and shipping Jamstack sites.&lt;/p&gt;
&lt;/div&gt;



&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;In 2016, we started with a simple goal: empowering solo developers to effortlessly deploy their apps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;There is an overwhelming layer of technology and terminology in web development: domain setup with DNS and SSL, networking with TCP and HTTP, caching with CDN and Edge Networks... it's a huge list. It creates much complexity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;Our first product, &lt;code class=&quot;jsx-1410075273&quot;&gt;now&lt;/code&gt;, focused on simplifying deployments:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-parser&quot; readability=&quot;10&quot;&gt;


&lt;p class=&quot;jsx-1461231563&quot;&gt;The original tweet announcing `now`. With a single command, we helped&lt;br class=&quot;geist-hide-on-mobile&quot;/&gt;
developers get their apps and services live, inclusive of SSL and built-in routing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Developers loved &lt;code class=&quot;jsx-1410075273&quot;&gt;now&lt;/code&gt;. Tired of boilerplate, they appreciated the ability to trivially deploy, share, and scale their apps. The positive response was motivating — we were stoked!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;10.266666666667&quot;&gt;
&lt;div class=&quot;jsx-3616248093&quot; readability=&quot;15.644444444444&quot;&gt;Since then, we have invested all our energy into building products that simplify developer experience. Our open-source React framework &lt;a href=&quot;https://nextjs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;Next.js&lt;/a&gt; is the most notable of them. At organizations big and small, it has become &lt;em&gt;the&lt;/em&gt; framework to build React apps due to its simple learning curve, versatility, and performance.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Today, Next.js powers over &lt;strong&gt;35,000 sites&lt;/strong&gt; at companies like Uber, Nike, and Starbucks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-parser&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;jsx-1461231563&quot;&gt;A selection of companies using Next.js.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;In these 4 years, ZEIT has gone from being a simple idea to a thriving community. 300,000+ frontend engineers and designers are using our technology to bring their ideas to life — whether company websites, SaaS products, or personal blogs.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8.6648936170213&quot;&gt;
&lt;div class=&quot;jsx-3616248093&quot; readability=&quot;12.515957446809&quot;&gt;From observing our community, we know that &lt;strong&gt;frontend engineers&lt;/strong&gt; are more productive than ever. Frameworks like &lt;a href=&quot;https://nextjs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;Next.js&lt;/a&gt; eliminate boilerplate, and serverless APIs give them &lt;strong&gt;full-stack powers&lt;/strong&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;Projects that once took months to develop, are getting completed by lean teams of frontend engineers and designers in days. These teams want to iterate rapidly, and collaboratively. They want to develop, preview, and ship at the speed of thought. They don't want to leave their browsers, and other tools they're already working with. That's where we come in.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;We enable teams to &lt;strong&gt;develop&lt;/strong&gt;, &lt;strong&gt;preview&lt;/strong&gt;, and &lt;strong&gt;ship&lt;/strong&gt; their apps faster, and with confidence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-parser&quot;&gt;
&lt;div class=&quot;jsx-2174258595 geist-container&quot;&gt;
&lt;h2 class=&quot;geist-text geist-text-no-margin h2&quot;&gt;Develop. Preview. Ship.&lt;/h2&gt;
&lt;div class=&quot;terminal_animation__3n3CY&quot;&gt;
&lt;div class=&quot;terminal_terminal__3yABm&quot;&gt;
&lt;div class=&quot;jsx-403666147 jsx-4200605631 window console-container&quot;&gt;

&lt;div class=&quot;jsx-403666147 jsx-4200605631 body&quot;&gt;
&lt;div class=&quot;jsx-3700742008 console&quot;&gt;
&lt;pre duration=&quot;2000&quot;&gt;
&lt;span class=&quot;jsx-423883211 prompt&quot;&gt;&lt;span class=&quot;jsx-423883211 triangle&quot;&gt;▲&lt;/span&gt; &lt;strong&gt;acme&lt;/strong&gt; [new-logo] ~ &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;For teams, Vercel closes the gap between development, feedback and release phase. Anyone can set up Vercel in a couple of clicks — no DevOps knowledge necessary.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;We use Vercel to build Vercel. We are constantly examining every interaction in own team workflow, and are obsessed about removing every little source of friction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;We have already introduced multiple updates focused on teams. Most recently:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;We look forward to adding even more to our team features in the weeks to come.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;As we expand our outlook, we felt this new focus merited a new identity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;As of today, we are re-establishing our brand identity as &lt;strong&gt;Vercel&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-parser&quot;&gt;

&lt;p class=&quot;jsx-1461231563&quot;&gt;The new Vercel logo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;em&gt;Vercel&lt;/em&gt; strongly connects to the words &lt;em&gt;versatile&lt;/em&gt;, &lt;em&gt;accelerate&lt;/em&gt;, and &lt;em&gt;excel&lt;/em&gt;. It aligns with the benefits our platform offers: &lt;strong&gt;faster and better product collaboration&lt;/strong&gt;, across every team in your organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;We are introducing a new logotype for the brand, which we will use across our product and marketing. We decided to retain our signature triangle logo, although we have simplified it.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;To accelerate us in our mission, we have raised $21M in Series A funding. Our investors have led early design at Facebook and Dropbox, created frameworks like React, and are running companies like GitHub, Sentry, and Auth0. We are thrilled to count them as partners in our mission.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-parser&quot; readability=&quot;7&quot;&gt;

&lt;p class=&quot;jsx-1461231563&quot;&gt;Our experienced investors and angel investors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;This new funding ensures an ever improving Vercel product experience and allows us to continue investing in our open-source projects like Next.js.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Vercel is the easiest way to deploy any Jamstack site in 2020.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;7.4601063829787&quot;&gt;
&lt;div class=&quot;jsx-3616248093&quot; readability=&quot;10.531914893617&quot;&gt;If you're new to our community, welcome! We encourage you to deploy with us — it takes 15 seconds to get started with &lt;strong&gt;&lt;a href=&quot;https://vercel.com/import&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;zero-config deployments&lt;/a&gt;&lt;/strong&gt;, and our unlimited usage Hobby plan is free.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-parser&quot;&gt;
&lt;div class=&quot;jsx-1361708662 geist-container geist-card jsx-3901913455&quot;&gt;
&lt;div class=&quot;jsx-3865947319 geist-container lg-row&quot;&gt;
&lt;div class=&quot;jsx-1361708662 geist-container&quot; readability=&quot;5.5796460176991&quot;&gt;
&lt;div class=&quot;jsx-2613985291 wrapper&quot; readability=&quot;6.8672566371681&quot;&gt;

&lt;h2 class=&quot;geist-text geist-text-no-margin h3&quot;&gt;From Git Repository&lt;/h2&gt;
&lt;p class=&quot;geist-text body-2&quot;&gt;Import your project from an existing GitHub, GitLab or Bitbucket repository.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;jsx-1361708662 geist-container&quot; readability=&quot;4.4873949579832&quot;&gt;
&lt;div class=&quot;jsx-2613985291 wrapper&quot; readability=&quot;5.2352941176471&quot;&gt;

&lt;h2 class=&quot;geist-text geist-text-no-margin h3&quot;&gt;From Template&lt;/h2&gt;
&lt;p class=&quot;geist-text body-2&quot;&gt;Select one of our optimized framework boilerplates and start from scratch.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;If you're an existing customer — you'll find that none of your existing workflows, pricing plans, or projects have changed. We're more focused than ever on helping you succeed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8.3259911894273&quot;&gt;
&lt;div class=&quot;jsx-3616248093&quot; readability=&quot;12.026431718062&quot;&gt;Over the next few weeks, we will begin to update our branding across all of our products, communication channels, and open-source projects. We have compiled a &lt;a href=&quot;https://www.notion.so/zeithq/FAQ-c726facaf7cc41c095ba49aeea90219e&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;comprehensive FAQ&lt;/a&gt; that offers details about our full migration plan.&lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;lean&quot; data-components-heading=&quot;true&quot;&gt;&lt;span id=&quot;conclusion&quot; class=&quot;jsx-573693548 target&quot;/&gt;&lt;a href=&quot;https://vercel.com/blog/zeit-is-now-vercel#conclusion&quot; class=&quot;jsx-573693548&quot;&gt;Conclusion&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;ZEIT is rebranding to Vercel. It's the same passionate team, with the same attention to detail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;8.8727915194346&quot;&gt;
&lt;div class=&quot;jsx-3616248093&quot; readability=&quot;12.816254416961&quot;&gt;With a new focus on the &lt;strong&gt;develop&lt;/strong&gt;, &lt;strong&gt;preview&lt;/strong&gt;, &lt;strong&gt;ship&lt;/strong&gt; workflow and a &lt;strong&gt;$21M Series A&lt;/strong&gt;, we're excited to take developer productivity to the next level. In his &lt;a href=&quot;https://rauchg.com/2020/vercel&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;blog&lt;/a&gt;, our CEO Guillermo Rauch has written about the industry trends surrounding Jamstack, and the thought process behind our new focus.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;6.4342105263158&quot;&gt;
&lt;div class=&quot;jsx-3616248093&quot; readability=&quot;8.5789473684211&quot;&gt;Our &lt;a href=&quot;https://www.notion.so/Rebrand-Field-Book-1cab2369ab1c4d8db1987b68708be683&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;Rebrand Field Book&lt;/a&gt; details our full product migration plan, including a list of changes with relevant dates. If you have any unanswered questions, please &lt;a href=&quot;mailto:support@vercel.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;jsx-591875979 undefined&quot;&gt;reach out&lt;/a&gt; and we'll gladly help.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jsx-3751313775 wrapper&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;As always, we are incredibly grateful for your never-ending support. There are many more milestones to come and we invite you to join us on this journey.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 21 Apr 2020 09:52:38 +0000</pubDate>
<dc:creator>mxschmitt</dc:creator>
<og:title>ZEIT is now Vercel - Vercel</og:title>
<og:url>https://vercel.com/blog/zeit-is-now-vercel</og:url>
<og:description>Today, we have some very special news regarding the evolution of our company.</og:description>
<og:image>https://assets.zeit.co/image/upload/v1587402679/front/blog/zeit-is-now-vercel/og-image.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://vercel.com/blog/zeit-is-now-vercel</dc:identifier>
</item>
<item>
<title>Netflix now supports TLS 1.3</title>
<link>https://netflixtechblog.com/how-netflix-brings-safer-and-faster-streaming-experience-to-the-living-room-on-crowded-networks-78b8de7f758c</link>
<guid isPermaLink="true" >https://netflixtechblog.com/how-netflix-brings-safer-and-faster-streaming-experience-to-the-living-room-on-crowded-networks-78b8de7f758c</guid>
<description>&lt;div readability=&quot;6.2608695652174&quot;&gt;

&lt;div class=&quot;eh&quot;&gt;
&lt;div class=&quot;n ei ej ek el&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://netflixtechblog.com/@NetflixTechBlog?source=post_page-----78b8de7f758c----------------------&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Netflix Technology Blog&quot; class=&quot;r em en eo&quot; src=&quot;https://miro.medium.com/fit/c/96/96/1*ty4NvNrGg4ReETxqU2N3Og.png&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id=&quot;2974&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;By Sekwon Choi&lt;/p&gt;
&lt;p id=&quot;f4d0&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;At Netflix, we are obsessed with the best streaming experiences. We want playback to start instantly and to never stop unexpectedly in any network environment. We are also committed to protecting users’ privacy and service security without sacrificing any part of the playback experience.&lt;/p&gt;
&lt;p id=&quot;a9fb&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;To achieve that, we are efficiently using ABR (adaptive bitrate streaming) for a better playback experience, DRM (Digital Right Management) to protect our service and TLS (Transport Layer Security) to protect customer privacy and to create a safer streaming experience.&lt;/p&gt;
&lt;p id=&quot;7a7b&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;Netflix on consumer electronics devices such as TVs, set-top boxes and streaming sticks was until recently using TLS 1.2 for streaming traffic. Now we support TLS 1.3 for safer and faster experiences.&lt;/p&gt;

&lt;p id=&quot;6e2b&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;For two parties to communicate securely, a secure channel is necessary. This needs to have the following three properties.&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;49e7&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy hq hr hs&quot;&gt;Authentication: Identity of the communicating party is verified.&lt;/li&gt;
&lt;li id=&quot;9ae3&quot; class=&quot;gl gm dp ba gn b go ht gq hu gs hv gu hw gw hx gy hq hr hs&quot;&gt;Confidentiality: Data sent over the channel is only visible to the endpoints.&lt;/li&gt;
&lt;li id=&quot;54f1&quot; class=&quot;gl gm dp ba gn b go ht gq hu gs hv gu hw gw hx gy hq hr hs&quot;&gt;Integrity: Data sent over the channel cannot be modified by attackers without detection.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;cbd9&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;The TLS protocol is designed to provide a secure channel between two peers by providing tools and methods to achieve the above properties.&lt;/p&gt;

&lt;p id=&quot;35a2&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;TLS 1.3 is the latest version of the Transport Layer Security protocol. It is simpler, more secure and more efficient than its predecessor.&lt;/p&gt;
&lt;h2 id=&quot;e651&quot; class=&quot;hy ha dp ba az hb hz ia ib ic id ie if ig ih ii ij&quot;&gt;Perfect Forward Secrecy&lt;/h2&gt;
&lt;p id=&quot;bc61&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;One thing we believe is very important at Netflix is providing PFS (Perfect Forward Secrecy).&lt;/p&gt;
&lt;p id=&quot;a47e&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;PFS is a feature of the key exchange algorithm that assures that session keys will not be compromised, even if the server’s private key is compromised. By generating new keys for each session, PFS protects past sessions against the future compromise of secret keys.&lt;/p&gt;
&lt;p id=&quot;8417&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;TLS 1.2 supports key exchange algorithms with PFS, but it also allows key exchange algorithms that do not support PFS. Even with the previous version of TLS 1.2, Netflix has always selected a key exchange algorithm that provides PFS such as ECDHE (Elliptic Curve Diffie Hellman Ephemeral). TLS 1.3, however, enforces this concept even more by removing all the key exchange algorithms that do not provide PFS, such as static RSA.&lt;/p&gt;
&lt;h2 id=&quot;07ba&quot; class=&quot;hy ha dp ba az hb hz ia ib ic id ie if ig ih ii ij&quot;&gt;Authenticated Encryption&lt;/h2&gt;
&lt;p id=&quot;7e56&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;For encryption, TLS 1.3 removes all weak ciphers and uses only Authenticated Encryption with Associated Data (AEAD). This assures the confidentiality, integrity, and authenticity of the data. We use AES Galois/Counter Mode, as it also provides good performance and high throughput.&lt;/p&gt;
&lt;h2 id=&quot;b499&quot; class=&quot;hy ha dp ba az hb hz ia ib ic id ie if ig ih ii ij&quot;&gt;Secure Handshake&lt;/h2&gt;
&lt;p id=&quot;2dfc&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;While the above changes are important, the most important change in TLS 1.3 is perhaps its redesign of the handshake protocol.&lt;/p&gt;
&lt;p id=&quot;baa2&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;The TLS 1.2 handshake was not designed to protect the integrity of the entire handshake. It protected only the part of the handshake after the cipher suite negotiation and this opened up the possibility of downgrade attacks which may allow the attackers to force the use of insecure cipher suites.&lt;/p&gt;
&lt;p id=&quot;d293&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;With TLS 1.3, the server signs the entire handshake including the cipher suite negotiation and thus prevents the attacker from downgrading the cipher suite.&lt;/p&gt;
&lt;p id=&quot;3dd5&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;Also in TLS 1.2, extensions were sent in the clear in the ServerHello. Now with TLS 1.3, even extensions are encrypted and all handshake messages after ServerHello are now encrypted.&lt;/p&gt;
&lt;h2 id=&quot;1695&quot; class=&quot;hy ha dp ba az hb hz ia ib ic id ie if ig ih ii ij&quot;&gt;Reduced Handshake&lt;/h2&gt;
&lt;p id=&quot;3e7c&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;TLS 1.2 supports numerous key exchange algorithms, cipher suites and digital signatures, including weak and vulnerable ones. Therefore, it requires more messages to perform a handshake and two network round trips.&lt;/p&gt;
&lt;p id=&quot;6f44&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;In contrast, the handshake in TLS 1.3 now requires only one round trip, with a simplified design and with all weak and vulnerable algorithms removed.&lt;/p&gt;
&lt;p id=&quot;8b01&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;In addition, it has a new feature called 0-RTT, or TLS early data, for the resumed handshake. This allows an application to include application data with its initial handshake message, instead of having to wait until the handshake completes.&lt;/p&gt;
&lt;p id=&quot;ac2e&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;At Netflix, by the efficient resumption of the TLS session and careful use of 0-RTT for the streaming data, we can reduce the play delay.&lt;/p&gt;


&lt;p id=&quot;920c&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;We were pretty confident that TLS 1.3 would bring us better security from the analysis of its protocol composition, but we did not know how it would perform in the context of streaming.&lt;/p&gt;
&lt;p id=&quot;c5de&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;Since TLS 1.3’s performance-related feature is the 0-RTT mode with the resumed handshake, our hypothesis is that TLS 1.3 would reduce play delay, as we are no longer required to wait for the handshake to finish and we can instead issue the HTTP request for media data and receive the HTTP response for media data earlier.&lt;/p&gt;
&lt;p id=&quot;c1ab&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;To see the actual performance of TLS 1.3 in the field, we performed an experiment with&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;82f6&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy hq hr hs&quot;&gt;User accounts: half-million user accounts per cell.&lt;/li&gt;
&lt;li id=&quot;25fb&quot; class=&quot;gl gm dp ba gn b go ht gq hu gs hv gu hw gw hx gy hq hr hs&quot;&gt;Device type: mid-performance device with Quad ARM core @ 1.7GHz.&lt;/li&gt;
&lt;li id=&quot;fce4&quot; class=&quot;gl gm dp ba gn b go ht gq hu gs hv gu hw gw hx gy hq hr hs&quot;&gt;Control cell: TLS 1.2&lt;/li&gt;
&lt;li id=&quot;6955&quot; class=&quot;gl gm dp ba gn b go ht gq hu gs hv gu hw gw hx gy hq hr hs&quot;&gt;Treatment cell: TLS 1.3&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;ddff&quot; class=&quot;hy ha dp ba az hb hz ia ib ic id ie if ig ih ii ij&quot;&gt;Play Delay&lt;/h2&gt;
&lt;p id=&quot;2757&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;Play Delay is defined by how long it takes for playback to start. Below are the results of the play delay measured in the experiment. The results imply that on slower or congested networks, which can be represented by the quantiles of at least 0.75, TLS 1.3 achieves the largest gains, with improvements across all network conditions.&lt;/p&gt;

&lt;p id=&quot;49e4&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;Below is the time series median play delay graph for this mid-performance device in the field. It also shows that playback starts earlier with TLS 1.3.&lt;/p&gt;

&lt;h2 id=&quot;b950&quot; class=&quot;hy ha dp ba az hb hz ia ib ic id ie if ig ih ii ij&quot;&gt;Media Rebuffer&lt;/h2&gt;
&lt;p id=&quot;b409&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;At Netflix, we define a media rebuffer as a non-network originated rebuffer. It typically occurs when media data is not processed quickly enough by the device due to the high load on the CPU. Comparing the control cell with TLS 1.2, the experiment cell with TLS 1.3 showed about a 7.4% improvement in media rebuffers. This result implies that using TLS 1.3 with 0-RTT is more efficient and can reduce the CPU load.&lt;/p&gt;


&lt;p id=&quot;4496&quot; class=&quot;gl gm dp ba gn b go hl gq hm gs hn gu ho gw hp gy dh&quot;&gt;From the security analysis, we are confident that TLS 1.3 improves communication security over TLS 1.2. From the field test, we are confident that TLS 1.3 provides us a better streaming experience.&lt;/p&gt;
&lt;p id=&quot;50cf&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;At the time of writing this article, the Internet is experiencing higher than usual traffic and congestion. We believe saving even small amounts of data and round trips can be meaningful and even better if it also provides a more secure and efficient streaming experience.&lt;/p&gt;
&lt;p id=&quot;1bf0&quot; class=&quot;gl gm dp ba gn b go gp gq gr gs gt gu gv gw gx gy dh&quot;&gt;Therefore, we have started deploying TLS 1.3 on newer consumer electronics devices and we are expecting even more devices to be deployed with TLS 1.3 capability in the near future.&lt;/p&gt;
</description>
<pubDate>Tue, 21 Apr 2020 09:08:22 +0000</pubDate>
<dc:creator>caution</dc:creator>
<og:type>article</og:type>
<og:title>How Netflix brings safer and faster streaming experience to the living room on crowded networks…</og:title>
<og:description>By Sekwon Choi</og:description>
<og:url>https://netflixtechblog.com/how-netflix-brings-safer-and-faster-streaming-experience-to-the-living-room-on-crowded-networks-78b8de7f758c</og:url>
<og:image>https://miro.medium.com/max/1109/1*6Hkq1ZCussPA1s-qtcuYOg.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://netflixtechblog.com/how-netflix-brings-safer-and-faster-streaming-experience-to-the-living-room-on-crowded-networks-78b8de7f758c?gi=606c8ad8ea62</dc:identifier>
</item>
<item>
<title>Why should I have written ZeroMQ in C, not C++ (2012)</title>
<link>http://250bpm.com/blog:4</link>
<guid isPermaLink="true" >http://250bpm.com/blog:4</guid>
<description>&lt;div class=&quot;list-pages-box&quot; readability=&quot;4.5652173913043&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.7826086956522&quot;&gt;
&lt;p&gt;&lt;strong&gt;Previous:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:3&quot;&gt;Silicon Valley, Hollywood and Iceland as the New Superpower&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;list-pages-box&quot; readability=&quot;3.9574468085106&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.0851063829787&quot;&gt;
&lt;p&gt;&lt;strong&gt;Next:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:5&quot;&gt;Distributed Computing: The Survey Pattern&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Just to be clear from the very beginning: This is not going to be a Torvalds-ish rant against C++ from the point of view of die-hard C programmer.&lt;/p&gt;
&lt;p&gt;I've been using C++ whole my professional career and it's still my language of choice when doing most projects.&lt;/p&gt;
&lt;p&gt;Naturally, when I started ZeroMQ project back in 2007, I've opted for C++. The main reasons were:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Library of data structures and algorithms (STL) is part of the language. With C I would have to either depend on a 3rd party library or had to write basic algorithms of my own in 1970's manner.&lt;/li&gt;
&lt;li&gt;C++ enforces some basic consistency in the coding style. For example, having the implicit 'this' parameter doesn't allow to pass pointer to the object being worked on using several disparate mechanisms as it often happens to be the case with C projects. Same applies to explicit marking of member variables as private and many other features of the language.&lt;/li&gt;
&lt;li&gt;This point is actually a subset of the previous one, but it's worth of explicit mention: Implementing virtual functions in C is pretty complex and tends to be slightly different for each class which makes understanding and managing the code a pain.&lt;/li&gt;
&lt;li&gt;And finally: Everybody loves destructors being invoked automatically at the end of the block.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Now, almost 5 years later, I would like to publicly admit that using C++ was a poor choice and explain why I believe it is so.&lt;/p&gt;
&lt;p&gt;First, it's important to take into account that ZeroMQ was intended to be a piece of infrastructure with continuous uptime. It should never fail and never exhibit undefined behaviour. Thus, the error handling was of utmost importance. It had to be very explicit and unforgiving.&lt;/p&gt;
&lt;p&gt;C++ exceptions just didn't fill the bill. They are great for guaranteeing that program doesn't fail — just wrap the main function in try/catch block and you can handle all the errors in a single place.&lt;/p&gt;
&lt;p&gt;However, what's great for avoiding straightforward failures becomes a nightmare when your goal is to guarantee that no undefined behaviour happens. The decoupling between raising of the exception and handling it, that makes avoiding failures so easy in C++, makes it virtually impossible to guarantee that the program never runs info undefined behaviour.&lt;/p&gt;
&lt;p&gt;With C, the raising of the error and handling it are tightly couped and reside at the same place in the source code. This makes it easy to understand what happens if error happens:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;int rc = fx ();
if (rc != 0)
    handle_error ();&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With C++ you just throw the error. What happens then is not at all obvious:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;int rc = fx ();
if (rc != 0)
    throw std::exception ();&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem with that is that you have no idea of who and where is going to handle the exception. As long as the handling code is in the same function the error handling often remains more of less sane although not very readable:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code&gt;try {
    ...
    int rc = fx ();
    if (rc != 0)
        throw std::exception (&quot;Error!&quot;);
    ...
catch (std::exception &amp;amp;e) {
    handle_exception ();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, consider what happens when there are two different errors thrown in the same function:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class exception1 {};
class exception2 {};

try {
    ...
    if (condition1)
        throw my_exception1 ();
    ...
    if (condition2)
        throw my_exception2 ();
    ...
}
catch (my_exception1 &amp;amp;e) {
    handle_exception1 ();
}
catch (my_exception2 &amp;amp;e) {
    handle_exception2 ();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compare that to its C equivalent:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;...
if (condition1)
   handle_exception1 ();
...
if (condition2)
   handle_exception2 ();
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's far more readable and — as a bonus — compiler is likely to produce more efficient code.&lt;/p&gt;
&lt;p&gt;However, it doesn't end there. Consider the case when the exception is not handled in the function that raises it. In such case the handling of the error can happen anywhere, depending on where the function is called from.&lt;/p&gt;
&lt;p&gt;While the possibility to handle the exceptions differently in different contexts may seem appealing at the first sight, it quickly turns into a nightmare.&lt;/p&gt;
&lt;p&gt;As you fix individual bugs you'll find out that you are replicating almost the same error handling code in many places. Adding a new function call to the code introduces that possibility that different types of exceptions will bubble up to the calling function where there are not yet properly handled. Which means new bugs.&lt;/p&gt;
&lt;p&gt;If you don't give up on the &quot;no undefined behaviour&quot; principle, you'll have to introduce new exception types all the time to distinguish between different failure modes. However, adding a new exception type means that it can bubble up to different places. Pieces of code have to be added to all those places, otherwise you end up with undefined behaviour.&lt;/p&gt;
&lt;p&gt;At this point you may be screaming: That's what exception specifications are for!&lt;/p&gt;
&lt;p&gt;Well, the problem is that exception specifications are just a tool to handle the problem of exponential growth of the exception handling code in a more systematic manner, but it doesn't solve the problem itself. It can even be said it makes it worse as now you have to write code for the new exception types, new exception handling code *and* new exception specifications.&lt;/p&gt;
&lt;p&gt;Taking the problems described above into account I've decided to use C++ minus exceptions. That's exactly how ZeroMQ and Crossroads I/O looks like today.&lt;/p&gt;
&lt;p&gt;Unfortunately, the problems don't end up here…&lt;/p&gt;
&lt;p&gt;Consider what happens when initialisation of an object can fail. Constructors have no return values, so failure can be reported only by throwing an exception. However, I've decided not to use exceptions. So we have to go for something like this:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo
{
public:
    foo ();
    int init ();
    ...
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you create an instance of the class, constructor is called (which cannot fail) and then you explicitly call init function (which can fail).&lt;/p&gt;
&lt;p&gt;This is more complex that what you would do with C:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;struct foo
{
    ...
};

int foo_init (struct foo *self);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the really bad thing about the C++ version of the code is what happens when developers put some actual code into the constructor instead of systematically keeping the constructors empty.&lt;/p&gt;
&lt;p&gt;If that's the case a special new object state comes into being. It's the 'semi-initialised' state when object has been constructed but init function haven't been called yet. The object (and specifically the destructor) should be modified in such a way as to decently handle the new state. Which in the end means adding new condition to every method.&lt;/p&gt;
&lt;p&gt;Now you say: But that's just a consequence of your artificial restriction of not using exceptions! If exception is thrown in a constructor, C++ runtime cleans the object as appropriate and there is no 'semi-initalised' state whatsoever!&lt;/p&gt;
&lt;p&gt;Fair enough. However, it's beside the point. If you start using exceptions you have to handle all the exception-related complexity as described in the beginning. And that is not a reasonable option for an infrastructure component with the need to be very robust in the face of failures.&lt;/p&gt;
&lt;p&gt;Moreover, even if initialisation wasn't a problem, termination definitely is. You can't really throw exceptions in the destructor. Not because of some self-imposed artificial restrictions but because if the destructor is invoked in the process or unwinding the stack and it happens to throw an exception, it crashes the entire process.&lt;/p&gt;
&lt;p&gt;Thus, if termination can fail, you need two separate functions to handle it:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo
{
public:
    ...
    int term ();
    ~foo ();
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we are back to the problem we've had with the initialisation: There's a new 'semi-terminated' state that we have to handle somehow, add new conditions to individual member functions etc.&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo
{
public:
    foo () : state (semi_initialised)
    {
         ...
    }

    int init ()
    {
        if (state != semi_initialised)
            handle_state_error ();
        ...
        state = intitialised;
    }

    int term ()
    {
         if (state != initialised)
             handle_state_error ();
         ...
         state = semi_terminated;
    }

    ~foo ()
    {
         if (state != semi_terminated)
             handle_state_error ();
         ...
    }

    int bar ()
    {
         if (state != initialised)
             handle_state_error ();
         ...
    }
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compare the above to the C implementation. There are only two states. Not initialised object/memory where all the bets are off and the structure can contain random data. And there is initialised state, where the object is fully functional. Thus, there's no need to incorporate a state machine into the object:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;struct foo
{
    ...
};

int foo_init ()
{
    ...
}

int foo_term ()
{
    ...
}

int foo_bar ()
{
    ...
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now consider what happens when you add inheritance to the mix. C++ allows to initialise base classes as a part of derived class' constructor. Throwing an exception will destruct the parts of the object that were already successfully initialised:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo : public bar
{
public:
    foo () : bar () {}
    ...
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, once you introduce separate init functions, the number of states starts to grow. In addition to uninitialised, semi-initialised, initialised and semi-terminated states you encounter combinations of the states. As an example you can imagine a fully initialised base class with semi-initialised derived class.&lt;/p&gt;
&lt;p&gt;With objects like these it's almost impossible to guarantee predictable behaviour. There's a lot of different combinations of semi-initialised and semi-terminated parts of the object and given that failures that cause them are often very rare the most of the related code probably goes into the production untested.&lt;/p&gt;
&lt;p&gt;To summarise the above, I believe that requirement for fully-defined behaviour breaks the object-oriented programming model. The reasoning is not specific to C++. It applies to any object-oriented language with constructors and destructors.&lt;/p&gt;
&lt;p&gt;Consequently is seems that object-oriented languages are better suited for the environments where the need for rapid development beats the requirement for no undefined behaviour.&lt;/p&gt;
&lt;p&gt;There's no silver bullet here. The systems programming will have to live on with C.&lt;/p&gt;
&lt;p&gt;By the way, I've started experimenting with translating ZeroMQ into C lately. The code looks great!&lt;/p&gt;
&lt;p&gt;EDIT: The endeavour evolved into a new project called &lt;em&gt;nanomsg&lt;/em&gt; in the meantime. Check it &lt;a href=&quot;http://nanomsg.org&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Read &lt;a href=&quot;http://250bpm.com/blog:8&quot;&gt;part II of the article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Martin Sústrik, May 10th, 2012&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;list-pages-box&quot; readability=&quot;4.5652173913043&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.7826086956522&quot;&gt;
&lt;p&gt;&lt;strong&gt;Previous:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:3&quot;&gt;Silicon Valley, Hollywood and Iceland as the New Superpower&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;list-pages-box&quot; readability=&quot;3.9574468085106&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.0851063829787&quot;&gt;
&lt;p&gt;&lt;strong&gt;Next:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:5&quot;&gt;Distributed Computing: The Survey Pattern&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


</description>
<pubDate>Tue, 21 Apr 2020 07:33:14 +0000</pubDate>
<dc:creator>creolabs</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://250bpm.com/blog:4</dc:identifier>
</item>
</channel>
</rss>