<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The richest families in Florence in 1427 are still the richest (2016)</title>
<link>https://qz.com/694340/the-richest-families-in-florence-in-1427-are-still-the-richest-families-in-florence/</link>
<guid isPermaLink="true" >https://qz.com/694340/the-richest-families-in-florence-in-1427-are-still-the-richest-families-in-florence/</guid>
<description>&lt;p class=&quot;a1dbe quartz&quot;&gt;The richest families in Florence, Italy have had it good for a while—600 years to be precise.&lt;/p&gt;
&lt;p class=&quot;a1dbe quartz&quot;&gt;That’s according to a recent study by two Italian economists, Guglielmo Barone and Sauro Mocetti, who compared Florentine taxpayers way back in 1427 to those in 2011. Comparing the family wealth to those with the same surname today, they suggest the richest families in Florence 600 years ago remain the same now.&lt;/p&gt;
&lt;p class=&quot;a1dbe quartz&quot;&gt;“The top earners among the current taxpayers were found to have already been at the top of the socioeconomic ladder six centuries ago,” Barone and Mocetti &lt;a href=&quot;http://voxeu.org/article/what-s-your-surname-intergenerational-mobility-over-six-centuries&quot;&gt;note on VoxEU&lt;/a&gt;. The study was able to exploit a unique data set—taxpayers data in 1427 was digitized and made available online—to show long-term trends of economic mobility.&lt;/p&gt;
&lt;p class=&quot;a1dbe quartz&quot;&gt;While researchers admit the flaws to tracing family wealth using surnames, they point out Italian surnames are usually highly regional and tend to pass on linearly. The families at the top of the socioeconomic ladder six centuries ago are the top earners among current taxpayers. Those at the top of the ladder had the most prestigious jobs, while families at the bottom had less esteemed occupations, with earnings below the median.&lt;/p&gt;
&lt;p class=&quot;a1dbe quartz&quot;&gt;While it comes as little surprise that families pass on their wealth to their children, it’s still somewhat remarkable that these families were able to maintain their wealth through various sieges of Florence, Napoleon’s campaign in Italy, Benito Mussolini’s dictatorship, and two world wars.&lt;/p&gt;
&lt;p class=&quot;a1dbe quartz&quot;&gt;The study adds further evidence on how the rich remain rich. In England, researchers have previously demonstrated how a family’s status in England can &lt;a href=&quot;http://qz.com/301150/this-is-the-proof-that-the-1-have-been-running-the-show-for-800-years/&quot;&gt;persist for more than eight centuries&lt;/a&gt;, or more than 28 whole generations. It’s a trait shared &lt;a href=&quot;http://qz.com/314720/heres-the-surprising-social-trait-that-the-english-and-chinese-have-in-common/&quot;&gt;by elite families in China&lt;/a&gt;, whose high status has persisted since the Mao years.&lt;/p&gt;
</description>
<pubDate>Thu, 10 Jan 2019 08:29:10 +0000</pubDate>
<dc:creator>albertzeyer</dc:creator>
<og:description>They maintained their wealth through various sieges, Napoleon, Mussolini, and two world wars.</og:description>
<og:image>https://cms.qz.com/wp-content/uploads/2016/05/rtx6bst.jpg?quality=75&amp;strip=all&amp;w=1400</og:image>
<og:title>The richest families in Florence in 1427 are still the richest families in Florence</og:title>
<og:type>article</og:type>
<og:url>https://qz.com/694340/the-richest-families-in-florence-in-1427-are-still-the-richest-families-in-florence/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://qz.com/694340/the-richest-families-in-florence-in-1427-are-still-the-richest-families-in-florence/</dc:identifier>
</item>
<item>
<title>Tell HN: I Hugely Regret Using Stripe Atlas</title>
<link>https://news.ycombinator.com/item?id=18870886</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18870886</guid>
<description>&lt;td colspan=&quot;2&quot;/&gt;&lt;td readability=&quot;38&quot;&gt;I signed my company up through Stripe Atlas thinking it would be more convenient and save me time, boy was I wrong. It's been a time suck dealing with this company and their banking partners, I would recommend other founders who value their time to avoid this service. I've created an LLC in Delaware before using certain other googleable companies and it's gone completely smoothly, so this isn't my first rodeo.
&lt;p&gt;First problem, Stripe will create a new, separate Stripe account for you to use with Atlas. So if you already had some transactions (hope you do if you're forming a company) then you're going to need to migrate them. For my company, they just created another account with exactly the same name and just one capitalization difference, pretty confusing. Migration is likely automatic with a cool company like Stripe, right? Nope, they only can migrate your customers -- everything else, subscriptions, coupons, tx data you need to write a script and DIY! Have fun wasting an afternoon updating all your API keys and re-testing too.&lt;/p&gt;
&lt;p&gt;Side note, if you had special things like the Stripe startup school discount applied to your account, you'll lose it on Atlas. Unless you open up another support ticket with Stripe and wait for a couple weeks.&lt;/p&gt;
&lt;p&gt;Second problem, if you form a c-corp Stripe will create an account through SVB (Silicon Valley Bank) for you. You can go ahead and read the reviews on that bank yourself, but the biggest annoyance for me was a $25/mo account maintenance fee. OK, not atypical for a business bank, but most banks don't have a $25k+ min. balance for that fee! I do care about $300/year for my company when I specifically payed for Stripe Atlas thinking it would be more convenient and save me money.&lt;/p&gt;
&lt;p&gt;Third problem, want to switch to Azlo bank so that at least you don't have to pay monthly fees? That's great except Azlo will tell you that you need to talk to Stripe to do that, and &lt;em&gt;surprise&lt;/em&gt; Stripe will tell you that... https://bit.ly/2HhbXjZ&lt;/p&gt;
&lt;/td&gt;
</description>
<pubDate>Thu, 10 Jan 2019 01:55:43 +0000</pubDate>
<dc:creator>mikob</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18870886</dc:identifier>
</item>
<item>
<title>AWS gives open source the middle finger?</title>
<link>https://techcrunch.com/2019/01/09/aws-gives-open-source-the-middle-finger</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/09/aws-gives-open-source-the-middle-finger</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;AWS &lt;a href=&quot;https://aws.amazon.com/blogs/aws/new-amazon-documentdb-with-mongodb-compatibility-fast-scalable-and-highly-available/&quot;&gt;launched&lt;/a&gt; &lt;a href=&quot;https://aws.amazon.com/documentdb/&quot;&gt;DocumentDB&lt;/a&gt; today, a new database offering that is compatible with the MongoDB API. The company describes DocumentDB as a “fast, scalable, and highly available document database that is designed to be compatible with your existing &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/mongodb-inc&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;mongodb-inc&quot;&gt;MongoDB&lt;/a&gt; applications and tools.” In effect, it’s a hosted drop-in replacement for MongoDB that doesn’t use any MongoDB code.&lt;/p&gt;
&lt;p&gt;AWS argues that while MongoDB is great at what it does, its customers have found it hard to build fast and highly available applications on the open-source platform that can scale to multiple terabytes and hundreds of thousands of reads and writes per second. So what the company did was build its own document database, but made it compatible with the Apache 2.0 open source MongoDB 3.6 API.&lt;/p&gt;
&lt;p&gt;If you’ve been following the politics of open source over the last few months, you’ll understand that the optics of this aren’t great. It’s also no secret that AWS has long been accused of taking the best open-source projects and re-using and re-branding them without always giving back to those communities.&lt;/p&gt;
&lt;p&gt;The wrinkle here is that MongoDB was one of the first companies that aimed to put a stop to this by re-licensing its open-source tools under a new license that explicitly stated that companies that wanted to do this had to buy a commercial license. Since then, others have followed.&lt;/p&gt;
&lt;p&gt;“Imitation is the sincerest form of flattery, so it’s not surprising that Amazon would try to capitalize on the popularity and momentum of MongoDB’s document model,” MongoDB CEO and president Dev Ittycheria told us. “However, developers are technically savvy enough to distinguish between the real thing and a poor imitation. MongoDB will continue to outperform any impersonations in the market.”&lt;/p&gt;
&lt;p&gt;That’s a pretty feisty comment. Last November, Ittycheria told my colleague Ron Miller that he believed that AWS loved MongoDB because it drives a lot of consumption. In that interview, he also noted that “customers have spent the last five years trying to extricate themselves from another large vendor. The last thing they want to do is replay the same movie.”&lt;/p&gt;
&lt;p&gt;MongoDB co-founder and CTO Eliot Horowitz echoed this. “In order to give developers what they want, AWS has been pushed to offer an imitation MongoDB service that is based on the MongoDB code from two years ago,” he said. “Our entire company is focused on one thing — giving developers the best way to work with data with the freedom to run anywhere. Our commitment to that single mission will continue to differentiate the real MongoDB from any imitation products that come along.”&lt;/p&gt;
&lt;p&gt;A company spokesperson for MongoDB also highlighted that the 3.6 API that DocumentDB is compatible with is now two years old and misses most of the newest features, including ACID transactions, global clusters and mobile sync.&lt;/p&gt;
&lt;p&gt;To be fair, AWS has become more active in open source lately and, in a way, it’s giving developers what they want (and not all developers are happy with MongoDB’s own hosted service). Bypassing MongoDB’s licensing by going for API comparability, given that AWS knows exactly why MongoDB did that, was always going to be a controversial move and won’t endear the company to the open-source community.&lt;/p&gt;

</description>
<pubDate>Thu, 10 Jan 2019 01:49:14 +0000</pubDate>
<dc:creator>uji</dc:creator>
<og:title>AWS gives open source the middle finger</og:title>
<og:description>AWS launched DocumentDB today, a new database offering that is compatible with the MongoDB API. The company describes DocumentDB as a “fast, scalable, and highly available document database that is designed to be compatible with your existing MongoDB applications and tools.” In effect, …</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/IMG_20190109_150709.jpg?w=533</og:image>
<og:url>http://social.techcrunch.com/2019/01/09/aws-gives-open-source-the-middle-finger/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/09/aws-gives-open-source-the-middle-finger/</dc:identifier>
</item>
<item>
<title>IBM releases Elm-powered app</title>
<link>https://discourse.elm-lang.org/t/ibm-releases-elm-powered-app/2364</link>
<guid isPermaLink="true" >https://discourse.elm-lang.org/t/ibm-releases-elm-powered-app/2364</guid>
<description>&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Hi fellow Elmers,&lt;/p&gt;
&lt;p&gt;IBM has just released Decision Composer, a free and limited offering of our Operational Decision Management (ODM - ex ILOG JRules) product.&lt;/p&gt;
&lt;p&gt;A good portion of the front end is written in Elm, so I thought I’d share the link here, and post some feedback.&lt;/p&gt;
&lt;p&gt;The app is live here (requires registration) :&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://decision-composer.ibm.com&quot; class=&quot;onebox&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://decision-composer.ibm.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It basically allows business users to model and implement complex Decisions via graphical tools and human-readable artifacts instead of code. Decisions are then compiled to executable artifacts, and deployed to runtimes for consumption in other applications/services.&lt;br/&gt;It is based on the &lt;a href=&quot;https://www.omg.org/spec/DMN&quot; rel=&quot;nofollow noopener&quot;&gt;DMN&lt;/a&gt; standard, spiced up with our own BRMS expertise.&lt;/p&gt;
&lt;p&gt;The app is a SPA that (in short) displays a diagram, and allows to edit various artifacts in the diagram nodes, like textual rules (with syntax highlighting, code completion etc) and Decision Tables (a la XL).&lt;/p&gt;
&lt;div class=&quot;lightbox-wrapper&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/original/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687.png&quot; data-download-href=&quot;https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/372b898ac02f6d8990006751ee63b4f0e301f687&quot; title=&quot;dcomp-1.png&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;img src=&quot;https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/optimized/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687_2_614x500.png&quot; alt=&quot;dcomp-1&quot; width=&quot;614&quot; height=&quot;500&quot; srcset=&quot;https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/optimized/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687_2_614x500.png, https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/optimized/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687_2_921x750.png 1.5x, https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/optimized/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687_2_1228x1000.png 2x&quot; data-small-upload=&quot;/uploads/elm_lang/optimized/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687_2_10x10.png&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;p&gt;Most of the app is built over existing technology and components from the ODM product. The server relies on our Java APIs for many things (parsing, validation, compilation, etc), and the front is an Elm SPA that embeds some editors written in Dojo.&lt;/p&gt;
&lt;p&gt;In the above screenshot, for example, the Diagram is a Dojo component, with its own dom tree (and svg), and the rest of the page is Elm. Same goes for rules and tables. We use parent-child for “pages” of the app as well as for some components that are reused across the app.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Functional programming ! The Elm language is a good introduction to FP, especially for people with an OO background like us. Only problem :&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Tooling isn’t mature. IDE plugins, time travel “debugger” : they cannot compare yet with our usual Dev XP for TS, Java, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TEA is pretty simple to understand, people get quickly used to it. You don’t wonder where things are or should be, everything has its well-defined place. There’s one way to do things, not 50. Still :&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It requires a lot of boilerplate&lt;/li&gt;
&lt;li&gt;It can be hard to scale / componentize (e.g. when to do parent-child ? how to reuse “components” in several apps ? …&lt;/li&gt;
&lt;li&gt;Designing clean modules is not necessarily easy, and requires experience. We do have a few ugly Models here and there that need refactoring !&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elm is &lt;em&gt;really&lt;/em&gt; bullet proof, it’s not fake advertisement. We have had no runtime errors, as promised. Refactoring is easy, with the compiler telling you just about everything. And yes, really, when it compiles, it works ! Apart from the quite slow 0.18 compiler (fixed in 0.19), it’s really amazing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elm can interop with “graphical” JS pretty easily. We have embedded pretty big components (like the diagram or the decision tables editor) into the Elm virtual DOM, and we interact with those through ports. It works, but :&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ports == lots of boilerplate and “loose” typing : we pass Values because we need to encode/decode ourselves… codegen to the rescue ?&lt;/li&gt;
&lt;li&gt;Careful with the virtual DOM when dealing with native JS. Don’t touch vdom nodes that contain your “native” dom, make sure you properly destroy things, etc. All this requires work and attention, and bugs can be pretty hard to track down. Custom elements would probably have helped a lot here.&lt;/li&gt;
&lt;li&gt;Sometimes you’d like to do synchronous calls, but you can’t. We wrote native modules for that. I know, booooo !&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The build (elm make) is really simple. Compare this to your average WebPack “config”. And the UMD module can be consumed easily too : we include it into a dojo AMD layer build.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It doesn’t require to patch your code because there’s a new release every month. We migrated from 0.17 to 0.18 pretty easily. The 0.19 migration is a bit bigger, especially because we have a few native modules, but still, it’s nothing compared to the number of updates we would have had with React+Redux+TS.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It was quite a bet when we started with Elm (0.17). Many co-workers didn’t understand. Everyone was about React back then. Even Elm’s syntax was subject to religious debates. “What ? No JSX ??? Square brackets ??”…&lt;br/&gt;Also having a big player like facebook on one side, and a weird student on the other, that didn’t help (with all my respect to you, sir Czaplicki, you are doing a fantastic job) !!&lt;/p&gt;
&lt;p&gt;Eventually, as usual, it took some coding to convince : as soon as we started shipping things, most of the skepticism about Elm stopped.&lt;/p&gt;
&lt;p&gt;Today, we, the developers of the app, think it’s been a good choice. The “framework” is simple and yet solid. It never really got into our way, instead it helped a lot to have this common architecture/design for everybody. We basically followed The Elm Architecture, and it worked. Of course, the app isn’t perfect, and there are many things we could do better, but it’s not because of the framework, it’s because of us, who didn’t model things correctly and stuff like that.&lt;/p&gt;
&lt;p&gt;It took a little time to get used to Elm, especially for OO-raised people like me and most of my team. But it eventually paid off. Once you’ve understood the basic principles, you realize that coding in the browser can actually be productive, safe, and even fun.&lt;/p&gt;
&lt;p&gt;I hope this post will help people who have problems convincing their management of using Elm, just because it’s not mainstream. Yes, you can use it for pretty complex apps, it does scale. And yes, even big companies like IBM use it !&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Thank you for sharing! This is very interesting feedback!&lt;/p&gt;
&lt;p&gt;I have a bunch of questions, particularly about the rough spots you experienced. Knowing the particulars of your expectations and needs will be really valuable to figuring out how to make improvements strategically. I will message you soon to try to find a time to talk through things so I can make detailed notes.&lt;/p&gt;
&lt;p&gt;Anyway, thanks again for sharing all this!&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Congrats on the release!&lt;/p&gt;
&lt;p&gt;How big is the Elm part of the app?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;cloc gives approx 45.000 lines in 170 files of Elm, including the tests.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;How are you doing synchronous calls to Elm in 0.19?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;As far as I know, you can’t.&lt;/p&gt;
&lt;p&gt;It was an error on our part to go for Native stuff in the first place. For 0.19, I guess that we’ll migrate those native modules either to Elm code, or to ports.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;I’ve done it by wrapping the Elm ports in a queue with a locking mechanism. That’s JS stuff I mean. Not on the Elm side.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;This is awesome! Curious, how long does it take to compile in 0.19?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;We have not yet migrated to 0.19, so I can’t say. I’m curious to see that as well !&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;aside class=&quot;quote no-group&quot; data-post=&quot;1&quot; data-topic=&quot;2364&quot;&gt;&lt;div class=&quot;title&quot;&gt;

&lt;img alt=&quot;&quot; width=&quot;20&quot; height=&quot;20&quot; src=&quot;https://discourse-cdn-sjc2.com/standard17/user_avatar/discourse.elm-lang.org/vankeisb/40/1461_1.png&quot; class=&quot;avatar&quot;/&gt; vankeisb:&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes you’d like to do synchronous calls, but you can’t. We wrote native modules for that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;Can you share what needs do those synchronous calls fill?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;aside class=&quot;quote no-group&quot; data-post=&quot;1&quot; data-topic=&quot;2364&quot;&gt;&lt;div class=&quot;title&quot;&gt;

&lt;img alt=&quot;&quot; width=&quot;20&quot; height=&quot;20&quot; src=&quot;https://discourse-cdn-sjc2.com/standard17/user_avatar/discourse.elm-lang.org/vankeisb/40/1461_1.png&quot; class=&quot;avatar&quot;/&gt; vankeisb:&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Ports == lots of boilerplate and “loose” typing : we pass Values because we need to encode/decode ourselves… codegen to the rescue ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;You might find my &lt;a href=&quot;https://github.com/dillonkearns/elm-typescript-interop&quot; rel=&quot;nofollow noopener&quot;&gt;elm-typescript-interop&lt;/a&gt; library useful. It does exactly this, codegens a TypeScript declaration file based on the ports in your app. I &lt;a href=&quot;https://youtu.be/memIRXFSNkU&quot; rel=&quot;nofollow noopener&quot;&gt;discussed it in more depth at this year’s Elm Conf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Great to hear your experience report, thanks for sharing that with the community!&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;To be fair, most of our native modules could (should) have been either written in pure Elm, or implemented as ports. We have stuff like input validation (reusing some regexes etc), which we wanted to reuse back in a time when everybody wasn’t comfortable with Elm.&lt;/p&gt;
&lt;p&gt;There’s one case that, as far as I know, cannot really be covered by ports though.&lt;/p&gt;
&lt;p&gt;We use dojo’s i18n system in order to have localized messages in the app. Our dojo components already heavily rely on that mechanism, so we didn’t want to have several different i18n “libs” and message files in the app. Having everything in our “standard” dojo format is also mandatory for people who translate the message bundles.&lt;/p&gt;
&lt;p&gt;So what we do is :&lt;br/&gt;1/ generate a “strong typed” .elm file from the dojo message keys (we parse and interpret dojo’s .js message files), so that, in Elm code, we can write stuff like “text &amp;lt;| I18n.messages.my.key arg1 arg2”. That way, the Elm code doesn’t even compile if you try to use invalid message keys (which is pretty cool : with dojo you’ll discover the problem at runtime).&lt;br/&gt;2/ the generated I18n.elm file has to invoke dojo’s i18n stuff somehow, and this is where it needs to be sync, so that we can just call those funcs from our views.&lt;/p&gt;
&lt;p&gt;I don’t know how we are going to do this without native modules yet.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Do the translations need to be supplied at runtime? Do they need to change at runtime without a page reload?&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Yes, dojo loads the appropriate message bundle(s) at runtime, so that you don’t fetch all the translations, but only the one that you need for the user’s locale.&lt;br/&gt;It is based on the AMD loader : you basically require ‘my/messages’ with a loader plugin (dojo/i18n), and then access the messages on the object :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;define([&quot;dojo/i18n!my/messages&quot;], function(messages) {
    ...
    var msg = lang.replace(messages.my.key, arg1, arg2);
    ... 
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Our native module just wraps this messages object, and we generate a “façade” over it so that keys are “typed” :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I18n.messages.my.key arg1 arg2 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;instead of&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I18n.message &quot;my.key&quot; [ arg1, arg2 ]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think reloading in case of locale change would be a acceptable, because that’s not something you do frequently.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://discourse-cdn-sjc2.com/standard17/images/emoji/apple/thinking.png?v=6&quot; title=&quot;:thinking:&quot; class=&quot;emoji&quot; alt=&quot;:thinking:&quot;/&gt; That sounds like you could pass the translations to Elm as flags or through a port. It would need to be stored in the model either way. The &lt;code&gt;I18n&lt;/code&gt; functions would need another argument with the translation strings.&lt;/p&gt;
&lt;p&gt;With a flat model (which is often a good idea for other reasons anyway) that could work really nice, I think.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Interesting !&lt;/p&gt;
&lt;p&gt;I’m not sure that using from the ports module as a definition of the types would be sufficient for us. Most of our ports use Value because we have custom encoders/decoders. We do not use the “default” marshalling/unmarshalling system that ports provide because we use union types and stuff like this in the values we pass around.&lt;/p&gt;
&lt;p&gt;I was thinking about some kind of IDL that would allow to describe the types in a language agnostic fashion, and generate the elm ports and the ts.d (or Scala.js façades, or whatever) from this IDL…&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;aside class=&quot;quote no-group&quot; data-post=&quot;16&quot; data-topic=&quot;2364&quot;&gt;&lt;div class=&quot;title&quot;&gt;

&lt;img alt=&quot;&quot; width=&quot;20&quot; height=&quot;20&quot; src=&quot;https://discourse-cdn-sjc2.com/standard17/user_avatar/discourse.elm-lang.org/vankeisb/40/1461_1.png&quot; class=&quot;avatar&quot;/&gt; vankeisb:&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;We do not use the “default” marshalling/unmarshalling system that ports provide because we use union types and stuff like this in the values we pass around.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;Yes, I’ve been thinking about ways to support serializing/deserializing Custom Types in &lt;code&gt;elm-typescript-interop&lt;/code&gt;. I tried to gather some feedback from the community &lt;a href=&quot;https://discourse.elm-lang.org/t/generating-type-safe-ports-from-custom-types/1841/10&quot;&gt;in this thread&lt;/a&gt;, but it’s a pretty challenging problem to find an elegant solution to. I’d love to hear creative ideas if anyone has thoughts on how to make this a nice experience. It’s not challenging technically, but making the process simple and intuitive is quite tricky!&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;mention&quot; href=&quot;https://discourse.elm-lang.org/u/vankeisb&quot;&gt;@vankeisb&lt;/a&gt; awesome to hear that even IBM is using Elm for more than just POCs &lt;img src=&quot;https://discourse-cdn-sjc2.com/standard17/images/emoji/apple/slight_smile.png?v=6&quot; title=&quot;:slight_smile:&quot; class=&quot;emoji&quot; alt=&quot;:slight_smile:&quot;/&gt;&lt;br/&gt;About your native code around translations. Maybe &lt;a href=&quot;https://package.elm-lang.org/packages/ChristophP/elm-i18next/latest/&quot; rel=&quot;nofollow noopener&quot;&gt;https://package.elm-lang.org/packages/ChristophP/elm-i18next/latest/&lt;/a&gt; is for you. It supports also uses runtime translations and supports elm 0.18 (version &amp;lt;= 2) and 0.19 (version 3) .&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;This topic was automatically closed 10 days after the last reply. New replies are no longer allowed.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 10 Jan 2019 01:38:10 +0000</pubDate>
<dc:creator>quickthrower2</dc:creator>
<og:image>https://discourse-cdn-sjc2.com/standard17/uploads/elm_lang/optimized/2X/3/372b898ac02f6d8990006751ee63b4f0e301f687_2_614x500.png</og:image>
<og:url>https://discourse.elm-lang.org/t/ibm-releases-elm-powered-app/2364?_escaped_fragment_=</og:url>
<og:title>IBM releases Elm-powered app</og:title>
<og:description>Hi fellow Elmers, IBM has just released Decision Composer, a free and limited offering of our Operational Decision Management (ODM - ex ILOG JRules) product. A good portion of the front end is written in Elm, so I thought I’d share the link here, and post some feedback. The app is live here (requires registration) : https://decision-composer.ibm.com It basically allows business users to model and implement complex Decisions via graphical tools and human-readable artifacts instead of code. D...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://discourse.elm-lang.org/t/ibm-releases-elm-powered-app/2364?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Amazon DocumentDB, with MongoDB compatibility</title>
<link>https://aws.amazon.com/documentdb/</link>
<guid isPermaLink="true" >https://aws.amazon.com/documentdb/</guid>
<description>&lt;h2 id=&quot;Use_cases&quot; class=&quot;lb-txt-bold lb-txt-28 lb-h2 lb-title&quot;&gt;Use cases&lt;/h2&gt;
&lt;h3 id=&quot;Migrate_your_on-premises_MongoDB_workloads_to_the_cloud&quot; class=&quot;lb-txt-bold lb-txt-none lb-txt-18 lb-h3 lb-title&quot;&gt;Migrate your on-premises MongoDB workloads to the cloud&lt;/h3&gt;
&lt;div class=&quot;lb-rtxt&quot; readability=&quot;18&quot;&gt;
&lt;p&gt;Self-managing MongoDB databases is difficult, time-consuming, and expensive. With Amazon DocumentDB, you can set up, secure, and scale MongoDB-compatible databases in the cloud without worrying about manually setting up and securing database clusters, running cluster management software, configuring backups, and monitoring production workloads.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;img alt=&quot;Product-Page-Diagram_Chimera_Database-migration&quot; title=&quot;Product-Page-Diagram_Chimera_Database-migration&quot; src=&quot;https://d1.awsstatic.com/r2018/h/Chimera/Product-Page-Diagram_Chimera_Database-migration.9b711de1b5be05ef91e4246ece9a29abe39aa62b.png&quot;/&gt;&lt;/div&gt;
&lt;h3 id=&quot;Mobile_and_web_applications&quot; class=&quot;lb-txt-bold lb-txt-none lb-txt-18 lb-h3 lb-title&quot;&gt;Mobile and web applications&lt;/h3&gt;
&lt;div class=&quot;lb-rtxt&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;Build high-performance mobile and web applications that scale to process millions of user requests per second with millisecond latency. Amazon DocumentDB lowers your operational burden, allowing you to focus on building unique experiences for your customers. Amazon DocumentDB’s flexible document model, data types, and indexing allow you to adapt and iterate on your applications quickly, cutting down development time.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;img alt=&quot;Product-Page-Diagram_Chimera_Mobile-Web-Applications&quot; title=&quot;Product-Page-Diagram_Chimera_Mobile-Web-Applications&quot; src=&quot;https://d1.awsstatic.com/r2018/h/Chimera/Product-Page-Diagram_Chimera_Mobile-Web-Applications.5b099cff74fe76d7384d2ad35bc8653f898903be.png&quot;/&gt;&lt;/div&gt;
&lt;h3 id=&quot;Content_and_catalog_management&quot; class=&quot;lb-txt-bold lb-txt-none lb-txt-18 lb-h3 lb-title&quot;&gt;Content and catalog management&lt;/h3&gt;
&lt;div class=&quot;lb-rtxt&quot; readability=&quot;24&quot;&gt;
&lt;p&gt;Shopping sites, online publications, digital archives, point-of-sale terminals, and self-service kiosks rely on content and catalog management systems to serve their customers. These systems need fast and reliable access to user reviews, images, ratings, product information, comments, etc. With Amazon DocumentDB’s flexible document model, data types, and indexing, you can store and query content (e.g., user reviews and demo videos for shopping sites) and catalogs (e.g., inventory lists for point-of-sale terminals and financial trades for trading platforms) quickly and intuitively. &lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;img alt=&quot;Product-Page-Diagram_Chimera_product-catalog&quot; title=&quot;Product-Page-Diagram_Chimera_product-catalog&quot; src=&quot;https://d1.awsstatic.com/r2018/h/Chimera/Product-Page-Diagram_Chimera_product-catalog.8ac5caa24cdc36c3baccd003be3f0110388d6958.png&quot;/&gt;&lt;/div&gt;
&lt;h3 id=&quot;Profile_management&quot; class=&quot;lb-txt-bold lb-txt-none lb-txt-18 lb-h3 lb-title&quot;&gt;Profile management&lt;/h3&gt;
&lt;div class=&quot;lb-rtxt&quot; readability=&quot;18&quot;&gt;
&lt;p&gt;User profile management enables online transactions, user preferences, and user authentication. With the growth in users, increasingly complex user profile data, and growing user experience expectations, the demand for scalability, data flexibility, and performance too has grown. With Amazon DocumentDB’s document data model, you can manage profiles &amp;amp; preferences of millions of users &amp;amp; scale to process millions of user requests per second with millisecond latency.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;img alt=&quot;Product-Page-Diagram_Chimera_profile-management&quot; title=&quot;Product-Page-Diagram_Chimera_profile-management&quot; src=&quot;https://d1.awsstatic.com/r2018/h/Chimera/Product-Page-Diagram_Chimera_profile-management.1d0ba94069586e42f138d2aad3ab5e2787c0ff61.png&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 09 Jan 2019 22:41:27 +0000</pubDate>
<dc:creator>ifcologne</dc:creator>
<og:title>Amazon DocumentDB (with MongoDB compatibility)</og:title>
<og:type>company</og:type>
<og:url>https://aws.amazon.com/documentdb/</og:url>
<og:image>https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/documentdb/</dc:identifier>
</item>
<item>
<title>Thoughts on Rust, a few thousand lines in</title>
<link>https://rcoh.me/posts/thoughts-on-rust-a-few-thousand-lines-in/</link>
<guid isPermaLink="true" >https://rcoh.me/posts/thoughts-on-rust-a-few-thousand-lines-in/</guid>
<description>&lt;p&gt;To say my &lt;a href=&quot;https://rcoh.me/posts/rust-linked-list-basically-impossible&quot;&gt;first foray&lt;/a&gt; into Rust was a frustrating struggle would be an understatement. I picked a terrible first project that left me neck deep in Rust’s trickiest areas right off the bat. I was excited to try again. A few years ago I wrote &lt;a href=&quot;https://github.com/SumoLogic/sumoshell&quot;&gt;Sumoshell&lt;/a&gt;, a CLI App for log analysis. I’d wanted to improve it for a while, so porting it to Rust seemed like a nice way to kill two birds with one stone. Like Go, Rust can compile statically linked linux binaries which makes it ideal for distributing CLI apps; indeed CLI app support is a &lt;a href=&quot;https://internals.rust-lang.org/t/announcing-the-cli-working-group/6872&quot;&gt;priority&lt;/a&gt; for Rust. Before I get into the rest of the post, &lt;a href=&quot;https://github.com/rcoh/angle-grinder&quot;&gt;here’s the end result&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rcoh.me/images/agrind-demo.gif&quot; alt=&quot;Angle grinder demo&quot;/&gt;&lt;/p&gt;
&lt;p&gt;With a few small hiccups, my second try at learning Rust was a real joy. It combines the expressiveness and type system I love from Scala with the small memory footprint and performance you get from compiling directly to a low level without a runtime. I saw a lot of pragmatism in the design of the language and the standard library, more than I’ve seen in other languages. I should caveat this with a note that I haven’t tried to write macros or use &lt;code&gt;Futures&lt;/code&gt; yet, &lt;a href=&quot;https://brandur.org/fragments/rust-brick-walls&quot;&gt;two major pain-points&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;things-that-were-awesome&quot;&gt;Things That Were Awesome&lt;/h2&gt;
&lt;p&gt;Nearly every time I’ve thought, “wow it would be great if…”, Rust has a well thought out solution that strikes just the right balance between idealism and pragmatism.&lt;/p&gt;
&lt;h3 id=&quot;great-docs&quot;&gt;Great Docs&lt;/h3&gt;
&lt;p&gt;The Rust documentation is some of the best technical writing I’ve ever read. After writing code like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;let&lt;/span&gt; parsed &lt;span&gt;=&lt;/span&gt; lang::parse_query(&lt;span&gt;&amp;amp;&lt;/span&gt;query);
&lt;span&gt;let&lt;/span&gt; query &lt;span&gt;=&lt;/span&gt; &lt;span&gt;match&lt;/span&gt; parsed {
    Ok((_input, query)) &lt;span&gt;=&amp;gt;&lt;/span&gt; query,
    Err(s) &lt;span&gt;=&amp;gt;&lt;/span&gt; &lt;span&gt;return&lt;/span&gt; Result::Err(format&lt;span&gt;!&lt;/span&gt;(&lt;span&gt;&quot;Could not parse query: {:?}&quot;&lt;/span&gt;, s)),
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My first thought was, “huh, I wonder if you could write a macro for that.” That quickly lead me to &lt;a href=&quot;https://doc.rust-lang.org/book/first-edition/error-handling.html&quot;&gt;this doc&lt;/a&gt; which not only perfectly answered my question (“yes, with the &lt;code&gt;try!&lt;/code&gt;/&lt;code&gt;?&lt;/code&gt; macros”) but also guided me through the progression of the best practices for handling errors in Rust.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;let&lt;/span&gt; parsed &lt;span&gt;=&lt;/span&gt; lang::parse_query(&lt;span&gt;&amp;amp;&lt;/span&gt;query).map_err(&lt;span&gt;|&lt;/span&gt;e&lt;span&gt;|&lt;/span&gt; format&lt;span&gt;!&lt;/span&gt;(&lt;span&gt;&quot;Could not parse query: {:?}&quot;&lt;/span&gt;, e));
&lt;span&gt;let&lt;/span&gt; (_, query) &lt;span&gt;=&lt;/span&gt; parsed&lt;span&gt;?&lt;/span&gt;;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Across the board, the docs are clear, easy to read, and, in another stroke of pragmatism, there are actually &lt;a href=&quot;https://doc.rust-lang.org/stable/rustdoc/documentation-tests.html&quot;&gt;tests that all the examples compile&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Watch out for stale docs! A lot of google searches lead you to the first edition of the Rust book. It isn’t incorrect (to my knowledge), but there is sometimes a better way.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;cargo-fmt&quot;&gt;Cargo Fmt&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cargo fmt&lt;/code&gt; is the autoformatting module built in to Rust. While it’s not quite as perfect as &lt;code&gt;go fmt&lt;/code&gt;, it’s coming along. Any language in 2018 that doesn’t have 1-true-way to be formatted is missing out.&lt;/p&gt;
&lt;h3 id=&quot;variable-shadowing-encouraged&quot;&gt;Variable shadowing encouraged&lt;/h3&gt;
&lt;p&gt;Unlike nearly every language I’ve ever used, Rust actually &lt;em&gt;encourages&lt;/em&gt; variable shadowing. I thought this was a really interesting and pragmatic design decision. It avoids code like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span&gt;val&lt;/span&gt; foo &lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;...&quot;&lt;/span&gt;
&lt;span&gt;val&lt;/span&gt; fooParsed &lt;span&gt;=&lt;/span&gt; parse&lt;span&gt;(&lt;/span&gt;foo&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;val&lt;/span&gt; fooEscaped &lt;span&gt;=&lt;/span&gt; escape&lt;span&gt;(&lt;/span&gt;fooParsed&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;...&lt;/span&gt;
&lt;span&gt;// Whoops. Should have used fooEscaped...
&lt;/span&gt;doSomethingWith&lt;span&gt;(&lt;/span&gt;fooParsed&lt;span&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I’ve seen multiple production bugs caused by someone intending to replace a value with another, only to have the old value used later.&lt;/p&gt;
&lt;p&gt;In Rust you can make the old value unusable by simply shadowing it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;let&lt;/span&gt; foo &lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;...&quot;&lt;/span&gt;;
&lt;span&gt;let&lt;/span&gt; foo &lt;span&gt;=&lt;/span&gt; parse(foo);
&lt;span&gt;let&lt;/span&gt; foo &lt;span&gt;=&lt;/span&gt; escaped(foo);
...
doSomethingWith(foo);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It turns shadowing from a frequent cause of bugs into something that prevents bugs!&lt;/p&gt;
&lt;h3 id=&quot;easing-into-ownership&quot;&gt;Easing into Ownership&lt;/h3&gt;
&lt;p&gt;Ownership is tricky, but Rust has an escape hatch: &lt;code&gt;clone()&lt;/code&gt;. If I couldn’t figure out an ownership issue after a minute or two, I could just use &lt;code&gt;.clone()&lt;/code&gt; or &lt;code&gt;.cloned()&lt;/code&gt;, punting the issue until I cared about the performance I lost cloning.&lt;/p&gt;
&lt;p&gt;Angle grinder allows you to transform your log data through a series of operators. Initially, each operator would &lt;code&gt;borrow&lt;/code&gt; the records it processed.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;fn&lt;/span&gt; &lt;span&gt;process&lt;/span&gt;(&lt;span&gt;&amp;amp;&lt;/span&gt;self, rec: &lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;Record&lt;/span&gt;) -&amp;gt; Option&lt;span&gt;&amp;lt;&lt;/span&gt;Record&lt;span&gt;&amp;gt;&lt;/span&gt; {
    ...
    &lt;span&gt;// clone rec and make some changes...
&lt;/span&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This was fine, but I ended up doing a lot of unnecessary cloning.&lt;/p&gt;
&lt;p&gt;Later, as I began to get a better handle on what patterns worked better and gained a better understanding of ownership, I could improve things. Since each &lt;code&gt;Record&lt;/code&gt; is moving linearly through the series of operators, it actually makes more sense to have &lt;code&gt;process&lt;/code&gt; take ownership:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;fn&lt;/span&gt; &lt;span&gt;process&lt;/span&gt;(&lt;span&gt;&amp;amp;&lt;/span&gt;self, rec: &lt;span&gt;Record&lt;/span&gt;) -&amp;gt; Option&lt;span&gt;&amp;lt;&lt;/span&gt;Record&lt;span&gt;&amp;gt;&lt;/span&gt; {
    ...
    &lt;span&gt;// mutate rec, no cloning required
&lt;/span&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Punting by using &lt;code&gt;clone&lt;/code&gt; isn’t always possible, but luckily I didn’t hit those places until I understood ownership well enough ;-).&lt;/p&gt;
&lt;h3 id=&quot;expressive-abstractions&quot;&gt;Expressive Abstractions&lt;/h3&gt;
&lt;p&gt;One of my major frustrations when originally writing Sumoshell in Go was running into stack overflow answers like &lt;a href=&quot;https://stackoverflow.com/questions/21362950/golang-getting-a-slice-of-keys-from-a-map&quot;&gt;this&lt;/a&gt; (How do you get the keys out of map? Use a for-loop and append them into a list. Oy.) Probably not that annoying coming from C, but coming from Scala and Python I felt like Go was actively working against me. Needless to say, I was pleasantly surprised to find that Rust has all the functional programming paradigms I enjoyed in Scala (&lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flat_map&lt;/code&gt;, &lt;code&gt;fold&lt;/code&gt;, etc.). They’re slightly less ergonomic to use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span&gt;// In scala
&lt;/span&gt;&lt;span&gt;val&lt;/span&gt; anotherList &lt;span&gt;=&lt;/span&gt; someList&lt;span&gt;.&lt;/span&gt;map&lt;span&gt;(&lt;/span&gt;x &lt;span&gt;=&amp;gt;&lt;/span&gt; x &lt;span&gt;+&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;// In rust   
&lt;/span&gt;&lt;span&gt;let&lt;/span&gt; another: Vec&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;u64&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; some_vec.iter().map(&lt;span&gt;|&lt;/span&gt;x&lt;span&gt;|&lt;/span&gt;x &lt;span&gt;+&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;).collect();
&lt;span&gt;/*            ^ type required     ^.iter() needed       ^ collect to convert  
&lt;/span&gt;&lt;span&gt;                                                          the iterator back to a collection*/&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But I appreciate the trade off. In Scala, laziness vs. nonlaziness in the standard library collections has been a footgun for years.&lt;/p&gt;
&lt;p&gt;The type system of Rust was plenty for this project, even without higher-kinded types. Scala’s type system is fine, but I frequently end up needing type classes which are a bit of a kludge in Scala. Rust brings type classes (called &lt;code&gt;Traits&lt;/code&gt; in Rust) as &lt;em&gt;the way&lt;/em&gt; of code reuse. I feel pretty strongly that the ad-hoc polymorphism offered by type classes is the best option in terms of leading people into the &lt;a href=&quot;https://blog.codinghorror.com/falling-into-the-pit-of-success/&quot;&gt;pit of success&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Compile times in Rust aren’t great – it takes about 5 seconds to compile angle grinder with 1800 lines of Rust. Incremental compilation has already landed in stable, but I haven’t noticed a big different in practice, even when I only change a couple of lines. &lt;code&gt;cargo check&lt;/code&gt; &amp;amp; &lt;code&gt;cargo watch&lt;/code&gt; are a saving grace here, but they only help when you’re iterating on compiler errors instead of test failures.&lt;/p&gt;
&lt;h2 id=&quot;things-that-might-be-awesome-in-the-future&quot;&gt;Things that might be awesome in the future&lt;/h2&gt;
&lt;p&gt;Some things were a little rougher around the edges. I’m including this section not as a criticism, but rather as a heads-up of things to watch out for new Rustaceans.&lt;/p&gt;
&lt;h3 id=&quot;crates-don-t-have-great-seo&quot;&gt;Crates Don’t Have Great SEO&lt;/h3&gt;
&lt;p&gt;TLDR: If you’re looking for a crate, search for it on &lt;a href=&quot;https://crates.io&quot;&gt;https://crates.io&lt;/a&gt;. Many great crates don’t show up Google! Another side note: A lot of great, well loved, crates don’t have a lot of Github stars.&lt;/p&gt;
&lt;p&gt;Coming from Python and Scala, where googling “Python thing I want” almost always finds you the relevant Python package, it didn’t always work that way for Rust. As an example: I was wanted to add percentile support to angle grinder. Percentiles are pretty key for most monitoring workflow – angle grinder lets you do things like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;* | parse &quot;status_code=*] as status_code 
  | parse &quot;response_ms=*]&quot; as response_ms 
  | pct90(response_ms) by status_code
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For angle-grinder, a streaming &amp;amp; constant memory implementation of percentile is required to avoid leaking memory. Googling &lt;code&gt;Rust percentile&lt;/code&gt; gives you a few options, but none of them are great. I actually ended up finding a much better crate &lt;a href=&quot;https://crates.io/crates/quantiles&quot;&gt;quantiles&lt;/a&gt; when I searched for &lt;a href=&quot;http://ieeexplore.ieee.org/document/1410103/?tp=&amp;amp;arnumber=1410103&amp;amp;url=http:%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D1410103&quot;&gt;CKMS&lt;/a&gt;, a popular streaming percentile algorithm. But if I had just &lt;a href=&quot;https://crates.io/search?q=percentile&quot;&gt;searched crates.io&lt;/a&gt;, I would have found it right away.&lt;/p&gt;
&lt;h3 id=&quot;macro-errors-are-the-worst&quot;&gt;Macro errors are the worst.&lt;/h3&gt;
&lt;p&gt;Angle grinder is essentially an extremely simple functional programming language wrapped in a pretty CLI app. So, naturally, it needs to parse the aforementioned programing language. Being familiar with parser-combinator style parsing from Scala, I decided to use &lt;a href=&quot;https://github.com/geal/nom&quot;&gt;Nom&lt;/a&gt;, a similar library for Rust. Nom is based on macros. This is great when it allows you to write a lot less code. But it’s less nice when you forget an &lt;code&gt;&amp;gt;&lt;/code&gt; and get an error like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;error: &lt;span&gt;no&lt;/span&gt; rules expected the token &lt;span&gt;`&lt;/span&gt;i1&lt;span&gt;`&lt;/span&gt;
  &lt;span&gt;-&lt;/span&gt;-&amp;gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;lang.rs:&lt;span&gt;95&lt;/span&gt;:&lt;span&gt;1&lt;/span&gt;
   &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;95&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; named&lt;span&gt;!&lt;/span&gt;(json&lt;span&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span&gt;str&lt;/span&gt;, InlineOperator&lt;span&gt;&amp;gt;&lt;/span&gt;, ws&lt;span&gt;!&lt;/span&gt;(do_parse&lt;span&gt;!&lt;/span&gt;(
&lt;span&gt;96&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;     tag&lt;span&gt;!&lt;/span&gt;(&lt;span&gt;&quot;json&quot;&lt;/span&gt;) &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;97&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;     from_column_opt: &lt;span&gt;opt&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;(preceded&lt;span&gt;!&lt;/span&gt;(tag&lt;span&gt;!&lt;/span&gt;(&lt;span&gt;&quot;from&quot;&lt;/span&gt;), ident)) &lt;span&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;98&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;     (InlineOperator::Json { input_column: &lt;span&gt;from_column_opt&lt;/span&gt;.map(&lt;span&gt;|&lt;/span&gt;s&lt;span&gt;|&lt;/span&gt;s.to_string()) })
&lt;span&gt;99&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; )));
   &lt;span&gt;|&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;____&lt;span&gt;^&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you’re familiar with a library, this isn’t a big problem. However, error messages like &lt;code&gt;no rules expected token `i1`&lt;/code&gt; make for a really nasty learning curve. I’m not sure what the right answer here is. Scala’s macros have this problem when you’re writing them, but once they’re written, you don’t typically get internal compile errors because of how expansion works.&lt;/p&gt;
&lt;h3 id=&quot;you-can-t-sort-floats&quot;&gt;You Can’t Sort Floats&lt;/h3&gt;
&lt;p&gt;Rust attempts, as much as possible, to avoid surprising behavior. Here is some surprising Python behavior:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;21&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; sorted([&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, float(&lt;span&gt;'NaN'&lt;/span&gt;), &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;])
[&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, nan, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;]
&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; sorted([&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;4&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;])
[&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to prevent this in Rust, it simply doesn’t define &lt;code&gt;Ord&lt;/code&gt; for floats:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;#[derive(PartialOrd, Ord)]&lt;/span&gt;
&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;FloatHolder&lt;/span&gt; {
    f float64
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;error[E0277]: &lt;span&gt;the&lt;/span&gt; &lt;span&gt;trait&lt;/span&gt; bound &lt;span&gt;`&lt;/span&gt;&lt;span&gt;f64&lt;/span&gt;: &lt;span&gt;std&lt;/span&gt;::cmp::Ord&lt;span&gt;`&lt;/span&gt; is not satisfied
   &lt;span&gt;-&lt;/span&gt;-&amp;gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;operator.rs:&lt;span&gt;376&lt;/span&gt;:&lt;span&gt;5&lt;/span&gt;
    &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;376&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;     f: &lt;span&gt;f64&lt;/span&gt;
    &lt;span&gt;|&lt;/span&gt;     &lt;span&gt;^^^^^^&lt;/span&gt; the &lt;span&gt;trait&lt;/span&gt; &lt;span&gt;`&lt;/span&gt;std::cmp::Ord&lt;span&gt;`&lt;/span&gt; is not implemented &lt;span&gt;for&lt;/span&gt; &lt;span&gt;`&lt;/span&gt;&lt;span&gt;f64&lt;/span&gt;&lt;span&gt;`&lt;/span&gt;
    &lt;span&gt;|&lt;/span&gt;
    &lt;span&gt;=&lt;/span&gt; note: &lt;span&gt;required&lt;/span&gt; by &lt;span&gt;`&lt;/span&gt;std::cmp::Ord::cmp&lt;span&gt;`&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I admit I was of two minds on this. Initially, it was infuriating, mostly because my specific use-case at the time didn’t enable me to use the escape hatch suggested on the internet, &lt;code&gt;partial_cmp(...).unwrap_or(Ordering::Less)&lt;/code&gt;. But I think this is a better choice than Python’s surprising behavior. I’m looking forward to progress being made on &lt;a href=&quot;https://github.com/rust-lang/rfcs/issues/1249&quot;&gt;#1249&lt;/a&gt;, which proposes adding wrapper types that implement an IEEE complete order on floats. At the end of the day, though, this is the kind of property that can make it frustrating when first getting to know a language.&lt;/p&gt;
&lt;h2 id=&quot;parting-thoughts&quot;&gt;Parting Thoughts&lt;/h2&gt;
&lt;p&gt;At the end of the day, I really enjoyed writing &lt;a href=&quot;https://github.com/rcoh/angle-grinder&quot;&gt;angle grinder&lt;/a&gt; in Rust, significantly more so than when I first wrote &lt;code&gt;Sumoshell&lt;/code&gt; as a project to learn Go. I just spent more time solving coding problems than I spent solving language problems. When I first wrote it in Go, I spent a lot of time surprised and confused by Go’s behavior. I’m not sure I’d pick it for writing a web service just yet. The posts I’ve read about people’s experience seemed to contain a lot more pain than I really want to experience. But for a writing non-trivial CLI apps, I think it’s going to be my go-to choice going forward.&lt;/p&gt;
&lt;hr/&gt;
Want to get emailed about new blog posts?

I post about once every few weeks on topics like &lt;a href=&quot;https://rcoh.me/tags/databases&quot;&gt;databases&lt;/a&gt;, &lt;a href=&quot;https://rcoh.me/tags/language-internals&quot;&gt;language internals&lt;/a&gt; and &lt;a href=&quot;https://rcoh.me/tags/algorithms&quot;&gt;algorithms&lt;/a&gt;, and recently, &lt;a href=&quot;https://rcoh.me/tags/deep-learning&quot;&gt;deep learning&lt;/a&gt;.
&lt;hr/&gt;
Do you want to hire me? I’m available for engagements from 1 week to a few months. &lt;a href=&quot;https://rcoh.me/hire-me&quot;&gt;Hire me!&lt;/a&gt;

</description>
<pubDate>Wed, 09 Jan 2019 20:06:16 +0000</pubDate>
<dc:creator>airstrike</dc:creator>
<og:title>Thoughts on Rust, a few thousand lines in</og:title>
<og:description>To say my first foray into Rust was a frustrating struggle would be an understatement. I picked a terrible first project that left me neck deep in Rust’s trickiest areas right off the bat. I was excited to try again. A few years ago I wrote Sumoshell, a CLI App for log analysis. I’d wanted to improve it for a while, so porting it to Rust seemed like a nice way to kill two birds with one stone.</og:description>
<og:type>article</og:type>
<og:url>https://rcoh.me/posts/thoughts-on-rust-a-few-thousand-lines-in/</og:url>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://rcoh.me/posts/thoughts-on-rust-a-few-thousand-lines-in/</dc:identifier>
</item>
<item>
<title>AMD Radeon VII: High-End 7nm Vega Video Card</title>
<link>https://www.anandtech.com/show/13832/amd-radeon-vii-high-end-7nm-february-7th-for-699</link>
<guid isPermaLink="true" >https://www.anandtech.com/show/13832/amd-radeon-vii-high-end-7nm-february-7th-for-699</guid>
<description>&lt;p&gt;As it turns out, the video card wars are going to charge into 2019 quite a bit hotter than any of us were expecting. Moments ago, as part of AMD’s CES 2019 keynote, CEO Dr. Lisa Su announced that AMD will be releasing a new high-end, high-performance Radeon graphics card. Dubbed the Radeon VII (Seven), AMD has their eyes set on countering NVIDIA’s previously untouchable GeForce RTX 2080. And, if the card lives up to AMD’s expectations, then come February 7&lt;sup&gt;th&lt;/sup&gt; it may just as well do that.&lt;/p&gt;
&lt;p&gt;Today’s announcement is interesting in that it’s just as much about technology as it is the 3D chess that is the market positioning fights between AMD and NVIDIA. Technically AMD isn’t announcing any new GPUs here – regular readers will correctly guess that we’re talking about Vega 20 – but the situation in the high-end market has played out such that there’s now a window for AMD to bring their cutting-edge Vega 20 GPU to the consumer market, and this is a window AMD is looking to take full advantage of.&lt;/p&gt;
&lt;p&gt;At a high level then, the Radeon VII employs a slightly cut down version of AMD’s Vega 20 GPU. With 60 of 64 CUs enabled, it actually has a few less CUs than AMD’s previous flagship, the Radeon RX Vega 64, but it makes up for the loss with much higher clockspeeds and a much more powerful memory and pixel throughput backend. As a result, AMD says that the Radeon VII should beat their former flagship by anywhere between 20% and 42% depending on the game (with an overall average of 29%), which on paper would be just enough to put the card in spitting distance of NVIDIA’s RTX 2080, and making it a viable and competitive 4K gaming card.&lt;/p&gt;
&lt;table align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;1&quot; width=&quot;650&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr class=&quot;tgrey&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot; colspan=&quot;7&quot;&gt;AMD Radeon Series Specification Comparison&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;tlblue&quot;&gt;&lt;td width=&quot;155&quot;&gt; &lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;120&quot;&gt;AMD Radeon VII&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;120&quot;&gt;AMD Radeon RX Vega 64&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;120&quot;&gt;AMD Radeon RX 590&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;120&quot;&gt;AMD Radeon R9 Fury X&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Stream Processors&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;3840&lt;br/&gt;(60 CUs)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4096&lt;br/&gt;(64 CUs)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;2304&lt;br/&gt;(36 CUs)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4096&lt;br/&gt;(64 CUs)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;ROPs&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;128&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;64&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;32&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;64&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Base Clock&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;?&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1247MHz&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1469MHz&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Boost Clock&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1800MHz&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1546MHz&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1545MHz&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1050MHz&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Memory Clock&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;2.0Gbps HBM2&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1.89Gbps HBM2&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;8Gbps GDDR5&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1Gbps HBM&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Memory Bus Width&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4096-bit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;2048-bit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;256-bit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4096-bit&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;VRAM&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;16GB&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;8GB&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;8GB&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4GB&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Single Precision Perf.&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;13.8 TFLOPS&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;12.7 TFLOPS&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;7.1 TFLOPS&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;8.6 TFLOPS&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Board Power&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;300W?&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;295W&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;225W&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;275W&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Manufacturing Process&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;TSMC 7nm&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;GloFo 14nm&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;GloFo/Samsung 12nm&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;TSMC 28nm&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Vega 20&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Vega 10&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Polaris 30&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Fiji&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Vega&lt;br/&gt;(GCN 5)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Vega&lt;br/&gt;(GCN 5)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;GCN 4&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;GCN 3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Transistor Count&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;13.2B&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;12.5B&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;5.7B&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;8.9B&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Launch Date&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;02/07/2019&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;08/14/2017&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;11/15/2018&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;06/24/2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;&lt;strong&gt;Launch Price&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;$699&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;$599&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;$279&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;$649&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Diving into the numbers a bit more, if you took AMD’s second-tier &lt;a href=&quot;https://www.anandtech.com/show/13562/amd-announces-radeon-instinct-mi60-mi50-accelerators-powered-by-7nm-vega&quot;&gt;Radeon Instinct MI50&lt;/a&gt; and made a consumer version of the card, the Radeon VII is almost exactly what it would look like. It has the same 60 CU configuration paired with 16GB of HBM2 memory. However the Radeon VII’s boost clock is a bit higher – 1800MHz versus 1746MHz – so AMD is getting the most out of those 60 CUs. Still, it’s important to keep in mind that from a pure FP32 throughput standpoint, the Vega 20 GPU was meant to be more of a sidegrade to Vega 10 than a performance upgrade; on paper the new card only has a 9% compute throughput advantage. So it’s not on compute throughput where Radeon VII’s real winning charm lies.&lt;/p&gt;
&lt;p&gt;Instead, the biggest difference between the two cards is on the memory/ROP backend. Radeon Vega 64 (Vega 10) featured 64 ROPs and 2 HBM2 memory channels running at 1.89Gbps each, for a total of 484GB/sec of memory bandwidth. Radeon VII (Vega 20) doubles this and then some to 128 ROPs and 4 HBM2 memory channels, which also means memory capacity has doubled to 16GB. And then there’s the clockspeed boost on top of this: 1800MHz for the ROPs, and 2.0Gbps for the HBM2 memory. As a result Radeon VII has a lot more pixel pushing power, and a lot more in the way of resources to feed it to get there. Given these changes and AMD’s performance estimates, I think this lends a lot of evidence to the idea that Vega 10 was unbalanced – it needed more ROPs and/or more memory bandwidth to feed it – but that’s something we’ll save for the eventual review.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13832/R7_Perf.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13832/R7_Perf_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Past that, as this is still a Vega architecture product, it’s the Vega we all know and love. There are no new graphical features here, so even if AMD has opted to shy away from putting Vega in the name of the product, it’s going to be comparable to those parts as far as gaming is concerned. The Vega 20 GPU does bring new compute features – particularly much higher FP64 compute throughput and new low-precision modes well-suited for neural network inferencing – but these features aren’t something consumers are likely to use. Past that, AMD will be employing some mild product segmentation here to avoid having the Radeon VII cannibalize the MI50 – the Radeon VII does not get PCIe 4.0 support, nor does it get Infinity Link support –&lt;/p&gt;
&lt;p&gt;The other wildcard for the moment is TDP. The MI50 is rated for 300W, and while AMD’s event did not announce a TDP for the card, I fully expect AMD is running the Radeon VII just as hard here, if not a bit harder. Make no mistake: AMD is still having to go well outside the sweet spot on their voltage/frequency curve to hit these high clockspeeds, so AMD isn’t even trying to win the efficiency race. Radeon VII will be more efficient than Radeon Vega 64 – AMD is saying 25% more perf at the same power – but even if AMD hits RTX 2080’s performance numbers, there’s nothing here to indicate that they’ll be able to meet its efficiency. This is another classic AMD play: go all-in on trying to win on the price/performance front.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13832/Screen%20Shot%202019-01-09%20at%2012.45.43%20PM.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13832/Screen%20Shot%202019-01-09%20at%2012.45.43%20PM_575px.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Accordingly, the Radeon VII is not a small card. The photos released show that it’s a sizable open-air triple fan cooled design, with a shroud that sticks up past the top of the I/O bracket. Coupled with the dual 8-pin PCIe power plugs on the rear of the card, and it’s clear AMD intends to remove a lot of heat. Both AMD and NVIDIA have now gone with open-air designs for their high-end cards on this most recent generation, so it’s an interesting development, and one that favors AMD given their typically higher TDPs.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13832/R7_Bench.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13832/R7_Bench_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vendor performance claims should always be taken with a grain of salt, but for the moment this is what we have. If AMD manages to reach RTX 2080 performance, then I expect this to be another case of where the two cards are tied on average but are anything but equal; there will be games where AMD falls behind, games where they do tie the RTX 2080, and then even some games they pull ahead in. These scenarios are always the most interesting for reviewers, but they’re also a bit trickier for consumers since it means there’s no clear-cut winner.&lt;/p&gt;
&lt;p&gt;All told then, the competitive landscape is going to be an interesting one. AMD’s own proposition is actually fairly modest; with a $699 price tag they’re launching at the same price as the RTX 2080, over four months after the RTX 2080. They are presumably not going to be able to match NVIDIA’s energy efficiency, and they won’t have feature parity since AMD doesn’t (yet) have its own DirectX Raytracing (DXR) implementation.&lt;/p&gt;
&lt;p&gt;But what AMD does have, besides an at least competitive price and presumably competitive performance in today’s games, is a VRAM advantage. Whereas NVIDIA didn’t increase their VRAM amounts between generations, AMD is for this half-generation card, giving them 16GB of VRAM to RTX 2080’s 8GB. Now whether this actually translates into a performance advantage now or in the near future is another matter; AMD has tried this gambit before with the Radeon 390 series, where it didn’t really pay off. On the other hand, the fact that NVIDIA’s VRAM capacities have been stagnant for a generation means that AMD is delivering a capacity increase “on schedule” as opposed to ahead of schedule. So while far from guaranteed, it could work in AMD’s favor. Especially as, given the performance of the card, AMD intends for the Radeon VII to be all-in on 4K gaming, which will push memory consumption higher.&lt;/p&gt;
&lt;p&gt;Finally on the gaming front, not content to compete on just performance and pricing, AMD will also be competing on gaming bundles. The Radeon VII will be launching with a 3 game bundle, featuring Resident Evil 2, Devil May Cry 5, and The Division 2. NVIDIA of course launched their own Anthem + Battlefield V bundle at the start of this week, so both sides are now employing their complete bags of tricks to attract buyers and to prop up the prices of their cards.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13832/R7_Bundle.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13832/R7_Bundle_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Speaking of pricing, perhaps the thing that surprises me the most is that we’re even at this point – with AMD releasing a Vega 20 consumer card. When they first announced Vega 20 back in 2018, they &lt;a href=&quot;https://www.anandtech.com/show/12910/amd-demos-7nm-vega-radeon-instinct-shipping-2018&quot;&gt;made it very clear it was going to be for the Radeon Instinct series only&lt;/a&gt;. That the new features of the Vega 20 GPU were better suited for that market, and more importantly as a relatively large chip (331mm&lt;sup&gt;2&lt;/sup&gt;) for this early in the life of TSMC’s 7nm manufacturing node, yields were going to be poor.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13832/Vega20.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13832/Vega20_575px.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So that AMD is able to sell what are admittedly defective/recovered Vega 20s in a $699 card, produce enough of them to meet market demand, and still turn a profit on all of this is a surprising outcome. I simply would not have expected AMD to get a 7nm chip out at consumer prices this soon. All I can say is that either AMD has pulled off a very interesting incident of consumer misdirection, or the competitive landscape has evolved slowly enough that Vega 20 is viable where it otherwise wouldn’t have been. Or perhaps it’s a case of both.&lt;/p&gt;
&lt;p&gt;Shifting gears for a second, while I’ve focused on gaming thus far, it should be noted that AMD is going after the content creation market with the Radeon VII as well. This is still a Radeon card and not a Radeon Pro card, but as we’ve seen before, AMD has been able to make a successful market out of offering such cards with only a basic level of software developer support. In this case AMD is expecting performance gains similar to the gaming side, with performance improving the more a workload is pixel or memory bandwidth bound.&lt;/p&gt;
&lt;p&gt;Wrapping things up, the Radeon VII will be hitting the streets on February 7&lt;sup&gt;th&lt;/sup&gt; for $699. At this point AMD has not announced anything about board partners doing custom designs, so it looks like this is going to be a pure reference card launch. As always, stay tuned and we should know a bit more information as we get closer to the video card’s launch date.&lt;/p&gt;
</description>
<pubDate>Wed, 09 Jan 2019 19:35:57 +0000</pubDate>
<dc:creator>shock</dc:creator>
<og:title>AMD Reveals Radeon VII: High-End 7nm Vega Video Card Arrives February 7th for $699</og:title>
<og:type>article</og:type>
<og:url>https://www.anandtech.com/show/13832/amd-radeon-vii-high-end-7nm-february-7th-for-699</og:url>
<og:image>https://images.anandtech.com/doci/13832/R7_Car2_678x452.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.anandtech.com/show/13832/amd-radeon-vii-high-end-7nm-february-7th-for-699</dc:identifier>
</item>
<item>
<title>Show HN: I taught my little brother JS, and he made this videogame in a week</title>
<link>https://s-poony.github.io/Ultra-Square-Catcher-USC-/jeuvideo.html</link>
<guid isPermaLink="true" >https://s-poony.github.io/Ultra-Square-Catcher-USC-/jeuvideo.html</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://s-poony.github.io/Ultra-Square-Catcher-USC-/jeuvideo.html&quot;&gt;https://s-poony.github.io/Ultra-Square-Catcher-USC-/jeuvideo.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18866500&quot;&gt;https://news.ycombinator.com/item?id=18866500&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 990&lt;/p&gt;
&lt;p&gt;# Comments: 252&lt;/p&gt;
</description>
<pubDate>Wed, 09 Jan 2019 17:13:59 +0000</pubDate>
<dc:creator>lovasoa</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://s-poony.github.io/Ultra-Square-Catcher-USC-/jeuvideo.html</dc:identifier>
</item>
<item>
<title>Penguin travels every year to visit man who rescued him (2016)</title>
<link>https://www.cbc.ca/news/trending/dindim-o-lindo-pinguim-1.3487668</link>
<guid isPermaLink="true" >https://www.cbc.ca/news/trending/dindim-o-lindo-pinguim-1.3487668</guid>
<description>&lt;p&gt;&lt;span&gt;Ever since a 71-year-old Brazilian man rescued a struggling penguin, he's been receiving regular visits from his feathered friend.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Joao Pereira de Souza, a retired bricklayer, lives on Proveta, a fishing village just off the coast of Rio de Janeiro. In 2011, he spotted a starving Magellanic penguin drenched in oil on the beach near his house. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Naming the penguin Dindim, Pereira de Souza fed him every day until he was strong enough to leave, &lt;a href=&quot;https://www.facebook.com/ciencias.fsa/videos/1039393452790200/&quot;&gt;according to a video from the University of Rio de Janeiro&lt;/a&gt;. But the penguin refused to go.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Pereira de Souza decided to row a boat out into the water and drop Dindim off to encourage him to swim home.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But when he rowed back to shore, he found the penguin waiting for him at his shanty.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&quot;He stayed with me for 11 months and then, just after he changed his coat with new feathers, he disappeared,&quot; Pereira de Souza told &lt;a href=&quot;http://gshow.globo.com/Bastidores/noticia/2016/03/pinguim-curioso-se-apaixona-por-camera-nos-bastidores-do-domingao-do-faustao-assista.html&quot;&gt;TV Globo, a Brazilian TV network.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Magellanic penguins regularly swim thousands of kilometres a year to breeding spots on the coast of Argentina and Chile. From time to time, penguins show up in warmer Brazilian waters, according to the Wall Street Journal.&lt;/p&gt;
&lt;p&gt;Many of Pereira de Souza's friends thought that when Dindim finally left, that was it for the human-bird friendship.&lt;/p&gt;
&lt;p&gt;But a few months later, Dindim returned and found Pereira de Souza. He visits for about four months, a ritual kept for the last five years. &lt;/p&gt;
&lt;p&gt;&quot;He arrives in June and leaves to go home in February, and every year he becomes more affectionate, as he appears even happier to see me,&quot; &lt;a href=&quot;http://gshow.globo.com/Bastidores/noticia/2016/03/pinguim-curioso-se-apaixona-por-camera-nos-bastidores-do-domingao-do-faustao-assista.html&quot;&gt;Pereira de Souza told TV Globo.&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.3487812.1457729032!/fileImage/httpImage/image.PNG_gen/derivatives/original_780/penguin-dindim.PNG&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Dindim makes his way from Patagonia back to de Souza's beach in Proveta, off the coast of Rio de Janeiro.  (University of Rio de Janeiro)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;De Souza appears to be the only person who can get near Dindim. If others try, he pecks them or waddles away.&lt;/p&gt;
&lt;p&gt;&quot;I think the penguin believes Joao is part of his family and probably a penguin as well,&quot; &lt;a href=&quot;http://www.independent.co.uk/news/world/americas/meet-dindim-the-penguin-who-returns-to-his-human-soulmate-every-year-a6917621.html&quot;&gt;biologist Joao Paulo Krajewski said to the Independent.&lt;/a&gt; &quot;When he sees him he wags his tail like a dog and honks with delight.&quot;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;youtube&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/6McB0jhPWqs&quot; frameborder=&quot;no&quot; title=&quot;YouTube content&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Krajewski helped report the segment for TV Globo, and said that they caught Dindim on his fifth trip out to see Pereira de Souza.&lt;/p&gt;
&lt;p&gt;&quot;It's really impressive, the love the two of them have,&quot; &lt;a href=&quot;http://gshow.globo.com/Bastidores/noticia/2016/03/pinguim-curioso-se-apaixona-por-camera-nos-bastidores-do-domingao-do-faustao-assista.html&quot;&gt;Krajewski said in the segment on the TV Globo show.&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.3487778.1457728486!/fileImage/httpImage/image.PNG_gen/derivatives/original_780/patagonia.PNG&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Magellanic penguins breed along the coast of Patagonia. (Wikimedia)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;It's technically illegal to have a wild animal as a pet in Brazil, as officials want to ensure vulnerable creatures don't get separated from their families and that they can be reintroduced into the wild after injury. &lt;/p&gt;
&lt;p&gt;The Independent also reported that there's been concern over how climate change could be forcing these penguins farther north into the warmer Brazilian waters. &lt;/p&gt;
&lt;p&gt;It's unlikely that Dindim is going all the way back to his home territory in Patagonia, since he spends the time he'd usually be breeding and moulting with Pereira de Souza, &lt;a href=&quot;https://www.facebook.com/joaopaulo.krajewski/posts/1008600529225514&quot;&gt;Krajewski said in a Facebook post.&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;He believes that Dindim now interprets Proveta as his home, and imprinted on the 71-year-old, whom Dindim sees as a partner. For reasons like these, most professionals try to avoid this circumstance.&lt;/p&gt;
&lt;p&gt;&quot;This isolated case in Brazil certainly allowed Dindim to live and was the best this humble and kind man could do for the penguin,&quot; &lt;a href=&quot;https://www.facebook.com/joaopaulo.krajewski/posts/1008600529225514&quot;&gt;he wrote&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&quot;I love the penguin like it's my own child,&quot; said Pereira de Souza to Globo TV. &quot;And I believe the penguin loves me.&quot;&lt;/p&gt;
</description>
<pubDate>Wed, 09 Jan 2019 16:12:09 +0000</pubDate>
<dc:creator>colinprince</dc:creator>
<og:url>https://www.cbc.ca/news/trending/dindim-o-lindo-pinguim-1.3487668</og:url>
<og:title>Long-distance love brings penguin to man who rescued him every year | CBC News</og:title>
<og:image>https://i.cbc.ca/1.3487755.1457727991!/fileImage/httpImage/image.PNG_gen/derivatives/16x9_620/joao-and-dindim.PNG</og:image>
<og:description>Ever since a 71-year-old Brazilian man rescued this penguin, he's regularly travelled to his beach visit the man.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cbc.ca/news/trending/dindim-o-lindo-pinguim-1.3487668</dc:identifier>
</item>
<item>
<title>Show HN: Top PDFs Posted to Hacker News in 2018</title>
<link>https://getpolarized.io/2019/01/08/top-pdfs-of-2018-hackernews.html</link>
<guid isPermaLink="true" >https://getpolarized.io/2019/01/08/top-pdfs-of-2018-hackernews.html</guid>
<description>&lt;img class=&quot;img-fluid&quot; src=&quot;https://getpolarized.io/assets/images/openbook.png&quot;/&gt;&lt;p&gt;Hacker News is a GREAT source of tech news but one of the things I really like about it is when insanely smart people post actual PDFs they've found.&lt;/p&gt;
&lt;p&gt;In the past I've seen PDFs from text books, brilliant original research and even old trusted technical books from the 80s and 90s.&lt;/p&gt;
&lt;p&gt;So I figured it would be interesting to compute the top PDFs from 2018.&lt;/p&gt;
&lt;p&gt;At &lt;a href=&quot;http://www.datastreamer.io/&quot;&gt;Datastreamer&lt;/a&gt; (my company when not working on &lt;a href=&quot;https://getpolarized.io&quot;&gt;Polar&lt;/a&gt;) we have nearly a petabyte of web data to play with. We provide data indexing services for companies &lt;strong&gt;serious&lt;/strong&gt; indexing web data (think search engines).&lt;/p&gt;
&lt;p&gt;Turns out we have 12 copies of Hacker News for every day of 2018.&lt;/p&gt;
&lt;h2&gt;How it's calculated&lt;/h2&gt;
&lt;p&gt;So I threw some code together to quickly parse out the top links. I actually thought they would be helpful for users of Polar so I decided to share with class.&lt;/p&gt;
&lt;p&gt;This is computed by taking any link to a PDF file that was on the front page at least once in a 24 hour period.&lt;/p&gt;
&lt;h2&gt;The List!&lt;/h2&gt;
&lt;p&gt;Without further ado, here's the full list of the top PDFs from Hacker News in 2018.&lt;/p&gt;
&lt;p&gt;Also, if you need a tool to manage your PDFs which supports annotation and highlighting you should really take a look at &lt;a href=&quot;https://getpolarized.io&quot;&gt;Polar&lt;/a&gt;. It's Open Source, cross platform, and designed for people passionate about reading, education, and research.&lt;/p&gt;
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































</description>
<pubDate>Wed, 09 Jan 2019 15:43:35 +0000</pubDate>
<dc:creator>burtonator</dc:creator>
<og:title>Over 500 Top PDFs posted to Hacker News in 2018</og:title>
<og:description>A powerful document manager for Mac, Windows, and Linux for managing web content, books, and notes and supports tagging, annotation, highlighting and keeps track of your reading progress.</og:description>
<og:url>https://getpolarized.io/2019/01/08/top-pdfs-of-2018-hackernews.html</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://getpolarized.io/2019/01/08/top-pdfs-of-2018-hackernews.html</dc:identifier>
</item>
</channel>
</rss>