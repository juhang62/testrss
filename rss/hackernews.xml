<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The Day I Fell in Love with Fuzzing</title>
<link>https://nullprogram.com/blog/2019/01/25/</link>
<guid isPermaLink="true" >https://nullprogram.com/blog/2019/01/25/</guid>
<description>&lt;time datetime=&quot;2019-01-25&quot;&gt;January 25, 2019&lt;/time&gt;&lt;p&gt;nullprogram.com/blog/2019/01/25/&lt;/p&gt;
&lt;p&gt;In 2007 I wrote a pair of modding tools, &lt;a href=&quot;https://github.com/skeeto/binitools&quot;&gt;binitools&lt;/a&gt;, for a space trading and combat simulation game named &lt;a href=&quot;https://en.wikipedia.org/wiki/Freelancer_(video_game)&quot;&gt;&lt;em&gt;Freelancer&lt;/em&gt;&lt;/a&gt;. The game stores its non-art assets in the format of “binary INI” files, or “BINI” files. The motivation for the binary format over traditional INI files was probably performance: it’s faster to load and read these files than it is to parse arbitrary text in INI format.&lt;/p&gt;
&lt;p&gt;Much of the in-game content can be changed simply by modifying these files — changing time names, editing commodity prices, tweaking ship statistics, or even adding new ships to the game. The binary nature makes them unsuitable to in-place modification, so the natural approach is to convert them to text INI files, make the desired modifications using a text editor, then convert back to the BINI format and replace the file in the game’s installation.&lt;/p&gt;
&lt;p&gt;I didn’t reverse engineer the BINI format, nor was I the first person the create tools to edit them. The existing tools weren’t to my tastes, and I had my own vision for how they should work — an interface more closely following &lt;a href=&quot;http://www.catb.org/esr/writings/taoup/html/&quot;&gt;the Unix tradition&lt;/a&gt; despite the target being a Windows game.&lt;/p&gt;
&lt;p&gt;When I got started, I had just learned how to use &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/yacc.html&quot;&gt;yacc&lt;/a&gt; (really &lt;a href=&quot;https://www.gnu.org/software/bison/&quot;&gt;Bison&lt;/a&gt;) and &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/lex.html&quot;&gt;lex&lt;/a&gt; (really &lt;a href=&quot;https://github.com/westes/flex&quot;&gt;flex&lt;/a&gt;), as well as Autoconf, so I went all-in with these newly-discovered tools. It was exciting to try them out in a real-world situation, though I slavishly aped the practices of other open source projects without really understanding why things were they way they were. Due to the use of yacc/lex and the configure script build, compiling the project required a full, Unix-like environment. This is all visible in &lt;a href=&quot;https://github.com/skeeto/binitools/tree/original&quot;&gt;the original version of the source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project was moderately successful in two ways. First, I was able to use the tools to modify the game. Second, other people were using the tools, since the binaries I built show up in various collections of Freelancer modding tools online.&lt;/p&gt;
&lt;h3 id=&quot;the-rewrite&quot;&gt;The Rewrite&lt;/h3&gt;
&lt;p&gt;That’s the way things were until mid-2018 when I revisited the project. Ever look at your own old code and wonder what they heck you were thinking? My INI format was far more rigid and strict than necessary, I was doing questionable things when writing out binary data, and the build wasn’t even working correctly.&lt;/p&gt;
&lt;p&gt;With an additional decade of experience under my belt, I knew I could do &lt;em&gt;way&lt;/em&gt; better if I were to rewrite these tools today. So, over the course of a few days, I did, from scratch. That’s what’s visible in the master branch today.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nullprogram.com/blog/2017/03/30/&quot;&gt;I like to keep things simple&lt;/a&gt; which meant no more Autoconf, and instead &lt;a href=&quot;https://nullprogram.com/blog/2017/08/20/&quot;&gt;a simple, portable Makefile&lt;/a&gt;. No more yacc or lex, and instead a hand-coded parser. Using only conforming, portable C. The result was so simple that I can &lt;a href=&quot;https://nullprogram.com/blog/2016/06/13/&quot;&gt;build using Visual Studio&lt;/a&gt; in a single, short command, so the Makefile isn’t all that necessary. With one small tweak (replace &lt;code class=&quot;highlighter-rouge&quot;&gt;stdint.h&lt;/code&gt; with a &lt;code class=&quot;highlighter-rouge&quot;&gt;typedef&lt;/code&gt;), I can even &lt;a href=&quot;https://nullprogram.com/blog/2018/04/13/&quot;&gt;build and run binitools in DOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new version is faster, leaner, cleaner, and simpler. It’s far more flexible about its INI input, so its easier to use. But is it more correct?&lt;/p&gt;
&lt;h3 id=&quot;fuzzing&quot;&gt;Fuzzing&lt;/h3&gt;
&lt;p&gt;I’ve been interested in &lt;a href=&quot;https://labs.mwrinfosecurity.com/blog/what-the-fuzz/&quot;&gt;fuzzing&lt;/a&gt; for years, especially &lt;a href=&quot;http://lcamtuf.coredump.cx/afl/&quot;&gt;american fuzzy lop&lt;/a&gt;, or &lt;em&gt;afl&lt;/em&gt;. However, I wasn’t having success with it. I’d fuzz some of the tools I use regularly, and it wouldn’t find anything of note, at least not before I gave up. I fuzzed &lt;a href=&quot;https://github.com/skeeto/pdjson&quot;&gt;my JSON library&lt;/a&gt;, and somehow it turned up nothing. Surely my JSON parser couldn’t be &lt;em&gt;that&lt;/em&gt; robust already, could it? Fuzzing just wasn’t accomplishing anything for me. (As it turns out, my JSON library &lt;em&gt;is&lt;/em&gt; quite robust, thanks in large part to various contributors!)&lt;/p&gt;
&lt;p&gt;So I’ve got this relatively new INI parser, and while it can successfully parse and correctly re-assemble the game’s original set of BINI files, it hasn’t &lt;em&gt;really&lt;/em&gt; been exercised that much. Surely there’s something in here for a fuzzer to find. Plus I don’t even have to write a line of code in order to run afl against it. The tools already read from standard input by default, which is perfect.&lt;/p&gt;
&lt;p&gt;Assuming you’ve got the necessary tools installed (make, gcc, afl), here’s how easy it is to start fuzzing binitools:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ make CC=afl-gcc
$ mkdir in out
$ echo '[x]' &amp;gt; in/empty
$ afl-fuzz -i in -o out -- ./bini
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;bini&lt;/code&gt; utility takes INI as input and produces BINI as output, so it’s far more interesting to fuzz than its inverse, &lt;code class=&quot;highlighter-rouge&quot;&gt;unbini&lt;/code&gt;. Since &lt;code class=&quot;highlighter-rouge&quot;&gt;unbini&lt;/code&gt; parses relatively simple binary data, there are (probably) no bugs for the fuzzer to find. I did try anyway just in case.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://nullprogram.com/img/screenshot/afl.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In my example above, I swapped out the default compiler for afl’s GCC wrapper (&lt;code class=&quot;highlighter-rouge&quot;&gt;CC=afl-gcc&lt;/code&gt;). It calls GCC in the background, but in doing so adds its own instrumentation to the binary. When fuzzing, &lt;code class=&quot;highlighter-rouge&quot;&gt;afl-fuzz&lt;/code&gt; uses that instrumentation to monitor the program’s execution path. The &lt;a href=&quot;http://lcamtuf.coredump.cx/afl/technical_details.txt&quot;&gt;afl whitepaper&lt;/a&gt; explains the technical details.&lt;/p&gt;
&lt;p&gt;I also created input and output directories, placing a minimal, working example into the input directory, which gives afl a starting point. As afl runs, it mutates a queue of inputs and observes the changes on the program’s execution. The output directory contains the results and, more importantly, a corpus of inputs that cause unique execution paths. In other words, the fuzzer output will be lots of inputs that exercise many different edge cases.&lt;/p&gt;
&lt;p&gt;The most exciting and dreaded result is a crash. The first time I ran it against binitools, &lt;code class=&quot;highlighter-rouge&quot;&gt;bini&lt;/code&gt; had &lt;em&gt;many&lt;/em&gt; such crashes. Within minutes, afl was finding a number of subtle and interesting bugs in my program, which was &lt;em&gt;incredibly&lt;/em&gt; useful. It even discovered an unlikely &lt;a href=&quot;https://github.com/skeeto/binitools/commit/b695aec7d0021299cbd83c8c6983055f16d11507&quot;&gt;stale pointer bug&lt;/a&gt; by exercising different orderings for various memory allocations. This particular bug was the turning point that made me realize the value of fuzzing.&lt;/p&gt;
&lt;p&gt;Not all the bugs it found led to crashes. I also combed through the outputs to see what sorts of inputs were succeeding, what was failing, and observe how my program handled various edge cases. It was rejecting some inputs I thought should be valid, accepting some I thought should be invalid, and interpreting some in ways I hadn’t intended. So even after I fixed the crashing inputs, I still made tweaks to the parser to fix each of these troublesome inputs.&lt;/p&gt;
&lt;h3 id=&quot;building-a-test-suite&quot;&gt;Building a test suite&lt;/h3&gt;
&lt;p&gt;Once I combed out all the fuzzer-discovered bugs, and I agreed with the parser on how all the various edge cases should be handled, I turned the fuzzer’s corpus into a test suite — though not directly.&lt;/p&gt;
&lt;p&gt;I had run the fuzzer in parallel — a process that is explained in the afl documentation — so I had lots of redundant inputs. By redundant I mean that the inputs are different but have the same execution path. Fortunately afl has a tool to deal with this: &lt;code class=&quot;highlighter-rouge&quot;&gt;afl-cmin&lt;/code&gt;, the corpus minimization tool. It eliminates all the redundant inputs.&lt;/p&gt;
&lt;p&gt;Second, many of these inputs were longer than necessary in order to invoke their unique execution path. There’s &lt;code class=&quot;highlighter-rouge&quot;&gt;afl-tmin&lt;/code&gt;, the test case minimizer, which I used to further shrink my test corpus.&lt;/p&gt;
&lt;p&gt;I sorted the valid from invalid inputs and checked them into the repository. Have a look at all the wacky inputs &lt;a href=&quot;https://lcamtuf.blogspot.com/2014/11/pulling-jpegs-out-of-thin-air.html&quot;&gt;invented by&lt;/a&gt; the fuzzer starting from my single, minimal input:&lt;/p&gt;
&lt;p&gt;This essentially locks down the parser, and the test suite ensures a particular build behaves in a &lt;em&gt;very&lt;/em&gt; specific way. This is most useful for ensuring that builds on other platforms and by other compilers are indeed behaving identically with respect to their outputs. My test suite even revealed a bug in diet libc, as binitools doesn’t pass the tests when linked against it. If I were to make non-trivial changes to the parser, I’d essentially need to scrap the current test suite and start over, having afl generate an entire new corpus for the new parser.&lt;/p&gt;
&lt;p&gt;Fuzzing has certainly proven itself to be a powerful technique. It found a number of bugs that I likely wouldn’t have otherwise discovered on my own. I’ve since gotten more savvy on its use and have used it on other software — not just software I’ve written myself — and discovered more bugs. It’s got a permanent slot on my software developer toolbelt.&lt;/p&gt;
&lt;ol class=&quot;references print-only&quot;/&gt;&lt;nav class=&quot;no-print&quot;&gt;
&lt;/nav&gt;
</description>
<pubDate>Mon, 28 Jan 2019 17:03:21 +0000</pubDate>
<dc:creator>eaguyhn</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://nullprogram.com/blog/2019/01/25/</dc:identifier>
</item>
<item>
<title>A Standard and Clean Series A Term Sheet</title>
<link>https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/</link>
<guid isPermaLink="true" >https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/</guid>
<description>&lt;p&gt;While working with companies in &lt;a href=&quot;https://blog.ycombinator.com/category/series-a/&quot;&gt;YC’s Series A program&lt;/a&gt;, we’ve noticed a common problem: founders don’t know what “good” looks like in a term sheet. This makes sense, because it is often, literally, the first time in their careers that they’ve seen one. This puts founders at a significant disadvantage because VCs see term sheets all the time and know what to expect. Because we’ve invested in so many founders over the years and have seen hundreds of Series A term sheets, we know what “good” looks like. We work with our founders to understand where terms diverge from “good”, what they can do about that divergence, and when and how it makes sense to negotiate.&lt;/p&gt;
&lt;p&gt;Below is what a Series A term sheet looks like with standard and clean terms from a good Silicon Valley VC. Bracketed items (besides the names of the company and lead investor) are always or frequently negotiated. Items not in brackets are sometimes negotiated, but this has more to do with the idiosyncratic features of the company or the situation, and generally aren’t terms that parties intend to heavily bargain over during the negotiation.&lt;/p&gt;
&lt;p&gt;One of the critical things you’ll notice is that we didn’t put in standard pricing. While the lead in a Series A round generally wants 20% of the company, pricing can flex up and down depending on the leverage held by each side. We think price is an important term, but too specific to each raise to try to create a standard. We’re more concerned with terms around control and structure that are less familiar to founders, and therefore more prone to cause confusion and trouble.&lt;/p&gt;
&lt;p&gt;Note: this term sheet doesn’t belong to any particular VC — we drafted it — but it does substantively reflect what we see most often. Founders with a lot of negotiating leverage can sometimes do better, and the converse is true too.&lt;/p&gt;
&lt;p&gt;You can also download the &lt;a href=&quot;https://www.ycombinator.com/docs/Standard_Series_A_TS.docx&quot;&gt;Word version of the doc here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-1.png&quot;&gt;&lt;img src=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-1-790x1024.png&quot; alt=&quot;&quot; width=&quot;780&quot; height=&quot;1011&quot; class=&quot;aligncenter size-large wp-image-1103405&quot; srcset=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-1-790x1024.png 790w, https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-1-231x300.png 231w, https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-1-768x996.png 768w, https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-1.png 1234w&quot; sizes=&quot;(max-width: 780px) 100vw, 780px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-2.png&quot;&gt;&lt;img src=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-2-1024x724.png&quot; alt=&quot;&quot; width=&quot;780&quot; height=&quot;551&quot; class=&quot;aligncenter size-large wp-image-1103406&quot; srcset=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-2-1024x724.png 1024w, https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-2-300x212.png 300w, https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-2-768x543.png 768w, https://blog.ycombinator.com/wp-content/uploads/2019/01/Series-A-2.png 1582w&quot; sizes=&quot;(max-width: 780px) 100vw, 780px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It may be surprising to see everything covered in a single page. This wasn’t always the case, but became common over the last decade as some investors decided to make their term sheets more user friendly by shortening the legalese as if to say, “We aren’t going to get bogged down in the minutiae. We’re going to make this easy, friendly, standard and fast.”&lt;/p&gt;
&lt;p&gt;This leads us to the most important thing to understand about the term sheet: it’s another way in which your Series A investor might be telling you something. A contract allocates risks between the parties, so the terms the investor insists on can sometimes say a lot about the investor’s perceived risks. These perceived risks show up in a couple of ways.&lt;/p&gt;
&lt;p&gt;The first way relates to control terms. We don’t mean the set of investor vetoes in the “Voting Rights” section, which are pretty standard fare, but rather issues of board composition and the investor’s ability to block or dictate operational decisions made by the board. The board structure in this term sheet is founder-friendly because the founders retain board control 2-1. The way in which founders most often lose control at the Series A is with a 2-2-1 board structure, i.e. 2 founders, 2 investors and an independent board member. The loss of board control is most significant because it means the founders can be fired from their own company. Another way in which founders lose some control is a term that doesn’t appear in the standard example above, which is a separate provision that says the investor director’s approval is required for operational decisions like setting the annual budget, hiring/firing executives, pivoting the business, adding new lines of business, etc. When boards are set up to take power away from founders, the investor’s outward justification will frequently be reasons of governance or accountability. But the more power that’s taken away, the more it’s undeniable that the investor is attempting to structure away a perceived risk. So when an investor says that they’re committed to partnering with you for the long-term – or that they’re betting everything on you – but then tells you something else with the terms that they insist on, believe the terms.&lt;/p&gt;
&lt;p&gt;The other way perceived risks manifest is if a term sheet includes non-standard or “dirty” economic terms. Here, the term sheet example is instructive not for what it contains but what it &lt;em&gt;doesn’t&lt;/em&gt;. Examples of such terms would be:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Liquidation preference greater than 1x — the investor gets back more than its invested capital first.&lt;/li&gt;
&lt;li&gt;Participating preferred — the investor double-dips by getting its money back plus its pro rata portion of exit proceeds, rather than choosing between the two.&lt;/li&gt;
&lt;li&gt;Cumulative dividends — the investor compounds its liquidation preference every year by X%, which increases the economic hurdle that has to be cleared before founders and employees see any value.&lt;/li&gt;
&lt;li&gt;Warrant coverage — the investor gets extra fully diluted ownership without paying for it at the agreed upon valuation.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These are all ways of adding structure to reduce typical venture risk, either directly by boosting the investor’s downside economics, or indirectly by juicing the upside outcomes. The investor is essentially saying, “I’m sort of afraid of losing my money.” It can also foreshadow how they might behave when things aren’t going well, such as pushing you to sell when you don’t want to, or dial back risk when it’s important to take it. Good investors would rather address economic risks by negotiating valuation, and are otherwise happy to give standard terms because they know that the real money in venture is not made with structure, but by building long-term value, which they are confident in their ability to help you do.&lt;/p&gt;
&lt;p&gt;The last thing to remember is that your Series A documents are a foundation and precedent for the terms of future rounds. Good foundations make the next term sheet and financing round fast and simple, as future investors just step into the same straightforward terms. Doing the opposite complicates future fundraises, such as future investors asking for the same structure-heavy terms, existing investors refusing to drop terms that subsequent investors want removed as a precondition of investing, etc. Unwinding bad terms is difficult, and oftentimes impossible.&lt;/p&gt;
&lt;p&gt;That said, the point is to get a clean deal, not to cycle a lot to get the perfect deal. No one ever built an enduring company just by winning their Series A negotiation. Also, even if you can’t get everything right or the way you want it, you always have the power to execute. If you do that, the value you build can outrun suboptimal terms or establish leverage to renegotiate later. So don’t lose sight of the ultimate goal: closing fast and getting back to work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; Some great investors still send longer term sheets, but this has more to do with their preference for going a bit deeper into the details at this stage, rather than deferring this until the definitive documents. The definitive documents are derived from the term sheet and are the much longer (100+ pages) binding contracts that everyone signs and closes on. It’s common to negotiate a few additional points at this stage, though deviation from anything explicitly addressed in the term sheet is definitely re-trading. Also, in a few places, this term sheet refers to certain terms as being “standard.” That may seem vague and circular, but term sheets frequently do describe certain terms that way. What that really means is that there’s an accepted practice of what appears in the docs for these terms among the lawyers who specialize in startups and venture deals, so make sure your lawyer (and the investor’s lawyer) fit that description.&lt;a href=&quot;https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/#footnoteid1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; The two most impactful investor vetoes in this section are the veto on a financing, which is covered by clauses (ii) and (iii), and the veto on a sale of the company, which is in clause (vii). We point these out because the concrete implications of these clauses aren’t facially obvious, and because most term sheets use similar technical jargon for these vetoes.&lt;a href=&quot;https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/#footnoteid2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; The founders implicitly control those 2 seats because they’re designated by a majority of common, and founders generally control a majority of common for a long time. In even more founder-friendly term sheets, those 2 seats may be designated by the founders themselves (as individuals).&lt;a href=&quot;https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/#footnoteid3&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; Whether being fired from the company as an employee also triggers the removal of the founder from the board is a separate question and depends on what was negotiated in the financing documents. Sometimes a founder’s right to vote her shares to appoint a director will be conditioned on the founder being currently employed by the company. Whenever conditions are attached to your rights to vote on anything, make sure to ask your lawyer to walk you through the various scenarios in which those conditions matter and how they can hurt you.&lt;a href=&quot;https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/#footnoteid4&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is not legal advice.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to Carolynn Levy, Jon Levy, and Nicole Cadman for their comments on this.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 28 Jan 2019 16:59:56 +0000</pubDate>
<dc:creator>akharris</dc:creator>
<og:title>A Standard and Clean Series A Term Sheet</og:title>
<og:url>https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/</og:url>
<og:type>article</og:type>
<og:description>We wrote a standard Series A term sheet to create more transparency in the market.</og:description>
<og:image>https://blog.ycombinator.com/wp-content/uploads/2019/01/A-Standard-and-Clean-Series-A-Term-Sheet.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.ycombinator.com/a-standard-and-clean-series-a-term-sheet/</dc:identifier>
</item>
<item>
<title>Foxconn Expands Operations in India, Vietnam Amid Trade Tensions</title>
<link>https://www.bloombergquint.com/business/hon-hai-expands-operations-in-india-vietnam-amid-trade-tensions#gs.pXdcbNaX</link>
<guid isPermaLink="true" >https://www.bloombergquint.com/business/hon-hai-expands-operations-in-india-vietnam-amid-trade-tensions#gs.pXdcbNaX</guid>
<description>&lt;div readability=&quot;14&quot;&gt;
&lt;h4 class=&quot;tophat-menu-module__grid-headline__3wqIm&quot;&gt;Bloomberg&lt;/h4&gt;
&lt;p&gt;Bloomberg | Quint is a multiplatform, Indian business and financial news company. We combine Bloomberg’s global leadership in business and financial news and data, with Quintillion Media’s deep expertise in the Indian market and digital news delivery, to provide high quality business news, insights and trends for India’s sophisticated audiences.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;11&quot;&gt;
&lt;h4 class=&quot;tophat-menu-module__grid-headline__3wqIm&quot;&gt;Customer Support&lt;/h4&gt;
&lt;p&gt;&lt;label class=&quot;tophat-menu-module__text-content-label__2znyu&quot;&gt;Americas&lt;/label&gt;+1 212 318 2000&lt;/p&gt;
&lt;p&gt;&lt;label class=&quot;tophat-menu-module__text-content-label__2znyu&quot;&gt;Europe, Middle East, &amp;amp; Africa&lt;/label&gt;+44 20 7330 7500&lt;/p&gt;
&lt;p&gt;&lt;label class=&quot;tophat-menu-module__text-content-label__2znyu&quot;&gt;Asia Pacific&lt;/label&gt;+65 6212 1000&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 28 Jan 2019 14:51:07 +0000</pubDate>
<dc:creator>ryansmccoy</dc:creator>
<og:type>article</og:type>
<og:url>https://www.bloombergquint.com/business/hon-hai-expands-operations-in-india-vietnam-amid-trade-tensions</og:url>
<og:title>Hon Hai Expands Operations in India, Vietnam Amid Trade Tensions</og:title>
<og:description>Key iPhone assembler Hon Hai, also known as Foxconn Technology Group, is increasing its presence in Vietnam and India</og:description>
<og:image>https://images.assettype.com/bloombergquint%2F2019-01%2F887f26f3-03c2-4772-b4d5-191d93598952%2F219037612.jpg?rect=0%2C286%2C3000%2C1575&amp;w=1200&amp;auto=format%2Ccompress</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloombergquint.com/business/hon-hai-expands-operations-in-india-vietnam-amid-trade-tensions</dc:identifier>
</item>
<item>
<title>Show HN: X-spreadsheet – A JavaScript canvas spreadsheet for web</title>
<link>https://github.com/myliang/x-spreadsheet</link>
<guid isPermaLink="true" >https://github.com/myliang/x-spreadsheet</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.org/package/x-data-spreadsheet&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1f8dc386de28eb2fafe407bf0076f7490b090143/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f782d646174612d73707265616473686565742e737667&quot; alt=&quot;npm package&quot; data-canonical-src=&quot;https://img.shields.io/npm/v/x-data-spreadsheet.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/x-data-spreadsheet&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/ca76e11ddd0143bad415693a83c253ac511d6372/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f782d646174612d73707265616473686565742e737667&quot; alt=&quot;NPM downloads&quot; data-canonical-src=&quot;http://img.shields.io/npm/dm/x-data-spreadsheet.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a javascript(canvas) spreadsheet for web&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/myliang/x-spreadsheet&quot;&gt;&lt;img width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/myliang/x-spreadsheet/master/docs/demo.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
npm install x-data-spreadsheet
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Quick Start&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;xss-demo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Spreadsheet&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;x-data-spreadsheet&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Spreadsheet&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;xss-demo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class=&quot;pl-en&quot;&gt;loadData&lt;/span&gt;({});
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;pre lang=&quot;sheel&quot;&gt;
&lt;code&gt;git clone https://github.com/myliang/x-spreadsheet.git
cd x-spreadsheet
npm install
npm run dev
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Open your browser and visit &lt;a href=&quot;http://127.0.0.1:8080&quot; rel=&quot;nofollow&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Browser Support&lt;/h2&gt;
&lt;p&gt;Modern browsers(chrome, firefox, Safari).&lt;/p&gt;
&lt;h2&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 28 Jan 2019 13:32:44 +0000</pubDate>
<dc:creator>myliang</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/718858?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>myliang/x-spreadsheet</og:title>
<og:url>https://github.com/myliang/x-spreadsheet</og:url>
<og:description>a javascript spreadsheet for web. Contribute to myliang/x-spreadsheet development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/myliang/x-spreadsheet</dc:identifier>
</item>
<item>
<title>Dropbox buys HelloSign (YC W11) for $230M</title>
<link>https://techcrunch.com/2019/01/28/dropbox-snares-hellosign-for-230m-gets-workflow-and-esignature/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/28/dropbox-snares-hellosign-for-230m-gets-workflow-and-esignature/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;&lt;a href=&quot;http://dropbox.com&quot;&gt;Dropbox&lt;/a&gt; announced today that it intends to purchase &lt;a href=&quot;http://hellosign.com&quot;&gt;HelloSign&lt;/a&gt;, a company that provides lightweight document workflow and e-signature services. The company paid a hefty $230 million for the privilege.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/dropbox&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;dropbox&quot;&gt;Dropbox’s&lt;/a&gt; SVP of engineering, Quentin Clark, sees this as more than simply bolting on electronic signature functionality to the Dropbox solution. For him, &lt;a href=&quot;https://techcrunch.com/2017/03/30/hellosign-moves-into-forms-based-workflow-with-new-helloworks-product/&quot;&gt;the workflow capabilities&lt;/a&gt; that HelloSign added in 2017 were really key to the purchase.&lt;/p&gt;
&lt;p&gt;“W&lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;hat&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;unique&lt;/span&gt; about HelloSign&lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt; &lt;/span&gt;&lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;that the&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;investment&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;they’ve&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;made in&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;APIs and the workflow products&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;really&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;aligned&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;long-&lt;/span&gt;&lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;transcript-snippet__content__body__word ng-star-inserted&quot;&gt;direction,” Clark told TechCrunch. “It’s not just a thing to do one more activity with Dropbox, it’s really going to help us pursue that broader vision,” he added. That vision involves extending the storage capabilities that is at the core of the Dropbox solution.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This can also been seen in the context of &lt;a href=&quot;https://techcrunch.com/2018/11/06/dropbox-introduces-extensions-for-deeper-integration-with-third-party-tools/&quot;&gt;the Extension capability&lt;/a&gt; that Dropbox added last year. HelloSign was actually one of the companies involved at launch. While Clark says the company will continue to encourage companies to extend the Dropbox solution, today’s acquisition gives it a capability of its own that doesn’t require a partnership and already is connected to Dropbox via Extensions.&lt;/p&gt;
&lt;h2&gt;Fast integration&lt;/h2&gt;
&lt;p&gt;Alan Pelz-Sharpe, founder and principal analyst at Deep Analysis, who has been following this market for many years, says the fact it’s an Extensions partner should allow much faster integration than would happen normally in an acquisition like this. “Simple document processes that relate to small and medium business are still largely manual. The fact that &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/hellosign&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;hellosign&quot;&gt;HelloSign&lt;/a&gt; has solutions for things like real estate, insurance and customer/employee on boarding, plus the existing extension to Dropbox, means it can be leveraged quickly for revenue growth by Dropbox, Pelz-Sharpe explained.&lt;/p&gt;
&lt;p&gt;He added that the size of the deal shows there is high demand for these kinds capabilities. “It is a very high multiple, but in such a fast growth area not an unreasonable one to demand for a startup showing such growth potential. The price suggests that there were almost certainly other highly motivated bidders for the deal,” he said.&lt;/p&gt;
&lt;p&gt;HelloSign CEO Joseph Walla says being part of Dropbox gives HelloSign access to resources of a much larger public company, which should allow it to reach a broader market than it could on its own. “Together with Dropbox, we can bring more seamless document workflows to even more customers and dramatically accelerate our impact,” Walla said in a blog post announcing the deal.&lt;/p&gt;
&lt;h2&gt;HelloSign remains standalone&lt;/h2&gt;
&lt;p&gt;Whitney Bouck, COO at HelloSign, who previously held stints at Box and EMC Documentum, said the company will remain an independent entity. That means it will continue to operate with its current management structure as part of the Dropbox family. In fact, Clark indicated that all of the HelloSign employees will be offered employment at Dropbox as part of the deal.&lt;/p&gt;
&lt;p&gt;“We’re going to remain effectively a standalone business within the Dropbox family, so that we can continue to focus on developing the great products that we have and delivering value. So the good news is that our customers won’t really experience any massive change. They just get more opportunity,” Bouck said.&lt;/p&gt;
&lt;p&gt;Alan Lepofsky, an analyst at Constellation Research who specializes in enterprise workflow, sees HelloSign giving Dropbox an enterprise-class workflow tool, but adds that the addition of Bouck and her background in enterprise content management is also a nice bonus for Dropbox in this deal. “While this is not an acqui-hire, Dropbox does end up with Whitney Bouck, a proven leader in expanding offerings into enterprise scale accounts. I believe she could have a large impact in Dropbox’s battle with her former employer Box,” Lepofsky told TechCrunch.&lt;/p&gt;
&lt;p&gt;Clark said that it was too soon to say exactly how it will bundle and incorporate HelloSign functionality beyond the Extensions. But he expects that the company will find a way to integrate the two products where it make sense, even while HelloSign operates as a separate company with its own customers.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When you consider that HelloSign, a Bay Area startup that launched in 2011, raised just $16 million, it appears to be an impressive return for investors and a solid exit for the company. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The deal is expected to close in Q1 and is, per usual, dependent on regulatory approval.&lt;/p&gt;

</description>
<pubDate>Mon, 28 Jan 2019 13:24:32 +0000</pubDate>
<dc:creator>azhenley</dc:creator>
<og:title>Dropbox snares HelloSign for $230M, gets workflow and e-signature</og:title>
<og:description>Dropbox announced today that it intends to purchase HelloSign, a company that provides lightweight document workflow and e-signature services. The company paid a hefty $230 million for the privilege. Dropbox’s SVP of engineering, Quentin Clark, sees this as more than simply bolting on electro…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/GettyImages-633110654.jpg?w=600</og:image>
<og:url>http://social.techcrunch.com/2019/01/28/dropbox-snares-hellosign-for-230m-gets-workflow-and-esignature/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/28/dropbox-snares-hellosign-for-230m-gets-workflow-and-esignature/</dc:identifier>
</item>
<item>
<title>The Personal Toll of Whistle-Blowing</title>
<link>https://www.newyorker.com/magazine/2019/02/04/the-personal-toll-of-whistle-blowing</link>
<guid isPermaLink="true" >https://www.newyorker.com/magazine/2019/02/04/the-personal-toll-of-whistle-blowing</guid>
<description>&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;109.82660098522&quot;&gt;
&lt;p&gt;On the morning of September 17, 2009, Darren Sewell left his office at Freedom Health, the Tampa health-insurance company where he was a vice-president, and climbed into his Chevy Tahoe. He drove to Sonny’s BBQ, a restaurant nearby, where he picked up barbecue sauce for the sandwich he had brought for lunch. Then he continued on until he reached a drab stretch of road lined with gas stations and scraggly palm trees, where he pulled into a parking lot and waited, as discreetly as possible, to meet his F.B.I. handler.&lt;/p&gt;
&lt;p&gt;Sewell, a physician, was thirty-four years old, six feet four inches tall, and broad-shouldered, with an earnest smile and barely perceptible dimples. He was born with one eye slightly crossed, and it still drifted when he was tired or feeling stressed; strangers sometimes found it disconcerting, but his quick wit and easy sense of humor usually dispelled any tension. In the parking lot, Sewell looked around nervously. He noticed that there was a large puddle in the parking space next to his car, where the F.B.I. agent would pull in, so he moved to another space, only to find himself boxed in by other cars. He moved again, but then decided that there were too many people milling around, and drove to a smaller parking annex. There, he found that he could no longer pick up the radio station he’d been listening to, so he pulled out, turned around, and backed his car into the same space, thinking that might help. Later, in audio notes that Sewell recorded about the day, he made fun of his clumsy attempt to be inconspicuous. “I realized I had changed my parking spot about seventeen times,” he said. “And had everyone that was sitting there for lunch probably wondering whether to call the F.B.I. to find out whether I was a terrorist or not.”&lt;/p&gt;
&lt;p&gt;Sewell had joined Freedom, which made most of its money administering &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;https://www.newyorker.com/tag/medicare&quot;&gt;Medicare&lt;/a&gt; plans, in 2007. The financial crisis was beginning, and employment opportunities were drying up across the country, but the sector of the health-care industry that drew its revenue from Medicare was booming. During his time at Freedom, Sewell had become convinced that the company was defrauding the government of hundreds of millions of dollars by carrying out a sophisticated set of scams targeted at a new program called Medicare Advantage. Sewell, an avid reader of John Grisham novels, had been so appalled by what he observed, and so intrigued by the romanticism of going undercover, that he had decided to become a whistle-blower.&lt;/p&gt;
&lt;p&gt;When Ed Ortega, the F.B.I. agent, arrived, Sewell joined him in his vehicle. Sewell had told Ortega that a meeting at Freedom later that day might provide valuable evidence. The two men had been working together for several weeks, and they got along well—Sewell later described Ortega as “absolutely the friendliest guy there could be”—but this was their first time out in the field together, and Sewell was taken aback by Ortega’s stern demeanor. “I just didn’t see him as a very intimidating person. Well, when I was in the car with him, I cannot begin to explain how wrong I was,” Sewell later said. “He reached out and shook my hand and nearly broke it . . . you just got this feeling that, my God, if he had to, he could just reach over and snap your neck without even thinking about it.”&lt;/p&gt;
&lt;p&gt;Ortega had been a special agent with the F.B.I. for seventeen years, and he was experienced in health-care-fraud investigations. He tried to set Sewell at ease as he rolled up a piece of clear tape and stuck it inside Sewell’s shirt pocket, preparing to outfit him with a small recording device. Sewell was surprised by how low-tech the recorder looked, like something you’d find in a cluttered kitchen drawer. “It reminded me of kind of an old TV-antenna connector, but miniaturized,” he said. The device would record for between two and four hours, and under no circumstances should Sewell fiddle with it. It wasn’t easy to get a judge’s permission to secretly record executives, and strict rules governed how it could be done; Ortega would have to be the one to turn the device on and off.&lt;/p&gt;
&lt;p&gt;The wire would capture everything that Sewell did. “All I could keep thinking of was, the whole world in court someday is going to know what radio station I listen to, and hear my pen click, and, you know, when I’m sitting here scratching myself, is the stenographer going to realize that that rustling isn’t papers, it’s me scratching myself?” Sewell said. “But Ed had said in an earlier conversation not to worry, these people are professionals, they’ve heard you burp and fart. . . . You’ll never surprise these guys.”&lt;/p&gt;
&lt;div class=&quot;Callout__inset-left___2rZjf&quot; data-type=&quot;callout&quot; data-callout=&quot;inset-left&quot;&gt;
&lt;div class=&quot;CartoonEmbed__container___vf5AM&quot;&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;div class=&quot;placeholder-content&quot;&gt;
&lt;div class=&quot;Image__image___1PhYl&quot; role=&quot;button&quot; tabindex=&quot;0&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://media.newyorker.com/cartoons/5c4bad0baeb70d4872842366/master/w_727,c_limit/190204_a22309_rd.jpg&quot; title=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;span class=&quot;ImageCaption__caption___1EOQO ImageCaption__caption___1EOQO&quot;&gt;“Please indulge me—this moment calls for an artistic intervention.”&lt;/span&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ortega warned Sewell that he would probably feel conspicuous, as if everyone he encountered knew immediately that he was wearing a wire, but urged him to go about his day as normal. He gave Sewell some final words of advice—“Don’t worry, just relax”—and then sent him back to Freedom, the recorder running in his pocket.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;111.15921176103&quot;&gt;
&lt;p&gt;The first documented whistle-blowing case in the United States took place in 1777, not long after the signing of the Declaration of Independence, when a group of naval officers, including Samuel Shaw and Richard Marven, witnessed their commanding officer torturing British prisoners of war. When they reported the misconduct to Congress, the commanding officer charged Shaw and Marven with libel, and both men were jailed. The following year, Congress passed a law protecting whistle-blowers, and Shaw and Marven were acquitted by a jury.&lt;/p&gt;
&lt;p&gt;Institutional denial, obfuscation, and retaliation are hallmarks of many whistle-blowing cases. In the late nineteen-sixties and early nineteen-seventies, the New York City police officer &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;http://archives.newyorker.com/?i=1993-07-05#folio=052&quot; target=&quot;_blank&quot;&gt;Frank Serpico&lt;/a&gt; captured the popular imagination when he tried to expose rampant bribery and corruption in the N.Y.P.D., culminating in an episode in which he was shot in the face under bizarre circumstances during a drug raid. (He eventually took his evidence to the &lt;em class=&quot;&quot;&gt;Times&lt;/em&gt;, which published a front-page story that led to an independent investigation that ultimately validated his allegations.) Since then, notable whistle-blowers have included Karen Silkwood, who revealed worker-safety issues inside an Oklahoma nuclear plant; Jeffrey Wigand, who went on “60 Minutes” in 1996 and disclosed that the Brown &amp;amp; Williamson Tobacco Corporation had misled the public about the addictive and carcinogenic properties of cigarettes; Sherron Watkins, who exposed accounting fraud at &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;https://www.newyorker.com/tag/enron&quot;&gt;Enron&lt;/a&gt;; and, in 2013, the National Security Agency contractor &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;https://www.newyorker.com/tag/edward-snowden&quot;&gt;Edward Snowden&lt;/a&gt;, who leaked classified information about vast government surveillance programs. Whistle-blowers are usually, but not always, employees or members of the group on which they’re blowing the whistle; after they do so, their lives are never the same.&lt;/p&gt;
&lt;p&gt;To become a whistle-blower, Darren Sewell had filed what is known as a “qui tam” complaint—the term comes from a Latin phrase that translates as “he who brings an action for the king as well as for himself.” Qui-tam cases are brought under the False Claims Act, a law passed in 1863, under President Lincoln, in response to war profiteers peddling defective weapons and ailing mules to the Union Army. The law allows private citizens to file suit on behalf of the government against anyone believed to be defrauding the government. The vast majority of these cases involve health care. To some, qui-tam cases are controversial because whistle-blowers share in the money that the government recovers. This provision was included in the legislation to encourage individuals, especially those who might be involved in the theft themselves, to report the abuse. One of the bill’s sponsors, Senator Jacob Howard, of Michigan, said that he had based the qui-tam provision on the “old-fashioned idea of hold[ing] out a temptation, and ‘setting a rogue to catch a rogue’ . . . a reward for the informer who comes into court and betrays his co-conspirator.”&lt;/p&gt;
&lt;p&gt;The False Claims Act was strengthened in 1986, after a push by Senator Charles Grassley, of Iowa. Whistle-blowers can now share between fifteen and twenty-five per cent of the recovery, depending on such factors as the importance of their contribution. This change was an effort to recognize the financial toll of being a whistle-blower, both in lost employment and in legal fees incurred during the arduous process of building a case. The law effectively turned average citizens into a fleet of amateur federal agents, and it helped to reveal the staggering amount of money wrongfully extracted from government programs. A recent government report indicated that in 2017 alone almost $2.6 billion was recovered in health-care-fraud judgments and settlements. Two hundred and sixty-two million dollars of that was awarded to whistle-blowers.&lt;/p&gt;
&lt;p&gt;Medicare Advantage, the program that Sewell believed Freedom was abusing, is at the center of a growing number of fraud cases, some of which involve the biggest names in the health-insurance industry. The regulations around the issue are complicated, however, and legal questions about what constitutes prosecutable fraud are still the subject of debate. In 2017, the Department of Justice joined a multimillion-dollar case against the nation’s largest insurer, UnitedHealth Group, alleging widespread fraud dating back to 2006. The Justice Department is also investigating several other health insurers, including Anthem, Humana, Cigna, Health Net, and Aetna. An analysis co-authored by Fred Schulte, at the Center for Public Integrity, estimated that insurance companies had received nearly seventy billion dollars in undeserved Medicare Advantage payments between 2008 and 2013.&lt;/p&gt;
&lt;p&gt;Peter Budetti, who served in health-policy roles in Congress and as a deputy administrator at the Centers for Medicare and Medicaid Services (C.M.S.), told me that experts believe the real figures are up to ten times what the government actually recoups. “We’ve never been able to get a direct measure of exactly how much fraud there is, but one of the clearest indicators is that, the more money is spent on fighting fraud, the more money is recovered by the government,” he said. He now works as an attorney at Phillips &amp;amp; Cohen, a firm that specializes in whistle-blowing cases. Fraud perpetrated by companies in the health-care industry, he said, is especially pernicious. “On the one hand, they are stealing public money,” he told me. “And on the other hand that money is not going to where it’s supposed to go, which is to taking care of people. They aren’t stealing from people who are selling imported shoes. They are stealing from people who would otherwise be immunizing kids or delivering babies. That’s the heart of it.”&lt;/p&gt;
&lt;p&gt;Critics of the whistle-blower payments argue that the windfalls could encourage people to induce corporate sabotage. &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;https://www.newyorker.com/magazine/2019/01/28/william-barr-and-the-crucial-role-of-the-justice-department&quot;&gt;William P. Barr&lt;/a&gt;, President Trump’s nominee for Attorney General, has called the False Claims Act an “abomination” spurred by “the mercenary motives of private bounty hunters.” But Budetti told me that, in his experience, most whistle-blowers are driven by frustration and moral outrage, not by money. “Whistle-blowers are one of the absolutely central ingredients in fighting health-care fraud,” Budetti said. “We’re lucky we have a system that encourages them to come forward.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;177.71685035791&quot;&gt;
&lt;p&gt;Darren Sewell grew up in Champion, Ohio, a small city about forty minutes from Cleveland, the oldest of three boys. Their father, Rickye, ran a family company that made industrial switchgear and other manufacturing equipment; their mother, Barbara, was a stay-at-home mom when the kids were young, and then took a job in administration at a medical-supply company. Most of the Sewell boys’ free time was devoted to sports: Sewell played baseball, basketball, and varsity soccer, and was a competitive swimmer, eventually qualifying for nationals.&lt;/p&gt;
&lt;p&gt;Sewell was the academic star of the family and, according to his brother David, a magnanimous friend. “Darren didn’t care about material things,” David told me. “He drove around in a ratty car. But he never hesitated to buy everyone’s drinks, or to treat when we went out to dinner or on trips.” After graduating from high school, Sewell attended the University of Akron, and then earned his medical degree in an accelerated four-year program at Northeast Ohio Medical University. He did his residency at a hospital in downtown Orlando, and thrived in the adrenalized atmosphere of the emergency room. “In the E.R., you’ve got to be able to assess a patient really quickly, and figure out what’s wrong, handle that, and move on. He was so good at that,” David said. “He had stories: ‘I’ve got one finger plugging the guy’s heart from a gunshot wound and I’m making coffee with the other.’ ” Sewell saw a lot of trauma patients, and the work, though exciting, was draining. “The daily grind of being an E.R. doctor—he didn’t want to continue that,” David said.&lt;/p&gt;
&lt;p&gt;Sewell was also interested in business, and he eventually left emergency medicine; he spent a few years working at H.M.O.s before joining Freedom Health. The company was owned by Kiran C. Patel, a cardiologist who was born to South Asian parents in Zambia and immigrated to the U.S. in 1976. Patel was already an enormously successful entrepreneur. In the nineteen-nineties, he took over a struggling H.M.O. called WellCare, which he sold to a group of investors in 2002 for two hundred million dollars. He was the financial backer of a high-end oceanfront hotel and resort near Tampa, and an investor in the &lt;em class=&quot;&quot;&gt;Tampa Bay Times&lt;/em&gt;. In 2007, he bought Freedom and a smaller company, called Optimum Healthcare, for fifty million dollars, and joined them under the umbrella of one parent company. Freedom had been a family operation, and Patel maintained the tradition, appointing relatives to important positions in the company. Freedom’s founder, Devaiah Pagidipati, was also a physician of Indian descent who had immigrated to the U.S. in the nineteen-seventies; his son, Siddhartha Pagidipati, a former investment banker known as Sidd, served as Freedom’s chief operating officer under Patel. Around the office, Patel was known as Dr. K. (Patel, Devaiah Pagidipati, Siddhartha Pagidipati, Freedom, and Optimum declined to comment for this article.)&lt;/p&gt;
&lt;p&gt;Patel was a high-profile figure in the Tampa area, due, in part, to his prolific philanthropy. Tampa’s conservatory building bears his name, and his wife, who is a pediatrician, sits on the board of the city’s center for the performing arts. The couple has sent money to India to rebuild a village and to establish schools, and has donated large sums to local colleges—the University of South Florida includes the Patel College of Global Sustainability—and to hospitals and other health ventures. Patel has spoken publicly about having a skin-pigmentation disorder called vitiligo, for which he has chosen not to seek treatment. “I have the respect of society, and my wife tells me that people love me for who I am,” Patel told a publication called &lt;em class=&quot;&quot;&gt;Florida Trend&lt;/em&gt;, in 2017.&lt;/p&gt;
&lt;p&gt;Patel has gained particular notoriety for the private estate he is building in north Tampa, renderings of which have been printed in the local press. The residence will be a cross between the Taj Mahal and Versailles—a sixty-eight-thousand-square-foot palace with a fountain, a twelve-car garage, a Hindu temple, domed pavilions, and latticework made of red sandstone imported from Rajasthan. There will be separate buildings for Patel’s three grown children and their families, spread across seventeen acres that abut White Trout Lake, which is celebrated for its sunset views. The estate’s centerpiece is a grand ballroom.&lt;/p&gt;
&lt;p&gt;At Freedom, it was clear to Sewell that Patel wanted to expand quickly and then sell the company, as he had with WellCare. He seemed to have ambitious goals, such as quadrupling the number of members within three years. According to Sewell, the internal philosophy at Freedom was to keep costs low, to move swiftly, and to be aggressive.&lt;/p&gt;
&lt;div class=&quot;Callout__inset-left___2rZjf&quot; data-type=&quot;callout&quot; data-callout=&quot;inset-left&quot;&gt;
&lt;div class=&quot;CartoonEmbed__container___vf5AM&quot;&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;div class=&quot;placeholder-content&quot;&gt;
&lt;div class=&quot;Image__image___1PhYl&quot; role=&quot;button&quot; tabindex=&quot;0&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://media.newyorker.com/cartoons/5c4bad0b9d69a04dde6b2473/master/w_727,c_limit/190204_a19980.jpg&quot; title=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;span class=&quot;ImageCaption__caption___1EOQO ImageCaption__caption___1EOQO&quot;&gt;“I wish you could have thought up warmer disguises.”&lt;/span&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Medicare Advantage, on which Freedom’s business focussed, was part of a trend toward the privatization of health care. President &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;https://www.newyorker.com/tag/lyndon-johnson&quot;&gt;Lyndon Johnson&lt;/a&gt; created the first national health-care program in 1965, after fierce political battles, when he signed the Social Security Act Amendments. The law established a fund to provide health-insurance coverage, known as Medicare, to Americans over the age of sixty-five, and to provide coverage to the poor through a sister program, Medicaid. “No longer will illness crush and destroy the savings that they have so carefully put away over a lifetime so that they might enjoy dignity in their later years,” Johnson said at the signing ceremony, in Independence, Missouri, noting that eighteen million Americans were seniors, many with low incomes. “No longer will young families see their own incomes, and their own hopes, eaten away simply because they are carrying out their deep moral obligations to their parents, and to their uncles, and their aunts.” Johnson gave the first Medicare card to former President Truman.&lt;/p&gt;
&lt;p&gt;There are currently sixty million seniors enrolled in Medicare, approximately eighteen per cent of the U.S. population, and the number is expected to rise to sixty-seven million by 2030. Medicare remains one of the most popular government programs. It has saved millions of people from financial ruin in old age, and, because of its importance to a crucial voting demographic, it has weathered decades of tax cuts and reductions to the social safety net. But the growing population of elderly Americans and the steep rise in the price of health-care services have spurred concern that Medicare could become insolvent; policymakers such as Paul Ryan, the former House Speaker, have argued that elderly citizens should receive vouchers to purchase health insurance on the open market, and there has been a push among certain lawmakers to privatize parts of the program.&lt;/p&gt;
&lt;p&gt;Traditional Medicare is structured as a fee-for-service program: the government pays fixed amounts to doctors and other health-care providers for each service. The system is straightforward—the more health care you provide, the more money you are paid—but easy to abuse. Malcolm Sparrow, a professor at Harvard’s Kennedy School and the author of “License to Steal: How Fraud Bleeds America’s Healthcare System,” told me, “Under the fee-for-service system, the financial incentives were always to overutilize and overbill, and, if you were a crook, to fabricate claims.”&lt;/p&gt;
&lt;p&gt;Medicare Advantage was supposed to mitigate the problem by harnessing the discipline of the private sector. In the nineteen-eighties, when health-care spending represented about nine per cent of the G.D.P. (the number is now eighteen per cent), President Reagan signed a bill that created an early version of the program. Medicare Advantage permits private health-insurance companies, including Aetna, Blue Cross Blue Shield, and United, to offer coverage to seniors under a new model: the companies receive a set amount of money from the government each month for each senior, and it is up to the companies to provide the prescribed coverage with the funds. “These were devices to make the health-care costs of the government more predictable and slower growing, and to shift the responsibility and accountability to a private entity whose entire well-being depended on prudent management,” Len Nichols, a professor of health policy at George Mason University, who served as a health-policy adviser during the Clinton Administration, told me. “Medicare Advantage is a long-standing part of the Republican strategy of privatizing Medicare.” The Advantage plans competed for patients with one another, and with traditional Medicare; they began offering perks such as health-club memberships, dental coverage, and rebates. And all this market competition would encourage better services and more preventive care, driving down costs. At least, that was the idea.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;109&quot;&gt;
&lt;p&gt;Around the time that Darren Sewell joined Freedom, his brother David was living in Ohio, working at G.E. Aviation. He was an expert in Six Sigma, a system for improving efficiency, originally developed by Motorola, and Sewell encouraged him to move to Florida and apply those skills to the health-care industry. David made a presentation to Sidd Pagidipati, the Freedom C.O.O., and was hired as a consultant. One of David’s first assignments was to improve the company’s growing backlog of client calls. (The C.M.S. closely monitors how long Medicare Advantage providers place members who call in on hold.)&lt;/p&gt;
&lt;p&gt;I recently met with David at his home, in Tampa, where he lives with his partner, Sami, and two children, ages three and one. He is smaller than Sewell, athletic and tanned, with silvery hair and a sprinkling of stubble. He favors Florida-casual attire—khaki shorts and untucked button-down shirts—and seems to always have a stainless-steel canteen in his hand. He gets emotional when talking about his older brother, whom he described as fearless, the kind of person who would talk to anyone, and who frequently charmed women who seemed unlikely to pay attention to him. “It never ceased to amaze me,” David said.&lt;/p&gt;
&lt;p&gt;When David first moved to Florida, the brothers were both single and lived fifteen minutes apart. They met for early-morning swims and made weekend trips to the beach with Sewell’s eight-year-old daughter, whom he had part time, in a shared-custody arrangement with a former girlfriend. The brothers talked about almost everything. One evening, Sewell told David that he had observed troubling practices at Freedom.&lt;/p&gt;
&lt;p&gt;Sewell was the third-highest-ranking employee at the company; he helped lead the department that made clinical decisions and administered medical benefits to patients. He was privy to high-level corporate activity, and he sensed a general attitude of contempt toward the government. He believed that Freedom was intentionally rooting out sicker, more expensive enrollees by having sales agents target them and then encourage them to leave Freedom, an illegal practice known as “lemon-dropping.” He kept thinking of his grandmother, and how easy it would be for a salesperson to manipulate her.&lt;/p&gt;
&lt;p&gt;To David, Sewell described the company’s behavior as “brazen”; he had already done significant research into the process of filing a qui-tam complaint. At one point, he jumped up, pulled a book from his shelf, and handed it to David. “You have to read this,” Sewell said. The book, by John W. Schilling, was titled “Undercover: How I Went from Company Man to F.B.I. Spy—and Exposed the Worst Healthcare Fraud in U.S. History.” Schilling had been a mid-level accountant at Columbia/HCA Healthcare, a multistate hospital chain co-founded by the former Florida governor (and now senator) Rick Scott, in 1987. In 1994, shortly after starting work at the company, Schilling became convinced that it was routinely overbilling Medicare. He filed a qui-tam case and became an informant for the F.B.I. The case proceeded in secret for several years, as the government gathered evidence. Scott resigned from the company in 1997, four months after the investigation became public, and began his career in Republican politics. Ultimately, his company paid $1.7 billion in criminal and civil fines and penalties to settle a long list of charges, and two executives were convicted of fraud and sentenced to prison.&lt;/p&gt;
&lt;p&gt;Freedom was a much smaller enterprise, but Sewell felt that he had stumbled onto a similar case. He had already spoken with attorneys at Phillips &amp;amp; Cohen, the law firm that had represented Schilling. It seemed to him that each time the government’s health-care policies changed the private sector found new ways to maximize profit—even if, in some cases, it meant bending or breaking the rules. Medicare Advantage was just the latest example, and it was new enough that regulators and fraud investigators hadn’t yet figured out all the ways in which it could be gamed. Sewell’s imagination began to spin. “He loved James Bond movies. The aspect of wearing a wire really intrigued him,” David recalled. “There was one moment where he said, ‘Donnie Brasco’s got nothing on me,’ ” referring to an F.B.I. agent who infiltrated the Mafia and became the inspiration for a film.&lt;/p&gt;
&lt;p&gt;David recalled asking, “How the hell are you going to be able to pay an attorney?” Sewell explained that reputable lawyers in qui-tam cases usually work on a contingency basis: they take only those cases which they believe are solid, and are paid if the case is successful, typically getting forty per cent of the whistle-blower’s award. He suggested that David file the suit along with him. David hesitated.&lt;/p&gt;
&lt;p&gt;“I’m certainly more reserved and private than Darren was,” he told me. They talked about Patel; he was wealthy and well connected, and they couldn’t rule out the possibility that he or his allies would retaliate against them. “I had more concerns about the retaliation aspect,” David said. “This guy is held up in the medical community, the Indian community, he’s done this philanthropy stuff. He’s held in very high regard. For any individual to go against that, you’re not on equal footing.” David was also worried about exposing the rest of the family to a backlash if he and Sewell filed the case jointly. “If you’re already in this, and taking the fire, taking the bullets, is there value to me also coming under fire?” David said. “Not from a selfish standpoint. It was partly about the family—if he’s going to take all the fire for the family, do we really want others to come along?” David decided not to join the suit, and Sewell continued on his own.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;161&quot;&gt;
&lt;p&gt;Mary Inman, who is now a partner at the law firm Constantine Cannon, had spent ten years representing whistle-blowers when her firm flew Darren Sewell to San Francisco to meet with her for the first time, in 2008. Inman is petite and lively, with wide brown eyes and wild dark hair. She has a tendency to smile brightly, even when she’s about to deliver unwelcome news. Her colleagues refer to her as the “whistle-blower whisperer.” She talks about serving as an informal therapist and parent to her clients during the lonely, multiyear process of developing a qui-tam case. Part of the purpose of the initial meeting, she told me, is to “size up” the potential client, to figure out whether he or she is trustworthy. She asks herself, “Do I really want to spend the next six years with this person?”&lt;/p&gt;
&lt;div class=&quot;Callout__inset-left___2rZjf&quot; data-type=&quot;callout&quot; data-callout=&quot;inset-left&quot;&gt;
&lt;div class=&quot;CartoonEmbed__container___vf5AM&quot;&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;div class=&quot;placeholder-content&quot;&gt;
&lt;div class=&quot;Image__image___1PhYl&quot; role=&quot;button&quot; tabindex=&quot;0&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://media.newyorker.com/cartoons/5c4bad0baeb70d4872842364/master/w_727,c_limit/190204_a22390.jpg&quot; title=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Inman told me that, when Sewell walked into the room, she thought, “This guy is weird. He’s tall, he’s awkward, he’s got this eye thing going on.” But, she continued, “it sort of added to the mad-scientist bit. He was so impossibly intelligent.” She was soon won over by his self-deprecating humor, and described him as a “gentle giant.” Sewell told her that he believed Freedom was “cherry-picking”—recruiting healthy enrollees who needed little or no medical care—in addition to lemon-dropping. He said that the company had offered sales agents cash bonuses for getting seniors who required a lot of health care off Freedom’s insurance rolls. Inman told me that the behavior sounded “odious.” She said that, as the meeting with Sewell wore on, “it became very clear to me he knew exactly what he was doing. He was very intelligent and credible, and he knew he was in a fairly compromised position with some pretty questionable characters.”&lt;/p&gt;
&lt;p&gt;While Inman and her associates debated whether to take the case, Sewell sent her documents that he said would show how the company tracked sick patients and targeted them for disenrollment. He also shared a photograph of a conference table that Patel had installed in the office. The table was enormous, with a gleaming marble top. The faces of Patel, his wife, and his father were carved down the center and into the base, in a manner reminiscent of Mt. Rushmore.&lt;/p&gt;
&lt;p&gt;Inman also did her own research, which revealed that Patel’s first company, WellCare, had been raided by the F.B.I. several years after he sold it, during a Medicaid-fraud investigation; WellCare executives were eventually indicted, in 2011. Its former general counsel was later sentenced to six months in prison, and the company paid two hundred and twenty-seven million dollars to settle civil and criminal charges. (Patel was not implicated in the case.) Inman found Sewell refreshingly honest about the appeal of the potential financial rewards. “He was human,” she said. “I told my partners, ‘I like this guy, we’re going to bet on him. It may not turn into anything, but we’ll try.’ ”&lt;/p&gt;
&lt;p&gt;In a qui-tam case, a complaint is filed by the whistle-blower in secret, under seal, so that the government can conduct its own investigation without alerting the target. If federal prosecutors find the allegations credible, the Justice Department may decide to sign on as the lead plaintiff, which gives the case added heft and credibility. (The whistle-blower can also move forward on his or her own if the government declines.) Inman warned Sewell that being a whistle-blower would take a personal toll. He wouldn’t be able to talk about the case with anyone but his attorneys. Once the suit became public, he might be branded a traitor in the business community and have trouble finding another job. It would be lonely and stressful. But Sewell said that he wanted to proceed.&lt;/p&gt;
&lt;p&gt;For several months, Sewell went to work as he normally did. When he came home, he began his second shift, e-mailing spreadsheets and documents to Inman from his Gmail account and then spending hours on the phone with her, explaining what they meant. There was a sense of time pressure; if a different Freedom whistle-blower filed a complaint first, Sewell might not be able to participate in the resulting case. On August 17, 2009, he finally filed his complaint with the district court in Tampa, alleging that Freedom was manipulating enrollment rolls. The complaint also alleged that Freedom was engaging in service-area-expansion fraud—misrepresenting the number of health-care providers in its network in certain counties, so that it could expand the areas in which it offered Medicare Advantage. Sewell and Inman filed hundreds of pages of supporting documents, including internal e-mails, spreadsheets, and marketing files. Then they waited for a call from the U.S. Attorney’s office, which came a few weeks later.&lt;/p&gt;
&lt;p&gt;Randy Harwell, the chief of the civil division at the U.S. Attorney’s office in Tampa, told me that the biggest challenge his office faces when assessing a new complaint is determining the whistle-blower’s motives and figuring out whether there are inconsistencies in the story. “This is the busiest whistle-blower docket in the country,” Harwell told me. “We get all kinds in this office—crusaders, people who are just really upset, people who are just crooks themselves, frankly. It’s not uncommon at all for complete grifters to come in and pitch cases.” But Sewell, he said, was credible from the start. Sewell and Inman eventually presented fifty PowerPoint slides of evidence to Harwell and a group of other investigators. “All of life is a bell curve, and the whistle-blower docket is certainly a bell curve, and there’s wheat and there’s chaff,” Harwell said, and added that he remembered Sewell “being a very squared-away, knowledgeable guy. It seemed like he knew what he was talking about.”&lt;/p&gt;
&lt;p&gt;The next step was the government’s investigation. For more than a year, Sewell led a double life as an undercover agent, helping the government build its case. He became accustomed to a gruelling routine. Before work, he would meet Ed Ortega, the F.B.I. agent, in various parking lots—sometimes at a Catholic church or a motel, other times next to a Bank of America. Ortega would outfit Sewell with the wire. Then Sewell would go to work and record. A few hours later, he’d slip out to meet Ortega again to return the device, hoping that no one would notice his absence. It was critical that Sewell not discuss the investigation with anyone; if the seal was broken, Sewell was repeatedly warned, his role would be imperilled and he could get nothing. The only person potentially excluded from the circle of silence was a spouse; because Sewell wasn’t married, there was no one he could talk to.&lt;/p&gt;
&lt;p&gt;In 2010, while the investigation was under way, Sewell was moved to a different job at Freedom, in the Medicare-revenue-management department, where he reported to an executive named Mital Panara. In his new role, Sewell was exposed to a different side of the business, including the risk-adjustment department, which assigned Medicare Advantage enrollees codes that reflected their diagnoses. Certain codes and combinations of codes led to larger reimbursements from the government, and it was simple, with modest computer-programming skills, to figure out how to generate the most profitable codes based on the group of patients you had. Of course, companies were supposed to apply codes only to patients who actually had the corresponding conditions, as determined by a physician who had treated the patient.&lt;/p&gt;
&lt;p&gt;Sewell quickly noticed many coding inaccuracies, almost all of which were in the company’s favor, resulting in higher government payments. Sewell believed that Freedom was committing risk-adjustment fraud—instructing its internal coding auditors to scour medical records for places where the codes could be amplified, a practice known as “capturing” codes. Sometimes, he later alleged, Freedom pressured doctors to schedule unnecessary appointments and to assign additional codes that the internal data miners thought would be more profitable.&lt;/p&gt;
&lt;p&gt;Sewell also saw further evidence of the service-area-expansion fraud: Freedom was “renting” groups of doctors in various counties in order to gain C.M.S. approval to expand, and then dropping the doctors after receiving it. In one example that Sewell found, Freedom said that there would be six in-network oncologists in Duval County, a large county in Florida, but patients couldn’t find a single one. The company’s strategy seemed to be paying off: in 2009, &lt;em class=&quot;&quot;&gt;Inc.&lt;/em&gt; named Freedom one of America’s fastest-growing companies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;101&quot;&gt;
&lt;p&gt;Sewell’s case was one of the first to show prosecutors and attorneys how Medicare Advantage could be defrauded. When, in January, 2011, a prospective whistle-blower named Benjamin Poehling contacted Inman’s law firm, Inman instantly understood what his allegations meant. “It was because of Darren that when Ben called me I was able to appreciate the gravity of what he was saying,” Inman told me. “Darren was our origin story of risk-adjustment fraud.”&lt;/p&gt;
&lt;p&gt;Poehling grew up in Bloomington, a suburb near Minneapolis. His father was a high-school social-studies teacher who also sold residential real estate, and his mother was a stay-at-home mom. “My parents always surrounded me with positive role models,” Poehling told me recently. He attended a Catholic high school, and the family went to church every Sunday. He began playing golf at an early age, and the game helped shape his moral outlook. “Golf is a unique sport—you’re your own referee,” Poehling said. “One of the first times my dad introduced me to golf, he said, ‘Look, Ben, golf is very different from other things in life. No one is policing you. You are writing down your own scores. You’ll have multiple opportunities to cheat.’ His one rule was that you always follow the rules.”&lt;/p&gt;
&lt;p&gt;Poehling graduated from Drake University, in Iowa, in 1998, with a degree in actuarial science and finance, and then joined Arthur Andersen, a multinational accounting firm, as a consultant. In 2002, Arthur Andersen, which was embroiled in the Enron scandal, split apart. Poehling went to work for a subsidiary of UnitedHealth Group, which had been one of his clients at Arthur Andersen. (United’s current and former C.E.O.s are also alumni of Arthur Andersen.) Around the time that Sewell joined Freedom, Poehling was working with United’s risk-adjustment and Medicare Advantage teams.&lt;/p&gt;
&lt;div class=&quot;Callout__inset-left___2rZjf&quot; data-type=&quot;callout&quot; data-callout=&quot;inset-left&quot;&gt;
&lt;div class=&quot;CartoonEmbed__container___vf5AM&quot;&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;div class=&quot;placeholder-content&quot;&gt;
&lt;div class=&quot;Image__image___1PhYl&quot; role=&quot;button&quot; tabindex=&quot;0&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://media.newyorker.com/cartoons/5c4bad0b085b9c33f9cf3f26/master/w_727,c_limit/190204_a22244.jpg&quot; title=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I met with Poehling in Bloomington, where he lives with his wife and three young children. He said that, over time, he realized that it wouldn’t be difficult to steal from Medicare Advantage. “The risk-adjustment system, it’s essentially an honor system,” Poehling told me. “It’s very similar to golf.”&lt;/p&gt;
&lt;p&gt;Poehling was disturbed by what he described as a chart-review program at United, in which the company systematically went through hundreds of thousands of medical records, searching for places to increase the diagnosis codes in order to make patients appear sicker. In some cases, legitimate codes had been left out and needed to be added. But, according to Poehling’s allegations, the system was set up primarily to find opportunities for increases, and designed not to delete inappropriate codes. United had an aggressive internal culture, he said, with bonuses for executives who raised reimbursement numbers. In a 2007 e-mail provided to the Justice Department, the former C.F.O. of the group that managed United’s Medicare Advantage plans wrote to an executive at a data-analytics subsidiary, “Wanted to get together with you and discuss what we can do in the short term and long term to really go after the potential risk scoring you have consistently indicated is out there. . . . You mentioned vasculatory disease opportunities, screening opportunities, etc with huge $ opportunities. Lets turn on the gas! What can we do to make sure we are being reimbursed fairly for the members and risk we take on more than what we are currently doing.”&lt;/p&gt;
&lt;p&gt;Poehling said that he briefly considered quitting his job, but decided that that would be unprincipled. He mulled over his other options. He could raise his concerns with United’s board of directors, but there was no way to be sure that they would take action. He could send an anonymous complaint to the C.M.S., but he didn’t know if the agency had the resources to pursue his case. (The limited C.M.S. budget can make it challenging for the organization to police fraud.) Filing a qui-tam complaint was personally risky, but at least it insured that the allegations would be investigated. “I’m sitting in this situation, and I don’t know if what United is doing is illegal or not. I’m not a lawyer,” Poehling said. “But it went against all the principles I had been taught and had lived by my entire life.”&lt;/p&gt;
&lt;p&gt;Poehling said that the size of the alleged fraud made the matter urgent. “I would not have done this if this were a ten-million-dollar issue or a five-million-dollar issue, or if it were just limited to one part of the company,” he said. “But that wasn’t the case. This was potentially a multibillion-dollar issue. The scale of it was huge. And this was known for many years at the highest levels at the largest health-care company in this country.” (In a statement, a UnitedHealthcare spokesperson wrote, “Our company followed the Medicare Advantage program rules, and has been transparent with the government about our approach.” The spokesperson added that the C.M.S. “has continued to accept our bids and pays us under our contracts.”)&lt;/p&gt;
&lt;p&gt;Poehling spent the next several months collecting documents and evidence, and, on March 24, 2011, he filed a qui-tam complaint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;93&quot;&gt;
&lt;p&gt;In the summer of 2010, Freedom hired a nurse and coding specialist to conduct a mock audit of its diagnosis data in order to prepare for a possible audit by the government. According to evidence that Sewell gathered, the specialist found that approximately eighty per cent of the diagnosis codes in the company’s records were unjustified—a shocking number. When the specialist reported the results to Panara, Sewell alleged, he asked her to assess the codes more “leniently.” (Panara denies this.) Medicare regulations dictate that Freedom should have reported the invalid codes to the government and reimbursed it for millions of dollars in overpayments, but, according to Sewell, the company never did so. (In a statement, Panara’s lawyer wrote, “Panara did nothing to violate the False Claims Act or any federal regulations,” adding that he “Admitted no wrongdoing and suffered no personal penalties” in the case.)&lt;/p&gt;
&lt;p&gt;After more than ten months, the government prosecutors were still unsure whether they had sufficient evidence to join Sewell’s case. They kept asking him to get more. “He liked the cloak-and-dagger stuff,” Inman told me. “At the start, everyone is kind of flattered. It’s kind of exciting. He would joke about it, humor was his device.” But, as the investigation dragged on through 2011 and into 2012, the novelty wore off and the stress started to weigh heavily on Sewell. He worried that Freedom would discover his actions and blacklist him in the industry, and that the legal case would fall apart. He also worried that he would implicate innocent or lower-tier employees through his indiscriminate taping. He became increasingly short-tempered and distracted. “Some days, you could just see the stress on him,” David said. “When he was under stress, his eye would deviate. I saw him every day, and I could tell something was going on.”&lt;/p&gt;
&lt;p&gt;Even Ortega seemed frustrated by the government’s lack of momentum. Finally, in the spring of 2012, in a bid to move the investigation forward, Ortega decided to approach Panara and attempt to persuade him to flip. It was a risky move—if Panara said no, he might alert the rest of Freedom’s senior management to the investigation.&lt;/p&gt;
&lt;p&gt;Ortega approached Panara after a conference and confronted him with comments that Sewell had recorded—comments that, from their context, likely made it clear that Sewell was the government’s source. Panara refused to coöperate.&lt;/p&gt;
&lt;p&gt;The government rushed to send subpoenas to Freedom. Finally, two and a half years after Sewell had launched the case, Freedom executives knew that they were under investigation. The next day, Patel called an emergency meeting and instructed employees not to destroy documents or other evidence. Then Freedom launched its own inquiry into the fraud. Inman told me that this type of internal investigation is often intended in part to identify which employees, if any, have been coöperating with the government. (The law prohibits companies from retaliating against whistle-blowers, but punitive actions are nevertheless common.) Company attorneys began interviewing employees. When it was Sewell’s turn, he declined to answer certain questions, and instead responded as Inman had coached him: “I want to help you. I’m a coöperating witness in a federal investigation. And I’m represented by counsel.”&lt;/p&gt;
&lt;p&gt;It would have been imprudent for Freedom to fire Sewell, but the revelation that he had become a whistle-blower marked the beginning of a swift and painful series of events. Within a few days, according to allegations in his complaint, Sewell was locked out of his office computer. His access was restored, but a few days later he discovered that his personal laptop had disappeared from his bag while he was out of his office for a few minutes. Sewell panicked. Anyone in the Freedom office could have taken the computer, which likely contained many of his communications with his lawyers, and also the presentation that he and Inman had given to government prosecutors. The laptop was never recovered.&lt;/p&gt;
&lt;p&gt;In April of 2012, Freedom placed Sewell on administrative leave; in September, he submitted his “involuntary resignation.” Later that fall, while he was at home looking for a new job, Sewell heard that his former employers were telling others in the industry to avoid working with him. Former colleagues also told Sewell that Freedom executives had claimed that &lt;em class=&quot;&quot;&gt;he&lt;/em&gt; was responsible for the fraud—that he had filed the whistle-blower complaint to punish the company for failing to promote him.&lt;/p&gt;
&lt;p&gt;It was no surprise, then, when Sewell had trouble finding a new position in the clubby Florida Medicare-insurance industry. Each time he seemed close to getting an offer, the job would suddenly fall through. Sewell resisted the idea of moving out of the state, since he wanted to stay close to his daughter. And the government still hadn’t made a decision about whether to join his case. Everything was on hold.&lt;/p&gt;
&lt;div class=&quot;Callout__inset-left___2rZjf&quot; data-type=&quot;callout&quot; data-callout=&quot;inset-left&quot;&gt;
&lt;div class=&quot;CartoonEmbed__container___vf5AM&quot;&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;div class=&quot;placeholder-content&quot;&gt;
&lt;div class=&quot;Image__image___1PhYl&quot; role=&quot;button&quot; tabindex=&quot;0&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://media.newyorker.com/cartoons/5c4bad0b9922c254df56d019/master/w_727,c_limit/190204_a22542.jpg&quot; title=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;span class=&quot;ImageCaption__caption___1EOQO ImageCaption__caption___1EOQO&quot;&gt;“We’re looking for a long dining table that can symbolize the growing chasm between us as our marriage devolves into a bleak charade of alienation and indifference, for around twelve hundred dollars.”&lt;/span&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;90.879852125693&quot;&gt;
&lt;p&gt;In a &lt;a class=&quot;ArticleBody__link___1FS03&quot; href=&quot;https://www.nejm.org/doi/full/10.1056/NEJMsr0912039&quot; target=&quot;_blank&quot;&gt;paper&lt;/a&gt; published in &lt;em class=&quot;&quot;&gt;The New England Journal of Medicine&lt;/em&gt;, in 2010, a group of researchers studied how the qui-tam process affects whistle-blowers in major health-care-fraud cases. The study’s subjects reported feeling intense pressure while coöperating with the government, and said that the cases created high workloads. They expressed frustration with how slowly the investigations moved and with how little information prosecutors shared with them. They reported anxiety and uncertainty that lasted for years, and some spoke of being threatened, of losing their jobs, and of being blocked from new employment.&lt;/p&gt;
&lt;p&gt;A few of the comments were particularly telling. One interviewee, in response to a question about what advice he would give a potential whistle-blower, wrote, “[Can they] afford 5 years of their life in turmoil?” Another said, “Part of your ability to do anything about this is keeping yourself together,” and suggested that whistle-blowers find someone “like a minister or a shrink who’s confidentiality-protected,” because “this could go on for a while.” A high proportion of whistle-blowers reported divorces or other marital strain, family conflicts, and stress-related health issues including shingles, autoimmune disorders, panic attacks, insomnia, and migraines. Several of them said that the financial consequences were devastating. “Honestly, I would not advise anybody to do it,” one said.&lt;/p&gt;
&lt;p&gt;In mid-2013, Sewell was still without a steady income, and he had begun digging into his savings to pay the bills. “He was going broke,” David told me. “He liquidated I.R.A.s and his retirement accounts.” He became increasingly depressed; he gained weight, then lost it again. Inman recalled telling Sewell, one night on the phone, about the severe postpartum depression that she had experienced. “I know what you’re going through. I’ve been at the bottom of the well,” she told him. “I’m asking you—as your lawyer and your friend—you need to stay with us.”&lt;/p&gt;
&lt;p&gt;Sewell’s fortunes appeared to take a turn when he was hired as a consultant by a midsized physicians’ group. But, a few weeks into the job, he was told, with little explanation, that the position had ended and that he should leave. Sewell was devastated. He felt certain that his former employers had learned about his new job and intervened. “It felt like there was an optimism there,” Inman said. “And, when it happened again, it was different. You could just see, it was defeatism. And I just felt like that was it.”&lt;/p&gt;
&lt;p&gt;“That was the one that really just crushed him,” David said. Sewell told other family members, “They got me. They got me good this time.” David suggested that the two of them go on a beach vacation or a fishing trip, so that Sewell could think about something else. Sewell agreed that that was a good idea.&lt;/p&gt;
&lt;p&gt;A few days later, in early September, 2014, Sewell was rushed to the hospital with a serious head injury after an accidental fall inside his house. Medical personnel found a clot in his brain. After three days in the hospital, Sewell died, at the age of thirty-nine.&lt;/p&gt;
&lt;p&gt;Amid the shock and grief, David was informed that, as the executor of his brother’s estate, he would have to take Sewell’s place as the whistle-blower in order for the Freedom case to proceed. He was stunned to learn the extent of what Sewell had uncovered. David was planning to get married, and he had concerns about taking on such powerful adversaries. But, if he didn’t do it, the case would be terminated, and everything Sewell had gone through would be for nothing. There was very little left in Sewell’s estate for his daughter—except, potentially, his portion of the fraud recovery. David agreed to stand in as the whistle-blower.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;SectionBreak SectionBreak__sectionBreak___1ppA7&quot; readability=&quot;86&quot;&gt;
&lt;p&gt;According to Malcolm Sparrow, of Harvard, unchecked fraud could lead to the wholesale destruction of government health-care programs. Systemic theft creates cost inflation, he explained, which increases political pressure to make cuts, often affecting both the healthy and the unhealthy parts of a program. “That’s going to translate in one way or another to less medical treatment when it’s needed, and clear incentives for the insurance companies to provide poorer-quality care,” Sparrow said. “Indiscriminate cost cutting hurts the honest people more than the dishonest. If you just cut reimbursement rates, they’ll just bill more. They’re not constrained by the truth.” If politicians don’t learn to discriminate between fraud and legitimate activity, Sparrow warned, “this will grow like a cancer and destroy your program.”&lt;/p&gt;
&lt;p&gt;In February, 2017, the government announced that it was joining Benjamin Poehling’s case against United. United has denied the charges and is fighting vigorously against them in court. The company filed a motion to dismiss the case, and, last February, a judge granted the motion for some of the claims but allowed a central allegation—that United had failed to correct diagnosis codes that it knew were false—to move forward. In its defense, the company cites a principle known as actuarial equivalence, which requires that the government treat Medicare and Medicare Advantage plans equally. United argues in court filings that the C.M.S. “does not delete or otherwise account for the unsupported diagnosis codes . . . when it is calculating risk scores for its traditional Medicare enrollees,” and that, as a result, requiring Medicare Advantage plans to delete unsupported codes without making traditional Medicare do the same violates actuarial equivalence.&lt;/p&gt;
&lt;p&gt;Poehling left the company in 2012, before the case became public, and feels fortunate to have found another job. After our interview in Bloomington, Poehling and I took a drive. We circled United’s headquarters, a cluster of mirrored buildings in Minnetonka, just west of Minneapolis. We also visited Edina, an affluent area where many United executives live. We passed country clubs and grand houses surrounded by rolling lawns. It was late fall, and the streets were blanketed in golden leaves.&lt;/p&gt;
&lt;p&gt;Poehling noted that United’s stock had performed spectacularly in recent years. “If you ask any health-care executive now, one of the driving forces in their business is government health-care programs,” he said. He seemed dubious that Medicare Advantage was working as intended. “A lot of enrollees get free gym memberships, free dental care. They get all these things you don’t get with fee-for-service Medicare. When people say, ‘Well, how do these private companies do it, how do they fund it?’ Well, this is how they fund it!” he said. “The fundamental question is, does Medicare Advantage really save the government money?”&lt;/p&gt;
&lt;p&gt;In 2016, seven years after Darren Sewell filed his case, the Justice Department informed Inman that it would join the suit. In May of 2017, after months of difficult negotiations, Freedom settled charges that it had violated the False Claims Act and agreed to pay $31.7 million. Freedom’s former chief operating officer, Sidd Pagidipati, paid seven hundred and fifty thousand dollars to settle charges related to his role in the alleged service-area-expansion fraud. Neither admitted liability. The whistle-blower’s share of the recovery, $6.4 million, will be split between Sewell’s estate and his attorneys. The company paid another $2.3 million for Sewell’s attorneys’ fees. Inman recently moved to London, which is a top source of American whistle-blower lawsuits outside the U.S., to build a new practice for her firm there.&lt;/p&gt;
&lt;p&gt;Five months after the Freedom settlement, Patel announced that he was selling Freedom’s parent company to Anthem, the second-largest insurance firm in the country, reportedly for more than a billion dollars. That year, &lt;em class=&quot;&quot;&gt;Florida Trend&lt;/em&gt; named Patel “Floridian of the Year.” He told the publication that he was planning to dedicate his time to philanthropy. When asked about the Freedom fine, he responded, “I decided to take it as a cost of doing business.” ♦&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 28 Jan 2019 13:04:45 +0000</pubDate>
<dc:creator>gringoDan</dc:creator>
<og:image>https://media.newyorker.com/photos/5c48f043b50ffe2e4787fa60/16:9/w_1200,h_630,c_limit/190204_r33672.jpg</og:image>
<og:title>The Personal Toll of Whistle-Blowing</og:title>
<og:description>Why one physician took the risk of becoming an F.B.I. informant to expose alleged Medicare fraud.</og:description>
<og:url>https://www.newyorker.com/magazine/2019/02/04/the-personal-toll-of-whistle-blowing</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.newyorker.com/magazine/2019/02/04/the-personal-toll-of-whistle-blowing</dc:identifier>
</item>
<item>
<title>Writing an OS in Rust: Advanced Paging</title>
<link>https://os.phil-opp.com/advanced-paging/</link>
<guid isPermaLink="true" >https://os.phil-opp.com/advanced-paging/</guid>
<description>&lt;header class=&quot;masthead&quot;&gt;
&lt;p&gt;&lt;small&gt;Philipp Oppermann's blog&lt;/small&gt;&lt;/p&gt;
&lt;/header&gt;
&lt;time datetime=&quot;2019-01-28&quot; class=&quot;post-date&quot;&gt;Jan 28, 2019&lt;/time&gt;&lt;aside id=&quot;toc&quot;&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#accessing-page-tables&quot;&gt;Accessing Page Tables&lt;/a&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#recursive-page-tables&quot;&gt;Recursive Page Tables&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#implementation&quot;&gt;Implementation&lt;/a&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#translating-addresses&quot;&gt;Translating Addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#creating-a-new-mapping&quot;&gt;Creating a new Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#boot-information&quot;&gt;Boot Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#allocating-frames&quot;&gt;Allocating Frames&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#what-s-next&quot;&gt;What's next?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/aside&gt;&lt;p&gt;This post explains techniques to make the physical page table frames accessible to our kernel. It then uses such a technique to implement a function that translates virtual to physical addresses. It also explains how to create new mappings in the page tables.&lt;/p&gt;

&lt;p&gt;This blog is openly developed on &lt;a href=&quot;https://github.com/phil-opp/blog_os&quot;&gt;GitHub&lt;/a&gt;. If you have any problems or questions, please open an issue there. You can also leave comments &lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#comments&quot;&gt;at the bottom&lt;/a&gt;. The complete source code for this post can be found &lt;a href=&quot;https://github.com/phil-opp/blog_os/tree/post-10&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;🔗&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&quot;https://os.phil-opp.com/paging-introduction/&quot;&gt;previous post&lt;/a&gt; we learned about the principles of paging and how the 4-level page tables on x86_64 work. We also found out that the bootloader already set up a page table hierarchy for our kernel, which means that our kernel already runs on virtual addresses. This improves safety since illegal memory accesses cause page fault exceptions instead of modifying arbitrary physical memory.&lt;/p&gt;
&lt;p&gt;However, it also causes a problem when we try to access the page tables from our kernel because we can't directly access the physical addresses that are stored in page table entries or the &lt;code&gt;CR3&lt;/code&gt; register. We experienced that problem already &lt;a href=&quot;https://os.phil-opp.com/paging-introduction/#accessing-the-page-tables&quot;&gt;at the end of the previous post&lt;/a&gt; when we tried to inspect the active page tables.&lt;/p&gt;
&lt;p&gt;The next section discusses the problem in detail and provides different approaches to a solution. Afterward, we implement a function that traverses the page table hierarchy in order to translate virtual to physical addresses. Finally, we learn how to create new mappings in the page tables and how to find unused memory frames for creating new page tables.&lt;/p&gt;
&lt;h2 id=&quot;accessing-page-tables&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#accessing-page-tables&quot; aria-label=&quot;Anchor link for: accessing-page-tables&quot;&gt;🔗&lt;/a&gt; Accessing Page Tables&lt;/h2&gt;
&lt;p&gt;Accessing the page tables from our kernel is not as easy as it may seem. To understand the problem let's take a look at the example 4-level page table hierarchy of the previous post again:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/124436854aeff3df13c86c3ffd3f676d3142a267/82b62/paging-introduction/x86_64-page-table-translation.svg&quot; alt=&quot;An example 4-level page hierarchy with each page table shown in physical memory&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The important thing here is that each page entry stores the &lt;em&gt;physical&lt;/em&gt; address of the next table. This avoids the need to run a translation for these addresses too, which would be bad for performance and could easily cause endless translation loops.&lt;/p&gt;
&lt;p&gt;The problem for us is that we can't directly access physical addresses from our kernel since our kernel also runs on top of virtual addresses. For example when we access address &lt;code&gt;4 KiB&lt;/code&gt;, we access the &lt;em&gt;virtual&lt;/em&gt; address &lt;code&gt;4 KiB&lt;/code&gt;, not the &lt;em&gt;physical&lt;/em&gt; address &lt;code&gt;4 KiB&lt;/code&gt; where the level 4 page table is stored. When we want to access the physical address &lt;code&gt;4 KiB&lt;/code&gt;, we can only do so through some virtual address that maps to it.&lt;/p&gt;
&lt;p&gt;So in order to access page table frames, we need to map some virtual pages to them. There are different ways to create these mappings that all allow us to access arbitrary page table frames:&lt;/p&gt;
&lt;ul readability=&quot;27.740157480315&quot;&gt;&lt;li readability=&quot;21.414987912973&quot;&gt;
&lt;p&gt;A simple solution is to &lt;strong&gt;identity map all page tables&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/identity-mapped-page-tables.svg&quot; alt=&quot;A virtual and a physical address space with various virtual pages mapped to the physical frame with the same address&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In this example, we see various identity-mapped page table frames. This way the physical addresses of page tables are also valid virtual addresses so that we can easily access the page tables of all levels starting from the CR3 register.&lt;/p&gt;
&lt;p&gt;However, it clutters the virtual address space and makes it more difficult to find continuous memory regions of larger sizes. For example, imagine that we want to create a virtual memory region of size 1000 KiB in the above graphic, e.g. for &lt;a href=&quot;https://en.wikipedia.org/wiki/Memory-mapped_file&quot;&gt;memory-mapping a file&lt;/a&gt;. We can't start the region at &lt;code&gt;28 KiB&lt;/code&gt; because it would collide with the already mapped page at &lt;code&gt;1004 MiB&lt;/code&gt;. So we have to look further until we find a large enough unmapped area, for example at &lt;code&gt;1008 KiB&lt;/code&gt;. This is a similar fragmentation problem as with &lt;a href=&quot;https://os.phil-opp.com/paging-introduction/#fragmentation&quot;&gt;segmentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Equally, it makes it much more difficult to create new page tables, because we need to find physical frames whose corresponding pages aren't already in use. For example, let's assume that we reserved the &lt;em&gt;virtual&lt;/em&gt; 1000 KiB memory region starting at &lt;code&gt;1008 KiB&lt;/code&gt; for our memory-mapped file. Now we can't use any frame with a &lt;em&gt;physical&lt;/em&gt; address between &lt;code&gt;1000 KiB&lt;/code&gt; and &lt;code&gt;2008 KiB&lt;/code&gt; anymore, because we can't identity map it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;26&quot;&gt;
&lt;p&gt;Alternatively, we could &lt;strong&gt;map the page tables frames only temporarily&lt;/strong&gt; when we need to access them. To be able to create the temporary mappings we only need a single identity-mapped level 1 table:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/temporarily-mapped-page-tables.png&quot; alt=&quot;A virtual and a physical address space with an identity mapped level 1 table, which maps its 0th entry to the level 2 table frame, thereby mapping that frame to page with address 0&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The level 1 table in this graphic controls the first 2 MiB of the virtual address space. This is because it is reachable by starting at the CR3 register and following the 0th entry in the level 4, level 3, and level 2 page tables. The entry with index &lt;code&gt;8&lt;/code&gt; maps the virtual page at address &lt;code&gt;32 KiB&lt;/code&gt; to the physical frame at address &lt;code&gt;32 KiB&lt;/code&gt;, thereby identity mapping the level 1 table itself. The graphic shows this identity-mapping by the horizontal arrow at &lt;code&gt;32 KiB&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By writing to the identity-mapped level 1 table, our kernel can create up to 511 temporary mappings (512 minus the entry required for the identity mapping). In the above example, the kernel mapped the 0th entry of the level 1 table to the frame with address &lt;code&gt;24 KiB&lt;/code&gt;. This created a temporary mapping of the virtual page at &lt;code&gt;0 KiB&lt;/code&gt; to the physical frame of the level 2 page table, indicated by the dashed arrow. Now the kernel can access the level 2 page table by writing to the page starting at &lt;code&gt;0 KiB&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The process for accessing an arbitrary page table frame with temporary mappings would be:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Search for a free entry in the identity-mapped level 1 table.&lt;/li&gt;
&lt;li&gt;Map that entry to the physical frame of the page table that we want to access.&lt;/li&gt;
&lt;li&gt;Access the target frame through the virtual page that maps to the entry.&lt;/li&gt;
&lt;li&gt;Set the entry back to unused thereby removing the temporary mapping again.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This approach keeps the virtual address space clean since it reuses the same 512 virtual pages for creating the mappings. The drawback is that it is a bit cumbersome, especially since a new mapping might require modifications of multiple table levels, which means that we would need to repeat the above process multiple times.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;While both of the above approaches work, there is a third technique called &lt;strong&gt;recursive page tables&lt;/strong&gt; that combines their advantages: It keeps all page table frames mapped at all times so that no temporary mappings are needed, and also keeps the mapped pages together to avoid fragmentation of the virtual address space. This is the technique that we will use for our implementation, therefore it is described in detail in the following section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;recursive-page-tables&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#recursive-page-tables&quot; aria-label=&quot;Anchor link for: recursive-page-tables&quot;&gt;🔗&lt;/a&gt; Recursive Page Tables&lt;/h3&gt;
&lt;p&gt;The idea behind this approach is to map some entry of the level 4 page table to the level 4 table itself. By doing this, we effectively reserve a part of the virtual address space and map all current and future page table frames to that space.&lt;/p&gt;
&lt;p&gt;Let's go through an example to understand how this all works:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/recursive-page-table.png&quot; alt=&quot;An example 4-level page hierarchy with each page table shown in physical memory. Entry 511 of the level 4 page is mapped to frame 4KiB, the frame of the level 4 table itself.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The only difference to the &lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#accessing-page-tables&quot;&gt;example at the beginning of this post&lt;/a&gt; is the additional entry at index &lt;code&gt;511&lt;/code&gt; in the level 4 table, which is mapped to physical frame &lt;code&gt;4 KiB&lt;/code&gt;, the frame of the level 4 table itself.&lt;/p&gt;
&lt;p&gt;By letting the CPU follow this entry on a translation, it doesn't reach a level 3 table, but the same level 4 table again. This is similar to a recursive function that calls itself, therefore this table is called a &lt;em&gt;recursive page table&lt;/em&gt;. The important thing is that the CPU assumes that every entry in the level 4 table points to a level 3 table, so it now treats the level 4 table as a level 3 table. This works because tables of all levels have the exact same layout on x86_64.&lt;/p&gt;
&lt;p&gt;By following the recursive entry one or multiple times before we start the actual translation, we can effectively shorten the number of levels that the CPU traverses. For example, if we follow the recursive entry once and then proceed to the level 3 table, the CPU thinks that the level 3 table is a level 2 table. Going further, it treats the level 2 table as a level 1 table and the level 1 table as the mapped frame. This means that we can now read and write the level 1 page table because the CPU thinks that it is the mapped frame. The graphic below illustrates the 5 translation steps:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/recursive-page-table-access-level-1.png&quot; alt=&quot;The above example 4-level page hierarchy with 5 arrows: &amp;quot;Step 0&amp;quot; from CR4 to level 4 table, &amp;quot;Step 1&amp;quot; from level 4 table to level 4 table, &amp;quot;Step 2&amp;quot; from level 4 table to level 3 table, &amp;quot;Step 3&amp;quot; from level 3 table to level 2 table, and &amp;quot;Step 4&amp;quot; from level 2 table to level 1 table.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Similarly, we can follow the recursive entry twice before starting the translation to reduce the number of traversed levels to two:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/recursive-page-table-access-level-2.png&quot; alt=&quot;The same 4-level page hierarchy with the following 4 arrows: &amp;quot;Step 0&amp;quot; from CR4 to level 4 table, &amp;quot;Steps 1&amp;amp;2&amp;quot; from level 4 table to level 4 table, &amp;quot;Step 3&amp;quot; from level 4 table to level 3 table, and &amp;quot;Step 4&amp;quot; from level 3 table to level 2 table.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Let's go through it step by step: First, the CPU follows the recursive entry on the level 4 table and thinks that it reaches a level 3 table. Then it follows the recursive entry again and thinks that it reaches a level 2 table. But in reality, it is still on the level 4 table. When the CPU now follows a different entry, it lands on a level 3 table but thinks it is already on a level 1 table. So while the next entry points at a level 2 table, the CPU thinks that it points to the mapped frame, which allows us to read and write the level 2 table.&lt;/p&gt;
&lt;p&gt;Accessing the tables of levels 3 and 4 works in the same way. For accessing the level 3 table, we follow the recursive entry three times, tricking the CPU into thinking it is already on a level 1 table. Then we follow another entry and reach a level 3 table, which the CPU treats as a mapped frame. For accessing the level 4 table itself, we just follow the recursive entry four times until the CPU treats the level 4 table itself as mapped frame (in blue in the graphic below).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/recursive-page-table-access-level-3.png&quot; alt=&quot;The same 4-level page hierarchy with the following 3 arrows: &amp;quot;Step 0&amp;quot; from CR4 to level 4 table, &amp;quot;Steps 1,2,3&amp;quot; from level 4 table to level 4 table, and &amp;quot;Step 4&amp;quot; from level 4 table to level 3 table. In blue the alternative &amp;quot;Steps 1,2,3,4&amp;quot; arrow from level 4 table to level 4 table.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It might take some time to wrap your head around the concept, but it works quite well in practice.&lt;/p&gt;
&lt;h4 id=&quot;address-calculation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#address-calculation&quot; aria-label=&quot;Anchor link for: address-calculation&quot;&gt;🔗&lt;/a&gt; Address Calculation&lt;/h4&gt;
&lt;p&gt;We saw that we can access tables of all levels by following the recursive entry once or multiple times before the actual translation. Since the indexes into the tables of the four levels are derived directly from the virtual address, we need to construct special virtual addresses for this technique. Remember, the page table indexes are derived from the address in the following way:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/55d00a7a89ddaf126f40bb1414de0d78fcde09e4/478a7/paging-introduction/x86_64-table-indices-from-address.svg&quot; alt=&quot;Bits 0–12 are the page offset, bits 12–21 the level 1 index, bits 21–30 the level 2 index, bits 30–39 the level 3 index, and bits 39–48 the level 4 index&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Let's assume that we want to access the level 1 page table that maps a specific page. As we learned above, this means that we have to follow the recursive entry one time before continuing with the level 4, level 3, and level 2 indexes. To do that we move each block of the address one block to the right and set the original level 4 index to the index of the recursive entry:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/table-indices-from-address-recursive-level-1.svg&quot; alt=&quot;Bits 0–12 are the offset into the level 1 table frame, bits 12–21 the level 2 index, bits 21–30 the level 3 index, bits 30–39 the level 4 index, and bits 39–48 the index of the recursive entry&quot;/&gt;&lt;/p&gt;
&lt;p&gt;For accessing the level 2 table of that page, we move each index block two blocks to the right and set both the blocks of the original level 4 index and the original level 3 index to the index of the recursive entry:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/table-indices-from-address-recursive-level-2.svg&quot; alt=&quot;Bits 0–12 are the offset into the level 2 table frame, bits 12–21 the level 3 index, bits 21–30 the level 4 index, and bits 30–39 and bits 39–48 are the index of the recursive entry&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Accessing the level 3 table works by moving each block three blocks to the right and using the recursive index for the original level 4, level 3, and level 2 address blocks:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/table-indices-from-address-recursive-level-3.svg&quot; alt=&quot;Bits 0–12 are the offset into the level 3 table frame, bits 12–21 the level 4 index, and bits 21–30, bits 30–39 and bits 39–48 are the index of the recursive entry&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Finally, we can access the level 4 table by moving each block four blocks to the right and using the recursive index for all address blocks except for the offset:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/table-indices-from-address-recursive-level-4.svg&quot; alt=&quot;Bits 0–12 are the offset into the level l table frame and bits 12–21, bits 21–30, bits 30–39 and bits 39–48 are the index of the recursive entry&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We can now calculate virtual addresses for the page tables of all four levels. We can even calculate an address that points exactly to a specific page table entry by multiplying its index by 8, the size of a page table entry.&lt;/p&gt;
&lt;p&gt;The table below summarizes the address structure for accessing the different kinds of frames:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Virtual Address for&lt;/th&gt;
&lt;th&gt;Address Structure (&lt;a href=&quot;https://en.wikipedia.org/wiki/Octal&quot;&gt;octal&lt;/a&gt;)&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Page&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0o_SSSSSS_AAA_BBB_CCC_DDD_EEEE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Level 1 Table Entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0o_SSSSSS_RRR_AAA_BBB_CCC_DDDD&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Level 2 Table Entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0o_SSSSSS_RRR_RRR_AAA_BBB_CCCC&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Level 3 Table Entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0o_SSSSSS_RRR_RRR_RRR_AAA_BBBB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;Level 4 Table Entry&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0o_SSSSSS_RRR_RRR_RRR_RRR_AAAA&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Whereas &lt;code&gt;AAA&lt;/code&gt; is the level 4 index, &lt;code&gt;BBB&lt;/code&gt; the level 3 index, &lt;code&gt;CCC&lt;/code&gt; the level 2 index, and &lt;code&gt;DDD&lt;/code&gt; the level 1 index of the mapped frame, and &lt;code&gt;EEEE&lt;/code&gt; the offset into it. &lt;code&gt;RRR&lt;/code&gt; is the index of the recursive entry. When an index (three digits) is transformed to an offset (four digits), it is done by multiplying it by 8 (the size of a page table entry). With this offset, the resulting address directly points to the respective page table entry.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SSSSSS&lt;/code&gt; are sign extension bits, which means that they are all copies of bit 47. This is a special requirement for valid addresses on the x86_64 architecture. We explained it in the &lt;a href=&quot;https://os.phil-opp.com/paging-introduction/#paging-on-x86&quot;&gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use &lt;a href=&quot;https://en.wikipedia.org/wiki/Octal&quot;&gt;octal&lt;/a&gt; numbers for representing the addresses since each octal character represents three bits, which allows us to clearly separate the 9-bit indexes of the different page table levels. This isn't possible with the hexadecimal system where each character represents four bits.&lt;/p&gt;
&lt;h2 id=&quot;implementation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#implementation&quot; aria-label=&quot;Anchor link for: implementation&quot;&gt;🔗&lt;/a&gt; Implementation&lt;/h2&gt;
&lt;p&gt;After all this theory we can finally start our implementation. Conveniently, the bootloader not only created page tables for our kernel, but it also created a recursive mapping in the last entry of the level 4 table. The bootloader did this because otherwise there would be a &lt;a href=&quot;https://en.wikipedia.org/wiki/Chicken_or_the_egg&quot;&gt;chicken or egg problem&lt;/a&gt;: We need to access the level 4 table to create a recursive mapping, but we can't access it without some kind of mapping.&lt;/p&gt;
&lt;p&gt;We already used this recursive mapping &lt;a href=&quot;https://os.phil-opp.com/paging-introduction/#accessing-the-page-tables&quot;&gt;at the end of the previous post&lt;/a&gt; to access the level 4 table. We did this through the hardcoded address &lt;code&gt;0xffff_ffff_ffff_f000&lt;/code&gt;. When we convert this address to &lt;a href=&quot;https://en.wikipedia.org/wiki/Octal&quot;&gt;octal&lt;/a&gt; and compare it with the above table, we can see that it exactly follows the structure of a level 4 table entry with &lt;code&gt;RRR&lt;/code&gt; = &lt;code&gt;0o777&lt;/code&gt;, &lt;code&gt;AAAA&lt;/code&gt; = 0, and the sign extension bits set to &lt;code&gt;1&lt;/code&gt; each:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;structure: 0o_SSSSSS_RRR_RRR_RRR_RRR_AAAA
&lt;/span&gt;&lt;span&gt;address:   0o_177777_777_777_777_777_0000
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;With our knowledge about recursive page tables we can now create virtual addresses to access all active page tables. This allows us to create a translation function in software.&lt;/p&gt;
&lt;h3 id=&quot;translating-addresses&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#translating-addresses&quot; aria-label=&quot;Anchor link for: translating-addresses&quot;&gt;🔗&lt;/a&gt; Translating Addresses&lt;/h3&gt;
&lt;p&gt;As a first step, let's create a function that translates a virtual address to a physical address by walking the page table hierarchy:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/lib.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;pub mod &lt;/span&gt;&lt;span&gt;memory;
&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::PhysAddr;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::structures::paging::PageTable;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;/// Returns the physical address for the given virtual address, or `None` if the
&lt;/span&gt;&lt;span&gt;/// virtual address is not mapped.
&lt;/span&gt;&lt;span&gt;pub fn &lt;/span&gt;&lt;span&gt;translate_addr(addr: &lt;/span&gt;&lt;span&gt;usize&lt;/span&gt;&lt;span&gt;, level_4_table_addr: &lt;/span&gt;&lt;span&gt;usize&lt;/span&gt;&lt;span&gt;) -&amp;gt; Option&amp;lt;PhysAddr&amp;gt; {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// retrieve the page table indices of the address that we want to translate
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_index &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(addr &lt;/span&gt;&lt;span&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span&gt;39&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;&amp;amp; &lt;/span&gt;&lt;span&gt;0o777&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_3_index &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(addr &lt;/span&gt;&lt;span&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span&gt;30&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;&amp;amp; &lt;/span&gt;&lt;span&gt;0o777&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_2_index &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(addr &lt;/span&gt;&lt;span&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span&gt;21&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;&amp;amp; &lt;/span&gt;&lt;span&gt;0o777&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_1_index &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(addr &lt;/span&gt;&lt;span&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;&amp;amp; &lt;/span&gt;&lt;span&gt;0o777&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; page_offset &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; addr &lt;/span&gt;&lt;span&gt;&amp;amp; &lt;/span&gt;&lt;span&gt;0o7777&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// check that level 4 entry is mapped
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&amp;amp;*&lt;/span&gt;&lt;span&gt;(level_4_table_addr &lt;/span&gt;&lt;span&gt;as *const&lt;/span&gt;&lt;span&gt; PageTable)};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; level_4_table[level_4_index].addr().is_null() {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return &lt;/span&gt;&lt;span&gt;None;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_3_table_addr &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(level_4_table_addr &lt;/span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span&gt;9&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;| &lt;/span&gt;&lt;span&gt;(level_4_index &lt;/span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// check that level 3 entry is mapped
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_3_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&amp;amp;*&lt;/span&gt;&lt;span&gt;(level_3_table_addr &lt;/span&gt;&lt;span&gt;as *const&lt;/span&gt;&lt;span&gt; PageTable)};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; level_3_table[level_3_index].addr().is_null() {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return &lt;/span&gt;&lt;span&gt;None;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_2_table_addr &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(level_3_table_addr &lt;/span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span&gt;9&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;| &lt;/span&gt;&lt;span&gt;(level_3_index &lt;/span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// check that level 2 entry is mapped
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_2_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&amp;amp;*&lt;/span&gt;&lt;span&gt;(level_2_table_addr &lt;/span&gt;&lt;span&gt;as *const&lt;/span&gt;&lt;span&gt; PageTable)};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; level_2_table[level_2_index].addr().is_null() {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return &lt;/span&gt;&lt;span&gt;None;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_1_table_addr &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;(level_2_table_addr &lt;/span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span&gt;9&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;| &lt;/span&gt;&lt;span&gt;(level_2_index &lt;/span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// check that level 1 entry is mapped and retrieve physical address from it
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_1_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&amp;amp;*&lt;/span&gt;&lt;span&gt;(level_1_table_addr &lt;/span&gt;&lt;span&gt;as *const&lt;/span&gt;&lt;span&gt; PageTable)};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; phys_addr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; level_1_table[level_1_index].addr();
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; phys_addr.is_null() {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return &lt;/span&gt;&lt;span&gt;None;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;Some(phys_addr &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; page_offset)
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;First, we calculate the page table indices and the page offset from the address through bitwise operations as specified in the graphic:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/55d00a7a89ddaf126f40bb1414de0d78fcde09e4/478a7/paging-introduction/x86_64-table-indices-from-address.svg&quot; alt=&quot;Bits 0–12 are the page offset, bits 12–21 the level 1 index, bits 21–30 the level 2 index, bits 30–39 the level 3 index, and bits 39–48 the level 4 index&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then we transform the &lt;code&gt;level_4_table_addr&lt;/code&gt; to a &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/struct.PageTable.html&quot;&gt;&lt;code&gt;PageTable&lt;/code&gt;&lt;/a&gt; reference, which is an &lt;code&gt;unsafe&lt;/code&gt; operation since the compiler can't know that the address is valid. We use the indexing operator to look at the entry with &lt;code&gt;level_4_index&lt;/code&gt;. If that entry is null, there is no level 3 table for this level 4 entry, which means that the &lt;code&gt;addr&lt;/code&gt; is not mapped to any physical memory, so we return &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the entry is not &lt;code&gt;None&lt;/code&gt;, we know that a level 3 table exists. We calculate the virtual address of it by shifting the level 4 address 9 bits to the left and setting the address bits 12–21 to the level 4 index (see the section about &lt;a href=&quot;https://os.phil-opp.com/advanced-paging/#address-calculation&quot;&gt;address calculation&lt;/a&gt;). We can do that because the recursive index is &lt;code&gt;0o777&lt;/code&gt; so that it is also a valid sign extension. We then do the same cast and entry-checking as with the level 4 table.&lt;/p&gt;
&lt;p&gt;After we checked the three higher level pages, we can finally read the entry of the level 1 table that tells us the physical frame that the address is mapped to. As the last step, we add the page offset to that address and return it.&lt;/p&gt;
&lt;p&gt;If we knew that the address is mapped, we could directly access the level 1 table without looking at the higher level pages first. But since we don't know this, we have to check whether the level 1 table exists first, otherwise our function would cause a page fault for unmapped addresses.&lt;/p&gt;
&lt;h4 id=&quot;try-it-out&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#try-it-out&quot; aria-label=&quot;Anchor link for: try-it-out&quot;&gt;🔗&lt;/a&gt; Try it out&lt;/h4&gt;
&lt;p&gt;We can use our new translation function to translate some virtual addresses in our &lt;code&gt;_start&lt;/code&gt; function:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[cfg(not(test))]
&lt;/span&gt;&lt;span&gt;#[no_mangle]
&lt;/span&gt;&lt;span&gt;pub extern &lt;/span&gt;&lt;span&gt;&quot;C&quot; &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;_start() -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…] &lt;/span&gt;&lt;span&gt;// initialize GDT, IDT, PICS
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;blog_os::memory::translate_addr;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;const &lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;usize = &lt;/span&gt;&lt;span&gt;0o_177777_777_777_777_777_0000&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// the identity-mapped vga buffer page
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;0xb8000 -&amp;gt; &lt;/span&gt;&lt;span&gt;{:?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, translate_addr(&lt;/span&gt;&lt;span&gt;0xb8000&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// some code page
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;0x20010a -&amp;gt; &lt;/span&gt;&lt;span&gt;{:?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, translate_addr(&lt;/span&gt;&lt;span&gt;0x20010a&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// some stack page
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;0x57ac001ffe48 -&amp;gt; &lt;/span&gt;&lt;span&gt;{:?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, translate_addr(&lt;/span&gt;&lt;span&gt;0x57ac001ffe48&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;It did not crash!&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;blog_os::hlt_loop();
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;When we run it, we see the following output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/qemu-translate-addr.png&quot; alt=&quot;0xb8000 -&amp;gt; 0xb8000, 0x20010a -&amp;gt; 0x40010a, 0x57ac001ffe48 -&amp;gt; 0x27be48&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As expected, the identity-mapped address &lt;code&gt;0xb8000&lt;/code&gt; translates to the same physical address. The code page and the stack page translate to some arbitrary physical addresses, which depend on how the bootloader created the initial mapping for our kernel.&lt;/p&gt;
&lt;h4 id=&quot;the-recursivepagetable-type&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#the-recursivepagetable-type&quot; aria-label=&quot;Anchor link for: the-recursivepagetable-type&quot;&gt;🔗&lt;/a&gt; The &lt;code&gt;RecursivePageTable&lt;/code&gt; Type&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;x86_64&lt;/code&gt; provides a &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/struct.RecursivePageTable.html&quot;&gt;&lt;code&gt;RecursivePageTable&lt;/code&gt;&lt;/a&gt; type that implements safe abstractions for various page table operations. By using this type, we can reimplement our &lt;code&gt;translate_addr&lt;/code&gt; function in a much cleaner way:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::structures::paging::{Mapper, Page, PageTable, RecursivePageTable};
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::{VirtAddr, PhysAddr};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;/// Creates a RecursivePageTable instance from the level 4 address.
&lt;/span&gt;&lt;span&gt;///
&lt;/span&gt;&lt;span&gt;/// This function is unsafe because it can break memory safety if an invalid
&lt;/span&gt;&lt;span&gt;/// address is passed.
&lt;/span&gt;&lt;span&gt;pub unsafe fn &lt;/span&gt;&lt;span&gt;init(level_4_table_addr: &lt;/span&gt;&lt;span&gt;usize&lt;/span&gt;&lt;span&gt;) -&amp;gt; RecursivePageTable&amp;lt;&lt;/span&gt;&lt;span&gt;'static&lt;/span&gt;&lt;span&gt;&amp;gt; {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table_ptr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; level_4_table_addr &lt;/span&gt;&lt;span&gt;as *mut&lt;/span&gt;&lt;span&gt; PageTable;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table &lt;/span&gt;&lt;span&gt;= &amp;amp;mut *&lt;/span&gt;&lt;span&gt;level_4_table_ptr;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;RecursivePageTable::new(level_4_table).unwrap()
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;/// Returns the physical address for the given virtual address, or `None` if
&lt;/span&gt;&lt;span&gt;/// the virtual address is not mapped.
&lt;/span&gt;&lt;span&gt;pub fn &lt;/span&gt;&lt;span&gt;translate_addr(addr: &lt;/span&gt;&lt;span&gt;u64&lt;/span&gt;&lt;span&gt;, recursive_page_table: &lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;RecursivePageTable)
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;-&amp;gt; Option&amp;lt;PhysAddr&amp;gt;
&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; addr &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;VirtAddr::new(addr);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; page: Page &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;Page::containing_address(addr);
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// perform the translation
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; frame &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; recursive_page_table.translate_page(page);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;frame.map(|frame| frame.start_address() &lt;/span&gt;&lt;span&gt;+ u64&lt;/span&gt;&lt;span&gt;::from(addr.page_offset()))
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;RecursivePageTable&lt;/code&gt; type encapsulates the unsafety of the page table walk completely so that we no longer need &lt;code&gt;unsafe&lt;/code&gt; in our &lt;code&gt;translate_addr&lt;/code&gt; function. The &lt;code&gt;init&lt;/code&gt; function needs to be unsafe because the caller has to guarantee that the passed &lt;code&gt;level_4_table_addr&lt;/code&gt; is valid.&lt;/p&gt;
&lt;p&gt;Our &lt;code&gt;_start&lt;/code&gt; function needs to be updated for the new function signature in the following way:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[cfg(not(test))]
&lt;/span&gt;&lt;span&gt;#[no_mangle]
&lt;/span&gt;&lt;span&gt;pub extern &lt;/span&gt;&lt;span&gt;&quot;C&quot; &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;_start() -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…] &lt;/span&gt;&lt;span&gt;// initialize GDT, IDT, PICS
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;blog_os::memory::{self, translate_addr};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;const &lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;usize = &lt;/span&gt;&lt;span&gt;0o_177777_777_777_777_777_0000&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; recursive_page_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{ memory::init(&lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;) };
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// the identity-mapped vga buffer page
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;0xb8000 -&amp;gt; &lt;/span&gt;&lt;span&gt;{:?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, translate_addr(&lt;/span&gt;&lt;span&gt;0xb8000&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;recursive_page_table));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// some code page
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;0x20010a -&amp;gt; &lt;/span&gt;&lt;span&gt;{:?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, translate_addr(&lt;/span&gt;&lt;span&gt;0x20010a&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;recursive_page_table));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// some stack page
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;0x57ac001ffe48 -&amp;gt; &lt;/span&gt;&lt;span&gt;{:?}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, translate_addr(&lt;/span&gt;&lt;span&gt;0x57ac001ffe48&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;recursive_page_table));
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;It did not crash!&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;blog_os::hlt_loop();
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Instead of passing the &lt;code&gt;LEVEL_4_TABLE_ADDR&lt;/code&gt; to &lt;code&gt;translate_addr&lt;/code&gt; and accessing the page tables through unsafe raw pointers, we now pass references to a &lt;code&gt;RecursivePageTable&lt;/code&gt; type. By doing this, we now have a safe abstraction and clear ownership semantics. This ensures that we can't accidentally modify the page table concurrently, because an exclusive borrow of the &lt;code&gt;RecursivePageTable&lt;/code&gt; is needed in order to modify it.&lt;/p&gt;
&lt;p&gt;When we run it, we see the same result as with our handcrafted translation function.&lt;/p&gt;
&lt;h4 id=&quot;making-unsafe-functions-safer&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#making-unsafe-functions-safer&quot; aria-label=&quot;Anchor link for: making-unsafe-functions-safer&quot;&gt;🔗&lt;/a&gt; Making Unsafe Functions Safer&lt;/h4&gt;
&lt;p&gt;Our &lt;code&gt;memory::init&lt;/code&gt; function is an &lt;a href=&quot;https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#calling-an-unsafe-function-or-method&quot;&gt;unsafe function&lt;/a&gt;, which means that an &lt;code&gt;unsafe&lt;/code&gt; block is required for calling it because the caller has to guarantee that certain requirements are met. In our case, the requirement is that the passed address is mapped to the physical frame of the level 4 page table.&lt;/p&gt;
&lt;p&gt;The second property of unsafe functions is that their complete body is treated as an &lt;code&gt;unsafe&lt;/code&gt; block, which means that it can perform all kinds of unsafe operations without additional unsafe blocks. This is the reason that we didn't need an &lt;code&gt;unsafe&lt;/code&gt; block for dereferencing the raw &lt;code&gt;level_4_table_ptr&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;pub unsafe fn &lt;/span&gt;&lt;span&gt;init(level_4_table_addr: &lt;/span&gt;&lt;span&gt;usize&lt;/span&gt;&lt;span&gt;) -&amp;gt; RecursivePageTable&amp;lt;&lt;/span&gt;&lt;span&gt;'static&lt;/span&gt;&lt;span&gt;&amp;gt; {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table_ptr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; level_4_table_addr &lt;/span&gt;&lt;span&gt;as *mut&lt;/span&gt;&lt;span&gt; PageTable;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table &lt;/span&gt;&lt;span&gt;= &amp;amp;mut *&lt;/span&gt;&lt;span&gt;level_4_table_ptr; &lt;/span&gt;&lt;span&gt;// &amp;lt;- this operation is unsafe
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;RecursivePageTable::new(level_4_table).unwrap()
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The problem with this is that we don't immediately see which parts are unsafe. For example, we don't know whether the &lt;code&gt;RecursivePageTable::new&lt;/code&gt; function is unsafe or not without looking at &lt;a href=&quot;https://docs.rs/x86_64/0.3.6/x86_64/structures/paging/struct.RecursivePageTable.html#method.new&quot;&gt;its definition&lt;/a&gt;. This makes it very easy to accidentally do something unsafe without noticing.&lt;/p&gt;
&lt;p&gt;To avoid this problem, we can add a safe inner function:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;pub unsafe fn &lt;/span&gt;&lt;span&gt;init(level_4_table_addr: &lt;/span&gt;&lt;span&gt;usize&lt;/span&gt;&lt;span&gt;) -&amp;gt; RecursivePageTable&amp;lt;&lt;/span&gt;&lt;span&gt;'static&lt;/span&gt;&lt;span&gt;&amp;gt; {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;/// Rust currently treats the whole body of unsafe functions as an unsafe
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;/// block, which makes it difficult to see which operations are unsafe. To
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;/// limit the scope of unsafe we use a safe inner function.
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;init_inner(level_4_table_addr: &lt;/span&gt;&lt;span&gt;usize&lt;/span&gt;&lt;span&gt;) -&amp;gt; RecursivePageTable&amp;lt;&lt;/span&gt;&lt;span&gt;'static&lt;/span&gt;&lt;span&gt;&amp;gt; {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table_ptr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; level_4_table_addr &lt;/span&gt;&lt;span&gt;as *mut&lt;/span&gt;&lt;span&gt; PageTable;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; level_4_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{ &lt;/span&gt;&lt;span&gt;&amp;amp;mut *&lt;/span&gt;&lt;span&gt;level_4_table_ptr };
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;RecursivePageTable::new(level_4_table).unwrap()
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;init_inner(level_4_table_addr)
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now an &lt;code&gt;unsafe&lt;/code&gt; block is required again for dereferencing the &lt;code&gt;level_4_table_ptr&lt;/code&gt; and we immediately see that this is the only unsafe operations in the function. There is currently an open &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2585&quot;&gt;RFC&lt;/a&gt; to change this unfortunate property of unsafe functions that would allow us to avoid the above boilerplate.&lt;/p&gt;
&lt;h3 id=&quot;creating-a-new-mapping&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#creating-a-new-mapping&quot; aria-label=&quot;Anchor link for: creating-a-new-mapping&quot;&gt;🔗&lt;/a&gt; Creating a new Mapping&lt;/h3&gt;
&lt;p&gt;After reading the page tables and creating a translation function, the next step is to create a new mapping in the page table hierarchy.&lt;/p&gt;
&lt;p&gt;The difficulty of creating a new mapping depends on the virtual page that we want to map. In the easiest case, the level 1 page table for the page already exists and we just need to write a single entry. In the most difficult case, the page is in a memory region for that no level 3 exists yet so that we need to create new level 3, level 2 and level 1 page tables first.&lt;/p&gt;
&lt;p&gt;Let's start with the simple case and assume that we don't need to create new page tables. The bootloader loads itself in the first megabyte of the virtual address space, so we know that a valid level 1 table exists for this region. We can choose any unused page in this memory region for our example mapping, for example, the page at address &lt;code&gt;0x1000&lt;/code&gt;. As the target frame we use &lt;code&gt;0xb8000&lt;/code&gt;, the frame of the VGA text buffer. This way we can easily test whether our mapping worked.&lt;/p&gt;
&lt;p&gt;We implement it in a new &lt;code&gt;create_mapping&lt;/code&gt; function in our &lt;code&gt;memory&lt;/code&gt; module:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::structures::paging::{FrameAllocator, PhysFrame, Size4KiB};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;pub fn &lt;/span&gt;&lt;span&gt;create_example_mapping(
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;recursive_page_table: &lt;/span&gt;&lt;span&gt;&amp;amp;mut&lt;/span&gt;&lt;span&gt; RecursivePageTable,
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;frame_allocator: &lt;/span&gt;&lt;span&gt;&amp;amp;mut&lt;/span&gt;&lt;span&gt; impl FrameAllocator&amp;lt;Size4KiB&amp;gt;,
&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::structures::paging::PageTableFlags &lt;/span&gt;&lt;span&gt;as&lt;/span&gt;&lt;span&gt; Flags;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; page: Page &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;Page::containing_address(VirtAddr::new(&lt;/span&gt;&lt;span&gt;0x1000&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; frame &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;PhysFrame::containing_address(PhysAddr::new(&lt;/span&gt;&lt;span&gt;0xb8000&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; flags &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;Flags::&lt;/span&gt;&lt;span&gt;PRESENT &lt;/span&gt;&lt;span&gt;| &lt;/span&gt;&lt;span&gt;Flags::&lt;/span&gt;&lt;span&gt;WRITABLE&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; map_to_result &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;recursive_page_table.map_to(page, frame, flags, frame_allocator)
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;map_to_result.expect(&lt;/span&gt;&lt;span&gt;&quot;map_to failed&quot;&lt;/span&gt;&lt;span&gt;).flush();
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The function takes a mutable reference to the &lt;code&gt;RecursivePageTable&lt;/code&gt; because it needs to modify it and a &lt;code&gt;FrameAllocator&lt;/code&gt; that is explained below. It then uses the &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/trait.Mapper.html#tymethod.map_to&quot;&gt;&lt;code&gt;map_to&lt;/code&gt;&lt;/a&gt; function of the &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/trait.Mapper.html&quot;&gt;&lt;code&gt;Mapper&lt;/code&gt;&lt;/a&gt; trait to map the page at address &lt;code&gt;0x1000&lt;/code&gt; to the physical frame at address &lt;code&gt;0xb8000&lt;/code&gt;. The function is unsafe because it's possible to break memory safety with invalid arguments.&lt;/p&gt;
&lt;p&gt;Apart from the &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;frame&lt;/code&gt; arguments, the &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/trait.Mapper.html#tymethod.map_to&quot;&gt;&lt;code&gt;map_to&lt;/code&gt;&lt;/a&gt; function takes two more arguments. The third argument is a set of flags for the page table entry. We set the &lt;code&gt;PRESENT&lt;/code&gt; flag because it is required for all valid entries and the &lt;code&gt;WRITABLE&lt;/code&gt; flag to make the mapped page writable.&lt;/p&gt;
&lt;p&gt;The fourth argument needs to be some structure that implements the &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/trait.FrameAllocator.html&quot;&gt;&lt;code&gt;FrameAllocator&lt;/code&gt;&lt;/a&gt; trait. The &lt;code&gt;map_to&lt;/code&gt; method needs this argument because it might need unused frames for creating new page tables. The &lt;code&gt;Size4KiB&lt;/code&gt; argument in the trait implementation is needed because the &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/struct.Page.html&quot;&gt;&lt;code&gt;Page&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/struct.PhysFrame.html&quot;&gt;&lt;code&gt;PhysFrame&lt;/code&gt;&lt;/a&gt; types are &lt;a href=&quot;https://doc.rust-lang.org/book/ch10-00-generics.html&quot;&gt;generic&lt;/a&gt; over the &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/trait.PageSize.html&quot;&gt;&lt;code&gt;PageSize&lt;/code&gt;&lt;/a&gt; trait to work with both standard 4KiB pages and huge 2MiB/1GiB pages.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;map_to&lt;/code&gt; function can fail, so it returns a &lt;a href=&quot;https://doc.rust-lang.org/core/result/enum.Result.html&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;. Since this is just some example code that does not need to be robust, we just use &lt;a href=&quot;https://doc.rust-lang.org/core/result/enum.Result.html#method.expect&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; to panic when an error occurs. On success, the function returns a &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/struct.MapperFlush.html&quot;&gt;&lt;code&gt;MapperFlush&lt;/code&gt;&lt;/a&gt; type that provides an easy way to flush the newly mapped page from the translation lookaside buffer (TLB) with its &lt;a href=&quot;https://docs.rs/x86_64/0.3.5/x86_64/structures/paging/struct.MapperFlush.html#method.flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method. Like &lt;code&gt;Result&lt;/code&gt;, the type uses the &lt;a href=&quot;https://doc.rust-lang.org/std/result/#results-must-be-used&quot;&gt;&lt;code&gt;#[must_use]&lt;/code&gt;&lt;/a&gt; attribute to emit a warning when we accidentally forget to use it.&lt;/p&gt;
&lt;p&gt;Since we know that no new page tables are required for the address &lt;code&gt;0x1000&lt;/code&gt;, a frame allocator that always returns &lt;code&gt;None&lt;/code&gt; suffices. We create such an &lt;code&gt;EmptyFrameAllocator&lt;/code&gt; for testing our mapping function:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;/// A FrameAllocator that always returns `None`.
&lt;/span&gt;&lt;span&gt;pub struct &lt;/span&gt;&lt;span&gt;EmptyFrameAllocator;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;impl &lt;/span&gt;&lt;span&gt;FrameAllocator&amp;lt;Size4KiB&amp;gt; &lt;/span&gt;&lt;span&gt;for &lt;/span&gt;&lt;span&gt;EmptyFrameAllocator {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;allocate_frame(&lt;/span&gt;&lt;span&gt;&amp;amp;mut &lt;/span&gt;&lt;span&gt;self) -&amp;gt; Option&amp;lt;PhysFrame&amp;gt; {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;None
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We can now test the new mapping function in our &lt;code&gt;main.rs&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[cfg(not(test))]
&lt;/span&gt;&lt;span&gt;#[no_mangle]
&lt;/span&gt;&lt;span&gt;pub extern &lt;/span&gt;&lt;span&gt;&quot;C&quot; &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;_start() -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…] &lt;/span&gt;&lt;span&gt;// initialize GDT, IDT, PICS
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;blog_os::memory::{create_example_mapping, EmptyFrameAllocator};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;const &lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;usize = &lt;/span&gt;&lt;span&gt;0o_177777_777_777_777_777_0000&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let mut&lt;/span&gt;&lt;span&gt; recursive_page_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{ memory::init(&lt;/span&gt;&lt;span&gt;LEVEL_4_TABLE_ADDR&lt;/span&gt;&lt;span&gt;) };
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;create_example_mapping(&lt;/span&gt;&lt;span&gt;&amp;amp;mut&lt;/span&gt;&lt;span&gt; recursive_page_table, &lt;/span&gt;&lt;span&gt;&amp;amp;mut&lt;/span&gt;&lt;span&gt; EmptyFrameAllocator);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;unsafe &lt;/span&gt;&lt;span&gt;{ (&lt;/span&gt;&lt;span&gt;0x1900 &lt;/span&gt;&lt;span&gt;as *mut u64&lt;/span&gt;&lt;span&gt;).write_volatile(&lt;/span&gt;&lt;span&gt;0xf021f077f065f04e&lt;/span&gt;&lt;span&gt;)};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;It did not crash!&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;blog_os::hlt_loop();
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We first create the mapping for the page at &lt;code&gt;0x1000&lt;/code&gt; by calling our &lt;code&gt;create_example_mapping&lt;/code&gt; function with a mutable reference to the &lt;code&gt;RecursivePageTable&lt;/code&gt; instance. This maps the page &lt;code&gt;0x1000&lt;/code&gt; to the VGA text buffer, so we should see any write to it on the screen.&lt;/p&gt;
&lt;p&gt;Then we write the value &lt;code&gt;0xf021f077f065f04e&lt;/code&gt; to this page, which represents the string &lt;em&gt;&quot;New!&quot;&lt;/em&gt; on white background. We don't write directly to the beginning of the page at &lt;code&gt;0x1000&lt;/code&gt; since the top line is directly shifted off the screen by the next &lt;code&gt;println&lt;/code&gt;. Instead, we write to offset &lt;code&gt;0x900&lt;/code&gt;, which is about in the middle of the screen. As we learned &lt;a href=&quot;https://os.phil-opp.com/vga-text-mode/#volatile&quot;&gt;in the &lt;em&gt;“VGA Text Mode”&lt;/em&gt; post&lt;/a&gt;, writes to the VGA buffer should be volatile, so we use the &lt;a href=&quot;https://doc.rust-lang.org/std/primitive.pointer.html#method.write_volatile&quot;&gt;&lt;code&gt;write_volatile&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;When we run it in QEMU, we see the following output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://os.phil-opp.com/advanced-paging/qemu-new-mapping.png&quot; alt=&quot;QEMU printing &amp;quot;It did not crash!&amp;quot; with four completely white cells in the middle of the screen&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;&quot;New!&quot;&lt;/em&gt; on the screen is by our write to &lt;code&gt;0x1900&lt;/code&gt;, which means that we successfully created a new mapping in the page tables.&lt;/p&gt;
&lt;p&gt;This only worked because there was already a level 1 table for mapping page &lt;code&gt;0x1000&lt;/code&gt;. When we try to map a page for that no level 1 table exists yet, the &lt;code&gt;map_to&lt;/code&gt; function fails because it tries to allocate frames from the &lt;code&gt;EmptyFrameAllocator&lt;/code&gt; for creating new page tables. We can see that happen when we try to map page &lt;code&gt;0xdeadbeaf000&lt;/code&gt; instead of &lt;code&gt;0x1000&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;pub fn &lt;/span&gt;&lt;span&gt;create_example_mapping(…) {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…]
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; page: Page &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;Page::containing_address(VirtAddr::new(&lt;/span&gt;&lt;span&gt;0xdeadbeaf000&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…]
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[no_mangle]
&lt;/span&gt;&lt;span&gt;pub extern &lt;/span&gt;&lt;span&gt;&quot;C&quot; &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;_start() -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…]
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;unsafe &lt;/span&gt;&lt;span&gt;{ (&lt;/span&gt;&lt;span&gt;0xdeadbeaf900 &lt;/span&gt;&lt;span&gt;as *mut u64&lt;/span&gt;&lt;span&gt;).write_volatile(&lt;/span&gt;&lt;span&gt;0xf021f077f065f04e&lt;/span&gt;&lt;span&gt;)};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…]
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;When we run it, a panic with the following error message occurs:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;panicked at 'map_to failed: FrameAllocationFailed', /…/result.rs:999:5
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;To map pages that don't have a level 1 page table yet we need to create a proper &lt;code&gt;FrameAllocator&lt;/code&gt;. But how do we know which frames are unused and how much physical memory is available?&lt;/p&gt;
&lt;h3 id=&quot;boot-information&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#boot-information&quot; aria-label=&quot;Anchor link for: boot-information&quot;&gt;🔗&lt;/a&gt; Boot Information&lt;/h3&gt;
&lt;p&gt;The amount of physical memory and the memory regions reserved by devices like the VGA hardware vary between different machines. Only the BIOS or UEFI firmware knows exactly which memory regions can be used by the operating system and which regions are reserved. Both firmware standards provide functions to retrieve the memory map, but they can only be called very early in the boot process. For this reason, the bootloader already queries this and other information from the firmware.&lt;/p&gt;
&lt;p&gt;To communicate this information to our kernel, the bootloader passes a reference to a boot information structure as an argument when calling our &lt;code&gt;_start&lt;/code&gt; function. Right now we don't have this argument declared in our function, so it is ignored. Let's add it:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;bootloader::bootinfo::BootInfo;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[cfg(not(test))]
&lt;/span&gt;&lt;span&gt;#[no_mangle]
&lt;/span&gt;&lt;span&gt;pub extern &lt;/span&gt;&lt;span&gt;&quot;C&quot; &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;_start(boot_info: &lt;/span&gt;&lt;span&gt;&amp;amp;'static&lt;/span&gt;&lt;span&gt; BootInfo) -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{ &lt;/span&gt;&lt;span&gt;// new argument
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…]
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;a href=&quot;https://docs.rs/bootloader/0.3.11/bootloader/bootinfo/struct.BootInfo.html&quot;&gt;&lt;code&gt;BootInfo&lt;/code&gt;&lt;/a&gt; struct is still in an early stage, so expect some breakage when updating to future &lt;a href=&quot;https://doc.rust-lang.org/stable/cargo/reference/specifying-dependencies.html#caret-requirements&quot;&gt;semver-incompatible&lt;/a&gt; bootloader versions. It currently has the three fields &lt;code&gt;p4_table_addr&lt;/code&gt;, &lt;code&gt;memory_map&lt;/code&gt;, and &lt;code&gt;package&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;code&gt;p4_table_addr&lt;/code&gt; field contains the recursive virtual address of the level 4 page table. By using this field we can avoid hardcoding the address &lt;code&gt;0o_177777_777_777_777_777_0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;memory_map&lt;/code&gt; field is most interesting to us since it contains a list of all memory regions and their type (i.e. unused, reserved, or other).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;package&lt;/code&gt; field is an in-progress feature to bundle additional data with the bootloader. The implementation is not finished, so we can ignore this field for now.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Before we use the &lt;code&gt;memory_map&lt;/code&gt; field to create a proper &lt;code&gt;FrameAllocator&lt;/code&gt;, we want to ensure that we can't use a &lt;code&gt;boot_info&lt;/code&gt; argument of the wrong type.&lt;/p&gt;
&lt;h4 id=&quot;the-entry-point-macro&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#the-entry-point-macro&quot; aria-label=&quot;Anchor link for: the-entry-point-macro&quot;&gt;🔗&lt;/a&gt; The &lt;code&gt;entry_point&lt;/code&gt; Macro&lt;/h4&gt;
&lt;p&gt;Since our &lt;code&gt;_start&lt;/code&gt; function is called externally from the bootloader, no checking of our function signature occurs. This means that we could let it take arbitrary arguments without any compilation errors, but it would fail or cause undefined behavior at runtime.&lt;/p&gt;
&lt;p&gt;To make sure that the entry point function has always the correct signature that the bootloader expects, the &lt;code&gt;bootloader&lt;/code&gt; crate provides an &lt;a href=&quot;https://docs.rs/bootloader/0.3.12/bootloader/macro.entry_point.html&quot;&gt;&lt;code&gt;entry_point&lt;/code&gt;&lt;/a&gt; macro that provides a type-checked way to define a Rust function as the entry point. Let's rewrite our entry point function to use this macro:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;bootloader::{bootinfo::BootInfo, entry_point};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;entry_point!(kernel_main);
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[cfg(not(test))]
&lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;kernel_main(boot_info: &lt;/span&gt;&lt;span&gt;&amp;amp;'static&lt;/span&gt;&lt;span&gt; BootInfo) -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…] &lt;/span&gt;&lt;span&gt;// initialize GDT, IDT, PICS
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let mut&lt;/span&gt;&lt;span&gt; recursive_page_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;memory::init(boot_info.p4_table_addr &lt;/span&gt;&lt;span&gt;as usize&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…] &lt;/span&gt;&lt;span&gt;// create and test example mapping
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;It did not crash!&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;blog_os::hlt_loop();
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We no longer need to use &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; or &lt;code&gt;no_mangle&lt;/code&gt; for our entry point, as the macro defines the real lower level &lt;code&gt;_start&lt;/code&gt; entry point for us. The &lt;code&gt;kernel_main&lt;/code&gt; function is now a completely normal Rust function, so we can choose an arbitrary name for it. The important thing is that it is type-checked so that a compilation error occurs when we now try to modify the function signature in any way, for example adding an argument or changing the argument type.&lt;/p&gt;
&lt;p&gt;Note that we now pass &lt;code&gt;boot_info.p4_table_addr&lt;/code&gt; instead of a hardcoded address to our &lt;code&gt;memory::init&lt;/code&gt;. Thus our code continues to work even if a future version of the bootloader chooses a different entry of the level 4 page table for the recursive mapping.&lt;/p&gt;
&lt;h3 id=&quot;allocating-frames&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#allocating-frames&quot; aria-label=&quot;Anchor link for: allocating-frames&quot;&gt;🔗&lt;/a&gt; Allocating Frames&lt;/h3&gt;
&lt;p&gt;Now that we have access to the memory map through the boot information we can create a proper frame allocator on top. We start with a generic skeleton:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;pub struct &lt;/span&gt;&lt;span&gt;BootInfoFrameAllocator&amp;lt;I&amp;gt; where I: Iterator&amp;lt;Item = PhysFrame&amp;gt; {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;frames: I,
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;impl&lt;/span&gt;&lt;span&gt;&amp;lt;I&amp;gt; FrameAllocator&amp;lt;Size4KiB&amp;gt; &lt;/span&gt;&lt;span&gt;for &lt;/span&gt;&lt;span&gt;BootInfoFrameAllocator&amp;lt;I&amp;gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt; I: Iterator&amp;lt;Item = PhysFrame&amp;gt;
&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;allocate_frame(&lt;/span&gt;&lt;span&gt;&amp;amp;mut &lt;/span&gt;&lt;span&gt;self) -&amp;gt; Option&amp;lt;PhysFrame&amp;gt; {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;self.frames.next()
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;frames&lt;/code&gt; field can be initialized with an arbitrary &lt;a href=&quot;https://doc.rust-lang.org/core/iter/trait.Iterator.html&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; of frames. This allows us to just delegate &lt;code&gt;alloc&lt;/code&gt; calls to the &lt;a href=&quot;https://doc.rust-lang.org/core/iter/trait.Iterator.html#tymethod.next&quot;&gt;&lt;code&gt;Iterator::next&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The initialization of the &lt;code&gt;BootInfoFrameAllocator&lt;/code&gt; happens in a new &lt;code&gt;init_frame_allocator&lt;/code&gt; function:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/memory.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;bootloader::bootinfo::{MemoryMap, MemoryRegionType};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;/// Create a FrameAllocator from the passed memory map
&lt;/span&gt;&lt;span&gt;pub fn &lt;/span&gt;&lt;span&gt;init_frame_allocator(
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;memory_map: &lt;/span&gt;&lt;span&gt;&amp;amp;'static&lt;/span&gt;&lt;span&gt; MemoryMap,
&lt;/span&gt;&lt;span&gt;) -&amp;gt; BootInfoFrameAllocator&amp;lt;impl Iterator&amp;lt;Item = PhysFrame&amp;gt;&amp;gt; {
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// get usable regions from memory map
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; regions &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; memory_map
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;.iter()
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;.filter(|r| r.region_type &lt;/span&gt;&lt;span&gt;== &lt;/span&gt;&lt;span&gt;MemoryRegionType::Usable);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// map each region to its address range
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; addr_ranges &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; regions.map(|r| r.range.start_addr()&lt;/span&gt;&lt;span&gt;..&lt;/span&gt;&lt;span&gt;r.range.end_addr());
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// transform to an iterator of frame start addresses
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; frame_addresses &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; addr_ranges.flat_map(|r| r.into_iter().step_by(&lt;/span&gt;&lt;span&gt;4096&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// create `PhysFrame` types from the start addresses
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let&lt;/span&gt;&lt;span&gt; frames &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; frame_addresses.map(|addr| {
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;PhysFrame::containing_address(PhysAddr::new(addr))
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;});
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;BootInfoFrameAllocator { frames }
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;This function uses iterator combinator methods to transform the initial &lt;code&gt;MemoryMap&lt;/code&gt; into an iterator of usable physical frames:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;First, we call the &lt;code&gt;iter&lt;/code&gt; method to convert the memory map to an iterator of &lt;a href=&quot;https://docs.rs/bootloader/0.3.12/bootloader/bootinfo/struct.MemoryRegion.html&quot;&gt;&lt;code&gt;MemoryRegion&lt;/code&gt;&lt;/a&gt;s. Then we use the &lt;a href=&quot;https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; method to skip any reserved or otherwise unavailable regions. The bootloader updates the memory map for all the mappings it creates, so frames that are used by our kernel (code, data or stack) or to store the boot information are already marked as &lt;code&gt;InUse&lt;/code&gt; or similar. Thus we can be sure that &lt;code&gt;Usable&lt;/code&gt; frames are not used somewhere else.&lt;/li&gt;
&lt;li&gt;In the second step, we use the &lt;a href=&quot;https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; combinator and Rust's &lt;a href=&quot;https://doc.rust-lang.org/core/ops/struct.Range.html&quot;&gt;range syntax&lt;/a&gt; to transform our iterator of memory regions to an iterator of address ranges.&lt;/li&gt;
&lt;li&gt;The third step is the most complicated: We convert each range to an iterator through the &lt;code&gt;into_iter&lt;/code&gt; method and then choose every 4096th address using &lt;a href=&quot;https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.step_by&quot;&gt;&lt;code&gt;step_by&lt;/code&gt;&lt;/a&gt;. Since 4096 bytes (= 4 KiB) is the page size, we get the start address of each frame. The bootloader page aligns all usable memory areas so that we don't need any alignment or rounding code here. By using &lt;a href=&quot;https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.flat_map&quot;&gt;&lt;code&gt;flat_map&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;map&lt;/code&gt;, we get an &lt;code&gt;Iterator&amp;lt;Item = u64&amp;gt;&lt;/code&gt; instead of an &lt;code&gt;Iterator&amp;lt;Item = Iterator&amp;lt;Item = u64&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In the final step, we convert the start addresses to &lt;code&gt;PhysFrame&lt;/code&gt; types to construct the desired &lt;code&gt;Iterator&amp;lt;Item = PhysFrame&amp;gt;&lt;/code&gt;. We then use this iterator to create and return a new &lt;code&gt;BootInfoFrameAllocator&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We can now modify our &lt;code&gt;kernel_main&lt;/code&gt; function to pass a &lt;code&gt;BootInfoFrameAllocator&lt;/code&gt; instance instead of an &lt;code&gt;EmptyFrameAllocator&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;// in src/main.rs
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;#[cfg(not(test))]
&lt;/span&gt;&lt;span&gt;fn &lt;/span&gt;&lt;span&gt;kernel_main(boot_info: &lt;/span&gt;&lt;span&gt;&amp;amp;'static&lt;/span&gt;&lt;span&gt; BootInfo) -&amp;gt; &lt;/span&gt;&lt;span&gt;! &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;[…] &lt;/span&gt;&lt;span&gt;// initialize GDT, IDT, PICS
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;use &lt;/span&gt;&lt;span&gt;x86_64::structures::paging::{PageTable, RecursivePageTable};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let mut&lt;/span&gt;&lt;span&gt; recursive_page_table &lt;/span&gt;&lt;span&gt;= unsafe &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;memory::init(boot_info.p4_table_addr &lt;/span&gt;&lt;span&gt;as usize&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;};
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;// new
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;let mut&lt;/span&gt;&lt;span&gt; frame_allocator &lt;/span&gt;&lt;span&gt;= &lt;/span&gt;&lt;span&gt;memory::init_frame_allocator(&lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;boot_info.memory_map);
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;blog_os::memory::create_mapping(&lt;/span&gt;&lt;span&gt;&amp;amp;mut&lt;/span&gt;&lt;span&gt; recursive_page_table, &lt;/span&gt;&lt;span&gt;&amp;amp;mut&lt;/span&gt;&lt;span&gt; frame_allocator);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;unsafe &lt;/span&gt;&lt;span&gt;{ (&lt;/span&gt;&lt;span&gt;0xdeadbeafc00 &lt;/span&gt;&lt;span&gt;as *mut u64&lt;/span&gt;&lt;span&gt;).write_volatile(&lt;/span&gt;&lt;span&gt;0xffffffffffffffff&lt;/span&gt;&lt;span&gt;)};
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;println!(&lt;/span&gt;&lt;span&gt;&quot;It did not crash!&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;blog_os::hlt_loop();
&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now the mapping succeeds and we see the black-on-white &lt;em&gt;&quot;New!&quot;&lt;/em&gt; on the screen again. Behind the scenes, the &lt;code&gt;map_to&lt;/code&gt; method creates the missing page tables in the following way:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Allocate an unused frame from the passed &lt;code&gt;frame_allocator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Map the entry of the higher level table to that frame. Now the frame is accessible through the recursive page table.&lt;/li&gt;
&lt;li&gt;Zero the frame to create a new, empty page table.&lt;/li&gt;
&lt;li&gt;Continue with the next table level.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;While our &lt;code&gt;create_mapping&lt;/code&gt; function is just some example code, we are now able to create new mappings for arbitrary pages. This will be essential for allocating memory or implementing multithreading in future posts.&lt;/p&gt;

&lt;p&gt;In this post we learned how a recursive level 4 table entry can be used to map all page table frames to calculatable virtual addresses. We used this technique to implement an address translation function and to create a new mapping in the page tables.&lt;/p&gt;
&lt;p&gt;We saw that the creation of new mappings requires unused frames for creating new page tables. Such a frame allocator can be implemented on top of the boot information structure that the bootloader passes to our kernel.&lt;/p&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;https://os.phil-opp.com/advanced-paging/#what-s-next&quot; aria-label=&quot;Anchor link for: what-s-next&quot;&gt;🔗&lt;/a&gt; What's next?&lt;/h2&gt;
&lt;p&gt;The next post will create a heap memory region for our kernel, which will allow us to &lt;a href=&quot;https://doc.rust-lang.org/alloc/boxed/struct.Box.html&quot;&gt;allocate memory&lt;/a&gt; and use various &lt;a href=&quot;https://doc.rust-lang.org/alloc/collections/index.html&quot;&gt;collection types&lt;/a&gt;.&lt;/p&gt;


</description>
<pubDate>Mon, 28 Jan 2019 13:04:32 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://os.phil-opp.com/advanced-paging/</dc:identifier>
</item>
<item>
<title>Ask HN: What is an example of a super simple SaaS that is profitable?</title>
<link>https://news.ycombinator.com/item?id=19016569</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=19016569</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;19020646&quot; readability=&quot;8.3900602409639&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.1950301204819&quot;&gt;&lt;tr readability=&quot;8.3900602409639&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.7884036144578&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;19.221183800623&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I essentially resell DNS hosting.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I allow users to store their DNS records in a git repository, then when they make commits &amp;amp; pushes I initiate an update to the live-zones on Amazon Route53.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It'll never make me rich. Low-end users use their domain-registrars. High-end users probably have lots of AWS-based infrastructure, so they can handle DNS themselves.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;But there is a middle-ground, and I've been lucky enough to sell services to a couple of (European) universities. So different departments can handle different sub-domains.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Fun anyway, and although I do need to handle user-support the churn-rate is minimal:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://dns-api.com/&quot; rel=&quot;nofollow&quot;&gt;https://dns-api.com/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19022112&quot; readability=&quot;3.5193798449612&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7596899224806&quot;&gt;&lt;tr readability=&quot;3.5193798449612&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;How did you learn how to create this app? I work best with tutorials or books or videos that go through how to build an entire app. Learning individual components is fine but learning how to integrate them is the tough part.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017585&quot; readability=&quot;5.3694779116466&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018606&quot; readability=&quot;1.3125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018907&quot; readability=&quot;1.3076923076923&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019289&quot; readability=&quot;12.694306930693&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3471534653465&quot;&gt;&lt;tr readability=&quot;12.694306930693&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.7883663366337&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.892676767677&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I realize that might not be what you want to hear, but my advice would be to target a different (larger) MRR. $500/month is not a sustainable or even reasonable business. It's fine to start something &quot;on the side&quot;, but I believe you should immediately set your goals to something that in the long term will be sustainable, unless it's really supposed to be only a hobby/toy.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;If you've never ran a business before, one important bit of advice is that you should assume revenue targets of 2-3x of what you'd like to actually earn in post-tax personal income. Most people underestimate the costs of running a business and forget that they will need to pay for a computer, software, accounting services, and lots of other things.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Depending on where you live, I'd say target $3k-$10k in MRR.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020602&quot; readability=&quot;4.4398340248963&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2199170124481&quot;&gt;&lt;tr readability=&quot;4.4398340248963&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;$500/month will go a long way in many countries out there or for many life styles. Since we don't know who this person is or how/where they live, I wouldn't automatically assume they &lt;em&gt;need&lt;/em&gt; to target a higher MRR.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020733&quot; readability=&quot;12.626666666667&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.3133333333333&quot;&gt;&lt;tr readability=&quot;12.626666666667&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.2271794871795&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;17.905263157895&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I agree with this to this extent: if you have no dependents, no plans to save money for retirement, you own your house or have a free living arrangement, you don't need to travel between cities, you don't maintain a car, then this is absolutely possible in many countries.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I just wanted to point this out for any potential digital nomads out there - yes it's possible, but probably not in most people's cases, although I'd like to hear stories of people who've made it work. Personally I could never make it work with less than $1k/month - but much of that was due to housing costs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Keep in mind though the costs of even bare bones laptop &amp;amp; internet connection business models start becoming significant as a percentage when you operate at revenues this low. Replacing one broken laptop is going to eat more than half your monthly revenue, for example - and laptops/desktops are generally even more expensive when you're not in the US or China.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020805&quot; readability=&quot;3.0825688073394&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021041&quot; readability=&quot;13.623762376238&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8118811881188&quot;&gt;&lt;tr readability=&quot;13.623762376238&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.704384724187&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;20.848046309696&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Ok, reading the responses to my comment, it seems I should have been more explicit.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;1. I do understand that cost of living varies. Still, I will insist that $500/month is too low. Even a single $2000 computer amortized over 24 months is going to eat nearly 1/5 of your revenue. Remember, your housing probably isn't free, you do have to plan for retirement, you do have to go to the dentist from time to time. Many people make unrealistic assumptions here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;2. If you start with $500 as your goal, you will end up reaching $500. You will have something that you have to support and maintain. If you designed it as a $500 dollar business, there is no good way forward, and you are stuck.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021195&quot; readability=&quot;6.5536231884058&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2768115942029&quot;&gt;&lt;tr readability=&quot;6.5536231884058&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.1492753623188&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.8466257668712&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Getting a 2000 computer every 2 years is vast overkill. A 1000$ computer every 4+ years is fine for the vast majority of users and under that if you don’t need a laptop.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;As to 500$ a month, many people live fairly comfortably on that in very low cost of living areas. Also, setting that money aside can add up quickly.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019787&quot; readability=&quot;7.3134328358209&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6567164179104&quot;&gt;&lt;tr readability=&quot;7.3134328358209&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.3992537313433&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.737903225806&quot;&gt;&lt;span class=&quot;commtext cdd&quot;&gt;Downvoted for what should be a very obvious observation.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext cdd&quot;&gt;Start with one $500 / month business. Next month do another $500 / month business.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext cdd&quot;&gt;Rinse, lather, repeat.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext cdd&quot;&gt;After 10 months, it's $5000 / month.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext cdd&quot;&gt;After 36 months it's over $15,000 / month.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019888&quot; readability=&quot;12.554921540656&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.2774607703281&quot;&gt;&lt;tr readability=&quot;12.554921540656&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.7261055634807&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;14.889705882353&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;While I agree with the spirit of this comment, I would suggest that it does not really work like that. There are some aspects of running a business (eg support, maintenance, etc) that do not scale linearly like you propose. Running 3 $500/month businesses is much harder than running a single $1,500/month business.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;In all likelihood, your $500/month business will open a door to a $1,000/month business which will lead you to a $2,000/month business. You have to think of each part as a step on a path. You will never get to the last step if you never take the first small steps.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;To be clear, I am totally in agreement that the important thing is to start wherever you can.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020161&quot; readability=&quot;1.12&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021040&quot; readability=&quot;3.4764397905759&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.738219895288&quot;&gt;&lt;tr readability=&quot;3.4764397905759&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.7801047120419&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.7041420118343&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Now you are running n businesses — tuning just one is tough enough.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;“Hey Bob, we have a customer support ticket for business 65”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;“What does 65 do again?”&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020227&quot; readability=&quot;1.3333333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020400&quot; readability=&quot;1.6119402985075&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017583&quot; readability=&quot;4.6056338028169&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019246&quot; readability=&quot;2.4626865671642&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2313432835821&quot;&gt;&lt;tr readability=&quot;2.4626865671642&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;CrewFire might have a massive audience among political parties. Seriously. You should approach that market.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018838&quot; readability=&quot;4.4470046082949&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2235023041475&quot;&gt;&lt;tr readability=&quot;4.4470046082949&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Just a heads up, clicking the logo in top left corner brings you to a similarly designed page thats about crypto. And is the copy on the book supposed to mention crypto community management?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017688&quot; readability=&quot;1.4520547945205&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019514&quot; readability=&quot;1.0877192982456&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020209&quot; readability=&quot;1.4705882352941&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018644&quot; readability=&quot;2.4967741935484&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2483870967742&quot;&gt;&lt;tr readability=&quot;2.4967741935484&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;SimpleCrew is ingenious. Congrats! Same for ChainFuel. I really like your creativity and how you connected offline and online.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19022312&quot; readability=&quot;7.9072847682119&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.953642384106&quot;&gt;&lt;tr readability=&quot;7.9072847682119&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.5894039735099&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.044705882353&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Probably far from being &quot;super simple&quot;, but I made a bot to automate different tasks in a online game.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Customers can either self-host the software them-self (min $5/month) or pay a higher price (min $10/month) and use my &quot;cloud&quot; service where I host and install the software for them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I use Golang to build everything, caddy for https, Hetzner for hosting, and docker to deploy cloud instances.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.ogame.ninja/&quot; rel=&quot;nofollow&quot;&gt;https://www.ogame.ninja/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017494&quot; readability=&quot;4.8541666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017984&quot; readability=&quot;13.653409090909&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8267045454545&quot;&gt;&lt;tr readability=&quot;13.653409090909&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.922727272727&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;21.493567251462&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I've been pretty impressed with pullreminders.com - it is a Slack bot that alerts you for unreviewed pull requests. Seems to actually solve a real need and since the author, Abi Noda, has been pretty open about talking about it, seems it's been pretty profitable.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;More info:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/product/pull-reminders&quot; rel=&quot;nofollow&quot;&gt;https://www.indiehackers.com/product/pull-reminders&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Friendly reminder that the important components of a successful SaaS is marketing, marketing, marketing, and code, so how to market the app should be considered just as important as how easy it is to code.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'd probably recommend you take whatever your idea is and offer it as a consulting service that you do yourself manually. If people won't buy that, they won't buy your app, and you can prove the idea without doing any coding at all. Once you have an audience for the service, you can just sell the automated version.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019813&quot; readability=&quot;1.9424460431655&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19022032&quot; readability=&quot;3.5694444444444&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7847222222222&quot;&gt;&lt;tr readability=&quot;3.5694444444444&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Hey Abi! It's been really cool to follow Pull Reminders. I've been bringing it up in conversations a lot lately as an example of a solid one-person founder technical SaaS. Hope it continues to succeed! Thanks for all of your in public work on it. Cheers!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017997&quot; readability=&quot;1.8351063829787&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021724&quot; readability=&quot;11.650862068966&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.8254310344828&quot;&gt;&lt;tr readability=&quot;11.650862068966&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;11.165409482759&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;21.878318584071&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'm the creator of Complice and it was indeed made largely by me (I have another collaborator but he joined after it was already making over $3k/mo) but I wouldn't call it simple! Both the software itself and in relation to your comment above that describes how it's not just &quot;how easy is it to build?&quot; but &quot;how easy is it to market?&quot;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;In a world where most people are just looking for a better to-do list, Complice is offering an entirely different philosophy of productivity, so it can be hard to explain it, as opposed to something that just straightforwardly scratches somebody's itch.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I will say that the software plays to my strengths: I'm not a data structures &amp;amp; algorithms guy, or a machine learning guy, or a fanatic about the perfect REST API, and Complice is much more about the workflow and the interface, which is what I'm good at.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;So &quot;super simple&quot; also depends on what you're good at!&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19022021&quot; readability=&quot;5.6164948453608&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8082474226804&quot;&gt;&lt;tr readability=&quot;5.6164948453608&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.1484536082474&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.890590809628&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Hey Malcolm, cool to have you chime in! I've appreciated reading your stuff around the internet and your IndieHackers interview was really cool.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I noticed you have a coaching offering as a higher tier on Complice - have you had much success with finding takers on that? I'm currently working on a coaching practice of my own and have wondered how effective &quot;coaching as the top tier of a SaaS that helps you do the thing I'm coaching you about&quot; works.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017383&quot; readability=&quot;4.1308793456033&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.0654396728016&quot;&gt;&lt;tr readability=&quot;4.1308793456033&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.3701431492843&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.263829787234&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I always thought Patrick McKenzie's Appointment Reminder was a perfect example of something really simple executed very well:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/interview/how-i-grew-my-appointment-reminder-business-to-12k-mo-2b8720ca25&quot; rel=&quot;nofollow&quot;&gt;https://www.indiehackers.com/interview/how-i-grew-my-appoint...&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;And he is an excellent communicator; in particular look up his older podcasts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;But I think today it is getting harder and harder; so simple projects won't cut it anymore and more effort needs to be put into both product development and marketing to get any sort of traction.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017504&quot; readability=&quot;3.6902356902357&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8451178451178&quot;&gt;&lt;tr readability=&quot;3.6902356902357&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6902356902357&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8736462093863&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;em&gt;But I think today it is getting harder and harder; so simple projects won't cut it anymore and more effort needs to be put into both product development and marketing to get any sort of traction.&lt;/em&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'd be willing to bet people have been saying that for at least 5000 years.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020703&quot; readability=&quot;23.645180366647&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;11.822590183323&quot;&gt;&lt;tr readability=&quot;23.645180366647&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;18.719101123596&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;36.889155182744&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I don't doubt it, but it comes to specific spaces a lot of them have been correct.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Appointment Reminder, for example, is now in competition with at least a half-dozen similar products, just from my personal experiences. And many of those integrate reminders with account creation, customer tracking, online bookings/cancellations, and even followup marketing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;That's just one example, and it's not a surprise that small services are followed by larger, integrated ones. There are still good, untapped ideas out there. But it's also true that new technologies create lots of first-mover opportunities and then slowly become less accessible to small providers as the simplest value propositions are consumed. Actually, video games seem like a particularly clear demonstration of the pattern. A solo developer can make a good and successful game, even today. But a successful solo game these days is usually either fun but very shallow (&lt;em&gt;Flappy Bird&lt;/em&gt;) or a niche game that skips many elements (&lt;em&gt;Dwarf Fortress&lt;/em&gt;). Twenty years ago, it was &lt;em&gt;RollerCoaster Tycoon&lt;/em&gt;. On the other hand, solo VR projects are going strong because there are lots of unexplored ideas and a low bar for depth and polish.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I suppose there's a force in the other direction, too; improving tools and services mean that the same number of development hours provide more features to users, or open up new categories of problem. (&lt;em&gt;RollerCoaster Tycoon&lt;/em&gt; was written in assembly, after all.) As PG puts it, the simple tasks no longer require a schlep. But that leverage is open to everyone, and it doesn't seem to break the broad pattern that newer technologies are more accommodating for small-scale projects.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017771&quot; readability=&quot;12.587039390089&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.2935196950445&quot;&gt;&lt;tr readability=&quot;12.587039390089&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.6823379923761&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;18.875816993464&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's only easier if you're entering a greenfield industry, with no saturation. IE. the internet in the late 90's, or the App Store in 2007.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;In any new industry, there's always very low-hanging fruit ideas to pursue. Like restaurant reviews (Yelp) or an app to track your calories (MyFitnessPal). It was also easier to market it because more people had the need for those types of products back then, and thus willing to try it. Now? Nobody will listen to you unless you have a truly compelling, original product (&quot;Oh, that's been done already. I don't want to hear about it&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;And SEO and ranking in Google for competitive keywords was &lt;em&gt;much&lt;/em&gt; easier in the 2000's, even as late as 2008. 2010-2011 was when things started to turn, and became insanely competitive.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019096&quot; readability=&quot;6.4937106918239&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2468553459119&quot;&gt;&lt;tr readability=&quot;6.4937106918239&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.1745283018868&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8657718120805&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;em&gt;And SEO and ranking in Google for competitive keywords was much easier in the 2000's, even as late as 2008. 2010-2011 was when things started to turn, and became insanely competitive.&lt;/em&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;If your approach to marketing is &quot;Google will send me enough traffic to succeed&quot; then you've already failed.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019678&quot; readability=&quot;9.0234375&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.51171875&quot;&gt;&lt;tr readability=&quot;9.0234375&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;When did I say that? Search traffic is a major part of marketing (along with PR, word of mouth, ads) for lots of companies, including public ones (tripadvisor, yelp, zillow, demand media). And to dismiss it is simply delusional.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020939&quot; readability=&quot;7.2307692307692&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6153846153846&quot;&gt;&lt;tr readability=&quot;7.2307692307692&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;But if I have already heard of a business from their marketing, and I can't find them on the first 2 pages of Google, then that marketing spend was wasted. Yes, SEO can't be the entire marketing plan, but it is critically important.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017612&quot; readability=&quot;8.6639004149378&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.3319502074689&quot;&gt;&lt;tr readability=&quot;8.6639004149378&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;10.107883817427&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;19.856938483548&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Perhaps it has been true for the last 5000 years.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Presumably they haven't been talking about the same thing. You could sell software in catalogs for home computers, but that dried up. Then you could make web apps, and that dried up. Then you could make mobile apps and that has dried up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;(*Note: note completely, and I am sure many people know someone who still makes some surprising amount of money with this one weird trick/app)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;When the next platform comes out (VR? Cars?) there will be a software shortage and you will have a few years to code up some stuff. Then the market will demand more elaborate and sophisticated software that will require a team, some investment and a lot of time.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017700&quot; readability=&quot;7.5938189845475&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7969094922737&quot;&gt;&lt;tr readability=&quot;7.5938189845475&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.7461368653422&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.8960739030023&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;em&gt;Presumably they haven't been talking about the same thing. You could sell software in catalogs for home computers, but that dried up. Then you could make web apps, and that dried up. Then you could make mobile apps and that has dried up.&lt;/em&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Exactly this. There's no industry that's &lt;em&gt;always&lt;/em&gt; been easy to get in to, but there's always been &lt;em&gt;something&lt;/em&gt;. It changes as society changes. You just have to work out what it is at the moment.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019105&quot; readability=&quot;8.4932432432432&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2466216216216&quot;&gt;&lt;tr readability=&quot;8.4932432432432&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Heh, all the work in that comment is in the &quot;just&quot; in the last sentence. You can sort of see it as an extension of the efficient markets hypothesis: if there were money lying on the ground, someone would already have picked it up. Alternative formulation: any kind of arbitrage, whether in terms of the stock market or in terms of allocating labor to an underserved need, has to have some kind of search costs to it.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017523&quot; readability=&quot;2.58&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.29&quot;&gt;&lt;tr readability=&quot;2.58&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.87&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.6969696969697&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;You are right.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;And you can say that the tools and resources available to small time online entrepreneurs are better than ever.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017782&quot; readability=&quot;5.7204301075269&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8602150537634&quot;&gt;&lt;tr readability=&quot;5.7204301075269&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.1971326164875&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.88785046729&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;&amp;gt; But I think today it is getting harder and harder; so simple projects won't cut it anymore and more effort needs to be put into both product development and marketing to get any sort of traction.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;There's always going to be problem domains where you can code simple solutions and make money but it's identifying the problem domains that's the hard part.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;By the time you hear multiple people telling you &quot;you can make something simple here and make a ton of money!&quot; about a certain problem domain, you've already missed the boat.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020524&quot; readability=&quot;5.6068376068376&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8034188034188&quot;&gt;&lt;tr readability=&quot;5.6068376068376&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.7378917378917&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8942598187311&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Keep in mind that &quot;super simple&quot; usually also means &quot;easily reproduced&quot;. The dream of cranking out a profitable SaaS offering in a weekend is possible, it's just not sustainable past a year or two unless you also incorporate some differentiation.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's usually the differentiation that makes the SaaS more complex than an MVP.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019612&quot; readability=&quot;5.703557312253&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8517786561265&quot;&gt;&lt;tr readability=&quot;5.703557312253&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.7529644268775&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.9070247933884&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Great suggestions here so far and a common thread I noticed is leveraging platforms such as Slack/Gmail/Trello/Shopify etc. - essentially an B2B platforms. My friend and I currently run cardsync.xyz on Trello which allows Trello users to sync their cards and it generates under $1000/month. We spend about 2-10 hours a week on it.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;You will be at the mercy of these platforms when (not if) they decide to change their rules but until then, it can be a good source of side income.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019746&quot; readability=&quot;5.4152542372881&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7076271186441&quot;&gt;&lt;tr readability=&quot;5.4152542372881&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c5a&quot;&gt;Did you mean to say &quot;just under $1000/month&quot;? It seems kind of strange to claim that you make under an amount, because technically $0/month is under $1000, and &quot;actively losing money&quot; also counts. Just curious.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019915&quot; readability=&quot;1.5744680851064&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019941&quot; readability=&quot;1.7068965517241&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020425&quot; readability=&quot;1.4698795180723&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021406&quot; readability=&quot;3.6197718631179&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8098859315589&quot;&gt;&lt;tr readability=&quot;3.6197718631179&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks. We had a free trial version for about three months and then started paid plans based on customer demographics around last summer. So it's been less than a year. Note that I'm based out of Toronto and my friend in South America.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017037&quot; readability=&quot;2.2019867549669&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018417&quot; readability=&quot;9.001996007984&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.500998003992&quot;&gt;&lt;tr readability=&quot;9.001996007984&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.1017964071856&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;15.902083333333&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I run a saas that is profitable: &lt;a href=&quot;https://PhantomJsCloud.com&quot; rel=&quot;nofollow&quot;&gt;https://PhantomJsCloud.com&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's a pretty simple concept: providing PhantomJs or Chrome Headless as a REST API.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;The thing is, the SaaS itself is only about 1/3 the work. You need a website, account management, and billing too. Today, there are perhaps other services you could leverage that can help reduce this initial burden (Kong?) but a few years ago when I started my SaaS, nothing really met my needs. Hope it's easier for everyone now!&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021570&quot; readability=&quot;4.3877551020408&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1938775510204&quot;&gt;&lt;tr readability=&quot;4.3877551020408&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Woah, that's really cool. I've been meaning to run my own headless browser in the cloud for personal scraping tasks and such, and may now sign up for your free tier. :-)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019446&quot; readability=&quot;1.125&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021957&quot; readability=&quot;3.3720930232558&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6860465116279&quot;&gt;&lt;tr readability=&quot;3.3720930232558&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;sub 10k MRR. I need to expand the offering, and there's actually a lot of competitors in this space. My USP is low cost and high scaleability.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018106&quot; readability=&quot;3.5573122529644&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7786561264822&quot;&gt;&lt;tr readability=&quot;3.5573122529644&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Fomo.com is doing a few million and is owned/operated by 1 individual (although he has a small team). Believe he acquired it and grew it like crazy. I’d reckon (if he chose) the company could do a 100k a month in profit.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018189&quot; readability=&quot;4.4212962962963&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2106481481481&quot;&gt;&lt;tr readability=&quot;4.4212962962963&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This is an example of a product that probably does something cool, but really doesn't do a good job of explaining what it does or why I would use it on the front page. But it looks pretty.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019581&quot; readability=&quot;7.5617792421746&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020466&quot; readability=&quot;12.366197183099&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.1830985915493&quot;&gt;&lt;tr readability=&quot;12.366197183099&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.5124593716143&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;18.472807991121&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Second one seems to come closest for me. I prefer something clear like &quot;see that notification at the bottom left corner of the page? We do that&quot;. But I get it; you're selling why someone should use the product (a bit abstractly, perhaps). As a tech product though, don't forget to highlight the actual product(s) and to be specific.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;The &quot;Install Fomo in 29 Seconds&quot; section from the first iteration makes me feel confident, as a developer, that there's a clear path to get your product working for me and it won't be a pita. A documentation link at the top, rather than hidden at the bottom, would be nice - see how Facebook presents their tech offerings (granted, open source) at &lt;a href=&quot;https://reactjs.org/&quot; rel=&quot;nofollow&quot;&gt;https://reactjs.org/&lt;/a&gt; etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'm just one guy who makes decisions about what techs to use for myself and others though, so yada yada grain of salt. Maybe I'm not who you're targeting as much as salespeople themselves.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018333&quot; readability=&quot;3.54&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.77&quot;&gt;&lt;tr readability=&quot;3.54&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;You know those annoying notifications that usually say something like &quot;Dawn in Idaho bought a 3 pack or gorilla stickers just now&quot; on e-commerce sites? That's what fomo does.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018323&quot; readability=&quot;3.9855072463768&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018432&quot; readability=&quot;5.3159420289855&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019603&quot; readability=&quot;9.6857142857143&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.8428571428571&quot;&gt;&lt;tr readability=&quot;9.6857142857143&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.0441558441558&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.925619834711&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;hey, the 11k figure is active websites. you can verify all this via our Open API: &lt;a href=&quot;https://fomo.com/open&quot; rel=&quot;nofollow&quot;&gt;https://fomo.com/open&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;since a customer can have unlimited websites per plan, we actually have around 5,500-6,000 customers. many will add a personal site and a company site, or an ecommerce store and a blog.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;yes, older customers have plans as low as $8-12 /month. good times.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021018&quot; readability=&quot;3.3888888888889&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6944444444444&quot;&gt;&lt;tr readability=&quot;3.3888888888889&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;How did you get started with this, i.e. how did you get your first customers? Looks like a really interesting business.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018246&quot; readability=&quot;2.504132231405&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2520661157025&quot;&gt;&lt;tr readability=&quot;2.504132231405&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I've been looking at their site for about 5 minutes and I still have no idea what fomo.com does...&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018918&quot; readability=&quot;1.1714285714286&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019279&quot; readability=&quot;8.596261682243&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2981308411215&quot;&gt;&lt;tr readability=&quot;8.596261682243&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.7757009345794&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.9124513618677&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;They &quot;automate&quot; social proof. That is, when someone buys something on your site, or performs a specific action (such as sign-up for a newsletter), FOMO will show a little pop-up in the left corner stating so (&quot;XYZ from ABC just bought 2 widgets&quot;). The idea is that knowing something is popular will make others more likely to buy it.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I reckon they could do a better job of conveying this, but I work in marketing and I understood it immediately. So I imagine their target audience understands it well enough.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019495&quot; readability=&quot;7.4468085106383&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7234042553191&quot;&gt;&lt;tr readability=&quot;7.4468085106383&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;That is &lt;em&gt;so weird&lt;/em&gt; to me. Does that actually work on people? I see it now that you point it out, the popups in the lower left, but before I had been automatically mentally dismissing it as just annoying sales bullshit, like any other popup ad. There's statistical evidence that sales are actually influenced by that kind of nonsense? That amazes me.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021328&quot; readability=&quot;8.670906200318&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.335453100159&quot;&gt;&lt;tr readability=&quot;8.670906200318&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.2623211446741&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.901477832512&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;There's sort of 2 types of social proof. Fear of missing out and testimonial. My favorite examples of social proof (not fomo.com) are hotels.com and opentable.com. When looking at a hotel: &quot;15 people have booked this hotel today,&quot; or while making a dinner reservation: &quot;23 people have reserved a table at this restaurant today.&quot;&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;In these cases, you're being pressured to act fast before the hotel/restaurant is fully booked. Further, this &quot;proof&quot; that people are making all these reservations &lt;em&gt;right now&lt;/em&gt; also could make you believe your choice is a popular recommendation, persuaded your decision making.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019626&quot; readability=&quot;0.092307692307692&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020271&quot; readability=&quot;11.371179039301&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.6855895196507&quot;&gt;&lt;tr readability=&quot;11.371179039301&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;200&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.528384279476&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;16.805491990847&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;FOMO means Fear of Missing Out.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;So, say you're interested in a certain smaller brand that may not sell thousands or more copies of certain items, but something on the order of 50, or 100, etc.., then when you see that others have been purchasing said items you worry you'll miss out on your chance to buy one, and then you'll be one of the only people who like the brand who don't have said item.. thus, you wind up purchasing too.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020274&quot; readability=&quot;1.4358974358974&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018290&quot; readability=&quot;3.4866310160428&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7433155080214&quot;&gt;&lt;tr readability=&quot;3.4866310160428&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c88&quot;&gt;It says 'marketing' right on the front page, right next some unique drawings which indicate the kinds of things they can create. It took me less than 5 seconds.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019016&quot; readability=&quot;2.5430463576159&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2715231788079&quot;&gt;&lt;tr readability=&quot;2.5430463576159&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I always thought that a lot of those &quot;Fred just purchased T-Shirt X&quot; pop-ups when you are on a site are all fake data anyway.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019618&quot; readability=&quot;5.014598540146&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.507299270073&quot;&gt;&lt;tr readability=&quot;5.014598540146&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.5967153284672&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.0079365079365&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;many of our competitors do allow customers to plug in fake data, it's sad + illegal + gives the space a bad rep. sigh.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;this is why we aggressively build native integrations, sometimes 1 per week. deters bad actors.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;changelog: &lt;a href=&quot;https://new.fomo.com&quot; rel=&quot;nofollow&quot;&gt;https://new.fomo.com&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020015&quot; readability=&quot;3.4696132596685&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7348066298343&quot;&gt;&lt;tr readability=&quot;3.4696132596685&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Maybe they are. I know of one site that had a premade array of &quot;X bought Y&quot; in the source HTML, which I imagine they repopulate after some amount of time.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019710&quot; readability=&quot;1.2790697674419&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021134&quot; readability=&quot;1.16&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020530&quot; readability=&quot;3.3878504672897&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018691&quot; readability=&quot;0.97435897435897&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017828&quot; readability=&quot;11.116347569956&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.5581737849779&quot;&gt;&lt;tr readability=&quot;11.116347569956&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;9.2636229749632&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;18.16006097561&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'm doing well with Checkbot, a Chrome extension that tests websites for SEO, speed and security problems that has a subscription model:&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.checkbot.io/&quot; rel=&quot;nofollow&quot;&gt;https://www.checkbot.io/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's simple in terms of day to day running now that it works well but getting to that stage and the implementation behind it was a ton of work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I don't think you're going to easily find a project that's easy to implement, requires little maintenance, has low running costs, markets itself, scales etc. You'll have to put in effort somewhere.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I think if you look into the projects being posted in the thread, you'll realise few are simple if you want to make something people will pay for.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018371&quot; readability=&quot;3.3698630136986&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6849315068493&quot;&gt;&lt;tr readability=&quot;3.3698630136986&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I came across this a few months ago - this is a perfect example of how to execute, great job. How's your revenue growth?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018435&quot; readability=&quot;4.5886075949367&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2943037974684&quot;&gt;&lt;tr readability=&quot;4.5886075949367&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.129746835443&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8634812286689&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks! Growing but slowly. I need to make more progress on the marketing side now as I don't think much on the coding side will change this.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I think the story is similar with simpler products too. Getting the word out and optimising your sales funnel takes much longer than you'd think.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018211&quot; readability=&quot;5.625&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8125&quot;&gt;&lt;tr readability=&quot;5.625&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I've built a petition system that allow users to publish their own petitions and download signatures lists. Got a handful of loyal customers acquired threw relations. MRR is ~500€ since +10 years. Won't give the url here because it's running on a ultra cheap dedicated server at 5€/m, HN would blow it down in one minute :)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018305&quot; readability=&quot;4.2513368983957&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1256684491979&quot;&gt;&lt;tr readability=&quot;4.2513368983957&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.2513368983957&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.7222222222222&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Ha, this is a good one.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&quot;Publish their own petitions&quot; - can you give an example? Share more details, without giving your URL or any other secret sauce away?&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018566&quot; readability=&quot;5.4080717488789&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7040358744395&quot;&gt;&lt;tr readability=&quot;5.4080717488789&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Sure, the typical customer is this semi-professional non-profit organization that need something more &quot;result driven&quot; than change.org when it comes to build its audience (nothing black hat, really).&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018929&quot; readability=&quot;2.6470588235294&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.3235294117647&quot;&gt;&lt;tr readability=&quot;2.6470588235294&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.5294117647059&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.7916666666667&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I guess I am missing something. Why should I use your service than change.org?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'm sure you know your audience very well - it is just that I am missing something.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019062&quot; readability=&quot;4.3081761006289&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1540880503145&quot;&gt;&lt;tr readability=&quot;4.3081761006289&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;160&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Two things: build the form and collect the data. Now that I think about it, it's a &quot;surveymonkey&quot; disguised in &quot;change.org&quot;, actually.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018963&quot; readability=&quot;1.4347826086957&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019009&quot; readability=&quot;0.64583333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019006&quot; readability=&quot;0.12244897959184&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018304&quot; readability=&quot;1.0204081632653&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017588&quot; readability=&quot;4.1030534351145&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.0515267175573&quot;&gt;&lt;tr readability=&quot;4.1030534351145&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.2824427480916&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.1867219917012&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I can’t speak for the simplicity, but by all accounts the backend of this system is (it was at some point) a single ec2 instance and is a single person project.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Granted that person is cpercival but whatever :)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.tarsnap.com&quot; rel=&quot;nofollow&quot;&gt;https://www.tarsnap.com&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017623&quot; readability=&quot;2.6666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017856&quot; readability=&quot;3.5116279069767&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7558139534884&quot;&gt;&lt;tr readability=&quot;3.5116279069767&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;That thread was a nice little rabbit hole in the morning, thanks. There's also an appearance by Drew Houston with early mention of dropbox in there.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019522&quot; readability=&quot;2.5384615384615&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2692307692308&quot;&gt;&lt;tr readability=&quot;2.5384615384615&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Is cpercival supposed to be a name people recognize? I just googled it and didn't find any substantial identifying information. Who is that?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019594&quot; readability=&quot;1.1157024793388&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018229&quot; readability=&quot;2.175&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019716&quot; readability=&quot;9.3019726858877&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.6509863429439&quot;&gt;&lt;tr readability=&quot;9.3019726858877&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.9764795144158&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;13.407523510972&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'm not sure if I'd call it simple, but the product itself is fairly straightforward (at least to me :). I run a SaaS product called browserless (&lt;a href=&quot;https://browserless.io&quot; rel=&quot;nofollow&quot;&gt;https://browserless.io&lt;/a&gt;). Goal here was to make it really simple to run headless browser work in a production environment, without worrying about all the provisioning and maintenance.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;However, like anything simple on the exterior, there's still layers of complexity behind it. How do you charge users? Where do you host? How do you acquire users? How do you interact with customers?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Don't mean to be cynical, but even $500/mo is going to have some cost and time complexity. Best of luck!&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021539&quot; readability=&quot;8.5741324921136&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2870662460568&quot;&gt;&lt;tr readability=&quot;8.5741324921136&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.0977917981073&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;15.552688172043&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Not a simple SaaS but my brother (personal finance blogger), best friend (journalist) and I (engineer - P.Eng Ontario, Canada) just started a copywriting subscription for fintechs in Canada.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Please note that we had worked with a few fintechs for about a year on a service basis and made a pivot to a subscription service just last week. This resulted in most of our existing fintech clients coming on board right away after we emailed them even though the website (&lt;a href=&quot;https://moosecopy.com&quot; rel=&quot;nofollow&quot;&gt;https://moosecopy.com&lt;/a&gt;) is still under construction i.e. no writing samples on it yet. Our mixed background provides an excellent value for our clients and we have been fortunate to work with some great clients as well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Lastly, as a few people have suggested wisely, it's a good idea to offer a service initially and then look towards building a product out of it (similar to Paul Graham's idea of doing things that don't scale during early development stage).&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018484&quot; readability=&quot;2.803738317757&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019605&quot; readability=&quot;7.7082066869301&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.854103343465&quot;&gt;&lt;tr readability=&quot;7.7082066869301&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.7811550151976&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.913657770801&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I have a Shopify app that generates a little under $1K a month. I feel like if I put some dedicated effort into it, I could probably double that. Right now, I probably spend about 4 hours a week max on support.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I would discount all the people who say it cannot be done. There is a ton of opportunity out there if you are willing to do your research, take sensible risks and do the hard work to build and launch stuff. The trick (at least for me) is transitioning from the side-project to the fully self sustaining stage. There is a messy middle where the investment required (in terms of time and money) imposes a much higher risk.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019631&quot; readability=&quot;1.2647058823529&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019715&quot; readability=&quot;4.7266514806378&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3633257403189&quot;&gt;&lt;tr readability=&quot;4.7266514806378&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.253986332574&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.9043062200957&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I went through the Shopify app store to find app categories with lots of negative reviews. This suggested to me that there was unmet demand. I then reached out to some shop owners to ask what they needed and used the insights from those conversations to design a better solution than the competition.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It is a pretty simple straightforward approach but just takes time and discipline to grind through the process.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018973&quot; readability=&quot;14.594594594595&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;7.2972972972973&quot;&gt;&lt;tr readability=&quot;14.594594594595&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.108108108108&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;27.838523644752&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Fill a niche that is difficult to solve for, but easy to scale once you do. Fix a problem that you've had.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;In the end, there are a lot of opportunities for SaaS, imho the DBaaS are the main reason to consider a cloud provider. Getting setup, failover, backups, hot recovery etc are middling to difficult even with dedicated resources, but tend to have solutions that scale well once you do.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Not suggesting that as something to do, the bigger cloud providers are likely to edge you out eventually.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It could be as simple as a better whois lookup service that is fast and deployed to multiple regions on the major cloud services. Whois in particular is difficult because the resolvers for some of the less big TLDs aren't as responsive, there's inconsistencies in standards and normalization takes work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Again, it's a matter of figuring out a niche and filling it.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021263&quot; readability=&quot;7.6014234875445&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8007117437722&quot;&gt;&lt;tr readability=&quot;7.6014234875445&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.1761565836299&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.888268156425&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;At the really low MMR end, you're not even looking for something that is difficult to solve for but something that has an attractive ratio of easy for technical person to solve / annoying but important for others.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's easy to read about a lot of the things in this thread and think, &quot;I could easily hack that together in a weekend learning a new technology, why would I pay for it?&quot;. There's plenty of people for whom automating a simple repetitive task is both valuable and basically magic and there are so many niches to be had.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019057&quot; readability=&quot;6.4013157894737&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2006578947368&quot;&gt;&lt;tr readability=&quot;6.4013157894737&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;quite a few SaaS products I've used -- they set out to make application A, ran into a problem building application A (like &quot;wow looking at these logs is difficult, let's build a quick tool that solves this problem&quot;) and the solution they built became their real SaaS product.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021351&quot; readability=&quot;3.5656108597285&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7828054298643&quot;&gt;&lt;tr readability=&quot;3.5656108597285&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Absolutely... which is usually my point when I say build something that solves a problem you have/had. It's often the best opportunities for either an open-source contribution or a SaaS product.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017344&quot; readability=&quot;2.7164179104478&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017390&quot; readability=&quot;2.7323943661972&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018220&quot; readability=&quot;1.4897959183673&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018689&quot; readability=&quot;2.6466165413534&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021561&quot; readability=&quot;3.5098039215686&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7549019607843&quot;&gt;&lt;tr readability=&quot;3.5098039215686&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;You could try buying an existing very small SAAS which you know you can grow and build into something bigger. Then either keep it running or sell it on again at a higher value.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018334&quot; readability=&quot;2.5230769230769&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019641&quot; readability=&quot;2.4692307692308&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2346153846154&quot;&gt;&lt;tr readability=&quot;2.4692307692308&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Is there a consolidated list of alliances/carriers that you support? I couldn't see anything on the site&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019119&quot; readability=&quot;0.31578947368421&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020656&quot; readability=&quot;5.4545454545455&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7272727272727&quot;&gt;&lt;tr readability=&quot;5.4545454545455&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.7757847533632&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Aftership looks like a fairly straightforward SAAS offering that could use a competitor.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It does deliver value, and I'm sure there's more to it than you might see at first. But, it does seem a simpler space than many.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020929&quot; readability=&quot;2.58&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.29&quot;&gt;&lt;tr readability=&quot;2.58&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;ahh.. supporting 400 different providers is a full-time and fairly painful job. Anyways their space is pretty crowded as well.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020959&quot; readability=&quot;1.3972602739726&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019263&quot; readability=&quot;4.6842105263158&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3421052631579&quot;&gt;&lt;tr readability=&quot;4.6842105263158&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.2157894736842&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8885793871866&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;There is no single &quot;To Do&quot; application that meets the needs of all of the users since everyone thinks differently. Find a niche that the others haven't really addressed yet and build your application in that space.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;The same applies for email clients or calendar applications. Basically anything that orients around organizing information and priorities.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017579&quot; readability=&quot;4.3404255319149&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021002&quot; readability=&quot;3.5770925110132&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7885462555066&quot;&gt;&lt;tr readability=&quot;3.5770925110132&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;droplr &amp;amp; Cloudapp both come to mind ... essentially branded filesharing/url shorteners but I'd love to see either of them support adding custom favicons or otherwise completely removing their branding&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018255&quot; readability=&quot;0.59459459459459&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018293&quot; readability=&quot;7.3929539295393&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6964769647696&quot;&gt;&lt;tr readability=&quot;7.3929539295393&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.0067750677507&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.825581395349&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This is not simple at all! There are hundreds of corner cases to code for, you need a swarm of machines to crawl etc.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;When he started more than a decade ago, there was zero competition and it was a novel idea. Now there is stiff competition.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;This is far from simple - this is actually a very serious project, not an example of 500$ stuff!&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019384&quot; readability=&quot;4.4820717131474&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2410358565737&quot;&gt;&lt;tr readability=&quot;4.4820717131474&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;The idea is quite simple - crawl websites and figure out what makes them tick. Of course you're not going to enter the exact same market. No one is obligated to find a competition-free, low-hanging niche for you to occupy.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018770&quot; readability=&quot;4.8349514563107&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.4174757281553&quot;&gt;&lt;tr readability=&quot;4.8349514563107&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I run &lt;a href=&quot;https://equinox.io&quot; rel=&quot;nofollow&quot;&gt;https://equinox.io&lt;/a&gt;, a service for distributing and updating Go applications. I’m not sure if it falls into the “simple” category, but the product targets a small market.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19022279&quot; readability=&quot;4.228855721393&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1144278606965&quot;&gt;&lt;tr readability=&quot;4.228855721393&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;How did you learn to make all this? I haven't been taught anything like this in my CS program. What resources did you use? Books, videos etc. are very helpful. Thanks!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019620&quot; readability=&quot;1.6857142857143&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019217&quot; readability=&quot;5.7226277372263&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8613138686131&quot;&gt;&lt;tr readability=&quot;5.7226277372263&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I think a great place to start is places where there's a marketplace, like Shopify, BigCommerce, Github, etc.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018388&quot; readability=&quot;0.75675675675676&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019092&quot; readability=&quot;2.4716981132075&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2358490566038&quot;&gt;&lt;tr readability=&quot;2.4716981132075&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;park.io is making $120K per month using an automated set of scripts that catch up pendingDelete domains from various registries.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019537&quot; readability=&quot;2.3217391304348&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020484&quot; readability=&quot;5.6545105566219&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8272552783109&quot;&gt;&lt;tr readability=&quot;5.6545105566219&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.5969289827255&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.868421052632&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I've used them more than once and am very happy with their service.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Squatters do this kind of thing already, but they demand an exorbitant price or have some kind of opaque bidding process. Park.io at least introduces some consistency and trust in this process.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'd much rather pay a small premium ($99 for the domain vs however much a particular registrar charges) to avoid that hassle and still get a great name I would never have gotten otherwise by scanning for pendingDelete domains.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020094&quot; readability=&quot;0.92307692307692&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017936&quot; readability=&quot;5.9488054607509&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.9744027303754&quot;&gt;&lt;tr readability=&quot;5.9488054607509&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://certsimple.com&quot; rel=&quot;nofollow&quot;&gt;https://certsimple.com&lt;/a&gt; - faster, easier verification for websites, so they can prove they're run by a specific company (with an EV SSL cert). It's essentially a UI and a bunch of APIs that connect to different data sources to pre-check info, then pass that on to a CA.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020006&quot; readability=&quot;2.3709677419355&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19021407&quot; readability=&quot;6.2487804878049&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.1243902439024&quot;&gt;&lt;tr readability=&quot;6.2487804878049&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Ha, thankyou, but we’re definitely in the middle of the market. If your main thing is price you can find cheaper companies, our main thing is reducing verication time and hassle.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017529&quot; readability=&quot;3.9430894308943&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018314&quot; readability=&quot;0.91304347826087&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19016681&quot; readability=&quot;2.3661971830986&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19016605&quot; readability=&quot;0.96774193548387&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017198&quot; readability=&quot;0.067415730337079&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019451&quot; readability=&quot;0.75675675675676&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017526&quot; readability=&quot;6.409375&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2046875&quot;&gt;&lt;tr readability=&quot;6.409375&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.9515625&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.797297297297&quot;&gt;&lt;span class=&quot;commtext cdd&quot;&gt;A simple SaaS that gushes profits is so improbable that you might as well call it impossible.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext cdd&quot;&gt;If you want passive income, write code for pay and invest some of the surplus.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext cdd&quot;&gt;If you want to do a startup, find a cofounder and apply to YCombinator. Or find another path to working at a startup.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017830&quot; readability=&quot;11.414634146341&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.7073170731707&quot;&gt;&lt;tr readability=&quot;11.414634146341&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.7560975609756&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.9117647058824&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I disagree - I wrote a simple tool for my family a number of years back, left it on my personal website in a way that was usable by the general public, and ignored it. Came back a couple years later, saw it was getting tens of thousands of uses a month, added some relevant amazon affiliate links, and hit that $500 a month mark. I let it run for a couple years like that, then sold it.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;So if I can hit the mark accidentally off a weekend project, it certainly is achievable if you put serious effort in.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018112&quot; readability=&quot;2.377358490566&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019970&quot; readability=&quot;2.3809523809524&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017573&quot; readability=&quot;5.5764705882353&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7882352941176&quot;&gt;&lt;tr readability=&quot;5.5764705882353&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.5764705882353&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.827586206897&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This is (extremely) untrue in my experience and those of countless other boostrapped SaaS founder friends in my circle.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I've started 2 simple SaaS products that are solidly profitable (simplecrew.com and crewfire.com), and a 3rd just shipped this week (chainfuel.com).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;The internet is full of other counterpoints.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017776&quot; readability=&quot;4.6197183098592&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.3098591549296&quot;&gt;&lt;tr readability=&quot;4.6197183098592&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6957746478873&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8942598187311&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Here's an exercise that would be interesting. Look at all the 'Show HN' posts announcing new startups from a couple of years ago. Find how many are still operating. Then contact the creators to see if the revenues produced have paid for the hours invested.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Then we would have some real data instead of my anecdote. And yours.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018968&quot; readability=&quot;10.608695652174&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.304347826087&quot;&gt;&lt;tr readability=&quot;10.608695652174&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.197628458498&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;15.891156462585&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I have a simple SaaS product that plans emergency shifts for dentists (evenings and weekends). The value is in 1) fair planning, 2) a single source of truth on who is on call, and 3) reminders. It makes $300 a month with minimal cost and almost no time spent. Since it is B2B I only have to send invoices once a year.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Anecdata of course, but it has been like this (and profitable) for the last 7 years. At least proofs it is not impossible (I also never really invested lots of time in it to get to this state)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I think i can bring it to 30k a year with sufficient effort, but then again, my salary is higher than that so it doesn’t make enough sense to switch my time to do so. (The growth problem of course is sales, not tech)&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19020221&quot; readability=&quot;1.475&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19018708&quot; readability=&quot;1.3033707865169&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19017750&quot; readability=&quot;0.93396226415094&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19019238&quot; readability=&quot;5.4&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7&quot;&gt;&lt;tr readability=&quot;5.4&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Aside from the fact that there's a ton of evidence that proves you wrong (but there is truth that a lot of SaaS founders never make a penny), OP was asking about starting at $500/month, which is far from &quot;gushing profits&quot;.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Mon, 28 Jan 2019 11:16:02 +0000</pubDate>
<dc:creator>justaguyhere</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=19016569</dc:identifier>
</item>
<item>
<title>C++ Modules Might Be Dead-On-Arrival</title>
<link>https://vector-of-bool.github.io/2019/01/27/modules-doa.html</link>
<guid isPermaLink="true" >https://vector-of-bool.github.io/2019/01/27/modules-doa.html</guid>
<description>&lt;p&gt;C++ modules are slated to be the biggest change in C++ since its inception. The design of modules has several essential goals in mind:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Top-down isolation&lt;/strong&gt; - The “importer” of a module cannot affect the content of the module being imported. The state of the compiler (preprocessor) in the importing source has no bearing on the processing of the imported code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bottom-up isolation&lt;/strong&gt; - The content of a module does not affect the state of the preprocessor in the importing code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lateral isolation&lt;/strong&gt; - If two modules are imported by the same file, there is no “cross-talk” between them. The ordering of the import statements is insignificant.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Physical encapsulation&lt;/strong&gt; - Only entities which are explicitly declared as exported by a module will be visible to consumers. Non-exported entities within a module will not affect name lookup in other modules (barring some possible strangeness with ADL. Long story…)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modular interfaces&lt;/strong&gt; - The current module design enforces that for any given module, the entire public interface of that module is declared in a single TU called the “module-interface unit” (MIU). The implementation of subsets of the module interface may be defined in different TUs called “partitions.”&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;If you’ve been hoping for modules for as long as many have, you’ll note that “compilation speed” is missing from this list. Nevertheless, this is one of the biggest promises of modules. The possible speedup from modules is merely a consequence of the above design aspects.&lt;/p&gt;
&lt;p&gt;This author can identify several aspects of C++ compilation that can greatly benefit from the design of modules. In order of most-to-least-obvious:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Tokenization caching&lt;/strong&gt; - Because of TU isolation, tokenizing a TU can be cached when the module is later imported into another TU.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parse-tree caching&lt;/strong&gt; - Same as above. Tokenization and parsing are some of the most expensive operations in compiling C++. In my own tests, parsing can consume up to 30% of compilation time for files with a large preprocessed output.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lazy re-generation&lt;/strong&gt; - If &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; imports &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;, and we later make changes to the &lt;em&gt;implementation&lt;/em&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;, we may be able to omit recompilation of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;. Only changes to &lt;em&gt;the interface&lt;/em&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; necessitate recompilation of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Template specialization memoization&lt;/strong&gt; - This one is a bit more subtle and may take more work to implement, but the potential speedups are &lt;em&gt;enormous&lt;/em&gt;. In short: A specialization of a class or function template appearing in the module interface unit can be cached and loaded from disk later.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inline function codegen caching&lt;/strong&gt; - Codegen results for inline functions (including function templates and member functions of class templates) can be cached and later re-loaded by the compiler backend.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inline function codegen elision&lt;/strong&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;extern template&lt;/code&gt; allows the compiler to omit performing codegen for function and class templates. This is hugely beneficial for the &lt;em&gt;linker&lt;/em&gt; when it performs de-dup. Modules may allow the compiler to perform more &lt;code class=&quot;highlighter-rouge&quot;&gt;extern template&lt;/code&gt;-style optimizations implicitly.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;All in all, it’s looking pretty good, yeah?&lt;/p&gt;
&lt;p&gt;But there’s something missing. A horrible, terrible, no-good, very bad flaw.&lt;/p&gt;

&lt;p&gt;Fortran implemented a module system that bears a slight resemblance to the design proposed for C++. A few short months ago, a paper &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1300r0.pdf&quot;&gt;p1300&lt;/a&gt; was written by the SG15 group for review in San Diego. As far as I can tell, the paper was not discussed nor reviewed by any relevant eyes.&lt;/p&gt;
&lt;p&gt;The gist of it is this:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We have module &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; and module &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;, defined by &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.cpp&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt; respectively.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt; has an &lt;code class=&quot;highlighter-rouge&quot;&gt;import foo;&lt;/code&gt; statement.&lt;/li&gt;
&lt;li&gt;How do we make sure that &lt;code class=&quot;highlighter-rouge&quot;&gt;import foo&lt;/code&gt; will resolve when compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt;? The current design and implementations require there to exist what is known as the “binary module interface” (abbreviated as BMI) defined for &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;. The BMI is a file on the filesystem that describes the exported interface of the module &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;. I’ll call that BMI &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.bmi&lt;/code&gt; for now. The extension isn’t important.&lt;/li&gt;
&lt;li&gt;Creation of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.bmi&lt;/code&gt; is a byproduct of the compilation of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.cpp&lt;/code&gt;. When compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.cpp&lt;/code&gt;, the compiler will emit a &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.o&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.bmi&lt;/code&gt;. As a consequence of this design, &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.cpp&lt;/code&gt; &lt;strong&gt;must&lt;/strong&gt; be compiled &lt;em&gt;before&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt;!&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;If alarm bells aren’t ringing already, let me discuss the way we currently work using header files:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We have a “module” &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; defined by &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.cpp&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.hpp&lt;/code&gt;, and a “module” &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; defined by &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.hpp&lt;/code&gt;. Easy to understand.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt; contains an &lt;code class=&quot;highlighter-rouge&quot;&gt;#include &amp;lt;foo.hpp&amp;gt;&lt;/code&gt; preprocessor statement.&lt;/li&gt;
&lt;li&gt;How do we make sure that &lt;code class=&quot;highlighter-rouge&quot;&gt;#include &amp;lt;foo.hpp&amp;gt;&lt;/code&gt; resolves when compiling &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.cpp&lt;/code&gt;? It’s simple: Make sure &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.hpp&lt;/code&gt; is present in a directory on the header search path list. We do not need to do any additional pre-processing.&lt;/li&gt;
&lt;li&gt;There is no ordering requirement between the compilation of the “modules” &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;. They can be processed in parallel.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Parallelization is probably the single most important aspect of increasing build performance. At this point, it isn’t even something you think about when you are optimizing your build because &lt;em&gt;it is already there&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Modules change that. The importing of a module creates a “happens-before” dependency where &lt;code class=&quot;highlighter-rouge&quot;&gt;#include&lt;/code&gt; did not. (I discuss this ordering in my &lt;a href=&quot;https://vector-of-bool.github.io/2018/12/20/build-like-ninja-1.html&quot;&gt;Building Like (a) Ninja post&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The consequences of this design were explored very recently by Rene Rivera in &lt;a href=&quot;https://bfgroup.github.io/cpp_tooling_stats/modules/modules_perf_D1441R1.html&quot;&gt;&lt;em&gt;Are modules fast?&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Spoiler alert: No. Or, more accurately: It’s subtle, but mostly &lt;em&gt;no&lt;/em&gt;. The current module implementation used in that paper is extremely primitive but is still a valuable benchmark to understand what modules may look like performance-wise. Expectedly, as hardware parallelism increases, headers’ lead over modules becomes more and more pronounced. There is also a relationship between the DAG-depth (i.e. The length of the chain of modules that &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; each other). As this depth increases, modules grow slower and slower, while headers remain fairly constant for even “extreme” depths approaching 300).&lt;/p&gt;

&lt;p&gt;Suppose I have this source file:&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greetings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iostream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;english&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is pretty simple. Since we import some modules, we will need to compile &lt;code class=&quot;highlighter-rouge&quot;&gt;greetings&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;std.iostream&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; we can compile this file.&lt;/p&gt;
&lt;p&gt;So, let’s do that…&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;Uh…&lt;/p&gt;
&lt;p&gt;How?&lt;/p&gt;
&lt;p&gt;We’ve been given a source file with two imports. That’s it. We don’t have anything else. Where is &lt;code class=&quot;highlighter-rouge&quot;&gt;greetings&lt;/code&gt; defined? We need to find a file that contains a &lt;code class=&quot;highlighter-rouge&quot;&gt;module greetings;&lt;/code&gt; statement.&lt;/p&gt;
&lt;p&gt;This file located on the other side of the galaxy, &lt;code class=&quot;highlighter-rouge&quot;&gt;talk.cpp&lt;/code&gt;, looks promising:&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifdef FROMBULATE
#include &amp;lt;hello.h&amp;gt;
#endif
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifndef ABSYNTH
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;english&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It defines that &lt;code class=&quot;highlighter-rouge&quot;&gt;greeting::english&lt;/code&gt; function that we want. But how do we know that this is the right file? It doesn’t contain a &lt;code class=&quot;highlighter-rouge&quot;&gt;module greetings;&lt;/code&gt; line!&lt;/p&gt;
&lt;p&gt;But it does. Sometimes. It turns out when we compile with &lt;code class=&quot;highlighter-rouge&quot;&gt;-DFROMBULATE&lt;/code&gt;, then the file &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.h&lt;/code&gt; is pasted into the source file. What’s in there?&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#ifdef __SOME_BUILTIN_MACRO__
# define MODULE_NAME greetings
#else // Legacy module name
# define MODULE_NAME salutations
#endif
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MODULE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Oh.&lt;/p&gt;
&lt;p&gt;Oh no.&lt;/p&gt;
&lt;p&gt;This is fine. This is fine… Don’t worry. All we need to do is… &lt;em&gt;run the preprocessor&lt;/em&gt; to check if the file comes out as &lt;code class=&quot;highlighter-rouge&quot;&gt;module salutations&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;module greetings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is okay, but… There are 4,201 files that could define modules that can be imported, and any one of them could be &lt;code class=&quot;highlighter-rouge&quot;&gt;module greetings;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also, we can’t use our own implementation of the preprocessor: We need to run &lt;em&gt;exactly&lt;/em&gt; the preprocessor that will be compiling this code. See that &lt;code class=&quot;highlighter-rouge&quot;&gt;__SOME_BUILTIN_MACRO__&lt;/code&gt;? We have no clue what that is. If we don’t get it &lt;em&gt;exactly&lt;/em&gt; right, the compilation will fail, or, even worse, we may &lt;em&gt;miscompile&lt;/em&gt; the file.&lt;/p&gt;
&lt;p&gt;So what can we do? We could cache the names of all the modules after preprocessing all the files, right? Well, where do we store that mapping? And what happens when we want to compile with a different compiler that results in a different mapping? What if we add new files that need to be scanned? Do we need to search every directory that contains these thousands of source files every time we build, just to check if any modules were added, removed, or renamed? On systems where process startup and/or filesystem access is not cheap, these costs will add up.&lt;/p&gt;

&lt;p&gt;These two problems are distinct but related in that I (and many others) believe that one change to the modules design will fix them both: &lt;strong&gt;Module interface unit locations must be deterministic&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There are two alternative ideas to enforce this:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Force MIU filenames to derive from the module’s name. This mimics the design of header filenames being directly related to how they are found from an &lt;code class=&quot;highlighter-rouge&quot;&gt;#include&lt;/code&gt; directive.&lt;/li&gt;
&lt;li&gt;Provide a “manifest” or “mapping” file that describes the filepath to an MIU based on the module name. This file will need to be user-provided, or we are back in the scanning problem.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;With MIU lookup deterministic and easily defined, we can then go to the next essential step: The BMI of a module must be lazily generated.&lt;/p&gt;
&lt;p&gt;The compilation ordering between TUs will kill module adoption dead in its tracks. Even relatively shallow DAG depths are much slower than the equivalent with header files. The only answer is that TU compilation &lt;em&gt;must&lt;/em&gt; be parallelizable, even in the face of importing other TUs.&lt;/p&gt;
&lt;p&gt;In this respect, C++ would be best to mimic Python’s &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; implementation: When a new &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; statement is encountered, Python will first find a source file corresponding to that module, and then look for a pre-compiled version in a deterministic fashion. If the pre-compiled version already exists and is up-to-date, it will be used. If no pre-compiled version exists, the source file will be compiled and the resulting bytecode will be written to disk. The bytecode is then loaded. If two interpreter instances encounter the same un-compiled source file at the same time, they will race to write the bytecode. The race doesn’t matter, though: They will both come to the same conclusion and write the same file to disk.&lt;/p&gt;
&lt;p&gt;In order to facilitate parallel compilation of TUs in the DAG, C++ modules must be implemented in the same way. Ahead-of-time BMI compilation is a non-starter. Instead, a compiler should lazily generate the BMI when it first encounters an &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; statement for the module in question. The build system should not concern itself with BMIs at all.&lt;/p&gt;
&lt;p&gt;All of this can only work if the location of an MIU is deterministic for the compiler.&lt;/p&gt;

&lt;p&gt;There was a recent upset on the Twitter-verse. The Pre-Kona mailing was posted on January 25th. Amongst the many papers posted you will find &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1427r0.pdf&quot;&gt;p1427, &lt;em&gt;Concerns about module toolability&lt;/em&gt;&lt;/a&gt;. Amongst its authors and contributors are names of build system and tooling engineers from around the industry. Am I appealing to authority here? Yes I am, but I feel that these are some of the most qualified people to provide feedback on module toolability.&lt;/p&gt;
&lt;p&gt;This paper was born from the concerns of many tool authors and collaborators (more than what is named on the paper itself, including myself) who have felt that their concerns about modules have been ignored for months and years.&lt;/p&gt;
&lt;p&gt;People outside of SG15 have been keen to &lt;a href=&quot;http://www.open-std.org/pipermail/tooling/2019-January/000269.html&quot;&gt;shoot down discussion&lt;/a&gt; on the issues with module toolability, claiming that SG15 does not have the necessary implementation experience to make useful statements regarding modules.&lt;/p&gt;
&lt;p&gt;SG15 has only had face-to-face meetings. The last meeting, in San Diego, was useless as the chair was absent and people were too busy getting caught up since the prior meetings to have any useful discussions. With no SG15 meetings outside of those at the official WG21 convenings, the members thereof have difficulty staying up-to-date and collaborating on work. In addition, many times that SG15 has attempted to raise issues they have been shot down as their work is considered “out-of-scope” for the C++ language.&lt;/p&gt;
&lt;p&gt;A Tweet about the pre-Kona mailings spawned discussion of C++ modules and p1427. &lt;a href=&quot;https://twitter.com/horenmar_ctu/status/1089542882783084549&quot;&gt;Questions were raised about who to trust&lt;/a&gt; regarding module toolability.&lt;/p&gt;
&lt;p&gt;This discussion culminated in an eventual call for SG15 to &lt;a href=&quot;https://twitter.com/rodgertq/status/1089580076729982976?s=19&quot;&gt;“STFU”&lt;/a&gt; unless they can provide code samples that prove the problems they outline. This is a request for code that cannot be implemented in any current compiler and cannot be implemented in any current build system. Even if these were to exist, the request is for proving a negative: A task which cannot be done empirically. As such, this request for code is a goal that cannot be met.&lt;/p&gt;
&lt;p&gt;The issues were not discussed. The issues were not disproven. No one even mentioned the problems outlined in p1427. We are told to simply &lt;a href=&quot;https://twitter.com/jfbastien/status/1089536692288024576&quot;&gt;trust some big names&lt;/a&gt; to know better than we do (an appeal to authority).&lt;/p&gt;
&lt;p&gt;People backing the current modules design have not proven that modules work at scale, yet also demand proof from SG15 that they &lt;em&gt;do not&lt;/em&gt; work at scale. Existing “modules” deployments do not use the current design, and do not use the automated module scanning that would be required for use with real build systems in the wild.&lt;/p&gt;
&lt;p&gt;If modules are merged and it turns out that they cannot be implemented in a well-performing and flexible fashion, people will not use modules. If a broken modules proposal is merged into C++, it may be irrecoverable and C++ will never see the promises of modules realized.&lt;/p&gt;
&lt;p&gt;Is it possible for the current modules proposal to be implemented successfully? I can’t answer with a definitive “no”, but me and many others feel that there are significant issues that need to be addressed.&lt;/p&gt;
&lt;p&gt;But, judging by the behavior of others, it may seem that it doesn’t matter what SG15 thinks: They are being shot down at every turn by people with very little experience in C++ tooling, and the SG15 chair is completely absent through this entire discussion. Anything SG15 does is declared “unsubstantiated” and “out-of-scope.”&lt;/p&gt;
&lt;p&gt;I was afraid to call out this behavior: I’m not keen on interpersonal conflict. Nevertheless, I’m more afraid that C++ will end up with a permanently useless modules design.&lt;/p&gt;
</description>
<pubDate>Mon, 28 Jan 2019 02:47:11 +0000</pubDate>
<dc:creator>pplonski86</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://vector-of-bool.github.io/2019/01/27/modules-doa.html</dc:identifier>
</item>
<item>
<title>Linear Algebra by Jim Hefferon – free textbook</title>
<link>http://joshua.smcvt.edu/linearalgebra/</link>
<guid isPermaLink="true" >http://joshua.smcvt.edu/linearalgebra/</guid>
<description>&lt;head&gt;&lt;title&gt;Free Linear Algebra textbook&lt;/title&gt;&lt;meta name=&quot;Keywords&quot; content=&quot;linear algebra, textbook, text, free, mathematics, free textbook, free book, open educational resources, mathematics teaching&quot;/&gt;&lt;meta http-equiv=&quot;keywords&quot; content=&quot;linear algebra, textbook, text, free, mathematics, free textbook, free book, open educational resources, mathematics teaching&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;163.53086419753&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/#current_version&quot;&gt;&lt;img src=&quot;http://joshua.smcvt.edu/linearalgebra/bookcover.png&quot; align=&quot;right&quot; alt=&quot;PNG image: cover of Linear Algebra&quot; height=&quot;300&quot; border=&quot;1&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 align=&quot;left&quot;&gt;&lt;em&gt;Linear Algebra&lt;/em&gt;&lt;/h2&gt;
&lt;h3&gt;A Free text for a standard US undergraduate course&lt;/h3&gt;
&lt;h4 align=&quot;left&quot;&gt;&lt;a href=&quot;http://joshua.smcvt.edu/math/hefferon.html&quot;&gt;Jim Hefferon&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://smcvt.edu/academics/mathematics/&quot;&gt;Mathematics and Statistics Department&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.smcvt.edu/&quot;&gt;Saint Michael's College&lt;/a&gt; &lt;br/&gt;&lt;em id=&quot;email&quot;&gt;jhefferon&lt;/em&gt; at &lt;em&gt;smcvt.edu&lt;/em&gt;&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Linear Algebra&lt;/em&gt; is a text for a first US undergraduate Linear Algebra course. You can use it as a main text, as a supplement, or for independent study.&lt;/p&gt;
&lt;p&gt;It is Free. The book, the complete answers to all exercises, classroom presentation slides, and a lab manual using &lt;em&gt;Sage&lt;/em&gt;, are all &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/#current_version&quot;&gt;available for download&lt;/a&gt;, as well as &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/#purchase&quot;&gt;for purchase&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/#current_version&quot;&gt;third edition&lt;/a&gt; incorporates many suggestions sent by users, including many more beginning exercises, and a new Topic on coupled oscillators and eigenvalues.&lt;/p&gt;
&lt;h3&gt;Highlights&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard coverage&lt;/strong&gt;  Linear systems and Gauss's method, vector spaces, linear maps and matrices, determinants, and eigenvectors and eigenvalues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Free&lt;/strong&gt;  The book is &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/#license&quot;&gt;Freely available&lt;/a&gt;, including its source.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developmental approach&lt;/strong&gt;  It covers the requisite material and proves all the results, but it does not start by assuming that students are already able at abstract work. Instead, it proceeds with a great deal of motivation, many computational examples, and exercises that range from routine verifications to a few challenges. The goal is, in the context of developing the material of an undergraduate course, to raise each student's level of mathematical maturity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extensive exercise sets, with worked answers to all exercises&lt;/strong&gt;  Sometimes material described on the web as a book is really lecture notes. That's fine but from notes to a book is a long way. That means things like figures and an index, but most importantly means exercises. Each subsection here has many, spanning a range of difficulty. In the Answers book each exercise is covered, completely, including proofs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Popular&lt;/strong&gt;  Downloadable for twenty years, this book has been used in hundreds of classes at many schools as well as by thousands of individuals for independent study.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Applications&lt;/strong&gt;  Each chapter finishes with four or five short supplemental topics. These are good for reading or projects, or for small group work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extras&lt;/strong&gt;  There are beamer slides for classroom presentations, and there is a lab manual using &lt;em&gt;Sage&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;  One semester of calculus.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reviews.&lt;/strong&gt;  Here are some: &lt;a href=&quot;http://mathdl.maa.org/mathDL/19/?pa=reviews&amp;amp;sa=viewBook&amp;amp;bookId=72055&quot;&gt;the Mathematical Association of America review&lt;/a&gt;, &lt;a href=&quot;http://aimath.org/textbooks/approved-textbooks/hefferon/&quot;&gt;the American Institute of Mathematics&lt;/a&gt;, &lt;a href=&quot;https://open.umn.edu/opentextbooks/BookDetail.aspx?bookId=24&quot;&gt;the Open Textbook Library (includes a number of reviews)&lt;/a&gt;, &lt;a href=&quot;http://www.theassayer.org/cgi-bin/asbook.cgi?book=29&quot;&gt;one from a longstanding site for free texts&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h3 id=&quot;current_version&quot;&gt;Get &lt;em&gt;Linear Algebra&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Here is the current version of &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/book.pdf&quot;&gt;the text&lt;/a&gt; and the &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/jhanswer.pdf&quot;&gt;answers to exercises&lt;/a&gt;. Save these files in the same directory so that clicking on an exercise takes you to its answer and clicking on an answer takes you to the exercise. (You need a PDF reader that supports this; one is Adobe Reader.)&lt;/p&gt;
&lt;p id=&quot;purchase&quot;&gt;You can get a paper copy, an official one, for just about the cost of media, about $22. You can click on the link to Amazon, just below. Or, you can use ISBN-13: 978-1944325039 at your favorite site. (Bookstores can buy from NACSCORP or from Ingram via LightningSource.)&lt;/p&gt;

&lt;p&gt;If you are teaching out of this text then have a look at the &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/slides.zip&quot;&gt;beamer slides&lt;/a&gt; for classroom presentation. These are compiled from the text source, so the theorems and definitions have the exact same wording. But the slides use different examples than the text so that students see twice as many. Along with those is a &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/slides_handout.zip&quot;&gt;version of the slides&lt;/a&gt; without the pauses, for handing out or posting in your learning management system. (Those slides omit some proofs in favor of examples; you can also get a version that includes &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/slides_allproofs.zip&quot;&gt;all proofs&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Linear Algebra&lt;/em&gt; also has a supplemental, optional, &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/lab.pdf&quot;&gt;lab manual&lt;/a&gt; using &lt;a href=&quot;http://www.sagemath.org&quot;&gt;&lt;em&gt;Sage&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are into LaTeX then you may be interested that &lt;em&gt;Linear Algebra&lt;/em&gt; once again has a &lt;a href=&quot;https://gitlab.com/jim.hefferon/linear-algebra&quot;&gt;source repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if you find the book useful then you could make a contribution. This is entirely optional but you'd be surprised at the expenses a person runs into giving things away; contributions help with things like examination copies for conferences. I'll suggest $5 but for whatever you send, thank you!&lt;/p&gt;

&lt;h4 id=&quot;additional_material&quot;&gt;Additional material&lt;/h4&gt;
&lt;p&gt;Prof Harold W. Ellingsen of SUNY Potsdam has shared his &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/MatrixArithmetic.pdf&quot;&gt;&lt;em&gt;Matrix Arithmetic&lt;/em&gt;&lt;/a&gt;, for teachers who want to cover matrix operations after the first chapter (the book covers them in the third chapter as part of linear maps). It is under a Free license, and you can get &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/MatrixArithmetic.tex&quot;&gt;the LaTeX source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/problems2014.zip&quot;&gt;get the problems and their solutions&lt;/a&gt; that I assigned for take home work when I taught the class in the Fall of 2014.&lt;/p&gt;
&lt;h3 id=&quot;prior_version&quot;&gt;The prior edition of &lt;em&gt;Linear Algebra&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;The second edition of &lt;em&gt;Linear Algebra&lt;/em&gt; is still available, for someone in a legacy situation: &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/book_ed2.pdf&quot;&gt;book&lt;/a&gt; and &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/jhanswer_ed2.pdf&quot;&gt;answers&lt;/a&gt;. To use the hyperlinking between questions and answers, rename these files &quot;book.pdf&quot; and &quot;jhanswer.pdf&quot; and put them in the same directory,&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;
&lt;p&gt;This text is Free. Use it under either the &lt;a href=&quot;http://www.gnu.org/copyleft/fdl.html&quot;&gt;GNU Free Documentation License&lt;/a&gt; or the &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/2.5/&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; border=&quot;0&quot; src=&quot;http://creativecommons.org/images/public/somerights20.png&quot;/&gt;&lt;/a&gt; &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/2.5/&quot;&gt;Creative Commons Attribution-ShareAlike 2.5 License&lt;/a&gt;, at your discretion.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For bookstores:&lt;/em&gt; thank you for being concerned about my rights. I give instructors permission to make copies of this material, either electronic or paper, and give or sell those to students. But first note that for very little money you can get a paper copy from Amazon, or NACSCORP, or directly from Ingram via LightningSource, using ISBN-13: 978-1944325039.&lt;/p&gt;
&lt;p&gt;Please don't order used or unofficial copies since they can have significantly different content and pagination. With the current edition at pretty much the price of media, any savings from old versions are tiny compared to the cost of confusion, particularly confusion to me since I get contacted about already-fixed bugs. The current version says &quot;Third edition&quot; on the front cover (it also says 2017-Jan-01 at the end of the Preface).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For instructors who want to modify the text.&lt;/em&gt; Please, feel free. But as a favor I ask that you include a statement about your modifications. That way people making reports know who to write. Putting something like this on the cover would be great: &lt;code&gt;\fbox{\parbox{0.75\textwidth}{The material in the second appendix, on induction, has been added by Professor Jones of UBU. For any reports about this material contact \url{sjones@example.com}.}}&lt;/code&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;contribute&quot;&gt;Can You Help With &lt;em&gt;Linear Algebra&lt;/em&gt;?&lt;/h3&gt;
&lt;p&gt;I am glad to hear from both teachers and students. I enjoy hearing about the experience that folks have with the book and I find suggestions helpful, especially bug reports. I save these and periodically revise.&lt;/p&gt;
&lt;p&gt;If you have something that you are able to share back then I'd be glad to take a look. For instance, I would love to have a topic on Machine Learning, or some sub-topic such as dimension reduction. Of course, I reserve the ability to choose whether to edit or include it. I gratefully acknowledge all the contributions that I use, or I can keep you anonymous.&lt;/p&gt;
&lt;p&gt;In particular, I would welcome exams or problem sets. Some instructors have questions about using a text where the answers to the exercises are downloadable. (I can't resist noting that for any widely-available text any college student can get from the Internet copies of the answers. Also, in the past I tried witholding the answers and asking class instructors to email me for copies but that left me trying to determine identity via email, which is just not practical.) Thus additional sets of exercises without answers would answer the requests of some instructors. If you could contribute your TeX or LaTeX source that'd be great because then instructors could cut and paste.&lt;/p&gt;
&lt;p&gt;I would also welcome contrbutions related to the emerging electronic tools. For instance, if you have sets of questions that are suitable for &lt;a href=&quot;http://moodle.org&quot;&gt;Moodle quizzes&lt;/a&gt; and that you could share with other users of this book then write me and we can see about making them available. The same holds for &lt;a href=&quot;http://webwork.maa.org&quot;&gt;WeBWorK&lt;/a&gt; problem sets. And, I would be glad to be able to include in the distribution a deck of &lt;a href=&quot;https://en.wikipedia.org/wiki/Anki_(software)&quot;&gt;Anki&lt;/a&gt; cards.&lt;/p&gt;
&lt;p&gt;My email is &lt;a href=&quot;http://joshua.smcvt.edu/linearalgebra/#email&quot;&gt;at the top of this page&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;related&quot;&gt;Related work&lt;/h3&gt;
&lt;p&gt;I have two other texts. Both are Free. My &lt;a href=&quot;http://joshua.smcvt.edu/proofs&quot;&gt;&lt;em&gt;Introduction to Proofs&lt;/em&gt;&lt;/a&gt; is for a proofs course taught using the Inquiry-Based method (also known as the Discovery method or the Moore method). It covers elementary number theory, sets, functions, and relations. My &lt;a href=&quot;http://joshua.smcvt.edu/computation&quot;&gt;&lt;em&gt;Theory of Computation&lt;/em&gt;&lt;/a&gt; covers Turing Machines, the Halting problem, Automata, and Complexity. It is now beta, being classroom-tested, and is under active development.&lt;/p&gt;
&lt;p&gt;In addition, you may also like my &lt;a href=&quot;http://joshua.smcvt.edu/undergradmath/&quot;&gt;Cheat Sheet for LaTeX math&lt;/a&gt;, aimed at undergraduates but useful for anyone.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;img src=&quot;http://joshua.smcvt.edu/JLC_small_test.jpg&quot; align=&quot;right&quot; alt=&quot;Picture of Joshua L. Chamberlin&quot;/&gt;&lt;/p&gt;
&lt;h4 align=&quot;left&quot;&gt;Site Information&lt;/h4&gt;
&lt;p&gt;This site &lt;a href=&quot;http://joshua.smcvt.edu&quot;&gt;Joshua&lt;/a&gt; is located in the &lt;a href=&quot;http://smcvt.edu/academics/mathematics/&quot;&gt;Mathematics Department&lt;/a&gt; of &lt;a href=&quot;http://www.smcvt.edu/&quot;&gt;Saint Michael's College&lt;/a&gt; in Colchester, Vermont USA.&lt;/p&gt;
&lt;h4&gt;Joshua runs under Linux&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://joshua.smcvt.edu/Linux2-matt-ericson.gif&quot; align=&quot;left&quot; alt=&quot;Powered by Linux logo&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Open Source software is a great idea. This project would not have gotten done without it.&lt;/p&gt;
&lt;p&gt;(Credit for the logo to Matt Ericson.)&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Sun, 27 Jan 2019 19:04:53 +0000</pubDate>
<dc:creator>n-izem</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://joshua.smcvt.edu/linearalgebra/</dc:identifier>
</item>
</channel>
</rss>