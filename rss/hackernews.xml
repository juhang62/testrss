<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>What’s New in Python 3.8</title>
<link>https://docs.python.org/3/whatsnew/3.8.html</link>
<guid isPermaLink="true" >https://docs.python.org/3/whatsnew/3.8.html</guid>
<description>&lt;p&gt;This article explains the new features in Python 3.8, compared to 3.7. For full details, see the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/whatsnew/changelog.html#changelog&quot;&gt;&lt;span class=&quot;std std-ref&quot;&gt;changelog&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Python 3.8 was released on October 14th, 2019.&lt;/p&gt;&lt;div id=&quot;new-features&quot; readability=&quot;86.761467889908&quot;&gt;
&lt;h2&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;assignment-expressions&quot; readability=&quot;27.884615384615&quot;&gt;
&lt;h3&gt;Assignment expressions&lt;/h3&gt;
&lt;p&gt;There is new syntax &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;:=&lt;/span&gt;&lt;/code&gt; that assigns values to variables as part of a larger expression. It is affectionately known as “the walrus operator” due to its resemblance to &lt;a class=&quot;reference external&quot; href=&quot;https://en.wikipedia.org/wiki/Walrus#/media/File:Pacific_Walrus_-_Bull_(8247646168).jpg&quot;&gt;the eyes and tusks of a walrus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this example, the assignment expression helps avoid calling &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#len&quot; title=&quot;len&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;len()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; twice:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;List is too long (&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{n}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; elements, expected &amp;lt;= 10)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A similar benefit arises during regular expression matching where match objects are needed twice, once to test whether a match occurred and another to extract a subgroup:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'(\d+)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;% d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;iscount'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;advertisement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;100.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The operator is also useful with while-loops that compute a value to test loop termination and then need that same value again in the body of the loop:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;c1&quot;&gt;# Loop over fixed length blocks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Another motivating use case arises in list comprehensions where a value computed in a filtering condition is also needed in the expression body:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clean_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clean_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'NFC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allowed_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Try to limit use of the walrus operator to clean cases that reduce complexity and improve readability.&lt;/p&gt;
&lt;p&gt;See &lt;span class=&quot;target&quot; id=&quot;index-0&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0572&quot;&gt;&lt;strong&gt;PEP 572&lt;/strong&gt;&lt;/a&gt; for a full description.&lt;/p&gt;
&lt;p&gt;(Contributed by Emily Morehouse in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35224&quot;&gt;bpo-35224&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;positional-only-parameters&quot; readability=&quot;47.70447761194&quot;&gt;
&lt;h3&gt;Positional-only parameters&lt;/h3&gt;
&lt;p&gt;There is a new function parameter syntax &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;/&lt;/span&gt;&lt;/code&gt; to indicate that some function parameters must be specified positionally and cannot be used as keyword arguments. This is the same notation shown by &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;help()&lt;/span&gt;&lt;/code&gt; for C functions annotated with Larry Hastings’ &lt;a class=&quot;reference external&quot; href=&quot;https://docs.python.org/3/howto/clinic.html&quot;&gt;Argument Clinic&lt;/a&gt; tool.&lt;/p&gt;
&lt;p&gt;In the following example, parameters &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are positional-only, while &lt;em&gt;c&lt;/em&gt; or &lt;em&gt;d&lt;/em&gt; can be positional or keyword, and &lt;em&gt;e&lt;/em&gt; or &lt;em&gt;f&lt;/em&gt; are required to be keywords:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The following is a valid call:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;However, these are invalid calls:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;18&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# b cannot be a keyword argument&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;# e must be a keyword argument&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;One use case for this notation is that it allows pure Python functions to fully emulate behaviors of existing C coded functions. For example, the built-in &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#pow&quot; title=&quot;pow&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pow()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function does not accept keyword arguments:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Emulate the built in pow() function&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Another use case is to preclude keyword arguments when the parameter name is not helpful. For example, the builtin &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#len&quot; title=&quot;len&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;len()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function has the signature &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;len(obj,&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;/)&lt;/span&gt;&lt;/code&gt;. This precludes awkward calls such as:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# The &quot;obj&quot; keyword argument impairs readability&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A further benefit of marking a parameter as positional-only is that it allows the parameter name to be changed in the future without risk of breaking client code. For example, in the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#module-statistics&quot; title=&quot;statistics: mathematical statistics functions&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module, the parameter name &lt;em&gt;dist&lt;/em&gt; may be changed in the future. This was made possible with the following function specification:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;quantiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'exclusive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Since the parameters to the left of &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;/&lt;/span&gt;&lt;/code&gt; are not exposed as possible keywords, the parameters names remain available for use in &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;**kwargs&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;# a and b are used in two ways&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;10 20 {'a': 1, 'b': 2, 'c': 3}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This greatly simplifies the implementation of functions and methods that need to accept arbitrary keyword arguments. For example, here is an excerpt from code in the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/collections.html#module-collections&quot; title=&quot;collections: Container datatypes&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;collections&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Note &quot;iterable&quot; is a possible keyword argument&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;See &lt;span class=&quot;target&quot; id=&quot;index-1&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0570&quot;&gt;&lt;strong&gt;PEP 570&lt;/strong&gt;&lt;/a&gt; for a full description.&lt;/p&gt;
&lt;p&gt;(Contributed by Pablo Galindo in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36540&quot;&gt;bpo-36540&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;parallel-filesystem-cache-for-compiled-bytecode-files&quot; readability=&quot;13.311688311688&quot;&gt;
&lt;h3&gt;Parallel filesystem cache for compiled bytecode files&lt;/h3&gt;
&lt;p&gt;The new &lt;span class=&quot;target&quot; id=&quot;index-2&quot;/&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX&quot;&gt;&lt;code class=&quot;xref std std-envvar docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;PYTHONPYCACHEPREFIX&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; setting (also available as &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/using/cmdline.html#id5&quot;&gt;&lt;code class=&quot;xref std std-option docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-X&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pycache_prefix&lt;/span&gt;&lt;/code&gt;) configures the implicit bytecode cache to use a separate parallel filesystem tree, rather than the default &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;__pycache__&lt;/span&gt;&lt;/code&gt; subdirectories within each source directory.&lt;/p&gt;
&lt;p&gt;The location of the cache is reported in &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/sys.html#sys.pycache_prefix&quot; title=&quot;sys.pycache_prefix&quot;&gt;&lt;code class=&quot;xref py py-data docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;sys.pycache_prefix&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; (&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/constants.html#None&quot; title=&quot;None&quot;&gt;&lt;code class=&quot;xref py py-const docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;None&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; indicates the default location in &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;__pycache__&lt;/span&gt;&lt;/code&gt; subdirectories).&lt;/p&gt;
&lt;p&gt;(Contributed by Carl Meyer in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue33499&quot;&gt;bpo-33499&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;debug-build-uses-the-same-abi-as-release-build&quot; readability=&quot;47.818707810993&quot;&gt;
&lt;h3&gt;Debug build uses the same ABI as release build&lt;/h3&gt;
&lt;p&gt;Python now uses the same ABI whether it’s built in release or debug mode. On Unix, when Python is built in debug mode, it is now possible to load C extensions built in release mode and C extensions built using the stable ABI.&lt;/p&gt;
&lt;p&gt;Release builds and debug builds are now ABI compatible: defining the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Py_DEBUG&lt;/span&gt;&lt;/code&gt; macro no longer implies the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Py_TRACE_REFS&lt;/span&gt;&lt;/code&gt; macro, which introduces the only ABI incompatibility. The &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Py_TRACE_REFS&lt;/span&gt;&lt;/code&gt; macro, which adds the &lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;sys.getobjects()&lt;/span&gt;&lt;/code&gt; function and the &lt;span class=&quot;target&quot; id=&quot;index-3&quot;/&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDUMPREFS&quot;&gt;&lt;code class=&quot;xref std std-envvar docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;PYTHONDUMPREFS&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; environment variable, can be set using the new &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;./configure&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--with-trace-refs&lt;/span&gt;&lt;/code&gt; build option. (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36465&quot;&gt;bpo-36465&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On Unix, C extensions are no longer linked to libpython except on Android and Cygwin. It is now possible for a statically linked Python to load a C extension built using a shared library Python. (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue21536&quot;&gt;bpo-21536&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On Unix, when Python is built in debug mode, import now also looks for C extensions compiled in release mode and for C extensions compiled with the stable ABI. (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36722&quot;&gt;bpo-36722&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;To embed Python into an application, a new &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;--embed&lt;/span&gt;&lt;/code&gt; option must be passed to &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;python3-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--embed&lt;/span&gt;&lt;/code&gt; to get &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-lpython3.8&lt;/span&gt;&lt;/code&gt; (link the application to libpython). To support both 3.8 and older, try &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;python3-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--embed&lt;/span&gt;&lt;/code&gt; first and fallback to &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;python3-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt;&lt;/code&gt; (without &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;--embed&lt;/span&gt;&lt;/code&gt;) if the previous command fails.&lt;/p&gt;
&lt;p&gt;Add a pkg-config &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;python-3.8-embed&lt;/span&gt;&lt;/code&gt; module to embed Python into an application: &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pkg-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;python-3.8-embed&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt;&lt;/code&gt; includes &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-lpython3.8&lt;/span&gt;&lt;/code&gt;. To support both 3.8 and older, try &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pkg-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;python-X.Y-embed&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt;&lt;/code&gt; first and fallback to &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pkg-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;python-X.Y&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt;&lt;/code&gt; (without &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;--embed&lt;/span&gt;&lt;/code&gt;) if the previous command fails (replace &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;X.Y&lt;/span&gt;&lt;/code&gt; with the Python version).&lt;/p&gt;
&lt;p&gt;On the other hand, &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pkg-config&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;python3.8&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--libs&lt;/span&gt;&lt;/code&gt; no longer contains &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-lpython3.8&lt;/span&gt;&lt;/code&gt;. C extensions must not be linked to libpython (except on Android and Cygwin, whose cases are handled by the script); this change is backward incompatible on purpose. (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36721&quot;&gt;bpo-36721&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;f-strings-support-for-self-documenting-expressions-and-debugging&quot; readability=&quot;16.147024504084&quot;&gt;
&lt;h3&gt;f-strings support &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;=&lt;/span&gt;&lt;/code&gt; for self-documenting expressions and debugging&lt;/h3&gt;
&lt;p&gt;Added an &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;=&lt;/span&gt;&lt;/code&gt; specifier to &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/glossary.html#term-f-string&quot;&gt;&lt;span class=&quot;xref std std-term&quot;&gt;f-string&lt;/span&gt;&lt;/a&gt;s. An f-string such as &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;f'{expr=}'&lt;/span&gt;&lt;/code&gt; will expand to the text of the expression, an equal sign, then the representation of the evaluated expression. For example:&lt;/p&gt;
&lt;div class=&quot;highlight-default notranslate&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'eric_idle'&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member_since&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1975&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{user=} {member_since=}'&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;&quot;user='eric_idle' member_since=datetime.date(1975, 7, 31)&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The usual &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#f-strings&quot;&gt;&lt;span class=&quot;std std-ref&quot;&gt;f-string format specifiers&lt;/span&gt;&lt;/a&gt; allow more control over how the result of the expression is displayed:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member_since&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{user=!s}  {delta.days=:,d}'&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;'user=eric_idle  delta.days=16,075'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;=&lt;/span&gt;&lt;/code&gt; specifier will display the whole expression so that calculations can be shown:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{theta=}  {cos(radians(theta))=:.3f}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;theta=30  cos(radians(theta))=0.866&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Contributed by Eric V. Smith and Larry Hastings in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36817&quot;&gt;bpo-36817&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pep-578-python-runtime-audit-hooks&quot; readability=&quot;13.74677002584&quot;&gt;
&lt;h3&gt;PEP 578: Python Runtime Audit Hooks&lt;/h3&gt;
&lt;p&gt;The PEP adds an Audit Hook and Verified Open Hook. Both are available from Python and native code, allowing applications and frameworks written in pure Python code to take advantage of extra notifications, while also allowing embedders or system administrators to deploy builds of Python where auditing is always enabled.&lt;/p&gt;
&lt;p&gt;See &lt;span class=&quot;target&quot; id=&quot;index-4&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0578&quot;&gt;&lt;strong&gt;PEP 578&lt;/strong&gt;&lt;/a&gt; for full details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pep-587-python-initialization-configuration&quot; readability=&quot;8.9866875489428&quot;&gt;
&lt;h3&gt;PEP 587: Python Initialization Configuration&lt;/h3&gt;
&lt;p&gt;The &lt;span class=&quot;target&quot; id=&quot;index-5&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0587&quot;&gt;&lt;strong&gt;PEP 587&lt;/strong&gt;&lt;/a&gt; adds a new C API to configure the Python Initialization providing finer control on the whole configuration and better error reporting.&lt;/p&gt;
&lt;p&gt;New structures:&lt;/p&gt;
&lt;p&gt;New functions:&lt;/p&gt;
&lt;p&gt;This PEP also adds &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;_PyRuntimeState.preconfig&lt;/span&gt;&lt;/code&gt; (&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig&quot; title=&quot;PyPreConfig&quot;&gt;&lt;code class=&quot;xref c c-type docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;PyPreConfig&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; type) and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;PyInterpreterState.config&lt;/span&gt;&lt;/code&gt; (&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/c-api/init_config.html#c.PyConfig&quot; title=&quot;PyConfig&quot;&gt;&lt;code class=&quot;xref c c-type docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;PyConfig&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; type) fields to these internal structures. &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;PyInterpreterState.config&lt;/span&gt;&lt;/code&gt; becomes the new reference configuration, replacing global configuration variables and other private variables.&lt;/p&gt;
&lt;p&gt;See &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/c-api/init_config.html#init-config&quot;&gt;&lt;span class=&quot;std std-ref&quot;&gt;Python Initialization Configuration&lt;/span&gt;&lt;/a&gt; for the documentation.&lt;/p&gt;
&lt;p&gt;See &lt;span class=&quot;target&quot; id=&quot;index-6&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0587&quot;&gt;&lt;strong&gt;PEP 587&lt;/strong&gt;&lt;/a&gt; for a full description.&lt;/p&gt;
&lt;p&gt;(Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36763&quot;&gt;bpo-36763&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;vectorcall-a-fast-calling-protocol-for-cpython&quot; readability=&quot;15.42600896861&quot;&gt;
&lt;h3&gt;Vectorcall: a fast calling protocol for CPython&lt;/h3&gt;
&lt;p&gt;The “vectorcall” protocol is added to the Python/C API. It is meant to formalize existing optimizations which were already done for various classes. Any extension type implementing a callable can use this protocol.&lt;/p&gt;
&lt;p&gt;This is currently provisional, the aim is to make it fully public in Python 3.9.&lt;/p&gt;
&lt;p&gt;See &lt;span class=&quot;target&quot; id=&quot;index-7&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0590&quot;&gt;&lt;strong&gt;PEP 590&lt;/strong&gt;&lt;/a&gt; for a full description.&lt;/p&gt;
&lt;p&gt;(Contributed by Jeroen Demeyer and Mark Shannon in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36974&quot;&gt;bpo-36974&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pickle-protocol-5-with-out-of-band-data-buffers&quot; readability=&quot;18.829268292683&quot;&gt;
&lt;h3&gt;Pickle protocol 5 with out-of-band data buffers&lt;/h3&gt;
&lt;p&gt;When &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot; title=&quot;pickle: Convert Python objects to streams of bytes and back.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is used to transfer large data between Python processes in order to take advantage of multi-core or multi-machine processing, it is important to optimize the transfer by reducing memory copies, and possibly by applying custom techniques such as data-dependent compression.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot; title=&quot;pickle: Convert Python objects to streams of bytes and back.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; protocol 5 introduces support for out-of-band buffers where &lt;span class=&quot;target&quot; id=&quot;index-8&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-3118&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt;-compatible data can be transmitted separately from the main pickle stream, at the discretion of the communication layer.&lt;/p&gt;
&lt;p&gt;See &lt;span class=&quot;target&quot; id=&quot;index-9&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0574&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; for a full description.&lt;/p&gt;
&lt;p&gt;(Contributed by Antoine Pitrou in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36785&quot;&gt;bpo-36785&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;improved-modules&quot; readability=&quot;154.41196306288&quot;&gt;
&lt;h2&gt;Improved Modules&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;ast&quot; readability=&quot;15.465853658537&quot;&gt;
&lt;h3&gt;ast&lt;/h3&gt;
&lt;p&gt;AST nodes now have &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;end_lineno&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;end_col_offset&lt;/span&gt;&lt;/code&gt; attributes, which give the precise location of the end of the node. (This only applies to nodes that have &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;lineno&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;col_offset&lt;/span&gt;&lt;/code&gt; attributes.)&lt;/p&gt;
&lt;p&gt;New function &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/ast.html#ast.get_source_segment&quot; title=&quot;ast.get_source_segment&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ast.get_source_segment()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; returns the source code for a specific AST node.&lt;/p&gt;
&lt;p&gt;(Contributed by Ivan Levkivskyi in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue33416&quot;&gt;bpo-33416&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/ast.html#ast.parse&quot; title=&quot;ast.parse&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ast.parse()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function has some new flags:&lt;/p&gt;
&lt;ul class=&quot;simple&quot; readability=&quot;2.8421052631579&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;type_comments=True&lt;/span&gt;&lt;/code&gt; causes it to return the text of &lt;span class=&quot;target&quot; id=&quot;index-10&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0484&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; and &lt;span class=&quot;target&quot; id=&quot;index-11&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0526&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; type comments associated with certain AST nodes;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;mode='func_type'&lt;/span&gt;&lt;/code&gt; can be used to parse &lt;span class=&quot;target&quot; id=&quot;index-12&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0484&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; “signature type comments” (returned for function definition AST nodes);&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;feature_version=(3,&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;N)&lt;/span&gt;&lt;/code&gt; allows specifying an earlier Python 3 version. (For example, &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;feature_version=(3,&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;4)&lt;/span&gt;&lt;/code&gt; will treat &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;async&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;await&lt;/span&gt;&lt;/code&gt; as non-reserved words.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(Contributed by Guido van Rossum in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35766&quot;&gt;bpo-35766&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;asyncio&quot; readability=&quot;18.335273573923&quot;&gt;
&lt;h3&gt;asyncio&lt;/h3&gt;
&lt;p&gt;Running &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;asyncio&lt;/span&gt;&lt;/code&gt; launches a natively async REPL. This allows rapid experimentation with code that has a top-level &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/reference/expressions.html#await&quot;&gt;&lt;code class=&quot;xref std std-keyword docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;await&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. There is no longer a need to directly call &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;asyncio.run()&lt;/span&gt;&lt;/code&gt; which would spawn a new event loop on every invocation:&lt;/p&gt;
&lt;div class=&quot;highlight-none notranslate&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
$ python -m asyncio
asyncio REPL 3.8.0
Use &quot;await&quot; directly instead of &quot;asyncio.run()&quot;.
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import asyncio
&amp;gt;&amp;gt;&amp;gt; await asyncio.sleep(10, result='hello')
hello
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Contributed by Yury Selivanov in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue37028&quot;&gt;bpo-37028&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On Windows, the default event loop is now &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop&quot; title=&quot;asyncio.ProactorEventLoop&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ProactorEventLoop&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue34687&quot;&gt;bpo-34687&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop&quot; title=&quot;asyncio.ProactorEventLoop&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ProactorEventLoop&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; now also supports UDP. (Contributed by Adam Meily and Andrew Svetlov in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue29883&quot;&gt;bpo-29883&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop&quot; title=&quot;asyncio.ProactorEventLoop&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ProactorEventLoop&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; can now be interrupted by &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt&quot; title=&quot;KeyboardInterrupt&quot;&gt;&lt;code class=&quot;xref py py-exc docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;KeyboardInterrupt&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; (“CTRL+C”). (Contributed by Vladimir Matveev in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue23057&quot;&gt;bpo-23057&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;builtins&quot; readability=&quot;11.13829787234&quot;&gt;
&lt;h3&gt;builtins&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#compile&quot; title=&quot;compile&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;compile()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; built-in has been improved to accept the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/span&gt;&lt;/code&gt; flag. With this new flag passed, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#compile&quot; title=&quot;compile&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;compile()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; will allow top-level &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;await&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;for&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;with&lt;/span&gt;&lt;/code&gt; constructs that are usually considered invalid syntax. Asynchronous code object marked with the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;CO_COROUTINE&lt;/span&gt;&lt;/code&gt; flag may then be returned. (Contributed by Matthias Bussonnier in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue34616&quot;&gt;bpo-34616&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;collections&quot; readability=&quot;9.3076923076923&quot;&gt;
&lt;h3&gt;collections&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;_asdict()&lt;/span&gt;&lt;/code&gt; method for &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot; title=&quot;collections.namedtuple&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;collections.namedtuple()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; now returns a &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot; title=&quot;dict&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;dict&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; instead of a &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/collections.html#collections.OrderedDict&quot; title=&quot;collections.OrderedDict&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;collections.OrderedDict&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. This works because regular dicts have guaranteed ordering since Python 3.7. If the extra features of &lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;OrderedDict&lt;/span&gt;&lt;/code&gt; are required, the suggested remediation is to cast the result to the desired type: &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;OrderedDict(nt._asdict())&lt;/span&gt;&lt;/code&gt;. (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35864&quot;&gt;bpo-35864&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;curses&quot; readability=&quot;6.8502994011976&quot;&gt;
&lt;h3&gt;curses&lt;/h3&gt;
&lt;p&gt;Added a new variable holding structured version information for the underlying ncurses library: &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/curses.html#curses.ncurses_version&quot; title=&quot;curses.ncurses_version&quot;&gt;&lt;code class=&quot;xref py py-data docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ncurses_version&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Serhiy Storchaka in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue31680&quot;&gt;bpo-31680&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;ctypes&quot; readability=&quot;11.017902813299&quot;&gt;
&lt;h3&gt;ctypes&lt;/h3&gt;
&lt;p&gt;On Windows, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/ctypes.html#ctypes.CDLL&quot; title=&quot;ctypes.CDLL&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;CDLL&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and subclasses now accept a &lt;em&gt;winmode&lt;/em&gt; parameter to specify flags for the underlying &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;LoadLibraryEx&lt;/span&gt;&lt;/code&gt; call. The default flags are set to only load DLL dependencies from trusted locations, including the path where the DLL is stored (if a full or partial path is used to load the initial DLL) and paths added by &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.add_dll_directory&quot; title=&quot;os.add_dll_directory&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;add_dll_directory()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Steve Dower in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36085&quot;&gt;bpo-36085&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;section&quot; id=&quot;gc&quot; readability=&quot;6.8645161290323&quot;&gt;
&lt;h3&gt;gc&lt;/h3&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/gc.html#gc.get_objects&quot; title=&quot;gc.get_objects&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;get_objects()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; can now receive an optional &lt;em&gt;generation&lt;/em&gt; parameter indicating a generation to get objects from. (Contributed by Pablo Galindo in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36016&quot;&gt;bpo-36016&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;gettext&quot; readability=&quot;29.75&quot;&gt;
&lt;h3&gt;gettext&lt;/h3&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/gettext.html#gettext.pgettext&quot; title=&quot;gettext.pgettext&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pgettext()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and its variants. (Contributed by Franz Glasner, Éric Araujo, and Cheryl Sabella in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue2504&quot;&gt;bpo-2504&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;gzip&quot; readability=&quot;10.89644012945&quot;&gt;
&lt;h3&gt;gzip&lt;/h3&gt;
&lt;p&gt;Added the &lt;em&gt;mtime&lt;/em&gt; parameter to &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/gzip.html#gzip.compress&quot; title=&quot;gzip.compress&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;gzip.compress()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for reproducible output. (Contributed by Guo Ci Teo in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue34898&quot;&gt;bpo-34898&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;A &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/gzip.html#gzip.BadGzipFile&quot; title=&quot;gzip.BadGzipFile&quot;&gt;&lt;code class=&quot;xref py py-exc docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;BadGzipFile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; exception is now raised instead of &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/exceptions.html#OSError&quot; title=&quot;OSError&quot;&gt;&lt;code class=&quot;xref py py-exc docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;OSError&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for certain types of invalid or corrupt gzip files. (Contributed by Filip Gruszczyński, Michele Orrù, and Zackery Spytz in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue6584&quot;&gt;bpo-6584&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;idlelib-and-idle&quot; readability=&quot;24.19774501301&quot;&gt;
&lt;h3&gt;idlelib and IDLE&lt;/h3&gt;
&lt;p&gt;Output over N lines (50 by default) is squeezed down to a button. N can be changed in the PyShell section of the General page of the Settings dialog. Fewer, but possibly extra long, lines can be squeezed by right clicking on the output. Squeezed output can be expanded in place by double-clicking the button or into the clipboard or a separate window by right-clicking the button. (Contributed by Tal Einat in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue1529353&quot;&gt;bpo-1529353&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Add “Run Customized” to the Run menu to run a module with customized settings. Any command line arguments entered are added to sys.argv. They also re-appear in the box for the next customized run. One can also suppress the normal Shell main module restart. (Contributed by Cheryl Sabella, Terry Jan Reedy, and others in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue5680&quot;&gt;bpo-5680&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue37627&quot;&gt;bpo-37627&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Add optional line numbers for IDLE editor windows. Windows open without line numbers unless set otherwise in the General tab of the configuration dialog. Line numbers for an existing window are shown and hidden in the Options menu. (Contributed by Tal Einat and Saimadhav Heblikar in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue17535&quot;&gt;bpo-17535&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The changes above have been backported to 3.7 maintenance releases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;inspect&quot; readability=&quot;11.467857142857&quot;&gt;
&lt;h3&gt;inspect&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/inspect.html#inspect.getdoc&quot; title=&quot;inspect.getdoc&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;inspect.getdoc()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function can now find docstrings for &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;__slots__&lt;/span&gt;&lt;/code&gt; if that attribute is a &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot; title=&quot;dict&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;dict&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; where the values are docstrings. This provides documentation options similar to what we already have for &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#property&quot; title=&quot;property&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;property()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot; title=&quot;classmethod&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;classmethod()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot; title=&quot;staticmethod&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;staticmethod()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AudioClip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;vm&quot;&gt;__slots__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bit_rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expressed in kilohertz to one decimal place'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;s1&quot;&gt;'duration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'in seconds, rounded up to an integer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit_rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit_rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit_rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1000.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36326&quot;&gt;bpo-36326&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;io&quot; readability=&quot;9.1525423728814&quot;&gt;
&lt;h3&gt;io&lt;/h3&gt;
&lt;p&gt;In development mode (&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/using/cmdline.html#id5&quot;&gt;&lt;code class=&quot;xref std std-option docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-X&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;env&lt;/span&gt;&lt;/code&gt;) and in debug build, the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/io.html#io.IOBase&quot; title=&quot;io.IOBase&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;io.IOBase&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; finalizer now logs the exception if the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;close()&lt;/span&gt;&lt;/code&gt; method fails. The exception is ignored silently by default in release build. (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue18748&quot;&gt;bpo-18748&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;section&quot; id=&quot;math&quot; readability=&quot;21.638655462185&quot;&gt;
&lt;h3&gt;math&lt;/h3&gt;
&lt;p&gt;Added new function &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/math.html#math.dist&quot; title=&quot;math.dist&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;math.dist()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for computing Euclidean distance between two points. (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue33089&quot;&gt;bpo-33089&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Expanded the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/math.html#math.hypot&quot; title=&quot;math.hypot&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;math.hypot()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function to handle multiple dimensions. Formerly, it only supported the 2-D case. (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue33089&quot;&gt;bpo-33089&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Added new function, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/math.html#math.prod&quot; title=&quot;math.prod&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;math.prod()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, as analogous function to &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/functions.html#sum&quot; title=&quot;sum&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;sum()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; that returns the product of a ‘start’ value (default: 1) times an iterable of numbers:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prior&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;likelihoods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;likelihoods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;0.126&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Contributed by Pablo Galindo in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35606&quot;&gt;bpo-35606&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Added new function &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/math.html#math.isqrt&quot; title=&quot;math.isqrt&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;math.isqrt()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; for computing integer square roots. (Contributed by Mark Dickinson in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36887&quot;&gt;bpo-36887&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The function &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/math.html#math.factorial&quot; title=&quot;math.factorial&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;math.factorial()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; no longer accepts arguments that are not int-like. (Contributed by Pablo Galindo in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue33083&quot;&gt;bpo-33083&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;section&quot; id=&quot;os&quot; readability=&quot;27.847049689441&quot;&gt;
&lt;h3&gt;os&lt;/h3&gt;
&lt;p&gt;Added new function &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.add_dll_directory&quot; title=&quot;os.add_dll_directory&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;add_dll_directory()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; on Windows for providing additional search paths for native dependencies when importing extension modules or loading DLLs using &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/ctypes.html#module-ctypes&quot; title=&quot;ctypes: A foreign function library for Python.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ctypes&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Steve Dower in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36085&quot;&gt;bpo-36085&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;A new &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.memfd_create&quot; title=&quot;os.memfd_create&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;os.memfd_create()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function was added to wrap the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;memfd_create()&lt;/span&gt;&lt;/code&gt; syscall. (Contributed by Zackery Spytz and Christian Heimes in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue26836&quot;&gt;bpo-26836&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On Windows, much of the manual logic for handling reparse points (including symlinks and directory junctions) has been delegated to the operating system. Specifically, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.stat&quot; title=&quot;os.stat&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;os.stat()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; will now traverse anything supported by the operating system, while &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.lstat&quot; title=&quot;os.lstat&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;os.lstat()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; will only open reparse points that identify as “name surrogates” while others are opened as for &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.stat&quot; title=&quot;os.stat&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;os.stat()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. In all cases, &lt;code class=&quot;xref py py-attr docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;stat_result.st_mode&lt;/span&gt;&lt;/code&gt; will only have &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;S_IFLNK&lt;/span&gt;&lt;/code&gt; set for symbolic links and not other kinds of reparse points. To identify other kinds of reparse point, check the new &lt;code class=&quot;xref py py-attr docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;stat_result.st_reparse_tag&lt;/span&gt;&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;On Windows, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.readlink&quot; title=&quot;os.readlink&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;os.readlink()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; is now able to read directory junctions. Note that &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.path.html#os.path.islink&quot; title=&quot;os.path.islink&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;islink()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; will return &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;False&lt;/span&gt;&lt;/code&gt; for directory junctions, and so code that checks &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;islink&lt;/span&gt;&lt;/code&gt; first will continue to treat junctions as directories, while code that handles errors from &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/os.html#os.readlink&quot; title=&quot;os.readlink&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;os.readlink()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; may now treat junctions as links.&lt;/p&gt;
&lt;p&gt;(Contributed by Steve Dower in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue37834&quot;&gt;bpo-37834&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;section&quot; id=&quot;pickle&quot; readability=&quot;11.683884297521&quot;&gt;
&lt;h3&gt;pickle&lt;/h3&gt;
&lt;p&gt;Reduction methods can now include a 6th item in the tuple they return. This item should specify a custom state-setting method that’s called instead of the regular &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;__setstate__&lt;/span&gt;&lt;/code&gt; method. (Contributed by Pierre Glaser and Olivier Grisel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35900&quot;&gt;bpo-35900&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/pickle.html#module-pickle&quot; title=&quot;pickle: Convert Python objects to streams of bytes and back.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pickle&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; extensions subclassing the C-optimized &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/pickle.html#pickle.Pickler&quot; title=&quot;pickle.Pickler&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Pickler&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; can now override the pickling logic of functions and classes by defining the special &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/pickle.html#pickle.Pickler.reducer_override&quot; title=&quot;pickle.Pickler.reducer_override&quot;&gt;&lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;reducer_override()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; method. (Contributed by Pierre Glaser and Olivier Grisel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35900&quot;&gt;bpo-35900&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plistlib&quot; readability=&quot;6.9230769230769&quot;&gt;
&lt;h3&gt;plistlib&lt;/h3&gt;
&lt;p&gt;Added new &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/plistlib.html#plistlib.UID&quot; title=&quot;plistlib.UID&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plistlib.UID&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and enabled support for reading and writing NSKeyedArchiver-encoded binary plists. (Contributed by Jon Janzen in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue26707&quot;&gt;bpo-26707&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;section&quot; id=&quot;shutil&quot; readability=&quot;13.333333333333&quot;&gt;
&lt;h3&gt;shutil&lt;/h3&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/shutil.html#shutil.copytree&quot; title=&quot;shutil.copytree&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;shutil.copytree()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; now accepts a new &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;dirs_exist_ok&lt;/span&gt;&lt;/code&gt; keyword argument. (Contributed by Josh Bronson in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue20849&quot;&gt;bpo-20849&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/shutil.html#shutil.make_archive&quot; title=&quot;shutil.make_archive&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;shutil.make_archive()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; now defaults to the modern pax (POSIX.1-2001) format for new archives to improve portability and standards conformance, inherited from the corresponding change to the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/tarfile.html#module-tarfile&quot; title=&quot;tarfile: Read and write tar-format archive files.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;tarfile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module. (Contributed by C.A.M. Gerlach in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue30661&quot;&gt;bpo-30661&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/shutil.html#shutil.rmtree&quot; title=&quot;shutil.rmtree&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;shutil.rmtree()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; on Windows now removes directory junctions without recursively removing their contents first. (Contributed by Steve Dower in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue37834&quot;&gt;bpo-37834&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;section&quot; id=&quot;statistics&quot; readability=&quot;20.262283737024&quot;&gt;
&lt;h3&gt;statistics&lt;/h3&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#statistics.fmean&quot; title=&quot;statistics.fmean&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics.fmean()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; as a faster, floating point variant of &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#statistics.mean&quot; title=&quot;statistics.mean&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics.mean()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Raymond Hettinger and Steven D’Aprano in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35904&quot;&gt;bpo-35904&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#statistics.geometric_mean&quot; title=&quot;statistics.geometric_mean&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics.geometric_mean()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue27181&quot;&gt;bpo-27181&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#statistics.multimode&quot; title=&quot;statistics.multimode&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics.multimode()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; that returns a list of the most common values. (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35892&quot;&gt;bpo-35892&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#statistics.quantiles&quot; title=&quot;statistics.quantiles&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics.quantiles()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; that divides data or a distribution in to equiprobable intervals (e.g. quartiles, deciles, or percentiles). (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36546&quot;&gt;bpo-36546&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/statistics.html#statistics.NormalDist&quot; title=&quot;statistics.NormalDist&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;statistics.NormalDist&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;, a tool for creating and manipulating normal distributions of a random variable. (Contributed by Raymond Hettinger in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36018&quot;&gt;bpo-36018&lt;/a&gt;.)&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;12.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;20&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NormalDist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;6.0&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdev&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;6.356099432828281&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# Chance of being under 3 degrees&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;0.3184678262814532&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Relative chance of being 7 degrees versus 10 degrees&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1.2039930378537762&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;el_niño&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NormalDist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el_niño&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# Add in a climate effect&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;NormalDist(mu=10.0, sigma=6.830080526611674)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# Convert to Fahrenheit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;NormalDist(mu=50.0, sigma=12.294144947901014)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature_feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# Generate random samples&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[7.672102882379219, 12.000027119750287, 4.647488369766392]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;sys&quot; readability=&quot;9.71875&quot;&gt;
&lt;h3&gt;sys&lt;/h3&gt;
&lt;p&gt;Add new &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/sys.html#sys.unraisablehook&quot; title=&quot;sys.unraisablehook&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;sys.unraisablehook()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; function which can be overridden to control how “unraisable exceptions” are handled. It is called when an exception has occurred but there is no way for Python to handle it. For example, when a destructor raises an exception or during garbage collection (&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/gc.html#gc.collect&quot; title=&quot;gc.collect&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;gc.collect()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;). (Contributed by Victor Stinner in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36829&quot;&gt;bpo-36829&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;tarfile&quot; readability=&quot;11.430267062315&quot;&gt;
&lt;h3&gt;tarfile&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/tarfile.html#module-tarfile&quot; title=&quot;tarfile: Read and write tar-format archive files.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;tarfile&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module now defaults to the modern pax (POSIX.1-2001) format for new archives, instead of the previous GNU-specific one. This improves cross-platform portability with a consistent encoding (UTF-8) in a standardized and extensible format, and offers several other benefits. (Contributed by C.A.M. Gerlach in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36268&quot;&gt;bpo-36268&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;section&quot; id=&quot;tokenize&quot; readability=&quot;8.3544303797468&quot;&gt;
&lt;h3&gt;tokenize&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/tokenize.html#module-tokenize&quot; title=&quot;tokenize: Lexical scanner for Python source code.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;tokenize&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module now implicitly emits a &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;NEWLINE&lt;/span&gt;&lt;/code&gt; token when provided with input that does not have a trailing new line. This behavior now matches what the C tokenizer does internally. (Contributed by Ammar Askar in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue33899&quot;&gt;bpo-33899&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;tkinter&quot; readability=&quot;14&quot;&gt;
&lt;h3&gt;tkinter&lt;/h3&gt;
&lt;p&gt;Added methods &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;selection_from()&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;selection_present()&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;selection_range()&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;selection_to()&lt;/span&gt;&lt;/code&gt; in the &lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;tkinter.Spinbox&lt;/span&gt;&lt;/code&gt; class. (Contributed by Juliette Monsel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue34829&quot;&gt;bpo-34829&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Added method &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;moveto()&lt;/span&gt;&lt;/code&gt; in the &lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;tkinter.Canvas&lt;/span&gt;&lt;/code&gt; class. (Contributed by Juliette Monsel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue23831&quot;&gt;bpo-23831&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;tkinter.PhotoImage&lt;/span&gt;&lt;/code&gt; class now has &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;transparency_get()&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;transparency_set()&lt;/span&gt;&lt;/code&gt; methods. (Contributed by Zackery Spytz in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue25451&quot;&gt;bpo-25451&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;section&quot; id=&quot;typing&quot; readability=&quot;5.6675951717734&quot;&gt;
&lt;h3&gt;typing&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#module-typing&quot; title=&quot;typing: Support for type hints (see :pep:`484`).&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module incorporates several new features:&lt;/p&gt;
&lt;ul readability=&quot;7.6411012782694&quot;&gt;&lt;li readability=&quot;1.8481848184818&quot;&gt;
&lt;p&gt;A dictionary type with per-key types. See &lt;span class=&quot;target&quot; id=&quot;index-15&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0589&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.TypedDict&quot; title=&quot;typing.TypedDict&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.TypedDict&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. TypedDict uses only string keys. By default, every key is required to be present. Specify “total=False” to allow keys to be optional:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TypedDict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lat_long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tuple&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;grid_square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xy_coordinate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tuple&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Literal types. See &lt;span class=&quot;target&quot; id=&quot;index-16&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0586&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.Literal&quot; title=&quot;typing.Literal&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.Literal&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. Literal types indicate that a parameter or return value is constrained to one or more specific literal values:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Literal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'connected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'disconnected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;5.1680672268908&quot;&gt;
&lt;p&gt;“Final” variables, functions, methods and classes. See &lt;span class=&quot;target&quot; id=&quot;index-17&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0591&quot;&gt;&lt;strong&gt;PEP 591&lt;/strong&gt;&lt;/a&gt;, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.Final&quot; title=&quot;typing.Final&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.Final&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.final&quot; title=&quot;typing.final&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.final()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. The final qualifier instructs a static type checker to restrict subclassing, overriding, or reassignment:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1415926536&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.55102040816327&quot;&gt;
&lt;p&gt;Protocol definitions. See &lt;span class=&quot;target&quot; id=&quot;index-18&quot;/&gt;&lt;a class=&quot;pep reference external&quot; href=&quot;https://www.python.org/dev/peps/pep-0544&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;, &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.Protocol&quot; title=&quot;typing.Protocol&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.Protocol&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.runtime_checkable&quot; title=&quot;typing.runtime_checkable&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.runtime_checkable()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. Simple ABCs like &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.SupportsInt&quot; title=&quot;typing.SupportsInt&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.SupportsInt&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; are now &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Protocol&lt;/span&gt;&lt;/code&gt; subclasses.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.5&quot;&gt;
&lt;p&gt;New protocol class &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.SupportsIndex&quot; title=&quot;typing.SupportsIndex&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.SupportsIndex&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.35714285714286&quot;&gt;
&lt;p&gt;New functions &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.get_origin&quot; title=&quot;typing.get_origin&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.get_origin()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/typing.html#typing.get_args&quot; title=&quot;typing.get_args&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;typing.get_args()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;unicodedata&quot; readability=&quot;11.501538461538&quot;&gt;
&lt;h3&gt;unicodedata&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unicodedata.html#module-unicodedata&quot; title=&quot;unicodedata: Access the Unicode Database.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;unicodedata&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module has been upgraded to use the &lt;a class=&quot;reference external&quot; href=&quot;http://blog.unicode.org/2019/05/unicode-12-1-en.html&quot;&gt;Unicode 12.1.0&lt;/a&gt; release.&lt;/p&gt;
&lt;p&gt;New function &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unicodedata.html#unicodedata.is_normalized&quot; title=&quot;unicodedata.is_normalized&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;is_normalized()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; can be used to verify a string is in a specific normal form, often much faster than by actually normalizing the string. (Contributed by Max Belanger, David Euresti, and Greg Price in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue32285&quot;&gt;bpo-32285&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue37966&quot;&gt;bpo-37966&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;unittest&quot; readability=&quot;14.921471172962&quot;&gt;
&lt;h3&gt;unittest&lt;/h3&gt;
&lt;p&gt;Added &lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;AsyncMock&lt;/span&gt;&lt;/code&gt; to support an asynchronous version of &lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Mock&lt;/span&gt;&lt;/code&gt;. Appropriate new assert functions for testing have been added as well. (Contributed by Lisa Roach in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue26467&quot;&gt;bpo-26467&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Added &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unittest.html#unittest.addModuleCleanup&quot; title=&quot;unittest.addModuleCleanup&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;addModuleCleanup()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.addClassCleanup&quot; title=&quot;unittest.TestCase.addClassCleanup&quot;&gt;&lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;addClassCleanup()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; to unittest to support cleanups for &lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;setUpModule()&lt;/span&gt;&lt;/code&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUpClass&quot; title=&quot;unittest.TestCase.setUpClass&quot;&gt;&lt;code class=&quot;xref py py-meth docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;setUpClass()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Lisa Roach in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue24412&quot;&gt;bpo-24412&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Several mock assert functions now also print a list of actual calls upon failure. (Contributed by Petter Strandmark in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue35047&quot;&gt;bpo-35047&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot; title=&quot;unittest: Unit testing framework for Python.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;unittest&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module gained support for coroutines to be used as test cases with &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase&quot; title=&quot;unittest.IsolatedAsyncioTestCase&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;unittest.IsolatedAsyncioTestCase&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;. (Contributed by Andrew Svetlov in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue32972&quot;&gt;bpo-32972&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight-python3 notranslate&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;unittest&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unittest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsolatedAsyncioTestCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;asyncSetUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AsyncConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://example.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assertEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;asyncTearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;unittest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;venv&quot; readability=&quot;7.3846153846154&quot;&gt;
&lt;h3&gt;venv&lt;/h3&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/venv.html#module-venv&quot; title=&quot;venv: Creation of virtual environments.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;venv&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; now includes an &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Activate.ps1&lt;/span&gt;&lt;/code&gt; script on all platforms for activating virtual environments under PowerShell Core 6.1. (Contributed by Brett Cannon in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue32718&quot;&gt;bpo-32718&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;weakref&quot; readability=&quot;7.04&quot;&gt;
&lt;h3&gt;weakref&lt;/h3&gt;
&lt;p&gt;The proxy objects returned by &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/weakref.html#weakref.proxy&quot; title=&quot;weakref.proxy&quot;&gt;&lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;weakref.proxy()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; now support the matrix multiplication operators &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;@&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;@=&lt;/span&gt;&lt;/code&gt; in addition to the other numeric operators. (Contributed by Mark Dickinson in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36669&quot;&gt;bpo-36669&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;xml&quot; readability=&quot;18.132113821138&quot;&gt;
&lt;h3&gt;xml&lt;/h3&gt;
&lt;p&gt;As mitigation against DTD and external entity retrieval, the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/xml.dom.minidom.html#module-xml.dom.minidom&quot; title=&quot;xml.dom.minidom: Minimal Document Object Model (DOM) implementation.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;xml.dom.minidom&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/xml.sax.html#module-xml.sax&quot; title=&quot;xml.sax: Package containing SAX2 base classes and convenience functions.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;xml.sax&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; modules no longer process external entities by default. (Contributed by Christian Heimes in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue17239&quot;&gt;bpo-17239&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;.find*()&lt;/span&gt;&lt;/code&gt; methods in the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree&quot; title=&quot;xml.etree.ElementTree: Implementation of the ElementTree API.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;xml.etree.ElementTree&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module support wildcard searches like &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;{*}tag&lt;/span&gt;&lt;/code&gt; which ignores the namespace and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;{namespace}*&lt;/span&gt;&lt;/code&gt; which returns all tags in the given namespace. (Contributed by Stefan Behnel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue28238&quot;&gt;bpo-28238&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree&quot; title=&quot;xml.etree.ElementTree: Implementation of the ElementTree API.&quot;&gt;&lt;code class=&quot;xref py py-mod docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;xml.etree.ElementTree&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module provides a new function &lt;code class=&quot;xref py py-func docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;–xml.etree.ElementTree.canonicalize()&lt;/span&gt;&lt;/code&gt; that implements C14N 2.0. (Contributed by Stefan Behnel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue13611&quot;&gt;bpo-13611&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The target object of &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser&quot; title=&quot;xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;xml.etree.ElementTree.XMLParser&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; can receive namespace declaration events through the new callback methods &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;start_ns()&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;end_ns()&lt;/span&gt;&lt;/code&gt;. Additionally, the &lt;a class=&quot;reference internal&quot; href=&quot;https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder&quot; title=&quot;xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code class=&quot;xref py py-class docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;xml.etree.ElementTree.TreeBuilder&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; target can be configured to process events about comments and processing instructions to include them in the generated tree. (Contributed by Stefan Behnel in &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36676&quot;&gt;bpo-36676&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;https://bugs.python.org/issue36673&quot;&gt;bpo-36673&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 14 Oct 2019 20:54:05 +0000</pubDate>
<dc:creator>supakeen</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.python.org/3/whatsnew/3.8.html</dc:identifier>
</item>
<item>
<title>AWS&amp;#039; Sponsorship of the Rust Project</title>
<link>https://aws.amazon.com/jp/blogs/opensource/aws-sponsorship-of-the-rust-project/</link>
<guid isPermaLink="true" >https://aws.amazon.com/jp/blogs/opensource/aws-sponsorship-of-the-rust-project/</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-3942&quot; src=&quot;https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2019/09/20/rust-social-wide-1024x512.jpg&quot; alt=&quot;Rust language logo.&quot; width=&quot;1024&quot; height=&quot;512&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We’re really excited to announce that AWS is sponsoring the &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust programming language&lt;/a&gt;! Rust is designed for writing and maintaining fast, reliable, and efficient code. It has seen considerable uptake since its first stable release four years ago, with companies like &lt;a href=&quot;https://fuchsia.googlesource.com/fuchsia/&quot;&gt;Google&lt;/a&gt;, &lt;a href=&quot;https://msrc-blog.microsoft.com/2019/07/22/why-rust-for-safe-systems-programming/&quot;&gt;Microsoft&lt;/a&gt;, and &lt;a href=&quot;https://hacks.mozilla.org/2019/01/fearless-security-memory-safety/&quot;&gt;Mozilla&lt;/a&gt; all using Rust. Rust has also seen lots of growth in AWS, with services such as Lambda, EC2, and S3 all choosing to use Rust in performance-sensitive components. We’ve even open sourced the &lt;a href=&quot;https://firecracker-microvm.github.io&quot;&gt;Firecracker microVM&lt;/a&gt; project!&lt;/p&gt;
&lt;h2&gt;Why Rust?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/#language-values&quot;&gt;In the words&lt;/a&gt; of the Rust project’s maintainers:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;. Rust is blazingly fast and memory-efficient: with no runtime or garbage collector, it can power performance-critical services, run on embedded devices, and easily integrate with other languages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reliability&lt;/strong&gt;. Rust’s rich type system and ownership model guarantee memory-safety and thread-safety — and enable you to eliminate many classes of bugs at compile-time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Productivity&lt;/strong&gt;. Rust has great documentation, a friendly compiler with useful error messages, and top-notch tooling — an integrated package manager and build tool, smart multi-editor support with auto-completion and type inspections, an auto-formatter, and more.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;With its &lt;a href=&quot;https://www.rust-lang.org/community#conduct&quot;&gt;inclusive community&lt;/a&gt; and top-notch libraries like:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://serde.rs/&quot;&gt;Serde&lt;/a&gt;, for serializing and deserializing data.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rayon-rs/rayon&quot;&gt;Rayon&lt;/a&gt;, for writing parallel &amp;amp; data race-free code.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tokio-rs/tokio&quot;&gt;Tokio&lt;/a&gt;/&lt;a href=&quot;https://github.com/async-rs/async-std&quot;&gt;async-std&lt;/a&gt;, for writing non-blocking, low-latency network services.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tokio-rs/tracing&quot;&gt;tracing&lt;/a&gt;, for instrumenting Rust programs to collect structured, event-based diagnostic information.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;…it’ll come as no surprise that Rust was voted &lt;a href=&quot;https://insights.stackoverflow.com/survey/2019#technology-_-most-loved-dreaded-and-wanted-languages&quot;&gt;Stack Overflow’s “Most Loved Language” four years running&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That’s why AWS is sponsoring the Rust project. The Rust project uses AWS services to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Store release artifacts such as compilers, libraries, tools, and source code on S3.&lt;/li&gt;
&lt;li&gt;Run ecosystem-wide regression tests with &lt;a href=&quot;https://github.com/rust-lang/crater&quot;&gt;Crater&lt;/a&gt; on EC2.&lt;/li&gt;
&lt;li&gt;Operate &lt;a href=&quot;https://docs.rs&quot;&gt;docs.rs&lt;/a&gt;, a website that hosts documentation for all packages published to the central &lt;a href=&quot;https://crates.io&quot;&gt;crates.io&lt;/a&gt; package registry.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Getting started with Rust&lt;/h2&gt;
&lt;p&gt;To get started with the Rust programming language, check out Rust’s “&lt;a href=&quot;https://www.rust-lang.org/learn&quot;&gt;Getting Started&lt;/a&gt;” page. To get started with Rust on AWS, consider using &lt;a href=&quot;https://github.com/rusoto/rusoto&quot;&gt;Rusoto&lt;/a&gt;, a community-driven AWS SDK. To use Rust on AWS Lambda, consider using the official &lt;a href=&quot;https://aws.amazon.com/blogs/opensource/rust-runtime-for-aws-lambda/&quot;&gt;AWS Lambda Runtime for Rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While we’re using Rust, we’re especially excited to see how it develops and what the broader community builds with Rust. We can’t wait to be an even bigger part of the Rust community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ps&lt;/strong&gt; – &lt;a href=&quot;https://aws.amazon.com/blogs/opensource/aws-promotional-credits-open-source-projects/&quot;&gt;AWS credits are available for other open source projects!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;div class=&quot;blog-tag-list&quot;&gt;TAGS: &lt;span property=&quot;keywords&quot;&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/opensource/tag/rust/&quot; rel=&quot;tag&quot;&gt;Rust&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;blog-author-box&quot; property=&quot;author&quot; typeof=&quot;Person&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;blog-author-image&quot;&gt;&lt;img alt=&quot;David Barsky&quot; src=&quot;https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2019/09/19/me.jpg&quot; width=&quot;125&quot; property=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;h3 class=&quot;lb-h4&quot; property=&quot;name&quot;&gt;David Barsky&lt;/h3&gt;
&lt;p property=&quot;description&quot;&gt;David Barsky is an engineer at Amazon. You can follow him on Twitter (@endsofthreads).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;blog-author-box&quot; property=&quot;author&quot; typeof=&quot;Person&quot; readability=&quot;46&quot;&gt;
&lt;div class=&quot;blog-author-image&quot;&gt;&lt;img alt=&quot;Arun Gupta&quot; src=&quot;https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2017/12/07/arun.png&quot; width=&quot;125&quot; property=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;h3 class=&quot;lb-h4&quot; property=&quot;name&quot;&gt;Arun Gupta&lt;/h3&gt;
&lt;p property=&quot;description&quot;&gt;Arun Gupta is a Principal Open Source Technologist at Amazon Web Services. He focuses on everything containers and open source at AWS. He is responsible for CNCF strategy within AWS, and participates at CNCF Board and technical meetings actively. He has built and led developer communities for 12+ years at Sun, Oracle, Red Hat and Couchbase. He has extensive speaking experience in more than 40 countries on myriad topics and is a JavaOne Rock Star for four years in a row. Gupta also founded the Devoxx4Kids chapter in the US and continues to promote technology education among children. A prolific blogger, author of several books, an avid runner, a globe trotter, a Docker Captain, a Java Champion, a JUG leader, NetBeans Dream Team member, he is easily accessible at @arungupta.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;blog-author-box&quot; property=&quot;author&quot; typeof=&quot;Person&quot; readability=&quot;35&quot;&gt;
&lt;div class=&quot;blog-author-image&quot;&gt;&lt;img alt=&quot;Jacob Peddicord&quot; src=&quot;https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/03/05/jacob_peddicord.jpg&quot; width=&quot;125&quot; property=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;h3 class=&quot;lb-h4&quot; property=&quot;name&quot;&gt;Jacob Peddicord&lt;/h3&gt;
&lt;p property=&quot;description&quot;&gt;Jacob Peddicord is an engineer in Amazon's Open Source Program Office. He builds tools to help make open source easier to navigate and helps developers release their own open source software. Jacob thinks Rust is a pretty cool programming language and asserts that skiboards are the best snowsport. You can find him on Twitter at @jpeddicord.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 14 Oct 2019 18:10:42 +0000</pubDate>
<dc:creator>GolDDranks</dc:creator>
<og:title>AWS’ Sponsorship of the Rust Project | Amazon Web Services</og:title>
<og:type>article</og:type>
<og:url>https://aws.amazon.com/blogs/opensource/aws-sponsorship-of-the-rust-project/</og:url>
<og:description>We’re really excited to announce that AWS is sponsoring the Rust programming language! Rust is designed for writing and maintaining fast, reliable, and efficient code. It has seen considerable uptake since its first stable release four years ago, with companies like Google, Microsoft, and Mozilla all using Rust. Rust has also seen lots of growth […]</og:description>
<og:image>https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2019/09/20/rust-social-wide.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/jp/blogs/opensource/aws-sponsorship-of-the-rust-project/</dc:identifier>
</item>
<item>
<title>Pharma companies continue to raise drug prices at rates well above inflation</title>
<link>https://arstechnica.com/science/2019/10/new-drug-pricing-data-shows-stunning-hikes-one-whopping-667-increase/</link>
<guid isPermaLink="true" >https://arstechnica.com/science/2019/10/new-drug-pricing-data-shows-stunning-hikes-one-whopping-667-increase/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/02/GettyImages-450348697-800x533.jpg&quot; alt=&quot;New drug-pricing data shows stunning hikes—one whopping 667% increase&quot;/&gt;&lt;aside id=&quot;social-left&quot; class=&quot;social-left&quot; aria-label=&quot;Read the comments or share this article&quot;&gt;
&lt;h4 class=&quot;comment-count-before&quot;&gt;&lt;a title=&quot;62 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/science/2019/10/new-drug-pricing-data-shows-stunning-hikes-one-whopping-667-increase/?comments=1&quot;&gt;reader comments&lt;/a&gt;&lt;/h4&gt;
&lt;a title=&quot;62 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/science/2019/10/new-drug-pricing-data-shows-stunning-hikes-one-whopping-667-increase/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-number&quot;&gt;106&lt;/span&gt; &lt;span class=&quot;visually-hidden&quot;&gt;with 62 posters participating&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;
&lt;h4&gt;Share this story&lt;/h4&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;Pharmaceutical companies continue to raise prices on hundreds of drugs at rates well over that of inflation, &lt;a href=&quot;https://oshpd.ca.gov/visualizations/prescription-drug-wholesale-acquisition-cost-increases/&quot;&gt;according to a newly released report on drug-pricing data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The data was made public thanks to a mandate from a California transparency law passed in 2017. Under the law, drug makers are required to report their price increases quarterly. This is the first report from the law and includes data on drugs that had price increases of 16% or more over their January 2017 prices.&lt;/p&gt;
&lt;p&gt;The hikes in these cases are to the wholesale acquisition cost, which is the list price for wholesalers—they may not reflect how much patients will pay out of pocket. Still, they can add to overall healthcare spending and drive up the costs of insurance.&lt;/p&gt;
&lt;p&gt;Under the 2017 law, drug makers are also required to provide reasons as to why they’re driving up costs.&lt;/p&gt;
&lt;p&gt;Between 2017 and the first quarter of 2019, drug makers reported hundreds of price hikes. The report focuses on trends for a little over a thousand drugs. The median price increase overall was 25.8%. Generic drugs, specifically, had higher increases, with a median rise of 37.6%.&lt;/p&gt;
&lt;p&gt;But some drugs stood out for having exorbitant hikes, &lt;a href=&quot;https://www.latimes.com/business/story/2019-10-11/californias-new-transparency-law-shows-staggering-rise-in-wholesale-drug-prices&quot;&gt;as Kaiser Health News pointed out&lt;/a&gt;. A liquid version of generic Prozac (fluoxetine) went from $9 to $69 just in the first quarter of 2019—a 667% increase. The reason given was new production costs.&lt;/p&gt;
&lt;p&gt;Likewise, a generic medication for attention deficit hyperactivity disorder (ADHD) called guanfacine, went from about $29 to $87 in the first quarter of 2019, a more than 200% increase.&lt;/p&gt;
&lt;p&gt;Guanfacine’s maker, Amneal Pharmaceuticals, also listed production costs as a reason for the hike, as well as “market conditions.”&lt;/p&gt;
&lt;p&gt;The data shows that “even at a time when there is a microscope on this industry, [drug makers are] going ahead with drug price increases for hundreds of drugs well above the rate of inflation,” Anthony Wright told KHN. Wright is the executive director of the California advocacy group Health Access.&lt;/p&gt;
&lt;p&gt;Wright noted that the new reporting offers progress toward making drug pricing transparent. But critics note that it still doesn’t reveal the true reasons drug makers are raising prices—whether there are drug shortages or changes in competition—and what the changes mean for patients.&lt;/p&gt;
&lt;p&gt;The reporting also faces challenges. The drug-maker industry group, PhRMA, has &lt;a href=&quot;https://www.documentcloud.org/documents/6440510-PHRMA-v-California-SB-17-COMPLAINT-12-8-17.html&quot;&gt;filed a lawsuit&lt;/a&gt; to overturn California’s law. And earlier this month, the state of &lt;a href=&quot;https://thenevadaindependent.com/article/nevada-levies-17-million-in-fines-on-drug-companies-for-noncompliance-with-diabetes-drug-transparency-law&quot;&gt;Nevada issued fines&lt;/a&gt; on drug makers for failing to comply with its drug pricing law, which passed in 2017.&lt;/p&gt;

</description>
<pubDate>Mon, 14 Oct 2019 17:15:52 +0000</pubDate>
<dc:creator>pera</dc:creator>
<og:url>https://arstechnica.com/science/2019/10/new-drug-pricing-data-shows-stunning-hikes-one-whopping-667-increase/</og:url>
<og:title>New drug-pricing data shows stunning hikes—one whopping 667% increase</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2019/02/GettyImages-450348697-760x380.jpg</og:image>
<og:description>One listed reason for raising prices was &quot;market conditions.&quot;</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/science/2019/10/new-drug-pricing-data-shows-stunning-hikes-one-whopping-667-increase/</dc:identifier>
</item>
<item>
<title>Uber lays off around 350 more across Eats, self-driving and other departments</title>
<link>https://techcrunch.com/2019/10/14/uber-lays-off-another-350-across-eats-self-driving-and-other-departments/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/10/14/uber-lays-off-another-350-across-eats-self-driving-and-other-departments/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;Uber has just laid off around 350 employees across a variety of teams within the organization, marking what the company says is its third and final phase of layoffs of the process it began earlier this year, Uber CEO Dara Khosrowshahi said to employees today in an email obtained by TechCrunch (full email below). Those affected include employees from Eats, performance marketing, Advanced Technologies Group and recruiting, as well as various teams within the global rides and platform departments. Some employees have also been asked to relocate.&lt;/p&gt;
&lt;p&gt;“Days like today are tough for us all, and the ELT and I will do everything we can to make certain that we won’t need or have another day like this ahead of us,” Khosrowshahi wrote in the email. “We all have to play a part by establishing a new normal in how we work: identifying and eliminating duplicate work, upholding high standards for performance, giving direct feedback and taking action when expectations aren’t being met, and eliminating the bureaucracy that tends to creep as companies grow.”&lt;/p&gt;
&lt;p&gt;In total, the layoffs represent about 1% of the company, an Uber spokesperson told TechCrunch. All of this comes about one month after Uber &lt;a href=&quot;https://techcrunch.com/2019/09/10/uber-lays-off-435-people-across-engineering-and-product-teams/&quot;&gt;laid off 435 employees across its product and engineering teams&lt;/a&gt; and less than three months after &lt;a href=&quot;https://techcrunch.com/2019/07/29/uber-lays-off-400-employees-as-part-of-marketing-team-restructuring/&quot;&gt;Uber laid off about 400 people from its marketing team&lt;/a&gt;. At this point, most departments at Uber have been affected by layoffs.&lt;/p&gt;
&lt;p&gt;For Uber’s self-driving car unit, this is its first round of layoffs since it &lt;a href=&quot;https://techcrunch.com/2019/04/18/uber-atg-1-billion-toyota-denso-vision-fund-spin-out/&quot;&gt;spun out into its own unit earlier this year&lt;/a&gt;. Uber has &lt;a href=&quot;https://www.bizjournals.com/pittsburgh/news/2019/07/25/regions-self-driving-car-companies-say-they-cant.html&quot;&gt;previously said&lt;/a&gt; the team consists of more than 1,200 people and today still employs more than 1,200, despite the layoffs. according to an Uber spokesperson. Based on the terms of ATG’s $1 billion fundraising round in April, the unit is worth $7.25 billion on a post-money basis.&lt;/p&gt;
&lt;p&gt;More than 70% of those affected in this round of layoffs are based in the U.S. and Canada, and the rest are relatively evenly distributed across APAC, Latin America and EMEA. Uber notified those affected this morning.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://techcrunch.com/2019/09/10/uber-lays-off-435-people-across-engineering-and-product-teams/&quot;&gt;As TechCrunch previously reported&lt;/a&gt;, these layoffs are a result of Khosrowshahi asking every member of his executive leadership team if they were to start from scratch, would their respective organizations look the way they do?&lt;/p&gt;
&lt;p&gt;“As you know, over the past few months, our leaders have looked carefully at their teams to ensure our organizations are structured for success for the next few years,” Khosrowshahi wrote to employees. “This has resulted in difficult but necessary changes to ensure we have the right people in the right roles in the right locations, and that we’re always holding ourselves accountable to top performance.”&lt;/p&gt;
&lt;p&gt;In Q2 2019, Uber lost more than $5 billion — its biggest quarterly revenue loss to date — though a chunk of its losses were a result of stock-based compensation expenses for employees following the company’s IPO in May.&lt;/p&gt;
&lt;p&gt;In other parts of Uber’s business, it’s continuing to invest money in ensuring its drivers remain 1099 independent contractors. Already, &lt;a href=&quot;https://techcrunch.com/2019/08/29/uber-and-lyft-are-putting-60-million-toward-keeping-drivers-independent-contractors/&quot;&gt;Uber, along with Lyft and DoorDash&lt;/a&gt;, put $30 million toward a 2020 ballot initiative that would enable them to keep their drivers as independent contractors. In light of gig worker protection bill AB-5 passing in the California State Senate and Assembly, &lt;a href=&quot;https://techcrunch.com/2019/09/11/uber-ab-5-independent-contractors/&quot;&gt;Uber Chief Legal Officer Tony West made it clear&lt;/a&gt; the company was willing to invest more money into that campaign initiative. California Governor Gavin Newsom has since &lt;a href=&quot;https://techcrunch.com/2019/09/18/california-governor-gavin-newsom-signs-gig-worker-bill-ab5-into-law/&quot;&gt;signed that bill into law&lt;/a&gt;, which goes into effect January 1, 2020.&lt;/p&gt;
&lt;p&gt;While West said he believes Uber would pass the test and prove its drivers are properly classified, there would surely be a financial impact if Uber fails the test. West did not comment on what that impact could be, but industry analysts have estimated a change in classification for drivers could result in up to a 30% cost increase.&lt;/p&gt;
&lt;p&gt;Uber will report its Q3 earnings on November 4. The company is currently trading at $31.26 per share, which is well below its IPO pricing of $45.&lt;/p&gt;
&lt;p&gt;Below is Khosrowshahi’s full email with the subject line, “Stronger moving forward”:&lt;/p&gt;
&lt;blockquote readability=&quot;51&quot;&gt;
&lt;p dir=&quot;ltr&quot;&gt;Team Uber,&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;As you know, over the past few months, our leaders have looked carefully at their teams to ensure our organizations are structured for success for the next few years. This has resulted in difficult but necessary changes to ensure we have the right people in the right roles in the right locations, and that we’re always holding ourselves accountable to top performance.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Today is the last wave of a process we began months ago with our Marketing team, and more recently, with our Product and Engineering teams. This time, ATG, Eats, Global Rides and Platform (Rides Ops, CommOps, Safety &amp;amp; Insurance, U4B, and Product Ops), Performance Marketing, and Recruiting have made changes. As part of this exercise, some of our employees are being asked to relocate, and around 350 will be leaving the company.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Days like today are tough for us all, and the ELT and I will do everything we can to make certain that we won’t need or have another day like this ahead of us. We all have to play a part by establishing a new normal in how we work: identifying and eliminating duplicate work, upholding high standards for performance, giving direct feedback and taking action when expectations aren’t being met, and eliminating the bureaucracy that tends to creep as companies grow.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;We have proven ourselves to be not only one of the most ambitious and innovative companies in the world, but also one of the most resilient. We’ve always pushed through tough times and come out the other side a better and stronger company—that will continue to be true tomorrow, and every day after.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;As always, we’ll be at the All Hands tomorrow and will dedicate most of the time to answer your questions. Add yours to the slido here.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Eyes forward—back to building.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Dara&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Mon, 14 Oct 2019 17:15:12 +0000</pubDate>
<dc:creator>coloneltcb</dc:creator>
<og:title>Uber lays off another ~350 across Eats, self-driving and other departments – TechCrunch</og:title>
<og:description>Uber has just laid off around 350 employees across a variety of teams within the organization, marking what the company says is its third and final phase of layoffs of the process it began earlier this year, Uber CEO Dara Khosrowshahi said to employees today in an email obtained by TechCrunch (full…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/09/Uber-Event.jpg?w=685</og:image>
<og:url>http://social.techcrunch.com/2019/10/14/uber-lays-off-another-350-across-eats-self-driving-and-other-departments/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/10/14/uber-lays-off-another-350-across-eats-self-driving-and-other-departments/</dc:identifier>
</item>
<item>
<title>Reversing Safeway&amp;#039;s private APIs to automate coupon collection</title>
<link>https://blog.jonlu.ca/posts/safeway?ref=hn</link>
<guid isPermaLink="true" >https://blog.jonlu.ca/posts/safeway?ref=hn</guid>
<description>&lt;p&gt;Safeway is an American supermarket chain that has historically had a pretty comprehensive coupon program. They somewhat recently tried to modernize their offerings (as they were founded in 1915, and are pretty much the definition of “old guard” companies), by allowing online coupons. This brought what used to be a painstaking process of clipping coupons from magazines to a slightly less painful process of having to click “Add” on all the coupons every week after logging onto their site.&lt;/p&gt;
&lt;p&gt;I’m not particularly invested in couponing, but figured with so many coupons offered and how often I need to get groceries, it might be interesting to explore automating adding all the coupons. It probabl won’t be worthwhile in the long run, but at the very least it should provide for an interesting afternoon.&lt;/p&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;You’re able to automatically add coupons to your Safeway account (“just for U”) online at &lt;code class=&quot;highlighter-rouge&quot;&gt;https://www.safeway.com/justforu/coupons-deals.html&lt;/code&gt;.&lt;/p&gt;
&lt;img alt=&quot;Safeway offers&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_offers.png&quot;/&gt;
&lt;p&gt;Navigating to the coupon page lets you see 30 coupons. At the bottom there is a “Load more” button, which will load an additional 30 coupons.&lt;/p&gt;
&lt;img alt=&quot;Safeway add&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_add.png&quot;/&gt;
&lt;p&gt;I assumed that it was requesting the new coupons from some API, with a page parameter, but the network tab was suspiciously empty every time I clicked “Load More”.&lt;/p&gt;
&lt;h2 id=&quot;getting-all-the-coupons&quot;&gt;Getting all the coupons&lt;/h2&gt;
&lt;p&gt;It turns out that the coupon page makes a request to &lt;code class=&quot;highlighter-rouge&quot;&gt;https://www.safeway.com/abs/pub/web/j4u/api/ecomgallery?offerPgm=PD-CC&amp;amp;storeId=3031&amp;amp;transformOfferbyUpc=y&lt;/code&gt; when it’s your first time on the site, and stores them in &lt;code class=&quot;highlighter-rouge&quot;&gt;localstorage&lt;/code&gt; on subsequent requests. This loads all the coupons (over 340 for me) on first page load.&lt;/p&gt;
&lt;p&gt;Unfortunately this is not a completely open URL, so you’ll need to have a valid “API” key (that is included in the first authenticated request to the page) to be able to access it.&lt;/p&gt;
&lt;img alt=&quot;Safeway Coupons&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_comp.png&quot;/&gt;
&lt;p&gt;Each of these coupons have specific information related to it:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot; readability=&quot;33.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;62&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1769990482&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;priceType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;88&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.safeway.com/CMS/j4u/offers/images/5_dollars_off.gif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerPrice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$5 OFF&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*Standard exclusions apply.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;U&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;startDate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1570644000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endDate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10/15/2019&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerTs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1570554250722&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;usageType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;O&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerPgm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;purchaseInd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extlOfferId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2588K4119_760013&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerProvider&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NextGenAutoLoadStoreCpns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;imageId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5_dollars_off.gif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hierarchies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;categories&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Special Offers&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$5 Off Your Purchase of $50 or More&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1769990482&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;disclaimer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Save $5 when you spend $50 or more in qualifying purchases in a single transaction using your just for U® account ($50 minimum purchase calculated after deduction of promotional and loyalty card savings, coupons and all other discounts, offers and savings). Offer is valid 10/09/2019 - 10/15/2019 only at participating Safeway stores located in Northern California and Western Nevada. Qualifying purchases exclude: alcoholic beverages, tobacco products, fluid dairy, fuel, prescription items and co-payments, fishing/hunting licenses and tags, postage stamps, money orders/transfers, bus/commuter passes, amusement park/ski/event/lottery tickets, phone cards, gift cards/certificates and applicable taxes, bottle/container deposits and bag fees.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;priceTitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Special Offer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;limits&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;O&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;categoryType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Special Offers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;purchaseRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;arrivalRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;expiryRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;deleted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;category&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Special Offers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;isGroupSplit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;updBtnText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Added&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;updBtnMode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;usageTypeTxt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;One time use&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;couponID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1769990482&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;brand&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$5 Off Your Purchase of $50 or More&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;newOfferPrice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Special Offer $5 OFF&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;refineBrand&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$5 Off Your Purchase of $50 or More&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;refineDescription&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*Standard exclusions apply.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There would be two paths forward to make this automatable - either go through the sign in procedure in a headless browser like &lt;code class=&quot;highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt;, and then just dump &lt;code class=&quot;highlighter-rouge&quot;&gt;localStorage.getItem('abCoupons')&lt;/code&gt;, like so:&lt;/p&gt;
&lt;img alt=&quot;Safeway local storage&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_local.png&quot;/&gt;
&lt;p&gt;The other way would be to reverse their authentication route and make the request directly using raw requests. Once we get the API token, then we can make requests directly to the above endpoint. This would be a much more reproducible (and faster) way of accomplishing the goal, so we’ll stick to this way.&lt;/p&gt;
&lt;p&gt;First we’ll explore how to add coupons to our account, and then connect it all together to make it fully automated.&lt;/p&gt;
&lt;h2 id=&quot;adding-a-coupon-to-your-account&quot;&gt;Adding a coupon to your account&lt;/h2&gt;
&lt;p&gt;Fortunately reversing the add coupon functionality is fairly trivial. Clicking “Add” fires off a &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; request to &lt;code class=&quot;highlighter-rouge&quot;&gt;https://www.safeway.com/abs/pub/web/j4u/api/offers/clip&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;storeId&lt;/code&gt; as a URL parameter.&lt;/p&gt;
&lt;img alt=&quot;Safeway add coupon&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_add_coupon.png&quot;/&gt;
&lt;p&gt;The body of the request is, interestingly enough, the same ID with two &lt;code class=&quot;highlighter-rouge&quot;&gt;clipType&lt;/code&gt;s. I’m not entirely sure what &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;L&lt;/code&gt; stand for, but it seems they’re the same for any coupon type or category.&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;clipType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;itemId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;169451067&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;itemType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PD&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;clipType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;L&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;itemId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;169451067&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;itemType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PD&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;From here it’s easy to convert the request into code. My preferred way is to right click -&amp;gt; Copy as cURL, then use a tool like &lt;a href=&quot;https://curl.trillworks.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;curlconverter&lt;/a&gt; to turn it into python:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'abc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'abc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Cookies omitted due to session
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# headers omitted due to session 
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'storeId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'my_store_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;items&quot;:[{&quot;clipType&quot;:&quot;C&quot;,&quot;itemId&quot;:&quot;836190395&quot;,&quot;itemType&quot;:&quot;PD&quot;},{&quot;clipType&quot;:&quot;L&quot;,&quot;itemId&quot;:&quot;836190395&quot;,&quot;itemType&quot;:&quot;PD&quot;}]}'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.safeway.com/abs/pub/web/j4u/api/offers/clip'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After playing around with it, I figured out that you only needed two headers, and &lt;em&gt;none of the cookies&lt;/em&gt;, to successfully add a coupon to your account - the &lt;code class=&quot;highlighter-rouge&quot;&gt;SWY_SSO_TOKEN&lt;/code&gt; header, and &lt;code class=&quot;highlighter-rouge&quot;&gt;'Content-Type': 'application/json'&lt;/code&gt; to designate the content type of the request.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SWY_SSO_TOKEN&lt;/code&gt; is actually a &lt;a href=&quot;https://jwt.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;jwt&lt;/a&gt; with the following format:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot; readability=&quot;21&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jti&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;iss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://albertsons.okta.com/oauth2/&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;aud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Albertsons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;iat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1570908253&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;exp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1570910953&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;uid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;used_credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;offline_access&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;openid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;profile&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;zip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my zip code&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my email address&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dnm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my name&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;aln&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;gid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ecc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fnm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my name&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lnm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my name&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;uuid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jpr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ban&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;safeway&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;str&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my store id&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;phn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;my phone number&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We can’t construct our own JWTs as we don’t have their signing secret, but it’s interesting nonetheless.&lt;/p&gt;
&lt;p&gt;Cleaning up the code a little and it looks like this:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;15.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;26&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;



&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_coupon_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'SWY_SSO_TOKEN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;SWY_SSO_TOKEN&amp;gt; jwt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'storeId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{&quot;items&quot;:[{&quot;clipType&quot;:&quot;C&quot;,&quot;itemId&quot;:&quot;${id}&quot;,&quot;itemType&quot;:&quot;${type}&quot;},{&quot;clipType&quot;:&quot;L&quot;,&quot;itemId&quot;:&quot;${id}&quot;,&quot;itemType&quot;:&quot;${type}&quot;}]}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;substitute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.safeway.com/abs/pub/web/j4u/api/offers/clip'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;add_coupon_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;836190395&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This looks like an atomic action, and calling clip multiple times doesn’t perform any state changes.&lt;/p&gt;
&lt;h2 id=&quot;adding-all-coupons&quot;&gt;Adding all coupons&lt;/h2&gt;
&lt;p&gt;To start I just dumped the JSON object containing all the coupon offers into the test python file and iterated over it like so:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coupons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'offers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;add_coupon_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This worked really well. It turns out there are also two ways offers are stored - by regular coupon ID, like above, and then by UPC, so you need to make sure to do both.&lt;/p&gt;
&lt;p&gt;These are stored as UPC keys with an array of offers.&lt;/p&gt;
&lt;img alt=&quot;Safeway upc&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_upc.png&quot;/&gt;
&lt;p&gt;If you know the UPC of an item you’re following, it would be pretty easy to add functionality that shows you all offers for that item.&lt;/p&gt;
&lt;p&gt;After running my script (which took a little over a minute), I refreshed the page and saw that all the offers had been added.&lt;/p&gt;
&lt;img alt=&quot;Safeway all added&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_added.png&quot;/&gt;
&lt;h2 id=&quot;reversing-the-auth-api&quot;&gt;Reversing the Auth API&lt;/h2&gt;
&lt;p&gt;The last step of the process is to find a way to generate &lt;code class=&quot;highlighter-rouge&quot;&gt;SWY_SSO_TOKEN&lt;/code&gt; programmatically, so it can all be done in one function (and run on a cron job).&lt;/p&gt;
&lt;img alt=&quot;Safeway auth flow&quot; class=&quot;centered-image&quot; src=&quot;https://blog.jonlu.ca/images/safeway_add_coupon.png&quot;/&gt;
&lt;p&gt;Upon filling in your credentials and hitting enter, the auth flow seems to function as follows:&lt;/p&gt;
&lt;ol readability=&quot;7.5&quot;&gt;&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;The browser fires an &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIONS&lt;/code&gt; request to &lt;code class=&quot;highlighter-rouge&quot;&gt;https://albertsons.okta.com/api/v1/authn&lt;/code&gt;. Since we’re doing this programmatically, we don’t need to worry about this (as it’s for cross origin request safety, a browser safety feature). The best part of this is that they’re actually using Okta, as their auth, more info on this later.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The browser fires a &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; request with a body of &lt;code class=&quot;highlighter-rouge&quot;&gt;{username: &quot;&amp;lt;email&amp;gt;&quot;, password: &quot;&amp;lt;password&amp;gt;&quot;}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The browser fires a &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; request to &lt;code class=&quot;highlighter-rouge&quot;&gt;https://albertsons.okta.com/oauth2/&lt;/code&gt; with the state from the previous request.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The browser fires a &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; request to the static redirect URL, which is &lt;code class=&quot;highlighter-rouge&quot;&gt;https://shop.safeway.com/bin/safeway/sso/authorize?code=&amp;lt;code&amp;gt;&amp;amp;state=&amp;lt;state&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;That route replies back with &lt;code class=&quot;highlighter-rouge&quot;&gt;Set-Cookie&lt;/code&gt; that sets our &lt;code class=&quot;highlighter-rouge&quot;&gt;SWY_SSO_TOKEN&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The interesting thing about (2) is there is no unique token or requirements on the route - all you need to do is set the &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt; and the request will go through:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;username&quot;:&quot;&amp;lt;email&amp;gt;&quot;,&quot;password&quot;:&quot;&amp;lt;password&amp;gt;&quot;}'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://albertsons.okta.com/api/v1/authn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This replies back with:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;expiresAt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-10-12T20:56:08.000Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SUCCESS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sessionToken&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;session token&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;_embedded&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;id&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;passwordChanged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-09-18T01:51:47.000Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;profile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;email&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;firstName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;firstname&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lastName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;lastname&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;locale&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;timeZone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;America/Los_Angeles&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;_links&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cancel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://albertsons.okta.com/api/v1/authn/cancel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hints&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;allow&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The great part of all this is that there’s no guessing involved - this is actually the Okta auth flow, which is &lt;a href=&quot;https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-public-application&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;heavily documented on their own site&lt;/a&gt;. The last part of this is to just take this session and pass it along with the static application ID to the last okta, along with the static redirect URL.&lt;/p&gt;
&lt;p&gt;Since this is just using okta’s sign in flow, we can play around with the parameters and authorization type - instead of a &lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt; response, we could accept a bearer token instead.&lt;/p&gt;
&lt;p&gt;Having a bearer token lets us hit their &lt;code class=&quot;highlighter-rouge&quot;&gt;nimbus&lt;/code&gt; API directly. I extracted the raw API route by man-in-the-middle-ing myself on iOS and used BurpSuite to find the route, but I’ll skip that section for brevity. Just know that all the above remains true, I’ll just be hitting their mobile API first instead (which is hosted on &lt;code class=&quot;highlighter-rouge&quot;&gt;nimbus.safeway.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All it takes to authenticate is the following code:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'albertsons.okta.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Accept'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Authorization'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Basic &amp;lt;basic auth&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Accept-Encoding'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'gzip, deflate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Accept-Language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'en-us'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'application/x-www-form-urlencoded'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'charset'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'username=&amp;lt;username&amp;gt;&amp;amp;password=&amp;lt;password&amp;gt;&amp;amp;grant_type=password&amp;amp;scope=openid profile offline_access'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://https://albertsons.okta.com/oauth2/ausp6soxrIyPrm8rS2p6/v1/token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;ausp6soxrIyPrm8rS2p6&lt;/code&gt; is the ID okta assigned to Safeway.&lt;/p&gt;
&lt;p&gt;The response has a &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; that can be used to authenticate as myself against their raw API.&lt;/p&gt;
&lt;p&gt;The final request to their Nimbus API will look like:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'swyConsumerDirectoryPro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;same bearer token&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'nimbus.safeway.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Authorization'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Bearer &amp;lt;same bearer token&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'storeId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;store id&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://nimbus.safeway.com/emmd/service/gallery/offer/mfg&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The response format is slightly different for mobile, but still has all the requisite information (specifically, we need our store ID, the &lt;code class=&quot;highlighter-rouge&quot;&gt;offerPgm&lt;/code&gt;, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;couponID&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot; readability=&quot;28&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;51&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;errors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;resultCount&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;326&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;manufacturerCoupons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;priceType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;priceSubType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.safeway.com/CMS/j4u/offers/images/440/979440_95beddb0-deab-4943-84f4-30c4a7b1fafc.gif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerPrice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SAVE $1.00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on ONE (1) StonyfieldÂ® Organic Kids Multipacks, Tubes or Pouches (4pk or larger)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;startDate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Date(1569866400000)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endDate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/Date(1572544800000)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerTs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1569341944086&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;usageType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;O&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerPgm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MF&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offerSubPgm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;09&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;purchaseInd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;L&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;commonPromoCodes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;categoryRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;clipTs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;redemptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;couponID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1116974738&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;brand&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;StonyfieldÂ® Organic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;generalDisclaimer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Not subject to doubling. Void if sold, reproduced, altered, or expired and wherever taxed, regulated, restricted or prohibited by law. Limit one coupon per purchase of specified product(s). Consumer pays applicable sales tax. Coupon may not be combined with any other offer. Coupons not properly redeemed will be voided. Retailer: For each coupon accepted as an authorized agent we will pay you the face value of the coupon plus 8 cents handling. Invoices proving purchase of sufficient stock to cover all coupons redeemed must be shown upon request. Cash value 1/20 cent. Redeem by mail to: Stonyfield Farm, Inc., CMS Dept. # 52159, One Fawcett Drive, Del Rio, TX 78840. Void in LA &amp;amp; NV.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;category&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Dairy, Eggs &amp;amp; Cheese&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;vndrBannerCd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2bbf4b36-a75e-11e6-80f5-76304dec7eb7#C&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;purchaseRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;arrivalRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;expiryRank&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This returns all the coupons for a given store, which allows me to use the code from above to completely automate the process. I use the response from this code block to populate all the calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;add_coupon_by_id&lt;/code&gt;, and now it’s a closed loop system!&lt;/p&gt;
&lt;h2 id=&quot;automating-it&quot;&gt;Automating it&lt;/h2&gt;
&lt;p&gt;I saved all this in a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;safeway_coupons&lt;/code&gt;, that I set up in a cron job. I threw it up on one of my personal production boxes and have it run every night at midnight with &lt;code class=&quot;highlighter-rouge&quot;&gt;0 0 * * * /usr/bin/python3 ~/safeway_coupons&lt;/code&gt;. Tada! Every day all my coupons are synced and added automatically, and I don’t need to think about it when I go to the store. Whatever coupons I may have will be applied automatically when I check out, and I don’t need any of the mental overhead of couponing (especially since I’m not someone that “needs” to get the best deal - if what I’m buying has a coupon then great, but I’m not going to change my purchases based on coupons)&lt;/p&gt;
&lt;h3 id=&quot;bonus-speeding-things-up&quot;&gt;Bonus: Speeding things up&lt;/h3&gt;
&lt;p&gt;It took nearly a minute to make 300 network requests - this was way too slow. I was running the code in a linear fashion - we only make the request to add the next coupon once the first has completed.&lt;/p&gt;
&lt;p&gt;I reused a thread pool from one of my previous articles (&lt;a href=&quot;https://blog.jonlu.ca/posts/safeway?ref=hn&quot;&gt;cs&lt;/a&gt;), as below:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;14.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;24&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Thread executing tasks from a given tasks queue &quot;&quot;&quot;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;daemon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kargs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# An exception happened in this thread
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Mark this task as done, whether an exception happened or not
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task_done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Pool of threads consuming tasks from a queue &quot;&quot;&quot;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_threads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_threads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_threads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Add a task to the queue &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Add a list of tasks to the queue &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wait_completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Wait for completion of all the tasks in the queue &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And then wrote a quick wrapper to the above function (since Python mapping doesn’t support multiple arguments without using partial 🙄).&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_coupon_by_id_wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;add_coupon_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coupons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'offers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coupons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'offers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'offerPgm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_coupon_by_id_wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait_completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now the entire function runs in about 5 seconds, which is much better!&lt;/p&gt;
&lt;p&gt;Comments on &lt;a href=&quot;https://www.reddit.com/r/jonluca/comments/dhshj3/reversing_private_apis_safeway_and_notsoextreme/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;reddit&lt;/a&gt; and &lt;a href=&quot;https://news.ycombinator.com/item?id=21250421&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;hackernews&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 14 Oct 2019 17:08:52 +0000</pubDate>
<dc:creator>jonluca</dc:creator>
<og:image>https://blog.jonlu.ca/images/safeway_added.png</og:image>
<og:title>Reversing private APIs, Safeway, and not-so-extreme couponing</og:title>
<og:description>Safeway is an American supermarket chain that has historically had a pretty comprehensive coupon program. They somewhat recently tried to modernize their offerings (as they were founded in 1915, and are pretty much the definition of “old guard” companies), by allowing online coupons. This brought what used to be a painstaking process of clipping coupons from magazines to a slightly less painful process of having to click “Add” on all the coupons every week after logging onto their site.</og:description>
<og:url>https://blog.jonlu.ca/posts/safeway</og:url>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jonlu.ca/posts/safeway?ref=hn</dc:identifier>
</item>
<item>
<title>Making the Tokio scheduler 10x faster</title>
<link>https://tokio.rs/blog/2019-10-scheduler/</link>
<guid isPermaLink="true" >https://tokio.rs/blog/2019-10-scheduler/</guid>
<description>&lt;p class=&quot;tk-date&quot;&gt;October 13, 2019&lt;/p&gt;
&lt;p&gt;We’ve been hard at work on the next major revision of Tokio, Rust’s asynchronous runtime. Today, a complete rewrite of the scheduler has been submitted as a &lt;a href=&quot;https://github.com/tokio-rs/tokio/pull/1657&quot;&gt;pull request&lt;/a&gt;. The result is huge performance and latency improvements. Some benchmarks saw a 10x speed up! It is always unclear how much these kinds of improvements impact “full stack” use cases, so we’ve also tested how these scheduler improvements impacted use cases like &lt;a href=&quot;https://github.com/hyperium/hyper/&quot;&gt;Hyper&lt;/a&gt; and &lt;a href=&quot;https://github.com/hyperium/tonic&quot;&gt;Tonic&lt;/a&gt; (spoiler: it’s really good).&lt;/p&gt;
&lt;p&gt;In preparation for working on the new scheduler, I spent time searching for resources on scheduler implementations. Besides existing implementations, I did not find much. I also found the source of existing implementations difficult to navigate. To remedy this, I tried to keep Tokio’s new scheduler implementation as clean as possible. I also am writing this detailed article on implementing the scheduler in hope that others in similar positions find it useful.&lt;/p&gt;
&lt;p&gt;The article starts with a high level overview of scheduler design, including work-stealing schedulers. It then gets into the details of specific optimizations made in the new Tokio scheduler.&lt;/p&gt;
&lt;p&gt;The optimizations covered are:&lt;/p&gt;
&lt;p&gt;The major theme is “reduce.” After all, there is no code faster than no code!&lt;/p&gt;
&lt;p&gt;The article also covers &lt;a href=&quot;https://tokio.rs/blog/2019-10-scheduler/#fearless-unsafe-concurrency-with-loom&quot;&gt;testing the new scheduler&lt;/a&gt;. Writing correct, concurrent, lock-free code is really hard. It is better to be slow and correct than fast and buggy, especially if those bugs relate to memory safety. The best option, however, is to be fast &lt;em&gt;and&lt;/em&gt; correct, so we wrote &lt;a href=&quot;https://github.com/carllerche/loom/&quot;&gt;&lt;code&gt;loom&lt;/code&gt;&lt;/a&gt;, a tool for testing concurrency.&lt;/p&gt;
&lt;p&gt;Before jumping in, I want to extend some gratitude.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/withoutboats&quot;&gt;@withoutboats&lt;/a&gt;&lt;/strong&gt; and others who worked on Rust’s &lt;code&gt;async / await&lt;/code&gt; feature. You did a great job. It is a killer feature.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/cramertj&quot;&gt;@cramertj&lt;/a&gt;&lt;/strong&gt; and others who designed &lt;code&gt;std::task&lt;/code&gt;. It is a huge improvement compared to what we had before. Also, a great job there.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://buoyant.io/&quot;&gt;Buoyant&lt;/a&gt;&lt;/strong&gt;, the makers of &lt;a href=&quot;https://linkerd.io/&quot;&gt;Linkerd&lt;/a&gt;, and more importantly my employer. Thanks for letting me spend so much time on this work. Readers who are in need of a service mesh, check out &lt;a href=&quot;https://linkerd.io/&quot;&gt;Linkerd&lt;/a&gt;. It will soon include all the goodness discussed in this article.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/golang/go/blob/2df5cdbadf5fbcb23f017c9f00b75dc341a69adf/src/runtime/proc.go&quot;&gt;Go&lt;/a&gt;&lt;/strong&gt; for having such a good scheduler implementation.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Grab a cup of coffee and get yourselves comfortable. This is going to be a long article.&lt;/p&gt;
&lt;h2 id=&quot;schedulers-how-do-they-work&quot;&gt;Schedulers, how do they work?&lt;/h2&gt;
&lt;p&gt;The role of a scheduler is to schedule work. An application is broken up into units of work, which we will call &lt;em&gt;tasks&lt;/em&gt;. A task is &lt;em&gt;runnable&lt;/em&gt; when it can make progress, and is no longer runnable (or &lt;em&gt;idle&lt;/em&gt;) when it is blocked on an external resource. Tasks are independent in that any number of runnable tasks can execute concurrently. The scheduler is responsible for executing tasks in the running state until they transition back to idle. Executing a task implies assigning CPU time – a global resource – to the task.&lt;/p&gt;
&lt;p&gt;The article discusses user-space schedulers, i.e., schedulers that run on top of operating system threads (which, in turn, are powered by a kernel land scheduler). The Tokio scheduler executes Rust futures, which can be though of as “asynchronous green threads”. This is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Thread_(computing)#M:N_(hybrid_threading)&quot;&gt;M:N threading&lt;/a&gt; pattern where many user land tasks are multiplexed on a few operating system threads.&lt;/p&gt;
&lt;p&gt;There are many different ways of modeling a scheduler, each with pros and cons. At the most basic level, the scheduler can be modeled as a &lt;em&gt;run queue&lt;/em&gt; and a &lt;em&gt;processor&lt;/em&gt; that drains the queue. A processor is a bit of code that runs on a thread. In pseudocode, it does:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;while let Some(task) = self.queue.pop() {
    task.run();
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When a task becomes runnable, it is inserted into the run queue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tokio.rs/img/diagrams/sched-diagrams/gen_sched.png&quot; alt=&quot;Scheduling loop&quot;/&gt;&lt;/p&gt;
&lt;p&gt;While it is possible to design a system where resources, tasks, and the processor all exist on a single thread, Tokio chooses to use multiple threads. We live in a world where computers come with many CPUs. Designing a single-threaded scheduler would result in hardware underutilization. We want to use all of our CPUs. There are a few ways to do this:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;One global run queue, many processors.&lt;/li&gt;
&lt;li&gt;Many processors, each with their own run queue.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;one-queue-many-processors&quot;&gt;One queue, many processors&lt;/h3&gt;
&lt;p&gt;In this model, there is a single, global, run queue. When tasks become runnable, they are pushed onto the tail of the queue. There are multiple processors, each running on a separate thread. Each processor pops from the head of the queue, blocking the thread if no task is available.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tokio.rs/img/diagrams/sched-diagrams/thread_pool.png&quot; alt=&quot;Single queue scheduler&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The run queue must support both multiple producers and multiple consumers. The commonly used algorithm is an &lt;a href=&quot;https://stackoverflow.com/questions/5004162/what-does-it-mean-for-a-data-structure-to-be-intrusive&quot;&gt;intrusive&lt;/a&gt; linked list. Intrusive implies that the task structure includes a pointer to the next task in the run queue instead of wrapping the task with a linked list node. This way, allocations are avoided for push and pop operations. It is possible to use a &lt;a href=&quot;http://www.1024cores.net/home/lock-free-algorithms/queues/intrusive-mpsc-node-based-queue&quot;&gt;lock-free push operation&lt;/a&gt; but popping requires a mutex to coordinate consumers.&lt;/p&gt;
&lt;p&gt;However, in practice the overhead needed to correctly avoid locks is greater than just using a mutex.&lt;/p&gt;
&lt;p&gt;This approach is commonly used when implementing a general-purpose thread pool, as it has several advantages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Tasks are scheduled fairly.&lt;/li&gt;
&lt;li&gt;The implementation is relatively simple. An off-the-shelf queue can be paired with the processor loop sketched above.&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;A quick note on fairness. Scheduling fairness means that tasks are scheduled first-in, first-out. Tasks that are transitioned to running first are executed first. General purpose schedulers try to be fair, but there are use cases, like parallelizing a computation using fork-join, where the only important factor is how fast the end result is computed and not the fairness of each individual sub task.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This scheduler model has a downside. All processors contend on the head of the queue. For general-purpose thread pools, this usually is not a deal breaker. The amount of time processors spend executing the task far outweighs the amount of time spent popping the task from the run queue. When tasks execute for a long period of time, queue contention is reduced. However, Rust’s asynchronous tasks are expected to take very little time executing when popped from the run queue. In this scenario, the overhead from contending on the queue becomes significant.&lt;/p&gt;
&lt;h3 id=&quot;concurrency-and-mechanical-sympathy&quot;&gt;Concurrency and mechanical sympathy.&lt;/h3&gt;
&lt;p&gt;To get the best runtime performance out of a program, we must design it to take advantage of how the hardware operates. The term “mechanical sympathy” was applied to software by &lt;a href=&quot;https://mechanical-sympathy.blogspot.com&quot;&gt;Martin Thompson&lt;/a&gt; (whose blog, while no longer updated, still contains much relevant knowledge).&lt;/p&gt;
&lt;p&gt;A detailed discussion of how modern hardware handles concurrency is out of scope for this article. At a 10,000 foot view, hardware is gaining more performance not by going faster, but by making more CPU cores available to an application (my laptop has 6!). Each core can perform large amounts of computation in tiny periods of time. Relatively speaking, actions like cache and memory accesses takes &lt;a href=&quot;https://www.prowesscorp.com/computer-latency-at-a-human-scale/&quot;&gt;much longer&lt;/a&gt;. Therefore, for applications to be fast, we must maximize the amount of CPU instructions per memory access. While the compiler can do a lot of work for us, as developers, we do need to think about things like struct layout and memory access patterns.&lt;/p&gt;
&lt;p&gt;When it comes to concurrent threads, behavior is pretty similar to a single thread &lt;strong&gt;until&lt;/strong&gt; concurrent mutations happen to the same cache line or &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Sequentially-consistent_ordering&quot;&gt;sequential consistency&lt;/a&gt; is requested. Then, the &lt;a href=&quot;https://en.wikipedia.org/wiki/MESI_protocol&quot;&gt;CPU’s cache coherence protocol&lt;/a&gt; will have to start working to ensure that each CPU’s cache stays up to date.&lt;/p&gt;
&lt;p&gt;This is all to say the obvious: avoid cross thread synchronization as much as possible because it is slow.&lt;/p&gt;
&lt;h3 id=&quot;many-processors-each-with-their-own-run-queue&quot;&gt;Many processors, each with their own run queue&lt;/h3&gt;
&lt;p&gt;Another way to model a scheduler is to use multiple single-threaded schedulers. Each processor gets its own run queue and tasks are pinned to a specific processor. This avoids the problem of synchronization entirely. As Rust’s task model requires the ability to queue a task from any thread, there still needs to be a thread-safe way to inject tasks into the scheduler. Either each processor’s run queue supports a thread-safe push operation (MPSC) or each processor has &lt;strong&gt;two&lt;/strong&gt; run queues: an unsynchronized queue and a thread-safe queue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tokio.rs/img/diagrams/sched-diagrams/sharded.png&quot; alt=&quot;Sharded scheduler&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This is the strategy used by &lt;a href=&quot;http://seastar.io/&quot;&gt;Seastar&lt;/a&gt;. Because synchronization is almost entirely avoided, this strategy can be very fast. However, it’s not a silver bullet. Unless the workload is entirely uniform, some processors will become idle while other processors are under load, resulting in resource underutilization. This happens because tasks are pinned to a specific processor. When a bunch of tasks on a single processor are scheduled in a batch, that single processor is responsible for working through the spike even if other procesors are idle.&lt;/p&gt;
&lt;p&gt;Most “real world” workloads are not uniform. Because of this, general purpose schedulers tend to avoid this model.&lt;/p&gt;
&lt;h3 id=&quot;work-stealing-scheduler&quot;&gt;Work-stealing scheduler&lt;/h3&gt;
&lt;p&gt;The work-stealing scheduler builds upon the sharded scheduler model and addresses the underutilization problem. Each processor maintains its own run queue. Tasks that become runnable are pushed onto the current processor’s run queue and processors drain their local run queue. However, when a processor becomes idle, it checks sibling processor run queues and attempts to steal from them. A processor will go to sleep only once it fails to find work from sibling run queues.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tokio.rs/img/diagrams/sched-diagrams/work_stealing.png&quot; alt=&quot;Work-stealing scheduler&quot;/&gt;&lt;/p&gt;
&lt;p&gt;At the model level, this is a “best of both worlds” approach. Under load, processors operate independently, avoiding synchronization overhead. In cases where the load is not evenly distributed across processors, the scheduler is able to redistribute. Because of this characteristic, the work-stealing scheduler is the choice of &lt;a href=&quot;https://github.com/golang/go/blob/2df5cdbadf5fbcb23f017c9f00b75dc341a69adf/src/runtime/proc.go&quot;&gt;Go&lt;/a&gt;, &lt;a href=&quot;https://github.com/erlang/otp/blob/17845f5a18f43b16ecafd1a9f9d289fddee54afd/erts/emulator/beam/erl_process.c&quot;&gt;Erlang&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html&quot;&gt;Java&lt;/a&gt;, and others.&lt;/p&gt;
&lt;p&gt;The downside is this approach is far more complicated; the run queue algorithm must support the stealing operation and &lt;strong&gt;some&lt;/strong&gt; cross processor synchronization is required to keep things running smoothly. If not done correctly, the overhead to implement the work-stealing model can be greater than the benefits gained.&lt;/p&gt;
&lt;p&gt;Consider this case: Processor A is currently running a task and has an empty run queue. Processor B is idle; it tries to steal tasks and fails, so it goes to sleep. Then, the task being executed by processor A spawns 20 tasks. The goal would be for processor B to wake up and steal some of those newly spawned tasks. To achieve this, the work-stealing scheduler requires some heuristic where processors signal sleeping sibling processors when they observe new work in their queue. Of course, this introduces additional synchronization, so this operation must be minimized.&lt;/p&gt;
&lt;p&gt;In summary:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Minimizing synchronization is good.&lt;/li&gt;
&lt;li&gt;Work-stealing is the algorithm of choice for general purpose schedulers.&lt;/li&gt;
&lt;li&gt;Each processor is mostly independent, but some synchronization is required for stealing.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;the-tokio-0-1-scheduler&quot;&gt;The Tokio 0.1 scheduler&lt;/h2&gt;
&lt;p&gt;Tokio first shipped its work-stealing scheduler in &lt;a href=&quot;https://tokio.rs/blog/2018-03-tokio-runtime/&quot;&gt;March 2018&lt;/a&gt;. This was a first attempt based on some assumptions that turned out to be incorrect.&lt;/p&gt;
&lt;p&gt;First, the Tokio 0.1 scheduler assumed that processor threads should be shut down if idle for a certain period of time. The scheduler was originally intended to be a “general purpose” thread-pool executor for Rust futures. When the scheduler was first written, Tokio was still in the “tokio-core” days. At this point, the model was that I/O-based tasks would be executed on a single thread colocated with the I/O selector (epoll, kqueue, iocp, …). More CPU bound work could be punted to a thread-pool. In this context, the number of active threads should be flexible and shutting down idle threads makes more sense. However, the model shifted to running &lt;em&gt;all&lt;/em&gt; async tasks on the work-stealing scheduler, in which case it makes more sense to keep a small number of threads always active.&lt;/p&gt;
&lt;p&gt;Second, it used the &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam&quot;&gt;crossbeam&lt;/a&gt; deque implementation. This implementation is based on the &lt;a href=&quot;https://www.dre.vanderbilt.edu/~schmidt/PDF/work-stealing-dequeue.pdf&quot;&gt;Chase-Lev deque&lt;/a&gt;, which, for reasons described below, is not a good fit for the use case of scheduling independent asynchronous tasks.&lt;/p&gt;
&lt;p&gt;Third, the implementation was over-complicated. This is due, in part, to this being my first scheduler implementation. Also, I was over eager in using atomics in code paths where a mutex would have done just fine. An important lesson learned is that there are many cases where mutexes are the best option.&lt;/p&gt;
&lt;p&gt;Finally, the original implementation contained many small inefficiencies. The details of Rust’s asynchronous model evolved significantly in the early years, yet libraries maintained API stability over those years. This resulted in some debt being accumulated that can now be payed back.&lt;/p&gt;
&lt;p&gt;With tokio approaching its first major breaking release, we can pay all of that debt with the lessons learned over those years. It’s an exciting time!&lt;/p&gt;
&lt;h2 id=&quot;the-next-generation-tokio-scheduler&quot;&gt;The next generation Tokio scheduler&lt;/h2&gt;
&lt;p&gt;Now it is time to dig into what changed in the new scheduler.&lt;/p&gt;
&lt;h3 id=&quot;the-new-task-system&quot;&gt;The new task system&lt;/h3&gt;
&lt;p&gt;First, its important to highlight something &lt;strong&gt;not&lt;/strong&gt; part of Tokio, but is critical to some of the achieved gains: the &lt;a href=&quot;https://doc.rust-lang.org/std/task/index.html&quot;&gt;new task system&lt;/a&gt; included in &lt;code&gt;std&lt;/code&gt;, designed primarily by &lt;a href=&quot;https://github.com/cramertj&quot;&gt;Taylor Cramer&lt;/a&gt;. This system provides the hooks that a scheduler must implement to execute Rust asynchronous tasks, and it is really well done. It is both much lighter and more flexible then the previous iteration.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Waker&lt;/code&gt; struct is held by resources and is used to signal that a task is &lt;em&gt;runnable&lt;/em&gt; and be pushed into the scheduler’s run queue. In the new task system, the &lt;code&gt;Waker&lt;/code&gt; struct is two pointers wide, when it used to be much bigger. Shrinking the size is important to minimize the overhead of copying the &lt;code&gt;Waker&lt;/code&gt; value around, as well as taking less space in structs, allowing for more critical data to fit in the cache line. The custom &lt;a href=&quot;https://doc.rust-lang.org/std/task/struct.RawWakerVTable.html&quot;&gt;vtable&lt;/a&gt; design enables a number of optimizations which will be discussed later.&lt;/p&gt;
&lt;h3 id=&quot;a-better-run-queue&quot;&gt;A better run queue&lt;/h3&gt;
&lt;p&gt;The run queue is at the heart of the scheduler. As such, it is probably the most critical component to get right. The original Tokio scheduler used &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam&quot;&gt;crossbeam&lt;/a&gt;’s deque implementation, which is single-producer, multi-consumer deque. Tasks are pushed onto one end and values are popped from the other. Most of the time, the thread that pushes the value will pop it, however, other threads will occasionally “steal” by popping the value themselves. The deque is backed by an array and a set of indices tracking the head and tail. When the deque is full, pushing onto it will result in growing the storage. A new, larger, array is allocated and values are moved into the new store.&lt;/p&gt;
&lt;p&gt;The ability for the deque to grow comes at a complexity and overhead cost. The push / pop operations must factor in this growth. Additionally, on growth, freeing the original array comes with additional difficulties. In a garbage collected language, the old array would go out of scope, and eventually the GC would free it. However, Rust does not come with a GC. This means we are responsible for freeing the array, but threads may be in the process of accessing the memory concurrently. Crossbeam’s answer to this is to use an &lt;a href=&quot;https://aturon.github.io/blog/2015/08/27/epoch/#epoch-based-reclamation&quot;&gt;epoch based reclamation strategy&lt;/a&gt;. While not &lt;strong&gt;terribly&lt;/strong&gt; expensive, it does add non-trivial overhead in the hot path. Every operation must now issue atomic RMW (read-modify-write) operations when entering and exiting the critical sections to signal to other threads that the memory is in use and to avoid freeing.&lt;/p&gt;
&lt;p&gt;Because of the cost associated with growing the run queue, it’s worth investigating if growing the queue is even a requirement. This question is what ended up spurring the rewrite of the scheduler. The new scheduler’s strategy is to use a fixed size per-process queue. When the queue is full, instead of growing the local queue, the task is pushed into a global, multi-consumer, multi-producer, queue. Processors will need to occasionally check this global queue, but at a much less frequent rate than the local queue.&lt;/p&gt;
&lt;p&gt;An early experiment replaced the crossbeam queue with a bounded &lt;a href=&quot;http://www.1024cores.net/home/lock-free-algorithms/queues/bounded-mpmc-queue&quot;&gt;mpmc&lt;/a&gt; queue. This did not result in much improvement due to the amount of synchronization performed by both push and pop. A key thing to remember about the work-stealing use case is that, under load, there is almost no contention on the queues since each processor only accesses its own queue.&lt;/p&gt;
&lt;p&gt;At this point, I opted to read the Go source closer, and discovered they used a fixed size single-producer, multi-consumer queue. The impressive thing about this queue is how little synchronization is needed for it to function. I ended up adapting the algorithm for use in the Tokio scheduler, making a few changes. Notably, the Go implementation uses sequential consistency for its atomic operations (based on my limited knowledge of Go). The version implemented as part of the Tokio scheduler also reduces some copying in less frequent code paths.&lt;/p&gt;
&lt;p&gt;The queue implementation is a circular buffer, using an array to store values. Atomic integers are used to track the head and tail positions.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;struct Queue {
    /// Concurrently updated by many threads.
    head: AtomicU32,

    /// Only updated by producer thread but read by many threads.
    tail: AtomicU32,

    /// Masks the head / tail position value to obtain the index in the buffer.
    mask: usize,

    /// Stores the tasks.
    buffer: Box&amp;lt;[MaybeUninit&amp;lt;Task&amp;gt;]&amp;gt;,
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Pushing into the queue is done by a single thread:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;loop {
    let head = self.head.load(Acquire);

    // safety: this is the **only** thread that updates this cell.
    let tail = self.tail.unsync_load();

    if tail.wrapping_sub(head) &amp;lt; self.buffer.len() as u32 {
        // Map the position to a slot index.
        let idx = tail as usize &amp;amp; self.mask;

        // Don't drop the previous value in `buffer[idx]` because
        // it is uninitialized memory.
        self.buffer[idx].as_mut_ptr().write(task);

        // Make the task available
        self.tail.store(tail.wrapping_add(1), Release);

        return;
    }

    // The local buffer is full. Push a batch of work to the global
    // queue.
    match self.push_overflow(task, head, tail, global) {
        Ok(_) =&amp;gt; return,
        // Lost the race, try again
        Err(v) =&amp;gt; task = v,
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that, in this &lt;code&gt;push&lt;/code&gt; function, the only atomic operations are a load with &lt;code&gt;Acquire&lt;/code&gt; ordering and a store with &lt;code&gt;Release&lt;/code&gt; ordering. There are no read-modify-write operations (&lt;code&gt;compare_and_swap&lt;/code&gt;, &lt;code&gt;fetch_and&lt;/code&gt;, …) or sequential consistency. This is important because, on x86 chips, all loads / stores are already “atomic”. So, at the CPU level, &lt;a href=&quot;https://www.justsoftwaresolutions.co.uk/threading/intel-memory-ordering-and-c++-memory-model.html&quot;&gt;this function has no synchronization&lt;/a&gt;. Using atomic operations will impact the compiler in that it prevents certain optimization, but that’s it. The first &lt;code&gt;load&lt;/code&gt; can most likely be done safely with &lt;code&gt;Relaxed&lt;/code&gt; ordering, but there were no measurable gains in switching.&lt;/p&gt;
&lt;p&gt;When the queue is full, &lt;code&gt;push_overflow&lt;/code&gt; is called. This function moves half of the tasks in the local queue into the global queue. The global queue is an intrusive linked list guarded by a mutex. The tasks being moved to the global queue are first linked together, then the mutex is acquired and all the tasks are inserted by updating the global queue’s tail pointer. This keeps the critical section small.&lt;/p&gt;
&lt;p&gt;If you are familiar with the details of atomic memory orderings, you might notice a potential “issue” with the &lt;code&gt;push&lt;/code&gt; function as shown above. An atomic &lt;code&gt;load&lt;/code&gt; with &lt;code&gt;Acquire&lt;/code&gt; ordering is pretty weak. It may return stale values, i.e. a concurrent steal operation may have already incremented the value of &lt;code&gt;self.head&lt;/code&gt; but the thread performing the &lt;code&gt;push&lt;/code&gt; had an old value in the cache so it didn’t notice the steal operation. This is not a problem for the correctness of the algorithm. In the fast-path of &lt;code&gt;push&lt;/code&gt;, we only care if the local run queue is full or not. Given that the current thread is the only thread that can push into the run queue, a stale &lt;code&gt;load&lt;/code&gt; will result in seeing the run queue as more full than it actually is. It may incorrectly determine that the queue is full and enter the &lt;code&gt;push_overflow&lt;/code&gt; function, but this function includes a stronger atomic operation. If &lt;code&gt;push_overflow&lt;/code&gt; determines the queue is not actually full, it returns w/ &lt;code&gt;Err&lt;/code&gt; and the &lt;code&gt;push&lt;/code&gt; operation tries again. This is another reason why &lt;code&gt;push_overflow&lt;/code&gt; will move half of the run queue to the global queue. By moving half of the queue, the “run queue is empty” false positive is hit a lot less often.&lt;/p&gt;
&lt;p&gt;The local &lt;code&gt;pop&lt;/code&gt; (from the processor that owns the queue) is also light:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;loop {
    let head = self.head.load(Acquire);

    // safety: this is the **only** thread that updates this cell.
    let tail = self.tail.unsync_load();

    if head == tail {
        // queue is empty
        return None;
    }

    // Map the head position to a slot index.
    let idx = head as usize &amp;amp; self.mask;

    let task = self.buffer[idx].as_ptr().read();

    // Attempt to claim the task read above.
    let actual = self
        .head
        .compare_and_swap(head, head.wrapping_add(1), Release);

    if actual == head {
        return Some(task.assume_init());
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this function, there is a single atomic load and one &lt;code&gt;compare_and_swap&lt;/code&gt; with release. The primary overhead comes from the &lt;code&gt;compare_and_swap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;steal&lt;/code&gt; function is similar to the &lt;code&gt;pop&lt;/code&gt; function but the load from &lt;code&gt;self.tail&lt;/code&gt; must be atomic. Also, similar to &lt;code&gt;push_overflow&lt;/code&gt;, the steal operation will attempt to claim half of the queue instead of a single task. This has some nice characteristics which we will cover later.&lt;/p&gt;
&lt;p&gt;The last missing piece is consuning the global queue. This queue is used to handle overflow from processor local queues as well as to submit tasks to the scheduler from non-processor threads. If a processor is under load, i.e. the local run queue has tasks. The processor will attempt to pop from the global after executing ~60 tasks from the local queue. It also checks the global queue when in the “searching” state, described below.&lt;/p&gt;
&lt;h3 id=&quot;optimizing-for-message-passing-patterns&quot;&gt;Optimizing for message passing patterns&lt;/h3&gt;
&lt;p&gt;Applications written with Tokio are usually modeled with many small, independent tasks. These tasks will communicate with each other using message passing. This pattern is similar to other languages like Go and Erlang. Given how common this pattern is, it makes sense for the scheduler to try to optimize for it.&lt;/p&gt;
&lt;p&gt;Given task A and task B. Task A is currently executing and sends a message to task B via a channel. The channel is the resource that task B is currently blocked on, so the action of sending the message will result in Task B transitioning to the runnable state and be pushed into the current processor’s run queue. The processor will then pop the next task off of the run queue, execute it, and repeat until it reaches task B.&lt;/p&gt;
&lt;p&gt;The problem is that there can be significant latency between the time the message is sent and task B gets executed. Further, “hot” data, such as the message, is stored in the CPUs cache when it is sent but by the time task B gets scheduled, there is a high probability that the relevant caches have gotten purged.&lt;/p&gt;
&lt;p&gt;To address this, the new Tokio scheduler implements an optimization (also found in Go’s and Kotlin’s schedulers). When a task transitions to the runnable state, instead of pushing it to the back of the run queue, it is stored in a special “next task” slot. The processor will always check this slot before checking the run queue. When inserting a task into this slot, if a task is already stored in it, the old task is removed from the slot and pushed to the back of the run queue. In the message passing case, this will result in the receiver of the message to be scheduled to run next.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tokio.rs/img/diagrams/sched-diagrams/message_passing.png&quot; alt=&quot;Message passing optimization&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;throttle-stealing&quot;&gt;Throttle stealing&lt;/h3&gt;
&lt;p&gt;In the work-stealing scheduler, when a processor’s run queue is empty, the processor will then attempt to steal tasks from sibling processors. To do this, a random sibling is picked as a starting point and the processor performs a steal operation on that sibling. If no tasks are found, the next sibling is tried, and so on until tasks are found.&lt;/p&gt;
&lt;p&gt;In practice, it is common for many processors to finish processing their run queue around the same time. This happens when a batch of work arrives (for example when &lt;code&gt;epoll&lt;/code&gt; is polled for socket readiness). Processors are woken up, they acquire tasks, run them, and are finished. This results in all processors attempting to steal at the same time, which means many threads attempting to access the same queues. This creates contention. Randomly picking the starting point helps reduce contention, but it can still be pretty bad.&lt;/p&gt;
&lt;p&gt;To work around this, the new scheduler limits the number of concurrent processors performing steal operations. We call the processor state in which processors attempt to steal as “searching for work”, or the “searching” state for short (this will come up later). This optimization is performed by having an atomic int that the processor increments before starting to search and decrements when exiting the searching state. The max number of searchers is half the total number of processors. That said, the limit is sloppy, and that is OK. We don’t need a hard limit on the number of searchers, just a throttle. We trade precision for algorithm efficiency.&lt;/p&gt;
&lt;p&gt;Once in the searching state, the processor attempts to steal from sibling workers and checks the global queue.&lt;/p&gt;
&lt;h3 id=&quot;reducing-cross-thread-synchronization&quot;&gt;Reducing cross thread synchronization&lt;/h3&gt;
&lt;p&gt;The other critical piece of a work-stealing scheduler is sibling notification. This is where a processor notifies a sibling when it observes new tasks. If the sibling is sleeping, it wakes up and steals tasks. The notification action has another critical responsibility. Recall the queue algorithm used weak atomic orderings (Acquire / Release). Because of how atomic memory ordering work, without additional synchronization, there is no guarantee that a sibling processor will ever see tasks in the queue to steal. The notification action also is responsible for establishing the necessary synchronization for the sibling processor to see the tasks in order to steal them. These requirements make the notification action expensive. The goal is to perform the notification action as little as possible without resulting in CPU under utilization, i.e. a processor has tasks and a sibling is unable to steal them. Overeager notification results in a thundering herd problem.&lt;/p&gt;
&lt;p&gt;The original Tokio scheduler took a naive approach to notification. Whenever a new task was pushed on to the run queue, a processor was notified. Whenever a processor was notified and found a task upon waking, it would then notify yet another processor. This logic very quickly resulted in all processor getting woken up and searching for work (causing contention). Very often, most of these processors failed to find work and went back to sleep.&lt;/p&gt;
&lt;p&gt;The new scheduler significantly improves on this by borrowing the same technique used in the Go scheduler. Notification is attempted at the same points as the previous scheduler, however, notification only happens if there are no workers in the searching state (see previous section). When a worker is notified, it is immediately transitioned to the searching state. When a processor in the searching state finds new tasks, it will first transition out of the searching state, then attempt another processor.&lt;/p&gt;
&lt;p&gt;This logic has the effect of throttling the rate at which processors work up. If a batch of tasks is scheduled at once (for example, when &lt;code&gt;epoll&lt;/code&gt; is polled for socket readiness), the first one will result in notifying a processor. That processor is now in the searching state. The rest of the scheduled tasks in the batch will not notify a processor as there is at least one in the searching state. That notified processor will steal half the tasks in the batch, and in turn notify another processor. This third processor will wake up, find tasks from one of the first two processors and steal half of those. This results in a smooth ramp up of processors as well as rapid load balancing of tasks.&lt;/p&gt;
&lt;h3 id=&quot;reducing-allocations&quot;&gt;Reducing allocations&lt;/h3&gt;
&lt;p&gt;The new Tokio scheduler requires only a single allocation per spawned task while the old one required two. Previously, the Task struct looked something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;struct Task {
    /// All state needed to manage the task
    state: TaskState,

    /// The logic to run is represented as a future trait object.
    future: Box&amp;lt;dyn Future&amp;lt;Output = ()&amp;gt;&amp;gt;,
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Task&lt;/code&gt; struct would then be allocated in a &lt;code&gt;Box&lt;/code&gt; as well. This has always been a wart that I have wanted to fix for a long time (I &lt;a href=&quot;https://github.com/carllerche/astaire/blob/6b612e8f614f7351257e2957bd9092aea9ac3781/src/core/cell.rs#L205-L217&quot;&gt;first attempted&lt;/a&gt; to fix this in 2014). Since the old Tokio scheduler, two things have changed. First, &lt;code&gt;std::alloc&lt;/code&gt; stabilized. Second, the Future task system switched to an explicit &lt;a href=&quot;https://doc.rust-lang.org/std/task/struct.RawWakerVTable.html&quot;&gt;vtable strategy&lt;/a&gt;. These were the two missing pieces needed to finally get rid of the double allocation per task inefficiency.&lt;/p&gt;
&lt;p&gt;Now, the &lt;code&gt;Task&lt;/code&gt; structure is represented as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;struct Task&amp;lt;T&amp;gt; {
    header: Header,
    future: T,
    trailer: Trailer,
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Both &lt;code&gt;Header&lt;/code&gt; and &lt;code&gt;Trailer&lt;/code&gt; are state needed to power the task, however they are split between “hot” data (header) and “cold” data (trailer), i.e. roughly data that is accessed often and data that is rarely used. The hot data is placed at the head of the struct and is kept as small as possible. When the CPU dereferences the task pointer, it will load a cache line sized amount of data at once (between &lt;a href=&quot;https://lwn.net/Articles/252125/&quot;&gt;64 and 128 bytes&lt;/a&gt;). We want that data to be as relevant as possible.&lt;/p&gt;
&lt;h3 id=&quot;reducing-atomic-reference-counting&quot;&gt;Reducing atomic reference counting&lt;/h3&gt;
&lt;p&gt;The final optimization we will discuss in this article is how the new scheduler reduces the amount of atomic reference counts needed. There are many outstanding references to the task structure: the scheduler and each waker hold a handle. A common way to manage this memory is to use &lt;a href=&quot;https://doc.rust-lang.org/std/sync/struct.Arc.html&quot;&gt;atomic reference counting&lt;/a&gt;. This strategy requires an atomic operation each time a reference is cloned and an atomic operation each time a reference is dropped. When the final reference goes out of scope, the memory is freed.&lt;/p&gt;
&lt;p&gt;In the old Tokio scheduler, each waker held a counted reference to the task handle, roughly:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;struct Waker {
    task: Arc&amp;lt;Task&amp;gt;,
}

impl Waker {
    fn wake(&amp;amp;self) {
        let task = self.task.clone();
        task.scheduler.schedule(task);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When the task is woken, the reference is cloned (atomic increment). The reference is then pushed into the run queue. When the processor receives the task and is done executing it, it drops the reference resulting in an atomic decrement. These atomic operations add up.&lt;/p&gt;
&lt;p&gt;This problem has previously been identified by the designers of the &lt;code&gt;std::future&lt;/code&gt; task system. It was observed that when Waker::wake is called, often times the original waker reference is no longer needed. This allows for reusing the atomic reference count when pushing the task into the run queue. The &lt;code&gt;std::future&lt;/code&gt; task system now includes two “wake” APIs:&lt;/p&gt;
&lt;p&gt;This API design pushes the caller to use &lt;code&gt;wake&lt;/code&gt; which avoids the atomic increment. The implementation now becomes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;impl Waker {
    fn wake(self) {
        task.scheduler.schedule(self.task);
    }

    fn wake_by_ref(&amp;amp;self) {
        let task = self.task.clone();
        task.scheduler.schedule(self.task);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This avoids the overhead of additional reference counting &lt;strong&gt;only if&lt;/strong&gt; it is possible to take ownership of the waker in order to wake. In my experience, it is almost always desirable to wake with &lt;code&gt;&amp;amp;self&lt;/code&gt; instead. Waking with &lt;code&gt;self&lt;/code&gt; prevents reusing the waker (useful in cases where the resource sends many values, i.e. channels, sockets, …) it also is more difficult to implement thread-safe waking when &lt;code&gt;self&lt;/code&gt; is required (the details of this will be left to another article).&lt;/p&gt;
&lt;p&gt;The new scheduler side steps the entire “wake by &lt;code&gt;self&lt;/code&gt;” issue by avoiding the atomic increment in &lt;code&gt;wake_by_ref&lt;/code&gt;, making it as efficient as &lt;code&gt;wake(self)&lt;/code&gt;. This is done by having the scheduler maintain a list of all tasks currently active (have not yet completed). This list represents the reference count needed to push a task into the run queue.&lt;/p&gt;
&lt;p&gt;The difficulty with this optimization is to ensure that the scheduler will not drop any tasks from its list until it can be guaranteed that the task will not be pushed into the run queue again. The specifics of how this is managed are beyond the scope of this article, but I urge you to further investigate this in the source.&lt;/p&gt;
&lt;h2 id=&quot;fearless-unsafe-concurrency-with-loom&quot;&gt;Fearless (unsafe) concurrency with Loom&lt;/h2&gt;
&lt;p&gt;Writing correct, concurrent, lock-free code is really hard. It is better to be slow and correct than fast and buggy, especially if those bugs relate to memory safety. The best option is to be fast and correct. The new scheduler makes some pretty aggressive optimizations and avoids most &lt;code&gt;std&lt;/code&gt; types in order to write more specialized versions. There is quite a bit of &lt;code&gt;unsafe&lt;/code&gt; code in the new scheduler.&lt;/p&gt;
&lt;p&gt;There are a few ways to test concurrent code. One is to let your users do the testing and debugging for you (an attractive option, to be sure). Another is to write unit tests that run in a loop and hope it catches a bug. Maybe even throw in &lt;a href=&quot;https://clang.llvm.org/docs/ThreadSanitizer.html&quot;&gt;TSAN&lt;/a&gt;. Of course, if this does catch a bug, there is no way to easily reproduce it short of running the test in a loop again. Also, how long do you run that loop for? Ten seconds? Ten minutes? Ten days? This used to be the state of testing concurrent code with Rust.&lt;/p&gt;
&lt;p&gt;We did not find the status quo acceptable. We want to feel confident (well, as confident as we can be) when we ship code – especially concurrent, lock-free code. Reliability is something that Tokio users have come to expect.&lt;/p&gt;
&lt;p&gt;To address our need, we wrote a new tool: &lt;a href=&quot;https://github.com/carllerche/loom/&quot;&gt;Loom&lt;/a&gt;. Loom is a permutation testing tool for concurrent code. Tests are written as normal, but when they are executed with &lt;code&gt;loom&lt;/code&gt;, &lt;code&gt;loom&lt;/code&gt; will run the test many times, permuting all possible executions and behaviors that test is able to encounter in a threaded environment. It also validates correct memory access, freeing memory, etc…&lt;/p&gt;
&lt;p&gt;As an example, here is a loom test for the new scheduler:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;#[test]
fn multi_spawn() {
    loom::model(|| {
        let pool = ThreadPool::new();

        let c1 = Arc::new(AtomicUsize::new(0));

        let (tx, rx) = oneshot::channel();
        let tx1 = Arc::new(Mutex::new(Some(tx)));

        // Spawn a task
        let c2 = c1.clone();
        let tx2 = tx1.clone();
        pool.spawn(async move {
            spawn(async move {
                if 1 == c1.fetch_add(1, Relaxed) {
                    tx1.lock().unwrap().take().unwrap().send(());
                }
            });
        });

        // Spawn a second task
        pool.spawn(async move {
            spawn(async move {
                if 1 == c2.fetch_add(1, Relaxed) {
                    tx2.lock().unwrap().take().unwrap().send(());
                }
            });
        });

        rx.recv();
    });
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It looks normal enough, but again, the bit of code within the &lt;code&gt;loom::model&lt;/code&gt; block gets run many thousands of times (probably in the millions), each time with a slight variation in behavior. The exact ordering of threads changes each time. Also, for every atomic operation, &lt;code&gt;loom&lt;/code&gt; will try all different behaviors permitted under the C++11 memory model. Recall how earlier, I mentioned that an atomic load with &lt;code&gt;Acquire&lt;/code&gt; was fairly weak and could return stale values. A &lt;code&gt;loom&lt;/code&gt; test will try every single possible value that can be loaded.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;loom&lt;/code&gt; has been an invaluable tool to use while working on the new scheduler. It caught more than 10 bugs that were missed by the other unit tests, hand testing, and stress testing.&lt;/p&gt;
&lt;p&gt;The astute reader might have questioned the claim that loom tests “all possible permutations”, and would be right to do so. Naive permutation of behavior would result in combinatorial explosion at the factorial level. Any non trivial test would never complete. This problem has been researched for years and a number of algorithms exist to manage the combinatorial explosion. Loom’s core algorithm is based on &lt;a href=&quot;https://users.soe.ucsc.edu/~cormac/papers/popl05.pdf&quot;&gt;dynamic partial order reduction&lt;/a&gt;. This algorithm is able to prune out permutations that result in identical executions. Even with this, it is possible for the state space to grow too large to complete in a reasonable time (few minutes). Loom also allows bounding the search space using a bounded variant of dynamic partial order reduction.&lt;/p&gt;
&lt;p&gt;All in all, I am &lt;strong&gt;much&lt;/strong&gt; more confident in the scheduler’s correctness thanks to extensive testing with Loom.&lt;/p&gt;
&lt;h2 id=&quot;the-results&quot;&gt;The results&lt;/h2&gt;
&lt;p&gt;So, now that we are done going over what schedulers are and how the new Tokio scheduler achieved huge performance gains… what exactly were those gains? Given that the new scheduler is very new, there has not been extensive real-world testing yet. Here is what we do know.&lt;/p&gt;
&lt;p&gt;First, the new scheduler is &lt;strong&gt;much&lt;/strong&gt; faster in micro benchmarks. Here is how the new scheduler improved on some benchmarks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Old scheduler&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;test chained_spawn ... bench:   2,019,796 ns/iter (+/- 302,168)
test ping_pong     ... bench:   1,279,948 ns/iter (+/- 154,365)
test spawn_many    ... bench:  10,283,608 ns/iter (+/- 1,284,275)
test yield_many    ... bench:  21,450,748 ns/iter (+/- 1,201,337)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;New scheduler&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;test chained_spawn ... bench:     168,854 ns/iter (+/- 8,339)
test ping_pong     ... bench:     562,659 ns/iter (+/- 34,410)
test spawn_many    ... bench:   7,320,737 ns/iter (+/- 264,620)
test yield_many    ... bench:  14,638,563 ns/iter (+/- 1,573,678)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The benchmarks include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;chained_spawn&lt;/code&gt; tests recursively spawning a new task, i.e. spawn a task, that spawns a task, that spawns a task, ….&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ping_pong&lt;/code&gt; allocates a &lt;code&gt;oneshot&lt;/code&gt; channel, spawns a task that sends a message on that channel. The original task waits to receive the message. This is the closest “real world” benchmark.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spawn_many&lt;/code&gt; tests injecting tasks into the scheduler, i.e. spawning tasks from outside of the scheduler context.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yield_many&lt;/code&gt; tests a task waking itself.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The improvements from the old scheduler to the new scheduler are very impressive. However, how does that carry over to the “real world”. It’s hard to say exactly, but I did try running &lt;a href=&quot;https://github.com/hyperium/hyper/&quot;&gt;Hyper&lt;/a&gt; benchmarks using the new scheduler.&lt;/p&gt;
&lt;p&gt;This is the “hello world” Hyper server being benchmarked using &lt;code&gt;wrk -t1 -c50 -d10&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Old scheduler&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Running 10s test @ http://127.0.0.1:3000
  1 threads and 50 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   371.53us   99.05us   1.97ms   60.53%
    Req/Sec   114.61k     8.45k  133.85k    67.00%
  1139307 requests in 10.00s, 95.61MB read
Requests/sec: 113923.19
Transfer/sec:      9.56MB
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;New scheduler&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Running 10s test @ http://127.0.0.1:3000
  1 threads and 50 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   275.05us   69.81us   1.09ms   73.57%
    Req/Sec   153.17k    10.68k  171.51k    71.00%
  1522671 requests in 10.00s, 127.79MB read
Requests/sec: 152258.70
Transfer/sec:     12.78MB
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That’s an increase of 34% requests per second just from switching schedulers! When I first saw this, I was more than happy. I had originally expected an increase of ~5~10%. Then I was sad, because it also meant the old Tokio scheduler is not that good, but oh well. Then I remembered that Hyper already tops the &lt;a href=&quot;https://www.techempower.com/benchmarks/#section=data-r18&amp;amp;hw=ph&amp;amp;test=plaintext&quot;&gt;TechEmpower&lt;/a&gt; benchmarks. I’m excited to see how the new scheduler will impact those rankings.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hyperium/tonic&quot;&gt;Tonic&lt;/a&gt;, a gRPC client &amp;amp; server, saw about a 10% speed up, which is pretty impressive given that Tonic is not yet highly optimized.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I’m really excited to finally get this work out. It has been in progress for months now and is going to be a big step forward in Rust’s asynchronous I/O story. I’m very satisfied with the improvements the new scheduler work has shown already. There also are plenty of areas in the Tokio code base that could be sped up, so this new scheduler work is not the end on the performance front.&lt;/p&gt;
&lt;p&gt;I also hope the amount of detail this article provides is useful for others who may attempt to write a scheduler.&lt;/p&gt;
&lt;p&gt;—Carl Lerche&lt;/p&gt;


</description>
<pubDate>Mon, 14 Oct 2019 16:01:49 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tokio.rs/blog/2019-10-scheduler/</dc:identifier>
</item>
<item>
<title>I stopped setting a financial goal for my SaaS</title>
<link>https://blog.inkdrop.info/i-stopped-setting-a-financial-goal-for-my-saas-a92c3db65506</link>
<guid isPermaLink="true" >https://blog.inkdrop.info/i-stopped-setting-a-financial-goal-for-my-saas-a92c3db65506</guid>
<description>&lt;p&gt;
&lt;h2 class=&quot;ap db kt ku au&quot;&gt;Money can be only a short-term motivation / Make it “better” rather than “bigger” / Figuring out “enough” / Life is one shot&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;kv&quot;&gt;
&lt;div class=&quot;ah v&quot;&gt;
&lt;div&gt;
&lt;div class=&quot;ew kw kx&quot;&gt;&lt;img alt=&quot;Takuya Matsuyama&quot; class=&quot;l fw kx kw&quot; src=&quot;https://miro.medium.com/fit/c/96/96/1*zZ-jc4skJ9iqx74GxwOJvg.jpeg&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

A dog not interested in setting a goal — ©&lt;a href=&quot;https://twitter.com/craftzdog&quot; class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Takuya Matsuyama&lt;/a&gt;
&lt;p id=&quot;797c&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Hi, it’s &lt;a href=&quot;https://twitter.com/inkdrop_app&quot; class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Takuya&lt;/a&gt;. I’m building a Markdown note-taking app called &lt;a href=&quot;https://inkdrop.app&quot; class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Inkdrop&lt;/a&gt;, which is enough profitable now. It has more than 1,300 paid users and keeps growing constantly. So, I’ve achieved my goal — to make a profitable product to live off of it. It reached 10k USD sales in total recently. With holding 1,000 customers, I don’t have to worry much about covering my living costs. On top of that, it even gives me some buffers to invest myself and to go on a trip. I’m totally happy.&lt;/p&gt;

&lt;p id=&quot;6736&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;However, it doesn’t mean that I’ve finished my work completely because the app needs to be kept going. There are always issues to solve and features to improve. The servers should be maintained as well, or customers will quickly quit using it. I published a &lt;a class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://blog.inkdrop.info/the-roadmap-of-inkdrop-vol-4-4fbee60cd727&quot;&gt;roadmap&lt;/a&gt; to tell users what features I will work on. I can see my customers are looking forward to it — So, I can’t stop.&lt;/p&gt;
&lt;p id=&quot;17ab&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;The problem was to find next goal that would motivate me to pursue further. Because earning money no longer sparks my motivation. I couldn’t find an other appropriate goal that makes me resilient enough to endure the hard work. Then, I ended up deciding to stop setting a financial goal anymore. I found myself that keeping my project going without goals is even better than with a goal. I’d like to talk about why I decided not to set a goal and why it is more sustainable.&lt;/p&gt;

&lt;p id=&quot;4107&quot; class=&quot;mt mu el aq mv b mw nv my nw na nx nc ny ne nz ng&quot;&gt;I’ve written about &lt;a class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://blog.inkdrop.info/grit-46c57af01d6d&quot;&gt;how I kept my solo project going more than 3 years&lt;/a&gt;. It was about grit — sticking to something, work hard, and not quit. It looks similar though, a topic about setting a goal would be another issue.&lt;/p&gt;
&lt;p id=&quot;056a&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;After I accomplished the 1,000-customer goal, I found myself not so motivated than before. Because the goal has gone away when I hit it. I lost one of the reasons to stick with my desk to work hard on issues. I wanted to foster my project more, but why? for what?&lt;/p&gt;
&lt;p id=&quot;f981&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Getting 2,000 paid customers didn’t sound nice as a next goal. Because the number “1,000” was just a requirement to live off of it in Japan. Yeah, earning more money is great without a doubt — That lets me go anywhere, live where I like, and buy more things. But…that doesn’t motivate me enough, and I found why in a book written by Daniel H. Pink:&lt;/p&gt;
&lt;blockquote class=&quot;oa ob oc&quot; readability=&quot;13&quot;&gt;
&lt;p id=&quot;8664&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;When money is used as an external reward for some activity, the subjects lose intrinsic interest for the activity. Rewards can deliver a short-term boost — just as a jolt of caffeine can keep you cracking for a few more hours. But the effect wears off — and, worse, can reduce a person’s longer-term motivation to continue the project.&lt;/p&gt;
&lt;p id=&quot;9455&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;— Daniel H. Pink “Drive: The Surprising Truth About What Motivates Us”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;788f&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;In my case, money was like a &lt;em class=&quot;od&quot;&gt;hope&lt;/em&gt; rather than a reward. Aiming for 1,000 customers was fine while my bank balance is decreasing every month, causing a fear. When the number of customers stars increasing, I felt that like seeing an exit of a long long tunnel approaching me from far away. Now my bank balance stopped decreasing and it looks like I’ve got out of the tunnel. One day, when I got up in the morning, I realized that the fear has gone away. Then, I see now money as a reward rather than the hope. But money as a reward doesn’t work as before because it became nothing to do directly and critically with my daily life. Besides, I don’t have a dream to become super rich like Bill Gates.&lt;/p&gt;
&lt;p id=&quot;91ea&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;So, money doesn’t motivate me enough anymore.&lt;/p&gt;

&lt;p id=&quot;6aa6&quot; class=&quot;mt mu el aq mv b mw nv my nw na nx nc ny ne nz ng&quot;&gt;Critical thinking helps you think things from an objective perspective. I asked myself “do I really need another goal?” Because the project is just what I love to do in the first place, as I wrote in &lt;a class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://blog.inkdrop.info/grit-46c57af01d6d&quot;&gt;the article about grit&lt;/a&gt;. Making it profitable was merely a requirement to continue doing it and not a genuine source of the motivation. I suspect that I’ve been too much focusing on pursuing the financial goal so that I can feel less my fear.&lt;/p&gt;
&lt;p id=&quot;3714&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Jason Fried, a CEO of Basecamp, said in his blogpost that he has never had a goal:&lt;/p&gt;
&lt;blockquote class=&quot;oa ob oc&quot; readability=&quot;20.789473684211&quot;&gt;
&lt;p id=&quot;62f1&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;I do things, I try things, I build things, I want to make progress, I want to make things better for me, my company, my family, my neighborhood, etc. But I’ve never set a goal. It’s just not how I approach things.&lt;/p&gt;
&lt;p id=&quot;fb66&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;A goal is something that goes away when you hit it. Once you’ve reached it, it’s gone. You could always set another one, but I just don’t function in steps like that.&lt;/p&gt;
&lt;p id=&quot;ddc5&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;— &lt;a href=&quot;https://m.signalvnoise.com/ive-never-had-a-goal/&quot; class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;“I’ve never had a goal”, Jason Fried&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;f275&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;That is a great insight. Similarly, I feel so happy when I could build things, make progress or make things better. As it’s not a VC-backed startup, exponential growth is not mandatory for me. What I want to do is to make my product &lt;em class=&quot;od&quot;&gt;better&lt;/em&gt; instead of just making it &lt;em class=&quot;od&quot;&gt;bigger&lt;/em&gt;. Like many open-source developers work on their projects just for fun:&lt;/p&gt;
&lt;blockquote class=&quot;oa ob oc&quot; readability=&quot;15&quot;&gt;
&lt;p id=&quot;605c&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Bob Wolf surveyed 684 open-source developers, mostly in North America and Europe, about why they participated in these projects. Lakhani and Wolf uncovered a range of motives, but they found “that enjoyment-based intrinsic motivation, namely how creative a person feels when working on the project, is the strongest and most pervasive driver.”&lt;/p&gt;
&lt;p id=&quot;7bc8&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;— Daniel H. Pink “Drive: The Surprising Truth About What Motivates Us”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p id=&quot;bbfe&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Let’s consider a money reward as a bonus. It’s enough to have “where to go” in order to motivate yourself. No more fear-driven motivations.&lt;/p&gt;

&lt;p id=&quot;a450&quot; class=&quot;mt mu el aq mv b mw nv my nw na nx nc ny ne nz ng&quot;&gt;I would like to keep doing what I love as long as I want. That’s my genuine source of the motivation. The business scale doesn’t matter for me.&lt;/p&gt;
&lt;p id=&quot;2d01&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;So, I’m not aiming for the other kinds of “success”. Instead, I really like what Paul Jarvins said about success:&lt;/p&gt;
&lt;blockquote class=&quot;oa ob oc&quot; readability=&quot;10&quot;&gt;
&lt;p id=&quot;1e0a&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Success is about finding a way to sustain a business as long as it needs to be sustained. Your success can be measured by being profitable quickly as you stay small and build real relationships with your customers — not because you’re an altruistic hippie, but because it pays off over time.&lt;/p&gt;
&lt;p id=&quot;3a53&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;— Paul Jarvins “Company of One: Why Staying Small Is the Next Big Thing for Business”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;0811&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;By focusing not on endless growth or expansion, it makes your business sustainable. Interestingly, about 90 percent of all businesses worldwide that are more than 100 years old are Japanese. They all have fewer than 300 employees, and the ones that still exist never grow quickly or without great reason.&lt;/p&gt;
&lt;p id=&quot;b335&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Moreover, staying small lets you open yourself up to investing in enjoying your own life. So, you can enjoy both your life and work well. You can choose to make more money, if that’s what you want, or you can choose to work the same and make the same amount. It’s all up to you. Figuring out “enough” gives you choices — that is, freedom.&lt;/p&gt;

&lt;p id=&quot;4cd4&quot; class=&quot;mt mu el aq mv b mw nv my nw na nx nc ny ne nz ng&quot;&gt;Inkdrop is profitable at the moment, but who knows how long it will last? Focusing on making it better, staying small and building real relationships with my customers would make me resilient enough. But in spite of the hard work, it might still fail in the future. That would be the biggest cause of my anxiety but I don’t care as I wrote:&lt;/p&gt;
&lt;blockquote class=&quot;oa ob oc&quot; readability=&quot;7.1336405529954&quot;&gt;
&lt;p id=&quot;d66a&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Anxiety about the future and fear of failure are a barometer that you are really living your life. Along with them, you know what you should do today. Let them come in.&lt;/p&gt;
&lt;p id=&quot;eeca&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;―&lt;a class=&quot;dg bv mp mq mr ms&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://blog.inkdrop.info/grit-46c57af01d6d&quot;&gt;How I Kept My Solo Project Going Over 3 Years&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;4aed&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;Life is one shot. Anyway, if it’s going to fail, I would do what I love thoroughly. I would like to live my life without regrets. Let me introduce you some quotes from Lao Tzu(老子) on life:&lt;/p&gt;
&lt;blockquote class=&quot;oa ob oc&quot; readability=&quot;6&quot;&gt;
&lt;p id=&quot;db14&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;“If you are depressed you are living in the past. If you are anxious you are living in the future. If you are at peace you are living in the present.”&lt;/p&gt;
&lt;p id=&quot;8ac4&quot; class=&quot;mt mu el od mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;― Lao Tzu&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;cf74&quot; class=&quot;mt mu el aq mv b mw mx my mz na nb nc nd ne nf ng&quot;&gt;So, I will focus on here and now. Hope that helps you find your motivation on your business!&lt;/p&gt;
</description>
<pubDate>Mon, 14 Oct 2019 14:55:52 +0000</pubDate>
<dc:creator>craftzdog</dc:creator>
<og:type>article</og:type>
<og:title>I stopped setting a financial goal for my SaaS</og:title>
<og:description>Money can be only a short-term motivation / Make it “better” rather than “bigger” / Figuring out “enough” / Life is one shot</og:description>
<og:url>https://blog.inkdrop.info/i-stopped-setting-a-financial-goal-for-my-saas-a92c3db65506</og:url>
<og:image>https://miro.medium.com/max/1200/1*TInFYg5Qp1zIMIPm33ZZAw.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.inkdrop.info/i-stopped-setting-a-financial-goal-for-my-saas-a92c3db65506?gi=d3d05ec32aad</dc:identifier>
</item>
<item>
<title>“My Google account got suspended because of NewPipe”</title>
<link>https://github.com/TeamNewPipe/NewPipe/issues/2723</link>
<guid isPermaLink="true" >https://github.com/TeamNewPipe/NewPipe/issues/2723</guid>
<description>
&lt;p&gt;&lt;strong&gt;Guys, this has gone too wild&lt;/strong&gt;.&lt;br/&gt;Please stop posting off-topic, please leave analysis to the team. The amount of messages is making it nearly impossible to grasp what's relevant for &lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/hovercards?user_id=54250399&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/haistakaavittukaikkisaatana&quot;&gt;@haistakaavittukaikkisaatana&lt;/a&gt;'s report and what's not. Nobody cares what you think &quot;Larry and Sergey&quot; think (sorry whoever posted that, it sounds harsh, but it's a good example for off-topic).&lt;/p&gt;
&lt;p&gt;We don't know for sure what's going on as we have zero evidence so far (the OP can't provide any, the reasons sound reasonable), and even if this happened to the OP, this is not the end of the world. Even the OP says it's okay.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lessons learnt for now:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Keep your phone as proprietary-service-provider-free as possible. You can never know what's really going on. Only free implementations (like MicroG) allow you to check the source code. I've had an Android phone for around 4 years (my first real smartphone, I was pretty late), and I've always kept it completely Google-free. It's doable!&lt;/li&gt;
&lt;li&gt;Don't rely too much on your Google account. Use separate mail/messaging/... providers or at least different accounts. Ideally you use privacy-friendly services for mail and messaging, and especially nothing that relies on a phone number...&lt;/li&gt;
&lt;li&gt;Don't share too much information with things like Google.&lt;/li&gt;
&lt;li&gt;For &amp;lt;god|not god|multiple gods|Spongebob|Superman|Jebus|whoever&amp;gt;'s sake, &lt;strong&gt;make backups!&lt;/strong&gt; Not being able to provide evidence any more is one thing, not being able to use services any more or even data loss are more than just annoying.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Please keep the discussion within here limited to &lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/hovercards?user_id=54250399&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/haistakaavittukaikkisaatana&quot;&gt;@haistakaavittukaikkisaatana&lt;/a&gt;'s original report. We'll clean up this thread soon by hiding or deleting non-related messages.&lt;/p&gt;
&lt;p&gt;This is no offense and I'm sorry if this sounds a bit harsh. It's a maintainers' measure to reduce the heat, analyze based on &lt;strong&gt;facts&lt;/strong&gt; and allow the devs to work efficiently. We do not try to censor you in any way, this is just not the place for this type of conversation.&lt;br/&gt;I can highly recommend joining our IRC channel #newpipe on Freenode to continue this discussion. That's what IRC is meant for. And I can join you speculating about what Google's founders would've thought about this situation!&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/hovercards?user_id=17365767&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/TobiGr&quot;&gt;@TobiGr&lt;/a&gt; &lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/hovercards?user_id=1891273&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/theScrabi&quot;&gt;@theScrabi&lt;/a&gt; let's clean up a bit.&lt;/p&gt;
</description>
<pubDate>Mon, 14 Oct 2019 13:00:35 +0000</pubDate>
<dc:creator>nuxdie</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/22159318?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>My Google account got suspended because of NewPipe · Issue #2723 · TeamNewPipe/NewPipe</og:title>
<og:url>https://github.com/TeamNewPipe/NewPipe/issues/2723</og:url>
<og:description>My Google account got suspended yesterday, I was like what the heck is going on. First I got an email from Google saying that I was using 3rd party app outside of Play Store to go around Youtube ad...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/TeamNewPipe/NewPipe/issues/2723</dc:identifier>
</item>
<item>
<title>Hong Kong protests: President Xi warns of &amp;#039;bodies smashed&amp;#039;</title>
<link>https://www.bbc.com/news/world-asia-china-50035229</link>
<guid isPermaLink="true" >https://www.bbc.com/news/world-asia-china-50035229</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;A demonstrator sets a bin on fire in Hong Kong&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/F73B/production/_109219236_057269767-1.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Reuters&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    In Hong Kong, several peaceful rallies descended into clashes with police over the weekend
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;China's president has issued a warning against dissent, saying any attempt to divide China will end in &quot;bodies smashed and bones ground to powder&quot;.&lt;/p&gt;&lt;p&gt;Xi Jinping's comments came during a state visit to Nepal on Sunday, Chinese state broadcaster CCTV said.&lt;/p&gt;&lt;p&gt;He didn't mention any particular region but it was seen as a warning to Hong Kong, where anti-Beijing protests have been ongoing for months.&lt;/p&gt;&lt;p&gt;Peaceful rallies in Hong Kong again descended into clashes on Sunday.&lt;/p&gt;&lt;p&gt;Public transport stations and shops deemed to be pro-Beijing were damaged.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.com/news/world-asia-china-49317695&quot; class=&quot;story-body__link&quot;&gt;Hong Kong protests explained in 100 and 500 words&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.com/news/world-asia-china-49983767&quot; class=&quot;story-body__link&quot;&gt;Why Starbucks? The brands attacked in Hong Kong&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What did Xi Jinping say?&lt;/h2&gt;&lt;p&gt;&quot;Anyone who attempts to split any region from China will perish, with their bodies smashed and bones ground to powder,&quot; &lt;a href=&quot;http://global.chinadaily.com.cn/a/201910/14/WS5da3743da310cf3e3557035c.html&quot; class=&quot;story-body__link-external&quot;&gt;Mr Xi said&lt;/a&gt;, according to a foreign ministry statement issued on Sunday.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Reuters&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Xi Jinping has now wrapped up his two-day visit to Nepal
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&quot;Any external forces that support the splitting of China can only be regarded as delusional by the Chinese people,&quot; he said.&lt;/p&gt;&lt;p&gt;Since the start of the Hong Kong protest movement four months ago, China has blamed &quot;external forces&quot; for fuelling the unrest, and accused the US and UK of interfering in Chinese domestic affairs.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Why are his comments notable?&lt;/h2&gt;&lt;p&gt;Xi Jinping has yet to make any direct comment on the ongoing protests in Hong Kong, so this will be seen as a rare and strong warning.&lt;/p&gt;&lt;p&gt;Beijing has so far said it believes Hong Kong's police force is capable of handling the crisis. But protesters fear Beijing could send in troops to end the violence on the streets.&lt;/p&gt;&lt;p&gt;This is widely seen as an unlikely scenario because of the serious consequences. Few observers believe China would repeat its 1989 crackdown on pro-democracy activists in Tiananmen Square in Beijing, for examples where hundreds are believed to have died.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.com/news/world-asia-china-49148762&quot; class=&quot;story-body__link&quot;&gt;How could China intervene in Hong Kong protests?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What's been going on in Hong Kong?&lt;/h2&gt;&lt;p&gt;Hong Kong is a part of China, but has a high level of autonomy - it has its own legal and justice system and far more freedoms than people have on the mainland. &lt;/p&gt;&lt;figure class=&quot;media-with-caption&quot; readability=&quot;-24&quot;&gt;&lt;div class=&quot;player-with-placeholder&quot; readability=&quot;7&quot;&gt;
            &lt;img class=&quot;media-placeholder player-with-placeholder__image narrative-video-placeholder&quot; src=&quot;https://ichef.bbci.co.uk/images/ic/720x405/p07qrc0s.jpg&quot;/&gt;&lt;p&gt;Media playback is unsupported on your device&lt;/p&gt;
      
    &lt;/div&gt;    &lt;figcaption class=&quot;media-with-caption__caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Media caption&lt;/span&gt;Protecting Hong Kong's young protesters: &quot;Beat us, don't beat the kids&quot;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;There has been growing anti-Beijing sentiment for some time, but the latest wave of protests started in June. It was triggered by a proposal to bring in a new law which would have meant criminal suspects could be sent to mainland China to stand trial.&lt;/p&gt;&lt;p&gt;Many were afraid this law could end up being used by the government in Beijing to persecute Hong Kongers who criticise it. Critics said it would undermine Hong Kong's judicial independence. &lt;/p&gt;&lt;p&gt;The government responded to the initial massive protests by saying the bill would be withdrawn, but by that point the protests had escalated.&lt;/p&gt;&lt;p&gt;The protesters now want their &quot;five demands&quot; to be met, which include full democracy for Hong Kong and an inquiry into what they say has been an excessive use of force by the police.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What's the latest on the protests?&lt;/h2&gt;&lt;p&gt;Protests have taken place every weekend since June and have happened in every district of the territory, causing widespread disruption. &lt;/p&gt;&lt;p&gt;More than 2,300 people have been arrested since the civil disobedience began.&lt;/p&gt;&lt;p&gt;On Sunday, several neighbourhoods saw rallies, and by the afternoon at least 27 stations on the MTR - Hong Kong's metro - were closed. &lt;/p&gt;&lt;p&gt;Police said they had used &quot;minimum force&quot; to disperse protesters, but television footage showed weekend shoppers caught in the chaos.  Some were filmed screaming and apparently injured as officers rushed into a shopping centre.&lt;/p&gt;&lt;p&gt;Petrol bombs were thrown at Mong Kok police station, and one officer was slashed in the neck, authorities say. &lt;a href=&quot;https://www.scmp.com/news/hong-kong/society/article/3032749/hong-kong-protesters-go-yet-another-rampage-attacking-police&quot; class=&quot;story-body__link-external&quot;&gt;He is in a stable condition in hospital&lt;/a&gt;, the South China Morning Post reports. &lt;/p&gt;&lt;figure class=&quot;media-portrait has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;EPA&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The &quot;Lady Liberty&quot; statue was installed on Hong Kong's Lion Rock overnight by several protesters
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Overnight on Sunday, one group of protesters hauled a three-metre-high (9ft) statue of a protester on to Lion Rock, a famous outcrop overlooking Hong Kong. &lt;/p&gt;&lt;p&gt;The statue, Lady Liberty, has become a symbol of the rallies, and sports a gas mask, goggles and a helmet.&lt;/p&gt;&lt;p&gt;She represents an injured protester who demonstrators believe was shot in the eye by a police projectile.&lt;/p&gt;&lt;p&gt;The group of several dozen, some wearing head lamps, climbed the 500m peak during a thunderstorm. The statue held a black banner that read: &quot;Revolution of our time, Liberate Hong Kong.&quot;&lt;/p&gt;
            </description>
<pubDate>Mon, 14 Oct 2019 10:26:12 +0000</pubDate>
<dc:creator>headalgorithm</dc:creator>
<og:title>Try to split China and get 'bodies smashed' - Xi</og:title>
<og:type>article</og:type>
<og:description>China's president didn't mention any particular region but it was seen as a warning to Hong Kong.</og:description>
<og:url>https://www.bbc.com/news/world-asia-china-50035229</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/F73B/production/_109219236_057269767-1.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/world-asia-china-50035229</dc:identifier>
</item>
<item>
<title>Apple of 2019 is the Linux of 2000</title>
<link>https://nibblestew.blogspot.com/2019/10/apple-of-2019-is-linux-of-2000.html</link>
<guid isPermaLink="true" >https://nibblestew.blogspot.com/2019/10/apple-of-2019-is-linux-of-2000.html</guid>
<description>Last week the laptop I use for macOS development said that there is an XCode update available. I tried to install it but it said that there is not enough free space available to run the installer. So I deleted a bunch of files and tried again. Still the same complaint. Then I deleted some unused VM images. Those would free a few dozen gigabytes, so it should make things work. I even emptied the trash can to make sure nothing lingered around. But even this did not help, I still got the same complaint.&lt;p&gt;At this point it was time to get serious and launch the terminal. And, true enough, according to &lt;span&gt;df&lt;/span&gt; the disk had only 8 gigabytes of free space even though I had just deleted over 40 gigabytes of files from it (using &lt;span&gt;rm&lt;/span&gt;, not the GUI, so things really should have been gone). A lot of googling and poking later I discovered that all the deleted files had gone to &quot;reserved space&quot; on the file system. There was no way to access those files or delete them. According to documentation the operating system would delete those files &quot;on demand as more space is needed&quot;. This was not very comforting because the system most definitely was not doing that and you'd think that Apple's own software would get this right.&lt;/p&gt;&lt;p&gt;After a ton more googling I managed to find a chat buried somewhere deep in Reddit which listed the magical indentation that purges reserved space. It consisted of running &lt;span&gt;tmutil&lt;/span&gt; from the command line and giving it a bunch of command line arguments that did not seem to make sense or have any correlation to the thing that I wanted to do. But it did work and eventually I got XCode updated.&lt;/p&gt;&lt;p&gt;After my blood pressure dropped to healthier levels I got the strangest feeling of déjà vu. This felt exactly like using Linux in the early 2000s. Things break at random for reasons you can't understand and the only way to fix it is to find terminal commands from discussion forums, type them in and hope for the best. Then it hit me.&lt;/p&gt;&lt;p&gt;This was not an isolated incidence. The parallels are everywhere. Observe:&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;External monitors&lt;/h2&gt;&lt;div&gt;&lt;em&gt;Linux 2000:&lt;/em&gt; plugging an external monitor will most likely not work. Fanboys are very vocal that this is the fault of monitor manufacturers for not providing modeline info.&lt;/div&gt;

&lt;div&gt;&lt;em&gt;Apple 2019:&lt;/em&gt; plugging an external projector will most likely not work. Fanboys are very vocal that this is the fault of projector manufacturers for not ensuring that their HW works with every Apple model.&lt;/div&gt;
&lt;div&gt;
&lt;h2&gt;Software installation&lt;/h2&gt;
&lt;div&gt;&lt;em&gt;Linux 2000:&lt;/em&gt; There is only One True Way of installing software: using distro packages. If you do anything else you are bad and you should feel bad.&lt;/div&gt;

&lt;div&gt;&lt;em&gt;Apple 2019:&lt;/em&gt; There is only True Way of installing software: using the Apple store. If you do anything else you are bad and you should feel bad.&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Hardware compatibility&lt;/h2&gt;
&lt;div&gt;&lt;em&gt;Linux 2000:&lt;/em&gt; only a limited number of hardware works out of the box, even for popular devices like 3D graphics cards. Things either don't work at all, have reduced functionality, or kinda work but fail spuriously every now and then for no discernible reason.&lt;/div&gt;

&lt;div&gt;Apple 2019&lt;em&gt;:&lt;/em&gt; only a limited number of hardware works out of the box, even for popular devices like Android phones. Things either don't work at all, have reduced functionality, or kinda work but fail spuriously every now and then for no discernible reason.&lt;/div&gt;
&lt;h2&gt;Technical support&lt;/h2&gt;
&lt;div&gt;&lt;em&gt;Linux 2000:&lt;/em&gt; if your problem is not google-trivial, there's nothing you can do. Asking friends for assistance does not help, because they will just type your problem description into Google and read the first hit.&lt;/div&gt;

&lt;div&gt;&lt;em&gt;Apple 2019:&lt;/em&gt; if your problem is not google-trivial, there's nothing you can do. Calling Apple's tech support line does not help, because they will just type your problem description into Google and read the first hit.&lt;/div&gt;
&lt;h2&gt;Laptop features&lt;/h2&gt;
&lt;div&gt;&lt;em&gt;Linux 2000:&lt;/em&gt; it is very difficult to find a laptop with more than two USB ports.&lt;/div&gt;

&lt;div&gt;&lt;em&gt;Apple 2019:&lt;/em&gt; it is very difficult to find a laptop with more than two USB ports.&lt;/div&gt;
&lt;h2&gt;Advocate behaviour&lt;/h2&gt;
&lt;div&gt;&lt;em&gt;Linux 2000:&lt;/em&gt; fanboys will let you know in no uncertain terms that their system is the best and will take over all desktop computer usage. Said fanboys are condescending elitist computer nerds.&lt;/div&gt;

&lt;div&gt;&lt;em&gt;Apple 2019:&lt;/em&gt; fanboys will let you know in no uncertain terms that their system is the best and will take over all desktop computer usage. Said fanboys are condescending elitist hipster latte web site designers.&lt;/div&gt;


</description>
<pubDate>Mon, 14 Oct 2019 09:50:09 +0000</pubDate>
<dc:creator>khc</dc:creator>
<og:url>http://nibblestew.blogspot.com/2019/10/apple-of-2019-is-linux-of-2000.html</og:url>
<og:title>Apple of 2019 is the Linux of 2000</og:title>
<og:description>Last week the laptop I use for macOS development said that there is an XCode update available. I tried to install it but it said that there ...</og:description>
<dc:language>fi</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nibblestew.blogspot.com/2019/10/apple-of-2019-is-linux-of-2000.html</dc:identifier>
</item>
</channel>
</rss>