<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Intuit to buy Credit Karma for $7B</title>
<link>https://www.wsj.com/articles/intuit-near-deal-to-buy-credit-karma-for-7-billion-11582433880</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/intuit-near-deal-to-buy-credit-karma-for-7-billion-11582433880</guid>
<description>&lt;p&gt; Intuit Inc. is nearing a deal to buy personal-finance portal Credit Karma Inc. for about $7 billion in cash and stock, in a move that would push the bookkeeping-software giant further into consumer finance, according to people familiar with the matter.&lt;/p&gt; &lt;p&gt;The maker of TurboTax could announce a deal to buy privately held Credit Karma by Monday, assuming talks don’t fall apart, the people said. Credit Karma was valued at roughly $4 billion in a private share sale about two years ago.&lt;/p&gt;...
  </description>
<pubDate>Sun, 23 Feb 2020 14:23:51 +0000</pubDate>
<dc:creator>totaldude87</dc:creator>
<og:title>WSJ News Exclusive | Intuit Near Deal to Buy Credit Karma for $7 Billion</og:title>
<og:description>Intuit is near a deal to buy personal-finance portal Credit Karma for about $7 billion in cash and stock, pushing the company behind QuickBooks and TurboTax further into consumer finance, people familiar with the matter said.</og:description>
<og:url>https://www.wsj.com/articles/intuit-near-deal-to-buy-credit-karma-for-7-billion-11582433880</og:url>
<og:image>https://images.wsj.net/im-156795/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/intuit-near-deal-to-buy-credit-karma-for-7-billion-11582433880</dc:identifier>
</item>
<item>
<title>Guide to running Elasticsearch in production</title>
<link>https://facinating.tech/2020/02/22/in-depth-guide-to-running-elasticsearch-in-production/</link>
<guid isPermaLink="true" >https://facinating.tech/2020/02/22/in-depth-guide-to-running-elasticsearch-in-production/</guid>
<description>&lt;p&gt;If you are here, I do not need to tell you that Elasticsearch is awesome, fast and mostly just works.&lt;br/&gt;If you are here, I also do not need to tell you that Elasticsearch can be opaque, confusing, and seems to break randomly for no reason. In this post I want to share my experiences and tips on how to set up Elasticsearch correctly and avoid common pitfalls.&lt;br/&gt;I am not here to make money so I will mostly just jam everything into one post instead of doing a series. Feel free to skip sections.&lt;/p&gt;
&lt;h2&gt;The basics: Clusters, Nodes, Indices and Shards&lt;/h2&gt;
&lt;p&gt;If you are really new to Elasticsearch (ES) I want to explain some basic concepts first. This section will not explain best practices at all, and focuses mainly on explaining the nomenclature. Most people can probably skip this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt; is a management framework for running distributed installations of &lt;strong&gt;Apache Lucene&lt;/strong&gt;, a Java-based search engine. Lucene is what actually holds the data and does all the indexing and searching. ES sits on top of this and allows you to run potentially many thousands of lucene instances in parallel.&lt;/p&gt;
&lt;p&gt;The highest level unit of ES is the &lt;strong&gt;cluster&lt;/strong&gt;. A cluster is a collection of ES &lt;strong&gt;nodes&lt;/strong&gt; &lt;strong&gt;and indices&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nodes&lt;/strong&gt; are instances of ES. These can be individual servers or just ES processes running on a server. &lt;em&gt;Servers and nodes are not the same&lt;/em&gt;. A VM or physical server can hold many ES processes, each of which will be a node. Nodes can join exactly one cluster. There are different &lt;strong&gt;Types&lt;/strong&gt; of node. The two most interesting of which are the &lt;strong&gt;Data Node&lt;/strong&gt; and the &lt;strong&gt;Master-eligible Node&lt;/strong&gt;. A single node can be of multiple types at the same time. &lt;strong&gt;Data nodes&lt;/strong&gt; run all data operations. That is storing, indexing and searching of data. &lt;strong&gt;Master -eligible nodes&lt;/strong&gt; vote for a master that runs the cluster and index management.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Indices&lt;/strong&gt; are the high-level abstraction of your data. &lt;em&gt;Indices do not hold data themselves.&lt;/em&gt; They are just another abstraction for the thing that actually holds data. Any action you do on data such as INSERTS, DELETES, indexing and searching run against an Index. Indices can belong to exactly one cluster and are comprised of &lt;strong&gt;Shards&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shards&lt;/strong&gt; are instances of Apache Lucene. A shard can hold many &lt;strong&gt;Documents&lt;/strong&gt;. Shards are what does the actual data storage, indexing and searching. A shard belongs to exactly one node and index. There are two types of shards: &lt;strong&gt;primary&lt;/strong&gt; and &lt;strong&gt;replica&lt;/strong&gt;. These are mostly the exact same. They hold the same data, and &lt;em&gt;searches run against all shards in parallel&lt;/em&gt;. Of all the shards that hold the same data, one is the primary shard. This is the only shard that can accept indexing requests. Should the node that the primary shard resides on die, a replica shard will take over and become the primary. Then, ES will create a new replica shard and copy the data over.&lt;/p&gt;
&lt;p&gt;At the end of the day, we end up with something like this:&lt;/p&gt;
&lt;img data-attachment-id=&quot;25&quot; data-permalink=&quot;https://facinating.tech/image/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image.png&quot; data-orig-size=&quot;478,636&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image.png?w=225&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image.png?w=478&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/image.png?w=478&quot; alt=&quot;&quot; class=&quot;wp-image-25&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/image.png 478w, https://facinatingtech.files.wordpress.com/2020/02/image.png?w=113 113w, https://facinatingtech.files.wordpress.com/2020/02/image.png?w=225 225w&quot; sizes=&quot;(max-width: 478px) 100vw, 478px&quot;/&gt;&lt;h2&gt;A more in-depth look at Elasticsearch&lt;/h2&gt;
&lt;p&gt;If you want to run a system, it is my belief that you need to understand the system. In this section I will explain the parts of Elasticsearch I belief you should understand if you want to manage it in production. This will not have any recommendations in it those come later. Instead it aims purely at explaining necessary background.&lt;/p&gt;
&lt;h3&gt;Quorum&lt;/h3&gt;
&lt;p&gt;It is very important to understand that Elasticsearch is a (flawed) democracy. Nodes vote on who should lead them, the master. The master runs a lot of cluster-management processes and has the last say in many matters. ES is a flawed democracy because only a subclass of citizens, the master-eligible nodes, are allowed to vote. Master-eligible are all nodes that have this in their configuration:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;node.master: true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On cluster start or when the master leaves the cluster, all master-eligible nodes start an election for the new master. For this to work, you need to have 2n+1 master-eligible nodes. Otherwise it is possible to have a split-brain scenario, with two nodes receiving 50% of the votes. &lt;strong&gt;This is a split brain scenario and will lead to the loss of all data in one of the two partitions.&lt;/strong&gt; So don’t have this happen. You &lt;strong&gt;need&lt;/strong&gt; 2n+1 master-eligible nodes.&lt;/p&gt;
&lt;h3&gt;How nodes join the cluster&lt;/h3&gt;
&lt;p&gt;When an ES process starts, it is alone in the big, wide world. How does it know what cluster it belongs to? There are different ways this can be done. However, these days the way it &lt;em&gt;should&lt;/em&gt; be done is using what is called &lt;strong&gt;Seed Hosts&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Basically, Elasticsearch nodes talk with each other constantly about all the other nodes they have seen. Because of this, a node only needs to know a couple other nodes initially to learn about the whole cluster. Lets look at this example of a three node cluster:&lt;/p&gt;
&lt;img data-attachment-id=&quot;28&quot; data-permalink=&quot;https://facinating.tech/image-1/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-1.png&quot; data-orig-size=&quot;546,985&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image-1&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-1.png?w=166&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-1.png?w=546&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-1.png?w=546&quot; alt=&quot;&quot; class=&quot;wp-image-28&quot; width=&quot;273&quot; height=&quot;493&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-1.png?w=273 273w, https://facinatingtech.files.wordpress.com/2020/02/image-1.png?w=83 83w, https://facinatingtech.files.wordpress.com/2020/02/image-1.png?w=166 166w, https://facinatingtech.files.wordpress.com/2020/02/image-1.png 546w&quot; sizes=&quot;(max-width: 273px) 100vw, 273px&quot;/&gt;Initial state.
&lt;p&gt;In the beginning, Node A and C just know B. B is the seed host. Seed hosts are either given to ES in the form of a config file or they are put directly into elasticsearch.yml.&lt;/p&gt;
&lt;img data-attachment-id=&quot;29&quot; data-permalink=&quot;https://facinating.tech/image-2/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-2.png&quot; data-orig-size=&quot;547,982&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image-2&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-2.png?w=167&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-2.png?w=547&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-2.png?w=547&quot; alt=&quot;&quot; class=&quot;wp-image-29&quot; width=&quot;274&quot; height=&quot;491&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-2.png?w=274 274w, https://facinatingtech.files.wordpress.com/2020/02/image-2.png?w=84 84w, https://facinatingtech.files.wordpress.com/2020/02/image-2.png?w=167 167w, https://facinatingtech.files.wordpress.com/2020/02/image-2.png 547w&quot; sizes=&quot;(max-width: 274px) 100vw, 274px&quot;/&gt;&lt;br/&gt;Node A connects and exchanges information with B
&lt;p&gt;As soon as node A connects to B, B now knows of the existence of A. For A, nothing changes.&lt;/p&gt;
&lt;img data-attachment-id=&quot;32&quot; data-permalink=&quot;https://facinating.tech/image-3/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-3.png&quot; data-orig-size=&quot;565,976&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image-3&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-3.png?w=174&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-3.png?w=565&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-3.png?w=565&quot; alt=&quot;&quot; class=&quot;wp-image-32&quot; width=&quot;283&quot; height=&quot;488&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-3.png?w=283 283w, https://facinatingtech.files.wordpress.com/2020/02/image-3.png?w=87 87w, https://facinatingtech.files.wordpress.com/2020/02/image-3.png?w=174 174w, https://facinatingtech.files.wordpress.com/2020/02/image-3.png 565w&quot; sizes=&quot;(max-width: 283px) 100vw, 283px&quot;/&gt;Node C connects and shares information with B
&lt;p&gt;Now, C connects. As soon as this happens, B tells C about the existence of A. C and B now know all nodes in the cluster. As soon as A connects to B again, it will also learn of the existence of C.&lt;/p&gt;
&lt;h3&gt;Segments and segment merging&lt;/h3&gt;
&lt;p&gt;Above I said that shards store data. This is only partially true. At the end of the day, your data is stored on a file system in the form of.. files. In Lucene, and with that also Elasticsearch, these files are called &lt;strong&gt;Segments&lt;/strong&gt;. A shard will have between one and multiple thousand segments.&lt;/p&gt;
&lt;p&gt;Again, a segment is an actual, real file you can look at in the data directory of your Elasticsearch installation. This means that using a segment is overhead. If you want to look into one, you have to find and open it. That means if you have to open many files, there will be a lot of overhead. The problem is that segments in Lucene are &lt;em&gt;immutable&lt;/em&gt;. That is fancy language for saying they are only written once and cannot be changed. This in turn means that every document you put into ES will create a segment with only that single document in it. So clearly, a cluster that has a billion documents has a billion segments which means there are a literal billion files on the file system, right? Well, no.&lt;/p&gt;
&lt;p&gt;In the background, Lucene does constant &lt;strong&gt;segment merging&lt;/strong&gt;. It cannot change segments, but it can create new ones with the data of two smaller segments.&lt;/p&gt;
&lt;img data-attachment-id=&quot;35&quot; data-permalink=&quot;https://facinating.tech/image-4/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-4.png&quot; data-orig-size=&quot;700,579&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;image-4&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-4.png?w=300&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-4.png?w=700&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-4.png?w=700&quot; alt=&quot;&quot; class=&quot;wp-image-35&quot; width=&quot;701&quot; height=&quot;580&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/image-4.png 700w, https://facinatingtech.files.wordpress.com/2020/02/image-4.png?w=150 150w, https://facinatingtech.files.wordpress.com/2020/02/image-4.png?w=300 300w&quot; sizes=&quot;(max-width: 701px) 100vw, 701px&quot;/&gt;&lt;p&gt;This way, lucene constantly tries to keep the number of segments, which means the number of files, which means the overhead, small. It &lt;em&gt;is&lt;/em&gt; possible to force this process by using a force merge.&lt;/p&gt;
&lt;h3&gt;Message routing&lt;/h3&gt;
&lt;p&gt;In Elasticsearch, you can run any command against any node in a cluster and the result will be the same. That is interesting because at the end of the day a document will live in only one primary shard and its replicas, and ES &lt;em&gt;does not know where&lt;/em&gt;. There is no mapping saying a specific document lives in a specific shard.&lt;/p&gt;
&lt;p&gt;If you are &lt;strong&gt;searching&lt;/strong&gt;, then the ES node that gets the request will broadcast it to &lt;em&gt;all&lt;/em&gt; shards in the index. This means primary &lt;em&gt;and replica&lt;/em&gt;. These shards then look into all their segments for that document.&lt;/p&gt;
&lt;p&gt;If your are &lt;strong&gt;inserting&lt;/strong&gt;, then the ES node will randomly select a primary shard and put the document in there. It is then written to that primary shard and all of its replicas.&lt;/p&gt;
&lt;h2&gt;So how do I run Elasticsearch in production?&lt;/h2&gt;
&lt;p&gt;Finally, the practical part. I should mention that I managed ES mostly for logging. I will try to keep this bias out of this section, but will ultimately fail.&lt;/p&gt;
&lt;h3&gt;Sizing&lt;/h3&gt;
&lt;p&gt;The first question you need to ask and subsequently answer yourself, is about sizing. What size of ES cluster do you actually need?&lt;/p&gt;
&lt;h4&gt;RAM&lt;/h4&gt;
&lt;p&gt;I am talking about RAM first, because your RAM will limit all other resources.&lt;/p&gt;
&lt;h5&gt;Heap&lt;/h5&gt;
&lt;p&gt;ES is written in Java. Java uses a heap. You can think of this as java-reserved memory. There is all kind of stuff that is important about heap which would triple this document in size so I will get down to the most important part which is heap size.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use as much as possible, but no more than 30G of heap size.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is a dirty secret many people don’t know about heap: every object in the heap needs a unique address, an object pointer. This address is of fixed length, which means that the amount of objects you can address is limited. The short version of why this matters is that at a certain point, Java will start using compressed object pointers instead of uncompressed ones. That means that every memory access will have additional steps involved and be much slower. You 100% do not want to get over this threshold, which is somewhere around 32G.&lt;/p&gt;
&lt;p&gt;I once spend an entire week locked into a dark room doing nothing else but using &lt;a href=&quot;https://github.com/elastic/rally&quot;&gt;esrally&lt;/a&gt; to benchmark different file systems, heap sizes, FS and BIOS settting combinations of Elasticsearch. Long story short here is what it had to say about heap size:&lt;/p&gt;
&lt;img data-attachment-id=&quot;39&quot; data-permalink=&quot;https://facinating.tech/es1/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/es1.png&quot; data-orig-size=&quot;952,536&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;es1&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/es1.png?w=300&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/es1.png?w=750&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/es1.png?w=952&quot; alt=&quot;&quot; class=&quot;wp-image-39&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/es1.png 952w, https://facinatingtech.files.wordpress.com/2020/02/es1.png?w=150 150w, https://facinatingtech.files.wordpress.com/2020/02/es1.png?w=300 300w, https://facinatingtech.files.wordpress.com/2020/02/es1.png?w=768 768w&quot; sizes=&quot;(max-width: 952px) 100vw, 952px&quot;/&gt;Index append latency, lower is better
&lt;p&gt;The naming convention is fs_heapsize_biosflags. As you can see, starting at 32G of heap size performance suddenly starts getting worse. Same with throughput:&lt;/p&gt;
&lt;img data-attachment-id=&quot;40&quot; data-permalink=&quot;https://facinating.tech/es2/&quot; data-orig-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/es2.png&quot; data-orig-size=&quot;1027,541&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;es2&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=300&quot; data-large-file=&quot;https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=750&quot; src=&quot;https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=1024&quot; alt=&quot;&quot; class=&quot;wp-image-40&quot; srcset=&quot;https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=1024 1024w, https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=150 150w, https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=300 300w, https://facinatingtech.files.wordpress.com/2020/02/es2.png?w=768 768w, https://facinatingtech.files.wordpress.com/2020/02/es2.png 1027w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;Index append median throughput. Higher is better.
&lt;p&gt;Long story short: use 29G of RAM or 30 if you are feeling lucky, use XFS, and use hardwareprefetch and llc-prefetch if possible.&lt;/p&gt;
&lt;h5&gt;FS cache&lt;/h5&gt;
&lt;p&gt;Most people run Elasticsearch on Linux, and Linux uses RAM as file system cache. A common recommendation is to use 64G for your ES servers, with the idea that it will be half cache, half heap. &lt;strong&gt;I have not tested FS cache&lt;/strong&gt;. However, it is not hard to see that large ES clusters, like for logging, can benefit greatly from having a big FS cache. If all your indices fit in heap, not so much.&lt;/p&gt;
&lt;h4&gt;CPU&lt;/h4&gt;
&lt;p&gt;This depends on what you are doing with your cluster. If you do a lot of indexing, you need more and faster CPUs than if you just do logging. For logging, I found 8 cores to be more than sufficient, but you will find people out there using way more since their use case can benefit from it.&lt;/p&gt;
&lt;h4&gt;Disk&lt;/h4&gt;
&lt;p&gt;Not as straightforward as you might think. First of all, if your indices fit into RAM, your disk only matters when the node is cold. Secondly, the amount of data you can actually store depends on your index layout. Every shard is a Lucene instance and they all have memory requirement. That means there is a maximum number of shards you can fit into your heap. I will talk more about this in the index layout section.&lt;/p&gt;
&lt;p&gt;Generally, you can put all your data disks into a RAID 0. You should replicate on Elasticsearch level, so losing a node should not matter. Do not use LVM with multiple disks as that will write only to one disk at a time, not giving you the benefit of multiple disks at all.&lt;/p&gt;
&lt;p&gt;Regarding file system and RAID settings, I have found the following things:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Scheduler: cfq and deadline outperform noop. Kyber might be good if you have nvme but I have not tested it&lt;/li&gt;
&lt;li&gt;QueueDepth: as high as possible&lt;/li&gt;
&lt;li&gt;Readahead: yes, please&lt;/li&gt;
&lt;li&gt;Raid chunk size: no impact&lt;/li&gt;
&lt;li&gt;FS block size: no impact&lt;/li&gt;
&lt;li&gt;FS type: XFS &amp;gt; ext4&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Index layout&lt;/h3&gt;
&lt;p&gt;This highly depends on your use case. I can only talk from a logging background, specifically using Graylog.&lt;/p&gt;
&lt;h4&gt;Shards&lt;/h4&gt;
&lt;p&gt;Short version:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;for write heavy workloads, primary shards = number of nodes&lt;/li&gt;
&lt;li&gt;for read heavy workloads, primary shards * replication = number of nodes&lt;/li&gt;
&lt;li&gt;more replicas = higher search performance&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here is the thing. If you write stuff, the maximum write performance you can get is given by this equation:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;node_throughput*number_of_primary_shards&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason is very simple: if you have only one primary shard, then you can write data only as quickly as one node can write it, because a shard only ever lives on one node. If you really wanted to optimize write performance, you should make sure that every node only has exactly one shard on it, primary or replica, since replicas obviously get the same writes as the primary, and writes are largely dependent on disk IO. &lt;em&gt;Note: if you have a lot of indexing this might not be true and the bottleneck could be something else.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you want to optimize search performance, search performance is given by this equation:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;node_throughput*(number_of_primary_shards + number_of_replicas)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For searching, primary and replica shards are basically identical. So if you want to increase search performance, you can just increase the number of replicas, which can be done on the fly.&lt;/p&gt;
&lt;h3&gt;Size&lt;/h3&gt;
&lt;p&gt;Much has been written about index size. Here is what I found:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;30G of heap = 140 shards maximum per node&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using more than 140 shards, I had Elasticsearch processes crash with out-of-memory errors. This is because every shard is a Lucene instance, and every instance requires a certain amount of memory. That means there is a limit for how many shards you can have per node.&lt;/p&gt;
&lt;p&gt;If you have the amount of nodes, shards and index size, here is how many indices you can fit:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;number_of_indices = (140 * number_of_nodes) / (number_of_primary_shards * replication_factor)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;From that and your disk size you can easily calculate how big the indices have to be&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;index_size = (number_of_nodes * disk_size) / number_of_indices&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, keep in mind that bigger indices are also slower. For logging it is fine to a degree but for really search heavy applications, you should size more towards the amount of RAM you have.&lt;/p&gt;
&lt;h3&gt;Segment merging&lt;/h3&gt;
&lt;p&gt;Remember that every segment is an actual file on the file system. More segments = more overhead in reading. Basically for every search query, it goes to all the shards in the index, and from there to all the segments in the shards. Having many segments drastically increases read-IOPS of your cluster up to the point of it becoming unusable. Because of this it’s a good idea to keep the number of segments as low as possible.&lt;/p&gt;
&lt;p&gt;There is a force_merge API that allows you to merge segments down to a certain number, like 1. If you do index rotation, for example because you use Elasticsearch for logging, it is a good idea to do regular force merges &lt;strong&gt;when the cluster is not in use&lt;/strong&gt;. Force merging takes a lot of resources, and will slow your cluster down significantly. Because of this it is a good idea to not let for example Graylog do it for you, but do it yourself when the cluster is used less. You definitely want to do this if you have many indices though. Otherwise, your cluster will slowly crawl to a halt.&lt;/p&gt;
&lt;h3&gt;Cluster layout&lt;/h3&gt;
&lt;p&gt;For everything but the smallest setups it is a good idea to use dedicated master-eligible nodes. The main reasons is that you should always have 2n+1 master-eligible nodes to ensure quorum. But for data nodes you just want to be able to add a new one at any time, without having to worry about this requirement. Also, you don’t want high load on the data nodes to impact your master nodes.&lt;/p&gt;
&lt;p&gt;Finally, master nodes are ideal candidates for seed nodes. Remember that seed nodes are the easiest way you can do node discovery in Elasticsearch. Since your master nodes will seldomly change, they are the best choice for this, as they most likely already know all other nodes in the cluster.&lt;/p&gt;
&lt;p&gt;Master nodes can be pretty small, one core and maybe 4G of RAM is enough for most clusters. As always, keep an eye on actual usage and adjust accordingly.&lt;/p&gt;
&lt;h3&gt;Monitoring&lt;/h3&gt;
&lt;p&gt;I love monitoring, and I love monitoring Elasticsearch. ES gives you an absolute ton of metrics and it gives you all of them in the form of JSON, which makes it very easy to pass into monitoring tools. Here are some helpful things to monitor:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;number of segments&lt;/li&gt;
&lt;li&gt;heap usage&lt;/li&gt;
&lt;li&gt;heap GC time&lt;/li&gt;
&lt;li&gt;avg. search, index, merge time&lt;/li&gt;
&lt;li&gt;IOPS&lt;/li&gt;
&lt;li&gt;disk utilization&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;After around 5 hours of writing this, I think I dumped everything important about ES that is in my brain into this post. I hope it saves you many of the headaches I had to endure.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-discovery-quorums.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-discovery-quorums.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/elastic/rally&quot;&gt;https://github.com/elastic/rally&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/elasticsearch-performance-tuning-practice-at-ebay/&quot;&gt;https://tech.ebayinc.com/engineering/elasticsearch-performance-tuning-practice-at-ebay/&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-173234168-22-5e531f7464ed8&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20190321#blog_id=173234168&amp;amp;post_id=22&amp;amp;origin=facinatingtech.wordpress.com&amp;amp;obj_id=173234168-22-5e531f7464ed8&amp;amp;domain=facinating.tech&quot; data-name=&quot;like-post-frame-173234168-22-5e531f7464ed8&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sun, 23 Feb 2020 14:18:35 +0000</pubDate>
<dc:creator>thunderbong</dc:creator>
<og:type>article</og:type>
<og:title>In depth guide to running Elasticsearch in production</og:title>
<og:url>https://facinating.tech/2020/02/22/in-depth-guide-to-running-elasticsearch-in-production/</og:url>
<og:description>In this post, I discuss in-depth information on how to manage elasticsearch in production</og:description>
<og:image>https://facinatingtech.files.wordpress.com/2020/02/es2.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://facinating.tech/2020/02/22/in-depth-guide-to-running-elasticsearch-in-production/</dc:identifier>
</item>
<item>
<title>Haven: turn old Android phones into security cameras</title>
<link>https://github.com/guardianproject/haven</link>
<guid isPermaLink="true" >https://github.com/guardianproject/haven</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/guardianproject/haven&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e5528c969a6ebd9653aaeb9c30458d8f8cf8e27b/68747470733a2f2f7472617669732d63692e6f72672f677561726469616e70726f6a6563742f686176656e2e737667&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/guardianproject/haven.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Haven is for people who need a way to protect their personal areas and possessions without compromising their privacy. It is an Android application that leverages on-device sensors to provide monitoring and protection of physical areas. Haven turns any Android phone into a motion, sound, vibration and light detector, watching for unexpected guests and unwanted intruders. We designed Haven for investigative journalists, human rights defenders and people at risk of forced disappearance to create a new kind of herd immunity. By combining the array of sensors found in any smartphone, with the world's most secure communications technologies, like Signal and Tor, Haven prevents the worst kind of people from silencing citizens without getting caught in the act.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/havenob1.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/havenob1.png&quot; width=&quot;25%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/havenob2.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/havenob2.png&quot; width=&quot;25%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/havenob3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/havenob3.png&quot; width=&quot;25%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;View our full &lt;a href=&quot;https://guardianproject.github.io/haven/docs/preso/&quot; rel=&quot;nofollow&quot;&gt;Haven App Overview&lt;/a&gt; presentation for more about the origins and goals of the project.&lt;/p&gt;
&lt;h2&gt;Announcement and Public Beta&lt;/h2&gt;
&lt;p&gt;We are announcing Haven today, as an open-source project, along with a public beta release of the app. We are looking for contributors who understand that physical security is as important as digital, and who have an understanding and compassion for the kind of threats faced by the users and communities we want to support. We also think it is cool, cutting-edge and making use of encrypted messaging and onion routing in whole new ways. We believe Haven points the way to a more sophisticated approach to securing communication within networks of things and home automation system.&lt;/p&gt;
&lt;p&gt;Learn more about the story of this project at the links below:&lt;/p&gt;
&lt;h2&gt;Project Team&lt;/h2&gt;
&lt;p&gt;Haven was developed through a collaboration between &lt;a href=&quot;https://freedom.press&quot; rel=&quot;nofollow&quot;&gt;Freedom of the Press Foundation&lt;/a&gt; and &lt;a href=&quot;https://guardianproject.info&quot; rel=&quot;nofollow&quot;&gt;Guardian Project&lt;/a&gt;. Prototype funding was generously provided by FPF, and donations to support continuing work can be contributed through their site: &lt;a href=&quot;https://freedom.press/donate-support-haven-open-source-project/&quot; rel=&quot;nofollow&quot;&gt;https://freedom.press/donate-support-haven-open-source-project/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/art/logos/fopflogo.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/art/logos/fopflogo.png&quot; alt=&quot;Freedom of the Press Foundation&quot;/&gt;&lt;/a&gt; &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/art/logos/gplogo.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/art/logos/gplogo.png&quot; alt=&quot;Guardian Project&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Safety through Sensors&lt;/h2&gt;
&lt;p&gt;Haven only records when triggered by sound and motion and stores everything locally on the device. You can position the device's camera to capture visible motion or place your phone somewhere discreet to listen for noises. Receive secure notifications of intrusion events instantly or access logs remotely later.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/haven-sound-config.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/haven-sound-config.png&quot; width=&quot;25%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/haven-event-media.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/haven-event-media.png&quot; width=&quot;25%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/haven-event-list.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/guardianproject/haven/master/fastlane/android/metadata/en-US/images/phoneScreenshots/haven-event-list.png&quot; width=&quot;25%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following sensors are monitored for a measurable change, and then recorded to an event log on the device:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Accelerometer&lt;/strong&gt;: phone's motion and vibration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camera&lt;/strong&gt;: motion in the phone's visible surroundings from front or back camera&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microphone&lt;/strong&gt;: noises in the environment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Light&lt;/strong&gt;: change in light from ambient light sensor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Power&lt;/strong&gt;: detect device being unplugged or power loss&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Building&lt;/h2&gt;
&lt;p&gt;The application can be built using Android Studio and Gradle. It relies on a number of third-party dependencies, all of which are free, open-source, and listed at the end of this document.&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;You can currently get the Haven BETA release in one of three ways:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/cd3c76b98d0eeae4b718e9576526c564c3b11724/68747470733a2f2f677561726469616e70726f6a6563742e6769746875622e696f2f686176656e2d6e696768746c792f69636f6e2e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/cd3c76b98d0eeae4b718e9576526c564c3b11724/68747470733a2f2f677561726469616e70726f6a6563742e6769746875622e696f2f686176656e2d6e696768746c792f69636f6e2e706e67&quot; width=&quot;50%&quot; data-canonical-src=&quot;https://guardianproject.github.io/haven-nightly/icon.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or add this repository manually in F-Droid's Settings-&amp;gt;Repositories: &lt;a href=&quot;https://guardianproject.github.io/haven-nightly/fdroid/repo/&quot; rel=&quot;nofollow&quot;&gt;https://guardianproject.github.io/haven-nightly/fdroid/repo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can, of course, build the app yourself, from source.&lt;/p&gt;
&lt;p&gt;If you are an Android developer, you can learn more about how you can make use of F-Droid in your development workflow, for nightly builds, testing, reproducibility and more here: &lt;a href=&quot;https://f-droid.org/en/docs/&quot; rel=&quot;nofollow&quot;&gt;F-Droid Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Why no iPhone Support?&lt;/h2&gt;
&lt;p&gt;While we hope to support a version of Haven that runs directly on iOS devices in the future, iPhone users can still benefit from Haven today. You can purchase an inexpensive Android phone for less than $100 and use it as your &quot;Haven Device&quot;; leaving it behind whilst you keep your iPhone on you. If you run Signal on your iPhone you can configure Haven on Android to send encrypted notifications, with photos and audio, directly to you. If you enable the &quot;Tor Onion Service&quot; feature in Haven (requires installation of &quot;Orbot&quot; app as well) you can remotely access all Haven log data from your iPhone using the Onion Browser app.&lt;/p&gt;
&lt;p&gt;So, no, iPhone users we didn't forget about you and we hope you will pick up an inexpensive Android burner today!&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;Haven is meant to provide a smooth onboarding experience that walks users through configuring the sensors on their device to best detect intrusions into their environment. The current implementation has some of this implemented, but we are looking to improve this user experience dramatically.&lt;/p&gt;
&lt;h3&gt;Main view&lt;/h3&gt;
&lt;p&gt;The application's main view allows the user to select which sensors to use along with their corresponding levels of sensitivity. A security code is required to disable monitoring, which must be provided by the user. A phone number can be set, to which a message will be sent if any of the sensors are triggered.&lt;/p&gt;
&lt;h3&gt;Notifications&lt;/h3&gt;
&lt;p&gt;When one of the sensors is triggered (reaches the configured sensitivity threshold), notifications are sent through the following channels (if enabled):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;SMS: a message is sent to the number specified when monitoring started&lt;/li&gt;
&lt;li&gt;Signal: if configured, can send end-to-end encryption notifications via Signal&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that it is not necessary to install the Signal app on the device that runs Haven. Doing so may invalidate the app's previous Signal registration and safety numbers. Haven uses normal APIs to communicate via Signal.&lt;/p&gt;
&lt;p&gt;Notifications are sent through a service running in the background that is defined in class &lt;code&gt;MonitorService&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Remote Access&lt;/h3&gt;
&lt;p&gt;All event logs and captured media can be remotely accessed through a &lt;a href=&quot;https://www.torproject.org/docs/onion-services&quot; rel=&quot;nofollow&quot;&gt;Tor Onion Service&lt;/a&gt;. Haven must be configured as an Onion Service and requires the device to also have &lt;a href=&quot;https://guardianproject.info/apps/orbot&quot; rel=&quot;nofollow&quot;&gt;Orbot: Tor for Android&lt;/a&gt; installed and running.&lt;/p&gt;
&lt;h2&gt;ATTRIBUTIONS&lt;/h2&gt;
&lt;p&gt;This project contains source code or library dependencies from the following projects:&lt;/p&gt;
</description>
<pubDate>Sun, 23 Feb 2020 14:00:29 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/218109?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>guardianproject/haven</og:title>
<og:url>https://github.com/guardianproject/haven</og:url>
<og:description>Haven is for people who need a way to protect their personal spaces and possessions without compromising their own privacy, through an Android app and on-device sensors - guardianproject/haven</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/guardianproject/haven</dc:identifier>
</item>
<item>
<title>Show HN: Search code in GitHub repos using regular expressions</title>
<link>https://grep.app</link>
<guid isPermaLink="true" >https://grep.app</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://grep.app&quot;&gt;https://grep.app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22396824&quot;&gt;https://news.ycombinator.com/item?id=22396824&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 264&lt;/p&gt;
&lt;p&gt;# Comments: 69&lt;/p&gt;
</description>
<pubDate>Sun, 23 Feb 2020 13:53:47 +0000</pubDate>
<dc:creator>danfox</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://grep.app/</dc:identifier>
</item>
<item>
<title>Past Time to Tell the Public:It Will Probably Go Pandemic, We Should Prepare Now</title>
<link>https://virologydownunder.com/past-time-to-tell-the-public-it-will-probably-go-pandemic-and-we-should-all-prepare-now/</link>
<guid isPermaLink="true" >https://virologydownunder.com/past-time-to-tell-the-public-it-will-probably-go-pandemic-and-we-should-all-prepare-now/</guid>
<description>&lt;span id=&quot;dpsp-post-sticky-bar-markup&quot; data-mobile-size=&quot;720&quot;/&gt;&lt;span id=&quot;dpsp-post-content-markup&quot; data-image-pin-it=&quot;false&quot;/&gt;&lt;p class=&quot;has-medium-font-size&quot;&gt;&lt;strong&gt;by Jody Lanard and Peter M. Sandman&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;has-background has-medium-font-size has-pale-cyan-blue-background-color&quot;&gt;&lt;strong&gt;NOTE FROM IAN:&lt;/strong&gt; The expert risk communication team of Lanard and Sandman has given me permission to post their very well-considered reply to my question of them just on 24 hours ago, here. I’m not an expert in this space so I sought their very experienced thoughts about changing my tone around the COVID-19 multi-country epidemic before I started doing so yesterday. Here is what they had to say…&lt;/p&gt;
&lt;img src=&quot;https://virologydownunder.com/wp-content/uploads/2020/01/virus-1812092_1920_PIXABAY-1024x512.jpg&quot; alt=&quot;&quot; class=&quot;wp-image-9366&quot; srcset=&quot;https://virologydownunder.com/wp-content/uploads/2020/01/virus-1812092_1920_PIXABAY-1024x512.jpg 1024w, https://virologydownunder.com/wp-content/uploads/2020/01/virus-1812092_1920_PIXABAY-300x150.jpg 300w, https://virologydownunder.com/wp-content/uploads/2020/01/virus-1812092_1920_PIXABAY-768x384.jpg 768w, https://virologydownunder.com/wp-content/uploads/2020/01/virus-1812092_1920_PIXABAY-1536x768.jpg 1536w, https://virologydownunder.com/wp-content/uploads/2020/01/virus-1812092_1920_PIXABAY.jpg 1920w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p class=&quot;has-medium-font-size&quot;&gt;We are starting to hear from experts and officials who now believe a COVID-19 pandemic is more and more likely.  They want to use the “P word,” and also start talking more about what communities and individuals can and should do to prepare.  On February 22, Australian virologist Ian Mackay asked us for our thoughts on this phase of COVID-19 risk communication. &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Here is our response.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Yes, it is past time to say “pandemic” – and to stop saying “stop”&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;It’s a good time to think about how to use the “P word” (pandemic) in talking about COVID-19.  Or rather, it is past time.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;It is important to help people understand that while you think – if you do think so – that this is going to be pandemic in terms of becoming very widespread,  no one knows yet how much severe disease there will be around the world over short periods of time.  “Will it be a mild, or moderate, or severe pandemic?  Too soon to say, but at the moment, there are some tentative signs that….”  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;The most crucial (and overdue) risk communication task for the next few days is to help people visualize their communities when “keeping it out” – containment – is no longer relevant.  The P word is a good way to launch this message.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;But the P word alone won’t help the public understand what’s about to change: the end of most quarantines, travel restrictions, contact tracing, and other measures designed to keep “them” from infecting “us,” and the switch to measures like canceling mass events designed to keep us from infecting each other.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;We are near-certain that the desperate-sounding last-ditch containment messaging of recent days is contributing to a massive global misperception about the near-term future.  The theme of WHO’s and many governments’ messages – that the &lt;a href=&quot;https://www.statnews.com/2020/02/21/coronavirus-picking-up-steam-outside-china/&quot;&gt;“window of opportunity” to stop spread of the virus&lt;/a&gt; is closing – is like the famous cover page of Nevil Shute’s &lt;em&gt;On the Beach&lt;/em&gt;: “There is still time … Brother.”&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;For weeks we have been trying to get officials to talk early about the main goal of containment: to slow the spread of the virus, not to stop it.  And to explain that containment efforts would eventually end.  And to help people learn about “after containment.”  This risk communication has not happened yet in most places.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;So here is one more pitch for openness about containment.  Officials: Please read &lt;a href=&quot;https://www.psandman.com/col/swineflu2.htm&quot;&gt;Containment as Signal, Swine Flu Risk Miscommunication&lt;/a&gt;, which we wrote in 2009.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;One horrible effect of this continued “stop the pandemic” daydream masquerading as a policy goal: It is driving counter-productive and outrage-inducing measures by many countries against travelers from other countries, even their own citizens back from other countries.  But possibly more horrible: The messaging is driving resources toward “stopping,” and away from the main potential benefit of containment – slowing the spread of the pandemic and thereby buying a little more time to prepare for what’s coming. &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;We hope that governments and healthcare institutions are using this time wisely.  We know that ordinary citizens are not being asked to do so.  In most countries – including our United States and your Australia – ordinary citizens have not been asked to prepare.  Instead, they have been led to expect that their governments will keep the virus from their doors.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Take the risk of scaring people&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Whenever we introduce the word “pandemic,” it’s important to validate that it’s a scary word – both to experts and to non-experts – because it justifiably contains the implication of something potentially really bad, and definitely really disruptive, for an unknown period of time.  This implication is true and unavoidable, even if the overall pattern of disease ends up being mild, like the 2009-10 “swine flu” pandemic.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Validate also that some people may accuse you of fear-mongering.  And respond that hiding your strong professional opinion about this pandemic-to-be would be immoral, or not in keeping with your commitment to transparency, or unforgivably unprofessional, or derelict in your duty to warn, or whatever feels truest in your heart.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;It may help to consider the “damned if you do, damned if you don’t” fallacy.  Feel free to say that “Jody Lanard and Peter Sandman say” that officials or experts – in this case YOU – are “darned if you do anddamned if you don’t.”  You’re only darned if you &lt;em&gt;warn&lt;/em&gt; about something that turns out minor.  But you’re damned, and rightly so, if you &lt;em&gt;fail to warn&lt;/em&gt; about something that turns out serious.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;It’s simply not true, in principle or in practice, that you are damned if you do and damned if you don’t!  Over-alarming risk messages are far more forgivable than over-reassuring ones.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Push people to prepare, and guide their prep &lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;This is the most culpable neglected messaging in many countries at this point.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;The main readiness stuff we routinely see from official and expert sources is either “DON’T get ready!” (masks), or “Do what we’ve always told you to do!” (hand hygiene and non-mask respiratory etiquette).&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;The general public, and many categories of civil society, are not actively being recruited to do anything different in the face of COVID-19 approaching.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;A fair number of health care workers and communication officers tell us their hospitals and healthcare systems are just barely communicating about COVID-19. They want to be involved in how to prepare for “business not as usual.”  We’re guessing that many hospital managements are in fact preparing for COVID-19, but we worry that they’re doing it too quietly, without enough effort to prepare their staff. &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Lots of businesses, especially smaller ones, are doing off-the-cuff pre-pandemic planning.  Several trade journals have articles about how specific industries should prepare for a likely pandemic.  Around February 10, the U.S. Centers for Disease Control and Prevention posted &lt;a href=&quot;https://www.cdc.gov/coronavirus/2019-ncov/specific-groups/guidance-business-response.html&quot;&gt;interim guidance for businesses&lt;/a&gt;.  But we have seen almost nothing in mainstream media citing this guidance, or recommending business continuity strategies like urgent cross-training so that core functions won’t be derailed because certain key employees are out sick, for instance.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Pandemic planning research suggests that employees are likeliest to say they will show up for work during a pandemic if three specs are met – if they think their family is reasonably safe; if they think their employer is being candid with them about the situation; and if they have a pandemic-specific job assignment in addition to or different from their routine “peacetime” assignment.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Hardly any officials are telling civil society and the general public how to get ready for this pandemic.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Even officials who say very alarming things about the prospects of a pandemic mostly focus on how their agencies are preparing, not on how the people they misperceive as “audience” should prepare.  “Audience” is the wrong frame.  We are all stakeholders, and we don’t just want to hear what officials are doing.  We want to hear what we can do too.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;We want – and need – to hear advice like this: &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Try to get a few extra months’ worth of prescription meds, if possible. &lt;/li&gt;
&lt;li&gt;Think through now how we will take care of sick family members while trying not to get infected. &lt;/li&gt;
&lt;li&gt;Cross-train key staff at work so one person’s absence won’t derail our organization’s ability to function.&lt;/li&gt;
&lt;li&gt;Practice touching our faces less. So how about a face-counter app like the step-counters so many of us use? &lt;/li&gt;
&lt;li&gt;Replace handshakes with elbow-bumps (the “Ebola handshake”). &lt;/li&gt;
&lt;li&gt;Start building harm-reduction habits like pushing elevator buttons with a knuckle instead of a fingertip. &lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;has-medium-font-size&quot;&gt;There is so much for people to do, and to practice doing in advance.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Preparedness is emotional too&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Suggesting things people can do to prepare for a possible hard time to come doesn’t just get them better prepared logistically.  It also helps get them better prepared emotionally.  It helps get them through the Oh My God (OMG) moment everyone needs to have, and needs to get through, preferably without being accused of hysteria.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;It is better to get through this OMG moment now rather than later.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Offering people a list of preparedness steps to choose among means that those who are worried and feeling helpless can better bear their worry, and those who are beyond worry and deep into denial can better face their worry.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Yet another benefit: The more people who are making preparedness efforts, the more connected to each other they feel.  Pandemic preparedness should be a communitarian experience.  When a colleague offers you an elbow bump instead of a handshake, your mind goes to those lists of preparedness recommendations you’ve been seeing, and you feel part of a community that’s getting ready together.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;This OMG realization that we have termed the “adjustment reaction” (see  &lt;a href=&quot;http://www.psandman.com/col/teachable.htm&quot;&gt;http://www.psandman.com/col/teachable.htm&lt;/a&gt;) is a step that is hard to skip on the way to the new normal.  Going through it before a crisis is full-blown is more conducive to resilience, coping, and rational response than going through it mid-crisis.  Officials make a mistake when they sugarcoat alarming information, postponing the public’s adjustment reaction in the vain hope that they can avoid it altogether.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Specific pandemic preparedness messages&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Below are links to specific preparedness messaging we drafted for a possible H5N1 pandemic.  The links are all from our 2007 website column &lt;a href=&quot;http://www.psandman.com/col/panflu4-1.htm&quot;&gt;What to Say When a Pandemic Looks Imminent: Messaging for WHO Phases Four and Five&lt;/a&gt;.  Each item is in two parts – a draft message (a summary sentence followed by a few paragraphs of elaboration), then a risk communication discussion of why we think it’s an appropriate pre-pandemic message.  Because these were written with H5N1 in mind, the pandemic they contemplate is more severe and less likely than the one we contemplate today.  So some changes may be called for – but frankly, in our judgment, not many.&lt;/p&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-2.htm#msg8&quot;&gt;We may have a window of opportunity now to make some practical preparations. We must make the most of it – even though the effort may be wasted if a severe pandemic doesn’t happen.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-2.htm#msg9&quot;&gt;What matters most is how households, neighborhoods, community groups, and businesses prepare.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-2.htm#msg10&quot;&gt;Individual and community preparations will focus on three tasks – reducing each person’s chance of getting sick, helping households with basic survival needs during a pandemic, and minimizing and coping with larger societal disruption.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-2.htm#msg11&quot;&gt;Social distancing will be important but unpleasant.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-2.htm#msg12&quot;&gt;School closings present a particularly difficult social distancing dilemma.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-3.htm#msg13&quot;&gt;Hand-washing is far from a panacea. But it’s easy, it’s under your control, and it has no significant downside.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-3.htm#msg14&quot;&gt;Like washing your hands, wearing a facemask may help a bit. But it has more downside than washing your hands.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-3.htm#msg15&quot;&gt;Getting ready for a pandemic is largely about preparing for possible shortages.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-3.htm#msg16&quot;&gt;It’s probably too late to stockpile much now, but do what you can.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-3.htm#msg17&quot;&gt;Now is also the time to think about how you will care for loved ones at home.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.psandman.com/col/panflu4-3.htm#msg18&quot;&gt;To get ourselves through the hard times that may be coming, we will need volunteers. How can you help?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;has-medium-font-size&quot;&gt;One of the scariest messaging failures in the developed world is not telling people vividly about what the end of containment will look like, for instance the end of contact-tracing and most quarantines. &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;The FAQs on the Singapore Ministry of Health webpage (&lt;a href=&quot;https://www.moh.gov.sg/covid-19/faqs&quot;&gt;https://www.moh.gov.sg/covid-19/faqs&lt;/a&gt;) can serve as a model that other developed countries can adapt to start talking to their publics about this now, to reduce the shock and anger when governments stop trying to contain all identified cases. &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;What’s working for us&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;We’d like to share with you some of our recent everyday life experiences in talking about pandemic preparedness with people who perceive us as a bit knowledgeable about what may be on the horizon.  Some of this overlaps with the more generic comments above.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;1.      We’ve found it useful to tell friends and family to try to get ahead on their medical prescriptions if they can, in case of very predictable supply chain disruptions, and so they won’t have to go out to the pharmacy at a time when there may be long lines of sick people.  This helps them in a practical sense, but it also makes them visualize – often for the first time – how a pandemic may impact them in their everyday lives, even if they don’t actually catch COVID-19.  It simultaneously gives them a small “Oh my God” moment (an emotional rehearsal about the future) – and something to do about it right away to help them get through the adjustment reaction.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;2.      We also recommend that people might want to slowly (so no one will accuse them of panic-buying) start to stock up on enough non-perishable food to last their households through several weeks of social distancing at home during an intense wave of transmission in their community.  This too seems to get through emotionally, as well as being useful logistically.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;3.      Three other recommendations that we feel have gone over well with our friends and acquaintances:&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;a.       Suggesting practical organizational things they and their organizations can do to get ready, such as cross-training to mitigate absenteeism.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;b.      Suggesting that people make plans for childcare when they are sick, or when their child is sick.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;4.      And the example we like the best, because it gives every single person an immediate action that they can take over and over: Right now, today, start practicing not touching your face when you are out and about!  You probably won’t be able to do it perfectly, but you can greatly reduce the frequency of potential self-inoculation.  You can even institute a buddy system, where friends and colleagues are asked to remind each other when someone scratches her eyelid or rubs his nose.  As we noted earlier, someone should develop a face-touching app – instead of a step-counting app to encourage you to walk more, how about an app to encourage you to auto-inoculate less!  And track your progress, and compete with your friends, even!&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;The last message on our list – to practice and try to form a new habit – has several immediate and longer-term benefits.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Having something genuinely useful to do can bind anxiety or reduce apathy.  You feel less helpless and less passive.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;And you can see yourself improving. &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;And you can work on your new habit alone, and also in a pro-social communitarian way.  Others can help you do it, and you can help them. &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;And it yields real harm reduction!  It is arguably the endpoint of what washing your hands is for, and it helps when you can’t wash your hands out in the world.&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Like all good pandemic preparedness recommendations, it helps you rehearse emotionally, as well as logistically. &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;The bottom line&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Every single official we know is having multiple “Oh my God” moments, as new COVID-19 developments occur and new findings emerge.  OMG – there is a fair amount of transmission by infected people with mild or subclinical cases!  OMG – there is a high viral load early on in nasal and pharyngeal samples!  OMG – the Diamond Princess, how can that have been allowed to happen!  And on and on.  &lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Officials help each other through those moments.  They go home and tell their families and friends, sharing the OMG sensation.  And then what do they tell the public?  That they understand that “people are concerned” (as if they themselves weren’t alarmed), but “the risk is low and there’s nothing you need to do now.”&lt;/p&gt;
&lt;p class=&quot;has-medium-font-size&quot;&gt;Ian, it sounds like you want to argue on behalf of preparedness.  Encouraging all stakeholders to prepare logistically should start now, if not sooner.  And you are in a position not just to encourage logistical preparedness, but also to encourage government sources and other experts like yourself to do the same.  Perhaps even more important, in our judgment: You can try to encourage emotional preparedness, and try to encourage other official and expert sources to encourage emotional preparedness – guiding people’s OMG adjustment reactions instead of trying to stamp them out.&lt;/p&gt;
&lt;p&gt;Hits: 332&lt;/p&gt;
</description>
<pubDate>Sun, 23 Feb 2020 12:50:24 +0000</pubDate>
<dc:creator>aaron695</dc:creator>
<og:type>article</og:type>
<og:title>Past Time to Tell the Public: “It Will Probably Go Pandemic, and We Should All Prepare Now”</og:title>
<og:description>by Jody Lanard and Peter M. Sandman NOTE FROM IAN: The expert risk communication team of Lanard and Sandman has given me permission to post their very well-considered reply to my question of them just</og:description>
<og:url>https://virologydownunder.com/past-time-to-tell-the-public-it-will-probably-go-pandemic-and-we-should-all-prepare-now/</og:url>
<og:image>https://virologydownunder.com/wp-content/uploads/2020/02/qtq80-2Xfh4t.jpeg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://virologydownunder.com/past-time-to-tell-the-public-it-will-probably-go-pandemic-and-we-should-all-prepare-now/</dc:identifier>
</item>
<item>
<title>The Zen of Go</title>
<link>https://dave.cheney.net/2020/02/23/the-zen-of-go</link>
<guid isPermaLink="true" >https://dave.cheney.net/2020/02/23/the-zen-of-go</guid>
<description>&lt;p&gt;&lt;em&gt;This article was derived from my &lt;a href=&quot;https://www.gophercon.org.il&quot;&gt;GopherCon Israel 2020&lt;/a&gt; presentation. It’s also quite long. If you’d prefer a shorter version, head over to &lt;a href=&quot;https://the-zen-of-go.netlify.com&quot;&gt;the-zen-of-go.netlify.com&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The video isn’t online, yet. I’ll update the post when it is available.&lt;/em&gt;&lt;/p&gt;
&lt;hr class=&quot;wp-block-separator&quot;/&gt;&lt;h2 id=&quot;_how_should_we_write_good_code&quot;&gt;How should I write good code?&lt;/h2&gt;
&lt;p&gt;Something that I’ve been thinking about a lot recently, when reflecting on the body of my own work, is a common subtitle, &lt;em&gt;how should I write good code?&lt;/em&gt; Given nobody actively seeks to write &lt;em&gt;bad&lt;/em&gt; code, this leads to the question; &lt;em&gt;how do you know when you’ve written good Go code?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If there’s a continuum between good and bad, how to do we know what the good parts are? What are its properties, its attributes, its hallmarks, its patterns, and its idioms?&lt;/p&gt;
&lt;h2 id=&quot;_idiomatic_go&quot;&gt;Idiomatic Go&lt;/h2&gt;
&lt;img src=&quot;https://dave.cheney.net/wp-content/uploads/2020/02/1011226.jpg&quot; alt=&quot;&quot; class=&quot;wp-image-3939&quot; srcset=&quot;https://dave.cheney.net/wp-content/uploads/2020/02/1011226.jpg 640w, https://dave.cheney.net/wp-content/uploads/2020/02/1011226-300x225.jpg 300w, https://dave.cheney.net/wp-content/uploads/2020/02/1011226-624x468.jpg 624w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;p&gt;Which brings me to idiomatic Go. To say that something is idiomatic is to say that it follows the style of the time. If something is not idiomatic, it is not following the prevailing style. It is unfashionable.&lt;/p&gt;
&lt;p&gt;More importantly, to say to someone that their code is not idiomatic does not explain &lt;em&gt;why&lt;/em&gt; it’s not idiomatic. Why is this? Like all truths, the answer is found in the dictionary.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;idiom (noun): a group of words established by usage as having a meaning not deducible from those of the individual words.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Idioms are hallmarks of shared values. Idiomatic Go is not something you learn from a book, it’s something that you acquire by being part of a community.&lt;/p&gt;
&lt;img src=&quot;https://dave.cheney.net/wp-content/uploads/2020/02/mean-girls-you-cant-sit-with-us-main.jpg&quot; alt=&quot;&quot; class=&quot;wp-image-3940&quot; srcset=&quot;https://dave.cheney.net/wp-content/uploads/2020/02/mean-girls-you-cant-sit-with-us-main.jpg 750w, https://dave.cheney.net/wp-content/uploads/2020/02/mean-girls-you-cant-sit-with-us-main-300x227.jpg 300w, https://dave.cheney.net/wp-content/uploads/2020/02/mean-girls-you-cant-sit-with-us-main-624x472.jpg 624w&quot; sizes=&quot;(max-width: 750px) 100vw, 750px&quot;/&gt;&lt;p&gt;My concern with the mantra of idiomatic Go is, in many ways, it can be exclusionary. It’s saying “you can’t sit with us.” After all, isn’t that what we mean when critique of someone’s work as non-idiomatic? They didn’t do It right. It doesn’t look right. It doesn’t follow the style of time.&lt;/p&gt;
&lt;p&gt;I offer that idiomatic Go is not a suitable mechanism for teaching how to write good Go code because it is defined, fundamentally, by telling someone they did it wrong. Wouldn’t it be better if the advice we gave didn’t alienate the author right at the point they were most willing to accept it?&lt;/p&gt;
&lt;h2 id=&quot;_proverbs&quot;&gt;Proverbs&lt;/h2&gt;
&lt;p&gt;Stepping away problematic idioms, what other cultural artefacts do Gophers have? Perhaps we can turn to Rob Pike’s wonderful &lt;a href=&quot;http://go-proverbs.github.io&quot;&gt;Go Proverbs&lt;/a&gt;. Are these suitable teaching tools? Will these tell newcomers how to write good Go code?&lt;/p&gt;
&lt;p&gt;In general, I don’t think so. This is not to dismiss Pike’s work, it is just that the Go Proverbs, like Segoe Kensaku’s original, are observations, not statements of value. Again, the dictionary comes to the rescue:&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;proverb (noun): a short, well-known pithy saying, stating a general truth or piece of advice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The goal of the Go Proverbs are to reveal a deeper truth about the design of the language, but how useful is advice like the &lt;em&gt;empty interface says nothing&lt;/em&gt; to a novice from a language that doesn’t have structural typing?&lt;/p&gt;
&lt;p&gt;It’s important to recognise that, in a growing community, at any time the people learning Go far outnumber those who claim to have mastered the language. Thus proverbs are perhaps not the best teaching tool in this scenario.&lt;/p&gt;
&lt;h2 id=&quot;_engineering_values&quot;&gt;Engineering Values&lt;/h2&gt;
&lt;p&gt;Dan Luu found &lt;a href=&quot;https://danluu.com/microsoft-culture/&quot;&gt;an old presentation&lt;/a&gt; by Mark Lucovsky about the engineering culture of the windows team around the windows NT-windows 2000 timeframe. The reason I mention it is Lukovsky’s description of a culture as a common way of evaluating designs and making tradeoffs.&lt;/p&gt;
&lt;img src=&quot;https://dave.cheney.net/wp-content/uploads/2020/02/Lucovsky.001.jpeg&quot; alt=&quot;&quot; class=&quot;wp-image-3944&quot; srcset=&quot;https://dave.cheney.net/wp-content/uploads/2020/02/Lucovsky.001.jpeg 720w, https://dave.cheney.net/wp-content/uploads/2020/02/Lucovsky.001-300x225.jpeg 300w, https://dave.cheney.net/wp-content/uploads/2020/02/Lucovsky.001-624x468.jpeg 624w&quot; sizes=&quot;(max-width: 720px) 100vw, 720px&quot;/&gt;&lt;p&gt;There are many ways of discussing culture, but with respect to an engineering culture Lucovsky’s description is apt. The central idea is &lt;em&gt;values guide decisions in an unknown design space&lt;/em&gt;. The values of the NT team were; portability, reliability, security, and extensibility. Engineering values are, crudely translated, the way things are done around here.&lt;/p&gt;
&lt;h2 id=&quot;_gos_values&quot;&gt;Go’s values&lt;/h2&gt;
&lt;p&gt;What are the explicit values of Go? What are the core beliefs or philosophy that define the way a Go programmer interprets the world? How are they promulgated? How are they taught? How are they enforced? How do they change over time?&lt;/p&gt;
&lt;p&gt;How will you, as a newly minted Go programmer, inculcate the engineering values of Go? Or, how will you, a seasoned Go professional promulgate your values to a future generations? And just so we’re clear, this process of knowledge transfer is not optional. Without new blood and new ideas, our community become myopic and wither.&lt;/p&gt;
&lt;h3 id=&quot;_other_languages_values&quot;&gt;The values of other languages&lt;/h3&gt;
&lt;p&gt;To set the scene for what I’m getting at we can look to other languages we see examples of their engineering values.&lt;/p&gt;
&lt;p&gt;For example, C++ (and by extension Rust) believe that a programmer &lt;em&gt;should not have to pay for a feature they do not use&lt;/em&gt;. If a program does not use some computationally expensive feature of the language, then it shouldn’t be forced to shoulder the cost of that feature. This value extends from the language, to its standard library, and is used as a yardstick for judging the design of all code written in C++.&lt;/p&gt;
&lt;p&gt;In Java, and Ruby, and Smalltalk, the core value that &lt;em&gt;everything is an object&lt;/em&gt; drives the design of programs around message passing, information hiding, and polymorphism. Designs that shoehorn a procedural style, or even a functional style, into these languages are considered to be wrong–or as Gophers would say, non idiomatic.&lt;/p&gt;
&lt;p&gt;Turning to our own community, what are the engineering values that bind Go programmers? Discourse in our community is often fractious, so deriving a set of values from first principles would be a formidable challenge. Consensus is critical, but exponentially more difficult as the number of contributors to the discussion increases. But what if someone had done the hard work for us.&lt;/p&gt;
&lt;h2 id=&quot;_the_zen_of_python_go&quot;&gt;The Zen of &lt;s&gt;Python&lt;/s&gt; Go&lt;/h2&gt;
&lt;p&gt;Several decades ago Tim Peters sat down and penned &lt;em&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0020/&quot;&gt;PEP-20&lt;/a&gt;&lt;/em&gt;, the Zen of Python. Peters’ attempted to document the engineering values that he saw Guido van Rossum apply in his role as BDFL for Python.&lt;/p&gt;
&lt;p&gt;For the remainder of this article, I’m going to look towards the Zen of Python and ask, is there anything that can inform the engineering values of Go programmers?&lt;/p&gt;
&lt;h2 id=&quot;_a_good_package_starts_with_a_good_name&quot;&gt;A good package starts with a good name&lt;/h2&gt;
&lt;p&gt;Let’s start with something spicy,&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Namespaces are one honking great idea–let’s do more of those!”&lt;/p&gt;
&lt;cite&gt;The Zen of Python, Item 19&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;This is pretty unequivocal, Python programmers should use namespaces. Lots of them.&lt;/p&gt;
&lt;p&gt;In Go parlance a namespace is a package. I doubt there is any question that grouping things into packages is good for design and potentially reuse. But there might be some confusion, especially if you’re coming with a decade of experience in another language, about the right way to do this.&lt;/p&gt;
&lt;p&gt;In Go each package should have a purpose, and the best way to know a package’s purpose is by its name—a noun. A package’s name describes what it provides. So too reinterpret Peters’ words, every Go package should have a single purpose.&lt;/p&gt;
&lt;p&gt;This is not a new idea, &lt;a href=&quot;https://dave.cheney.net/2019/01/08/avoid-package-names-like-base-util-or-common&quot;&gt;I’ve been saying this a while&lt;/a&gt;, but why should you do this rather than approach where packages are used for fine grained taxonomy? Why, because change.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Design is the art of arranging code to work today, and be changeable forever.”&lt;/p&gt;
&lt;cite&gt;Sandi Metz&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Change is the name of the game we’re in. What we do as programmers is manage change. When we do that well we call it design, or architecture. When we do it badly we call it technical debt, or legacy code.&lt;/p&gt;
&lt;p&gt;If you are writing a program that works perfectly, one time, for one fixed set of inputs then nobody cares if the code is good or bad because ultimately the output of the program is all the business cares about.&lt;/p&gt;
&lt;p&gt;But this is &lt;em&gt;never&lt;/em&gt; true. Software has bugs, requirements change, inputs change, and very few programs are written solely to be executed once, thus your program &lt;em&gt;will&lt;/em&gt; change over time. Maybe it’s you who’ll be tasked with this, more likely it will be someone else, but someone has to change that code. Someone has to maintain that code.&lt;/p&gt;
&lt;p&gt;So, how can we make it easy to for programs to change? Interfaces everywhere? Make everything mockable? Pernicious dependency injection? Well, maybe, for some classes of programs, but not many, those techniques will be useful. However, for the majority of programs, designing something to be flexible up front is over engineering.&lt;/p&gt;
&lt;p&gt;What if, instead, we take a position that rather than enhancing components, we replace them. Then the best way to know when something needs to be replaced, is when it doesn’t do what it says on the tin.&lt;/p&gt;
&lt;p&gt;A good package starts with choosing a good name. Think of your package’s name as an elevator pitch, using just one word, to describe what it provides. When the name no longer matches the requirement, find a replacement.&lt;/p&gt;
&lt;h2 id=&quot;_simple_is_better_than_complex&quot;&gt;Simplicity matters&lt;/h2&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Simple is better than complex.”&lt;/p&gt;
&lt;cite&gt;The Zen of Python, Item 3&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;PEP-20 says simple is better than complex, I couldn’t agree more. A couple of years ago I made this tweet;&lt;/p&gt;
&lt;div class=&quot;wp-block-embed__wrapper&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Most programming languages start out aiming to be simple, but end up just settling for being powerful.&lt;/p&gt;
— Dave Cheney (@davecheney) &lt;a href=&quot;https://twitter.com/davecheney/status/539576755254611968?ref_src=twsrc%5Etfw&quot;&gt;December 2, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;My observation, at least at the time, was that I couldn’t think of a language introduced in my life time that didn’t purport to be simple. Each new language offered as a justification, and an enticement, their inherent simplicity. But as I researched, I found that simplicity was not a core value of the many of the languages considered Go’s contemporaries. &lt;span id=&quot;easy-footnote-1-3936&quot; class=&quot;easy-footnote-margin-adjust&quot;/&gt;&lt;span class=&quot;easy-footnote&quot;&gt;&lt;a href=&quot;https://dave.cheney.net/2020/02/23/the-zen-of-go#easy-footnote-bottom-1-3936&quot; title=&quot;This part of the talk had several screenshots of the landing pages for the websites for &amp;lt;a href=&amp;quot;https://www.ruby-lang.org/en/&amp;quot;&amp;gt;Ruby&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;https://swift.org&amp;quot;&amp;gt;Swift&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;https://elm-lang.org&amp;quot;&amp;gt;Elm&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;https://golang.org&amp;quot;&amp;gt;Go&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;https://nodejs.org/en/&amp;quot;&amp;gt;NodeJS&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;https://www.python.org&amp;quot;&amp;gt;Python&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;https://www.rust-lang.org&amp;quot;&amp;gt;Rust&amp;lt;/a&amp;gt;, highlighting how the language described itself.&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; Maybe this is just a cheap shot, but could it be that either these languages aren’t simple, or they don’t &lt;em&gt;think&lt;/em&gt; of themselves as being simple. They don’t consider simplicity to be a core value.&lt;/p&gt;
&lt;p&gt;Call me old fashioned, but when did being simple fall out of style? Why does the commercial software development industry continually, gleefully, forget this fundamental truth?&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult.”&lt;/p&gt;
&lt;cite&gt;C. A. R. Hoare, The Emperor’s Old Clothes, 1980 Turing Award Lecture&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Simple does not mean easy, we know that. Often it is more work to make something simple to use, than easy to build.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Simplicity is prerequisite for reliability.”&lt;/p&gt;
&lt;cite&gt;Edsger W Dijkstra, EWD498, 18 June 1975&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Why should we strive for simplicity? Why is important that Go programs be simple? Simple doesn’t mean crude, it means readable and maintainable. Simple doesn’t mean unsophisticated, it means reliable, relatable, and understandable.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Controlling complexity is the essence of computer programming.”&lt;/p&gt;
&lt;cite&gt;Brian W. Kernighan, &lt;em&gt;Software Tools&lt;/em&gt; (1976)&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Whether Python abides by its mantra of simplicity is a matter for debate, but Go holds simplicity as a core value. I think that we can all agree that when it comes to Go, simple code is preferable to clever code.&lt;/p&gt;
&lt;h2 id=&quot;_avoid_package_level_state&quot;&gt;Avoid package level state&lt;/h2&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Explicit is better than implicit.”&lt;/p&gt;
&lt;cite&gt;&lt;em&gt;The Zen of Python, Item&lt;/em&gt; 2&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a place where I think Peters’ was more aspirational than factual. Many things in Python are no explicit; decorators, dunder methods, and so on. Without doubt they are powerful, there’s a reason those features exists. Each feature is something someone cared enough about to do the work to implement it, especially the complicated ones. But heavy use of those features makes is harder for the reader to predict the cost of an operation.&lt;/p&gt;
&lt;p&gt;The good news is we have a choice, as Go programmers, to choose to make our code explicit. Explicit could mean many things, perhaps you may be thinking explicit is just a nice way of saying bureaucratic and long winded, but that’s a superficial interpretation. It’s a misnomer to focus only on the syntax on the page, to fret about line lengths and DRYing up expressions. The more valuable, in my opinon, place to be explicit are to do with coupling and with state.&lt;/p&gt;
&lt;p&gt;Coupling is a measure of the amount one thing depends on another. If two things are tightly coupled, they move together. An action that affects one is directly reflected in another. Imagine a train, each carriage joined–ironically the correct word is coupled–together; where the engine goes, the carriages follow.&lt;/p&gt;
&lt;p&gt;Another way to describe coupling is the word cohesion. Cohesion measures how well two things naturally belong together. We talk about a cohesive argument, or a cohesive team; all their parts fit together as if they were designed that way.&lt;/p&gt;
&lt;p&gt;Why does coupling matter? Because just like trains, when you need to change a piece of code, all the code that is tightly coupled to it must change. A prime example, someone release a new version of their API and now your code doesn’t compile.&lt;/p&gt;
&lt;p&gt;APIs are an unavoidable source of coupling but there are more insidious forms of coupling. Clearly everyone knows that if an API’s signature changes the data passing into and out of that call changes. It’s right there in the signature of the function; I take values of these types and return values of other types. But what if the API passed data another way? What if every time you called this API the result was based on the previous time you called that API even though you didn’t change your parameters.&lt;/p&gt;
&lt;p&gt;This is state, and management of state is &lt;em&gt;the&lt;/em&gt; problem in computer science.&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;package counter

var count int

func Increment(n int) int {
        count += n
        return count
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Suppose we have this simple &lt;code&gt;counter&lt;/code&gt; package. You can call &lt;code&gt;Increment&lt;/code&gt; to increment the counter, you can even get the value back if you &lt;code&gt;Increment&lt;/code&gt; with a value of zero.&lt;/p&gt;
&lt;p&gt;Suppose you had to test this code, how would you reset the counter after each test? Suppose you wanted to run those tests in parallel, could you do it? Now suppose that you wanted to count more than one thing per program, could you do it?&lt;/p&gt;
&lt;p&gt;No, of course not. Clearly the answer is to encapsulate the &lt;code&gt;count&lt;/code&gt; variable in a type.&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;package counter

type Counter struct {
        count int
}

func (c *Counter) Increment(n int) int {
        c.count += n
        return c.count
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now imagine that this problem isn’t restricted to just counters, but your applications main business logic. Can you test it in isolation? Can you test it in parallel? Can you use more than one instance at a time? If the answer those question is &lt;em&gt;no&lt;/em&gt;, the reason is package level state.&lt;/p&gt;
&lt;p&gt;Avoid package level state. Reduce coupling and spooky action at a distance by providing the dependencies a type needs as fields on that type rather than using package variables.&lt;/p&gt;
&lt;h2 id=&quot;_plan_for_failure_not_success&quot;&gt;Plan for failure, not success&lt;/h2&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Errors should never pass silently.”&lt;/p&gt;
&lt;cite&gt;&lt;em&gt;The Zen of Python, Item 1&lt;/em&gt;0&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;It’s been said of languages that favour exception handling follow the Samurai principle; &lt;em&gt;return victorious or not at all&lt;/em&gt;. In exception based languages functions only return valid results. If they don’t succeed then control flow takes an entirely different path.&lt;/p&gt;
&lt;p&gt;Unchecked exceptions are clearly an unsafe model to program in. How can you possibly write code that is robust in the presence of errors when you don’t know which statements could throw an exception? Java tried to make exceptions safer by introducing the notion of a checked exception which, to the best of my knowledge, has not been repeated in another mainstream language. There are plenty of languages which use exceptions but they all, with the singular exception of Java, do so in the unchecked variety.&lt;/p&gt;
&lt;p&gt;Obviously Go chose a different path. Go programmers believe that robust programs are composed from pieces that handle the failure cases &lt;em&gt;before&lt;/em&gt; they handle the happy path. In the space that Go was designed for; server programs, multi threaded programs, programs that handle input over the network, dealing with unexpected data, timeouts, connection failures and corrupted data must be front and centre of the programmer’s mind if they are to produce robust programs.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“I think that error handling should be explicit, this should be a core value of the language.”&lt;/p&gt;
&lt;cite&gt;Peter Bourgon, &lt;a href=&quot;https://changelog.com/gotime/91&quot;&gt;GoTime #91&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;I want to echo Peter’s assertion, as it was the impetus for this article. I think so much of the success of Go is due to the explicit way errors are handled. Go programmers thinks about the failure case first. We solve the “what if…​” case first. This leads to programs where failures are handled at the point of writing, rather than the point they occur in production.&lt;/p&gt;
&lt;p&gt;The verbosity of&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;if err != nil {
    return err
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;is outweighed by the value of deliberately handling each failure condition at the point at which they occur. Key to this is the cultural value of handling each and every error explicitly.&lt;/p&gt;
&lt;h2 id=&quot;_return_early_rather_than_nesting_deeply&quot;&gt;Return early rather than nesting deeply&lt;/h2&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Flat is better than nested.”&lt;/p&gt;
&lt;cite&gt;The Zen of Python, Item 5&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;This is sage advice coming from a language where indentation is the primary form of control flow. How can we interpret this advice in terms of Go? &lt;code&gt;gofmt&lt;/code&gt; controls the overall whitespace of a Go program so there’s not thing doing there.&lt;/p&gt;
&lt;p&gt;I wrote earlier about package names, and there is probably some advice here about avoiding a complicated package hierarchy. In my experience the more a programmer tries to subdivide and taxonimise their Go codebase the more they risk hitting the dead end that is package import loops.&lt;/p&gt;
&lt;p&gt;I think the best application of item 5’s advice is the control flow &lt;em&gt;within&lt;/em&gt; a function. Simply put, avoid control flow that requires deep indentation.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Line of sight is a straight line along which an observer has unobstructed vision.”&lt;/p&gt;
&lt;cite&gt;May Ryer, &lt;a href=&quot;https://medium.com/@matryer/line-of-sight-in-code-186dd7cdea88&quot;&gt;Code: Align the happy path to the left edge&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Mat Ryer describes this idea as line of sight coding. Light of sight coding means things like:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using guard clauses to return early if a precondition is not met.&lt;/li&gt;
&lt;li&gt;Placing the successful return statement at the end of the function rather than inside a conditional block.&lt;/li&gt;
&lt;li&gt;Reducing the overall indentation level of the function by extracting functions and methods.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Key to this advice is the thing that you care about, the thing that the function does, is never in danger of sliding out of sight to the right of your screen. This style has a bonus side effect that you’ll avoid pointless arguments about line lengths on your team.&lt;/p&gt;
&lt;p&gt;Every time you indent you add another precondition to the programmers stack, consuming one of their 7 ±2 short term memory slots. Rather than nesting deeply, keep the successful path of the function close to the left hand side of your screen.&lt;/p&gt;
&lt;h2 id=&quot;_if_you_think_its_slow_prove_it_with_a_benchmark&quot;&gt;If you think it’s slow, prove it with a benchmark&lt;/h2&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“In the face of ambiguity, refuse the temptation to guess.”&lt;/p&gt;
&lt;cite&gt;The Zen of Python, Item 12&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Programming is based on mathematics and logic, two concepts which rarely involve the element of chance. But there are many things we, as programmers, guess about every day. What does this variable do? What does this parameter do? What happens if I pass &lt;code&gt;nil&lt;/code&gt; here? What happens if I call &lt;code&gt;Register&lt;/code&gt; twice? There’s actually a lot of guesswork in modern programming, especially when it comes to using libraries you didn’t write.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“APIs should be easy to use and hard to misuse.”&lt;/p&gt;
&lt;cite&gt;Josh Bloch&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;One of the best ways I know to help a programmer avoid having to guess is to, when building an API, &lt;a href=&quot;http://sweng.the-davies.net/Home/rustys-api-design-manifesto&quot;&gt;focus on the default use case&lt;/a&gt;. Make it as easy as you can for the caller to do the most common thing. However, I’ve written and talked a lot about API design in the past, so instead my interpretation of item 12 is; &lt;em&gt;don’t guess about performance&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Despite how you may feel about Knuth’s advice, one of the drivers of Go’s success is its efficient execution. You can write efficient programs in Go and thus people &lt;em&gt;will&lt;/em&gt; choose Go because of this. There are a lot of misconceptions about performance, so my request is, when you’re looking to performance tune your code or you’re facing some dogmatic advice like defer is slow, CGO is expensive, or always use atomics not mutexes, don’t guess.&lt;/p&gt;
&lt;p&gt;Don’t complicate your code because of outdated dogma, and, if you think something is slow, first prove it with a benchmark. Go has excellent benchmarking and profiling tools that come in the distribution for free. Use them to find your bottlenecks.&lt;/p&gt;
&lt;h2 id=&quot;_goroutines&quot;&gt;Before you launch a goroutine, know when it will stop&lt;/h2&gt;
&lt;p&gt;At this point I think I think I’ve mined the valuable points from PEP-20 and possibly stretched its reinterpretation beyond the point of good taste. I think that’s fine, because although this was a useful rhetorical device, ultimately we are talking about two different languages.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“You type g o, a space, and then a function call. Three keystrokes, you can’t make it much shorter than that. Three keystrokes and you’ve just started a sub process.”&lt;/p&gt;
&lt;cite&gt;Rob Pike, &lt;a href=&quot;https://www.youtube.com/watch?v=rFejpH_tAHM&quot;&gt;Simplicity is Complicated&lt;/a&gt;, dotGo 2015&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;The next two suggestions I’ll dedicate to goroutines. Goroutines are the signature feature of the language, our answer for first class concurrency. They are so easy to use, just put the word &lt;code&gt;go&lt;/code&gt; in front of the statement and you’ve launched that function asynchronously. It’s so simple, no threads, no stack sizes, no thread pool executors, no ID’s, no tracking completion status.&lt;/p&gt;
&lt;p&gt;Goroutines are cheap. Because of the runtime’s ability to multiplex goroutines onto a small pool of threads (which you don’t have to manage), hundreds of thousands, millions of goroutines are easily accommodated. This opens up designs that would be not be practical under competing concurrency models like threads or evented callbacks.&lt;/p&gt;
&lt;p&gt;But as cheap as goroutines are, they’re not free. At a minimum there’s a few kilobytes for their stack, which, when you’re getting up into the 10^6 goroutines, does start to add up. This is not to say you shouldn’t use millions of goroutines if that is what the design calls for, but when you do, it’s critical that you keep track of them because 10^6 of anything can consume a non trivial amount of resources in aggregate.&lt;/p&gt;
&lt;p&gt;Goroutines are the key to resource ownership in Go. To be useful a goroutine has to do something, and that means it almost always holds reference to, or ownership of, a resource; a lock, a network connection, a buffer with data, the sending end of a channel. While that goroutine is alive, the lock is held, the network connection remains open, the buffer retained and the receivers of the channel will continue to wait for more data.&lt;/p&gt;
&lt;p&gt;The simplest way to free those resources is to tie them to the lifetime of the goroutine–when the goroutine exits, the resource has been freed. So while it’s near trivial to start a goroutine, before you write those three letters, g o and a space, make sure you have an answer to these questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Under what condition will a goroutine stop?&lt;/strong&gt; Go doesn’t have a way to tell a goroutine to exit. There is no stop or kill function, for good reason. If we cannot command a goroutine to stop, we must instead ask it, politely. Almost always this comes down to a channel operation. Range loops over a channel exit when the channel is closed. A channel will become selectable if it is closed. The signal from one goroutine to another is best expressed as a closed channel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What is required for that condition to arise?&lt;/strong&gt; If channels are both the vehicle to communicate between goroutines and the mechanism for them to signal completion, the next question to the programmer becomes, who will close the channel, when will that happen?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What signal will you use to know the goroutine has stopped?&lt;/strong&gt; When you signal a goroutine to stop, that stopping will happen at some time in the future relative to the goroutine’s frame of reference. It might happen quickly in terms of human perception, but computers execute billions of instructions every second, and from the point of view of each goroutine, their execution of instructions is unsynchronised. The solution is often to use a channel to signal back or a waitgroup where a fan in approach is needed.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;_leave_concurrency_to_the_caller&quot;&gt;Leave concurrency to the caller&lt;/h2&gt;
&lt;p&gt;It is likely that in any serious Go program you write there will be concurrency involved. This raises the problem, many of the libraries and code that we write fall into this a one goroutine per connection, or worker pattern. How will you manage the lifetime of those goroutines?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;net/http&lt;/code&gt; is a prime example. Shutting down the server owning the listening socket is relatively straight forward, but what about a goroutines spawned from that accepting socket? &lt;code&gt;net/http&lt;/code&gt; does provide a context object inside the request object which can be used to signal–to code that is listening–that the request should be canceled, thereby terminating the goroutine, however it is less clear how to know when all of these things have been done. It’s one thing to call &lt;code&gt;context.Cancel&lt;/code&gt;, its another to know that the cancellation has completed.&lt;span id=&quot;easy-footnote-2-3936&quot; class=&quot;easy-footnote-margin-adjust&quot;/&gt;&lt;span class=&quot;easy-footnote&quot;&gt;&lt;a href=&quot;https://dave.cheney.net/2020/02/23/the-zen-of-go#easy-footnote-bottom-2-3936&quot; title=&quot;I tend to pick on &amp;lt;code&amp;gt;net/http&amp;lt;/code&amp;gt; a lot, and this is not because it is bad, in fact it is the opposite, it is the most successful, oldest, most used API in the Go codebase. And because of that its design, evolution, and shortcoming have been thoroughly picked over. Think of this as flattery, not criticism.&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The point I want to make about &lt;code&gt;net/http&lt;/code&gt; is that its a counter example to good practice. Because each connection is handled by a goroutine spawned inside the &lt;code&gt;net/http.Server&lt;/code&gt; type, the program, living outside the &lt;code&gt;net/http&lt;/code&gt; package, does not have an ability to control the goroutines spawned for the accepting socket.&lt;/p&gt;
&lt;p&gt;This is an area of design that is still evolving, with efforts like go-kit’s &lt;code&gt;run.Group&lt;/code&gt; and the Go team’s &lt;a href=&quot;https://godoc.org/golang.org/x/sync/errgroup&quot;&gt;&lt;code&gt;ErrGroup&lt;/code&gt;&lt;/a&gt; which provide a framework to execute, cancel and wait on functions run asynchronously.&lt;/p&gt;
&lt;p&gt;The bigger design maxim here is for library writers, or anyone writing code that could be run asynchronously, leave the responsibility of starting to goroutine to your caller. Let the caller choose how they want to start, track, and wait on your functions execution.&lt;/p&gt;
&lt;h2 id=&quot;_write_tests_to_lock_in_the_behaviour_of_your_packages_api&quot;&gt;Write tests to lock in the behaviour of your package’s API&lt;/h2&gt;
&lt;p&gt;Perhaps you were hoping to read an article from me where I didn’t rant about testing. Sadly, today is not that day.&lt;/p&gt;
&lt;p&gt;Your tests are the contract about what your software does and does not do. Unit tests at the package level should lock in the behaviour of the package’s API. They describe, in code, what the package promises to do. If there is a unit test for each input permutation, you have defined the contract for what the code will do &lt;em&gt;in code&lt;/em&gt;, not documentation.&lt;/p&gt;
&lt;p&gt;This is a contract you can assert as simply as typing &lt;code&gt;go test&lt;/code&gt;. At any stage, you can &lt;em&gt;know&lt;/em&gt; with a high degree of confidence, that the behaviour people relied on before your change continues to function after your change.&lt;/p&gt;
&lt;p&gt;Tests lock in api behaviour. Any change that adds, modifies or removes a public api must include changes to its tests.&lt;/p&gt;
&lt;h2 id=&quot;_moderation_is_a_virtue&quot;&gt;Moderation is a virtue&lt;/h2&gt;
&lt;p&gt;Go is a simple language, only 25 keywords. In some ways this makes the features that are built into the language stand out. Equally these are the features that the language sells itself on, lightweight concurrency, structural typing.&lt;/p&gt;
&lt;p&gt;I think all of us have experienced the confusion that comes from trying to use all of Go’s features at once. Who was so excited to use channels that they used them as much as they could, as often as they could? Personally for me I found the result was hard to test, fragile, and ultimately overcomplicated. Am I alone?&lt;/p&gt;
&lt;p&gt;I had the same experience with goroutines, attempting to break the work into tiny units I created a hard to manage hurd of Goroutines and ultimately missed the observation that most of my goroutines were always blocked waiting for their predecessor– the code was ultimately sequential and I had added a lot of complexity for little real world benefit. Who has experienced something like this?&lt;/p&gt;
&lt;p&gt;I had the same experience with embedding. Initially I mistook it for inheritance. Then later I recreated the fragile base class problem by composing complicated types, which already had several responsibilities, into more complicated mega types.&lt;/p&gt;
&lt;p&gt;This is potentially the least actionable piece of advice, but one I think is important enough to mention. The advice is always the same, all things in moderation, and Go’s features are no exception. If you can, don’t reach for a goroutine, or a channel, or embed a struct, anonymous functions, going overboard with packages, interfaces for everything, instead prefer simpler approach rather than the clever approach.&lt;/p&gt;
&lt;h2 id=&quot;_maintainability_counts&quot;&gt;Maintainability counts&lt;/h2&gt;
&lt;p&gt;I want to close with one final item from PEP-20,&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-large&quot;&gt;
&lt;p&gt;“Readability Counts.”&lt;/p&gt;
&lt;cite&gt;The Zen of Python, Item 7&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;So much has been said, about the importance of readability, not just in Go, but all programming languages. People like me who stand on stages advocating for Go use words like simplicity, readability, clarity, productivity, but ultimately they are all synonyms for one word–&lt;em&gt;maintainability&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The real goal is to write maintainable code. Code that can live on after the original author. Code that can exist not just as a point in time investment, but as a foundation for future value. It’s not that readability doesn’t matter, maintainability matters &lt;em&gt;more&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Go is not a language that optimises for clever one liners. Go is not a language which optimises for the least number of lines in a program. We’re not optimising for the size of the source code on disk, nor how long it takes to type the program into an editor. Rather, we want to optimise our code to be clear to the reader. Because its the reader who’s going to have to maintain this code.&lt;/p&gt;
&lt;p&gt;If you’re writing a program for yourself, maybe it only has to run once, or you’re the only person who’ll ever see it, then do what ever works for you. But if this is a piece of software that more than one person will contribute to, or that will be used by people over a long enough time that requirements, features, or the environment it runs in may change, then your goal must be for your program to be maintainable. If software cannot be maintained, then it will be rewritten; and that could be the last time your company will invest in Go.&lt;/p&gt;
&lt;p&gt;Can the thing you worked hard to build be maintained after you’re gone? What can you do today to make it easier for someone to maintain your code tomorrow?&lt;/p&gt;
&lt;h4 class=&quot;has-text-align-center&quot;&gt;&lt;a href=&quot;https://the-zen-of-go.netlify.com&quot;&gt;the-zen-of-go.netlify.com&lt;/a&gt;&lt;/h4&gt;
&lt;ol class=&quot;easy-footnotes-wrapper&quot;&gt;&lt;li class=&quot;easy-footnote-single&quot;&gt;&lt;span id=&quot;easy-footnote-bottom-1-3936&quot; class=&quot;easy-footnote-margin-adjust&quot;/&gt;This part of the talk had several screenshots of the landing pages for the websites for &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;, &lt;a href=&quot;https://swift.org&quot;&gt;Swift&lt;/a&gt;, &lt;a href=&quot;https://elm-lang.org&quot;&gt;Elm&lt;/a&gt;, &lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJS&lt;/a&gt;, &lt;a href=&quot;https://www.python.org&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt;, highlighting how the language described itself.&lt;/li&gt;
&lt;li class=&quot;easy-footnote-single&quot;&gt;&lt;span id=&quot;easy-footnote-bottom-2-3936&quot; class=&quot;easy-footnote-margin-adjust&quot;/&gt;I tend to pick on &lt;code&gt;net/http&lt;/code&gt; a lot, and this is not because it is bad, in fact it is the opposite, it is the most successful, oldest, most used API in the Go codebase. And because of that its design, evolution, and shortcoming have been thoroughly picked over. Think of this as flattery, not criticism.&lt;/li&gt;
&lt;/ol&gt;
</description>
<pubDate>Sun, 23 Feb 2020 11:45:59 +0000</pubDate>
<dc:creator>sagichmal</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dave.cheney.net/2020/02/23/the-zen-of-go</dc:identifier>
</item>
<item>
<title>Inrupt, Tim Berners-Lee&amp;#039;s Solid, and Me</title>
<link>https://www.schneier.com/blog/archives/2020/02/inrupt_tim_bern.html</link>
<guid isPermaLink="true" >https://www.schneier.com/blog/archives/2020/02/inrupt_tim_bern.html</guid>
<description>&lt;p&gt;For decades, I have been talking about the importance of individual privacy. For almost as long, I have been using the metaphor of &lt;a href=&quot;https://www.schneier.com/essays/archives/2012/11/when_it_comes_to_sec.html&quot;&gt;digital feudalism&lt;/a&gt; to describe how large companies have become &lt;a href=&quot;https://www.schneier.com/books/data_and_goliath/&quot;&gt;central control points&lt;/a&gt; for our data. And for maybe half a decade, I have been talking about the &lt;a href=&quot;https://www.schneier.com/essays/archives/2017/01/click_here_to_kill_e.html&quot;&gt;world-sized robot&lt;/a&gt; that is the Internet of Things, and how digital security is now a matter of &lt;a href=&quot;https://www.schneier.com/books/click_here/&quot;&gt;public safety&lt;/a&gt;. And most recently, I have been &lt;a href=&quot;https://www.schneier.com/essays/archives/2019/02/public-interest_tech.html&quot;&gt;writing and&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=U2jn4pXDZn0&quot;&gt;speaking&lt;/a&gt; about how technologists need to get involved with public policy.&lt;/p&gt;
&lt;p&gt;All of this is a long-winded way of saying that I have joined a company called &lt;a href=&quot;https://inrupt.com/&quot;&gt;Inrupt&lt;/a&gt; that is working to bring Tim Berners-Lee's distributed data ownership model that is &lt;a href=&quot;https://solid.mit.edu/&quot;&gt;Solid&lt;/a&gt; into the mainstream. (I think of Inrupt basically as the Red Hat of Solid.) I joined the &lt;a href=&quot;https://inrupt.com/world-class-team&quot;&gt;Inrupt team&lt;/a&gt; last summer as its Chief of Security Architecture, and have been in stealth mode until now.&lt;/p&gt;
&lt;p&gt;The idea behind Solid is both simple and extraordinarily powerful. Your data lives in a pod that is controlled by you. Data generated by your things -- your computer, your phone, your IoT whatever -- is written to your pod. You authorize granular access to that pod to whoever you want for whatever reason you want. Your data is no longer in a bazillion places on the Internet, controlled by you-have-no-idea-who. It's yours. If you want your insurance company to have access to your fitness data, you grant it through your pod. If you want your friends to have access to your vacation photos, you grant it through your pod. If you want your thermostat to share data with your air conditioner, you give both of them access through your pod.&lt;/p&gt;
&lt;p&gt;The ideal would be for this to be completely distributed. Everyone's pod would be on a computer they own, running on their network. But that's not how it's likely to be in real life. Just as you can theoretically run your own email server but in reality you outsource it to Google or whoever, you are likely to outsource your pod to those same sets of companies. But maybe pods will come standard issue in home routers. Even if you do hand your pod over to some company, it'll be like letting them host your domain name or manage your cell phone number. If you don't like what they're doing, you can always move your pod -- just like you can take your cell phone number and move to a different carrier. This will give users a lot more power.&lt;/p&gt;
&lt;p&gt;I believe this will fundamentally alter the balance of power in a world where everything is a computer, and everything is producing data about you. Either IoT companies are going to enter into individual data sharing agreements, or they'll all use the same language and protocols. Solid has a very good chance of being that protocol. And security is critical to making all of this work. Just trying to grasp what sort of granular permissions are required, and how the authentication flows might work, is mind-altering. We're stretching pretty much every Internet security protocol to its limits and beyond just setting this up.&lt;/p&gt;
&lt;p&gt;Building a secure technical infrastructure is largely about policy, but there's also a wave of technology that can shift things in one direction or the other. Solid is one of those technologies. It moves the Internet away from overly-centralized power of big corporations and governments and towards more rational distributions of power; greater liberty, better privacy, and more freedom for everyone.&lt;/p&gt;
&lt;p&gt;I've worked with Inrupt's CEO, John Bruce, at both of my previous companies: Counterpane and Resilient. It's a little weird working for a start-up that is &lt;em&gt;not&lt;/em&gt; a security company. (While security is essential to making Solid work, the technology is fundamentally about the functionality.) It's also a little surreal working on a project &lt;a href=&quot;https://inrupt.com/small-step-web-part2&quot;&gt;conceived and spearheaded&lt;/a&gt; by Tim Berners-Lee. But at this point, I feel that I should only work on things that matter to society. So here I am.&lt;/p&gt;
&lt;p&gt;Whatever happens next, it's going to be a really fun ride.&lt;/p&gt;
&lt;p&gt;EDITED TO ADD (2/23): News &lt;a href=&quot;https://www.ft.com/content/343febdc-5573-11ea-abe5-8e03987b7b20&quot;&gt;article&lt;/a&gt;. HackerNews &lt;a href=&quot;https://news.ycombinator.com/item?id=22386328&quot;&gt;thread&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;entry-tags&quot;&gt;Tags: &lt;a href=&quot;https://www.schneier.com/cgi-bin/mt/mt-search.cgi?search=Inrupt&amp;amp;__mode=tag&amp;amp;IncludeBlogs=2&amp;amp;limit=10&amp;amp;page=1&quot; rel=&quot;tag&quot;&gt;Inrupt&lt;/a&gt;, &lt;a href=&quot;https://www.schneier.com/cgi-bin/mt/mt-search.cgi?search=Schneier%20news&amp;amp;__mode=tag&amp;amp;IncludeBlogs=2&amp;amp;limit=10&amp;amp;page=1&quot; rel=&quot;tag&quot;&gt;Schneier news&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;posted&quot;&gt;&lt;a href=&quot;https://www.schneier.com/blog/archives/2020/02/inrupt_tim_bern.html&quot;&gt;Posted on February 21, 2020 at 2:04 PM&lt;/a&gt; • 49 Comments&lt;/p&gt;
&lt;aside&gt;
&lt;/aside&gt;</description>
<pubDate>Sun, 23 Feb 2020 05:48:09 +0000</pubDate>
<dc:creator>9nGQluzmnq3M</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.schneier.com/blog/archives/2020/02/inrupt_tim_bern.html</dc:identifier>
</item>
<item>
<title>Fruit Walls: Urban Farming in the 1600s (2015)</title>
<link>https://solar.lowtechmagazine.com/2015/12/fruit-walls-urban-farming.html</link>
<guid isPermaLink="true" >https://solar.lowtechmagazine.com/2015/12/fruit-walls-urban-farming.html</guid>
<description>&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/fruit-walls-montreuil.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Picture: fruit walls in Montreuil, a suburb of Paris.&lt;/p&gt;
&lt;p&gt;We are being told to eat local and seasonal food, either because other crops have been tranported over long distances, or because they are grown in energy-intensive greenhouses. But it wasn’t always like that. From the sixteenth to the twentieth century, urban farmers grew Mediterranean fruits and vegetables as far north as England and the Netherlands, using only renewable energy.&lt;/p&gt;
&lt;p&gt;These crops were grown surrounded by massive “fruit walls”, which stored the heat from the sun and released it at night, creating a microclimate that could increase the temperature by more than 10°C (18°F). Later, greenhouses built against the fruit walls further improved yields from solar energy alone.&lt;/p&gt;
&lt;p&gt;It was only at the very end of the nineteenth century that the greenhouse turned into a fully glazed and artificially heated building where heat is lost almost instantaneously — the complete opposite of the technology it evolved from&lt;/p&gt;
&lt;p&gt;The modern glass greenhouse, often located in temperate climates where winters can be cold, requires massive inputs of energy, mainly for heating but also for artificial lighting and humidity control.&lt;/p&gt;
&lt;p&gt;According to the &lt;span class=&quot;caps&quot;&gt;FAO&lt;/span&gt;, crops grown in heated greenhouses have energy intensity demands around 10 to 20 times those of the same crops grown in open fields. A heated greenhouse requires around 40 megajoule of energy to grow one kilogram of fresh produce, such as tomatoes and peppers &lt;a href=&quot;http://www.fao.org/docrep/014/i2454e/i2454e00.pdf&quot;&gt;Source — page 15&lt;/a&gt;. This makes greenhouse-grown crops as energy-intensive as pork meat (40-45 &lt;span class=&quot;caps&quot;&gt;MJ&lt;/span&gt;/kg in the &lt;span class=&quot;caps&quot;&gt;USA&lt;/span&gt;) &lt;a href=&quot;https://books.google.es/books?id=ClAttEBYLHsC&amp;amp;pg=PA297&amp;amp;lpg=PA297&amp;amp;dq=one+kilo+meat+megajoule&amp;amp;source=bl&amp;amp;ots=mfS1J1L_Ql&amp;amp;sig=leo_G6Yog1jBhtsiWxXo85LplfI&amp;amp;hl=nl&amp;amp;sa=X&amp;amp;ved=0ahUKEwi3wp_V7uLJAhWGRhQKHcRSDEkQ6AEIIzAA#v=onepage&amp;amp;q=one%20kilo%20meat%20megajoule&amp;amp;f=false&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/dutch-style-greenhouse.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Dutch-style all-glass greenhouses. Picture: Wikipedia Commons.&lt;/p&gt;
&lt;p&gt;In the Netherlands, which is the world’s largest producer of glasshouse grown crops, some 10,500 hectares of greenhouses used 120 petajoules (&lt;span class=&quot;caps&quot;&gt;PJ&lt;/span&gt;) of natural gas in 2013 — that’s about half the amount of fossil fuels used by all Dutch passenger cars &lt;a href=&quot;http://www.compendiumvoordeleefomgeving.nl/indicatoren/nl0013-Energieverbruik-door-de-land--en-tuinbouw.html?i=6-40&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The high energy use is hardly surprising. Heating a building that’s entirely made of glass is very energy-intensive, because glass has a very limited insulation value. Each metre square of glass, even if it’s triple glazed, loses &lt;a href=&quot;http://www.notechmagazine.com/2015/08/insulation-glass-buildings.html&quot;&gt;ten times as much heat&lt;/a&gt; as a wall.&lt;/p&gt;
&lt;h2&gt;Fruit Walls&lt;/h2&gt;
&lt;p&gt;The design of the modern greenhouse is strikingly different from its origins in the middle ages &lt;sup id=&quot;fnref:*&quot;/&gt;. Initially, the quest to produce warm-loving crops in temperate regions (and to extend the growing season of local crops) didn’t involve any glass at all. In 1561, Swiss botanist Conrad Gessner described the effect of sun-heated walls on the ripening of figs and currants, which mature faster than when they are planted further from the wall.&lt;/p&gt;
&lt;p&gt;Gessner’s observation led to the emergence of the “fruit wall” in Northwestern Europe. By planting fruit trees close to a specially built wall with high thermal mass and southern exposure, a microclimate is created that allows the cultivation of Mediterranean fruits in temperate climates, such as those of Northern France, England, Belgium and the Netherlands.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/english-fruit-wall.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;An English fruit wall. Wikipedia Commons.&lt;/p&gt;
&lt;p&gt;The fruit wall reflects sunlight during the day, improving growing conditions. It also absorbs solar heat, which is slowly released during the night, preventing frost damage. Consequently, a warmer microclimate is created on the southern side of the wall for 24 hours per day.&lt;/p&gt;
&lt;p&gt;Fruit walls also protect crops from cold, northern winds. Protruding roof tiles or wooden canopies often shielded the fruit trees from rain, hail and bird droppings. Sometimes, mats could be suspended from the walls in case of bad weather.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/fruit-walls-pruning.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The fruit wall appears around the start of the so-called Little Ice Age, a period of exceptional cold in Europe that lasted from about 1550 to 1850. The French quickly started to refine the technology by pruning the branches of fruit trees in such ways that they could be attached to a wooden frame on the wall.&lt;/p&gt;
&lt;p&gt;This practice, which is known as “espalier”, allowed them to optimize the use of available space and to further improve upon the growth conditions. The fruit trees were placed some distance from the wall to give sufficient space for the roots underground and to provide for good air ciculation and pest control above ground.&lt;/p&gt;
&lt;h2&gt;Peach Walls in Paris&lt;/h2&gt;
&lt;p&gt;Initially, fruit walls appeared in the gardens of the rich and powerful, such as in the palace of Versailles. However, some French regions later developed an urban farming industry based on fruit walls. The most spectacular example was Montreuil, a suburb of Paris, where peaches were grown on a massive scale.&lt;/p&gt;
&lt;p&gt;Established during the seventeenth century, Montreuil had more than 600 km fruit walls in the 1870s, when the industry reached its peak. The 300 hectare maze of jumbled up walls was so confusing for outsiders that the Prussian army went around Montreuil during the siege of Paris in 1870.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/fruit-walls.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/more-fruit-walls.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Peaches are native to France’s Mediterranean regions, but Montreuil produced up to 17 million fruits per year, renowned for their quality. Building many fruit walls close to each other further boosted the effectiveness of the technology, because more heat was trapped and wind was kept out almost completely. Within the walled orchards, temperatures were typically 8 to 12°C (14-22°) higher than outside.&lt;/p&gt;
&lt;p&gt;The 2.5 to 3 metre high walls were more than half a metre thick and coated in limestone plaster. Mats could be pulled down to insulate the fruits on very cold nights. In the central part of the gardens, crops were grown that tolerated lower temperatures, such as apples, pears, raspberries, vegetables and flowers.&lt;/p&gt;
&lt;h2&gt;Grapes in Thomery&lt;/h2&gt;
&lt;p&gt;In 1730, a similar industry was set up for the cultivation of grapes in Thomery, which lies some 60 km south-east from Paris — a very northern area to grow these fruits. At the production peak in the early twentieth century, more than 800 tonnes of grapes were produced on some 300 km of fruit walls, packed together on 150 hectares of land.&lt;/p&gt;
&lt;p&gt;The walls, built of clay with a cap of thatch, were 3 metres high and up to 100 metres long, spaced apart 9 to 10 metres. They were all finished by tile copings and some had a small glass canopy.&lt;/p&gt;
&lt;p&gt;Because vines demand a dry and warm climate, most fruit walls had a southeastern exposure. A southern exposure would have been the warmest, but in that case the vines would have been exposed to the damp winds and rains coming from the southwest. The western and southwestern walls were used to produce grapes from lower qualities.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/fruit-walls-thomery.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/thomery-today-fruit-walls-remains.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Part of the town of Thomery today, seen through Google maps. The old fruit walls are still dominating the landscape. The houses were built later.&lt;/p&gt;
&lt;p&gt;Some cultivators in Thomery also constructed “counter-espaliers”, which were lesser walls opposite the principal fruit walls. These were only 1 metre high and were placed about 1 to 2.5 metres from the fruit wall, further improving the microclimate. In the 1840s, Thomery became known for its advanced techniques to prune the grape vines and attach them to the walls. The craft spread to Montreuil and to other countries.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/storage-system-grapes.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Storage system for grapes in Thomery. Picture: &lt;a href=&quot;http://fr.topic-topos.com/chambre-a-raisin-thomery&quot;&gt;Topic Tops&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The cultivators of Thomery also developed a remarkable storage system for grapes. The stem was submerged in water-filled bottles, which were stored in large wooden racks in basements or attics of buildings. Some of these storage places had up to 40,000 bottles each holding one or two bunches of grapes. The storage system allowed the grapes to remain fresh for up to six months.&lt;/p&gt;
&lt;h2&gt;Serpentine Fruit Walls&lt;/h2&gt;
&lt;p&gt;Fruit wall industries in the Low Countries (present-day Belgium and the Netherlands) were also aimed at producing grapes. From the 1850s onwards, Hoeilaart (nearby Brussels) and the Westland (the region which is now Holland’s largest glasshouse industry) became important producers of table grapes. By 1881, the Westland had 178 km of fruit walls.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/serpentine-fruit-walls.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;A Serpentine Fruit Wall in the Netherlands. &lt;a href=&quot;https://nl.wikipedia.org/wiki/Slangenmuur#/media/File:WLM_-_R%26@E_-_506982_slangemuur_Beeckestijn.jpg&quot;&gt;Wikipedia Commons&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/different-type-fruit-wall.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;A different type of fruit wall. &lt;a href=&quot;https://nl.wikipedia.org/wiki/Slangenmuur#/media/File:Retranchementen-muur_Berbice_2.jpg&quot;&gt;Wikipedia Commons&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Dutch also contributed to the development of the fruit wall. They started building fruit walls already during the first half of the eighteenth century, initially only in gardens of castles and country houses. Many of these had unique forms. Most remarkable was the serpentine or “crinkle crankle” wall.&lt;/p&gt;
&lt;p&gt;Although it’s actually longer than a linear wall, a serpentine wall economizes on materials because the wall can be made strong enough with just one brick thin. The alternate convex and concave curves in the wall provide stability and help to resist lateral forces. Furthermore, the slopes give a warmer microclimate than a flat wall. This was obviously important for the Dutch, who are almost 400 km north of Paris.&lt;/p&gt;
&lt;p&gt;Variants of the serpentine wall had recessed and protruding parts with more angular forms. Few of these seem to have been built outside the Netherlands, with the exception of those erected by the Dutch in the eastern parts of England (two thirds of them in Suffolk county). In their own country, the Dutch built fruit walls as high up north as &lt;a href=&quot;http://www.flickriver.com/photos/davydutchy/3958487038/&quot;&gt;Groningen&lt;/a&gt; (53°N).&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/fruit-walls-improved.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Another variation on the linear fruit wall was the sloped wall. It was designed by Swiss mathematician Nicolas Fatio de Duillier, and described in his 1699 book “Fruit Walls Improved”. A wall built at an incline of 45 degrees from the northerm horizon and facing south absorbs the sun’s energy for a longer part of the day, increasing plant growth.&lt;/p&gt;
&lt;h2&gt;Heated Fruit Walls&lt;/h2&gt;
&lt;p&gt;In Britain, no large-scale urban farming industries appeared, but the fruit wall became a standard feature of the country house garden from the 1600s onwards. The English developed heated fruit walls in the eighteenth and nineteenth centuries, to ensure that the fruits were not killed by frost and to assist in ripening fruit and maturing wood.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/heated-fruit-wall.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;A heated fruit wall of Croxteth Hall Walled Kitchen Garden in Liverpoool. Picture: &lt;a href=&quot;https://thehorticulturaltherapist.wordpress.com/2013/06/02/croxteth-hall-walled-kitchen-garden/&quot;&gt;The Horticultural Therapist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In these “hot walls”, horizontal flues were running to and fro, opening into chimneys on top of the wall. Initially, the hollow walls were heated by fires lit inside, or by small furnaces located at the back of the wall. During the second half of the nineteenth century, more and more heated fruit walls were warmed by hot water pipes.&lt;/p&gt;
&lt;p&gt;The decline of the European fruit wall started in the late nineteenth century. Maintaining a fruit wall was a labour-intensive work that required a lot of craftsmanship in pruning, thinning, removing leaves, etcetera. The extension of the railways favoured the import of produce from the south, which was less labour-intensive and thus cheaper to produce. Artificially heated glasshouses could also produce similar or larger yields with much less skilled labour involved.&lt;/p&gt;
&lt;h2&gt;The Birth of the Greenhouse&lt;/h2&gt;
&lt;p&gt;Large transparant glass plates were hard to come by during the Middle Ages and early modern period, which limited the use of the greenhouse effect for growing crops. Window panes were usually made of hand-blown plate glass, which could only be produced in small dimensions. To make a large glass plate, the small pieces were combined by placing them in rods or glazing bars.&lt;/p&gt;
&lt;p&gt;Nevertheless, European growers made use of small-scale greenhouse methods since the early 1600s. The simplest forms of greenhouses were the “cloche”, a bell-shaped jar or bottomless glass jug that was placed on top of the plants, and the cold- or hotframe, a small seedbed enclosed in a glass-topped box. In the hotframe, decomposing horse manure was added for additional heating.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/cloches.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/hot-frames-cloches.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/schietraam.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Foto: &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Schietraam_-_Honselersdijk_-_20405430_-_RCE.jpg&quot;&gt;Rijksdienst voor het Cultureel Erfgoed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the 1800s, some Belgian and Dutch cultivators started experimenting with the placement of glass plates against fruit walls, and discovered that this could further boost crop growth. This method gradually developed into the greenhouse, built against a fruit wall. In the Dutch Westland region, the first of these greenhouses were built around 1850. By 1881, some 22 km of the 178 km of fruit walls in the westland was under glass.&lt;/p&gt;
&lt;p&gt;These greenhouse structures became larger and more sophisticated over time, but they all kept benefitting from the thermal mass of the fruit wall, which stored heat from the sun for use at night. In addition, many of these structures were provided with insulating mats that could be rolled out over the glass cover at night or during cold, cloudy weather. In short, the early greenhouse was a passive solar building.&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/greenhouse-against-serpentine-fruit-wall.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;Greenhouse built against a serpentine fruit wall. Source: &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Interieur_muurkas,_slangenmuur_met_latwerk_-_'s-Graveland_-_20405341_-_RCE.jpg&quot;&gt;Rijksdienst voor het culturele erfgoed&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;image&quot; src=&quot;https://solar.lowtechmagazine.com/dithers/dutch-greenhouse-1930s.png&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;A Dutch greenhouse from the 1930s, built against a brick wall. Picture: &lt;a href=&quot;http://www.inoudeansichten.nl/ansichten/naaldwijk/p92889-naaldwijk-kopkas-met-knie-1930.html&quot;&gt;Naaldwijk in oude ansichten&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first all glass greenhouses were built only in the 1890s, first in Belgium, and shortly afterwards in the Netherlands. Two trends played into the hands of the fully glazed greenhouse. The first was the invention of the plate glass production method, which made larger window panes much more affordable. The second was the advance of fossil fuels, which made it possible to keep a glass building warm in spite of the large heat losses.&lt;/p&gt;
&lt;p&gt;Consequently, at the start of the twentieth century, the greenhouse became a structure without thermal mass. The fruit wall that had started it all, was now gone.&lt;/p&gt;
&lt;p&gt;During the oil crises of the 1970s, there was a renewed interest in the passive solar greenhouse. However, the attention quickly faded when energy prices came down, and the fully glazed greenhouse remained the horticultural workhorse of the Northwestern world. The Chinese, however, built 800,000 hectare of passive solar greenhouses during the last three decades — that’s 80 times the surface area of all glass greenhouses in the Netherlands. &lt;a href=&quot;https://solar.lowtechmagazine.com/2015/12/reinventing-the-greenhouse.html&quot;&gt;We discuss the Chinese greenhouse in the second part of this article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kris De Decker&lt;/p&gt;
&lt;h2&gt;Sources and more information&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ia902606.us.archive.org/18/items/openairgrapecult00phinrich/openairgrapecult00phinrich.pdf&quot;&gt;Open Air Grape Culture&lt;/a&gt;, John Phin, 1862&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.messynessychic.com/2014/03/04/the-last-peach-orchards-of-paris/&quot;&gt;The last peach orchards of Paris&lt;/a&gt;, Messy Nessy, 2014&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://library.wur.nl/WebQuery/groenekennis/2016438&quot;&gt;Geschiedenis van het leifruit in de Lage Landen&lt;/a&gt;, Wybe Kuitert, 2004&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://lastradainternational.org/lsidocs/23%20Onzichtbar%20achter%20glas%20%28Benseddik%20&amp;amp;%20Bijl%29.pdf&quot;&gt;Onzichtbaar achter glas&lt;/a&gt;, Ahmed Benseddik and Marijke Bijl, 2004&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Chasselas_de_Thomery&quot;&gt;Chasselas de Thomery&lt;/a&gt;, French Wikipedia&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Murs_%C3%A0_p%C3%AAches&quot;&gt;Murs à pêches&lt;/a&gt;, French Wikipedia&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mursapeches.wordpress.com/qui-sommes-nous/lhistoire-des-murs/&quot;&gt;L’histoire des murs&lt;/a&gt;, website Murs à Pêches&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.princeton.edu/~ota/disk3/1981/8105/810506.PDF&quot;&gt;Food-Producing Solar Greenhouses&lt;/a&gt;, in “An assessment of technology for local development”, 1980&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.eolss.net/sample-chapters/c09/e6-156-07-00.pdf&quot;&gt;The development and history of horticulture&lt;/a&gt;, Edwinna von Bayer&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://books.google.es/books?id=BpS8g_k2Q6cC&amp;amp;pg=PA224&amp;amp;lpg=PA224&amp;amp;dq=geschiedenis+glastuinbouw&amp;amp;source=bl&amp;amp;ots=9lQzrHRWzk&amp;amp;sig=vDtdGHJynmulq6HSEoxNLaZUwTg&amp;amp;hl=nl&amp;amp;sa=X&amp;amp;ved=0ahUKEwjB1bWOzdHJAhUBTxoKHQEDCi04ChDoAQgeMAA#v=onepage&amp;amp;q=geschiedenis%20glastuinbouw&amp;amp;f=false&quot;&gt;Geschiedenis van Holland, Volume 3, deel 1&lt;/a&gt;. Thimo de Nijs, 2003&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/977568.Golden_Thread&quot;&gt;A Golden Thread: 2500 years of solar architecture and technology&lt;/a&gt;, Ken Butti and John Perlin, 2009&amp;lt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.quae.com/fr/r961-une-histoire-des-serres.html&quot;&gt;Une histoire des serres: de l’orangerie au palais de cristal&lt;/a&gt;, Yves-Marie Allain, 2010&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://archive.org/details/manuelcompletduj32nois&quot;&gt;Manual complet du jardinier&lt;/a&gt;, Louis Claude Noisette, 1862&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cultureelerfgoed.nl/publicaties/onderhoud-en-restauratie-van-historische-plantenkassen&quot;&gt;Onderhoud en restauratie van historische plantenkassen&lt;/a&gt;, Ben Kooij, 2011&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tuinenstichting.nl/wordpress/wp-content/uploads/TJ-2011-01-artikel-4.pdf&quot;&gt;Leifruit: toekomst voor eeuwenoude hovernierskunst&lt;/a&gt;, Julia Voskuil, 2011&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.telegraph.co.uk/gardening/gardenstovisit/10702842/The-magic-of-Britains-walled-gardens.html&quot;&gt;The magic of Britain’s walled gardens&lt;/a&gt;, Bunny Guinness, 2014&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.oregonlive.com/hg/index.ssf/2015/07/kitchen_garden_versailles_king.html&quot;&gt;Visiting the palace of Versailles’ kitchen garden&lt;/a&gt;, Janet Eastman, 2015&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jstor.org/stable/1586918?seq=1#page_scan_tab_contents&quot;&gt;Hot Walls: An Investigation of Their Construction in Some Northern Kitchen Gardens&lt;/a&gt;, Elisabeth Hall, 1989&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wiltshiregt.org.uk/the-journal/history-of-fruit-growing&quot;&gt;History of fruit growing&lt;/a&gt;, Tom La Dell&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://restoringmayberry.blogspot.com.es/2011/06/living-fences.html&quot;&gt;Fences of Fruit Trees&lt;/a&gt;, Brian Kaller, 2011&lt;/p&gt;

</description>
<pubDate>Sun, 23 Feb 2020 05:21:34 +0000</pubDate>
<dc:creator>ciconia</dc:creator>
<og:title>Fruit Walls: Urban Farming in the 1600s</og:title>
<og:url>https://solar.lowtechmagazine.com/2015/12/fruit-walls-urban-farming.html</og:url>
<og:description>From the sixteenth to the twentieth century, urban farmers grew Mediterranean fruits and vegetables as far north as England and the Netherlands, using only renewable energy.</og:description>
<og:image>https://solar.lowtechmagazine.com/dithers/fruit-walls-montreuil.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://solar.lowtechmagazine.com/2015/12/fruit-walls-urban-farming.html</dc:identifier>
</item>
<item>
<title>Should you self-host Google Fonts?</title>
<link>https://www.tunetheweb.com/blog/should-you-self-host-google-fonts/</link>
<guid isPermaLink="true" >https://www.tunetheweb.com/blog/should-you-self-host-google-fonts/</guid>
<description>&lt;div readability=&quot;7&quot;&gt;
&lt;p class=&quot;lastmodified&quot;&gt;This page was originally created on &lt;time datetime=&quot;2020-01-12&quot;&gt;12-Jan-2020&lt;/time&gt; and last edited on &lt;time datetime=&quot;2020-02-23&quot;&gt;23-Feb-2020&lt;/time&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the last few weeks, because of a combination of various things at work, and in side-projects, I've been learning a lot about web fonts and also a lot more about Google Fonts specifically. Through that I've come up with a more nuanced answer to the question, that in the past I thought was easy: should you self-host Google Fonts?&lt;/p&gt;
&lt;p&gt;Now, to be totally up front, I'll admit that fonts are not my strong point. I'm much more practical than design-y (look at this website for evidence of that!) and have never totally got the need for fonts. Sure they look a bit nicer, and can understand they make a message seem more on-brand, but for the main body of text at least they seem more of a nice to have - I've never read an article more or less (or treated the contents any differently) because it had a pretty font. However, I've also been acutely aware of the performance implications of them so maybe that's clouded my view of them.&lt;/p&gt;
&lt;p&gt;Still, many feel differently, and fonts are here, whether I appreciate them or not, and many developers aren't given a choice whether to use them or not. So let's look at what we can do to minimise the performance impact, but also give the designers what they want - win win!&lt;/p&gt;
&lt;h2 id=&quot;self-hosting-assers&quot;&gt;Self-Hosting assets versus Third-Party hosting&lt;/h2&gt;
&lt;p&gt;A few years back it was all the rage to use a CDN to serve common assets (e.g. jQuery from https://code.jquery.com - and yes &lt;a href=&quot;https://almanac.httparchive.org/en/2019/javascript#open-source-libraries-and-frameworks&quot;&gt;jQuery is still very much a thing!&lt;/a&gt;). To be clear when I say CDN here, I mean where you are loading some assets from someone else's domain, rather than a CDN fronting your domain.&lt;/p&gt;
&lt;p&gt;The theory behind this was that browsers limited the number of connections to each domain (typically to 6 connections) so using another domain gave you 6 more connections. While that may have been true in the past (particularly when browsers limited it to less than 6 domains) and before &lt;a href=&quot;https://www.tunetheweb.com/security/https/&quot;&gt;HTTPS&lt;/a&gt; became the norm, now &lt;a href=&quot;https://www.tunetheweb.com/blog/critical-resources-and-the-first-14kb/&quot;&gt;connections are expensive to create&lt;/a&gt;. Additionally &lt;a href=&quot;https://www.tunetheweb.com/performance/http2/&quot;&gt;HTTP/2&lt;/a&gt; actually benefits from one connection (mostly!) so using other domains is often a performance cost rather than gain.&lt;/p&gt;
&lt;p&gt;Another way of doing this was by sharding your domain with one or more assets subdomain (e.g. assets.example.com) so again the fonts are not hosted on your main domain where your web page is loaded from. However, it has the same connection issues so again this is not the performance benefits it may once have had.&lt;/p&gt;
&lt;p&gt;The other supposed benefit of using a public CDN, was from leveraging the fact that visitors might already have that version of jQuery loaded in their HTTP cache, but again I'm convinced that's over-egged. There are so many libraries and versions, and &lt;a href=&quot;https://www.speedshop.co/2015/11/05/page-weight-doesnt-matter.html#http-caching&quot;&gt;browser caches are smaller than you think&lt;/a&gt;, so for you to be lucky enough to gain from this seems unlikely. Additionally &lt;a href=&quot;https://andydavies.me/blog/2018/09/06/safari-caching-and-3rd-party-resources/&quot;&gt;Safari has a unique HTTP cache per domain visited&lt;/a&gt;, for privacy reasons (called a double-keyed cache) and &lt;a href=&quot;https://www.chromestatus.com/feature/5280299309072384&quot;&gt;Chrome soon will have too&lt;/a&gt;, ending any argument there.&lt;/p&gt;
&lt;p&gt;That leads nicely into the privacy implications of using third-party CDNs. You have no idea what sort of tracking they are doing to your users by using them, rather than self-hosting. And recent legislation means a lot of sites have to explicitly list all the cookies used on the site, which gets more complicated when using a third-party.&lt;/p&gt;
&lt;p&gt;I've been convinced for a while now that third-party CDNs, or even sharding your own domains, are not the performance boast they are thought to be. All too often you see the main domain serving the index.html, and then that connection not being used for anything else &lt;a href=&quot;https://nooshu.github.io/blog/2019/12/30/how-to-read-a-wpt-connection-view-chart/#underutilised-connections&quot;&gt;as time is instead wasted setting up new connections&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is not to mention the security implications of loading assets from another domain. Yes there is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity&quot;&gt;SRI&lt;/a&gt; but that can &lt;a href=&quot;https://nooshu.github.io/blog/2019/12/17/http2-and-sri-dont-always-get-on/&quot;&gt;cause unexpected issues&lt;/a&gt;, and I honestly don't see the point. If it is a static asset (where you can use SRI) then self-host, and if it is not static (because the contents are liable to change) then you can't use SRI.&lt;/p&gt;
&lt;p&gt;On a related point, using a third-party, also introduces the risk of them becoming a single point of failure (SPOF) and taking down your website if it goes offline for any reason. This has been &lt;a href=&quot;http://www.stevesouders.com/blog/2010/06/01/frontend-spof/&quot;&gt;recognised for a long time&lt;/a&gt; and while it may seem unlikely that Google Fonts will go down, it can be blocked by company proxies or &lt;a href=&quot;https://www.labsterx.com/blog/things-to-consider-when-building-a-website-in-china-9-shtml/&quot;&gt;whole countries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All in all, more and more have been advising to &lt;a href=&quot;https://csswizardry.com/2019/05/self-host-your-static-assets/&quot;&gt;self-host your static assets&lt;/a&gt;, ideally on the domain you serve the web pages from. Fonts are static assets, so they should also be self-hosted right? Well it turns out it is not quite as simple as that because fonts have their own peculiarities and performance optimisations that might make self-hosting a little trickier...&lt;/p&gt;
&lt;h2 id=&quot;google-fonts&quot;&gt;Google Fonts and how they work.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://fonts.google.com/&quot;&gt;Google Fonts&lt;/a&gt; is an amazing resource for those of you that are into your fonts. It has 977 open-source fonts for anyone to use completely for free. Commercial fonts are ridiculously expensive for those of you that have ever looked into them and they are also usually licenced rather than bought, and are charged based on expected number of page views - like they will run out through use! To have so many free fonts in one collection and so easy to use is therefore very useful.&lt;/p&gt;
&lt;p&gt;Google Fonts, however, takes it one step further. Like many providers of website assets (see jQuery example above), they also provide a CDN and host the fonts for you to use directly from them. This means you can start using fonts just by adding one line of code to your website to pull in the style sheet, like this:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;&amp;lt;link href=&quot;https://fonts.googleapis.com/css?family=Lato&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;You can also add more weights and fonts to that one line to load several fonts and variations of each font:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;&amp;lt;link href=&quot;https://fonts.googleapis.com/css?family=Lato:400,400i,700,700i,900%7CPoppins:300,400,700,900&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;The downside to this is in performance (the upside is also in performance but that side is not as obvious - we'll get to that). The problem is that your website (say &lt;code&gt;www.example.com&lt;/code&gt;) loads the stylesheet from &lt;code&gt;fonts.googleapis.com&lt;/code&gt;, which returns some CSS made up of &lt;code&gt;font-face&lt;/code&gt; declarations. Using the first example above, returns this then I view that URL in Chrome:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;/* latin-ext */ @font-face { font-family: 'Lato'; font-style: normal; font-weight: 400; font-display: swap; src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjxAwXiWtFCfQ7A.woff2) format('woff2'); unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; } /* latin */ @font-face { font-family: 'Lato'; font-style: normal; font-weight: 400; font-display: swap; src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wXiWtFCc.woff2) format('woff2'); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }&lt;/p&gt;
We'll get into what some of those settings mean later (and also why there are two &lt;code&gt;font-face&lt;/code&gt; declarations), but for now this means you can use this font in your style like the following:
&lt;p class=&quot;code&quot;&gt;body { font-family: 'Lato', sans-serif; }&lt;/p&gt;
&lt;p&gt;However this means you have to connect to &lt;code&gt;fonts.googleapis.com&lt;/code&gt;, download the CSS, then connect to &lt;code&gt;fonts.gstatic.com&lt;/code&gt; to download the actual fonts (why Google can't host both the CSS and the fonts on the one domain I really don't know!).&lt;/p&gt;
&lt;p&gt;Fonts are often discovered late by the browser when loading a page (as you need to download the CSS to see the font references) but Google Fonts are discovered extra late, as you need to download the CSS from &lt;em&gt;another domain&lt;/em&gt;, then the fonts from a &lt;em&gt;3rd domain&lt;/em&gt; and, as discussed above, making an HTTPS connection takes time. This can be seen in the following waterfall diagram generated by &lt;a href=&quot;https://www.webpagetest.org/&quot;&gt;WebPageTest&lt;/a&gt; (note all tests were run with Chrome - 3GSlow):&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_medium&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/gfonts.png&quot; alt=&quot;Waterfall showing connection delays when using Google Fonts&quot; height=&quot;352&quot; width=&quot;1892&quot;/&gt;&lt;/div&gt;
&lt;p&gt;You can see on line 1 we are downloading the HTML then, once that's downloaded and read at just under 2 seconds, the browsers sees the need for the Google Fonts CSS and downloads it on line 4. This takes a second just to make the connection, and then at 3.5 seconds we download the stylesheet, and we see the actual font we need and download that on line 6 - which takes about another second and a quarter to make the connection to fonts.gstatic.com, before we can actually start downloading the font.&lt;/p&gt;
&lt;p&gt;So we can see using this font from Google Fonts is costing us a full 3 seconds of performance from the HTML being available, before we even start downloading the font!&lt;/p&gt;
&lt;h3 id=&quot;google-fonts-with-resource-hints&quot;&gt;Improving Google Fonts with resource hints.&lt;/h3&gt;
&lt;p&gt;We can mitigate some of this performance hit of downloading the CSS and then the fonts from two different domains. The first domain (for the CSS) should be fairly high up your index.html so hopefully will be seen early enough, but the second domain is not seen until later. However we &lt;em&gt;know&lt;/em&gt; what that domain will be (&lt;code&gt;fonts.gstatic.com&lt;/code&gt;), so we can use a &lt;code&gt;preconnect&lt;/code&gt; resource hint to ask the browser to open the connection in advance to save some of that second connection time later:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;&amp;lt;link href=&quot;https://fonts.gstatic.com&quot; rel=&quot;preconnect&quot; crossorigin&amp;gt; &amp;lt;link href=&quot;https://fonts.googleapis.com/css?family=Lato&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;Rerunning our test produces the waterfall below:&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_medium&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/gfonts-preconnect.png&quot; alt=&quot;Waterfall Google Fonts with preconnect&quot; height=&quot;348&quot; width=&quot;1908&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Here we can see the connection on line 5 is set up in advance, before we download the CSS. This leads to over a second of improvement (downloading the fonts at 4 seconds, rather 5.25 seconds) as we do not pay that connection set up penalty, but instead can download the fonts as soon as we've read the Google Fonts CSS.&lt;/p&gt;
&lt;p&gt;You might think you could take it to the next stage and &lt;code&gt;preload&lt;/code&gt; the whole font, rather than settle for just &lt;code&gt;preconnect&lt;/code&gt;-ing to the domain, but Google Fonts creates unique hashes for their font names. In above example the font downloaded is S6uyw4BMUTPHjx4wXg.woff2 rather than lato.woff2, so preloading is not possible, unless you want to leave your site open to breakage if they ever change that hash.&lt;/p&gt;
&lt;p&gt;Anyway, if you are using Google Fonts and do nothing else after reading this post, at least add that &lt;code&gt;preconnect&lt;/code&gt; hint if it's not there already - it's one line of code and should improve the performance of your page.&lt;/p&gt;
&lt;p&gt;In fact Google Fonts actually returns that &lt;code&gt;preconnect&lt;/code&gt; hint as a &lt;code&gt;link&lt;/code&gt; HTTP Header when it returns the CSS as shown below:&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_medium&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/gfonts-preconnect-link-header.png&quot; alt=&quot;Google Fonts returns the preconnect hint as a link header&quot; height=&quot;454&quot; width=&quot;1414&quot;/&gt;&lt;/div&gt;
&lt;p&gt;In a lot of cases, this won't really help as by this point the browser now knows you want to connect to this domain to download the fonts, so you are still better specifying this in your HTML to get the &lt;code&gt;preconnect&lt;/code&gt; started earlier (it doesn't matter that it's in both and the second hint will just be ignored). However if your page is still processing by the time this comes in, and the DOM is not ready (a sign of too much JavaScript on you page maybe?), then this can help improve the performance when it finally does figure out which of those fonts it needs.&lt;/p&gt;
&lt;h2 id=&quot;font-display-swap&quot;&gt;Font Display Swap&lt;/h2&gt;
&lt;p&gt;In the above &lt;code&gt;font-face&lt;/code&gt; code you can see a &lt;code&gt;font-display: swap;&lt;/code&gt; line. This is a relatively new instruction you can add to your &lt;code&gt;font-face&lt;/code&gt; declaration which tells the browser to use the fallback, system font (&lt;code&gt;sans-serif&lt;/code&gt; in this example) initially and then swap-in the real font once it has been downloaded. This means the content is not delayed waiting on the font, and so is seen as a good performance improvement.&lt;/p&gt;
&lt;p&gt;This does lead to a flash of unstyled text (FOUT), which can be jarring and some don't like (personally I'm on the fence - I agree the content is more important than the styling but the jolt as the font steps in is often jarring and while mitigating it is possible by tweaking the fallback font, it is tricky). The alternative is the flash of invisible text (FOIT) where the text is hidden until the font comes in, which obviously delays the load and can cause other problems &lt;a href=&quot;https://www.zachleat.com/web/mitt-romney-webfont-problem/&quot;&gt;if some text loads and other text doesn't&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Anyway, prior to its introduction, different browsers handled this differently - some like IE and Edge used FOUT, others used FOIT, and they had various timeouts as to when giving up waiting on the fonts. This could leave your content invisible for a long time if the font failed to download. The introduction of &lt;code&gt;font-display: swap&lt;/code&gt; put that choice in the website owners control. It also has &lt;a href=&quot;https://caniuse.com/#feat=mdn-css_at-rules_font-face_font-display&quot;&gt;wide browser support&lt;/a&gt; except for IE and Edge but, as per above, they use this by default anyway. Google fonts also &lt;a href=&quot;https://twitter.com/addyosmani/status/1128548064287952896&quot;&gt;supports different font-display options&lt;/a&gt;, and suggests &lt;code&gt;font-display: swap&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;So, another tip, if you are using Google fonts is to check you have that that &lt;code&gt;&amp;amp;display=swap&lt;/code&gt; parameter to your loading URL, and if not (as it's only recently become supported), then add it:&lt;/p&gt;
&lt;p&gt;For example, change from this:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;&amp;lt;link href=&quot;https://fonts.gstatic.com&quot; rel=&quot;preconnect&quot; crossorigin&amp;gt; &amp;lt;link href=&quot;https://fonts.googleapis.com/css?family=Lato&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;&amp;lt;link href=&quot;https://fonts.gstatic.com&quot; rel=&quot;preconnect&quot; crossorigin&amp;gt; &amp;lt;link href=&quot;https://fonts.googleapis.com/css?family=Lato&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;You can also specify &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display&quot;&gt;one of the other font-display values&lt;/a&gt;, like &lt;a href=&quot;https://css-tricks.com/really-dislike-fout-font-display-optional-might-jam/&quot;&gt;optional if you prefer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, this only solves half the problem. This instruction is in the CSS that Google Fonts returns, so it is only useful &lt;em&gt;after&lt;/em&gt; you have downloaded the CSS file. So this helps deal with the delay while the fonts themselves are downloading but does not help while you are waiting for that CSS to download. So a good improvement (at least for those who prefer FOUT), but still not the whole solution.&lt;/p&gt;
&lt;h2 id=&quot;self-hosting-google-fonts&quot;&gt;Self-hosting Google Fonts.&lt;/h2&gt;
&lt;p&gt;I've been &lt;a href=&quot;https://www.tunetheweb.com/blog/helping-to-create-the-web-almanac&quot;&gt;helping to create the Web Almanac&lt;/a&gt; (a fantastic look at the state of the web - &lt;a href=&quot;https://almanac.httparchive.org/en/2019/&quot;&gt;check it out&lt;/a&gt; if you've not seen it yet), and the slow loading of the Google Fonts on our site annoyed me and was something I wanted to look at. Especially with the jarring &lt;code&gt;font-display: swap&lt;/code&gt; behaviour. I wanted to see if we could reduce the impact of this, and the natural solution seemed to be self-hosting, possibly with the use of &lt;code&gt;preload&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We had already used the above performance improvements (&lt;code&gt;preload&lt;/code&gt; and &lt;code&gt;font-display: swap;&lt;/code&gt;), but surely it would be better to not have to make that annoying CSS call at all - and then remove the need for the &lt;code&gt;preconnect&lt;/code&gt; completely? We know what will be in that CSS so surely self-hosting is better? Well that's where it gets interesting...&lt;/p&gt;
&lt;p&gt;I found a handy script &lt;a href=&quot;https://github.com/neverpanic/google-font-download&quot;&gt;(Google Font Download)&lt;/a&gt; on GitHub to help me download all the various font variations (as we had a lot of them - up to 9 depending on the page), and then I copied the CSS it outputted into our main style sheet and added the fonts to our host directory. There are also &lt;a href=&quot;https://google-webfonts-helper.herokuapp.com/fonts&quot;&gt;online tools that do the same&lt;/a&gt;. This all seemed to work and we got rid of that annoying CSS download and two domains - self-hosting for the win!&lt;/p&gt;
&lt;p&gt;However, on closer inspection I noticed the fonts were bigger:&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_small&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/font-size-increase-from-self-hosting.png&quot; alt=&quot;Comparison showing the sizes of various fonts - the ones on the left are up to 43% bigger&quot; height=&quot;554&quot; width=&quot;713&quot;/&gt;&lt;/div&gt;
&lt;p&gt;As you can see there was a hefty size increase (up to 74% extra for some of them!) from the Google Font loaded fonts (on the right) and the locally hosted fonts (on the left). I initially thought this was due to my local development web-server, presumably due to compression, but WOFF2 fonts are served uncompressed by the web server - or at least should be - since the format includes Brotli compression. Also the screenshot above shows the downloaded bytes (in black above) and also the uncompressed bytes (in slightly lighter colour on the bottom) for each column (they are similar enough in both columns as the fonts &lt;em&gt;are&lt;/em&gt; being served without further compression by the web server, but the downloaded bytes include HTTP headers so are slightly larger), and there were differences in both compressed and uncompressed bytes, so it wasn't that.&lt;/p&gt;
&lt;p&gt;Comparing the &lt;code&gt;font-face&lt;/code&gt; declarations produced by the tool highlighted one difference:&lt;/p&gt;
&lt;p&gt;From Google Fonts:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;/* latin-ext */ @font-face { font-family: 'Lato'; font-style: normal; font-weight: 400; font-display: swap; src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjxAwXiWtFCfQ7A.woff2) format('woff2'); unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; } /* latin */ @font-face { font-family: 'Lato'; font-style: normal; font-weight: 400; font-display: swap; src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wXiWtFCc.woff2) format('woff2'); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }&lt;/p&gt;
&lt;p&gt;From the download tool:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;@font-face { font-family: 'Lato'; font-style: normal; font-weight: 400; src: local('Lato Regular'), local('Lato-Regular'), /* from https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wXg.woff2 */ url('Lato_400.woff2') format('woff2'), /* from https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wWA.woff */ url('Lato_400.woff') format('woff'); }&lt;/p&gt;
&lt;p&gt;The first difference is we've lost our &lt;code&gt;font-display: swap&lt;/code&gt; line, so we can add that back in easily enough, but more interestingly is the fact that Google Fonts is serving two fonts - and including a different &lt;code&gt;unicode-range&lt;/code&gt;, in them. This is due to font-subsetting and it reduces font files.&lt;/p&gt;
&lt;h2 id=&quot;font-subsetting&quot;&gt;Font Subsetting&lt;/h2&gt;
&lt;p&gt;Font subsetting involves removing the characters you are not going to use to reduce the size of the font file. Typically most western users will just use the Latin characters, and downloading a font with all the characters you probably won't use is wasteful. I'd heard of it before but had never realised the dramatic impact it can have! Google Fonts will automatically provide a &lt;code&gt;font-face&lt;/code&gt; with subset fonts for Latin language and will also, where available, provide a second font for the missing extended Latin characters (e.g. Ā) which will only be downloaded if needed.&lt;/p&gt;
&lt;p&gt;In fact you can take it a step further and also ask for a special font containing only the characters you want with the &lt;code&gt;text&lt;/code&gt; parameter:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;https://fonts.googleapis.com/css?family=Lato&amp;amp;text=ABC&lt;/p&gt;
&lt;p&gt;Upon further reading, the font download tool I used apparently does support font subsetting, but only at a whole &quot;language&quot; (Latin or Latin-ext) and it merged both subsetted fonts into one file. So I ended up reverting to using what my browser was using, and stopped using this tool. This gave downloads of a similar side (only slightly difference being due to slightly different HTTP headers on my development environment), but I was soon to discover that it was not just subsetting that made the difference.&lt;/p&gt;
&lt;h2 id=&quot;google-fonts-css&quot;&gt;Google Font is clever about how it serves the fonts&lt;/h2&gt;
&lt;p&gt;Google Font does &lt;em&gt;not&lt;/em&gt; serve the same CSS every time but instead &lt;a href=&quot;https://twitter.com/davelab6/status/1127289794197970944?s=20&quot;&gt;basis it on the user-agent provided&lt;/a&gt;. So for Internet Explorer 11 it provides the following:&lt;/p&gt;
&lt;p class=&quot;code&quot;&gt;@font-face { font-family: 'Lato'; font-style: normal; font-weight: 400; font-display: swap; src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wWA.woff) format('woff'); }&lt;/p&gt;
&lt;p&gt;Here you can see it is only providing the WOFF format, as IE 11 &lt;a href=&quot;https://caniuse.com/#feat=woff2&quot;&gt;does not support WOFF2&lt;/a&gt;, and it is not providing the &lt;code&gt;unicode-range&lt;/code&gt; for the same reason. It does supply &lt;code&gt;font-display: swap&lt;/code&gt; (as I specified that in the URL for the CSS) despite it not supporting that, but it does no harm.&lt;/p&gt;
&lt;p&gt;It's not just browser make and version either. &lt;a href=&quot;https://www.typotheque.com/articles/hinting&quot;&gt;Font hinting&lt;/a&gt; involves extra instructions in the font file which are then used to ensure the font is displayed the best - especially on low resolution screens or for really small sizes. Font hinting is used by Windows, but not MacOS so depending which you use to get your Google Fonts if using the browser (even if using Chrome on each platform), you'll get font files with hints or without hints. If you then download the Windows version and serve those locally, you'll actually make your MacOS users suffer with larger font files full of hints that will not be used, and if you do the opposite you'll make Windows users potentially suffer with worse fonts as they will get no hints, when previously they did.&lt;/p&gt;
&lt;p&gt;When I use Google Fonts, and also when I downloaded the fonts locally, I was doing it on my Mac, so got the smaller, un-hinted fonts. When I used the tool I got the full, hinted fonts. So this was another reason for the large size difference!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://typedrawers.com/discussion/comment/24519&quot;&gt;Whether hinting is still relevant&lt;/a&gt; as high definition screens have become more common is a good question, and many fonts do not come with hints, because they are so time consuming to create. When they are present they can dramatically increase the size of the fonts - Lato is doubled in size with hints. Whether they are worth that extra load is another decision you'll need to take if moving off Google Fonts to self-hosting.&lt;/p&gt;
&lt;p&gt;So the Google Fonts CDN is backed by a clever script to serve the most appropriate fonts, and optimise for performance. By moving to self-hosted fonts you are taking on the responsibility to set this all up correctly, and may even be losing support for your fonts in some browsers if you don't.&lt;/p&gt;
&lt;p&gt;For the Web Almanac we looked at the browsers that visited us and made the decision to only support WOFF2, and also use the MacOS versions without hinting since they were half the size. This made the CSS simpler (especially with the fact that &lt;a href=&quot;https://caniuse.com/#feat=font-unicode-range&quot;&gt;unicode-range support&lt;/a&gt; is basically supported by all &lt;a href=&quot;https://caniuse.com/#feat=woff2&quot;&gt;browsers that support WOFF2&lt;/a&gt;). IE 11 users, and other older browsers, default back to &lt;code&gt;sans-serif&lt;/code&gt; which does not look quite as nice, but we are seeing the fonts as a progressive enhancement as the site is still more than useable without them. Additionally older browsers, on older machines may even benefit from using default, system fonts as they are more likely to be on older, under-powered machines.&lt;/p&gt;
&lt;p&gt;You can also &lt;a href=&quot;https://www.zachleat.com/web/css-tricks-web-fonts/&quot;&gt;make further adjustments to the fonts&lt;/a&gt; if you so please (check the font licences first though!) and have more advanced knowledge, but copying the Google Fonts defaults used by Chrome on MacOS is probably sufficient for the most of us if you're willing to only support WOFF2 browsers and not have hinting. If you want the hinting, the fonts returned for Chrome on Windows is probably your best option, and then you can add other formats like WOFF if you want.&lt;/p&gt;
&lt;p&gt;Still if we'd stuck with Google Fonts, then we'd have got WOFF (and even older formats) and font hinting or not as appropriate, without even having to think about it, and without any hassle of checking browser support to help decide which versions to serve locally, or thinking about font-subsetting or anything like that. So there are definite benefits to using the Google Fonts site to serve the fonts, and you are giving these up by self-hosting. This includes benefiting from any &lt;a href=&quot;https://twitter.com/davelab6/status/1127289852460969984?s=20&quot;&gt;future enhancements to Google Fonts&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;future-font-improvements&quot;&gt;Future Font Improvements&lt;/h2&gt;
&lt;p&gt;Since I was delving deep into fonts, and since I warned that you might lose any future benefits from Google Fonts by self-hosting, I'm going to take a slight side-step into other things I've discovered while working on this. What are the big upcoming changes in the font world? Well, there are two changes which are getting a lot of buzz at the moment and which may impact fonts in future (and therefore may be supported by Google Fonts, perhaps by default, if you stayed with them): &lt;em&gt;variable fonts&lt;/em&gt; and &lt;em&gt;progressive font enrichment&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;variable-fonts&quot;&gt;Variable Fonts&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/typography/variable-fonts&quot;&gt;Variable fonts&lt;/a&gt;, allow different styles of a font to be used without having to download separate fonts. I mentioned earlier that the Web Almanac uses up to 9 different font files, but it is really only for 2 fonts. The reasons we have 9 font files, is we also have a bold, italic, bold-italic, black (basically super bold!) and even light versions of one or both of them. That might seem ridiculous to have so many variations of the same font (it surprised me!) and you'd think the browser could make fonts a little thicker for bold, or slate them for italics. Well they can, but each browser does it slightly differently, and the results can be &lt;a href=&quot;https://alistapart.com/article/say-no-to-faux-bold/&quot;&gt;completely wrong&lt;/a&gt;, hence why many people call them &quot;faux fonts&quot;.&lt;/p&gt;
&lt;p&gt;The only way to ensure you display what you want to, is to use a &quot;real font&quot; specifically for each weight and style you need. Variable fonts however &lt;a href=&quot;https://drafts.csswg.org/css-fonts-4/&quot;&gt;standardises how to apply variations of a font&lt;/a&gt;, so you no longer need to download completely separate font files. This means, in theory, we could replace those 9 fonts, with just 2 when variable font versions of them become available.&lt;/p&gt;
&lt;p&gt;This opens up a load of possibilities in font usage on the web. While I might think it is ridiculous to have 9 variations of two fonts, this is actually quite limited whereas variable fonts allows endless variations. On mobile you might want a slightly different thickness for &quot;bold&quot; than on desktop and on tablet, you might want somewhere in between - variable fonts allows that option, with some &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-variation-settings&quot;&gt;simple CSS instructions&lt;/a&gt;, without the expense of another font. &lt;a href=&quot;https://twitter.com/jpamental&quot;&gt;Jason Pamental&lt;/a&gt; gave a &lt;a href=&quot;https://www.dotconferences.com/2019/12/jason-pamental-dynamic-typographic-systems-with-variable-fonts&quot;&gt;fantastic talk on variable fonts at DotCSS recently&lt;/a&gt; and has a &lt;a href=&quot;https://codepen.io/jpamental/full/MGEPEL&quot;&gt;demo page&lt;/a&gt; showing how you can have a beautifully styled page with apparently many different fonts - all from one font file!&lt;/p&gt;
&lt;p&gt;Using variable fonts also means that all variations of the font can load at the same time &lt;a href=&quot;https://www.zachleat.com/web/mitt-romney-webfont-problem/&quot;&gt;avoiding confusion caused by font loading issues mentioned previously&lt;/a&gt;. This also results in less layout repaints: without variable fonts the page will redraw as each individual font variation is downloaded, which can result in many &lt;a href=&quot;https://youtu.be/FbguhX3n3Uc?t=527&quot;&gt;reflows&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://caniuse.com/#feat=variable-fonts&quot;&gt;Variable fonts have very good support in modern browsers&lt;/a&gt;, but the downside to variable fonts is that the font files are bigger to accommodate for the extra instructions (exactly like hints do too). It depends on the font, but typically they are up to twice as big after compression so you'd want to be making use of at least two styles to make them worthwhile. Even then you might be better prioritising one, smaller file being downloaded to display your critical text, rather than one larger file to display all your text. Then again with &lt;code&gt;font-display: swap&lt;/code&gt;, maybe that's less of an issue? That's for each site owner to decide!&lt;/p&gt;
&lt;h3 id=&quot;progressive-font-enrichment&quot;&gt;Progressive Font Enrichment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://rwt.io/typography-tips/progressive-font-enrichment-reinventing-web-font-performance&quot;&gt;Progressive font enrichment&lt;/a&gt;, basically takes the subsetting to the next level and allows downloading of additional character definitions as they are needed as a stream of extra information which supplements the currently downloaded font, rather than adding an additional one. This may seem like small gains for a lot of effort for us westerners, but for other languages - particularly in the far east - font files can be &lt;em&gt;massive&lt;/em&gt; (like &lt;a href=&quot;http://hayataki-masaharu.jp/web-typography-in-japanese/#Web_safe_font_stack_in_Japanese&quot;&gt;2Mb massive&lt;/a&gt;), given all the characters in those languages. For this reason web fonts are not used as much on those countries and progressive font enrichment may open web fonts up to sites in those languages.&lt;/p&gt;
&lt;p&gt;Progressive font enrichment seems to be at a much earlier stage than variable fonts from my understanding, but there is &lt;a href=&quot;https://fonts.gstatic.com/experimental/incxfer_demo&quot;&gt;an online demo available&lt;/a&gt;. However they are another potentially exciting change coming to fonts.&lt;/p&gt;
&lt;h3 id=&quot;will-google-fonts-continue-to-be-enhanced&quot;&gt;Will Google Fonts Continue to be Enhanced?&lt;/h3&gt;
&lt;p&gt;Because of the way Google Fonts works, you can imagine it could drop in enhancements like these (or many others!) just by changing the CSS it returns to you. And it could be clever about when to do this. Obviously only when your browser supports it (like it does now with the font format - WOFF or WOFF2), or for other ways. For example if you ask more than two fonts, and it is cheaper to return the variable font, then it could do that automatically and reference the same font file in multiple &lt;code&gt;font-face&lt;/code&gt; declarations, but if you request only one variant then reference the smaller, traditional font. Sound far-fetched? They &lt;a href=&quot;https://rwt.io/typography-tips/what-web-wants&quot;&gt;already did this with one font (Oswald)&lt;/a&gt;! I'll be honest and admit I don't know if the same is possible with progressive font enrichment as I don't fully understand how they work, but it will be interesting to see.&lt;/p&gt;
&lt;p&gt;This is not to mention that when fonts are updated, perhaps to add new character sets or correct errors in the glyphs, you get the new ones automatically when using Google Fonts directly, but not when self-hosting - at least not without the manual effort of updating them. Perhaps you could look at proxying the requests via your domain for the best of both worlds, but this would likely still be slower and requires extra setup and management.&lt;/p&gt;
&lt;p&gt;On the flip side, self-hosting provides stability as some updates may affect your design, for example if a one line title starts stretching to two lines because of a font change. There are a few instanced of people getting &lt;em&gt;very&lt;/em&gt; upset about this but will save linking to them to hide the rage from you.&lt;/p&gt;
&lt;h2 id=&quot;benefit-of-self-hosting&quot;&gt;Benefits of Self-Hosting&lt;/h2&gt;
&lt;p&gt;OK so we've a lot of background and theory here, and while there are clear potential performance benefits from self-hosting, there are also complexities to consider and so using the Google Fonts site has some clear benefits too. So is self-hosting still worth it? Well that depends on the actual gains, so you can make that judgement call. Small performance improvements maybe would mean you'd stick with Google Fonts, large improvements would be a different story.&lt;/p&gt;
&lt;p&gt;For the Web Almanac we recently &lt;a href=&quot;https://github.com/HTTPArchive/almanac.httparchive.org/pull/607&quot;&gt;switched to self-hosting our Google Fonts&lt;/a&gt;, and with testing we saw a &lt;em&gt;dramatic&lt;/em&gt; change, as can be seen below:&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_large&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/local-gfonts.png&quot; alt=&quot;Filmstrip view showing locally hosted Google Fonts version loads almost completely in 2.4 seconds instead of 6.0 seconds&quot; height=&quot;714&quot; width=&quot;2622&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The bottom image is with the locally hosted fonts on our test server and you can see the load time has halved from 6 seconds to 3 seconds! In fact when I drilled down I saw it was even better than half (3.3 seconds saving)!&lt;/p&gt;
&lt;p&gt;What is not as apparent (but which we'll see later), unless you've very good eyes, is the fonts have not actually loaded at this point in either image - they happen by 7.5 seconds on locally hosted version and by 10.5 seconds on the Google Fonts hosted version. However the fonts are similar enough to the fall backs that there is only a small reflow in this case so it's less jarring than it is on some sites. This can be seen in the visual progress chart below:&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_medium&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/local-gfonts-visual-progress.png&quot; alt=&quot;Visual progress chart showing locally hosted Google Fonts version loads almost completely in 2.4 seconds instead of 6.0 seconds&quot; height=&quot;1034&quot; width=&quot;1590&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The chart shows the page for the locally hosted version (in red) is almost fully loaded at 2.4 seconds, and then has a few further enhancements as image downloads, and then the fonts drop into play. Yeah I'd still like to avoid that reflow completely, but hey there is still a performance cost to fonts that we can't optimise for!&lt;/p&gt;
&lt;p&gt;The reason why the improvements are so dramatic, are due to one more thing I did not consider: CSS is render blocking. So the fact you included a Google Fonts CSS link, doesn't just hold up displaying the text - it holds up displaying &lt;em&gt;everything!&lt;/em&gt; We know the font is a progressive enhancement and we can safely draw the rest of the page, and even the text itself (with fallback fonts) but the browser doesn't - it just sees that there is some CSS to download so holds up the whole page, while we connect to that domain, and then download it. &lt;a href=&quot;https://www.filamentgroup.com/lab/load-css-simpler/&quot;&gt;There is no async for CSS&lt;/a&gt; - but perhaps there should be for cases like this? This also makes the risk of Google Fonts being unavailable, mentioned above, even larger as your whole site will be render blocked in this case until the browser times out!&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_medium&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/gfonts-css-blocking-initial-render.png&quot; alt=&quot;Waterfall chart showing start render is delayed waiting for the Google Fonts to download.&quot; height=&quot;786&quot; width=&quot;1644&quot;/&gt;&lt;/div&gt;
&lt;p&gt;In the above waterfall, you can see the vertical green Start Render line only happens at 6 seconds - as it has to wait for the Google Fonts CSS to downloaded on line 12, which spends half the time connecting to the domain, and the other half doing the actual download.&lt;/p&gt;
&lt;p&gt;Compare this to the locally hosted version:&lt;/p&gt;
&lt;div class=&quot;screenshot screenshot_medium&quot;&gt;&lt;img src=&quot;https://www.tunetheweb.com/assets/images/blog/gfonts-local-earlier-render.png&quot; alt=&quot;Waterfall chart showing start render is not delayed.&quot; height=&quot;720&quot; width=&quot;1644&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Here we are able to start rendering as soon as soon as the site's CSS is downloaded and processed at 2.5 seconds. There is no delay while it connects to the Google Fonts domain to get that CSS.&lt;/p&gt;
&lt;p&gt;In both cases we can see the start render happens before the fonts are downloaded, and thanks to the magic of &lt;code&gt;font-display: swap&lt;/code&gt;, the text is still visible. Therefore, at least when using &lt;code&gt;font-display: swap&lt;/code&gt;, it would be better if Google Fonts didn't load via render-blocking CSS, and instead loaded via some async JavaScript which then injects the CSS line into the page only when they've downloaded. If they did this, they'd not have any start render delays, but on the flip side, there would still be the connection delays so a longer time when unstyled text is displayed. Edit: I raised a &lt;a href=&quot;https://github.com/google/fonts/issues/2315&quot;&gt;suggestion to have a non-render blocking way to load Google Fonts&lt;/a&gt; on their GitHub issues list - upvote it if you want that too!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/zachleat&quot;&gt;Zach Leatherman&lt;/a&gt; advocates &lt;a href=&quot;https://www.youtube.com/watch?v=FbguhX3n3Uc&amp;amp;feature=youtu.be&amp;amp;t=1934&quot;&gt;this approach to reduce reflows&lt;/a&gt;, and shows it is also possible with just JavaScript and without needed a CSS file. He then shows some other benefits of your fonts being managed by JavaScript, whereby you can choose to remove fonts completely if on a slow network (using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API&quot;&gt;Network Information API&lt;/a&gt;) or if the user has &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/save-data&quot;&gt;Save-Data&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion&quot;&gt;Prefers-Reduced-Motion&lt;/a&gt; settings enabled. Interesting possibilities!&lt;/p&gt;
&lt;h2 id=&quot;preloading-fonts&quot;&gt;Preloading fonts&lt;/h2&gt;
&lt;p&gt;Once you self-host, and move away from Google's hashed URLs you have the option of preloading the font for further performance gains. This is one that has some potential downsides however, as discussed by &lt;a href=&quot;https://twitter.com/AndyDavies&quot;&gt;Andy Davies&lt;/a&gt; in his &lt;a href=&quot;https://andydavies.me/blog/2019/02/12/preloading-fonts-and-the-puzzle-of-priorities/&quot;&gt;Preloading Fonts and the Puzzle of Priorities blog post&lt;/a&gt;. Basically by preloading fonts, and moving them up the priority queue, you're implicitly deprioritising other critical loads (e.g. CSS), and due to a &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=788757&quot;&gt;bug in Chrome, the fonts may even jump ahead of some of those&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally preloading when the font won't be used will cause a wasteful download - for example if a local version exists and can be used in preference, as described in our &lt;code&gt;font-face&lt;/code&gt; declaration above (though I didn't go into this!), or if a browser doesn't support that font format (though all browsers that support &lt;code&gt;preload&lt;/code&gt; also support WOFF2). While they do recommend &lt;code&gt;preload&lt;/code&gt;, Google &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/webfont-optimization#preload_your_webfont_resources&quot;&gt;explicitly warns you to consider this&lt;/a&gt;, and it is good to see them calling this out.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;font-display: swap&lt;/code&gt;, the need for &lt;code&gt;preload&lt;/code&gt; may not be as high, though you may still benefit from preloading a small number of fonts to avoid FOUT and redraws. At the moment we haven't turned &lt;code&gt;preload&lt;/code&gt; on in the Web Almanac as part of the move to locally-hosting our fonts and will need to do some more testing if we want to do this but for now I'm happy with it as is.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;To answer the question in the title of this post: yes it's better to self-host as the performance gains are substantial. Of course your mileage may vary as it will depend on your exact site so test, test, test, but I would imagine it would be the better option, from a performance perspective, for most sites.&lt;/p&gt;
&lt;p&gt;However, Google Fonts is not just a repository of hundreds of free fonts - it is also a clever delivery mechanism utilising many of the latest web performance techniques to try to deliver the most appropriate fonts, with the minimal effort to the website owner. In moving to self-hosting you ideally want to re-implement as many of those improvements like &lt;code&gt;font-display: swap&lt;/code&gt;, subsetting, and removal of hinting (at least for some browsers), or you may actually negatively impact performance by having larger fonts files.&lt;/p&gt;
&lt;p&gt;There is some complexity involved in this (which Google Fonts handles for you) but with WOFF2-only being a realistic option now, and good support of most techniques with inbuilt fallbacks, this is easier than it used to be. Still it pays to have some web font knowledge when setting this all up (which hopefully this post has helped with!), and you may want to keep an ear out for upcoming changes in the font world as there will undoubtedly be further improvements to come.&lt;/p&gt;
&lt;p&gt;Alternatively maybe we're over optimising here, and using the full font, with hints and no subsetting, is sufficient when serving locally? There is a download option on the Google Fonts website in the Family Selected pop up which makes that relatively easy, though weirdly &lt;a href=&quot;https://twitter.com/dickelippe/status/1217382271050813440?s=20&quot;&gt;it does not include WOFF and WOFF2 formats when using this&lt;/a&gt;, for reasons that I don't understand! However if you are really that interested in web performance (and you should be!), then you should try to do this properly. This post just shows this is a bit more complex than downloading and hosting on your site as I always presumed it was.&lt;/p&gt;
&lt;p&gt;Wow, that ended up being even longer than I thought it would be! But hopefully you found it as interesting as I did researching all this, and hopefully it gives you some ideas on improving your font loading time. I'd strongly encourage you to follow &lt;a href=&quot;https://twitter.com/jpamental&quot;&gt;Jason&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/zachleat&quot;&gt;Zach&lt;/a&gt; on Twitter for more font goodness, and also &lt;a href=&quot;https://twitter.com/AndyDavies&quot;&gt;Andy&lt;/a&gt; for general web performance advice.&lt;/p&gt;
&lt;div class=&quot;readmore clearfix&quot;&gt;
&lt;h2 id=&quot;resources&quot;&gt;Want to read more?&lt;/h2&gt;
&lt;div class=&quot;more_resources&quot;&gt;
&lt;h3&gt;More Resources on the Font Loading&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;related_posts&quot;&gt;
&lt;h3&gt;Related Posts on TuneTheWeb.com&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;lastmodified&quot;&gt;This page was originally created on &lt;time datetime=&quot;2020-01-12&quot;&gt;12-Jan-2020&lt;/time&gt; and last edited on &lt;time datetime=&quot;2020-02-23&quot;&gt;23-Feb-2020&lt;/time&gt;.&lt;/p&gt;
&lt;a href=&quot;https://twitter.com/intent/tweet?text=Should%20you%20self-host%20Google%20Fonts?&amp;amp;via=tunetheweb&amp;amp;url=https://www.tunetheweb.com/blog/should-you-self-host-google-fonts/&quot; id=&quot;tweetlink&quot; class=&quot;twitter-button tweet-this-button&quot;&gt;Tweet&lt;/a&gt;
&lt;section class=&quot;star-rating-section&quot; readability=&quot;2&quot;&gt;&lt;h4&gt;How useful was this page?&lt;/h4&gt;
&lt;p&gt;&lt;span class=&quot;star-rating star-rating-1&quot;&gt;&lt;button id=&quot;star-rating-link-1&quot; class=&quot;star-rating-link&quot;&gt;&lt;span class=&quot;star-rating star-rating-1&quot;&gt;     &lt;/span&gt; &lt;span class=&quot;star-rating star-rating-2&quot;&gt;&lt;button id=&quot;star-rating-link-2&quot; class=&quot;star-rating-link&quot;&gt;&lt;span class=&quot;star-rating star-rating-2&quot;&gt;     &lt;/span&gt; &lt;span class=&quot;star-rating star-rating-3&quot;&gt;&lt;button id=&quot;star-rating-link-3&quot; class=&quot;star-rating-link&quot;&gt;&lt;span class=&quot;star-rating star-rating-3&quot;&gt;     &lt;/span&gt; &lt;span class=&quot;star-rating star-rating-4&quot;&gt;&lt;button id=&quot;star-rating-link-4&quot; class=&quot;star-rating-link&quot;&gt;&lt;span class=&quot;star-rating star-rating-4&quot;&gt;     &lt;/span&gt; &lt;span class=&quot;star-rating star-rating-5&quot;&gt;&lt;button id=&quot;star-rating-link-5&quot; class=&quot;star-rating-link&quot;&gt;&lt;span class=&quot;star-rating star-rating-5&quot;&gt;     &lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/p&gt;
&lt;span id=&quot;star-rating-feedback-link&quot; class=&quot;star-rating-feedback-link hidden&quot;&gt;– Thanks for your feedback!&lt;/span&gt;&lt;/section&gt;
</description>
<pubDate>Sun, 23 Feb 2020 01:32:28 +0000</pubDate>
<dc:creator>bewuethr</dc:creator>
<og:url>https://www.tunetheweb.com/blog/should-you-self-host-google-fonts/</og:url>
<og:type>article</og:type>
<og:title>Should you self-host Google Fonts?</og:title>
<og:description>A deep dive into the performance implications of using Google Fonts (good and bad) and whether self-hosting is better.</og:description>
<og:image>https://www.tunetheweb.com/assets/images/blog/local-gfonts.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tunetheweb.com/blog/should-you-self-host-google-fonts/</dc:identifier>
</item>
<item>
<title>Spain builds submarine 70 tons too heavy due to wrong decimal (2013)</title>
<link>https://o.canada.com/news/spain-builds-submarine-70-tons-too-heavy</link>
<guid isPermaLink="true" >https://o.canada.com/news/spain-builds-submarine-70-tons-too-heavy</guid>
<description>&lt;div class=&quot;entry-content&quot;/&gt;&lt;div class=&quot;entry-content p402_premium&quot;&gt;&lt;img class=&quot;wp-post-image&quot; alt=&quot;&quot; src=&quot;https://api.pddataservices.com/images?url=https://postmediacanadadotcom.files.wordpress.com/2013/06/overweight_submarine_27210953.jpg&amp;amp;w=840&amp;amp;h=630&quot; width=&quot;840&quot; height=&quot;630&quot;/&gt;&lt;p&gt;&lt;span class=&quot;img-caption&quot;&gt;(AP Photo/ Navantia)&lt;/span&gt;&lt;/p&gt;

&lt;div itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;strong&gt;By Michael Melia&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HARTFORD, Conn. — A new, Spanish-designed submarine has a weighty problem: The vessel is more than 70 tons too heavy, and officials fear if it goes out to sea, it will not be able to surface.&lt;/p&gt;
&lt;p&gt;And a former Spanish official says the problem can be traced to a miscalculation — someone apparently put a decimal point in the wrong place.&lt;/p&gt;
&lt;p&gt;“It was a fatal mistake,” said Rafael Bardaji, who until recently was director of the Office of Strategic Assessment at Spain’s Defence Ministry.&lt;/p&gt;
&lt;p&gt;The Isaac Peral, the first in a new class of diesel-electric submarines, was nearly completed when engineers discovered the problem. A U.S. Navy contractor in Connecticut, Electric Boat, has signed a deal to help the Spanish Defence Ministry find ways to slim down the 2,200-ton submarine.&lt;/p&gt;
&lt;p&gt;The agreement with Groton, Conn.-based Electric Boat calls for Spain to pay $14 million over three years for an assessment of the problem with the S-80 submarine program and the scope of the work that would be required to correct it, the Spanish Defence Ministry said in a statement to The Associated Press.&lt;/p&gt;
&lt;p&gt;Bardaji, now a senior fellow with the Strategic Studies Group think-tank in Madrid, said officials will review options provided by Electric Boat. But he said the preference has been to extend the length of the submarine’s hull, perhaps by 5 to 6 metres, to increase buoyancy.&lt;/p&gt;
&lt;p&gt;Otherwise, the weight of the submarine would have to be reduced, and he said the Spanish Navy would not want to compromise features such as the combat system or an air-independent propulsion system.&lt;/p&gt;
&lt;p&gt;The Isaac Peral, named for a 19th century Spanish submarine designer, is one of four vessels in the class that are in various stages of construction. The country has invested about $2.7 billion in the program. The first was scheduled to be delivered in 2015 but the Spanish state-owned shipbuilder, Navantia, has said the weight problems could cause delays of up to two years.&lt;/p&gt;
&lt;p&gt;The 233-foot-long submarine will carry a crew of 32, along with eight special forces troops, and weapons systems for surface and anti-submarine warfare.&lt;/p&gt;
&lt;p&gt;The Defence Ministry said technical problems are normal for projects of this scale.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apparently somebody in the calculations made a mistake in the very beginning and nobody paid attention to review the calculations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“The technology challenges that these programs face during development are much more than simple calculations,” the ministry said. “All the major military programs, especially submarines, have experienced delays and often have required the support of a technology partner.”&lt;/p&gt;
&lt;p&gt;Bardaji said the problem was discovered in the second half of last year, and Navantia told defence officials that somebody had apparently put a decimal point in the wrong place.&lt;/p&gt;
&lt;p&gt;“Apparently somebody in the calculations made a mistake in the very beginning and nobody paid attention to review the calculations,” he said.&lt;/p&gt;
&lt;p&gt;Electric Boat, the primary contractor for the U.S. Navy’s fleet of nuclear submarines, accepted the contract through a foreign military sales agreement between the American Navy and the Spanish Defence Ministry, the U.S. Naval Sea Systems Command announced this week.&lt;/p&gt;
&lt;p&gt;Electric Boat, a division of General Dynamic Corp., has helped other countries with their submarine programs.&lt;/p&gt;
&lt;p&gt;It began assisting with development of the Astute-class nuclear attack submarine for the British Royal Navy in 2003, and it is working under another foreign military sales agreement on Australia’s Collins class of submarines.&lt;/p&gt;
&lt;/div&gt;

&lt;nav role=&quot;navigation&quot; id=&quot;nav-below&quot; class=&quot;pagination post-navigation&quot;&gt;&lt;nav class=&quot;pagination&quot;&gt;&lt;a href=&quot;https://o.canada.com/technology/nsa-spying&quot; class=&quot;next&quot;&gt;&lt;span class=&quot;tablet-up pag-content&quot;&gt;&lt;img src=&quot;https://api.pddataservices.com/images?url=https://postmediacanadadotcom.files.wordpress.com/2012/06/google-sign.jpg&amp;amp;w=200&amp;amp;h=200&quot; alt=&quot;&quot; class=&quot;attachment-post-thumbnail wp-post-image&quot;/&gt;&lt;span&gt;US admits using American web companies to spy on foreigners&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href=&quot;https://o.canada.com/news/world/aclu-study-finds-huge-racial-disparity-in-marijuana-arrests-in-u-s&quot; class=&quot;previous&quot;&gt;&lt;span class=&quot;tablet-up pag-content&quot;&gt;&lt;img src=&quot;https://api.pddataservices.com/images?url=https://postmediacanadadotcom.files.wordpress.com/2013/05/lega.jpg&amp;amp;w=200&amp;amp;h=200&quot; alt=&quot;&quot; class=&quot;attachment-post-thumbnail wp-post-image&quot;/&gt;&lt;span&gt;The black and white story of America's war on drugs&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/nav&gt;&lt;/nav&gt;&lt;footer class=&quot;entry-meta&quot;/&gt;&lt;/div&gt;</description>
<pubDate>Sun, 23 Feb 2020 00:56:50 +0000</pubDate>
<dc:creator>EndXA</dc:creator>
<og:type>article</og:type>
<og:title>Spain builds submarine 70 tons too heavy after putting a decimal in the wrong place</og:title>
<og:url>https://o.canada.com/news/spain-builds-submarine-70-tons-too-heavy</og:url>
<og:description>By Michael Melia HARTFORD, Conn. — A new, Spanish-designed submarine has a weighty problem: The vessel is more than 70 tons too heavy, and officials fear if it goes out to sea, it will not be able …</og:description>
<og:image>https://postmediacanadadotcom.files.wordpress.com/2013/06/overweight_submarine_27210953.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://o.canada.com/news/spain-builds-submarine-70-tons-too-heavy</dc:identifier>
</item>
</channel>
</rss>