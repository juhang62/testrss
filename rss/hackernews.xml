<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>My least favorite Rust type</title>
<link>http://ridiculousfish.com/blog/posts/least-favorite-rust-type.html</link>
<guid isPermaLink="true" >http://ridiculousfish.com/blog/posts/least-favorite-rust-type.html</guid>
<description>&lt;p&gt;My least favorite Rust type is &lt;code&gt;std::ops::Range&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Range is a foundational type, with magic syntax but &lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#76-83&quot;&gt;a simple definition&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// The lower bound of the range (inclusive).&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// The upper bound of the range (exclusive).&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Idx&lt;/code&gt; is typically an integral type, but you can make a Range of anything, which will become important later. Here’s a range of Unit:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(In case you were wondering, &lt;a href=&quot;https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=1d1afe85832e9149b4beb4835c1f1d85&quot;&gt;the Unit range does not contain Unit&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;What’s wrong with Range? This will be a critique on Rust’s own terms.&lt;/p&gt;
&lt;h3 id=&quot;range-needs-random-feeling-borrows&quot;&gt;Range needs random-feeling borrows&lt;/h3&gt;
&lt;p&gt;Any Rust tutorial will cover borrowing, lifetimes, ownership, etc. You think you understand, &lt;a href=&quot;https://doc.rust-lang.org/std/ops/struct.Range.html#examples-1&quot;&gt;then this&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// why the &amp;amp;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You need the borrow because &lt;a href=&quot;https://www.youtube.com/watch?v=RVXTqnG7NoI&quot;&gt;you can’t like, OWN a number, man!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Heh, no, it’s because, what if you wanted to make a &lt;code&gt;Range&amp;lt;Vec&amp;gt;&lt;/code&gt; instead:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..=&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(try to guess what value &lt;code&gt;v&lt;/code&gt; has above)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Range&amp;lt;Vec&amp;gt;&lt;/code&gt; requires the borrow, so the vastly more common &lt;code&gt;Range&amp;lt;usize&amp;gt;&lt;/code&gt; etc. forces it as well.&lt;/p&gt;
&lt;h3 id=&quot;range-needs-random-feeling-clones&quot;&gt;Range needs random-feeling clones&lt;/h3&gt;
&lt;p&gt;We’re not done picking on the borrow checker. &lt;a href=&quot;https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=cbd0ab70dcd2ab47d6902fb95bb7f916&quot;&gt;Range makes you clone&lt;/a&gt; even when there’s no ownership transfer:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;vec!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()];&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// required to avoid &quot;use of moved value&quot; in next line&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Range&lt;/code&gt; &lt;em&gt;could&lt;/em&gt; be &lt;code&gt;Copy&lt;/code&gt;, but &lt;a href=&quot;https://github.com/rust-lang/rust/pull/27186&quot;&gt;some Ranges are also iterators&lt;/a&gt; and you might copy one by mistake:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// silent copy of iter&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;so Ranges which are not used as iterators (many &lt;em&gt;cannot&lt;/em&gt; be, like &lt;code&gt;Range&amp;lt;f64&amp;gt;&lt;/code&gt; or &lt;code&gt;Range&amp;lt;char&amp;gt;&lt;/code&gt;) pay the price, and so does any type which embeds a &lt;code&gt;Range&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is abusing the borrow checker as a bad linter. &lt;strong&gt;Range undermines the story of lifetimes and ownership, making the borrow checker feel arbitrary.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;range-is-unsure-when-it-is-valid&quot;&gt;Range is unsure when it is valid&lt;/h3&gt;
&lt;p&gt;Rust will happily construct a backwards Range, which ends before it starts:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Is this backwards range valid? Its &lt;code&gt;len()&lt;/code&gt; is 0, it &lt;code&gt;contains()&lt;/code&gt; nothing, it yields nothing as an iterator. But if you try to use it to index into a slice, you get a panic! So it looks valid but is primed to explode!&lt;/p&gt;
&lt;p&gt;This is because - again - you can make a Range of anything. If you try to enforce that start &amp;lt;= end, you lose the ability to make a Range of non-comparable things. A Range of &lt;code&gt;dyn Error&lt;/code&gt; can’t be invalid, so a Range of int never gets to be.&lt;/p&gt;
&lt;p&gt;A practical problem is writing correct bounds checks. For example, consider the &lt;code&gt;get_unchecked&lt;/code&gt; function on slice - &lt;a href=&quot;https://doc.rust-lang.org/std/primitive.slice.html#method.get_unchecked&quot;&gt;it says&lt;/a&gt; “an out-of-bounds index is undefined behavior” but never defines what &lt;em&gt;out of bounds means&lt;/em&gt;. So how does one even call this function safely?&lt;/p&gt;
&lt;p&gt;Restated: &lt;strong&gt;a Range with start 0 and length 0 may be out of bounds.&lt;/strong&gt; That’s wild.&lt;/p&gt;

&lt;p&gt;A regex engine (&lt;a href=&quot;https://github.com/ridiculousfish/regress&quot;&gt;here’s one&lt;/a&gt;) often deals in ranges of char, for example &lt;code&gt;/[a-z]/&lt;/code&gt;. Should it use &lt;code&gt;Range&amp;lt;char&amp;gt;&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;No! The footgun is &lt;code&gt;/[\u10FFFF]/&lt;/code&gt;, which is the largest char. &lt;code&gt;Range&amp;lt;char&amp;gt;&lt;/code&gt; cannot represent this value, even though it has the bits to do so.&lt;/p&gt;
&lt;p&gt;Is &lt;code&gt;RangeInclusive&lt;/code&gt; a better choice? This uses an &lt;a href=&quot;https://github.com/rust-lang/rust/blob/2e0edc0f28c5647141bedba02e7a222d3a5dc9c3/library/core/src/ops/range.rs#L344&quot;&gt;additional bool field&lt;/a&gt; to mean…stuff, and it needs to be &lt;a href=&quot;https://github.com/rust-lang/rust/blob/2e0edc0f28c5647141bedba02e7a222d3a5dc9c3/library/core/src/ops/range.rs#L504&quot;&gt;separately checked&lt;/a&gt; in several places. This is a silly expensive representation, pushing &lt;code&gt;RangeInclusive&amp;lt;char&amp;gt;&lt;/code&gt; to &lt;a href=&quot;https://rust.godbolt.org/z/7Ev9nq&quot;&gt;12 bytes&lt;/a&gt; even though it would fit in 8, with bits to spare. Not a good choice for a perf-sensitive regex algorithm.&lt;/p&gt;
&lt;h3 id=&quot;a-recipe-for-rearranging-range&quot;&gt;A Recipe for Rearranging Range&lt;/h3&gt;
&lt;p&gt;The problem is Range is overloaded: it’s too flexible, it wants to be everything.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It’s sometimes a set&lt;/li&gt;
&lt;li&gt;It’s sometimes an iterator&lt;/li&gt;
&lt;li&gt;It’s sometimes a slice index&lt;/li&gt;
&lt;li&gt;You can make silly Ranges out of anything&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These goals are in tension, and it meets none of them well.&lt;/p&gt;
&lt;p&gt;Perhaps it’s too late and we must live with this wart, but a recipe for a different approach:&lt;/p&gt;
&lt;ol readability=&quot;9.0694050991501&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Limit Range to &lt;code&gt;Copy + PartialOrd&lt;/code&gt; types. There may be occasional uses for &lt;code&gt;Range&amp;lt;String&amp;gt;&lt;/code&gt; or &lt;code&gt;Range&amp;lt;BigNum&amp;gt;&lt;/code&gt;, but it’s not worth forcing borrowing for the common case.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.6622222222222&quot;&gt;
&lt;p&gt;Now that Range always knows how to compare its ends, enforce that &lt;code&gt;start &amp;lt;= end&lt;/code&gt; at construction time. For Ranges constructed from constants, this will be free. This avoids the “looks valid, actually explodes” problem and will unlock further optimizations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Range::is_empty()&lt;/code&gt; could be written naturally instead of a &lt;a href=&quot;https://github.com/rust-lang/rust/blob/2e0edc0f28c5647141bedba02e7a222d3a5dc9c3/library/core/src/ops/range.rs#L140&quot;&gt;a bizarre way&lt;/a&gt; just for NaNs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[T]::get()&lt;/code&gt; would need to branch once, &lt;a href=&quot;https://github.com/rust-lang/rust/blob/1fd5b9d516c035a898dcb437b2f982bea5d4bc88/library/core/src/slice/index.rs#L271&quot;&gt;not twice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Range::len()&lt;/code&gt; could just be a sub and not &lt;a href=&quot;https://rust.godbolt.org/z/cY1fsq&quot;&gt;require a branch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;Give Range an &lt;code&gt;iter()&lt;/code&gt; method, like other collections have. Now Range is not an Iterator, just like Vec is not an Iterator, and Range can be easily made Copy. This does mean writing &lt;code&gt;for n in (1..10).iter()&lt;/code&gt;, but Rust already requires that for collections, so it’s more consistent.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.8773006134969&quot;&gt;
&lt;p&gt;Now that Range is not an Iterator, &lt;code&gt;RangeInclusive&lt;/code&gt; can drop its extra bool. It would simply be a pair of indexes, and could not be empty (that’s what &lt;a href=&quot;https://developer.apple.com/documentation/swift/closedrange&quot;&gt;Swift does&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 18:45:09 +0000</pubDate>
<dc:creator>ridiculous_fish</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://ridiculousfish.com/blog/posts/least-favorite-rust-type.html</dc:identifier>
</item>
<item>
<title>Things we learned running Postgres 13</title>
<link>https://pganalyze.com/blog/postgres13-better-performance-monitoring-usability</link>
<guid isPermaLink="true" >https://pganalyze.com/blog/postgres13-better-performance-monitoring-usability</guid>
<description>&lt;div&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://pganalyze.com/static/c19e088b51f042e5749d96ace57df97b/aa440/postgres_13.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;postgres 13&quot; title=&quot;Astronaut writing Postgres 13&quot; src=&quot;https://pganalyze.com/static/c19e088b51f042e5749d96ace57df97b/8c557/postgres_13.png&quot; srcset=&quot;/static/c19e088b51f042e5749d96ace57df97b/4edbd/postgres_13.png 175w, /static/c19e088b51f042e5749d96ace57df97b/13ae7/postgres_13.png 350w, /static/c19e088b51f042e5749d96ace57df97b/8c557/postgres_13.png 700w, /static/c19e088b51f042e5749d96ace57df97b/e996b/postgres_13.png 1050w, /static/c19e088b51f042e5749d96ace57df97b/2cefc/postgres_13.png 1400w, /static/c19e088b51f042e5749d96ace57df97b/aa440/postgres_13.png 1500w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot; loading=&quot;lazy&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Postgres 13 is almost here. It's been in beta since May, and the general availability release is coming any day. We've been following Postgres 13 closely here at pganalyze, and have been running the beta in one of our staging environments for several months now.&lt;/p&gt;
&lt;p&gt;There are no big new features in Postgres 13, but there are a lot of small but important incremental improvements. Let's take a look.&lt;/p&gt;

&lt;h2 id=&quot;performance&quot;&gt;Performance&lt;/h2&gt;
&lt;p&gt;Postgres 13 performance improvements include both built-in optimizations and heuristics that will make your database run better out of the box, as well as additional features to give you more flexibility in optimizing your schema and queries.&lt;/p&gt;
&lt;h3 id=&quot;smaller-indexes-with-b-tree-deduplication&quot;&gt;Smaller Indexes with B-Tree Deduplication&lt;/h3&gt;
Produced by OmniGraffle 7.17.2\n2020-09-20 19:29:10 +0000 deduplicate_items=off deduplicate_items=on (new in Postgres 13)
&lt;p&gt;Postgres 13 introduces a way for B-Tree indexes to &lt;a href=&quot;https://www.postgresql.org/docs/13/btree-implementation.html#BTREE-DEDUPLICATION&quot;&gt;avoid storing duplicate entries in some situations&lt;/a&gt;. In general, a B-Tree index consists of a tree of indexed values, with each leaf node pointing to a particular row version. Because each leaf points to one row version, if you are indexing non-unique values, those values need to be repeated.&lt;/p&gt;
&lt;p&gt;The de-duplication mechanism avoids that by having a leaf node point to several row versions if possible, which leads to smaller indexes.&lt;/p&gt;
&lt;p&gt;Here is an example from our own pganalyze application schema: We have a &lt;code class=&quot;language-text&quot;&gt;queries&lt;/code&gt; table to track all the queries we monitor, and a &lt;code class=&quot;language-text&quot;&gt;database_id&lt;/code&gt; field to track which database they belong to. We index &lt;code class=&quot;language-text&quot;&gt;database_id&lt;/code&gt; (so we can quickly fetch queries for a specific database), and because each database typically has more than one query, there is a lot of duplication in this index.&lt;/p&gt;
&lt;p&gt;New B-Tree indexes in Postgres 13 use the deduplication feature by default, but if for some reason, you need to turn it off, you can control it with the &lt;code class=&quot;language-text&quot;&gt;deduplicate_items&lt;/code&gt; storage parameter. Here we create the same index in two different ways, with deduplication explicitly on and off (though again, you don't need to specify &lt;code class=&quot;language-text&quot;&gt;on&lt;/code&gt;—this is the default):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INDEX&lt;/span&gt; CONCURRENTLY queries_db_id_idx_no_dedup &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; queries&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;database_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;deduplicate_items&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INDEX&lt;/span&gt; CONCURRENTLY queries_db_id_idx_yes_dedup &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; queries&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;database_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;deduplicate_items&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; relname&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pg_size_pretty&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pg_relation_size&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;oid&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; pg_class
&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; relname &lt;span class=&quot;token operator&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'queries_db_id_idx_no_dedup'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'queries_db_id_idx_yes_dedup'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;           relname           | pg_size_pretty 
-----------------------------+----------------
 queries_db_id_idx_no_dedup  | 218 MB
 queries_db_id_idx_yes_dedup | 67 MB
(2 rows)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With deduplication, the new index is more than &lt;strong&gt;three times smaller&lt;/strong&gt;! Smaller indexes are faster to load from disk, and take up less space in memory, meaning there's more room for your data.&lt;/p&gt;
&lt;p&gt;One interesting note here is that the index entries point to row &lt;em&gt;versions&lt;/em&gt; (as in, a row the way it exists in one specific &lt;a href=&quot;https://www.postgresql.org/docs/13/mvcc.html&quot;&gt;MVCC&lt;/a&gt; state), not rows themselves, so this feature &lt;strong&gt;can improve index size even for unique indexes&lt;/strong&gt;, where one would not expect any duplication to occur.&lt;/p&gt;
&lt;p&gt;Note that deduplication is not possible in all cases (see above link for details), and that you will need to reindex before you can take advantage of it if upgrading via &lt;code class=&quot;language-text&quot;&gt;pg_upgrade&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;extended-statistics-improvements-in-postgres-13&quot;&gt;Extended Statistics Improvements in Postgres 13&lt;/h3&gt;
&lt;p&gt;Postgres 10 introduced the concept of &lt;a href=&quot;https://www.postgresql.org/docs/13/planner-stats.html#PLANNER-STATS-EXTENDED&quot;&gt;extended statistics&lt;/a&gt;. Postgres keeps some statistics about the &quot;shape&quot; of your data to ensure it can plan queries efficiently, but the statistics kept by default cannot track things like inter-column dependencies. Extended statistics were introduced to address that: These are database objects (like indexes) that you create manually with &lt;code class=&quot;language-text&quot;&gt;CREATE STATISTICS&lt;/code&gt; to give the query planner more information for more specific situations. These would be expensive for Postgres to determine automatically, but armed with an understanding of the semantics of your schema, you can provide that additional info. Used carefully, this can lead to &lt;a href=&quot;https://build.affinity.co/how-we-used-postgres-extended-statistics-to-achieve-a-3000x-speedup-ea93d3dcdc61&quot;&gt;massive performance improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Postgres 13 brings a number of small but important improvements to extended statistics, including support for using them with &lt;code class=&quot;language-text&quot;&gt;OR&lt;/code&gt; clauses and in &lt;code class=&quot;language-text&quot;&gt;IN&lt;/code&gt;/&lt;code class=&quot;language-text&quot;&gt;ANY&lt;/code&gt; constant lists, allowing consideration of multiple extended statistics objects in planning a query, and support for &lt;a href=&quot;https://www.postgresql.org/docs/13/sql-alterstatistics.html&quot;&gt;setting a statistics target&lt;/a&gt; for extended statistics:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;STATISTICS&lt;/span&gt; table_stx &lt;span class=&quot;token keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;STATISTICS&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Like with the regular statistics target, this is a trade-off between additional planning time (and longer &lt;code class=&quot;language-text&quot;&gt;ANALYZE&lt;/code&gt; runs), versus having more precise plans. We recommend using this in a targeted manner using EXPLAIN plans to confirm plan changes.&lt;/p&gt;
&lt;h3 id=&quot;parallel-vacuum--better-support-for-append-only-workloads&quot;&gt;Parallel VACUUM &amp;amp; Better Support for Append-only Workloads&lt;/h3&gt;
&lt;p&gt;Postgres multi-version concurrency control means you need to run &lt;code class=&quot;language-text&quot;&gt;VACUUM&lt;/code&gt; regularly (usually you can rely on the autovacuum process, though it may need some tuning). In Postgres 13, one notable improvement is that multiple indexes for a single table can be vacuumed in parallel. This can lead to big performance improvements in &lt;code class=&quot;language-text&quot;&gt;VACUUM&lt;/code&gt; work. Parallel &lt;code class=&quot;language-text&quot;&gt;VACUUM&lt;/code&gt; is the default and can be controlled with the &lt;code class=&quot;language-text&quot;&gt;PARALLEL&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;VACUUM &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;PARALLEL &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; VERBOSE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; queries&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;INFO:  vacuuming &quot;public.queries&quot;
INFO:  launched 2 parallel vacuum workers for index vacuuming (planned: 2)
INFO:  scanned index &quot;index_queries_on_database_id&quot; to remove 1403418 row versions by parallel vacuum worker
DETAIL:  CPU: user: 0.98 s, system: 0.15 s, elapsed: 2.37 s
INFO:  scanned index &quot;index_queries_on_last_occurred_at&quot; to remove 1403418 row versions by parallel vacuum worker
DETAIL:  CPU: user: 0.88 s, system: 0.27 s, elapsed: 2.60 s
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Parallel VACUUM occurs when the following is true:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sufficient parallel workers are available, based on the system-wide limit set by &lt;a href=&quot;https://www.postgresql.org/docs/13/runtime-config-resource.html#GUC-MAX-PARALLEL-WORKERS-MAINTENANCE&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;max_parallel_maintenance_workers&lt;/code&gt;&lt;/a&gt; (defaults to 2)&lt;/li&gt;
&lt;li&gt;There are multiple indexes on the table (one index can be processed by one worker at a time)&lt;/li&gt;
&lt;li&gt;Index types support it (all built-in index types support parallelism to some extent)&lt;/li&gt;
&lt;li&gt;The indexes are large enough to exceed &lt;a href=&quot;https://www.postgresql.org/docs/13/runtime-config-query.html#GUC-MIN-PARALLEL-INDEX-SCAN-SIZE&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;min_parallel_index_scan_size&lt;/code&gt;&lt;/a&gt; (defaults to 512 kB)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Be aware that &lt;strong&gt;parallel VACUUM is currently not supported for autovacuum.&lt;/strong&gt; This new feature is intended for use in manual VACUUM runs that need to complete quickly, such as when insufficient autovacuum tuning has lead to an imminent TXID wraparound, and you need to intervene to fix it.&lt;/p&gt;
&lt;p&gt;On that note, an important &lt;code class=&quot;language-text&quot;&gt;autovacuum&lt;/code&gt; improvement in Postgres 13 is that the autovacuum background process can now be triggered by &lt;code class=&quot;language-text&quot;&gt;INSERT&lt;/code&gt; statements for append-only tables. The main purpose of VACUUM is to clean up old versions of updated and deleted rows, but it is also essential to set pages as all-visible for MVCC bookkeeping. All-visible pages allow index-only scans to avoid checking visibility status row-by-row, making them faster.&lt;/p&gt;
&lt;p&gt;We make extensive use of append-only tables at pganalyze for our timeseries data, and this improvement will make our lives considerably easier, avoiding the occasional manual VACUUM run on these tables. This new behavior can be controlled by the &lt;code class=&quot;language-text&quot;&gt;autovacuum_vacuum_insert_threshold&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;autovacuum_vacuum_insert_scale_factor&lt;/code&gt; variables.&lt;/p&gt;
&lt;h3 id=&quot;incremental-sorting&quot;&gt;Incremental Sorting&lt;/h3&gt;
&lt;p&gt;Sorting data is a common database task, and Postgres has a number of features to avoid unnecessary work here. For example, if you have a B-Tree index on a column, and you query your table ordered by that column, it can just scan that index in order to get sorted data.&lt;/p&gt;
&lt;p&gt;In Postgres 13, this is improved to handle partially sorted data. If you have an index on &lt;code class=&quot;language-text&quot;&gt;(a, b)&lt;/code&gt; (or the data is already sorted by &lt;code class=&quot;language-text&quot;&gt;(a, b)&lt;/code&gt; for another reason), and you issue a query to order by &lt;code class=&quot;language-text&quot;&gt;(a, b, c)&lt;/code&gt;, Postgres understands that the input data is already partially sorted, and can avoid re-sorting the whole dataset. This is especially useful if you have a &lt;code class=&quot;language-text&quot;&gt;LIMIT&lt;/code&gt; in your query, since this can avoid even more work.&lt;/p&gt;
&lt;h2 id=&quot;monitoring&quot;&gt;Monitoring&lt;/h2&gt;
&lt;p&gt;Monitoring improvements in Postgres 13 include more details on &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; usage, more options for logging your queries, and more information on query planning.&lt;/p&gt;
&lt;h3 id=&quot;wal-usage-stats&quot;&gt;WAL Usage Stats&lt;/h3&gt;
&lt;p&gt;The write-ahead log (&lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt;) ensures your data stays consistent in the event of a crash, even mid-write. Consistency is a fundamental property of databases—it ensures your transaction either committed or did not commit; you don't have to worry about in-between states. But on a busy system, &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; writes can often be a bottleneck. To help diagnose this, Postgres 13 includes more information on &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; usage from your queries.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;EXPLAIN&lt;/code&gt; now supports information about &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; records generated during execution:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;ANALYZE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; WAL&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; users&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;                                                    QUERY PLAN                                                     
-------------------------------------------------------------------------------------------------------------------
 Delete on users  (cost=0.00..5409.00 rows=100000 width=6) (actual time=108.910..108.911 rows=0 loops=1)
   WAL: records=100000 fpi=741 bytes=11425721
   -&amp;gt;  Seq Scan on users  (cost=0.00..5409.00 rows=100000 width=6) (actual time=8.519..51.850 rows=100000 loops=1)
 Planning Time: 6.083 ms
 Execution Time: 108.955 ms
(5 rows)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see that the &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; line includes the number of records generated, the number of full page images (fpi), and the number of &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; bytes generated. Only non-zero values are printed in the default text format.&lt;/p&gt;
&lt;p&gt;This is also available in &lt;code class=&quot;language-text&quot;&gt;pg_stat_statements&lt;/code&gt;. For example, on our staging environment, here is what we ran to get the statement that produced the most &lt;code class=&quot;language-text&quot;&gt;WAL&lt;/code&gt; records:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; calls&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; wal_records&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; wal_fpi&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; wal_bytes &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; pg_stat_statements
  &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; wal_records &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;-[ RECORD 1 ]---------------------------------------------------------------------------------------------
query       | CREATE TEMPORARY TABLE upsert_data (server_id uuid NOT NULL, backend_id uuid NOT NULL,
            | query_start timestamp NOT NULL, query_fingerprint bytea NOT NULL, query_text text NOT NULL)
calls       | 7974948
wal_records | 966960816
wal_fpi     | 1018412
wal_bytes   | 100086092097&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Like many other values in &lt;code class=&quot;language-text&quot;&gt;pg_stat_statements&lt;/code&gt;, the &lt;code class=&quot;language-text&quot;&gt;wal_records&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;wal_fpi&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;wal_bytes&lt;/code&gt; values here are cumulative since the last &lt;code class=&quot;language-text&quot;&gt;pg_stat_statements_reset&lt;/code&gt; call.&lt;/p&gt;
&lt;p&gt;This info can help you identify your write-heavy queries and optimize as necessary. Note that write-heavy queries can also affect replication: If you see replication lag, you can use these new features to understand better which statements are causing it.&lt;/p&gt;
&lt;h3 id=&quot;better-statement-logging-in-postgres-13&quot;&gt;Better Statement Logging in Postgres 13&lt;/h3&gt;
&lt;p&gt;Settings like &lt;code class=&quot;language-text&quot;&gt;log_min_duration_statement&lt;/code&gt; are great to help you understand your slow queries, but how slow is slow? Is the reporting query that runs overnight slow compared to the 5s query that runs in the context of a web request? Is that 5s query, that runs once in a rarely-used endpoint, slow compared to a 100ms query that runs twenty times to load your home page?&lt;/p&gt;
&lt;p&gt;Until now, &lt;code class=&quot;language-text&quot;&gt;log_min_duration_statement&lt;/code&gt; was one blunt tool for all these situations, but Postgres 13 brings some flexibility with sampling-based statement logging. You can set &lt;a href=&quot;https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-MIN-DURATION-SAMPLE&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;log_min_duration_sample&lt;/code&gt;&lt;/a&gt; to enable sampling, and then either set &lt;code class=&quot;language-text&quot;&gt;log_statement_sample_rate&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;log_transaction_sample_rate&lt;/code&gt; to control sampling.&lt;/p&gt;
&lt;p&gt;Both of these settings work in a similar manner: they range from 0 to 1, and determine the chance that a statement will be randomly selected for logging. The former applies to individual statements, the latter determines logging for all statements in a transaction. If both &lt;code class=&quot;language-text&quot;&gt;log_min_duration_statement&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;log_min_duration_sample&lt;/code&gt; are set, the former should be a higher threshold that logs everything, and the latter can be a lower threshold that logs only occasionally.&lt;/p&gt;
&lt;p&gt;Another great statement logging improvement is being able to &lt;strong&gt;log parameters for failed statements&lt;/strong&gt; with &lt;a href=&quot;https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-PARAMETER-MAX-LENGTH-ON-ERROR&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;log_parameter_max_length_on_error&lt;/code&gt;&lt;/a&gt;. Here's an example of setting this to &lt;code class=&quot;language-text&quot;&gt;-1&lt;/code&gt; (unlimited) and trying to run &lt;code class=&quot;language-text&quot;&gt;SELECT pg_sleep($1)&lt;/code&gt; (with parameter &lt;code class=&quot;language-text&quot;&gt;$1&lt;/code&gt; set to &lt;code class=&quot;language-text&quot;&gt;3&lt;/code&gt;) on a connection with a &lt;code class=&quot;language-text&quot;&gt;statement_timeout&lt;/code&gt; of &lt;code class=&quot;language-text&quot;&gt;1s&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;2020-09-17 12:23:03.161 PDT [321349] maciek@maciek ERROR:  canceling statement due to statement timeout
2020-09-17 12:23:03.161 PDT [321349] maciek@maciek CONTEXT:  extended query with parameters: $1 = '3'
2020-09-17 12:23:03.161 PDT [321349] maciek@maciek STATEMENT:  select pg_sleep($1)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The timeout case is especially useful: Since both the query text and the parameters are now available in the logs, you could run &lt;code class=&quot;language-text&quot;&gt;EXPLAIN&lt;/code&gt; on any failed query to figure out what query plan caused it to hit the time-out (N.B.: you are not guaranteed to get the same plan that failed, but depending on your workload, the odds are pretty good).&lt;/p&gt;
&lt;h3 id=&quot;more-planning-information&quot;&gt;More Planning Information&lt;/h3&gt;
&lt;p&gt;The usual culprit in slow queries is the query execution itself, but with a complex schema and an elaborate query, planning can take significant time as well. Postgres 13 introduces two new changes that make it easier to keep an eye on planning:&lt;/p&gt;
&lt;p&gt;First, the &lt;code class=&quot;language-text&quot;&gt;BUFFERS&lt;/code&gt; option to &lt;code class=&quot;language-text&quot;&gt;EXPLAIN&lt;/code&gt; gives you more information on memory usage during query planning. Postgres manages memory for your data and indexes using a &quot;buffer pool&quot;, and the &lt;code class=&quot;language-text&quot;&gt;BUFFERS&lt;/code&gt; option can show you which parts of your query are using that memory and how. The &lt;a href=&quot;https://www.postgresql.org/docs/13/sql-explain.html&quot;&gt;EXPLAIN documentation&lt;/a&gt; has some more details. New in Postgres 13 is the ability to see how buffers are used during query planning:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;ANALYZE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; BUFFERS&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; pg_class&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Seq Scan on pg_class  (cost=0.00..16.86 rows=386 width=265) (actual time=0.014..0.120 rows=390 loops=1)
   Buffers: shared hit=13
 Planning Time: 1.021 ms
   Buffers: shared hit=118
 Execution Time: 0.316 ms
(5 rows)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second, &lt;code class=&quot;language-text&quot;&gt;pg_stat_statements&lt;/code&gt; will keep track of time spent planning if you enable the &lt;a href=&quot;https://www.postgresql.org/docs/13/pgstatstatements.html#id-1.11.7.38.8&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pg_stat_statements.track_planning&lt;/code&gt;&lt;/a&gt; setting:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-sql&quot;&gt;
&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; plans&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; total_plan_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
       min_plan_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max_plan_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mean_plan_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stddev_plan_time
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;   pg_stat_statements &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; queryid &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7012080368802260371&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;-[ RECORD 1 ]----+----------------------------------------------------------------------
query            | SELECT query, plans, total_plan_time,                                +
                 |        min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time+
                 | FROM   pg_stat_statements WHERE queryid = $1
plans            | 1
total_plan_time  | 0.083102
min_plan_time    | 0.083102
max_plan_time    | 0.083102
mean_plan_time   | 0.083102
stddev_plan_time | 0&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is turned off by default due to performance overhead for certain workloads, but if you suspect planning time is an issue, it's definitely worth checking out. For more details on the performance regression, see &lt;a href=&quot;https://www.postgresql.org/message-id/flat/2895b53b033c47ccb22972b589050dd9%40EX13D05UWC001.ant.amazon.com&quot;&gt;this mailing list discussion&lt;/a&gt;; this is expected to be resolved in the future and the default may change.&lt;/p&gt;
&lt;h2 id=&quot;usability&quot;&gt;Usability&lt;/h2&gt;
&lt;p&gt;Postgres 13 usability improvements include better documentation, better built-in UUID support, and some handy &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt; enhancements.&lt;/p&gt;
&lt;h3 id=&quot;glossary&quot;&gt;Glossary&lt;/h3&gt;
&lt;p&gt;TOAST? Tuple? Postmaster?&lt;/p&gt;
&lt;p&gt;Any complex system will develop its own jargon, and Postgres is no exception. Some of it comes from the database field in general, some of it is Postgres-specific. Having dedicated language to talk precisely about specific technical concepts is very useful, but it can be confusing for newcomers.&lt;/p&gt;
&lt;blockquote readability=&quot;9.3910256410256&quot;&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Tuple&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A collection of attributes in a fixed order. That order may be defined by the table (or other relation) where the tuple is contained, in which case the tuple is often called a row. It may also be defined by the structure of a result set, in which case it is sometimes called a record.&lt;/em&gt; - &lt;a href=&quot;https://www.postgresql.org/docs/13/glossary.html&quot;&gt;PostgreSQL Glossary&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You are likely familiar with the terms above, but if you ever run across something you are unclear on, those and many others are now documented &lt;a href=&quot;https://www.postgresql.org/docs/13/glossary.html&quot;&gt;in a new glossary&lt;/a&gt;. And now that there's an established place to do so, we can look forward to other technical terms being added here in the future.&lt;/p&gt;
&lt;h3 id=&quot;better-uuid-support&quot;&gt;Better UUID Support&lt;/h3&gt;
&lt;p&gt;If you use UUIDs in your system (and you should consider it—they're pretty handy), you're probably pretty familiar with the &lt;code class=&quot;language-text&quot;&gt;uuid-ossp&lt;/code&gt; extension. The base &lt;code class=&quot;language-text&quot;&gt;uuid&lt;/code&gt; type is built in, but by default, there's no simple mechanism to automaticly generate new ones. The &lt;code class=&quot;language-text&quot;&gt;uuid-ossp&lt;/code&gt; extension ships with Postgres, but must be enabled explicitly to create UUID-generation functions like the common &lt;code class=&quot;language-text&quot;&gt;uuid_generate_v4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Postgres 13 ships with a &lt;code class=&quot;language-text&quot;&gt;gen_random_uuid&lt;/code&gt; function that is equivalent to &lt;code class=&quot;language-text&quot;&gt;uuid_generate_v4&lt;/code&gt;, but available by default. If you were only using &lt;code class=&quot;language-text&quot;&gt;uuid-ossp&lt;/code&gt; for that function, you no longer need the extension:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;=&amp;gt; \dx
     List of installed extensions
 Name | Version | Schema | Description
------+---------+--------+-------------
(0 rows)

=&amp;gt; SELECT gen_random_uuid();
           gen_random_uuid
--------------------------------------
 07b45dae-e92e-4f91-8661-5fc0ef947d03
(1 row)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;psql-improvements&quot;&gt;psql Improvements&lt;/h3&gt;
&lt;p&gt;There are a number of small &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt; improvements in Postgres 13. My favorite is that &lt;code class=&quot;language-text&quot;&gt;\e&lt;/code&gt;, the command to invoke your &lt;code class=&quot;language-text&quot;&gt;$EDITOR&lt;/code&gt; on the current query buffer, will now display the query text when you save and exit (unless you directly submit it by ending with a semicolon or &lt;code class=&quot;language-text&quot;&gt;\g&lt;/code&gt;). Previously, the query text was saved, but hidden. Compare opening your editor and saving &lt;code class=&quot;language-text&quot;&gt;SELECT 1&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt; 11:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;maciek=# \e
maciek-# ;
 ?column? 
----------
        1
(1 row)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;versus &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt; 13:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-text&quot;&gt;
&lt;code class=&quot;language-text&quot;&gt;maciek=# \e
maciek=# select 1
maciek-# ;
 ?column? 
----------
        1
(1 row)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's now clear what query text will be submitted when you complete your query.&lt;/p&gt;
&lt;p&gt;Postgres 13 also includes additional ways to customize your &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt; prompt. You can do so, as always, with &lt;a href=&quot;https://www.postgresql.org/docs/13/app-psql.html#APP-PSQL-PROMPTING&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;\set&lt;/code&gt;&lt;/a&gt; (typically in your &lt;code class=&quot;language-text&quot;&gt;.psqlrc&lt;/code&gt;), but there's a couple of new substitutions available:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;%x&lt;/code&gt; will display the status of the current transaction: an empty string for no transaction, &lt;code class=&quot;language-text&quot;&gt;*&lt;/code&gt; when in an open transaction, &lt;code class=&quot;language-text&quot;&gt;!&lt;/code&gt; when in a failed transaction, or &lt;code class=&quot;language-text&quot;&gt;?&lt;/code&gt; when the transaction state is unknown (typically when there is no connection to the server)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;%w&lt;/code&gt; will pad &lt;code class=&quot;language-text&quot;&gt;PROMPT2&lt;/code&gt; (used when more input is expected) to be the same width as &lt;code class=&quot;language-text&quot;&gt;PROMPT1&lt;/code&gt; to keep things nicely aligned&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are &lt;a href=&quot;https://www.postgresql.org/docs/13/release-13.html#id-1.11.6.5.5.10.2&quot;&gt;some other small improvements&lt;/a&gt; as well. And these are all client-side changes, so they will also work if you are using a new &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt; with an older server!&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;These are just a few of the many small improvements that come with Postgres 13. There are many others, like partial TOAST decompression, trusted extensions (so you can enable them without being superuser), PL/pgSQL performance improvements, and more. You can check out the &lt;a href=&quot;https://www.postgresql.org/docs/13/release-13.html&quot;&gt;full release notes&lt;/a&gt; on the Postgres web site.&lt;/p&gt;
&lt;p&gt;We're very excited for this release. We already support monitoring Postgres 13 in &lt;a href=&quot;https://pganalyze.com&quot;&gt;pganalyze&lt;/a&gt;, and are already working on incorporating the new monitoring features directly into the product to give you better insights into your database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Share this article:&lt;/strong&gt; If you liked this article you might want to &lt;a href=&quot;https://twitter.com/intent/tweet?text=%22Lessons%20Learned%20from%20Running%20%23Postgres13%20-%20via%20%40pganalyze%3A%20Parallel%20VACUUM,%20improved%20WAL%20Usage%20Stats,%20Extended%20Statistics%20Improvements,%20and%20more%20--%3E%20https://pganalyze.com/blog/postgres13-better-performance-monitoring-usability&quot;&gt;tweet it to your peers&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 15:57:46 +0000</pubDate>
<dc:creator>lfittl</dc:creator>
<og:title>Lessons Learned from Running Postgres 13: Better Performance, Monitoring &amp; More</og:title>
<og:description>Learn about smaller indexes with B-Tree Deduplication, Extended Statistics Improvements, Parallel VACUUM, improved WAL Usage Stats in Postgres 13, and more.</og:description>
<og:type>article</og:type>
<og:url>https://pganalyze.com/blog/postgres13-better-performance-monitoring-usability</og:url>
<og:image>https://pganalyze.com/static/db527ece27e9a9180e61856b13a312a5/b1395/postgres13-better-performance-monitoring-usability_pganalyze.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://pganalyze.com/blog/postgres13-better-performance-monitoring-usability</dc:identifier>
</item>
<item>
<title>New Steve Jobs recordings from the &amp;#039;80s released</title>
<link>https://www.sfgate.com/tech/article/New-Steve-Jobs-recordings-from-the-80s-released-15572216.php</link>
<guid isPermaLink="true" >https://www.sfgate.com/tech/article/New-Steve-Jobs-recordings-from-the-80s-released-15572216.php</guid>
<description>&lt;div class=&quot;asset_gallery&quot; data-config-asset-position=&quot;1&quot; data-gid=&quot;gallery&quot;&gt;
&lt;div class=&quot;hst-resgallery-container non-grid static-frame&quot; data-id=&quot;article-gallery-15572216&quot; data-title=&quot;New Steve Jobs recordings from the '80s released&quot; data-gallery-mode=&quot;standard&quot;&gt;
&lt;div class=&quot;hst-resgallery-wedge&quot;&gt;
&lt;ul class=&quot;hst-resgallery non-grid&quot;&gt;&lt;li class=&quot;hst-resgalleryitem&quot; data-item-id=&quot;photo-19158138&quot; data-frame-index=&quot;0&quot;&gt;
&lt;div class=&quot;img-wrap landscape&quot;&gt;&lt;img class=&quot;landscape&quot; src=&quot;https://s.hdnux.com/photos/01/11/05/21/19158138/5/920x920.jpg&quot; data-lazy-state=&quot;loaded&quot; alt=&quot;Steve Jobs, CEO of Apple Computer unveils a new titanium G4 Powerbook with a 15.2 inch screen during his keynote address at the MacWorld Expo in San Francisco,California, in this 09 January 2001 file photo. Photo: John G. Mabanglo / AFP / Getty Images 2001&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;caption&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;caption-full&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;Steve Jobs, CEO of Apple Computer unveils a new titanium G4 Powerbook with a 15.2 inch screen during his keynote address at the MacWorld Expo in San Francisco,California, in this 09 January 2001 file photo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;caption-truncated&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;Steve Jobs, CEO of Apple Computer unveils a new titanium G4 Powerbook with a 15.2 inch screen during his keynote address at the MacWorld Expo in San Francisco,California, in this 09 January 2001 file photo.&lt;/p&gt;
&lt;/div&gt;
 &lt;span class=&quot;credit&quot;&gt;Photo: John G. Mabanglo / AFP / Getty Images 2001&lt;/span&gt; &lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;

&lt;div class=&quot;control-panel&quot;&gt;&lt;span id=&quot;gallerySection&quot; data-gallery-section=&quot;&quot;/&gt;
&lt;div class=&quot;control-panel-inner&quot;&gt;

&lt;div class=&quot;control-bar&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;control-bar-left&quot; readability=&quot;7&quot;&gt;
&lt;p&gt; &lt;span class=&quot;credit&quot;&gt;Photo: John G. Mabanglo / AFP / Getty Images 2001&lt;/span&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;control-bar-right&quot;&gt;
&lt;div class=&quot;slide-count&quot;&gt;
&lt;p&gt;Image &lt;span class=&quot;item-count-current&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nav-stats-of&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nav-stats-slash&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;item-count-total&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;captionlink fade&quot;&gt;
&lt;p class=&quot;open&quot;&gt;Caption&lt;/p&gt;
&lt;p class=&quot;close&quot;&gt;Close&lt;/p&gt;
&lt;/div&gt;





&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;caption&quot;&gt;
&lt;div class=&quot;slide-count&quot;&gt;
&lt;p&gt;&lt;span class=&quot;label&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;item-count-current&quot;&gt;1&lt;/span&gt; &lt;span&gt;of&lt;/span&gt; &lt;span class=&quot;item-count-total&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;caption-remote&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;caption-full&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;Steve Jobs, CEO of Apple Computer unveils a new titanium G4 Powerbook with a 15.2 inch screen during his keynote address at the MacWorld Expo in San Francisco,California, in this 09 January 2001 file photo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;caption-truncated&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;Steve Jobs, CEO of Apple Computer unveils a new titanium G4 Powerbook with a 15.2 inch screen during his keynote address at the MacWorld Expo in San Francisco,California, in this 09 January 2001 file photo.&lt;/p&gt;
&lt;/div&gt;
 &lt;span class=&quot;credit&quot;&gt;Photo: John G. Mabanglo / AFP / Getty Images 2001&lt;/span&gt; &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;gallery-overlay-outer gallery-overlay-outter lights-on hidden&quot;&gt;
&lt;div class=&quot;gallery-overlay-inner&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;gallery-overlay-title-container&quot; readability=&quot;7&quot;&gt;

&lt;p&gt;New Steve Jobs recordings from the '80s released&lt;/p&gt;

&lt;div class=&quot;thumbs-close-overlay hdn-analytics&quot; data-hdn-analytics=&quot;gallery_thumbs_close|article-gallery-15572216|article-gallery-15572216|0&quot;&gt;
&lt;p&gt;Back to Gallery&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Steve Jobs is now known for revolutionizing just about every part of the tech world, but back in 1988, he was perhaps best known for getting fired.&lt;/p&gt;
&lt;p&gt;In his first product reveal since his dismissal from Apple in 1985, Jobs unveiled a new project called NeXT at a meeting of the Boston Computer Society. An audio recording of the event was unearthed and released as part of a trove of early tech recordings released by Charles Mann, as reported in an extensive feature by &lt;a href=&quot;https://www.fastcompany.com/90541084/this-unheard-steve-jobs-tape-is-part-of-an-amazing-trove-of-tech-history&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fast Company&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jobs begins the 90 minute speech by bemoaning the peaking technological limits of Apple and PC computers, and positioning NeXT as a leader in a &quot;fourth wave&quot; of computing, with a focus on creating a machine with more input from academic audiences that is &quot;not just a technological tool, but also a partner in thought.&quot;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;RELATED:&lt;/strong&gt; &lt;a href=&quot;https://www.sfgate.com/bayarea/article/Apple-employees-return-to-offices-2021-15449516.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apple announces remote work until 2021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Computing advances included a UNIX operating system that allows multi-tasking, a one million pixel display, CD quality sound and a then unprecedented 256 MB of storage. The computer would be completely built by robots rather than a human assembly line, which he said resulted in a defect rate 10 times lower than its competitors. The partnership with academia makes even more sense once you consider the price-tag of $6,500.&lt;/p&gt;

&lt;p&gt;The audio is currently available on &lt;a href=&quot;https://soundcloud.com/user-626311220&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Soundcloud&lt;/a&gt; as part of a historical text audio compilation called &quot;&lt;a href=&quot;https://www.amazon.com/Powersharing-People-Computers-Complete-Digital/dp/1733832602&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The Powersharing Series,&lt;/a&gt;&quot; which also includes '80s recordings of luminaries like Alan Kay of Xerox, Tom Rattigan of Commodore's Amiga and another rare Jobs recording from 1982 alongside Apple co-founder Steve Wozniak.&lt;/p&gt;

&lt;p&gt;Although the computer features Jobs describes now sound quaint, some of the underlying philosophies that he presents as inspiration seem just as prescient today.&lt;/p&gt;
&lt;p&gt;&quot;If you want to make a revolution, you've got to raise the lowest common denominator in every single machine,&quot; says Jobs, describing how designers create programs to run on entry level computers and that consumers won't pay extra for accessories. &quot;You can not use features that are not built into every computer.&quot;&lt;/p&gt;
&lt;p&gt;Read the full story of the historical influence of &quot;The Powersharing Series&quot; at &lt;a href=&quot;https://www.fastcompany.com/90541084/this-unheard-steve-jobs-tape-is-part-of-an-amazing-trove-of-tech-history&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fast Company&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Dan Gentile is the culture editor at SFGATE. Email: Dan.Gentile@sfgate.com | Twitter: &lt;a href=&quot;https://twitter.com/Dannosphere&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@Dannosphere&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 15:25:30 +0000</pubDate>
<dc:creator>mindcrime</dc:creator>
<og:title>New Steve Jobs recordings from the '80s released</og:title>
<og:description>Steve Jobs is now known for revolutionizing just about every part of the tech world, but back in 1988, he was perhaps best known for getting fired. In his first product reveal since his dismissal from Apple in 1985, Jobs unveiled a new project called NeXT at a meeting of the Boston Computer Society. An audio recording of the event was unearthed and released as part of a trove of early tech recordings released by Charles Mann, as reported in an extensive feature by Fast Company.</og:description>
<og:type>article</og:type>
<og:url>https://www.sfgate.com/tech/article/New-Steve-Jobs-recordings-from-the-80s-released-15572216.php</og:url>
<og:image>https://s.hdnux.com/photos/01/11/05/21/19158138/5/rawImage.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sfgate.com/tech/article/New-Steve-Jobs-recordings-from-the-80s-released-15572216.php</dc:identifier>
</item>
<item>
<title>I asked an online tracking company for all of my data (2018)</title>
<link>https://privacyinternational.org/long-read/2433/i-asked-online-tracking-company-all-my-data-and-heres-what-i-found</link>
<guid isPermaLink="true" >https://privacyinternational.org/long-read/2433/i-asked-online-tracking-company-all-my-data-and-heres-what-i-found</guid>
<description>
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;In fact, Quantcast’s deceptive design is so effective, that the company&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://www.quantcast.com/about-us/press/press-release/quantcast-choice-powers-one-billion-consumer-consent-choices/&quot;&gt;proudly declares that it achieves a 90 percent consent rate&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;on websites that use its framework.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Data brokers and the hidden data ecosystem&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;The fact that countless companies are tracking millions of people around the web and on their phones is disturbing enough, but what is even more disturbing about my Quantcast data is the extent to which the company relies on data brokers, credit referencing agencies, and even credit card companies in ways that are impossible for the average consumer to know about or escape.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Advertising companies and data brokers have been quietly collecting, analysing, trading, and selling data on people for decades. What has changed is the granularity and invasiveness at which this is possible.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Data brokers buy your personal data from companies you do business with; collect data such as web browsing histories from a range of sources; combine it with other information about you (such as magazine subscriptions, public government records, or purchasing histories); and sell their insights to anyone that wants to know more about you.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Even though these companies are on the whole non-consumer facing and hardly household names, the size of their data operations is astounding.&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://s22.q4cdn.com/928934522/files/doc_financials/annual_reports/Annual-Report-2017-(Web-ready).pdf&quot;&gt;Acxiom’s Annual report of 2017&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;, for instance, states that they offer data “on approximately 700 million consumers worldwide, and our data products contain over 5,000 data elements from hundreds of sources.”&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Part of the problem is that this data can be used to&lt;/span&gt; target, influence, and manipulate each and every one of us ever more precisely. How precisely? A few years ago, an advertising company from Massachusetts in the US targeted “abortion-minded women” with anti-abortion messages while there were in hospital. Laws in the US are very different from what is legal in the EU, yet the example shows what it technically possible: to target very precise groups of people, at particular times and particular places. This is the reality of what targeted advertisement looks like today.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;While uncannily accurate data can be used against us, inaccurate data is no less harmful, especially when data that most of us don’t even know exists and have very little control over is used to make decisions about us. &lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://bigbrotherwatch.org.uk/2018/04/a-closer-look-at-experian-big-data-and-artificial-intelligence-in-durham-police/&quot;&gt;An investigation by Big Brother Watch in the UK&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;, for instance, showed how Durham Police in the UK were feeding Experian’s Mosaic marketing data into their ‘Harm Assessment Risk Tool’, to predict whether a suspect might be at low, medium or high risk of reoffending in order to guide decisions as to whether a suspect should be charged or released onto a rehabilitation program. Durham Police is not the only police force in England and Wales that uses Mosaic service. Cambridgeshire Constabulary, and Lancashire Police are listed as having contracts with Experian for Mosaic.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;How Privacy International is challenging the hidden data industry&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;If you have been following the Cambridge Analytics and Facebook scandals over the past few months, you might get the impression that privacy scandals are about &lt;span&gt;bad actors misusing well-intended platforms during major elections, who are guilt of responding too slowly. Our interpretation has always been that we are faced with a much more systemic problem that lies at the very core of the current ways in which advertisers, marketers, and many other exploit people’s data.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;The European General Data Protection Regulation, which entered into force on May 25, 2018&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;strengthens rights of individuals with regard to the protection of their data, imposes more stringent obligations on those processing personal data, and provides for stronger regulatory enforcement powers.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;That’s why Privacy International has filed &lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://privacyinternational.org/press-release/2424/privacy-international-files-complaints-against-seven-companies-wide-scale-and&quot;&gt;complaints&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; against seven data brokers (Acxiom, Oracle), ad-tech companies (Criteo, Quantcast, Tapad), and credit referencing agencies (Equifax, Experian) with data protection authorities in France, Ireland, and the UK.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;These companies do not comply with the Data Protection Principles, namely the principles of transparency, fairness, lawfulness, purpose limitation, data minimisation, and accuracy. They also do not have a legal basis for the way they use people's data, in breach of GDPR.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;The world is being rebuilt by companies and governments so that they can exploit data. Without urgent and continuous action, data will be used in ways that people cannot now even imagine, to define and manipulate our lives without us being to understand why or being able to effectively fight back. We urge the data protection authorities to investigate these companies and to protect individuals from the mass exploitation of their data, and we encourage journalists, academics, consumer organisations, and civil society more broadly, to further hold these industries to account.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This piece was written by PI's Data Exploitation Programme Lead Frederike Kaltheuner&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 13:44:26 +0000</pubDate>
<dc:creator>weare138</dc:creator>
<og:url>http://privacyinternational.org/long-read/2433/i-asked-online-tracking-company-all-my-data-and-heres-what-i-found</og:url>
<og:title>I asked an online tracking company for all of my data and here's what I found</og:title>
<og:description>It’s 15:10 pm on April 18, 2018. I’m in the Privacy International office, reading a news story on the use of facial recognition in Thailand. On April 20, at 21:10, I clicked on a CNN Money Exclusive on my phone.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://privacyinternational.org/long-read/2433/i-asked-online-tracking-company-all-my-data-and-heres-what-i-found</dc:identifier>
</item>
<item>
<title>Microsoft to acquire ZeniMax Media and Bethesda Softworks for $7.5B</title>
<link>https://bethesda.net/en/article/1iLtcvwY6Nb1GeKADyDUEX/why-microsoft-is-the-perfect-fit</link>
<guid isPermaLink="true" >https://bethesda.net/en/article/1iLtcvwY6Nb1GeKADyDUEX/why-microsoft-is-the-perfect-fit</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://bethesda.net/en/article/1iLtcvwY6Nb1GeKADyDUEX/why-microsoft-is-the-perfect-fit&quot;&gt;https://bethesda.net/en/article/1iLtcvwY6Nb1GeKADyDUEX/why-microsoft-is-the-perfect-fit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=24543121&quot;&gt;https://news.ycombinator.com/item?id=24543121&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 989&lt;/p&gt;
&lt;p&gt;# Comments: 661&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 13:29:17 +0000</pubDate>
<dc:creator>MaximumMadness</dc:creator>
<og:type>article</og:type>
<og:description>Today we announced we’re joining the Microsoft family...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://bethesda.net/en/article/1iLtcvwY6Nb1GeKADyDUEX/nojs.html</dc:identifier>
</item>
<item>
<title>Why are Amnesty International monitors not able to observe the Assange hearing?</title>
<link>https://www.amnesty.org/en/latest/news/2020/09/why-are-amnesty-international-monitors-not-able-to-observe-the-assange-hearing/</link>
<guid isPermaLink="true" >https://www.amnesty.org/en/latest/news/2020/09/why-are-amnesty-international-monitors-not-able-to-observe-the-assange-hearing/</guid>
<description>&lt;p&gt;Earlier this month, the street outside the Old Bailey criminal court in London, where Julian Assange’s extradition hearing has been taking place, was transformed into a carnival.&lt;/p&gt;
&lt;p&gt;Inside the Old Bailey, the courtroom has turned into a circus. There have been multiple technical difficulties, a COVID-19 scare which temporarily halted proceedings and numerous procedural irregularities including the decision by the presiding judge to withdraw permission for Amnesty International’s fair trial observer to have access to the courtroom.&lt;/p&gt;
&lt;blockquote data-scenario=&quot;quote_text&quot; class=&quot;quote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;If the outside was a carnival, the inside of the court soon became a circus&lt;/p&gt;
&lt;footer data-scenario=&quot;quote_author&quot; class=&quot;quote__source&quot;&gt;Stefan Simanowitz, Amnesty International&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;Arriving at the court each morning was an assault to the senses with the noise of samba bands, sound systems and chanting crowds and the sight of banners, balloons and billboards at every turn.&lt;/p&gt;
&lt;p&gt;The first day of the hearing, which started on Monday 7 September, drew more than two hundred people to gather outside the court. People in fancy dress mingled with camera crews, journalists and a pack of hungry photographers who would disappear regularly to give chase to any white security van heading towards the court, pressing their long lenses against the darkened windows.&lt;/p&gt;
&lt;p&gt;One of the vans had come from Belmarsh high security prison, Julian Assange’s home for the last 16 months.&lt;/p&gt;
&lt;p&gt;The Wikileaks founder was in court for the resumption of proceedings that will ultimately decide on the Trump administration’s request for his extradition to the US. The American prosecutors claim he conspired with whistleblowers (army intelligence analyst Chelsea Manning) to obtain classified information. They want him to stand trial on espionage charges in the US where he would face a prison sentence of up to 175 years.&lt;/p&gt;
&lt;p&gt;Assange’s lawyers began with a request that the alleged evidence in a new indictment handed down in June be excluded from consideration given that it came so late. The Judge denied this. In the afternoon session, the lawyers requested an adjournment until next year to give his lawyers time to respond to the US prosecutor’s new indictment. They said they had been given insufficient time to examine the new allegations, especially since they had only “limited access” to the imprisoned Assange. Indeed, this most recent hearing was the first time in more than six months that Julian Assange had been able to meet with his lawyers. The judge rejected this request.&lt;/p&gt;
&lt;blockquote data-scenario=&quot;quote_text&quot; class=&quot;quote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;We requested access to the court for a trial monitor to observe the hearings, but the court denied us a designated seat in court&lt;/p&gt;
&lt;footer data-scenario=&quot;quote_author&quot; class=&quot;quote__source&quot;&gt;Stefan Simanowitz, Amnesty International&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;Reacting to the decision, Kristinn Hrafnsson the editor-in-chief of Wikileaks told me that: “the decision is an insult to the UK courts and to &lt;a href=&quot;https://twitter.com/hashtag/JulianAssange?src=hashtag_click&quot;&gt;Julian Assange&lt;/a&gt; and to justice. For the court to deny the request to adjourn is denying &lt;a href=&quot;https://twitter.com/hashtag/Assange?src=hashtag_click&quot;&gt;Assange&lt;/a&gt; his rights.”&lt;/p&gt;
&lt;p&gt;Amnesty International had requested access to the court for a trial monitor to observe the hearings, but the court denied us a designated seat in court. Our monitor initially did get permission to access the technology to monitor remotely, but the morning the hearing started he received an email informing us that the Judge had revoked Amnesty International’s remote access.&lt;/p&gt;
&lt;p&gt;We applied again for access to the proceedings on Tuesday 8 September, setting out the importance of monitoring and Amnesty International’s vast experience of observing trials in even some of the most repressive countries.&lt;/p&gt;
&lt;p&gt;The judge wrote back expressing her &quot;regret&quot; at her decision and saying: “I fully recognise that justice should be administered in public&quot;. Despite her regret and her recognition that scrutiny is a vital component of open justice, the judge did not change her mind.&lt;/p&gt;
&lt;p&gt;If Amnesty International and other observers wanted to attend the hearing, they would have to queue for one of the four seats available in a public gallery. We submitted a third application to gain direct access to the overflow room at the court where some media view the livestream, but this has also been denied.&lt;/p&gt;
&lt;blockquote data-scenario=&quot;quote_text&quot; class=&quot;quote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Amnesty International have monitored trials from Guantanamo Bay to Bahrain, Ecuador to Turkey. For our observer to be denied access profoundly undermines open justice&lt;/p&gt;
&lt;footer data-scenario=&quot;quote_author&quot; class=&quot;quote__source&quot;&gt;Stefan Simanowitz, Amnesty International&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;The refusal of the judge to not to give any &quot;special provision&quot; to expert fair trial monitors is very disturbing. Through its refusal, the court has failed to recognize a key component of open justice: namely how international trial observers monitor a hearing for its compliance with domestic and international law. They are there to evaluate the fairness of a trial by providing an impartial record of what went on in the courtroom and to advance fair trial standards by putting all parties on notice that they are under scrutiny.&lt;/p&gt;
&lt;p&gt;Amnesty International have monitored trials from Guantanamo Bay to Bahrain, Ecuador to Turkey. For our observer to be denied access profoundly undermines open justice.&lt;/p&gt;
&lt;p&gt;In the court, the overflow room has experienced ongoing technical problems with sound and video quality. More than a week after the proceedings began, these basic technical difficulties have not been properly ironed out and large sections of witness evidence are inaudible. These technological difficulties were not restricted to the overflow room. In court, some witnesses trying to “call into” the court room last week, were not able to get in. These basic technical difficulties have hampered the ability of those in the courtroom to follow the proceedings.&lt;/p&gt;
&lt;blockquote data-scenario=&quot;quote_text&quot; class=&quot;quote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;If Julian Assange is silenced, others will also be gagged either directly or by the fear of persecution and prosecution&lt;/p&gt;
&lt;footer data-scenario=&quot;quote_author&quot; class=&quot;quote__source&quot;&gt;Stefan Simanowitz, Amnesty International&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;We are still hopeful that a way can be found for our legal expert to monitor the hearing because the decision in this case is of huge importance. It goes to the heart of the fundamental tenets of media freedom that underpin the rights to freedom of expression and the public’s right to access information.&lt;/p&gt;
&lt;p&gt;The US government’s unrelenting pursuit of Julian Assange for having published disclosed documents is nothing short of a full-scale assault on the right to freedom of expression. The potential chilling effect on journalists and others who expose official wrongdoing by publishing information disclosed to them by credible sources could have a profound impact on the public's right to know what their government is up to.&lt;/p&gt;
&lt;p&gt;If Julian Assange is silenced, others will also be gagged either directly or by the fear of persecution and prosecution which will hang over a global media community already under assault in the US and in many other countries worldwide.&lt;/p&gt;
&lt;p&gt;The US Justice Department is not only charging a publisher who has a non-disclosure obligation but a publisher who is not a US citizen and not in America. The US government is behaving as if they have jurisdiction all over the world to pursue any person who receives and publishes information of government wrongdoing.&lt;/p&gt;
&lt;p&gt;If the UK extradites Assange, he would face prosecution in the USA on espionage charges that could send him to prison for the rest of his life – possibly in a facility reserved for the highest security detainees and subjected to the strictest of daily regimes, including prolonged solitary confinement. All for doing something news editors do the world over – publishing information provided by sources, that is in the interest of the wider public.&lt;/p&gt;
&lt;blockquote data-scenario=&quot;quote_text&quot; class=&quot;quote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;It is ironic that no one responsible for potential war crimes in Iraq &amp;amp; Afghanistan has been punished. Yet the publisher who exposed these potential crimes is the one in the dock&lt;/p&gt;
&lt;footer data-scenario=&quot;quote_author&quot; class=&quot;quote__source&quot;&gt;Stefan, Simanowitz, Amnesty International&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;Outside the court, I bumped into Eric Levy, aged 92. His interest in Assange’s case is personal. He was in Baghdad during the American “shock and awe” bombardment in 2003 having travelled to Iraq as part of the Human Shield Movement aiming to stop the war and – failing that - to protect the Iraqi population.&lt;/p&gt;
&lt;p&gt;“I’m here today for the same reason I was in Iraq. Because I believe in justice and I believe in peace,” he tells me. “Julian Assange is not really wanted for espionage. He is wanted for making America look like war criminals.”&lt;/p&gt;
&lt;p&gt;Indeed, it is ironic that no one responsible for possible war crimes in Iraq and Afghanistan has been prosecuted, let alone punished. And yet the publisher who exposed their crimes is the one in the dock facing a lifetime in jail.&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 12:08:42 +0000</pubDate>
<dc:creator>mlthoughts2018</dc:creator>
<og:url>https://www.amnesty.org/en/latest/news/2020/09/why-are-amnesty-international-monitors-not-able-to-observe-the-assange-hearing/</og:url>
<og:title>Why are Amnesty International monitors not able to observe the Assange hearing?</og:title>
<og:description>If Wikileaks founder, Julian Assange, is silenced, others will also be gagged either directly or by the fear of persecution and prosecution</og:description>
<og:image>https://www.amnesty.org:443/remote.axd/aineupstrmediaprd.blob.core.windows.net/media/20692/gettyimages-685316970.jpg?preset=fixed_1200_630</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.amnesty.org/en/latest/news/2020/09/why-are-amnesty-international-monitors-not-able-to-observe-the-assange-hearing/</dc:identifier>
</item>
<item>
<title>Moving your SSH port isn’t security by obscurity</title>
<link>https://danielmiessler.com/blog/no-moving-your-ssh-port-isnt-security-by-obscurity/</link>
<guid isPermaLink="true" >https://danielmiessler.com/blog/no-moving-your-ssh-port-isnt-security-by-obscurity/</guid>
<description>&lt;p&gt;&lt;img loading=&quot;lazy&quot; title=&quot;predator cloak&quot; src=&quot;https://danielmiessler.com/images/predator-cloak-1024x550.png&quot; alt=&quot;predator cloak&quot; width=&quot;1024&quot; height=&quot;550&quot; class=&quot;aligncenter size-large wp-image-133636&quot; srcset=&quot;https://danielmiessler.com/images/predator-cloak-1024x550.png 1024w, https://danielmiessler.com/images/predator-cloak-300x161.png 300w, https://danielmiessler.com/images/predator-cloak-768x413.png 768w, https://danielmiessler.com/images/predator-cloak.png 1076w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I just came across &lt;a href=&quot;https://adayinthelifeof.nl/2012/03/12/why-putting-ssh-on-another-port-than-22-is-bad-idea/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;another post on Hacker News&lt;/a&gt; talking about why you shouldn’t move your SSH port off of 22 because it’s Security by Obscurity.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;There are some good reasons not to move SSH ports in certain environments, such as usability.&lt;/p&gt;
&lt;p&gt;People absolutely love to invoke the “Security by Obscurity” boogeyman, and it makes them feel super smart when they do. It’s a conversation ender.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Oh man, that’s nothing but Security by Obscurity… (Ryu Fireball)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(The victim covers their face, packs, and leaves town)&lt;/p&gt;
&lt;p&gt;It’s true that Security by Obscurity is bad; the problem is many people have no idea when it applies. Including most of the people being loudest about it. Let me tell you the secret to this debate that will permanently solve it for you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Security by Obscurity is when you hide how a security measure works, not when you keep some part of it a secret.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let me repeat that a few different ways, with examples.&lt;/p&gt;
&lt;p&gt;Certain types of security controls (like encryption) have two components: the mechanism, and the key. In encryption, the mechanism is the algorithm, and the key is, well…the key.&lt;/p&gt;
&lt;p class=&quot;callout&quot;&gt;The question is whether you’re hiding the mechanism or the key.&lt;/p&gt;
&lt;p&gt;If you hide how the algorithm works, you’re using Security by Obscurity. And that’s bad. We all agree there. But how about these examples?&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;These are all well-known by attacker and defender.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Frequency hopping on a radio system to avoid eavesdropping&lt;/li&gt;
&lt;li&gt;A dead-drop mechanism used by spies to exchange notes and packages&lt;/li&gt;
&lt;li&gt;The use of camouflage on tanks and planes in war&lt;/li&gt;
&lt;li&gt;The use of decoy limos for heads of state in dangerous areas&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In all those cases we have something that’s being hidden. We’re hiding the frequency we’re using. We’re hiding the location of the dead-drop. We’re hiding the location of the tank in the desert by making it look like sand. And we’re hiding which limo the President is actually in so it’ll be harder to attack him.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;It’s confusing because obscure and hide are very similar.&lt;/p&gt;
&lt;p&gt;Is that Obscurity?&lt;/p&gt;
&lt;p&gt;No. It’s not. And here’s why. &lt;em&gt;Nobody is hiding the mechanism.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;callout&quot;&gt;Even if your enemy knows you’re camouflaged somewhere in the dessert all their work is still ahead of them.&lt;/p&gt;
&lt;p&gt;Everyone knows what’s going on. Everyone knows that the tank is &lt;strong&gt;somewhere&lt;/strong&gt; in the desert, they just can’t see it to shoot it. Everyone knows the President is in one of those three helicopters, but it’s way more dangerous and expensive to guess which one and fire. And with the dead-drop, you know the package is somewhere in Central Park, but you don’t know where.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;Increasing attacker effort is invaluable.&lt;/p&gt;
&lt;p&gt;Importantly, it’s very expensive to take the time to check all the places the target could be. For a package. For a President. For a camouflaged tank.&lt;/p&gt;
&lt;p&gt;And yes—for an SSH port.&lt;/p&gt;
&lt;p&gt;It’s fine that people know you changed your SSH port. But now they have to scan all the ports and find the new one. Sure, that’s not too difficult, but many people are actually going to do that? Not many, because it’s costly in terms of time and effort.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;I did an experiment one weekend and got ~10,000 probes on port 22 and 4 on some random high port.&lt;/p&gt;
&lt;p&gt;In short, you just made it harder for the enemy to successfully attack you by giving them a resource problem. Sure, they can check under every rock in Central Park and eventually find the package, but you’ll be done with the mission by then.&lt;/p&gt;
&lt;p&gt;Obscurity doesn’t apply if people know the mechanism you’re using and they simply have a resource problem. Having a known defense but a hidden key is a well-established part of good security, and it has been for millennia.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Yes, Security by Obscurity is bad.&lt;/li&gt;
&lt;li&gt;But most people don’t know what it actually is.&lt;/li&gt;
&lt;li&gt;It’s where you keep the &lt;em&gt;mechanism&lt;/em&gt; secret, not the key.&lt;/li&gt;
&lt;li&gt;As long as you have a good key, it’s ok for people to know the mechanism.&lt;/li&gt;
&lt;li&gt;Don’t let people term-shame you who don’t grasp the underlying concepts.&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Notes&lt;/h3&gt;
&lt;ol class=&quot;note&quot;&gt;&lt;li&gt;The door and key example can get a bit confusing when you poorly secure your actual key. So a good lock, with the key secure in your pocket is not Security by Obscurity. But if you have a plant next to the door, and you keep the key under that plant, well…you’ve now made it easy to get the key, which is a different kind of stupid. It’s not Security by Obscurity technically (because you’re not hiding the mechanism), but it’s still dumb. It’s like using RSA-Bruce-Lee-5000 but leaving your private key lying around where people can get access to it. It’s not a bad algorithm, it’s bad key management. Literally.&lt;/li&gt;
&lt;li&gt;Changing an SSH port is a lot like a dead-drop or camouflage. It’s not good security by itself. The tank still needs armor. The message should still be encrypted. But it’s a layer.&lt;/li&gt;
&lt;li&gt;I have a more in-depth video explainer of this on YouTube. &lt;a href=&quot;https://www.youtube.com/watch?v=V2X0twHBGqE&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Moving ports also makes your logs a lot cleaner, if you’re into that type of thing.&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Mon, 21 Sep 2020 11:33:46 +0000</pubDate>
<dc:creator>gempir</dc:creator>
<og:type>article</og:type>
<og:title>No, Moving Your SSH Port Isn't Security by Obscurity | Daniel Miessler</og:title>
<og:description>I just came across another post on Hacker News talking about why you shouldn't move your SSH port off of 22 because it's Security by Obscurity. There are</og:description>
<og:url>https://danielmiessler.com/blog/no-moving-your-ssh-port-isnt-security-by-obscurity/</og:url>
<og:image>https://danielmiessler.com/images/predator-cloak-1024x550.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://danielmiessler.com/blog/no-moving-your-ssh-port-isnt-security-by-obscurity/</dc:identifier>
</item>
<item>
<title>I no longer build software</title>
<link>https://github.com/docker/cli/issues/267#issuecomment-695149477</link>
<guid isPermaLink="true" >https://github.com/docker/cli/issues/267#issuecomment-695149477</guid>
<description>&lt;p&gt;&lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/ebd2/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/ebd2&quot;&gt;@ebd2&lt;/a&gt; to clarify your request, and to help future readers find the option to push all tags, would you please update the title and issue body to show you'd like to push a subset of tags for an image repository? For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;Allow `docker push' to push &lt;del&gt;multiple&lt;/del&gt; &lt;em&gt;a subset of&lt;/em&gt; tags&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;&lt;p&gt;I'm trying to automate pushing of Docker images to Docker hub and to GitHub's package registry, and I'd like the latest release in a series to be reachable a couple different ways. For example when I first publish a new release with tag &lt;code&gt;:2.165.2&lt;/code&gt; I want these to be equivalent:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;docker pull solvaholic/actions-runner:2.165.2
docker pull solvaholic/actions-runner:2
docker pull solvaholic/actions-runner:latest
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So I want to push those three tags all at once. Looking for a way to do that led me to this issue, where I was reminded how to achieve it:&lt;/p&gt;
&lt;p&gt;From &lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/AntonKrug/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/AntonKrug&quot;&gt;@AntonKrug&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Ignoring the performance, the options either to push image with all tags or single tag seems bit odd.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/msbenjamin12/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/msbenjamin12&quot;&gt;@msbenjamin12&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;I solved the problem by the following:&lt;br/&gt;docker push [REPOSITORY]&lt;/p&gt;
&lt;p&gt;example:&lt;br/&gt;localhost:5000/someRepo:tag1&lt;br/&gt;localhost:5000/someRepo:tag2&lt;br/&gt;localhost:5000/someRepo:tag3&lt;/p&gt;
&lt;p&gt;The following will push all the above example images to the REPOSITORY&lt;br/&gt;docker push localhost:5000/someRepo&lt;/p&gt;
&lt;p&gt;As a result tag1, tag2, and tag3 will be pushed to the REPO &quot;localhost:5000/someRepo&quot; recursively.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and &lt;a class=&quot;user-mention&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/superstator/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/superstator&quot;&gt;@superstator&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;No, that pushes ALL tags for a repository. For us at least we want to be able to push multiple specific tags, but not just blanket push the entire repo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For me the solution is to manage my image tags such that this syntax will push all, and only, the tags I'd like to push:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;docker push [registry/]owner/repository
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;docker push&lt;/code&gt; already knows how to push one or all local tags for a repository. The request in this issue is to be able to push &lt;em&gt;some&lt;/em&gt; tags for a repository.&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 11:06:12 +0000</pubDate>
<dc:creator>tagawa</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/5429470?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>Allow `docker push' to push multiple/a subset of tags · Issue #267 · docker/cli</og:title>
<og:url>https://github.com/docker/cli/issues/267</og:url>
<og:description>Allow the following usage: docker push org/image-a:some_tag org/image-b:other_tag This would make docker push simpler to use in systems that need to build and push multiple images to dockerhub by o...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/docker/cli/issues/267</dc:identifier>
</item>
<item>
<title>We need young programmers; We need old programmers</title>
<link>https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/</link>
<guid isPermaLink="true" >https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/</guid>
<description>&lt;p&gt;&lt;em&gt;The software industry loves young people, but old-timers serve an important purpose, too.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Our culture idolises youth. There's several reasons for this, I believe. Youth seems synonymous with vigour, strength, beauty, and many other desirable qualities. The cynical perspective is that young people, while rebellious, also tend to be easy to manipulate, if you know which buttons to push. A middle-aged man like me isn't susceptible to the argument that I should buy a particular pair of Nike shoes because they're named after Michael Jordan, but for a while, one pair wasn't enough for my teenage daughter.&lt;/p&gt;
&lt;p&gt;In intellectual pursuits (like software development), youth is often extolled as the source of innovation. You're often confronted with examples like that of &lt;a href=&quot;https://en.wikipedia.org/wiki/%C3%89variste_Galois&quot;&gt;Évariste Galois&lt;/a&gt;, who made all his discoveries before turning 21. &lt;a href=&quot;https://en.wikipedia.org/wiki/Ada_Lovelace&quot;&gt;Ada Lovelace&lt;/a&gt; was around 28 years when she produced what is considered the 'first computer program'. &lt;a href=&quot;https://en.wikipedia.org/wiki/Alan_Turing&quot;&gt;Alan Turing&lt;/a&gt; was 24 when he wrote &lt;a href=&quot;https://en.wikipedia.org/wiki/Turing%27s_proof&quot;&gt;On Computable Numbers, with an Application to the Entscheidungsproblem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Clearly, young age is no detriment to making ground-breaking contributions. It has even become folklore that everyone past the age of 35 is a has-been whose only chance at academic influence is to write a textbook.&lt;/p&gt;
&lt;h3 id=&quot;800321a74c054ea0b75815c86f4ce18d&quot;&gt;The story of the five monkeys &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#800321a74c054ea0b75815c86f4ce18d&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You may have seen a story called &lt;em&gt;the five monkeys experiment&lt;/em&gt;. It's most likely a fabrication, but it goes like this:&lt;/p&gt;
&lt;p&gt;A group of scientists placed five monkeys in a cage, and in the middle, a ladder with bananas on the top. Every time a monkey went up the ladder, the scientists soaked the rest of the monkeys with cold water. After a while, every time a monkey went up the ladder, the others would beat it up.&lt;/p&gt;
&lt;p&gt;After some time, none of the monkeys dared go up the ladder regardless of the temptation. The scientists then substituted one of the monkeys with a new one, who'd immediately go for the bananas, only to be beaten up by the others. After several beatings, the new member learned not to climb the ladder even though it never knew why.&lt;/p&gt;
&lt;p&gt;A second monkey was substituted and the same occurred. The first monkey participated in beating the second. A third monkey was exchanged and the story repeated. The fourth was substituted and the beating was repeated. Finally the fifth monkey was replaced.&lt;/p&gt;
&lt;p&gt;Left was a group of five monkeys who, even though they never received a cold shower, continued to beat up any monkey who attempted to climb the ladder. If it was possible to ask the monkeys why they would beat up all who attempted to go up the ladder, the answer would probably be:&lt;/p&gt;
&lt;p&gt;&quot;That's how we do things here.&quot;&lt;/p&gt;
&lt;p&gt;While the story is probably just that: a story, it tells us something about the drag induced by age and experience. If you've been in the business for decades, you've seen numerous failed attempts at something you yourself tried when you were young. You know that it can't be done.&lt;/p&gt;
&lt;p&gt;Young people don't know that a thing can't be done. If they can avoid the monkey-beating, they'll attempt the impossible.&lt;/p&gt;
&lt;h3 id=&quot;4add8a9af0424d7e889d3125837ed611&quot;&gt;Changing circumstances &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#4add8a9af0424d7e889d3125837ed611&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is attempting the impossible a good idea?&lt;/p&gt;
&lt;p&gt;In general, no, because it's... impossible. There's a reason older people tell young people that a thing can't be done. It's not just because they're stodgy conservatives who abhor change. It's because they see the effort as wasteful. Perhaps they're even trying to be kind, guiding young people off a path where only toil and disappointment is to be found.&lt;/p&gt;
&lt;p&gt;What old people don't realise is that sometimes, circumstances change.&lt;/p&gt;
&lt;p&gt;What was impossible twenty years ago may not be impossible today. We see this happening in many fields. Producing a commercially viable electric car was impossible for decades, until, with the advances made in battery technology, it became possible.&lt;/p&gt;
&lt;p&gt;Technology changes rapidly in software development. People trying something previously impossible may find that it's possible today. Once, if you had lots of data, you had to store it in fully normalised form, because storage was expensive. For a decade, relational databases were the only game in town. Then circumstances changed. Storage became cheaper, and a new movement of NoSQL storage emerged. What was before impossible became possible.&lt;/p&gt;
&lt;p&gt;Older people often don't see the new opportunities, because they 'know' that some things are impossible. Young people push the envelope driven by a combination of zest and ignorance. Most fail, but a few succeed.&lt;/p&gt;
&lt;h3 id=&quot;4272a069588e47f796646bd282b9de02&quot;&gt;Lottery of the impossible &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#4272a069588e47f796646bd282b9de02&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I think of this process as a lottery. Imagine that every impossible thing is a red ball in an urn. Every young person who tries the impossible draws a random ball from the urn.&lt;/p&gt;
&lt;p&gt;The urn contains millions of red balls, but every now and then, one of them turns green. You don't know which one, but if you draw it, it represents something that was previously impossible which has now become possible.&lt;/p&gt;
&lt;p&gt;This process produces growth, because once discovered, the new and better way of doing things can improve society in general. Occasionally, the young discoverer may even gain some fame and fortune.&lt;/p&gt;
&lt;p&gt;It seems wasteful, though. Most people who attempt the impossible will reach the predictable conclusion. What was deemed impossible was, indeed, impossible.&lt;/p&gt;
&lt;p&gt;When I'm in a cynical mood, I don't think that it's youth in itself that is the source of progress. It's just the &lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_large_numbers&quot;&gt;law of large numbers&lt;/a&gt; applied. If there's a one in million chance that something will succeed, but ten million people attempt it, it's only a matter of time before one succeeds.&lt;/p&gt;
&lt;p&gt;Society at large can benefit from the success of the few, but ten million people still wasted their efforts.&lt;/p&gt;
&lt;h3 id=&quot;016744f0ea77495c958a7914f08187db&quot;&gt;We need the old, too &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#016744f0ea77495c958a7914f08187db&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you accept the argument that young people are more likely to try the impossible, we need the young people. Do we need the old people?&lt;/p&gt;
&lt;p&gt;I'm turning fifty in 2020. You may consider that old, but I expect to work for many more years. I don't know if the software industry needs fifty-year-olds, but that's not the kind of old I have in mind. I'm thinking of people who have retired, or are close to retirement.&lt;/p&gt;
&lt;p&gt;In our youth-glorifying culture, we tend to dismiss the opinion and experiences of old people. &lt;em&gt;Oh, well, it's just a codgy old man&lt;/em&gt; (or woman), we'll say.&lt;/p&gt;
&lt;p&gt;We ignore the experience of the old, because we believe that they haven't been keeping up with times. Their experiences don't apply to us, because we live under new circumstance. Well, see above.&lt;/p&gt;
&lt;p&gt;I'm not advocating that we turn into a gerontocracy that venerates our elders solely because of their age. Again, according to the law of large numbers, some people live to old age. There need not be any correlation between survivors and wisdom.&lt;/p&gt;
&lt;p&gt;We need the old to tell us the truth, because they have little to lose.&lt;/p&gt;
&lt;h3 id=&quot;8b5c613ba6c44bb4b4e6dbba7ae7d19a&quot;&gt;Nothing to lose &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#8b5c613ba6c44bb4b4e6dbba7ae7d19a&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the last couple of years, I've noticed a trend. A book comes out, exposing the sad state of affairs in some organisation. This has happened regularly in Denmark, where I live. One book may expose the deplorable conditions of the Danish tax authorities, one may describe the situation in the ministry of defence, one criticises the groupthink associated with the climate crisis, and so on.&lt;/p&gt;
&lt;p&gt;Invariably, it turns out that the book is written by a professor emeritus or a retired department head.&lt;/p&gt;
&lt;p&gt;I don't think that these people, all of a sudden, had an epiphany after they retired. They knew all about the rot in the system they were part of, while they were part of it, but they've had too much to lose. You could argue that they should have said something before they retired, but that requires a moral backbone we can't expect most people to have.&lt;/p&gt;
&lt;p&gt;When people retire, the threat of getting fired disappears. Old people can speak freely to a degree most other people can't.&lt;/p&gt;
&lt;p&gt;Granted, many may simply use that freedom to spew bile or shout &lt;em&gt;Get off my lawn!&lt;/em&gt;, but many are in the unique position to reveal truths no-one else dare speak. Many are, perhaps, just bitter, but some may possess knowledge that they are in a unique position to reveal.&lt;/p&gt;
&lt;p&gt;When that grumpy old guy on Twitter writes something that makes you uncomfortable, consider this: he may still be right.&lt;/p&gt;
&lt;h3 id=&quot;2d64bd2c7ccb4b7ca2418802ed82689e&quot;&gt;Being unreasonable &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#2d64bd2c7ccb4b7ca2418802ed82689e&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In a way, you could say that we need young and old people for the same fundamental reason. Not all of them, but enough of them, are in a position to be unreasonable.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&quot;The reasonable man adapts himself to the world: the unreasonable one persists in trying to adapt the world to himself. Therefore all progress depends on the unreasonable man.&quot;&lt;/p&gt;
&lt;footer&gt;&lt;cite&gt;George Bernard Shaw&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
Young people and old people are unreasonable in each their own way, and we need both.
&lt;h3 id=&quot;df88f595ec814e2bafcbd018ff5f5ad2&quot;&gt;Conclusion &lt;a href=&quot;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/#df88f595ec814e2bafcbd018ff5f5ad2&quot; title=&quot;permalink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We need young people in the software development industry. Because of their vigour and inexperience, they'll push the envelope. Most will fail to do the impossible, but a few succeed.&lt;/p&gt;
&lt;p&gt;This may seem like a cynical view, but we've all been young, and most of us have been through such a phase. It's like a rite of passage, and even if you fail to make your mark on the world, you're still likely to have learned a lot.&lt;/p&gt;
&lt;p&gt;We need old people because they're in a position to speak truth to the world. Notice that I didn't make my argument about the &lt;em&gt;experience&lt;/em&gt; of old-timers. Actually, I find that valuable as well, but that's the ordinary argument: &lt;em&gt;Listen to old people, because they have experience and wisdom.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some of them do, at least.&lt;/p&gt;
&lt;p&gt;I didn't make much out of that argument, because you already know it. There'd be no reason to write this essay if that was all I had to say. Old people have less on the line, so they can speak more freely. If someone you used to admire retires and all of a sudden starts saying or writing unpleasant and surprising things, there might be a good explanation, and it might be a good idea to pay attention.&lt;/p&gt;
&lt;p&gt;Or maybe he or she is just bitter or going senile...&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 08:05:52 +0000</pubDate>
<dc:creator>mrcsharp</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/</dc:identifier>
</item>
<item>
<title>Domains for the Rest of Us</title>
<link>https://www.domainsfortherestofus.com/</link>
<guid isPermaLink="true" >https://www.domainsfortherestofus.com/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.domainsfortherestofus.com/&quot;&gt;https://www.domainsfortherestofus.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=24538758&quot;&gt;https://news.ycombinator.com/item?id=24538758&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 331&lt;/p&gt;
&lt;p&gt;# Comments: 189&lt;/p&gt;
</description>
<pubDate>Mon, 21 Sep 2020 00:55:22 +0000</pubDate>
<dc:creator>andreygrehov</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.domainsfortherestofus.com/</dc:identifier>
</item>
</channel>
</rss>