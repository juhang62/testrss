<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>COVID-19 Supply Chain Update</title>
<link>https://www.fda.gov/news-events/press-announcements/coronavirus-covid-19-supply-chain-update</link>
<guid isPermaLink="true" >https://www.fda.gov/news-events/press-announcements/coronavirus-covid-19-supply-chain-update</guid>
<description>&lt;div class=&quot;inset-column&quot;&gt;
&lt;dl class=&quot;lcds-description-list--grid&quot;&gt;&lt;dt class=&quot;cell-1_1&quot;&gt;For Immediate Release:&lt;/dt&gt;
&lt;dd class=&quot;cell-2_1&quot;&gt;&lt;time datetime=&quot;2020-02-28T00:40:00Z&quot;&gt;February 27, 2020&lt;/time&gt;&lt;/dd&gt;
&lt;dt class=&quot;cell-1_2&quot;&gt;Statement From:&lt;/dt&gt;
&lt;dd class=&quot;cell-2_2&quot;&gt;
&lt;div class=&quot;field field--name-field-person-entity field--type-entity-reference field--label-above&quot;&gt;
&lt;p&gt;Statement Author&lt;/p&gt;
&lt;div class=&quot;field--items&quot;&gt;
&lt;div class=&quot;field--item&quot;&gt;
&lt;div class=&quot;field field--name-field-leadership-role-2 field--type-entity-reference-revisions field--label-above&quot;&gt;
&lt;p&gt;Leadership Role&lt;/p&gt;
&lt;div class=&quot;field--items&quot;&gt;
&lt;div class=&quot;field--item&quot;&gt;
&lt;div class=&quot;views-element-container form-group&quot;&gt;
&lt;div class=&quot;view view-most-recent-leadership-role view-id-most_recent_leadership_role view-display-id-block_1 js-view-dom-id-414e81fd0d9dc0c7e3e74524f41f855abbcd74b0d42e22e66287154663f0b9fa&quot;&gt;
&lt;div class=&quot;view-content&quot;&gt;
&lt;div class=&quot;views-row&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;views-field views-field-field-leadership-role&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Commissioner of Food and Drugs - Food and Drug Administration&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Stephen M. Hahn M.D.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class=&quot;btn btn-default&quot; data-entity-substitution=&quot;canonical&quot; data-entity-type=&quot;node&quot; data-entity-uuid=&quot;a0d1551f-f28b-4f65-b517-d69b1785c175&quot; href=&quot;https://www.fda.gov/news-events/press-announcements/actualizacion-sobre-el-coronavirus-covid-19-y-la-cadena-de-suministro&quot; title=&quot;Actualización sobre el coronavirus (COVID-19) y la cadena de suministro&quot;&gt;Español&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As I have previously communicated, the FDA has been closely monitoring the supply chain with the expectation that the COVID-19 outbreak would likely impact the medical product supply chain, including potential disruptions to supply or shortages of critical medical products in the U.S.&lt;/p&gt;
&lt;p&gt;A manufacturer has alerted us to a shortage of a human drug that was recently added to the drug shortages list. The manufacturer just notified us that this shortage is related to a site affected by coronavirus. The shortage is due to an issue with manufacturing of an active pharmaceutical ingredient used in the drug. It is important to note that there are other alternatives that can be used by patients. We are working with the manufacturer as well as other manufacturers to mitigate the shortage. We will do everything possible to mitigate the shortage.&lt;/p&gt;
&lt;h2&gt;Additional Information on Human Drugs&lt;/h2&gt;
&lt;p&gt;Since January 24, the FDA has been in touch with more than 180 manufacturers of human drugs, not only to remind them of applicable legal requirements for notifying the FDA of any anticipated supply disruptions, but also asking them to evaluate their entire supply chain, including active pharmaceutical ingredients (the main ingredient in the drug and part that produces the intended effects, e.g., acetaminophen) and other components manufactured in China.&lt;/p&gt;
&lt;p&gt;Also, as part of our efforts, the FDA has identified about 20 other drugs, which solely source their active pharmaceutical ingredients or finished drug products from China. We have been in contact with those firms to assess whether they face any drug shortage risks due to the outbreak. None of these firms have reported any shortage to date. Also, these drugs are considered non-critical drugs.&lt;/p&gt;
&lt;p&gt;We will remain in contact with manufacturers so that we can continue to assist them with any potential issues in the fastest way.&lt;/p&gt;
&lt;h2&gt;Medical Devices&lt;/h2&gt;
&lt;p&gt;We are aware of 63 manufacturers which represent 72 facilities in China that produce essential medical devices; we have contacted all of them. Essential devices are those that may be prone to potential shortage if there is a supply disruption. We are aware that several of these facilities in China are adversely affected by COVID-19, citing workforce challenges, including the necessary quarantine of workers. While the FDA continues to assess whether manufacturing disruptions will affect overall market availability of these products, there are currently no reported shortages for these types of medical devices within the U.S. market.&lt;/p&gt;
&lt;p&gt;Regarding personal protective equipment—surgical gowns, gloves, masks, respirator protective devices, or other medical equipment designed to protect the wearer from injury or the spread of infection or illness—the FDA has heard reports of increased market demand and supply challenges for some of these products. However, the FDA is currently not aware of specific widespread shortages of medical devices, but we are aware of reports from CDC and other U.S. partners of increased ordering of a range of human medical products through distributors as some healthcare facilities in the U.S. are preparing for potential needs if the outbreak becomes severe.&lt;/p&gt;
&lt;p&gt;It is important to note that no law exists requiring medical device manufacturers to notify the FDA when they become aware of a circumstance, including discontinuation of a product, that could lead to a potential shortage, and manufacturers are not required to respond when the FDA requests information about potential supply chain disruption. As with prior emergencies, the FDA has taken proactive steps to establish and remain in contact with medical device manufacturers and others in the supply chain, including hospitals and group purchasing organizations. The agency also encourages manufacturers and healthcare facilities to report any supply disruptions to the device shortages mailbox, &lt;a href=&quot;mailto:deviceshortages@fda.hhs.gov&quot;&gt;deviceshortages@fda.hhs.gov&lt;/a&gt;. This mailbox is closely monitored and has proven to be a valuable surveillance resource to augment FDA efforts to detect and mitigate potential supply chain disruption.&lt;/p&gt;
&lt;h2&gt;Biologics and Blood Supply&lt;/h2&gt;
&lt;p&gt;The FDA is not aware of any cellular or gene therapies that are made in China for the U.S. market. There are no shortages of biologics to report at this time.&lt;/p&gt;
&lt;p&gt;The potential for transmission of COVID-19 by blood and blood components is unknown at this time; however, respiratory viruses, in general, are not known to be transmitted by blood transfusion. Further, there have been no reported cases of transfusion-transmitted COVID-19.&lt;/p&gt;
&lt;p&gt;The FDA has made information available to blood establishments and to establishments that manufacture human cells, tissues, or cellular or tissue-based products that may wish to consider additional donor screening measures in response to the COVID-19 outbreak.&lt;/p&gt;
&lt;h2&gt;Food&lt;/h2&gt;
&lt;p&gt;We are not aware of any reports at this time of human illnesses that suggest COVID-19 can be transmitted by food or food packaging. However, it is always important to follow &lt;a data-entity-substitution=&quot;canonical&quot; data-entity-type=&quot;node&quot; data-entity-uuid=&quot;6c09864e-7df7-4241-8a95-06404e655d03&quot; href=&quot;https://www.fda.gov/food/retail-food-industryregulatory-assistance-training/fda-employee-health-and-personal-hygiene-interactive-resource-disk&quot; title=&quot;FDA Employee Health and Personal Hygiene Interactive Resource Disk&quot;&gt;good hygiene&lt;/a&gt; practices (i.e., wash hands and surfaces often, separate raw meat from other foods, cook to the right temperature, and refrigerate foods promptly) when handling or preparing foods.&lt;/p&gt;
&lt;h2&gt;Animal Drugs&lt;/h2&gt;
&lt;p&gt;There are 32 animal drug firms that make finished drugs or source active pharmaceutical ingredients in China for the U.S. The FDA has contacted all 32 firms and no shortages have been reported at this time. However, six of those firms have indicated that they are seeing disruptions in the supply chain that soon could lead to shortages. The FDA is working with these firms to help identify interventions to mitigate potential shortages.&lt;/p&gt;
&lt;h2&gt;Additional Resources&lt;/h2&gt;
&lt;p&gt;The FDA is using all our existing authorities to address COVID-19, and we welcome the opportunity to work with Congress to further strengthen our response capabilities and emergency preparedness. There are four specific proposals included in the President’s budget that would better equip the FDA to prevent or mitigate medical product shortages.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Lengthen Expiration Dates to Mitigate Critical Human Drug Shortages:&lt;/em&gt;&lt;/strong&gt; Shortages of certain critical drugs can be exacerbated when drugs must be discarded because they exceed a labeled shelf-life due to unnecessarily short expiration dates. By expanding the FDA’s authority to require, when likely to help prevent or mitigate a shortage, that an applicant evaluate, submit studies to the FDA, and label a product with the longest possible expiration date that the FDA agrees is scientifically justified, there could be more supply available to alleviate the drug shortage or the severity of a shortage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Improve Critical Infrastructure by Requiring Risk Management Plans:&lt;/em&gt;&lt;/strong&gt; Enabling the FDA to require application holders of certain drugs to conduct periodic risk assessments to identify the vulnerabilities in their manufacturing supply chain (inclusive of contract manufacturing facilities), and develop plans to mitigate the risks associated with the identified vulnerabilities would enable the FDA to strengthen the supply chain by integrating contingencies for emergency situations. Currently, many medical product manufacturers lack plans to assess and address vulnerabilities in their manufacturing supply chain, putting them, and American patients, at risk for drug supply disruptions following disasters (e.g., hurricanes) or in other circumstances.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Improve Critical Infrastructure through Improved Data Sharing and Require More Accurate Supply Chain Information:&lt;/em&gt;&lt;/strong&gt; Empowering the FDA to require information to assess critical infrastructure, as well as manufacturing quality and capacity, would facilitate more accurate and timely supply chain monitoring and improve our ability to recognize shortage signals.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Establish Reporting Requirements for Device Manufacturers:&lt;/em&gt;&lt;/strong&gt; The FDA does not have the same authorities for medical device shortages as it does for drugs and biological products. For instance, medical device manufacturers are not required to notify the FDA when they become aware of a circumstance that could lead to a device shortage or meaningful disruption in the supply of that device in the U.S., nor are they required to respond to inquiries from the FDA about the availability of devices. Enabling the FDA to have timely and accurate information about likely or confirmed national shortages of essential devices would allow the agency to take steps to promote the continued availability of devices of public health importance. Among other things, the FDA proposes to require that firms notify the agency of an anticipated meaningful interruption in the supply of an essential device; require all manufacturers of devices determined to be essential to periodically provide the FDA with information about the manufacturing capacity of the essential devices they manufacture; and authorize the temporary importation of devices where the benefits of the device in mitigating a shortage outweigh the risks presented by the device that could otherwise result in denial of importation of the device into the U.S.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Overall, this remains an evolving and very dynamic issue. We are committed to continuing to communicate with the public as we have further updates.&lt;/p&gt;
&lt;p&gt;We also continue to aggressively monitor the market for any firms marketing products with fraudulent COVID-19 diagnosis, prevention or treatment claims. The FDA can and will use every authority at our disposal to protect consumers from bad actors who take advantage of a crisis to deceive the public, including pursuing warning letters, seizures or injunctions against products on the market that are not in compliance with the law, or against firms or individuals who violate the law.&lt;/p&gt;
&lt;p&gt;We know the public may have questions or concerns for the FDA as a result of this outbreak, including you and your family’s risk of exposure, or whether your critical medical products are safe and will continue to be available in the future. The FDA is working around the clock to monitor and mitigate emerging coronavirus issues through collaborative efforts with federal partners, international regulators and medical product developers and manufacturers to help advance response efforts to combat the COVID-19 outbreak.&lt;/p&gt;
&lt;p&gt;The FDA, an agency within the U.S. Department of Health and Human Services, protects the public health by assuring the safety, effectiveness, and security of human and veterinary drugs, vaccines and other biological products for human use, and medical devices. The agency also is responsible for the safety and security of our nation’s food supply, cosmetics, dietary supplements, products that give off electronic radiation, and for regulating tobacco products.&lt;/p&gt;
&lt;p class=&quot;text-center&quot;&gt;###&lt;/p&gt;
&lt;hr/&gt;&lt;div class=&quot;inset-column&quot;&gt;
&lt;h2&gt;Inquiries&lt;/h2&gt;
&lt;div class=&quot;row&quot;&gt;

&lt;div class=&quot;col-sm-6&quot;&gt;
&lt;dl&gt;&lt;dt&gt;Consumer:&lt;/dt&gt;
&lt;dd&gt;888-INFO-FDA&lt;/dd&gt;
&lt;/dl&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr/&gt;&lt;h2&gt;Related Information&lt;/h2&gt;
&lt;div class=&quot;field field--name-field-related-information field--type-text-long field--label-above&quot;&gt;
&lt;p&gt;Related Information&lt;/p&gt;

&lt;/div&gt;
&lt;br/&gt;</description>
<pubDate>Fri, 28 Feb 2020 19:38:08 +0000</pubDate>
<dc:creator>Reedx</dc:creator>
<og:type>Article</og:type>
<og:url>http://www.fda.gov/news-events/press-announcements/coronavirus-covid-19-supply-chain-update</og:url>
<og:title>Coronavirus (COVID-19) Supply Chain Update</og:title>
<og:description>Coronavirus (COVID-19) Supply Chain Update</og:description>
<og:image>https://www.fda.gov/themes/custom/preview/img/FDA-Social-Graphic.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.fda.gov/news-events/press-announcements/coronavirus-covid-19-supply-chain-update</dc:identifier>
</item>
<item>
<title>Google employee diagnosed with coronavirus</title>
<link>https://www.cnbc.com/2020/02/28/google-employee-diagnosed-with-coronavirus.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2020/02/28/google-employee-diagnosed-with-coronavirus.html</guid>
<description>&lt;div class=&quot;InlineImage-imageEmbed hasBkg&quot; id=&quot;ArticleBody-InlineImage-105193299&quot;&gt;
&lt;div class=&quot;InlineImage-wrapper&quot; readability=&quot;6&quot;&gt;

&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;People walk in Google's New York offices&lt;/p&gt;
&lt;p&gt;Getty Images&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;group&quot; readability=&quot;35.694915254237&quot;&gt;
&lt;p&gt;A &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=GOOGL&quot;&gt;Google&lt;/a&gt; employee has tested positive for the coronavirus at an office in Switzerland, and the company is now restricting staff travel to Italy, Japan, Iran and South Korea, which have all seen the virus spread.&lt;/p&gt;
&lt;p&gt;&quot;We can confirm that one employee from our Zurich office has been diagnosed with the coronavirus,&quot; a Google spokesperson confirmed to CNBC's Deirdre Bosa. &quot;They were in the Zurich office for a limited time, before they had any symptoms. We have taken — and will continue to take — all necessary precautionary measures, following the advice of public health officials, as we prioritize everyone's health and safety.&quot;&lt;/p&gt;

&lt;p&gt;Google's Zurich office will remain open, a spokesperson told CNBC.&lt;/p&gt;
&lt;p&gt;The case, which was sent out to employees in a notification email, was first reported by &lt;a href=&quot;https://www.businessinsider.com/google-employee-tests-positive-for-novel-coronavirus-company-restricts-travel-2020-2&quot; target=&quot;_blank&quot;&gt;Business Insider&lt;/a&gt;. Google has about 120,000 employees.&lt;/p&gt;
&lt;p&gt;Nearly 84,000 people have been infected with the fast-spreading flu-like virus, while at least 2,859 people have died. The virus was discovered in China in December and has since spread to &lt;a href=&quot;https://www.cnbc.com/2020/02/28/who-raises-risk-assessment-of-coronavirus-to-very-high-at-global-level.html&quot;&gt;at least 48 countries.&lt;/a&gt; At least nine coronavirus cases have been &lt;a href=&quot;https://www.reuters.com/article/us-china-health-swiss/swiss-coronavirus-cases-rise-to-nine-as-children-placed-in-precautionary-quarantine-idUSKCN20L167&quot; target=&quot;_blank&quot;&gt;confirmed in Switzerland&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;group&quot; readability=&quot;34.391526661797&quot;&gt;
&lt;p&gt;Companies across the globe are enforcing measures to stop the potential spread of the coronavirus, or COVID-19. Amazon, which has about 800,000 employees, has started &lt;a href=&quot;https://www.cnbc.com/2020/01/29/amazon-restricts-employee-travel-to-china-as-coronavirus-spreads.html&quot;&gt;restricting all nonessential employee travel in the U.S.&lt;/a&gt; and has &lt;a href=&quot;https://www.cnbc.com/2020/01/29/amazon-restricts-employee-travel-to-china-as-coronavirus-spreads.html&quot;&gt;restricted all travel to China&lt;/a&gt; &quot;until further notice.&quot; &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=UBER&quot;&gt;Uber&lt;/a&gt; on Friday also restricted travel for employees to mainland China, Iran, and some regions of Italy and South Korea.&lt;/p&gt;
&lt;p&gt;Several major tech companies have also pulled out from attending or canceled conferences scheduled through May.&lt;/p&gt;

&lt;p&gt;Google on Friday canceled its Global News Initiative summit that was to be located in Sunnyvale, California in late April.&lt;/p&gt;
&lt;p&gt;&quot;We regret that we have to cancel our global Google News Initiative summit but the health and wellbeing of our guests is our number one priority,&quot; said Richard Gingras, vice president of news.&lt;/p&gt;
&lt;p&gt;Earlier this month, organizers of the &lt;a href=&quot;https://www.cnbc.com/2020/02/12/mwc-mobile-world-congress-canceled-amid-coronavirus-fears.html&quot;&gt;Mobile World Congress,&lt;/a&gt; the world's largest trade show for the mobile phone industry, canceled the event in Barcelona just two weeks before it was supposed to take place. &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=FB&quot;&gt;Facebook&lt;/a&gt; canceled its &lt;a href=&quot;https://www.cnbc.com/2020/02/21/facebook-is-the-latest-to-pull-out-of-a-major-industry-conference-as-coronavirus-fears-batter-travel-industry.html&quot;&gt;Global Marketing Summit in San Francisco,&lt;/a&gt; which was to expected draw 4,000 people in early March, &quot;out of an abundance of caution.&quot; Facebook, &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=6758.T-JP&quot;&gt;Sony&lt;/a&gt; and &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=AMZN&quot;&gt;Amazon&lt;/a&gt; also pulled out of the &lt;a href=&quot;https://www.cnbc.com/2020/02/20/facebook-pulls-out-of-game-developers-conference-due-to-coronavirus.html&quot;&gt;Game Developers Conference&lt;/a&gt; scheduled for March in San Francisco.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WATCH:&lt;/strong&gt; &lt;a href=&quot;https://www.cnbc.com/video/2020/02/28/coronavirus-cases-continue-to-rise-around-the-world.html&quot;&gt;Coronavirus cases continue to rise around the world&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



</description>
<pubDate>Fri, 28 Feb 2020 19:23:02 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<og:type>article</og:type>
<og:title>Google restricts travel as coronavirus outbreak spreads and employee in Switzerland tests positive</og:title>
<og:description>Google confirmed an employee in Zurich tested positive for coronavirus and the company is now restricting travel to other countries with higher risk of exposure.</og:description>
<og:url>https://www.cnbc.com/2020/02/28/google-employee-diagnosed-with-coronavirus.html</og:url>
<og:image>https://image.cnbcfm.com/api/v1/image/105193299-GettyImages-927680886.jpg?v=1552935624</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2020/02/28/google-employee-diagnosed-with-coronavirus.html</dc:identifier>
</item>
<item>
<title>Freeman Dyson Has Died</title>
<link>https://www.nytimes.com/2020/02/28/science/freeman-dyson-dead.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2020/02/28/science/freeman-dyson-dead.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Freeman J. Dyson, a mathematical prodigy who left his mark on subatomic physics before turning to messier subjects like Earth’s environmental future and the morality of war, died on Friday at a hospital near Princeton, N.J. He was 96.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;His daughter Mia Dyson confirmed the death. His son, George, said Dr. Dyson had fallen three days earlier in the cafeteria of the Institute for Advanced Study in Princeton, “his academic home for more than 60 years,” as &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.ias.edu/press-releases/2020/freeman-j-dyson-1923%E2%80%932020&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;the institute put it&lt;/a&gt; in a news release.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;As a young graduate student at Cornell University in 1949, Dr. Dyson wrote a landmark paper — worthy, some colleagues thought, of a Nobel Prize — that deepened the understanding of how light interacts with matter to produce the palpable world. The theory the paper advanced, called quantum electrodynamics, or QED, ranks among the great achievements of modern science.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;But it was as a writer and technological visionary that he gained public renown. He imagined exploring the solar system with spaceships propelled by nuclear explosions and establishing distant colonies nourished by genetically engineered plants.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“Life begins at 55, the age at which I published my first book,” he wrote in “From Eros to Gaia,” one of the collections of his writings that appeared while he was a professor of physics at the Institute for Advanced Study — an august position for someone who finished school without a Ph.D. The lack of a doctorate was a badge of honor, he said. With his slew of honorary degrees and a fellowship in the Royal Society, people called him Dr. Dyson anyway.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Dr. Dyson called himself a scientific heretic and warned against the temptation of confusing mathematical abstractions with ultimate truth. Although his own early work on QED helped bring photons and electrons into a consistent framework, Dr. Dyson doubted that superstrings, or anything else, would lead to a Theory of Everything, unifying all of physics with a succinct formulation inscribable on a T-shirt.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In a speech in 2000 when he accepted the Templeton Prize for Progress in Religion, Dr. Dyson quoted Francis Bacon: “God forbid that we should give out a dream of our own imagination for a pattern of the world.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Relishing the role of iconoclast, he confounded the scientific establishment by dismissing the consensus about the perils of man-made climate change as &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.thegwpf.org/content/uploads/2015/10/benefits1.pdf&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;“tribal group-thinking.”&lt;/a&gt; He doubted the veracity of the climate models, and he exasperated experts with sanguine predictions they found rooted less in science than in wishfulness: Excess carbon in the air is good for plants, and global warming might forestall another ice age.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In a &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.nytimes.com/2009/03/29/magazine/29Dyson-t.html&quot; title=&quot;&quot;&gt;profile&lt;/a&gt; of Dr. Dyson in 2009 in The New York Times Magazine, his colleague Steven Weinberg, a Nobel laureate, observed, “I have the sense that when consensus is forming like ice hardening on a lake, Dyson will do his best to chip at the ice.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Dr. Dyson’s distrust of mathematical models had earlier led him to challenge predictions that the debris from atomic warfare could blot out the sun and bring on a devastating nuclear winter. He said he wished that were true — because it would add to the psychological deterrents to nuclear war — but found the theory wanting.&lt;/p&gt;

&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;For all his doubts about the ability of mortals to calculate anything so complex as the effects of climate change, he was confident enough in our toolmaking to propose a technological fix: If carbon dioxide levels became too high, forests of genetically altered trees could be planted to strip the excess molecules from the air. That would free scientists to confront problems he found more immediate, like the alleviation of poverty and the avoidance of war.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;He considered himself an environmentalist. “I am a tree-hugger, in love with frogs and forests,” &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.bostonglobe.com/opinion/2015/12/03/freeman-dyson-misunderstandings-questionable-beliefs-mar-paris-climate-talks/vG3oBrbmcZlv2m22DTNjMP/story.html&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;he wrote in 2015 in The Boston Globe&lt;/a&gt;. “More urgent and more real problems, such as the overfishing of the oceans and the destruction of wildlife habitat on land, are neglected, while the environmental activists waste their time and energy ranting about climate change.” That was, to say the least, a minority position.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;He was religious, but in an unorthodox way, believing good works to be more important than theology.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“Science is exciting because it is full of unsolved mysteries, and religion is exciting for the same reason,” he said in his Templeton Prize acceptance speech. “The greatest unsolved mysteries are the mysteries of our existence as conscious beings in a small corner of a vast universe.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Freeman John Dyson was born on Dec. 15, 1923, in the Berkshire village of Crowthorne, England. His father, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://en.wikipedia.org/wiki/George_Dyson_(composer)&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;George Dyson&lt;/a&gt;, was a composer and conductor. In the family archives is an unfinished novel Freeman began writing when he was 8 years old about an imaginary expedition to the moon to observe the impending impact of an asteroid. (Later in life he probably would have devised, at least on paper, a means of heading off the celestial crash.) The boy’s reading included, in addition to Jules Verne, nonfiction by &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://en.wikipedia.org/wiki/James_Hopwood_Jeans&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;James Jeans&lt;/a&gt; and &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.esa.int/Science_Exploration/Space_Science/Studying_the_stars_testing_relativity_Sir_Arthur_Eddington&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Arthur Eddington&lt;/a&gt;, British physicists with a flair for popularization and a literary bent.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;After finishing high school at Winchester College, where his father taught music, he entered the University of Cambridge, Trinity College, and excelled in mathematics.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Looking for a way to serve the war effort while satisfying his pacifist leanings, he took leave in 1943 to work as a civilian scientist for the Royal Air Force Bomber Command. He was charged with using mathematics to plan more efficient bombing campaigns. Years later, in an interview with the physicist and historian Silvan S. Schweber, he agonized over what he saw as his own moral cowardice, comparing himself to Nazi bureaucrats “calculating how to murder most economically.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Excited by the theoretical frontiers opened by wartime research on nuclear fission, Dr. Dyson returned to Cambridge and concentrated on becoming a physicist. With a bachelor’s degree in mathematics, he entered the graduate physics program at Cornell in 1947, studying under Hans Bethe, who had been a leader of &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.atomicarchive.com/History/mp/index.shtml&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;the Manhattan Project&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;It was while touring the United States the following summer that Dr. Dyson resolved a pressing problem in theoretical physics.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;&lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.youtube.com/watch?v=FjHJ7FmV0M4&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Richard Feynman&lt;/a&gt;, a young professor at Cornell, had invented a novel method to describe the behavior of electrons and photons (and their antimatter equivalent, positrons). But two other physicists, Julian Schwinger and Sin-Itiro Tomonaga, had each independently devised a very different way. Each of these seemed to satisfy the requirements of both quantum mechanics and special relativity — two of nature’s acid tests. But which one was correct?&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;While crossing Nebraska on a Greyhound bus, Dr. Dyson was struck by an epiphany: The theories were mathematically equivalent — different ways of saying the same thing. The result was QED. Feynman called it “the jewel of physics — our proudest possession.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;By the time Dr. Dyson &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://journals.aps.org/pr/abstract/10.1103/PhysRev.75.486&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;published the details&lt;/a&gt; in 1949, a doctorate must have seemed superfluous. He was appointed professor of physics at Cornell in 1951. Teaching, he soon realized, was not for him. In 1953, he became a scholar at the Institute for Advanced Study, where he spent the rest of his career.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Dr. Dyson did not begrudge &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.nobelprize.org/nobel_prizes/physics/laureates/1965/&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Feynman, Schwinger and Tomonaga&lt;/a&gt; the Nobel they received in 1965. “I think it’s almost true without exception if you want to win a Nobel Prize, you should have a long attention span, get hold of some deep and important problem and stay with it for 10 years,” &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.nytimes.com/2009/03/29/magazine/29Dyson-t.html&quot; title=&quot;&quot;&gt;he told The Times Magazine in 2009&lt;/a&gt;. “That wasn’t my style.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;He preferred to move from problem to problem, both theoretical and practical. In the late 1950s, consulting for General Atomics in San Diego, he helped design the Triga reactor, which is used for scientific research and nuclear medicine, and worked on Project Orion, which aimed to explore the solar system with an enormous spaceship powered by exploding nuclear bombs.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;With the signing of the Limited Nuclear Test Ban Treaty of 1963, Dr. Dyson’s dreams of reaching Saturn by 1970 were put to rest. Despite his disappointment, he came to support the treaty and, sometimes as a member of Jason, an elite group of scientific advisers, consulted with the government on disarmament and defense.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;But his interests were not moored to the earth’s surface. Any advanced civilization, he observed in a paper published in 1960, would ultimately expand to the point where it needed all the energy its solar system could provide. The ultimate solution would be to build a shell around the sun — a Dyson sphere — to capture its output. Earthlings, he speculated in a thought experiment, might conceivably do this by dismantling Jupiter and reassembling the pieces.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In the meantime Dr. Dyson supported more conventional kinds of solar power, but he proposed that astronomers searching for extraterrestrial intelligence keep an eye out for heat radiating from occluded suns. For mankind’s own colonial efforts, he suggested the Dyson tree, altered genetically to grow on comets and generate a breathable atmosphere.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;He also continued with less fanciful work. He and a colleague, Andrew Lenard, won a bottle of Champagne for proving that &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://apod.nasa.gov/apod/ap100228.html&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;the Pauli exclusion principle&lt;/a&gt;, which states that no two fermions (electrons are an example) can occupy the same state, accounted for the stability of matter. In 1965 Dr. Dyson received &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.aip.org/aip/awards/heinemanastrophysics.html&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;a Dannie Heineman Prize&lt;/a&gt;, often considered the next best thing in physics to a Nobel.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Little about the world, profound or mundane, escaped his curiosity. Among his work is a short paper deriving a mathematical equation — beautiful in his eyes — describing the seam of a baseball.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In the late 1970s Dr. Dyson turned full force to writing. Anyone with an interest in science and an appreciation for good prose is likely to have some Dysons on the shelf: “Disturbing the Universe,” “Weapons and Hope,” “Infinite in All Directions,” “The Sun, the Genome and the Internet.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;He also entered literature in a different way. He appeared in John McPhee’s book “The Curve of Binding Energy” (1974), a portrait of Ted Taylor, the nuclear scientist who led the Orion effort, and in Kenneth Brower’s “The Starship and the Canoe” (1978). In a memorable scene, Mr. Brower wrote of Dr. Dyson’s reunion with his son, George, who had turned his back on high technology to live in a treehouse in British Columbia and build a seafaring canoe. &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.edge.org/memberbio/george_dyson&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;George Dyson&lt;/a&gt; later returned to civilization and became a historian of technology and an author. Dr. Dyson’s daughter &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.wellville.net/team/&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Esther Dyson&lt;/a&gt; is a well-known Silicon Valley investor.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In addition to them and Dr. Dyson’s daughter Mia, he is survived by his second wife, Imme Dyson; their three other daughters, Dorothy Dyson, Emily Dyson Scott and Rebecca Dyson; a stepdaughter, Katarina Haefeli; and 16 grandchildren. Dr. Dyson’s marriage to the mathematician &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.edge.org/conversation/john_brockman-verena-huber-dyson&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Verena Huber&lt;/a&gt; ended in divorce. She died in 2016.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Dr. Dyson’s mind burned until the end. In 2012, when he was 88, he collaborated with William H. Press on &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://www.pnas.org/content/109/26/10409.full.pdf&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;a paper about the prisoner’s dilemma&lt;/a&gt;, a mathematical concept important to understanding human behavior and the nature of evolution.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In his 90s, Dr. Dyson was still consulting for the government — on nuclear reactor design and the new gene-editing technology called CRISPR. In 2018, the year he turned 95, his book “Maker of Patterns: An Autobiography Through Letters” was published.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In his Templeton lecture, Dr. Dyson proposed that the universe is guided by “the principle of maximum diversity,” guaranteeing that it unfolds in a way that is “as interesting as possible.” Whatever its merit as a physical law, the principle goes far in describing the course of his extraordinary life.&lt;/p&gt;
&lt;p class=&quot;css-jwz2nf etfikam0&quot;&gt;Julia Carmel contributed reporting.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 28 Feb 2020 17:01:18 +0000</pubDate>
<dc:creator>ChickeNES</dc:creator>
<og:url>https://www.nytimes.com/2020/02/28/science/freeman-dyson-dead.html</og:url>
<og:type>article</og:type>
<og:title>Freeman Dyson, Math Genius Turned Visionary Technologist, Dies at 96</og:title>
<og:image>https://static01.nyt.com/images/2020/02/29/obituaries/00dyson-toppix/00dyson-toppix-facebookJumbo.jpg</og:image>
<og:description>After an early breakthrough on light and matter, he became a writer who challenged climate science and pondered space exploration and nuclear warfare.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2020/02/28/science/freeman-dyson-dead.html</dc:identifier>
</item>
<item>
<title>A high school student created a fake 2020 candidate, and Twitter verified it</title>
<link>https://www.cnn.com/2020/02/28/tech/fake-twitter-candidate-2020/</link>
<guid isPermaLink="true" >https://www.cnn.com/2020/02/28/tech/fake-twitter-candidate-2020/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.cnn.com/2020/02/28/tech/fake-twitter-candidate-2020/&quot;&gt;https://www.cnn.com/2020/02/28/tech/fake-twitter-candidate-2020/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22443772&quot;&gt;https://news.ycombinator.com/item?id=22443772&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 256&lt;/p&gt;
&lt;p&gt;# Comments: 99&lt;/p&gt;
</description>
<pubDate>Fri, 28 Feb 2020 16:13:25 +0000</pubDate>
<dc:creator>smacktoward</dc:creator>
<og:url>https://www.nytimes.com/2020/02/28/science/freeman-dyson-dead.html</og:url>
<og:type>article</og:type>
<og:title>Freeman Dyson, Math Genius Turned Visionary Technologist, Dies at 96</og:title>
<og:image>https://static01.nyt.com/images/2020/02/29/obituaries/00dyson-toppix/00dyson-toppix-facebookJumbo.jpg</og:image>
<og:description>After an early breakthrough on light and matter, he became a writer who challenged climate science and pondered space exploration and nuclear warfare.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2020/02/28/science/freeman-dyson-dead.html</dc:identifier>
</item>
<item>
<title>I Want Off Mr. Golang&amp;#039;s Wild Ride</title>
<link>https://fasterthanli.me/blog/2020/i-want-off-mr-golangs-wild-ride/</link>
<guid isPermaLink="true" >https://fasterthanli.me/blog/2020/i-want-off-mr-golangs-wild-ride/</guid>
<description>&lt;p&gt;My honeymoon with the &lt;a href=&quot;https://golang.org/&quot;&gt;Go language&lt;/a&gt; is &lt;em&gt;extremely&lt;/em&gt; over.&lt;/p&gt;
&lt;p&gt;This article is going to have a different tone from what I've been posting the past year - it's a proper rant. And I always feel bad writing those, because, inevitably, it discusses things a lot of people have been working very hard on.&lt;/p&gt;
&lt;p&gt;In spite of that, here we are.&lt;/p&gt;
&lt;p&gt;Having invested thousands of hours into the language, and implemented several critical (to my employer) pieces of infrastructure with it, I wish I hadn't.&lt;/p&gt;
&lt;p&gt;If you're &lt;em&gt;already&lt;/em&gt; heavily invested in Go, you probably shouldn't read this, it'll probably just twist the knife. If you work on Go, you &lt;em&gt;definitely&lt;/em&gt; shouldn't read this.&lt;/p&gt;
&lt;p&gt;I've been suffering Go's idiosyncracies in relative silence for too long, there's a few things I really need to get off my chest.&lt;/p&gt;
&lt;p&gt;Alright? Alright.&lt;/p&gt;
&lt;h2 id=&quot;garden-variety-takes-on-go&quot;&gt;Garden-variety takes on Go&lt;/h2&gt;
&lt;p&gt;By now, everybody knows Go doesn't have generics, which makes a lot of problems impossible to model accurately (instead, you have to fall back to reflection, which is &lt;em&gt;extremely&lt;/em&gt; unsafe, and the API is very error-prone), error handling is wonky (even with your pick of the third-party libraries that add context or stack traces), package management took a while to arrive, etc.&lt;/p&gt;
&lt;p&gt;But everybody also knows Go's strengths: static linking makes binaries easy to deploy (although, Go binaries get &lt;a href=&quot;https://blog.filippo.io/shrink-your-go-binaries-with-this-one-weird-trick/&quot;&gt;very large&lt;/a&gt;, even if you strip DWARF tables - stack trace annotations still remain, and are &lt;em&gt;costly&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Compile times are short (unless you need cgo), there's an interactive runtime profiler (pprof) at arm's reach, it's relatively cross-platform (there's even a &lt;a href=&quot;https://github.com/tinygo-org/tinygo&quot;&gt;tiny variant&lt;/a&gt; for embedded), it's easy to syntax-highlight, and there's now an official &lt;a href=&quot;https://github.com/golang/tools/blob/master/gopls/README.md&quot;&gt;LSP server&lt;/a&gt; for it.&lt;/p&gt;
&lt;p&gt;I've accepted all of these - the good and the bad.&lt;/p&gt;
&lt;p&gt;We're here to talk about the ugly.&lt;/p&gt;
&lt;h2 id=&quot;simple-is-a-lie&quot;&gt;Simple is a lie&lt;/h2&gt;
&lt;p&gt;Over and over, every piece of documentation for the Go language markets it as “simple”.&lt;/p&gt;
&lt;p&gt;This is a lie.&lt;/p&gt;
&lt;p&gt;Or rather, it's a half-truth that conveniently covers up the fact that, when you make something simple, you move complexity elsewhere.&lt;/p&gt;
&lt;p&gt;Computers, operating systems, networks are a hot mess. They're barely manageable, even if you know a decent amount about what you're doing. Nine out of ten software engineers agree: it's a miracle anything works at all.&lt;/p&gt;
&lt;p&gt;So all the complexity is swept under the rug. Hidden from view, but not solved.&lt;/p&gt;
&lt;p&gt;Here's a simple example.&lt;/p&gt;
&lt;div class=&quot;tip&quot; readability=&quot;10&quot;&gt;

&lt;p&gt;This example does go on for a while, actually - but don't let the specifics distract you. While it goes rather in-depth, it illustrates a larger point.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Most of Go's APIs (much like NodeJS's APIs) are designed for Unix-like operating systems. This is not surprising, as Rob &amp;amp; Ken are from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs#History&quot;&gt;Plan 9 gang&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, the file API in Go looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// File represents an open file descriptor.
type File struct {
    *file // os specific
}

func (f *File) Stat() (FileInfo, error) {
    // omitted
}

// A FileInfo describes a file and is returned by Stat and Lstat.
type FileInfo interface {
        Name() string       // base name of the file
        Size() int64        // length in bytes for regular files; system-dependent for others
        Mode() FileMode     // file mode bits
        ModTime() time.Time // modification time
        IsDir() bool        // abbreviation for Mode().IsDir()
        Sys() interface{}   // underlying data source (can return nil)
}

// A FileMode represents a file's mode and permission bits.
// The bits have the same definition on all systems, so that
// information about files can be moved from one system
// to another portably. Not all bits apply to all systems.
// The only required bit is ModeDir for directories.
type FileMode uint32

// The defined file mode bits are the most significant bits of the FileMode.
// The nine least-significant bits are the standard Unix rwxrwxrwx permissions.
// The values of these bits should be considered part of the public API and
// may be used in wire protocols or disk representations: they must not be
// changed, although new bits might be added.
const (
        // The single letters are the abbreviations
        // used by the String method's formatting.
        ModeDir        FileMode = 1 &amp;lt;&amp;lt; (32 - 1 - iota) // d: is a directory
        ModeAppend                                     // a: append-only
        ModeExclusive                                  // l: exclusive use
        ModeTemporary                                  // T: temporary file; Plan 9 only
        ModeSymlink                                    // L: symbolic link
        ModeDevice                                     // D: device file
        ModeNamedPipe                                  // p: named pipe (FIFO)
        ModeSocket                                     // S: Unix domain socket
        ModeSetuid                                     // u: setuid
        ModeSetgid                                     // g: setgid
        ModeCharDevice                                 // c: Unix character device, when ModeDevice is set
        ModeSticky                                     // t: sticky
        ModeIrregular                                  // ?: non-regular file; nothing else is known about this file

        // Mask for the type bits. For regular files, none will be set.
        ModeType = ModeDir | ModeSymlink | ModeNamedPipe | ModeSocket | ModeDevice | ModeCharDevice | ModeIrregular

        ModePerm FileMode = 0777 // Unix permission bits
)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Makes sense for a Unix, right?&lt;/p&gt;
&lt;p&gt;Every file has a mode, there's even a command that lets you dump it as hex:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ stat -c '%f' /etc/hosts
81a4
$ stat -c '%f' /usr/bin/man
81ed
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And so, a simple Go program can easily grab those “Unix permission bits”:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;os&quot;
)

func main() {
        arg := os.Args[1]
        fi, _ := os.Stat(arg)
        fmt.Printf(&quot;(%s) mode = %o\n&quot;, arg, fi.Mode() &amp;amp; os.ModePerm)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go run main.go /etc/hosts
(/etc/hosts) mode = 644
$ go run main.go /usr/bin/man
(/etc/hosts) mode = 755
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On Windows, files don't have modes. It doesn't have &lt;code&gt;stat&lt;/code&gt;, &lt;code&gt;lstat&lt;/code&gt;, &lt;code&gt;fstat&lt;/code&gt; syscalls - it has a &lt;code&gt;FindFirstFile&lt;/code&gt; family of functions (alternatively, &lt;code&gt;CreateFile&lt;/code&gt; to open, then &lt;code&gt;GetFileAttributes&lt;/code&gt;, alternatively, &lt;code&gt;GetFileInformationByHandle&lt;/code&gt;), which takes a pointer to a &lt;code&gt;WIN32_FIND_DATA&lt;/code&gt; structure, which contains &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/fileio/file-attribute-constants&quot;&gt;file attributes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, what happens if you run that program on Windows?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;&amp;gt; go run main.go C:\Windows\notepad.exe
(C:\Windows\notepad.exe) mode = 666
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It makes up a mode.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/os/types_windows.go

func (fs *fileStat) Mode() (m FileMode) {
        if fs == &amp;amp;devNullStat {
                return ModeDevice | ModeCharDevice | 0666
        }
        if fs.FileAttributes&amp;amp;syscall.FILE_ATTRIBUTE_READONLY != 0 {
                m |= 0444
        } else {
                m |= 0666
        }
        if fs.isSymlink() {
                return m | ModeSymlink
        }
        if fs.FileAttributes&amp;amp;syscall.FILE_ATTRIBUTE_DIRECTORY != 0 {
                m |= ModeDir | 0111
        }
        switch fs.filetype {
        case syscall.FILE_TYPE_PIPE:
                m |= ModeNamedPipe
        case syscall.FILE_TYPE_CHAR:
                m |= ModeDevice | ModeCharDevice
        }
        return m
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Node.js does the same. There's a &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_class_fs_stats&quot;&gt;single fs.Stats “type”&lt;/a&gt; for all platforms.&lt;/p&gt;
&lt;p&gt;Using “whatever Unix has” as the lowest common denominator is &lt;em&gt;extremely common&lt;/em&gt; in open-source codebases, so it's not surprising.&lt;/p&gt;
&lt;p&gt;Let's go a little bit further. On Unix systems, you can change the modes of files, to make them read-only, or flip the executable bit.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;os&quot;
)

func main() {
        arg := os.Args[1]

        fi, err := os.Stat(arg)
        must(err)
        fmt.Printf(&quot;(%s) old mode = %o\n&quot;, arg, fi.Mode()&amp;amp;os.ModePerm)

        must(os.Chmod(arg, 0755))

        fi, err = os.Stat(arg)
        must(err)
        fmt.Printf(&quot;(%s) new mode = %o\n&quot;, arg, fi.Mode()&amp;amp;os.ModePerm)
}

func must(err error) {
        if err != nil {
                panic(err)
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's run this on Linux:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ touch test.txt
$ go run main.go test.txt
(test.txt) old mode = 644
(test.txt) new mode = 755
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And now on Windows:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;&amp;gt; go run main.go test.txt
(test.txt) old mode = 666
(test.txt) new mode = 666
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, no errors. &lt;code&gt;Chmod&lt;/code&gt; just silently does… nothing. Which is reasonably - there's no equivalent to the “executable bit” for files on Windows.&lt;/p&gt;
&lt;p&gt;What does &lt;code&gt;Chmod&lt;/code&gt; even do on Windows?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/syscall/syscall_windows.go

func Chmod(path string, mode uint32) (err error) {
        p, e := UTF16PtrFromString(path)
        if e != nil {
                return e
        }
        attrs, e := GetFileAttributes(p)
        if e != nil {
                return e
        }
        if mode&amp;amp;S_IWRITE != 0 {
                attrs &amp;amp;^= FILE_ATTRIBUTE_READONLY
        } else {
                attrs |= FILE_ATTRIBUTE_READONLY
        }
        return SetFileAttributes(p, attrs)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It sets or clears the read-only bit. That's it.&lt;/p&gt;
&lt;p&gt;We have an &lt;code&gt;uint32&lt;/code&gt; argument, with four billion two hundred ninety-four million nine hundred sixty-seven thousand two hundred ninety-five possible values, to encode… one bit of information.&lt;/p&gt;
&lt;p&gt;That's a pretty innocent lie. The assumption that files have modes was baked into the API design from the start, and now, everyone has to live with it. Just like in Node.JS, and probably tons of other languages.&lt;/p&gt;
&lt;p&gt;But &lt;em&gt;it doesn't have to be like that&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A language with a more involved type system, and better designed libraries could avoid that pitfall.&lt;/p&gt;
&lt;p&gt;Out of curiosity, what does Rust do?&lt;/p&gt;
&lt;div class=&quot;tip&quot; readability=&quot;21&quot;&gt;

&lt;p&gt;Oh, here we go again - Rust, Rust, and Rust again.&lt;/p&gt;
&lt;p&gt;Why always Rust?&lt;/p&gt;
&lt;p&gt;Well, I tried &lt;em&gt;real hard&lt;/em&gt; to keep Rust out of all of this. Among other things, because people are going to dismiss this article as coming from “a typical rustacean”.&lt;/p&gt;
&lt;p&gt;But for all the problems I raise in this article… Rust gets it right. If I had another good example, I'd use it. But I don't, so, here goes.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There's no &lt;code&gt;stat&lt;/code&gt;-like function in the Rust standard library. There's &lt;code&gt;std::fs::metadata&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;pub fn metadata&amp;lt;P: AsRef&amp;lt;Path&amp;gt;&amp;gt;(path: P) -&amp;gt; Result&amp;lt;Metadata&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This function signatures tells us a lot already. It returns a &lt;code&gt;Result&lt;/code&gt;, which means, not only do we know this can fail, we &lt;em&gt;have&lt;/em&gt; to handle it. Either by panicking on error, with &lt;code&gt;.unwrap()&lt;/code&gt; or &lt;code&gt;.expect()&lt;/code&gt;, or by matching it against &lt;code&gt;Result::Ok&lt;/code&gt; / &lt;code&gt;Result::Err&lt;/code&gt;, or by bubbling it up with the &lt;code&gt;?&lt;/code&gt; operator.&lt;/p&gt;
&lt;p&gt;The point is, this function signature makes it &lt;em&gt;impossible&lt;/em&gt; for us to access an invalid/uninitialized/null &lt;code&gt;Metadata&lt;/code&gt;. With a Go function, if you ignore the returned &lt;code&gt;error&lt;/code&gt;, you &lt;em&gt;still&lt;/em&gt; get the result - most probably a null pointer.&lt;/p&gt;
&lt;p&gt;Also, the argument is not a string - it's a path. Or rather, it's something that &lt;em&gt;can be turned into a path&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;And &lt;code&gt;String&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/std/string/struct.String.html#impl-AsRef%3CPath%3E&quot;&gt;does implement &lt;code&gt;AsRef&amp;lt;Path&amp;gt;&lt;/code&gt;&lt;/a&gt;, so, for simple use cases, it's not troublesome:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn main() {
    let metadata = std::fs::metadata(&quot;Cargo.toml&quot;).unwrap();
    println!(&quot;is dir? {:?}&quot;, metadata.is_dir());
    println!(&quot;is file? {:?}&quot;, metadata.is_file());
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But paths are not necessarily strings. On Unix (!), paths can be any sequence of bytes, except null bytes.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cd rustfun/
$ touch &quot;$(printf &quot;\xbd\xb2\x3d\xbc\x20\xe2\x8c\x98&quot;)&quot;
$ ls
ls: cannot compare file names ‘Cargo.lock’ and ‘\275\262=\274 ⌘’: Invalid or incomplete multibyte or wide character
 src   target   Cargo.lock   Cargo.toml  ''$'\275\262''='$'\274'' ⌘'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We've just made a file with a &lt;em&gt;very naughty&lt;/em&gt; name - but it's a perfectly valid file, even if &lt;code&gt;ls&lt;/code&gt; struggles with it.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ stat &quot;$(printf &quot;\xbd\xb2\x3d\xbc\x20\xe2\x8c\x98&quot;)&quot;
  File: = ⌘
  Size: 0               Blocks: 0          IO Block: 65536  regular empty file
Device: 8c70d496h/2356204694d   Inode: 72620543991375285  Links: 1
Access: (0644/-rw-r--r--)  Uid: (197611/    amos)   Gid: (197611/    amos)
Access: 2020-02-28 13:12:12.783734000 +0100
Modify: 2020-02-28 13:12:12.783734000 +0100
Change: 2020-02-28 13:12:12.783329400 +0100
 Birth: 2020-02-28 13:12:12.783329400 +0100
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's not something we can represent with a &lt;code&gt;String&lt;/code&gt; in Rust, because &lt;a href=&quot;https://fasterthanli.me/blog/2020/working-with-strings-in-rust/&quot;&gt;Rust Strings are valid utf-8&lt;/a&gt;, and this isn't.&lt;/p&gt;
&lt;p&gt;Rust &lt;code&gt;Path&lt;/code&gt;s, however, are… arbitrary byte sequences.&lt;/p&gt;
&lt;p&gt;And so, if we use &lt;code&gt;std::fs::read_dir&lt;/code&gt;, we have no problem listing it and getting its metadata:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;use std::fs;

fn main() {
    let entries = fs::read_dir(&quot;.&quot;).unwrap();
    for entry in entries {
        let path = entry.unwrap().path();
        let meta = fs::metadata(&amp;amp;path).unwrap();
        if meta.is_dir() {
            println!(&quot;(dir) {:?}&quot;, path);
        } else {
            println!(&quot;      {:?}&quot;, path);
        }
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet
(dir) &quot;./src&quot;
      &quot;./Cargo.toml&quot;
      &quot;./.gitignore&quot;
      &quot;./\xBD\xB2=\xBC ⌘&quot;
(dir) &quot;./.git&quot;
      &quot;./Cargo.lock&quot;
(dir) &quot;./target&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What about Go?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;os&quot;
)

func main() {
        arg := os.Args[1]
        f, err := os.Open(arg)
        must(err)

        entries, err := f.Readdir(-1)
        must(err)

        for _, e := range entries {
                if e.IsDir() {
                        fmt.Printf(&quot;(dir) %s\n&quot;, e.Name())
                } else {
                        fmt.Printf(&quot;      %s\n&quot;, e.Name())
                }
        }
}

func must(err error) {
        if err != nil {
                panic(err)
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go build
$ ./gofun ../rustfun
(dir) src
      Cargo.toml
      .gitignore
      = ⌘
(dir) .git
      Cargo.lock
(dir) target
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It… silently prints a wrong version of the path.&lt;/p&gt;
&lt;p&gt;See, there's no “path” type in Go. Just “string”. And Go strings &lt;a href=&quot;https://blog.golang.org/strings&quot;&gt;are just byte slices&lt;/a&gt;, with no guarantees what's inside.&lt;/p&gt;
&lt;p&gt;So it prints garbage, whereas in Rust, &lt;code&gt;Path&lt;/code&gt; does not implement &lt;code&gt;Display&lt;/code&gt;, so we couldn't do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;println!(&quot;(dir) {}&quot;, path);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We had to do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;println!(&quot;(dir) {:?}&quot;, path);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And if we wanted a friendlier output, we &lt;em&gt;could&lt;/em&gt; handle both cases: when the path happens to be a valid utf-8 string, and when it doesn't:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;use std::fs;

fn main() {
    let entries = fs::read_dir(&quot;.&quot;).unwrap();
    for entry in entries {
        let path = entry.unwrap().path();
        let meta = fs::metadata(&amp;amp;path).unwrap();
        let prefix = if meta.is_dir() {
            &quot;(dir)&quot;
        } else {
            &quot;     &quot;
        };
        match path.to_str() {
            Some(s) =&amp;gt; println!(&quot;{} {}&quot;, prefix, s),
            None =&amp;gt; println!(&quot;{} {:?} (invalid utf-8)&quot;, prefix, path),
        }
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet
(dir) ./src
      ./Cargo.toml
      ./.gitignore
      &quot;./\xBD\xB2=\xBC ⌘&quot; (invalid utf-8)
(dir) ./.git
      ./Cargo.lock
(dir) ./target
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Go says “don't worry about encodings! things are &lt;em&gt;probably&lt;/em&gt; utf-8”.&lt;/p&gt;
&lt;p&gt;Except when they aren't. And paths aren't. So, in Go, all path manipulation routines operate on &lt;code&gt;string&lt;/code&gt;, let's take a look at the &lt;code&gt;path/filepath&lt;/code&gt; package.&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;Package filepath implements utility routines for manipulating filename paths in a way compatible with the target operating system-defined file paths.&lt;/p&gt;
&lt;p&gt;The filepath package uses either forward slashes or backslashes, depending on the operating system. To process paths such as URLs that always use forward slashes regardless of the operating system, see the path package.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What does this package give us?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;func Abs(path string) (string, error)
func Base(path string) string
func Clean(path string) string
func Dir(path string) string
func EvalSymlinks(path string) (string, error)
func Ext(path string) string
func FromSlash(path string) string
func Glob(pattern string) (matches []string, err error)
func HasPrefix(p, prefix string) bool
func IsAbs(path string) bool
func Join(elem ...string) string
func Match(pattern, name string) (matched bool, err error)
func Rel(basepath, targpath string) (string, error)
func Split(path string) (dir, file string)
func SplitList(path string) []string
func ToSlash(path string) string
func VolumeName(path string) string
func Walk(root string, walkFn WalkFunc) error
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Strings. Lots and lots of strings. Well, byte slices.&lt;/p&gt;
&lt;p&gt;Speaking of bad design decisions - what's that &lt;code&gt;Ext&lt;/code&gt; function I see?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// Ext returns the file name extension used by path. The extension is the suffix
// beginning at the final dot in the final element of path; it is empty if there
// is no dot.
func Ext(path string) string
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Interesting! Let's try it out.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;path/filepath&quot;
)

func main() {
        inputs := []string{
                &quot;/&quot;,
                &quot;/.&quot;,
                &quot;/.foo&quot;,
                &quot;/foo&quot;,
                &quot;/foo.txt&quot;,
                &quot;/foo.txt/bar&quot;,
                &quot;C:\\&quot;,
                &quot;C:\\.&quot;,
                &quot;C:\\foo.txt&quot;,
                &quot;C:\\foo.txt\\bar&quot;,
        }
        for _, i := range inputs {
                fmt.Printf(&quot;%24q =&amp;gt; %q\n&quot;, i, filepath.Ext(i))
        }
}

func must(err error) {
        if err != nil {
                panic(err)
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go run main.go
                     &quot;/&quot; =&amp;gt; &quot;&quot;
                    &quot;/.&quot; =&amp;gt; &quot;.&quot;
                 &quot;/.foo&quot; =&amp;gt; &quot;.foo&quot;
                  &quot;/foo&quot; =&amp;gt; &quot;&quot;
              &quot;/foo.txt&quot; =&amp;gt; &quot;.txt&quot;
          &quot;/foo.txt/bar&quot; =&amp;gt; &quot;&quot;
                  &quot;C:\\&quot; =&amp;gt; &quot;&quot;
                 &quot;C:\\.&quot; =&amp;gt; &quot;.&quot;
           &quot;C:\\foo.txt&quot; =&amp;gt; &quot;.txt&quot;
      &quot;C:\\foo.txt\\bar&quot; =&amp;gt; &quot;.txt\\bar&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Right away, I'm in debating mood - is &lt;code&gt;.foo&lt;/code&gt;'s extension &lt;em&gt;really&lt;/em&gt; &lt;code&gt;.foo&lt;/code&gt;? But let's move on.&lt;/p&gt;
&lt;p&gt;This example was run on Linux, so &lt;code&gt;C:\foo.txt\bar&lt;/code&gt;'s extension, according to &lt;code&gt;filepath.Ext&lt;/code&gt;, is.. &lt;code&gt;.txt\bar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Why? Because the Go standard library makes the assumption that a platform has a single path separator - on Unix and BSD-likes, it's &lt;code&gt;/&lt;/code&gt;, and on Windows it's &lt;code&gt;\\&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Except… that's not the whole truth. I was curious, so I checked:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;// in `fun.c`

void main() {
  HANDLE hFile = CreateFile(&quot;C:/Users/amos/test.txt&quot;, GENERIC_WRITE, 0, NULL,
                            CREATE_NEW, FILE_ATTRIBUTE_NORMAL, NULL);

  char *data = &quot;Hello from the Win32 API&quot;;
  DWORD dwToWrite = (DWORD) strlen(data);
  DWORD dwWritten = 0;
  WriteFile(hFile, data, dwToWrite, &amp;amp;dwWritten, NULL);
  CloseHandle(hFile);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;&amp;gt; cl fun.c
Microsoft (R) C/C++ Optimizing Compiler Version 19.23.28107 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

fun.c
Microsoft (R) Incremental Linker Version 14.23.28107.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:fun.exe
fun.obj
&amp;gt; .\fun.exe
&amp;gt; type C:\Users\amos\test.txt
Hello from the Win32 API
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;No funny &lt;a href=&quot;https://www.msys2.org/&quot;&gt;Unix emulation&lt;/a&gt; business going on - just regular old Windows 10.&lt;/p&gt;
&lt;p&gt;And yet, in Go's standard library, the &lt;code&gt;path/filepath&lt;/code&gt; package exports those constants:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;const (
    Separator     = os.PathSeparator
    ListSeparator = os.PathListSeparator
)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;os&lt;/code&gt;, in turn, exports:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/os/path_windows.go
const (
        PathSeparator     = '\\' // OS-specific path separator
        PathListSeparator = ';'  // OS-specific path list separator
)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So how comes &lt;code&gt;filepath.Ext&lt;/code&gt; works with both separators on Windows?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go run main.go
                     &quot;/&quot; =&amp;gt; &quot;&quot;
                    &quot;/.&quot; =&amp;gt; &quot;.&quot;
                 &quot;/.foo&quot; =&amp;gt; &quot;.foo&quot;
                  &quot;/foo&quot; =&amp;gt; &quot;&quot;
              &quot;/foo.txt&quot; =&amp;gt; &quot;.txt&quot;
          &quot;/foo.txt/bar&quot; =&amp;gt; &quot;&quot;
                  &quot;C:\\&quot; =&amp;gt; &quot;&quot;
                 &quot;C:\\.&quot; =&amp;gt; &quot;.&quot;
           &quot;C:\\foo.txt&quot; =&amp;gt; &quot;.txt&quot;
      &quot;C:\\foo.txt\\bar&quot; =&amp;gt; &quot;&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's look at its implementation:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/path/filepath/path.go

func Ext(path string) string {
        for i := len(path) - 1; i &amp;gt;= 0 &amp;amp;&amp;amp; !os.IsPathSeparator(path[i]); i-- {
                if path[i] == '.' {
                        return path[i:]
                }
        }
        return &quot;&quot;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Ah. An &lt;code&gt;IsPathSeparator&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Sure enough:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/os/path_windows.go

// IsPathSeparator reports whether c is a directory separator character.
func IsPathSeparator(c uint8) bool {
        // NOTE: Windows accept / as path separator.
        return c == '\\' || c == '/'
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(Can I just point out how hilarious that “Extension” was deemed long enough to abbreviate to “Ext”, but “IsPathSeparator” wasn't?)&lt;/p&gt;
&lt;p&gt;How does Rust handle this?&lt;/p&gt;
&lt;p&gt;It has &lt;code&gt;std::path::is_separator&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;/// Determines whether the character is one of the permitted
// path separators for the current platform.
pub fn is_separator(c: char) -&amp;gt; bool
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And it has &lt;code&gt;std::path::MAIN_SEPARATOR&lt;/code&gt; - emphasis on &lt;em&gt;main&lt;/em&gt; separator:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;/// The primary separator of path components for the current platform.
/// 
/// For example, / on Unix and \ on Windows.
pub const MAIN_SEPARATOR: char
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The naming along makes it much clearer that there &lt;em&gt;might&lt;/em&gt; be secondary path separators, and the rich Path manipulation API makes it much less likely to find this kind of code, for example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt; DefaultScripts = &quot;downloads&quot; + string(os.PathSeparator) + &quot;defaultScripts&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or this kind:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt; if os.PathSeparator == '/' {
                projname = strings.Replace(name, &quot;\\&quot;, &quot;/&quot;, -1)
        } else if os.PathSeparator == '\\' {
                projname = strings.Replace(name, &quot;/&quot;, &quot;\\&quot;, -1)
        }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or this… kind:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;filefullpath = fmt.Sprintf(&quot;%s%c%s%c%s%c%s%c%s%s&quot;,
                a.DataDir, os.PathSeparator,
                m[0:1], os.PathSeparator,
                m[1:2], os.PathSeparator,
                m[2:3], os.PathSeparator,
                m, ext)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It turns out Rust also has a “get a path's extension” function, but it's a lot more conservative in the promises it makes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;// Extracts the extension of self.file_name, if possible.
// 
// The extension is:
// 
//   * None, if there is no file name;
//   * None, if there is no embedded .;
//   * None, if the file name begins with . and has no other .s within;
//   * Otherwise, the portion of the file name after the final .
pub fn extension(&amp;amp;self) -&amp;gt; Option&amp;lt;&amp;amp;OsStr&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's submit it to the same test:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn main() {
    let inputs = [
        r&quot;/&quot;,
        r&quot;/.&quot;,
        r&quot;/.foo&quot;,
        r&quot;/foo&quot;,
        r&quot;/foo.txt&quot;,
        r&quot;/foo.txt/bar&quot;,
        r&quot;C:\&quot;,
        r&quot;C:\.&quot;,
        r&quot;C:\foo.txt&quot;,
        r&quot;C:\foo.txt\bar&quot;,
    ];
    for input in &amp;amp;inputs {
        use std::path::Path;
        println!(&quot;{:&amp;gt;20} =&amp;gt; {:?}&quot;, input, Path::new(input).extension());
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On Linux:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet
                   / =&amp;gt; None
                  /. =&amp;gt; None
               /.foo =&amp;gt; None
               /foo. =&amp;gt; Some(&quot;&quot;)
                /foo =&amp;gt; None
            /foo.txt =&amp;gt; Some(&quot;txt&quot;)
        /foo.txt/bar =&amp;gt; None
                 C:\ =&amp;gt; None
                C:\. =&amp;gt; Some(&quot;&quot;)
          C:\foo.txt =&amp;gt; Some(&quot;txt&quot;)
      C:\foo.txt\bar =&amp;gt; Some(&quot;txt\\bar&quot;)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On Windows:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet
                   / =&amp;gt; None
                  /. =&amp;gt; None
               /.foo =&amp;gt; None
               /foo. =&amp;gt; Some(&quot;&quot;)
                /foo =&amp;gt; None
            /foo.txt =&amp;gt; Some(&quot;txt&quot;)
        /foo.txt/bar =&amp;gt; None
                 C:\ =&amp;gt; None
                C:\. =&amp;gt; None
          C:\foo.txt =&amp;gt; Some(&quot;txt&quot;)
      C:\foo.txt\bar =&amp;gt; None
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Like Go, it gives a &lt;code&gt;txt\bar&lt;/code&gt; extension for a Windows path on Linux.&lt;/p&gt;
&lt;p&gt;Unlike Go, it:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Doesn't think “/.foo” has a file extension&lt;/li&gt;
&lt;li&gt;Distinguishes between the “/foo.” case (&lt;code&gt;Some(&quot;&quot;)&lt;/code&gt;) and the “/foo” case (&lt;code&gt;None&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Let's also look at the Rust implementation of &lt;code&gt;std::path::extension&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;pub fn extension(&amp;amp;self) -&amp;gt; Option&amp;lt;&amp;amp;OsStr&amp;gt; {
        self.file_name().map(split_file_at_dot).and_then(|(before, after)| before.and(after))
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's dissect that: first it calls &lt;code&gt;file_name()&lt;/code&gt;. How does that work? Is it where it searches for path separators backwards from the end of the path?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;pub fn file_name(&amp;amp;self) -&amp;gt; Option&amp;lt;&amp;amp;OsStr&amp;gt; {
        self.components().next_back().and_then(|p| match p {
                Component::Normal(p) =&amp;gt; Some(p.as_ref()),
                _ =&amp;gt; None,
        })
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;No! It calls &lt;code&gt;components&lt;/code&gt; which returns a type that implements &lt;code&gt;DoubleEndedIterator&lt;/code&gt; - an iterator you can navigate from the front or the back. &lt;em&gt;Then&lt;/em&gt; it grabs the first item from the back - if any - and returns that.&lt;/p&gt;
&lt;p&gt;The iterator &lt;em&gt;does&lt;/em&gt; look for path separators - lazily, in a re-usable way. There is no code duplication, like in the Go library:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/os/path_windows.go

func dirname(path string) string {
        vol := volumeName(path)
        i := len(path) - 1
        for i &amp;gt;= len(vol) &amp;amp;&amp;amp; !IsPathSeparator(path[i]) {
                i--
        }
        dir := path[len(vol) : i+1]
        last := len(dir) - 1
        if last &amp;gt; 0 &amp;amp;&amp;amp; IsPathSeparator(dir[last]) {
                dir = dir[:last]
        }
        if dir == &quot;&quot; {
                dir = &quot;.&quot;
        }
        return vol + dir
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, now we have &lt;em&gt;only the file name&lt;/em&gt;. If we had &lt;code&gt;/foo/bar/baz.txt&lt;/code&gt;, we're now only dealing with &lt;code&gt;baz.txt&lt;/code&gt; - as an &lt;code&gt;OsStr&lt;/code&gt;, &lt;em&gt;not&lt;/em&gt; a utf-8 &lt;code&gt;String&lt;/code&gt;. We can still have random bytes.&lt;/p&gt;
&lt;p&gt;We then map this result through &lt;code&gt;split_file_at_dot&lt;/code&gt;, which behaves like so:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, return &lt;code&gt;(Some(&quot;foo&quot;), None)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For &lt;code&gt;&quot;foo.bar&quot;&lt;/code&gt;, return &lt;code&gt;(Some(&quot;foo&quot;), Some(&quot;bar&quot;))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For &lt;code&gt;&quot;foo.bar.baz&quot;&lt;/code&gt;, return &lt;code&gt;(Some(&quot;foo.bar&quot;), Some(&quot;baz&quot;))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;and_then&lt;/code&gt;, we only return &lt;code&gt;after&lt;/code&gt; if &lt;code&gt;before&lt;/code&gt; wasn't &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If we spelled out everything, we'd have:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;pub fn extension(&amp;amp;self) -&amp;gt; Option&amp;lt;&amp;amp;OsStr&amp;gt; {
        if let Some(file_name) = self.file_name() {
                let (before, after) = split_file_at_dot(file_name);
                if let Some(before) {
                        // note: `after` is already an `Option&amp;lt;&amp;amp;OsStr&amp;gt;` - it
                        // might still be `None`.
                        return after
                }
        }
        None
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem is carefully modelled. We can look at &lt;em&gt;what&lt;/em&gt; we're manipulating just by looking at its type. If it might not exist, it's an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;! If it's a path with multiple components, it's a &lt;code&gt;&amp;amp;Path&lt;/code&gt; (or its owned counterpart, &lt;code&gt;PathBuf&lt;/code&gt;). If it's just part of a path, it's an &lt;code&gt;&amp;amp;OsStr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Of course there's a learning curve. Of course there's more concepts involved than just throwing for loops at byte slices and seeing what sticks, like the Go library does.&lt;/p&gt;
&lt;p&gt;But the result is a high-performance, reliable and type-safe library.&lt;/p&gt;
&lt;p&gt;It's worth it.&lt;/p&gt;
&lt;p&gt;Speaking of Rust, we haven't seen how it handles the whole “mode” thing yet.&lt;/p&gt;
&lt;p&gt;So &lt;code&gt;std::fs::Metadata&lt;/code&gt; has &lt;code&gt;is_dir()&lt;/code&gt; and &lt;code&gt;is_file()&lt;/code&gt;, which return booleans. It also has &lt;code&gt;len()&lt;/code&gt;, which returns an &lt;code&gt;u64&lt;/code&gt; (unsigned 64-bit integer).&lt;/p&gt;
&lt;p&gt;It has &lt;code&gt;created()&lt;/code&gt;, &lt;code&gt;modified()&lt;/code&gt;, and &lt;code&gt;accessed()&lt;/code&gt;, all of which return an &lt;code&gt;Option&amp;lt;SystemTime&amp;gt;&lt;/code&gt;. Again - the types inform us on what scenarios are possible. Access timestamps might not exist at all.&lt;/p&gt;
&lt;p&gt;The returned time is not an &lt;code&gt;std::time::Instant&lt;/code&gt; - it's an &lt;code&gt;std::time::SystemTime&lt;/code&gt; - the documentation tells us the difference:&lt;/p&gt;
&lt;blockquote readability=&quot;30.500860585198&quot;&gt;
&lt;p&gt;A measurement of the system clock, useful for talking to external entities like the file system or other processes.&lt;/p&gt;
&lt;p&gt;Distinct from the &lt;a href=&quot;https://doc.rust-lang.org/std/time/struct.Instant.html&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; type, this time measurement &lt;strong&gt;is not monotonic&lt;/strong&gt;. This means that you can save a file to the file system, then save another file to the file system, &lt;strong&gt;and the second file has a &lt;code&gt;SystemTime&lt;/code&gt; measurement earlier than the first&lt;/strong&gt;. In other words, an operation that happens after another operation in real time may have an earlier &lt;code&gt;SystemTime&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Consequently, comparing two &lt;code&gt;SystemTime&lt;/code&gt; instances to learn about the duration between them returns a &lt;a href=&quot;https://doc.rust-lang.org/std/result/enum.Result.html&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; instead of an infallible &lt;a href=&quot;https://doc.rust-lang.org/std/time/struct.Duration.html&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; to indicate that this sort of time drift may happen and needs to be handled.&lt;/p&gt;
&lt;p&gt;Although a &lt;code&gt;SystemTime&lt;/code&gt; cannot be directly inspected, the &lt;a href=&quot;https://doc.rust-lang.org/std/time/constant.UNIX_EPOCH.html&quot;&gt;&lt;code&gt;UNIX_EPOCH&lt;/code&gt;&lt;/a&gt; constant is provided in this module as an anchor in time to learn information about a &lt;code&gt;SystemTime&lt;/code&gt;. By calculating the duration from this fixed point in time, a &lt;code&gt;SystemTime&lt;/code&gt; can be converted to a human-readable time, or perhaps some other string representation.&lt;/p&gt;
&lt;p&gt;The size of a &lt;code&gt;SystemTime&lt;/code&gt; struct may vary depending on the target operating system.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://doc.rust-lang.org/std/time/struct.SystemTime.html&quot;&gt;https://doc.rust-lang.org/std/time/struct.SystemTime.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What about permissions? Well, there it is:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;pub fn permissions(&amp;amp;self) -&amp;gt; Permissions
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A &lt;code&gt;Permissions&lt;/code&gt; type! Just for that! And we can afford it, too - because types don't cost anything at runtime. Everything probably ends up inlined anyway.&lt;/p&gt;
&lt;p&gt;What does it expose?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;pub fn readonly(&amp;amp;self) -&amp;gt; bool {}
pub fn set_readonly(&amp;amp;mut self, readonly: bool) {}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Well! It exposes &lt;em&gt;only what all supported operating systems have in common&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Can we still get Unix permission? Of course! But &lt;em&gt;only&lt;/em&gt; on Unix:&lt;/p&gt;
&lt;blockquote readability=&quot;11.528189910979&quot;&gt;
&lt;p&gt;Representation of the various permissions on a file.&lt;/p&gt;
&lt;p&gt;This module only currently provides one bit of information, &lt;a href=&quot;https://doc.rust-lang.org/std/fs/struct.Permissions.html#method.readonly&quot;&gt;&lt;code&gt;readonly&lt;/code&gt;&lt;/a&gt;, which is exposed on all currently supported platforms. Unix-specific functionality, such as mode bits, is available through the &lt;a href=&quot;https://doc.rust-lang.org/std/os/unix/fs/trait.PermissionsExt.html&quot;&gt;&lt;code&gt;PermissionsExt&lt;/code&gt;&lt;/a&gt; trait.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://doc.rust-lang.org/std/fs/struct.Permissions.html&quot;&gt;https://doc.rust-lang.org/std/fs/struct.Permissions.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;std::os::unix::fs::PermissionsExt&lt;/code&gt; is only compiled in on Unix, and exposes the following functions:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn mode(&amp;amp;self) -&amp;gt; u32 {}
fn set_mode(&amp;amp;mut self, mode: u32) {}
fn from_mode(mode: u32) -&amp;gt; Self {}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The documentation makes it &lt;em&gt;really clear&lt;/em&gt; it's Unix-only:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/unix-only.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;But it's not just documentation. This sample program will compile and run on Linux (and macOS, etc.)&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;use std::fs::File;
use std::os::unix::fs::PermissionsExt;

fn main() -&amp;gt; std::io::Result&amp;lt;()&amp;gt; {
    let f = File::open(&quot;/usr/bin/man&quot;)?;
    let metadata = f.metadata()?;
    let permissions = metadata.permissions();

    println!(&quot;permissions: {:o}&quot;, permissions.mode());
    Ok(())
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet
permissions: 100755
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But will fail to compile on Windows:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet
error[E0433]: failed to resolve: could not find `unix` in `os`
 --&amp;gt; src\main.rs:2:14
  |
2 | use std::os::unix::fs::PermissionsExt;
  |              ^^^^ could not find `unix` in `os`

error[E0599]: no method named `mode` found for type `std::fs::Permissions` in the current scope
 --&amp;gt; src\main.rs:9:47
  |
9 |     println!(&quot;permissions: {:o}&quot;, permissions.mode());
  |                                               ^^^^ method not found in `std::fs::Permissions`

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0433, E0599.
For more information about an error, try `rustc --explain E0433`.
error: could not compile `rustfun`.

To learn more, run the command again with --verbose.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;How can we make a program that runs on Windows too? The same way the standard library only exposes &lt;code&gt;PermissionsExt&lt;/code&gt; on Unix: with attributes.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;use std::fs::File;
#[cfg(target_family = &quot;unix&quot;)]
use std::os::unix::fs::PermissionsExt;

fn main() -&amp;gt; std::io::Result&amp;lt;()&amp;gt; {
    let arg = std::env::args().nth(1).unwrap();
    let f = File::open(&amp;amp;arg)?;
    let metadata = f.metadata()?;
    let permissions = metadata.permissions();

    #[cfg(target_family = &quot;unix&quot;)]
    {
        println!(&quot;permissions: {:o}&quot;, permissions.mode());
    }

    #[cfg(target_family = &quot;windows&quot;)]
    {
        println!(&quot;readonly? {:?}&quot;, permissions.readonly());
    }

    Ok(())
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Those aren't &lt;code&gt;#ifdef&lt;/code&gt; - they're not preprocessor directives. There's no risk of forgetting an &lt;code&gt;#endif&lt;/code&gt;. And if you miss if/else chains, &lt;a href=&quot;https://github.com/alexcrichton/cfg-if&quot;&gt;there's a crate for that&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's that sample program on Linux:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet -- /usr/bin/man
permissions: 100755
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And on Windows:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ cargo run --quiet -- Cargo.toml
readonly? false
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Can you do that in Go? Sure! Kind of!&lt;/p&gt;
&lt;p&gt;There's two ways to do something similar, and both involve multiple files.&lt;/p&gt;
&lt;p&gt;Here's one:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go mod init github.com/fasterthanlime/gofun
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;main.go&lt;/code&gt;, we need:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import &quot;os&quot;

func main() {
        poke(os.Args[1])
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;poke_windows.go&lt;/code&gt;, we need:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;os&quot;
)

func poke(path string) {
        stats, _ := os.Stat(path)
        fmt.Printf(&quot;readonly? %v\n&quot;, (stats.Mode() &amp;amp; 0o600) == 0);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And in &lt;code&gt;poke_unix.go&lt;/code&gt;, we need:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// +build !windows

package main

import (
        &quot;fmt&quot;
        &quot;os&quot;
)

func poke(path string) {
                stats, _ := os.Stat(path)
                fmt.Printf(&quot;permissions: %o\n&quot;, stats.Mode() &amp;amp; os.ModePerm);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note how the &lt;code&gt;_windows.go&lt;/code&gt; suffix is magic - it'll get automatically excluded on non-Windows platforms. There's no magic suffix for Unix systems though!&lt;/p&gt;
&lt;p&gt;So we have to add a &lt;a href=&quot;https://golang.org/pkg/go/build/&quot;&gt;build constraint&lt;/a&gt;, which is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A comment&lt;/li&gt;
&lt;li&gt;That must be “near the top of the file”&lt;/li&gt;
&lt;li&gt;That can only be preceded by blank space&lt;/li&gt;
&lt;li&gt;That must appear before the package clause&lt;/li&gt;
&lt;li&gt;That has its own language&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;From the docs:&lt;/p&gt;
&lt;blockquote readability=&quot;29&quot;&gt;
&lt;p&gt;A build constraint is evaluated as the OR of space-separated options. Each option evaluates as the AND of its comma-separated terms. Each term consists of letters, digits, underscores, and dots. A term may be negated with a preceding !. For example, the build constraint:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// +build linux,386 darwin,!cgo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;corresponds to the boolean formula:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(linux AND 386) OR (darwin AND (NOT cgo))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A file may have multiple build constraints. The overall constraint is the AND of the individual constraints. That is, the build constraints:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// +build linux darwin&lt;/code&gt;&lt;br/&gt;&lt;code&gt;// +build 386&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;corresponds to the boolean formula:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(linux OR darwin) AND 386&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fun! Fun fun fun. So, on Linux, we get:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go build
$ ./gofun /usr/bin/man
permissions: 755
$ ./gofun /etc/hosts
permissions: 644
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And on Windows, we get:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;&amp;gt; go build
&amp;gt; .\gofun.exe .\main.go
readonly? false
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, &lt;em&gt;at least there's a way&lt;/em&gt; to write platform-specific code in Go.&lt;/p&gt;
&lt;p&gt;In practice, it gets old very quickly. You now have related code split across multiple files, even if &lt;em&gt;only one&lt;/em&gt; of the functions is platform-specific.&lt;/p&gt;
&lt;p&gt;Build constraints override the magic suffixes, so it's never obvious exactly which files are compiled in. You also have to duplicate (and keep in sync!) function signatures all over the place.&lt;/p&gt;
&lt;p&gt;It's… a hack. A shortcut. And an annoying one, at that.&lt;/p&gt;
&lt;p&gt;So what happens when you make it hard for users to do things the right way? (The right way being, in this case, to &lt;em&gt;not&lt;/em&gt; compile in code that isn't relevant for a given platform). They take shortcuts, too.&lt;/p&gt;
&lt;p&gt;Even in the official Go distribution, a lot of code just switches on the value of &lt;code&gt;runtime.GOOS&lt;/code&gt; at, well, run-time:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// src/net/file_test.go

func TestFileConn(t *testing.T) {
        switch runtime.GOOS {
        case &quot;plan9&quot;, &quot;windows&quot;:
                t.Skipf(&quot;not supported on %s&quot;, runtime.GOOS)
        }

        for _, tt := range fileConnTests {
                if !testableNetwork(tt.network) {
                        t.Logf(&quot;skipping %s test&quot;, tt.network)
                        continue
                }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;“But these are little things!”&lt;/p&gt;
&lt;p&gt;They're all little things. They add up. Quickly.&lt;/p&gt;
&lt;p&gt;And they're symptomatic of the problems with “the Go way” in general. The Go way is to half-ass things.&lt;/p&gt;
&lt;p&gt;The Go way is to patch things up until they sorta kinda work, in the name of simplicity.&lt;/p&gt;
&lt;h2 id=&quot;lots-of-little-things&quot;&gt;Lots of little things&lt;/h2&gt;
&lt;p&gt;Speaking of little things, let's consider what pushed me over the edge and provoked me to write this whole rant in the first place.&lt;/p&gt;
&lt;p&gt;It was &lt;a href=&quot;https://github.com/getlantern/idletiming&quot;&gt;this package&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What does it do?&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Provides mechanisms for adding idle timeouts to &lt;code&gt;net.Conn&lt;/code&gt; and &lt;code&gt;net.Listener&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Why do we need it?&lt;/p&gt;
&lt;p&gt;Because the real-world is messy.&lt;/p&gt;
&lt;p&gt;If you do a naive HTTP request in Go:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;io/ioutil&quot;
        &quot;net/http&quot;
)

func main() {
        res, err := http.Get(&quot;http://perdu.com&quot;)
        must(err)
        defer res.Body.Close() // this is a *very* common gotcha

        body, err := ioutil.ReadAll(res.Body)
        must(err)
        fmt.Printf(&quot;%s&quot;, string(body))
}

func must(err error) {
        if err != nil {
                panic(err)
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go run main.go
&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Vous Etes Perdu ?&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Perdu sur l'Internet ?&amp;lt;/h1&amp;gt;&amp;lt;h2&amp;gt;Pas de panique, on va vous aider&amp;lt;/h2&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;pre&amp;gt;    * &amp;lt;----- vous &amp;amp;ecirc;tes ici&amp;lt;/pre&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then it works. When it works.&lt;/p&gt;
&lt;p&gt;If the server never accepts your connection - which might &lt;em&gt;definitely&lt;/em&gt; happen if it's dropping all the traffic to the relevant port, then you'll just hang forever.&lt;/p&gt;
&lt;p&gt;If you &lt;em&gt;don't&lt;/em&gt; want to hang forever, you have to do something else.&lt;/p&gt;
&lt;p&gt;Like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;fmt&quot;
        &quot;io/ioutil&quot;
        &quot;net&quot;
        &quot;net/http&quot;
        &quot;time&quot;
)

func main() {
        client := &amp;amp;http.Client{
                Transport: &amp;amp;http.Transport{
                        DialContext: (&amp;amp;net.Dialer{
                                Timeout: 5 * time.Second,
                        }).DialContext,
                },
        }

        req, err := http.NewRequest(&quot;GET&quot;, &quot;http://perdu.com&quot;, nil)
        must(err)

        res, err := client.Do(req)
        must(err)
        defer res.Body.Close()

        body, err := ioutil.ReadAll(res.Body)
        must(err)
        fmt.Printf(&quot;%s&quot;, string(body))
}

func must(err error) {
        if err != nil {
                panic(err)
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Not so simple, but, eh, whatever, it works.&lt;/p&gt;
&lt;p&gt;Unless the server accepts your connection, says it's going to send a bunch of bytes, and then &lt;em&gt;never sends you anything&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Which definitely, 100%, for-sure, if-it-can-happen-it-does-happen, happens.&lt;/p&gt;
&lt;p&gt;And then you hang forever.&lt;/p&gt;
&lt;p&gt;To avoid that, you can set a timeout on &lt;em&gt;the whole request&lt;/em&gt;, like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;package main

import (
        &quot;context&quot;
        &quot;fmt&quot;
        &quot;io/ioutil&quot;
        &quot;net/http&quot;
        &quot;time&quot;
)

func main() {
        ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
        defer cancel()
        req, err := http.NewRequestWithContext(ctx, &quot;GET&quot;, &quot;http://perdu.com&quot;, nil)
        must(err)

        res, err := http.DefaultClient.Do(req)
        must(err)
        defer res.Body.Close()

        body, err := ioutil.ReadAll(res.Body)
        must(err)
        fmt.Printf(&quot;%s&quot;, string(body))
}

func must(err error) {
        if err != nil {
                panic(err)
        }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But that doesn't work if you're planning on uploading something large, for example. How many seconds is enough to upload a large file? Is 30 seconds enough? And how do you know you're spending those seconds uploading, and not waiting for the server to accept your request?&lt;/p&gt;
&lt;p&gt;So, &lt;code&gt;getlantern/idletiming&lt;/code&gt; adds a mechanism for timing out &lt;em&gt;if there hasn't been any data transmitted in a while&lt;/em&gt;, which is distinct from a dial timeout, and doesn't force you to set a timeout on the &lt;em&gt;whole request&lt;/em&gt;, so that it works for arbitrarily large uploads.&lt;/p&gt;
&lt;p&gt;The repository looks innocent enough:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/idle-repo.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Just a couple files! And even some tests. Also - it works. I'm using it in production. I'm happy with it.&lt;/p&gt;
&lt;p&gt;There's just.. one thing.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ git clone https://github.com/getlantern/idletiming
Cloning into 'idletiming'...
(cut)
$ cd idletiming
$ go mod graph | wc -l
196
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm sorry?&lt;/p&gt;
&lt;p&gt;One hundred and ninety-six packages?&lt;/p&gt;
&lt;p&gt;Well, I mean… lots of small, well-maintained libraries isn't necessarily a bad idea - I never really agreed that the takeaway from the &lt;code&gt;left-pad&lt;/code&gt; disaster was “small libraries are bad”.&lt;/p&gt;
&lt;p&gt;Let's look at what we've got there:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;$ go mod graph
github.com/getlantern/idletiming github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;6b0c040a1902181f0a2b1d5b455b455b46595b595b5b5a585a5a5f5b5d595946085d5f5c580e580e0f5a5358&quot;&gt;[email protected]&lt;/a&gt;
github.com/getlantern/idletiming github.com/getlantern/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;583e3c3b372d362c182e6876687668756a6869616861696a696c6a6d686e753e6061393e3c6f6b6e6f3b6c&quot;&gt;[email protected]&lt;/a&gt;
github.com/getlantern/idletiming github.com/getlantern/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;20474f4c4f476056100e100e100d12101119101813101017141912100d144546124517191843124417&quot;&gt;[email protected]&lt;/a&gt;
github.com/getlantern/idletiming github.com/getlantern/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;482f3a3c3a292b23083e7866786678657a78797e78707a7c79717d7a7a70652b2a2e7e7f2c7b2e29782e2c&quot;&gt;[email protected]&lt;/a&gt;
github.com/getlantern/idletiming github.com/getlantern/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;ef829b86828aaf99dfc1dfc1dfc2dddfded8dfdeded8ded6dcdcdcdec28d8edededb8adb8ed7dd8ddf&quot;&gt;[email protected]&lt;/a&gt;
github.com/getlantern/idletiming github.com/getlantern/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;fe909b8a86be88ced0ced0ced3cccecfc7cecfcfcecccccecccec7d3c7c7cfcc9a9bc898c7ca989a&quot;&gt;[email protected]&lt;/a&gt;
github.com/getlantern/idletiming github.com/stretchr/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;d6a2b3a5a2bfb0af96a0e7f8e2f8e6&quot;&gt;[email protected]&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm sure all of these are reasonable. Lantern is a “site unblock” product, so it has to deal with networking a lot, it makes sense that they'd have their own libraries for a bunch of things, including logging (&lt;code&gt;golog&lt;/code&gt;) and some network extensions (&lt;code&gt;netx&lt;/code&gt;). &lt;code&gt;testify&lt;/code&gt; is a well-known set of testing helpers, I use it too!&lt;/p&gt;
&lt;p&gt;Let's keep going:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;81e6eee0f3e8f2f5e0c1f7b1afb1afb1acb3b1b3b1b1b0b2b0b0b5b1b7b3b3ace2b7b5b6b2e4b2e4e5b0b9b2&quot;&gt;[email protected]&lt;/a&gt; github.com/Shopify/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;b2c1d3c0d3dfd3f2c4839c80819c83&quot;&gt;[email protected]&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Uhh….&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;fc9b939d8e958f889dbc8accd2ccd2ccd1cecccecccccdcfcdcdc8cccaceced19fcac8cbcf99cf9998cdc4cf&quot;&gt;[email protected]&lt;/a&gt; github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;1771647978637e716e57612639233925&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;44232b25362d3730250432746a746a7469767476747475777575707472767669277270737721772120757c77&quot;&gt;[email protected]&lt;/a&gt; github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;5b3c37343c1b2d6b756b756b76696b6a636b6f6a626a6c6963696e&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;3f58505e4d564c4b5e7f490f110f110f120d0f0d0f0f0e0c0e0e0b0f090d0d125c090b080c5a0c5a5b0e070c&quot;&gt;[email protected]&lt;/a&gt; github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;d1a2a1bda4bfbafcb9b4b2fcb6be91a7e1ffe2ffe2&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;8ee9e1effce7fdfaefcef8bea0bea0bea3bcbebcbebebfbdbfbfbabeb8bcbca3edb8bab9bdebbdebeabfb6bd&quot;&gt;[email protected]&lt;/a&gt; github.com/garyburd/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;6e1c0b0a0709012e185f4058405e&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;31565e5043584245507147011f011f011c03010301010002000005010703031c520705060254025455000902&quot;&gt;[email protected]&lt;/a&gt; github.com/golang/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;91e1e3fee5fef3e4f7d1e7a0bfa2bfa3&quot;&gt;[email protected]&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Wait, I think we..&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;bddad2dccfd4cec9dcfdcb8d938d938d908f8d8f8d8d8c8e8c8c898d8b8f8f90de8b898a8ed88ed8d98c858e&quot;&gt;[email protected]&lt;/a&gt; github.com/influxdata/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;85ecebe3e9f0fde1e7b4a8e6e9ece0ebf1c5f3b5abb5abb5a8b7b5b4bcb5bd&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;a0c7cfc1d2c9d3d4c1e0d6908e908e908d92909290909193919194909692928dc396949793c593c5c4919893&quot;&gt;[email protected]&lt;/a&gt; github.com/klauspost/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;365546435f5276400718041807&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;42252d23302b3136230234726c726c726f70727072727371737376727470706f217476757127712726737a71&quot;&gt;[email protected]&lt;/a&gt; github.com/klauspost/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;d9abbcbcbdaab6b5b6b4b6b799afe8f7e0f7eb&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;2a4d454b5843595e4b6a5c1a041a041a07181a181a1a1b191b1b1e1a1c181807491c1e1d194f194f4e1b1219&quot;&gt;[email protected]&lt;/a&gt; github.com/kylelemons/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;05626a61606770624573342b342b35&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;680f07091a011b1c09281e5846584658455a585a5858595b59595c585e5a5a450b5e5c5f5b0d5b0d0c59505b&quot;&gt;[email protected]&lt;/a&gt; github.com/onsi/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;eb8c8285808c84ab9ddac5dadbc5da&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;83e4ece2f1eaf0f7e2c3f5b3adb3adb3aeb1b3b1b3b3b2b0b2b2b7b3b5b1b1aee0b5b7b4b0e6b0e6e7b2bbb0&quot;&gt;[email protected]&lt;/a&gt; github.com/onsi/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;53343c3e3634321325627d647d63&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;56313937243f252237162066786678667b64666466666765676762666064647b356062616533653332676e65&quot;&gt;[email protected]&lt;/a&gt; github.com/openconfig/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;dbbcb5b6b29badebf5ebf5ebf6e9ebeae2ebe3e9e8eae3efebeaeff6e3e2b9&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;74131b15061d0700153402445a445a4459464446444445474545404442464659174240434711471110454c47&quot;&gt;[email protected]&lt;/a&gt; github.com/openconfig/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;9eecfbf8fbecfbf0fdfbdee8aeb0aeb0aeb3acaeafa7aea9aca9aeafaba6ad&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;caada5abb8a3b9beab8abcfae4fae4fae7f8faf8fafafbf9fbfbfefafcf8f8e7a9fcfefdf9aff9afaefbf2f9&quot;&gt;[email protected]&lt;/a&gt; github.com/prometheus/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;72111e1b171c062d151d1e131c153204435c435c42&quot;&gt;[email protected]&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I can understand some of these but…&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-shell&quot;&gt;github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;74131b15061d0700153402445a445a4459464446444445474545404442464659174240434711471110454c47&quot;&gt;[email protected]&lt;/a&gt; github.com/satori/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;4b2c24653e3e222f0b3d7a6579657b&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;24434b45564d5750456452140a140a1409161416141415171515101412161609471210131741174140151c17&quot;&gt;[email protected]&lt;/a&gt; github.com/stretchr/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;71051402051817083107405f425f41&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;62050d03100b1116032214524c524c524f50525052525351535356525450504f015456555107510706535a51&quot;&gt;[email protected]&lt;/a&gt; github.com/templexxx/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;680b181d0e0d091c281e5846584658455a585950585f5a5c58595a595a5d450b&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;ccaba3adbea5bfb8ad8cbafce2fce2fce1fefcfefcfcfdfffdfdf8fcfafefee1affaf8fbffa9ffa9a8fdf4ff&quot;&gt;[email protected]&lt;/a&gt; github.com/templexxx/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;a2dacdd0e2d4928c928c928f9092939a939290919291929496958f96c79b90c4&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;395e56584b504a4d58794f0917091709140b090b0909080a08080d090f0b0b145a0f0d0e0a5c0a5c5d08010a&quot;&gt;[email protected]&lt;/a&gt; github.com/tjfoc/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;5a3d3729371a2c6b746a746b&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;10777f7162796364715066203e203e203d22202220202123212124202622223d732624272375237574212823&quot;&gt;[email protected]&lt;/a&gt; github.com/xtaci/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;6a01091a470d052a1c5f445e445f&quot;&gt;[email protected]&lt;/a&gt;+incompatible
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;ec8b838d9e859f988dac9adcc2dcc2dcc1dedcdedcdcdddfddddd8dcdadedec18fdad8dbdf89df8988ddd4df&quot;&gt;[email protected]&lt;/a&gt; github.com/xtaci/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;cea2a1bdbdb7ada1a0a08eb8fee0fee0fee3fcfefff7fef8fefcfffefbfffdfce3f6aaa8&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;ef88808e9d869c9b8eaf99dfc1dfc1dfc2dddfdddfdfdedcdededbdfd9ddddc28cd9dbd8dc8adc8a8bded7dc&quot;&gt;[email protected]&lt;/a&gt; golang.org/x/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;8ce2e9f8ccfabca2bca2bca1bebcbdb5bcb5bdbebdbabcbbbdbca1beb8e9bdb5eee8e9eebceabe&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;04636b65766d7770654472342a342a3429363436343435373535303432363629673230333761376160353c37&quot;&gt;[email protected]&lt;/a&gt; golang.org/x/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;32414b417244021c021c021f0002030b020b03000306030b01001f50510b04055754515306500a&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;66010907140f151207261056485648564b54565456565755575752565054544b055052515503550302575e55&quot;&gt;[email protected]&lt;/a&gt; golang.org/x/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;2e5a47434b6e581e001e001e031c1e1f171e1d1e161c1e1c161c1903174a1c1a4b161c1c191c4c1a&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;37505856455e444356774107190719071a05070507070604060603070105051a540103000452045253060f04&quot;&gt;[email protected]&lt;/a&gt; golang.org/x/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;cebaa1a1a2bd8eb8fee0fee0fee3fcfefff7fef7fffcfff6fbf8fdf8e3f6f9aaf7a8fef7adfbaaf6f7&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;1a7d757b6873696e7b5a6c2a342a342a37282a282a2a2b292b2b2e2a2c282837792c2e2d297f297f7e2b2229&quot;&gt;[email protected]&lt;/a&gt; google.golang.org/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;baddc8cad9facc8b948889948b&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;22454d43504b5156436254120c120c120f10121012121311131316121410100f411416151147114746131a11&quot;&gt;[email protected]&lt;/a&gt; gopkg.in/bsm/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;70021104151c191d19045e06413006415e405e405d42404146404242404145444941495d14124144&quot;&gt;[email protected]&lt;/a&gt;&amp;gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;96f1f9f7e4ffe5e2f7d6e0a6b8a6b8a6bba4a6a4a6a6a7a5a7a7a2a6a0a4a4bbf5a0a2a1a5f3a5f3f2a7aea5&quot;&gt;[email protected]&lt;/a&gt; gopkg.in/jcmturner/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;96f1f9fff2f3f8e2ffe2efb8e0a5d6e0a5b8a6b8a6&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;0f68606e7d667c7b6e4f793f213f213f223d3f3d3f3f3e3c3e3e3b3f393d3d226c393b383c6a3c6a6b3e373c&quot;&gt;[email protected]&lt;/a&gt; gopkg.in/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;6012050409134e16542016544e524e54&quot;&gt;[email protected]&lt;/a&gt;
github.com/aristanetworks/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;086f67697a617b7c69487e3826382638253a383a3838393b39393c383e3a3a256b3e3c3f3b6d3b6d6c39303b&quot;&gt;[email protected]&lt;/a&gt; gopkg.in/&lt;a href=&quot;https://fasterthanli.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;83fae2eeefadf5b1c3f5b1adb1adb1&quot;&gt;[email protected]&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;STOP! Just stop. Stop it already.&lt;/p&gt;
&lt;p&gt;It keeps going on, and on. There's everything.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;, &lt;a href=&quot;https://grpc.io/&quot;&gt;GRPC&lt;/a&gt;, which in turns needs &lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;protobuf&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/InfluxDB&quot;&gt;InfluxDB&lt;/a&gt;, an &lt;a href=&quot;https://github.com/Shopify/sarama&quot;&gt;Apache Kafka client&lt;/a&gt;, a &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt; client, &lt;a href=&quot;https://en.wikipedia.org/wiki/Snappy_(compression)&quot;&gt;Snappy&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Zstandard&quot;&gt;Zstandard&lt;/a&gt;, &lt;a href=&quot;https://lz4.github.io/lz4/&quot;&gt;LZ4&lt;/a&gt;, &lt;a href=&quot;https://github.com/shopify/toxiproxy&quot;&gt;a chaos-testing TCP proxy&lt;/a&gt;, three other logging packages, and client libraries for various Google Cloud services.&lt;/p&gt;
&lt;p&gt;What could &lt;em&gt;possibly&lt;/em&gt; justify all this?&lt;/p&gt;
&lt;p&gt;Let's review:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// `idletiming_listener.go`

package idletiming

import (
        &quot;net&quot;
        &quot;time&quot;
)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Only built-in imports. Good.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// `idletiming_conn.go`

// package idletiming provides mechanisms for adding idle timeouts to net.Conn
// and net.Listener.
package idletiming

import (
        &quot;errors&quot;
        &quot;io&quot;
        &quot;net&quot;
        &quot;sync&quot;
        &quot;sync/atomic&quot;
        &quot;time&quot;

        &quot;github.com/getlantern/golog&quot;
        &quot;github.com/getlantern/mtime&quot;
        &quot;github.com/getlantern/netx&quot;
)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This one is the meat of the library, so to say, and it requires a few of the &lt;code&gt;getlantern&lt;/code&gt; packages we've seen:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/golog-graph.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It does end up importing &lt;code&gt;golang.org/x/net/http2/hpack&lt;/code&gt; - but that's just because of &lt;code&gt;net/http&lt;/code&gt;. These are built-ins, so let's ignore them for now.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getlantern/hex&lt;/code&gt; is self-contained, so, moving on to &lt;code&gt;getlantern/mtime&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/mtime-graph.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;That's it? What's why Go ends up fetching &lt;em&gt;the entire&lt;/em&gt; &lt;code&gt;github.com/aristanetworks/goarista&lt;/code&gt; repository, and &lt;em&gt;all its transitive dependencies&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;What does &lt;code&gt;aristanetworks/goariasta/monotime&lt;/code&gt; even do?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/monotime-github.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Mh. Let's look inside &lt;code&gt;issue15006.s&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;// Copyright (c) 2016 Arista Networks, Inc.
// Use of this source code is governed by the Apache License 2.0
// that can be found in the COPYING file.

// This file is intentionally empty.
// It's a workaround for https://github.com/golang/go/issues/15006
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I uh… okay.&lt;/p&gt;
&lt;p&gt;What does &lt;a href=&quot;https://github.com/golang/go/issues/15006&quot;&gt;that issue&lt;/a&gt; say?&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;This is known and I think the empty assembly file is the accepted fix.&lt;/p&gt;
&lt;p&gt;It's a rarely used feature and having an assembly file also make it standout.&lt;/p&gt;
&lt;p&gt;I don't think we should make this unsafe feature easy to use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And later (emphasis mine):&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;I agree with Minux. If you're looking at a Go package to import, you might want to know if it does any unsafe trickery. Currently you have to grep for an import of unsafe &lt;strong&gt;and look for non-.go files&lt;/strong&gt;. If we got rid of the requirement for the empty .s file, then you'd have to grep for //go:linkname also.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That's… that's certainly a stance.&lt;/p&gt;
&lt;p&gt;But &lt;em&gt;which&lt;/em&gt; unsafe feature exactly?&lt;/p&gt;
&lt;p&gt;Let's look at &lt;code&gt;nanotime.go&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// Copyright (c) 2016 Arista Networks, Inc.
// Use of this source code is governed by the Apache License 2.0
// that can be found in the COPYING file.

// Package monotime provides a fast monotonic clock source.
package monotime

import (
        &quot;time&quot;
        _ &quot;unsafe&quot; // required to use //go:linkname
)

//go:noescape
//go:linkname nanotime runtime.nanotime
func nanotime() int64

// Now returns the current time in nanoseconds from a monotonic clock.
// The time returned is based on some arbitrary platform-specific point in the
// past.  The time returned is guaranteed to increase monotonically at a
// constant rate, unlike time.Now() from the Go standard library, which may
// slow down, speed up, jump forward or backward, due to NTP activity or leap
// seconds.
func Now() uint64 {
        return uint64(nanotime())
}

// Since returns the amount of time that has elapsed since t. t should be
// the result of a call to Now() on the same machine.
func Since(t uint64) time.Duration {
        return time.Duration(Now() - t)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's it. That's the whole package.&lt;/p&gt;
&lt;p&gt;The unsafe feature in question is being able to access unexported (read: lowercase, &lt;em&gt;sigh&lt;/em&gt;) symbols from the Go standard library.&lt;/p&gt;
&lt;p&gt;Why is that even needed?&lt;/p&gt;
&lt;p&gt;If you remember from earlier, Rust has two types for time: &lt;code&gt;SystemTime&lt;/code&gt;, which corresponds to your… system's… time, which can be adjusted via &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_Time_Protocol&quot;&gt;NTP&lt;/a&gt;. It can go back, so subtraction can fail.&lt;/p&gt;
&lt;p&gt;And it has &lt;code&gt;Instant&lt;/code&gt;, which is weakly monotonically increasing - at worse, it'll give the same value twice, but never &lt;em&gt;less&lt;/em&gt; than the previous value. This is useful to measure elapsed time &lt;em&gt;within a process&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;How did Go solve that problem?&lt;/p&gt;
&lt;p&gt;At first, &lt;a href=&quot;https://github.com/golang/go/issues/16658&quot;&gt;it didn't&lt;/a&gt;. Monotonic time measurement is a hard problem, so it was only available internally, in the standard library, not for regular Go developers (a common theme):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/expose-nanotime.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And then, &lt;a href=&quot;https://github.com/golang/go/issues/12914&quot;&gt;it did&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sort of. In the most “Go way” possible.&lt;/p&gt;
&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;I thought some more about the suggestion above to reuse &lt;code&gt;time.Time&lt;/code&gt; with a special location. The special location still seems wrong, but what if we reuse &lt;code&gt;time.Time&lt;/code&gt; by storing inside it both a wall time and a monotonic time, fetched one after the other?&lt;/p&gt;
&lt;p&gt;Then there are two kinds of &lt;code&gt;time.Time&lt;/code&gt;s: those with wall &lt;em&gt;and&lt;/em&gt; monotonic stored inside (let's call those “wall+monotonic Times”) and those with only wall stored inside (let's call those “wall-only Times”).&lt;/p&gt;
&lt;p&gt;Suppose further that:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;time.Now&lt;/code&gt; returns a wall+monotonic Time.&lt;/li&gt;
&lt;li&gt;for &lt;code&gt;t.Add(d)&lt;/code&gt;, if t is a wall+monotonic Time, so is the result; if t is wall-only, so is the result.&lt;/li&gt;
&lt;li&gt;all other functions that return Times return wall-only Times. These include: &lt;code&gt;time.Date&lt;/code&gt;, &lt;code&gt;time.Unix&lt;/code&gt;, &lt;code&gt;t.AddDate&lt;/code&gt;, &lt;code&gt;t.In&lt;/code&gt;, &lt;code&gt;t.Local&lt;/code&gt;, &lt;code&gt;t.Round&lt;/code&gt;, &lt;code&gt;t.Truncate&lt;/code&gt;, &lt;code&gt;t.UTC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;for &lt;code&gt;t.Sub(u)&lt;/code&gt;, if t and u are both wall+monotonic, the result is computed by subtracting monotonics; otherwise the result is computed by subtracting wall times. - &lt;code&gt;t.After(u)&lt;/code&gt;, &lt;code&gt;t.Before(u)&lt;/code&gt;, &lt;code&gt;t.Equal(u)&lt;/code&gt; compare monotonics if available (just like &lt;code&gt;t.Sub(u)&lt;/code&gt;), otherwise walls.&lt;/li&gt;
&lt;li&gt;all the other functions that operate on time.Times use the wall time only. These include: &lt;code&gt;t.Day&lt;/code&gt;, &lt;code&gt;t.Format&lt;/code&gt;, &lt;code&gt;t.Month&lt;/code&gt;, &lt;code&gt;t.Unix&lt;/code&gt;, &lt;code&gt;t.UnixNano&lt;/code&gt;, &lt;code&gt;t.Year&lt;/code&gt;, and so on.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Doing this returns a kind of hybrid time from &lt;code&gt;time.Now&lt;/code&gt;: it works as a wall time but also works as a monotonic time, and future operations use the right one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, as of Go 1.9 - problem solved!&lt;/p&gt;
&lt;p&gt;If you're confused by the proposal, no worries, let's check out the release notes:&lt;/p&gt;
&lt;blockquote readability=&quot;6.9855072463768&quot;&gt;
&lt;h3 id=&quot;transparent-monotonic-time-support&quot;&gt;Transparent Monotonic Time support&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://golang.org/pkg/time/&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; package now transparently tracks monotonic time in each &lt;a href=&quot;https://golang.org/pkg/time/#Time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; value, making computing durations between two &lt;code&gt;Time&lt;/code&gt; values a safe operation in the presence of wall clock adjustments. See the &lt;a href=&quot;https://golang.org/pkg/time/#hdr-Monotonic_Clocks&quot;&gt;package docs&lt;/a&gt; and &lt;a href=&quot;https://golang.org/design/12914-monotonic&quot;&gt;design document&lt;/a&gt; for details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This changed the behavior of a number of Go packages, but, the core team knows best:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/breaking-change.png&quot; alt=&quot;&quot;/&gt; This &lt;em&gt;is&lt;/em&gt; a breaking change, but more importantly, it wasn't before the introduction of Go modules (declared “stable” as of Go 1.14) that you could require a certain Go version for a package.&lt;/p&gt;
&lt;p&gt;So, if you have a package without a minimum required Go version, you can't be sure you have the “transparent monotonic time support” of Go 1.9, and it's better to rely on &lt;code&gt;aristanetworks/goarista/monotime&lt;/code&gt;, which pulls 100+ packages, because Go packages are “simple” and they're just folders in a git repository.&lt;/p&gt;

&lt;p&gt;The change raised other questions: since &lt;code&gt;time.Time&lt;/code&gt; now sometimes packs two types of time, two calls are needed. This concern was dismissed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/two-calls.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In order for &lt;code&gt;time.Time&lt;/code&gt; not to grow, both values were &lt;em&gt;packed&lt;/em&gt; inside it, which restricted the range of times that could be represented with it:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/packing.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This issue was raised early on in the design process:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/embedded1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fasterthanli.me/img/i-want-off-mr-golangs-wild-ride/embedded2.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can check out &lt;a href=&quot;https://github.com/golang/go/issues/12914&quot;&gt;the complete thread&lt;/a&gt; for a full history.&lt;/p&gt;
&lt;h2 id=&quot;parting-words&quot;&gt;Parting words&lt;/h2&gt;
&lt;p&gt;This is just one issue. But there are many like it - this one is as good an example as any.&lt;/p&gt;
&lt;p&gt;Over and over, Go is a victim of its own mantra - “simplicity”.&lt;/p&gt;
&lt;p&gt;It constantly takes power away from its users, reserving it for itself.&lt;/p&gt;
&lt;p&gt;It constantly lies about how complicated real-world systems are, and optimize for the 90% case, ignoring correctness.&lt;/p&gt;
&lt;p&gt;It is a minefield of subtle gotchas that have very real implications - everything looks simple &lt;em&gt;on the surface&lt;/em&gt;, but nothing is.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://dave.cheney.net/2014/03/19/channel-axioms&quot;&gt;Channel Axioms&lt;/a&gt; are a good example. There is nothing explicit about them. They are invented truths, that were convenient to implement, and who everyone must now work around.&lt;/p&gt;
&lt;p&gt;Here's a fun gotcha I haven't mentioned yet:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-go&quot;&gt;// IdleTimingConn is a net.Conn that wraps another net.Conn and that times out
// if idle for more than idleTimeout.
type IdleTimingConn struct {
        // Keep 64-bit words at the top to make sure 64-bit alignment, see
        // https://golang.org/pkg/sync/atomic/#pkg-note-BUG
        lastActivityTime uint64

        // (cut)
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The documentation reads:&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;BUGS&lt;/p&gt;
&lt;p&gt;On ARM, x86-32, and 32-bit MIPS, it is the caller's responsibility to arrange for 64-bit alignment of 64-bit words accessed atomically. The first word in a variable or in an allocated struct, array, or slice can be relied upon to be 64-bit aligned.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If the condition isn't satisfied, it panics at run-time. Only on 32-bit platforms. I didn't have to go far to hit this one - I got bit by this bug multiple times in the last few years.&lt;/p&gt;
&lt;p&gt;It's a footnote. Not a compile-time check. There's an &lt;a href=&quot;https://github.com/golang/go/issues/11891&quot;&gt;in-progress lint&lt;/a&gt;, for very simple cases, because Go's simplicity made it extremely hard to check for.&lt;/p&gt;
&lt;p&gt;This fake “simplicity” runs deep in the Go ecosystem. Rust has the opposite problem - things look scary at first, but it's for a good reason. The problems tackled have inherent complexity, and it takes some effort to model them appropriately.&lt;/p&gt;
&lt;p&gt;At this point in time, I deeply regret investing in Go.&lt;/p&gt;
&lt;p&gt;Go is a Bell Labs fantasy, and not a very good one at that.&lt;/p&gt;
</description>
<pubDate>Fri, 28 Feb 2020 15:25:37 +0000</pubDate>
<dc:creator>whatever_dude</dc:creator>
<og:type>article</og:type>
<og:url>https://fasterthanli.me/blog/2020/i-want-off-mr-golangs-wild-ride/</og:url>
<og:title>I want off Mr. Golang's Wild Ride</og:title>
<og:image>https://fasterthanli.me/img/logo-square.png</og:image>
<og:description>My honeymoon with the Go language is extremely over. This article is going to have a different tone from what I've been posting the past year - it's a proper rant. And I always feel bad writing those, because, inevitably, it discusses things a lot of people have been working very hard on. In spite of that, here we are. Having invested thousands of hours into the language, and implemented several critical (to my employer) pieces of infrastructure with it, I wish I hadn't.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://fasterthanli.me/blog/2020/i-want-off-mr-golangs-wild-ride/</dc:identifier>
</item>
<item>
<title>Ask HN: How to find work while homeless?</title>
<link>https://news.ycombinator.com/item?id=22442454</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=22442454</guid>
<description>I'm at my wits end.
&lt;p&gt;I was made homeless and had my financial support dropped at the beginning of the year, and am currently staying in squats etc in the Netherlands. I have nearly no income - 10 euros a week in donations towards an open-source project I'm working on to build a live video streaming platform for the fediverse, and occasional requests for solidarity funds.&lt;/p&gt;&lt;p&gt;My situation is... not great. Half my time is taken up by anxiety around police violence, illegal evictions, my friends being arrested. Still, in the immediate term, it's better than sleeping rough.&lt;/p&gt;
&lt;p&gt;I'm not sure how to find work; I've not had a paying job in the last 8 years. I've worked on software for myself and others in hackerspaces and the like; and helped run a volunteer cafe for a large portion of last year (sinking 20+ hours a week into that fairly consistently), but I can't seem to even turn that into an actual paying cafe job. I go through bursts of sending dozens of applications a week to anything that is vaguely relevant to anything I've done in the past, and receive... mostly nothing in response.&lt;/p&gt;
&lt;p&gt;I don't know what's wrong with me. All I want is to make enough money to survive. I'm going to be dead in a few months if I can't work something out.&lt;/p&gt;
&lt;p&gt;Does anyone have any advice, at all?&lt;/p&gt;
</description>
<pubDate>Fri, 28 Feb 2020 13:02:01 +0000</pubDate>
<dc:creator>vertex-four</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=22442454</dc:identifier>
</item>
<item>
<title>Show HN: Profit Hunt - Get inspired by profitable online projects</title>
<link>http://profithunt.co</link>
<guid isPermaLink="true" >http://profithunt.co</guid>
<description>&lt;tr class=&quot;row&quot; readability=&quot;3.2786885245902&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://standuply.com/&quot; target=&quot;_blank&quot;&gt;Standuply&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Simple but effective Slack bot to run standups, meetings and polls, replacing questionnaires&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;2,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://snovian.space/news-feed/How-to-Run-Standups-and-Team-Meetings-Easily-with-Standuply&quot; target=&quot;_blank&quot;&gt;Snovian.space&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;3.5083798882682&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://remoteleaf.com/&quot; target=&quot;_blank&quot;&gt;Remote Leaf&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Web service that hand-picks high-quality remote job positions around the Internet, and sends to users the job openings that match their search settings&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;380&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://remoteleaf.com/open&quot; target=&quot;_blank&quot;&gt;Remote Leaf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.5277777777778&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;http://c2x.eastros.com/&quot; target=&quot;_blank&quot;&gt;Eastros&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Easy-to-use mobile app to backup phone contacts&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;1,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12672968&quot; target=&quot;_blank&quot;&gt;HackerNews&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;6.4561403508772&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://trainual.com/&quot; target=&quot;_blank&quot;&gt;Trainual&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A webapp to put together training courses, assign courses to employees, and track employees' progress of viewing the materials&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;160,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://trainual.com/press/training-onboarding-startup-generates-2m-arr-in-18-months/&quot; target=&quot;_blank&quot;&gt;Trainual blog&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=L3Bpk__t4f4&quot;&gt;Nathan Latka&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;5.2299465240642&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://referralrock.com/&quot; target=&quot;_blank&quot;&gt;ReferralRock&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Make it easy for small business to run referral programs (such as &quot;invite a friend and get $20&quot;), including social media sharing, sending media cards, etc&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;70,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/product/referral-rock/revenue&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.4074074074074&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.manypixels.co/&quot; target=&quot;_blank&quot;&gt;ManyPixels&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;On-demand Design Services for a Flat Monthly Fee&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;50,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://livechatninjas.com/my-startup-story-productized-service-manypixels/&quot; target=&quot;_blank&quot;&gt;LiveChatNinjas&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;5.2875&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://systeme.io/&quot; target=&quot;_blank&quot;&gt;Systeme&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A webapp to provide features for small online-business, including membership management, email marketing, and building sales funnels&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;55,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/product/systeme-io&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.5686274509804&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://flyplugins.com/wp-courseware/&quot; target=&quot;_blank&quot;&gt;FlyPlugins&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;a WordPress plugin that makes it easy to create and sell online courses&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;23,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/interview/how-building-my-own-wordpress-solution-evolved-into-24k-mrr-499a016a36&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;2.6037735849057&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.makerpad.co/&quot; target=&quot;_blank&quot;&gt;Makerpad&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A website that helps non-technical people build tech projects. It provides tutorials and tool recommendations for non-tech makers&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;55,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.makerpad.co/blog/building-without-code-and-reaching-55k-mo-in-revenue&quot; target=&quot;_blank&quot;&gt;MakerPad blog&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.5853658536585&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://mkdev.me/en&quot; target=&quot;_blank&quot;&gt;mkdev&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Two-side marketplace to hire/become a programming mentor&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;12,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/interview/how-we-make-12k-month-by-starting-a-conversation-02d83c53e6&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.5049504950495&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.manufacturefy.com/main/dashboard&quot; target=&quot;_blank&quot;&gt;Manufacturefy&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A platform that helps builders find manufacturers around the world&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;250,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.starterstory.com/stories/how-i-m-building-a-manufacturing-platform&quot; target=&quot;_blank&quot;&gt;StarterStory&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;4.2990654205607&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://ghost.org/features/&quot; target=&quot;_blank&quot;&gt;Ghost&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Provide open-source blogging platform, with design template, visitor dashboard, etc&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;82,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://ghost.org/changelog/5/&quot; target=&quot;_blank&quot;&gt;Ghost blog&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;6.125&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://usegravity.app/&quot; target=&quot;_blank&quot;&gt;Gravity&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Provide a suite of common website features, such as subscription payments, form validation, landing page, and user dashboards&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;3,400&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/interview/how-i-stopped-underpricing-and-reached-a-90-profit-margin-e1a749ed8c&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.4186046511628&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://paddlelogger.com/&quot; target=&quot;_blank&quot;&gt;Paddle Logger&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;iOS app for paddlers to track their journeys on water&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;2,500&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/interview/changing-business-models-to-find-sustainable-growth-dd465a1b2d&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;2.5365853658537&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://linguix.com/&quot; target=&quot;_blank&quot;&gt;Linguix&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A suite of writing tools to automatically check typos and grammar mistakes, designed for writers&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;1,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/product/textly-ai/revenue&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;2.2058823529412&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://piwik.pro/&quot; target=&quot;_blank&quot;&gt;Piwik PRO&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Web analytics for the most secure areas, with full GDPR compliant&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;100,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://clearcode.cc/portfolio/piwik-pro/&quot; target=&quot;_blank&quot;&gt;Company intro page&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;6.3913043478261&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://karmabot.chat/&quot; target=&quot;_blank&quot;&gt;Karma&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A Slack bot that interacts with people with company values, personal credit points, monthly stats, and leaderboards, to help build high-performance team culture&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;5,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://oyestartups.com/interviews/karmabot&quot; target=&quot;_blank&quot;&gt;Oyestartups&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.5789473684211&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://tripetto.com/&quot; target=&quot;_blank&quot;&gt;Tripetto&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A web form and survay builder specializing in complex logical flows&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;5,500&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/product/tripetto/revenue&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;2.4424778761062&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.happyfeed.co/&quot; target=&quot;_blank&quot;&gt;Happyfeed&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A mobile app to write down positive things daily, to help people be healthier mentally&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;550&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/interview/reaching-ramen-profitability-by-doing-one-tiny-thing-well-c6b78b7303&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.6170212765957&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://boldly.com/&quot; target=&quot;_blank&quot;&gt;Boldly&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;On-demand hire remote employees with experience at great companies&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;320,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.starterstory.com/stories/how-word-of-mouth-propelled-our-business-to-3m-year&quot; target=&quot;_blank&quot;&gt;StarterStory&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.3529411764706&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://convertify.app/&quot; target=&quot;_blank&quot;&gt;Convertify&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Convert website to iOS &amp;amp; Android apps&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;10,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.indiehackers.com/product/convertify&quot; target=&quot;_blank&quot;&gt;IndieHackers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.6263736263736&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://alvarotrigo.com/fullPage/#page1&quot; target=&quot;_blank&quot;&gt;fullPage.js&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A javascript lib that helps create full-screen scrolling websites&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;15,000&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://www.zentao.pm/share/how-to-make-open-source-project-profitable-354.html&quot; target=&quot;_blank&quot;&gt;Zentao&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;1.5483870967742&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;http://www.meanstudio.com/&quot; target=&quot;_blank&quot;&gt;MEAN Studio&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;A studio that creates high-quality websites and apps for clients&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;1,500&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12694302&quot; target=&quot;_blank&quot;&gt;HackerNews&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;row&quot; readability=&quot;4.4594594594595&quot;&gt;&lt;th class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://feeder.co/&quot; target=&quot;_blank&quot;&gt;Feeder&lt;/a&gt;&lt;/th&gt;
&lt;td class=&quot;col-sm-7&quot;&gt;Chrome extension that tracks bookmarked websites and bundles them into feeds; it also supports filtering, notifications, etc&lt;/td&gt;
&lt;td class=&quot;col-sm-1&quot;&gt;1,500&lt;/td&gt;
&lt;td class=&quot;col-sm-2&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12671093&quot; target=&quot;_blank&quot;&gt;HackerNews&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Fri, 28 Feb 2020 08:08:54 +0000</pubDate>
<dc:creator>andrewash</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://profithunt.co/</dc:identifier>
</item>
<item>
<title>No ‘carmageddon’ on auto-free Market Street: study shows bikes and buses benefit</title>
<link>https://www.sfchronicle.com/bayarea/article/Results-of-car-free-Market-Street-so-so-for-SF-15087210.php</link>
<guid isPermaLink="true" >https://www.sfchronicle.com/bayarea/article/Results-of-car-free-Market-Street-so-so-for-SF-15087210.php</guid>
<description>&lt;p&gt;San Francisco’s car ban on Market Street — introduced a month ago after 10 years of handwringing — has barely affected motorists, with almost no spillover traffic on side streets. But it’s a huge improvement for buses, streetcars and bicycles.&lt;/p&gt;&lt;p&gt;Congestion increased only marginally on nearby roads, according to new data &lt;a href=&quot;https://inrix.com/blog/2020/02/full-car-ban-on-market-street-little-impact-on-surrounding-roads/&quot;&gt;from the traffic analytics firm Inrix&lt;/a&gt;. It shows that the biggest slowdown occurred on Mission Street, where southbound vehicle speeds decreased by 4% — from 10.3 miles per hour to 9.9 miles per hour — during the 8 a.m. commute. On other adjacent streets, car speeds declined by an average of 1%.&lt;/p&gt;
&lt;p&gt;On the flip side, transit riders on Market Street benefited significantly from the removal of cars. Muni lines are running 6% faster on average, said Erica Kato, an agency spokeswoman. Some bus lines shaved 12% travel time, which means rides are two minutes shorter.&lt;/p&gt;
&lt;p&gt;Cyclists are thriving. Since &lt;a href=&quot;https://www.sfchronicle.com/bayarea/article/Car-free-Market-What-happens-to-the-side-14999923.php&quot;&gt;the city banished private automobiles from its main spine on Jan. 29&lt;/a&gt;, the number of bicycles increased by 25%.&lt;/p&gt;
&lt;p&gt;These outcomes mirror those of the 14th Street busway in New York, a major east-west Manhattan thoroughfare that officials closed to private automobiles in October. It’s had “very little negative impact” to drivers on surrounding roadways, said Trevor Reed, a transportation analyst at Inrix.&lt;/p&gt;
&lt;section class=&quot;asset_relatedlinks relatedStories&quot; data-progressive=&quot;true&quot; data-component=&quot;collection&quot; data-collection-type=&quot;related&quot;&gt;
&lt;/section&gt;&lt;p&gt;In downtown Seattle, officials bar cars from driving on Third Avenue between 6 a.m. and 7 p.m., a change that took effect in August 2018. Every weekday the buses on Third move 52,000 people — “as many people as all the other avenues combined,” Reed said.&lt;/p&gt;
&lt;p&gt;His conclusion: When cities shut streets off to cars, people drive less. The myth of a “carmageddon”-style traffic jam is apparently overblown.&lt;/p&gt;
&lt;p&gt;“People’s choice to drive is a lot more flexible than we typically think,” Reed said, noting that motorists adapt by not using their cars for shorter trips.&lt;/p&gt;
&lt;p&gt;Some may even switch to buses, now that Muni is moving faster.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Rachel Swan is a San Francisco Chronicle staff writer. Email: &lt;a href=&quot;mailto:rswan@sfchronicle.com&quot;&gt;rswan@sfchronicle.com&lt;/a&gt; Twitter: &lt;a href=&quot;https://twitter.com/rachelswan&quot;&gt;@rachelswan&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 28 Feb 2020 07:04:20 +0000</pubDate>
<dc:creator>luu</dc:creator>
<og:type>article</og:type>
<og:title>No 'carmageddon' on auto-free Market Street. Study shows bikes and buses benefit</og:title>
<og:description>Banning cars on Market Street had very little impact on the side streets. But more people are biking, and buses run significantly faster.</og:description>
<og:url>https://www.sfchronicle.com/bayarea/article/Results-of-car-free-Market-Street-so-so-for-SF-15087210.php</og:url>
<og:image>https://s.hdnux.com/photos/01/10/56/30/19064329/11/rawImage.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sfchronicle.com/bayarea/article/Results-of-car-free-Market-Street-so-so-for-SF-15087210.php</dc:identifier>
</item>
<item>
<title>Programmers generate every possible melody in MIDI to prevent lawsuits</title>
<link>https://www.musictech.net/news/programmers-generate-every-possible-melody-in-midi-to-prevent-lawsuits/</link>
<guid isPermaLink="true" >https://www.musictech.net/news/programmers-generate-every-possible-melody-in-midi-to-prevent-lawsuits/</guid>
<description>&lt;p&gt;Damien Riehl, musician, programmer and copyright attorney, teamed up with programmer colleague, Noah Rubin, to find a way to stop musicians getting sued for their music.&lt;/p&gt;
&lt;p&gt;The solution was to algorithmically generate every single possible melody in existence and write them into MIDI files. They then copyrighted them and stored them on a hard drive before releasing it out to the public, &lt;a href=&quot;https://www.nme.com/news/music/two-musicians-have-algorithmically-generated-every-possible-melody-to-prevent-lawsuits-2615423&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;NME reports.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once written to MIDI, it can be considered a tangible format, and therefore copyrighted. However, as Rubin and Riehl have released these melodies under the Creative Commons Zero license, meaning they have ‘no rights reserved’.&lt;/p&gt;
&lt;div class=&quot;td-a-ad id_inline_ad0 id_ad_content-horiz-center&quot;&gt;&lt;span class=&quot;td-adspot-title&quot;&gt;Advertisement&lt;/span&gt;

&lt;/div&gt;
&lt;p&gt;Riehl noticed a disconcerting amount of popular musicians facing lawsuits for their music sharing a likeness with a previously released track. A popular example recently was that of Sam Smith and Tom Petty, after Petty’s estate argued that Smith’s Stay With Me shared a striking likeness to Petty’s I Won’t Back Down. While there were &lt;a href=&quot;https://www.nme.com/news/music/sam-smith-53-1215500&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;no hard feelings&lt;/a&gt;, Smith awarded royalties to Petty.&lt;/p&gt;
&lt;p&gt;But, in the Smith and Petty case, it was noted that the likeness was of complete coincidence, with no ill intention of imitating the catchy chorus. This is where Riehl saw an unjust accusation, and in his TED Talk (below), he points out how musicians can be punished for subconsciously thinking of a melody before writing their own.&lt;/p&gt;
&lt;p&gt;&lt;iframe title=&quot;Copyrighting all the melodies to avoid accidental infringement | Damien Riehl | TEDxMinneapolis&quot; width=&quot;696&quot; height=&quot;392&quot; src=&quot;https://www.youtube.com/embed/sJtm0MoOgiU?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;To complete the project, Riehl and Rubin created an algorithm capable of recording every possible 8-note, 12-beat melody combo. Riehl claims the algorithm works at a rate of 300,000 melodies per second.&lt;/p&gt;
&lt;p&gt;“The copyright system is broken and it needs updating”, Riehl explained in his TED Talk. “Under copyright law, numbers are facts, and under copyright law, facts either have thin copyright, almost no copyright, or no copyright at all”.&lt;/p&gt;
&lt;p&gt;“So maybe if these numbers have existed since the beginning of time and we’re just plucking them out, maybe melodies are just math, which is just facts, which is not copyrightable.”&lt;/p&gt;
&lt;div class=&quot;td-a-ad id_inline_ad2 id_ad_content-horiz-center&quot;&gt;&lt;span class=&quot;td-adspot-title&quot;&gt;Advertisement&lt;/span&gt;

&lt;/div&gt;
&lt;p&gt;Although a potentially great tactic, the solution is yet to be seen to work in court.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;All of the generated melodies, as well as the algorithm’s original code that generated them, are available as open-source materials on &lt;a href=&quot;http://allthemusic.info/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Github.&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;td-a-ad id_bottom_ad&quot;&gt;&lt;span class=&quot;td-adspot-title&quot;&gt;Advertisement&lt;/span&gt;

&lt;/div&gt;
</description>
<pubDate>Fri, 28 Feb 2020 06:33:29 +0000</pubDate>
<dc:creator>jensgk</dc:creator>
<og:type>article</og:type>
<og:title>Programmers generate every possible melody in MIDI to prevent lawsuits - MusicTech</og:title>
<og:description>Damien Riehl, musician, programmer and copyright attorney, teamed up with programmer, Noah Rubin, to find a way to stop musicians getting sued for their music.</og:description>
<og:url>https://www.musictech.net/news/programmers-generate-every-possible-melody-in-midi-to-prevent-lawsuits/</og:url>
<og:image>https://www.musictech.net/wp-content/uploads/2020/02/MIDI-Melody-case-1400x1050-1.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.musictech.net/news/programmers-generate-every-possible-melody-in-midi-to-prevent-lawsuits/</dc:identifier>
</item>
<item>
<title>The boss who put everyone on 70K</title>
<link>https://www.bbc.com/news/stories-51332811</link>
<guid isPermaLink="true" >https://www.bbc.com/news/stories-51332811</guid>
<description>&lt;figure class=&quot;media-landscape no-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Dan Price&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/5740/production/_111063322_dan3_976.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Gravity&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;In 2015, the boss of a card payments company in Seattle introduced a $70,000 minimum salary for all of his 120 staff - and personally took a pay cut of $1m. Five years later he's still on the minimum salary, and says the gamble has paid off.&lt;/p&gt;&lt;p&gt;Dan Price was hiking with his friend Valerie in the Cascade mountains that loom majestically over Seattle, when he had an uncomfortable revelation.&lt;/p&gt;&lt;p&gt;As they walked, she told him that her life was in chaos, that her landlord had put her monthly rent up by $200 and she was struggling to pay her bills. &lt;/p&gt;&lt;p&gt;It made Price angry. Valerie, who he had once dated, had served for 11 years in the military, doing two tours in Iraq, and was now working 50 hours a week in two jobs to make ends meet.&lt;/p&gt;&lt;p&gt;&quot;She is somebody for whom service, honour and hard work just defines who she is as a person,&quot; he says.&lt;/p&gt;&lt;p&gt;Even though she was earning around $40,000 a year, in Seattle that wasn't enough to afford a decent home. He was angry that the world had become such an unequal place. And suddenly it struck him that he was part of the problem.&lt;/p&gt;&lt;p&gt;At 31, Price was a millionaire. His company, Gravity Payments, which he set up in his teens, had about 2,000 customers and an estimated worth of millions of dollars. Though he was earning $1.1m a year, Valerie brought home to him that a lot of his staff must be struggling - and he decided to change that.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Raised in deeply Christian, rural Idaho, Dan Price is upbeat and positive, generous in his praise of others and impeccably polite, but he has become a crusader against inequality in the US.&lt;/p&gt;&lt;p&gt;&quot;People are starving or being laid off or being taken advantage of, so that somebody can have a penthouse at the top of a tower in New York with gold chairs.&lt;/p&gt;&lt;p&gt;&quot;We're glorifying greed all the time as a society, in our culture. And, you know, the Forbes list is the worst example - 'Bill Gates has passed Jeff Bezos as the richest man.' Who cares!?&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Gravity&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Before 1995 the poorest half of the population of the United States earned a greater share of national wealth than the richest 1%, he points out. But that year the tables turned - the top 1% earned more than the bottom 50%. And the gap is continuing to widen.&lt;/p&gt;&lt;p&gt;In 1965, CEOs in the US earned 20 times more than the average worker but by 2015 it had risen to 300 times (in the UK, the bosses of FTSE 100 companies now earn &lt;a href=&quot;https://www.cipd.co.uk/about/media/press/high-pay-day-2020&quot; class=&quot;story-body__link-external&quot;&gt;117 times&lt;/a&gt; the salary of their average worker).&lt;/p&gt;&lt;p&gt;Breathing in the crisp mountain air as he hiked with Valerie, Price had an idea. He had read a study by the Nobel prize-winning economists Daniel Kahneman and Angus Deaton, looking at how much money an American needs to be happy. He immediately promised Valerie he would significantly raise the minimum salary at Gravity.&lt;/p&gt;&lt;p&gt;After crunching the numbers, he arrived at the figure of $70,000. He realised that he would not only have to slash his salary, but also mortgage his two houses and give up his stocks and savings. He gathered his staff together and gave them the news.&lt;/p&gt;&lt;p&gt;He'd expected scenes of celebration, but at first the announcement floated down upon the room in something of an anti-climax, Price says. He had to repeat himself before the enormity of what was happening landed.&lt;/p&gt;&lt;p&gt;Five years later, Dan laughs about the fact that he missed a key point in the Princeton professors' research. The amount they estimated people need to be happy was $75,000.&lt;/p&gt;&lt;p&gt;Still, a third of those working at the company would have their salaries doubled immediately.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Since then, Gravity has transformed.&lt;/p&gt;&lt;p&gt;The headcount has doubled and the value of payments that the company processes has gone from $3.8bn a year to $10.2bn.&lt;/p&gt;&lt;p&gt;But there are other metrics that Price is more proud of.&lt;/p&gt;&lt;p&gt;&quot;Before the $70,000 minimum wage, we were having between zero and two babies born per year amongst the team,&quot; he says.&lt;/p&gt;&lt;p&gt;&quot;And since the announcement - and it's been only about four-and-a-half years - we've had more than 40 babies.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Gravity&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Dan Price with his mother
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;More than 10% of the company have been able to buy their own home, in one of the US's most expensive cities for renters. Before the figure was less than 1%.&lt;/p&gt;&lt;p&gt;&quot;There was a little bit of concern amongst pontificators out there that people would squander any gains that they would have. And we've really seen the opposite,&quot; Price says.&lt;/p&gt;&lt;p&gt;The amount of money that employees are voluntarily putting into their own pension funds has more than doubled and 70% of employees say they've paid off debt.&lt;/p&gt;&lt;p&gt;But Price did get a lot of flak. Along with hundreds of letters of support, and magazine covers labelling him &quot;America's best boss&quot;, many of Gravity's own customers wrote handwritten letters objecting to what they saw as a political statement.&lt;/p&gt;&lt;p&gt;At the time, Seattle was debating an increase to the minimum wage to $15, making it the highest in the US at the time. Small business owners were fighting it, claiming they would go out of business.&lt;/p&gt;&lt;p&gt;The right-wing radio pundit, Rush Limbaugh, whom Price had listened to every day in his childhood, called him a communist.&lt;/p&gt;&lt;p&gt;&quot;I hope this company is a case study in MBA programmes on how socialism does not work, because it's going to fail,&quot; he said.&lt;/p&gt;&lt;p&gt;Two senior Gravity employees also resigned in protest. They weren't happy that the salaries of junior staff had jumped overnight, and argued that it would make them lazy, and the company uncompetitive.&lt;/p&gt;&lt;p&gt;This hasn't happened.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Gravity&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Rosita Barlow
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Rosita Barlow, director of sales at Gravity, says that since salaries were raised junior colleagues have been pulling more weight.&lt;/p&gt;&lt;p&gt;&quot;When money is not at the forefront of your mind when you're doing your job, it allows you to be more passionate about what motivates you,&quot; she says.&lt;/p&gt;&lt;p&gt;Senior staff have found their workload reduced. They're under less pressure and can do things like take all of the holiday leave to which they are entitled.&lt;/p&gt;&lt;p&gt;Price tells the story about one staff member who works in Gravity's call centre.&lt;/p&gt;&lt;p&gt;&quot;He was commuting over an hour and a half a day,&quot; he says. &quot;He was worried that during his commute he was going to blow out a tyre and not have enough money to fix that tyre. He was stressing about it every day.&quot;&lt;/p&gt;&lt;p&gt;When his salary was raised to $70,000 this man moved closer to the office, now he spends more money on his health, he exercises every day and eats more healthily.&lt;/p&gt;&lt;p&gt;&quot;We had another gentleman on a similar team and he literally lost more than 50lb (22kg),&quot; he says. Others report spending more time with their families or helping their parents pay off debt.&lt;/p&gt;&lt;p&gt;&quot;We saw, every day, the effects of giving somebody freedom,&quot; Price says.&lt;/p&gt;&lt;p&gt;He thinks it is why Gravity is making more money than ever.&lt;/p&gt;&lt;p&gt;Raising salaries didn't change people's motivation - he says staff were already motivated to work hard - but it increased what he calls their capability.&lt;/p&gt;&lt;p&gt;&quot;You're not thinking I have to go to work because I have to make money,&quot; Rosita Barlow agrees. &quot;Now it's become focused on 'How do I do good work?'&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Barlow has been with Gravity since the early days and knows that Price wasn't always so generous.&lt;/p&gt;&lt;p&gt;He acknowledges himself that there was a time in the wake of the 2008 financial crisis when he was obsessed with saving money.&lt;/p&gt;&lt;p&gt;The downturn in the US economy decimated Gravity's customer base and its income fell by 20%. Business logic would have dictated letting go about 12 of the company's 35 staff, but instead Price focused on cutting costs.&lt;/p&gt;&lt;p&gt;After five tense months, the company started turning a profit again, but Price was profoundly spooked, and kept salaries low.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;At this time Rosita Barlow was experiencing her own financial problems, and secretly working at McDonald's outside work hours. When McDonald's offered her a promotion, she accidentally left a training manual on her desk at Gravity, and someone spotted it.&lt;/p&gt;&lt;p&gt;Her bosses called her in for a meeting.&lt;/p&gt;&lt;p&gt;&quot;They sat me down and my immediate reaction was to cry,&quot; Barlow says. She thought she was being fired.&lt;/p&gt;&lt;p&gt;Instead they told her to figure out how much money she'd need to stay on at the company and they raised her salary to $40,000.&lt;/p&gt;&lt;p&gt;&quot;I was very impressed and proud of her and mad at myself,&quot; Price says. &lt;/p&gt;&lt;p&gt;It took him a few more years to grasp the scale of the problem among his staff.&lt;/p&gt;&lt;p&gt;&quot;Most were too intimidated to come to me and tell me how a lack of pay was hurting them,&quot; he says.&lt;/p&gt;&lt;p&gt;Before 2015, he had already begun giving employees 20% annual pay rises. But it was his conversation with Valerie that convinced him to go further.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Price had hoped that Gravity's example would lead to far-reaching changes in US business. He's deeply disappointed and sad that this hasn't happened.&lt;/p&gt;&lt;p&gt;Some did follow suit, PharmaLogics in Boston raised their minimum salary to $50,000, and Rented.com in Atlanta raised theirs too. He believes that, by means of online lobbying, he also influenced Amazon's decisions to raise their minimum wage.&lt;/p&gt;&lt;p&gt;But he had hoped for widespread, structural change.&lt;/p&gt;&lt;p&gt;&quot;Boy, was I wrong,&quot; he says. &quot;I've really failed in that regard. And it's changed my perspective on things because I really believed that through the actions that I did and that other people could do, that we could turn the tide on runaway income inequality.&quot;&lt;/p&gt;&lt;p&gt;The change has had a profound effect on Price and his lifestyle.&lt;/p&gt;&lt;p&gt;Before taking a pay cut, Price was the cliché of a young white tech millionaire. He lived in a beautiful house overlooking Seattle's Puget Sound, he drank champagne in expensive restaurants.&lt;/p&gt;&lt;p&gt;Afterwards, he rented his house out on Airbnb to help stay afloat.&lt;/p&gt;&lt;p&gt;A group of employees became sick of watching him turn up at work in a 12-year-old Audi and secretly clubbed together to buy him a Tesla.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;YouTube&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Dan Price with Alyssa O'Neal, accepting his Tesla
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;A film the company posted on YouTube follows one of the group, Alyssa O'Neal, as she schemes with her colleagues to surprise him with the car. &lt;/p&gt;&lt;p&gt;&quot;I feel like this is the ultimate way to say thank you for all the sacrifices he's made and any of the negative stuff he's had to deal with,&quot; she says.&lt;/p&gt;&lt;p&gt;Price then walks out of the office into the car park, sees the car, and starts crying.&lt;/p&gt;&lt;p&gt;Five years later, Price is still on Gravity's minimum salary. He says he's more fulfilled than he ever was when he was earning millions though it's not all easy.&lt;/p&gt;&lt;p&gt;&quot;There's tests every day,&quot; he says.&lt;/p&gt;&lt;p&gt;&quot;I'm the same age as Mark Zuckerberg and I have dark moments where I think, 'I want to be just as rich as Mark Zuckerberg and I want to compete with him to be on the Forbes list. And I want to be on the cover of Time magazine, making lots of money.' All these greedy things are tempting.&quot;&lt;/p&gt;&lt;p&gt;&quot;It's not like it's easy to just turn down. But my life is so much better.&quot;&lt;/p&gt;
            </description>
<pubDate>Fri, 28 Feb 2020 06:28:34 +0000</pubDate>
<dc:creator>orjan</dc:creator>
<og:title>The boss who put everyone on 70K</og:title>
<og:type>article</og:type>
<og:description>A tech boss introduced a $70,000 minimum salary for all his staff - by cutting his own wages. Five years, on he has no regrets.</og:description>
<og:url>https://www.bbc.com/news/stories-51332811</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/5740/production/_111063322_dan3_976.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/stories-51332811</dc:identifier>
</item>
</channel>
</rss>