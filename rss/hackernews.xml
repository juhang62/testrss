<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Apple Silicon M1: A Developer&amp;#039;s Perspective</title>
<link>https://steipete.com/posts/apple-silicon-m1-a-developer-perspective/</link>
<guid isPermaLink="true" >https://steipete.com/posts/apple-silicon-m1-a-developer-perspective/</guid>
<description>&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/7dbf04694dfeeec9985b2ebb27cc1faff153111b/75e93/assets/img/2020/m1/m1.jpg&quot;/&gt;&lt;p&gt;The excitement around Apple’s new M1 chip is &lt;a href=&quot;https://www.singhkays.com/blog/apple-silicon-m1-black-magic/&quot;&gt;everywhere&lt;/a&gt;. I bought a MacBook Air 16GB M1 to see how viable it is as main development machine - here’s an early report after a week of testing.&lt;/p&gt;&lt;h2 id=&quot;xcode&quot;&gt;Xcode&lt;/h2&gt;
&lt;p&gt;Xcode runs FAST on the M1. Compiling the &lt;a href=&quot;https://pspdfkit.com/&quot;&gt;PSPDFKit PDF SDK&lt;/a&gt; (debug, arm64) can almost compete with the fastest Intel-based MacBook Pro Apple offers to date, with &lt;a href=&quot;https://twitter.com/steipete/status/1332052251712614405?s=21&quot;&gt;8:49 min vs 7:31 min&lt;/a&gt;. For comparison, my Hackintosh builds the same in less than 5 minutes.&lt;/p&gt;
&lt;p&gt;One can’t overstate how impressive this is for a fan-less machine. Apple’s last experiment with fan-less MacBooks was the 12-inch version from 2017, which builds the same project in 41 minutes.&lt;/p&gt;
&lt;p&gt;Our tests mostly ran just fine, although I found &lt;a href=&quot;https://github.com/Aloshi/dukglue/pull/27&quot;&gt;a bug specific to arm64&lt;/a&gt; that we missed before, as we don’t run our tests on actual hardware on CI. Moving the Simulator to the same architecture as shipping devices will be beneficial and will help find more bugs.&lt;/p&gt;
&lt;p&gt;Testing iOS below 14 is a major problem. It seems &lt;a href=&quot;https://twitter.com/steipete/status/1332654247809257473?s=21&quot;&gt;WebKit is crashing in a memory allocator&lt;/a&gt;, throwing EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0) (Apple folks: FB8920323). Performance also seems really bad, with Xcode periodically &lt;a href=&quot;https://twitter.com/steipete/status/1332348616145563653?s=21&quot;&gt;freezing&lt;/a&gt; and the whole system becoming so &lt;a href=&quot;https://twitter.com/steipete/status/1332648748158246922?s=21&quot;&gt;slow&lt;/a&gt; that the mouse cursor gets choppy. Some Simulators even make problems on iOS 14, &lt;a href=&quot;https://twitter.com/steipete/status/1331628274783543297?s=21&quot;&gt;such as the iPad Air (4th gen) which still emulates Intel&lt;/a&gt;, so try to avoid that one.&lt;/p&gt;
&lt;p&gt;We were extremely excited to be moving our CI to Mac Mini’s with M1 chip and are &lt;a href=&quot;https://www.macstadium.com/m1-mini&quot;&gt;waiting on MacStadium to release devices&lt;/a&gt;, however it seems we will have to restrict tests to iOS 14 for that to work. With our current schedule, we plan to drop iOS 12 in Q3 2021 and iOS 13 in Q3 2022, so it will be a while until we can fully move to Apple Silicon.&lt;/p&gt;
&lt;p&gt;There is a chance that Apple fixes these issues, however it’s not something to count on - given that this only affects older versions of iOS, the problem will at some point just “go away”.&lt;/p&gt;
&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;/h2&gt;
&lt;p&gt;We use Docker to automate our Website and load environments for our &lt;a href=&quot;https://pspdfkit.com/pdf-sdk/web/&quot;&gt;Web and Server PDF SDKs&lt;/a&gt;. Docker posted a &lt;a href=&quot;https://www.docker.com/blog/apple-silicon-m1-chips-and-docker/&quot;&gt;status update blog post&lt;/a&gt; about the current state of things, admitting that it currently won’t work but that they’re &lt;a href=&quot;https://github.com/docker/roadmap/issues/142&quot;&gt;working on it&lt;/a&gt;. There are more &lt;a href=&quot;https://finestructure.co/blog/2020/11/27/running-docker-on-apple-silicon-m1-follow-up&quot;&gt;hacky ways to use Apple’s Hypervisor to run Docker container manually&lt;/a&gt;, however this needs arm-based containers.&lt;/p&gt;
&lt;p&gt;I expect a solution in Q1 2021 that runs arm-based containers. We’ll have to do some work to add arm-support (something already on the roadmap) so this is only a transitional issue.&lt;/p&gt;
&lt;h2 id=&quot;virtualization&quot;&gt;Virtualization&lt;/h2&gt;
&lt;p&gt;To test our &lt;a href=&quot;https://pspdfkit.com/pdf-sdk/windows/&quot;&gt;Windows PDF SDK&lt;/a&gt;, most folks are using a VMware virtual machine with Windows 10 and Visual Studio. Currently none of the Mac virtualisation solutions support Apple Silicon, however both &lt;a href=&quot;https://appleinsider.com/articles/20/11/11/parallels-confirms-apple-m1-support-amid-silence-from-other-virtualization-companies&quot;&gt;VMware and Parallels&lt;/a&gt; are working on it. I do not expect Virtualbox to be updated &lt;a href=&quot;https://forums.virtualbox.org/viewtopic.php?f=8&amp;amp;t=98742&quot;&gt;anytime soon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I expect that eventually we’ll be able to run ARM-based Windows with commercial tooling. Various &lt;a href=&quot;https://9to5mac.com/2020/11/27/arm-windows-virtualization-m1-mac/&quot;&gt;proof-of-concepts&lt;/a&gt; already exist. Microsoft currently doesn’t sell ARM-based Windows, so getting a license will be interesting.&lt;/p&gt;
&lt;p&gt;ARM-Windows can emulate x86 applications, and Microsoft is working on &lt;a href=&quot;https://www.neowin.net/news/it039s-official-x64-emulation-is-coming-to-windows-on-arm&quot;&gt;x64 emulation&lt;/a&gt;, which is already rolling out in Insider builds. In a few months, it should be possible to develop and test our Windows SDK with Visual Studio on M1 in reasonable performance.&lt;/p&gt;
&lt;p&gt;Running older versions of macOS might be more problematic. We currently support macOS 10.14 with our &lt;a href=&quot;https://pspdfkit.com/blog/2017/pspdfkit-for-macos/&quot;&gt;AppKit PDF SDK&lt;/a&gt; and macOS 10.15 with the &lt;a href=&quot;https://pspdfkit.com/blog/2019/pspdfkit-for-mac-catalyst/&quot;&gt;Catalyst PDF SDK&lt;/a&gt;, both OS releases that require testing. It remains to be seen if VMWare or Parallels include a complete x64 emulation layer. This would likely be really slow, so I wouldn’t count on it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/bbf100981357e4bc26c49722d31253daf76d293d/5b456/assets/img/2020/m1/memory.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Lastly, 16 GB RAM just isn’t a lot. When running parallel tests, the machine starts to heavily swap and performance really goes down the drain. This will be even more problematic with virtual machines running. Future machines will offer 32 GB options to alleviate this issue.&lt;/p&gt;
&lt;h2 id=&quot;android-studio&quot;&gt;Android Studio&lt;/h2&gt;
&lt;p&gt;IntelliJ is working on porting the &lt;a href=&quot;https://youtrack.jetbrains.com/issue/JBR-2526&quot;&gt;JetBrains Runtime&lt;/a&gt; to Apple Silicon. The apps currently work through Rosetta 2, however building via Gradle is &lt;a href=&quot;https://www.reddit.com/r/androiddev/comments/jx4ntt/apple_macbook_air_m1_is_very_slow_in_gradle_builds/&quot;&gt;extremely slow&lt;/a&gt;. Gradle creates code at runtime, which seems a particular bad combination with the Rosetta 2 ahead-of-time translation logic.&lt;/p&gt;
&lt;p&gt;I expect that most issues will be solved by Q1 2021, however it will likely be some more time until all Java versions run great on ARM. A lot of effort has been put into &lt;a href=&quot;https://bell-sw.com/java/arm/performance/2019/01/15/the-status-of-java-on-arm/&quot;&gt;loop unrolling and vectorisation&lt;/a&gt;, not everything there is available on ARM just yet.&lt;/p&gt;
&lt;h2 id=&quot;homebrew&quot;&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; currently works via Rosetta 2. Just prefix everything with &lt;code class=&quot;highlighter-rouge&quot;&gt;arch -x86_64&lt;/code&gt; and it’ll just work. It is possible to install an additional (arm-based) version of Homebrew &lt;a href=&quot;https://soffes.blog/homebrew-on-apple-silicon&quot;&gt;under &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/homebrew&lt;/code&gt;&lt;/a&gt; and mix setup, as &lt;a href=&quot;https://github.com/Homebrew/brew/issues/7857&quot;&gt;more and more software&lt;/a&gt; is adding support for arm.&lt;/p&gt;
&lt;p&gt;This is not a problem currently (performance is good) and will eventually just work natively.&lt;/p&gt;
&lt;h2 id=&quot;applications&quot;&gt;Applications&lt;/h2&gt;
&lt;p&gt;Most applications just work, Rosetta is barely noticeable. Larger apps to take a longer initial performance hit (e.g. Microsoft Word takes &lt;a href=&quot;https://www.zdnet.com/article/microsoft-office-will-be-about-20-second-slower-initially-on-apple-silicon-rosetta-2/&quot;&gt;around 20 seconds&lt;/a&gt; until everything is translated), but then these binaries are cached and subsequent runs are fast.&lt;/p&gt;
&lt;p&gt;There’s the occasional app that can’t be translated and fails on startup (e.g. &lt;a href=&quot;https://beamer-app.com/download&quot;&gt;Beamer&lt;/a&gt; or the &lt;a href=&quot;https://www.google.com/intl/en_gh/drive/download/&quot;&gt;Google Drive “Backup and Sync” client&lt;/a&gt;), but this is rare. Some apps are confused about their place on disk and ask to be moved to the Applications directory, when really it’s just the translated binary that runs somewhere else. Most of these dialogs can be ignored. Some apps (e.g. Visual Studio Code) &lt;a href=&quot;https://twitter.com/steipete/status/1331884524934995968?s=21&quot;&gt;block auto-updating&lt;/a&gt; as the translated app location is readonly. However, in case of VS Code, the Insider build is already updated to ARM and just works.&lt;/p&gt;
&lt;p&gt;Electron-based apps are slow if they run on Rosetta. It seems the highly optimized V8 JavaScript compiler blocks ahead-of-time translation. The latest stable version of Electron (Version 11) already &lt;a href=&quot;https://www.electronjs.org/blog/apple-silicon&quot;&gt;fully supports Apple Silicon&lt;/a&gt;, and companies like Slack already updated their beta version to run natively.&lt;/p&gt;
&lt;p&gt;Google just shipped &lt;a href=&quot;https://www.macworld.com/article/3597749/google-releases-chrome-87-with-support-for-apple-silicon-macs.html&quot;&gt;Chrome that runs on ARM&lt;/a&gt;, however there’s still quite a performance gap between it and Apple Safari, which just &lt;em&gt;flies&lt;/em&gt; on Apple Silicon.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The new M1 MacBooks are fast, beautiful and silent and the hype is absolutely justified. There’s still a lot to do on the software-front to catch up, and the bugs around older iOS Simulators are especially problematic.&lt;/p&gt;
&lt;p&gt;All of that can be fixed in software and the whole industry is currently working on making the experience better, so by next year, when Apple updates the 16-inch MacBook Pro and releases the next generation of their M chip line, it should be absolutely possible to use a M1 Mac as main dev machine.&lt;/p&gt;
&lt;p&gt;For the time being, the M1 will be my &lt;del&gt;travel&lt;/del&gt; secondary laptop, and I’ll keep working on the 2,4 GHz 16-inch MacBook Pro with 32 GB RAM, which just is the faster machine. I’ll be much harder to accept the loud, always-on fans though, now that I know what soon will be possible.&lt;/p&gt;
</description>
<pubDate>Sat, 28 Nov 2020 16:47:18 +0000</pubDate>
<dc:creator>steipete</dc:creator>
<og:title>Apple Silicon M1: A Developer’s Perspective</og:title>
<og:description>The excitement around Apple’s new M1 chip is everywhere. I bought a MacBook Air 16GB M1 to see how viable it is as main development machine.</og:description>
<og:url>https://steipete.com/posts/apple-silicon-m1-a-developer-perspective/</og:url>
<og:image>https://steipete.com/assets/img/2020/m1/m1.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://steipete.com/posts/apple-silicon-m1-a-developer-perspective/</dc:identifier>
</item>
<item>
<title>Please</title>
<link>https://please.build/</link>
<guid isPermaLink="true" >https://please.build/</guid>
<description>
&lt;p class=&quot;index-open&quot;&gt;&lt;span class=&quot;turquoise&quot;&gt;Please&lt;/span&gt; supports a number of popular languages and can automate nearly any aspect of your build process.&lt;/p&gt;
&lt;div class=&quot;index-layout&quot;&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div readability=&quot;10&quot;&gt;&lt;img src=&quot;https://please.build/images/triangle_v.png&quot; class=&quot;smol r90&quot;/&gt;&lt;h2&gt;&lt;span class=&quot;violet&quot;&gt;Speed up your builds.&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Please is designed to parallelise builds &amp;amp; tests to make the most of your CPU. It's written in Go so it's fast &amp;amp; efficient itself, and it can build just the required parts of your code on each invocation.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;&lt;img src=&quot;https://please.build/images/square_g.png&quot; class=&quot;smol&quot;/&gt;&lt;h2&gt;&lt;span class=&quot;green&quot;&gt;Help your deployment.&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;All your code &amp;amp; dependencies get packed into a single file which can easily be deployed &amp;amp; run on a server. This helps deploy languages like Python which don't do this naturally.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;11.5&quot;&gt;
&lt;div readability=&quot;10&quot;&gt;&lt;img src=&quot;https://please.build/images/square_y.png&quot; class=&quot;smol r45&quot;/&gt;&lt;h2&gt;&lt;span class=&quot;yellow&quot;&gt;Unify your build process.&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Because Please can build many languages already (and you can easily write rules to teach it about others) you always invoke one tool to build any language or run any test, simplifying your continuous integration and development processes.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;13&quot;&gt;&lt;img src=&quot;https://please.build/images/hexagon_r.png&quot; class=&quot;smol&quot;/&gt;&lt;h2&gt;&lt;span class=&quot;red&quot;&gt;Continuous integration &amp;amp; pre-merge testing.&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;We've developed Please in tandem with our internal integration tools, so whenever any of our engineers merges a pull request, we invoke it to make sure any affected tests are passing before merging it in. Because Please allows fine-grained dependencies and knows them for every test, we can run just the affected ones to keep this step fast &amp;amp; lightweight.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div readability=&quot;11&quot;&gt;&lt;img src=&quot;https://please.build/images/circle_t.png&quot; class=&quot;smol&quot;/&gt;&lt;h2&gt;&lt;span class=&quot;turquoise&quot;&gt;Isolate your tests.&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Got integration tests that need to spin up servers, write files, and find ports? No problem, tests can be easily sandboxed to isolate them from the network and each other.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 28 Nov 2020 16:26:48 +0000</pubDate>
<dc:creator>siliconmountain</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://please.build/</dc:identifier>
</item>
<item>
<title>Amazon hires 427,000 people in 10 months</title>
<link>https://www.nytimes.com/2020/11/27/technology/pushed-by-pandemic-amazon-goes-on-a-hiring-spree-without-equal.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2020/11/27/technology/pushed-by-pandemic-amazon-goes-on-a-hiring-spree-without-equal.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;SEATTLE — Amazon has embarked on an extraordinary hiring binge this year, vacuuming up an average of 1,400 new workers a day and solidifying its power as online shopping becomes more entrenched in the &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/news-event/coronavirus?name=styln-coronavirus&amp;amp;region=TOP_BANNER&amp;amp;block=storyline_menu_recirc&amp;amp;action=click&amp;amp;pgtype=LegacyCollection&amp;amp;impression_id=6ba84650-2ddb-11eb-ba3e-d3d1c8074a57&amp;amp;variant=1_Show&quot; title=&quot;&quot;&gt;coronavirus pandemic&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The hiring has taken place at Amazon’s headquarters in Seattle, at its hundreds of warehouses in rural communities and suburbs, and in countries such as India and &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2020/09/26/technology/amazon-coronavirus-pandemic.html&quot; title=&quot;&quot;&gt;Italy&lt;/a&gt;. Amazon added 427,300 employees between January and October, pushing its work force to more than 1.2 million people globally, up more than 50 percent from a year ago. Its number of workers now approaches the entire population of Dallas.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The spree has accelerated since the onset of the pandemic, which has turbocharged Amazon’s business and made it a winner of the crisis. Starting in July, the company brought on about 350,000 employees, or 2,800 a day. Most have been warehouse workers, but Amazon has also hired software engineers and hardware specialists to power enterprises such as &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/12/15/technology/amazon-aws-cloud-competition.html&quot; title=&quot;&quot;&gt;cloud computing&lt;/a&gt;, streaming entertainment and devices, which have boomed in the pandemic.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;section id=&quot;amazon-employees&quot; data-id=&quot;100000007469439&quot; class=&quot;interactive-content interactive-size-scoop css-174j8de&quot;&gt;&lt;header id=&quot;interactive-header&quot; class=&quot;css-cl76n0 interactive-header&quot;&gt;&lt;h2 id=&quot;interactive-headline&quot; class=&quot;css-1su19vv interactive-headline&quot;&gt;Amazon Has Gone on a Hiring Spree&lt;/h2&gt;&lt;p data-testid=&quot;leadin&quot; id=&quot;interactive-leadin&quot; class=&quot;css-1vs7yia interactive-leadin&quot;&gt;The company added 427,300 employees between January and October, pushing its work force to more than 1.2 million people globally.&lt;/p&gt;&lt;/header&gt;&lt;div class=&quot;css-17ih8de interactive-body&quot; data-sourceid=&quot;100000007469439&quot;&gt;
      &lt;/div&gt;&lt;footer id=&quot;interactive-footer&quot; class=&quot;css-irejme interactive-footer&quot;&gt;&lt;p data-testid=&quot;note&quot; id=&quot;interactive-notes&quot; class=&quot;css-8h863p interactive-notes&quot;&gt;Note: Employee totals are quarterly through the third quarter of 2020, plus an additional month of data from October 2020.&lt;/p&gt;&lt;p data-testid=&quot;source&quot; id=&quot;interactive-source&quot; class=&quot;css-8h863p interactive-source&quot;&gt;Source: Amazon&lt;/p&gt;&lt;p data-testid=&quot;credit&quot; id=&quot;interactive-credit&quot; class=&quot;css-8h863p interactive-credit&quot;&gt;The New York Times&lt;/p&gt;&lt;/footer&gt;&lt;/section&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The scale of hiring is even larger than it may seem because the numbers do not account for employee churn, nor do they include the 100,000 temporary workers who have been recruited for the holiday shopping season. They also do not include what internal documents show as roughly 500,000 delivery drivers, who are contractors and not direct Amazon employees.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Other retailers — both with physical stores and online ones —&lt;span class=&quot;css-8l6xbc evw5hdy0&quot;&gt;  &lt;/span&gt;competed with Amazon on &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/live/2020/11/27/business/us-economy-coronavirus&quot; title=&quot;&quot;&gt;Black Friday&lt;/a&gt; and were strategizing on how to make the most of the busy end-of-year sales period, which has been upended by the pandemic. Many encouraged curbside pickup and put social distancing measures in place on Friday, but they saw light foot traffic. Amazon has the largest share of e-commerce, where sales are expected to grow by as much as 30 percent over last year’s holiday season, according to the &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://nrf.com/media-center/press-releases/nrf-expects-holiday-sales-will-grow-between-36-and-52-percent&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;National Retail Federation&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Amazon’s rapid employee growth is unrivaled in the history of corporate America. It far outstrips the 230,000 employees that Walmart, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://fortune.com/global500/search/?employees=desc&amp;amp;fg500_employees=desc&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;the largest private employer&lt;/a&gt; with more than 2.2 million workers, added in a single year two decades ago. The closest comparisons are the hiring that entire industries carried out in wartime, such as shipbuilding during the early years of World War II or home building after soldiers returned, economists and corporate historians said.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;&lt;figure class=&quot;css-1ef8w8q e1g7ppur0&quot; aria-label=&quot;media&quot; role=&quot;group&quot; itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemid=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-articleLarge.jpg?quality=90&amp;amp;auto=webp&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;div class=&quot;css-1xdhyk6 erfvjey0&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Image&lt;/span&gt;&lt;picture&gt;&lt;source media=&quot;(max-width: 599px) and (min-device-pixel-ratio: 3),(max-width: 599px) and (-webkit-min-device-pixel-ratio: 3),(max-width: 599px) and (min-resolution: 3dppx),(max-width: 599px) and (min-resolution: 288dpi)&quot; srcset=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-mobileMasterAt3x.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&amp;amp;width=600&quot;/&gt;&lt;source media=&quot;(max-width: 599px) and (min-device-pixel-ratio: 2),(max-width: 599px) and (-webkit-min-device-pixel-ratio: 2),(max-width: 599px) and (min-resolution: 2dppx),(max-width: 599px) and (min-resolution: 192dpi)&quot; srcset=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-mobileMasterAt3x.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&amp;amp;width=1200&quot;/&gt;&lt;source media=&quot;(max-width: 599px) and (min-device-pixel-ratio: 1),(max-width: 599px) and (-webkit-min-device-pixel-ratio: 1),(max-width: 599px) and (min-resolution: 1dppx),(max-width: 599px) and (min-resolution: 96dpi)&quot; srcset=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-mobileMasterAt3x.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&amp;amp;width=1800&quot;/&gt;&lt;img alt=&quot;Amazon’s corporate headquarters in Seattle. The company’s recent rapid growth is unrivaled in the history of corporate America.&quot; class=&quot;css-1m50asq&quot; src=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-articleLarge.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot; srcset=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-articleLarge.jpg?quality=90&amp;amp;auto=webp 600w,https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-jumbo.jpg?quality=90&amp;amp;auto=webp 1024w,https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-superJumbo.jpg?quality=90&amp;amp;auto=webp 2048w&quot; sizes=&quot;((min-width: 600px) and (max-width: 1004px)) 84vw, (min-width: 1005px) 80vw, 100vw&quot; decoding=&quot;async&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon1/merlin_170077536_2672dea9-5819-44ca-b2b4-bc940e9cb0c7-articleLarge.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot;/&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;css-18crmh6 ewdxa0s0&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;css-16f3y1r e13ogyst0&quot;&gt;Amazon’s corporate headquarters in Seattle. The company’s recent rapid growth is unrivaled in the history of corporate America.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-cnj6d5 e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit...&lt;/span&gt;&lt;span&gt;Miles Fortune for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“It’s hiring like mad,” Nelson Lichtenstein, a labor historian at the University of California, Santa Barbara, said of Amazon. “No American company has hired so many workers so quickly.”&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Even for a company that regularly sets new superlatives, Amazon’s employee growth stands out as a stark illustration of its might. At this pace, it is on track to surpass Walmart within two years to become the world’s largest private employer.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Its expansion is unfolding as lawmakers and regulators in Washington and Europe have sounded the alarm over tech power. This month, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2020/11/10/business/amazon-eu-antitrust.html&quot; title=&quot;&quot;&gt;European Union regulators brought antitrust charges&lt;/a&gt; against Amazon, accusing it of unfairly using its size and access to data to harm smaller merchants in its marketplace. Amazon has said merchants are thriving on its site, with their share of sales growing in the pandemic. The Federal Trade Commission is also examining the company, with President-elect Joseph R. Biden Jr. expected to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2020/11/10/technology/biden-tech-antitrust-privacy.html&quot; title=&quot;&quot;&gt;continue scrutinizing the tech giants&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“We are turning into Amazon nation,” said Margaret O’Mara, a history professor at the University of Washington and a &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/column/margaret-omara&quot; title=&quot;&quot;&gt;contributing New York Times opinion writer&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Having employees in nearly every state gives Amazon, which has warehouses around the country to be closer to customers, potentially outsize political leverage, Ms. O’Mara said. She added that history has shown there are risks when a region or country becomes too dependent on any one employer, though she said Amazon had not reached that point.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Amazon has portrayed its hiring as a boon for workers laid low by the pandemic-induced recession, as unemployment has soared and as restaurants, airlines and other businesses suffer.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;&lt;figure class=&quot;css-1ef8w8q e1g7ppur0&quot; aria-label=&quot;media&quot; role=&quot;group&quot; itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemid=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon3/merlin_173053932_f9a8c221-2d07-4a0e-808e-fc707ae03080-articleLarge.jpg?quality=90&amp;amp;auto=webp&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;figcaption class=&quot;css-18crmh6 ewdxa0s0&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;css-16f3y1r e13ogyst0&quot;&gt;An Amazon warehouse in Kent, Wash. The company has put safety measures in place to reduce the risk that employees will contract Covid-19.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-cnj6d5 e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit...&lt;/span&gt;&lt;span&gt;Ruth Fremson/The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“Offering jobs with industry-leading pay and great health care, including to entry-level and frontline employees, is even more meaningful in a time like this,” Jeff Bezos, Amazon’s founder and chief executive, said last month when the company reported &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2020/10/29/technology/apple-alphabet-facebook-amazon-google-earnings.html&quot; title=&quot;&quot;&gt;blockbuster financial results&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Some government policies have helped Amazon’s recent growth. In March, a taxpayer-funded &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2020/03/25/us/politics/coronavirus-senate-deal.html&quot; title=&quot;&quot;&gt;$2 trillion stimulus package&lt;/a&gt; allowed local governments to shut down traditional retail stores to reduce the spread of the virus. As the stores closed, demand for items through Amazon rose — and it hired.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Adding so many new workers so fast in a pandemic has been a herculean task. Many workers &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2020/05/19/technology/amazon-coronavirus-workers.html&quot; title=&quot;&quot;&gt;feared catching the coronavirus&lt;/a&gt; in warehouses, so Amazon rolled out a fleet of safety measures to address Covid-19. And it revved up its hiring machine, which relies on technology and traditional recruitment.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;That includes promoting its &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/07/11/technology/amazon-workers-retraining-automation.html&quot; title=&quot;&quot;&gt;training&lt;/a&gt;, benefits and pay. Of its 810,000 workers who are in the United States, about 85 percent are frontline employees in warehouses and operations who earn a minimum of $15 an hour. That is higher than traditional retail work, where an average sales worker &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.bls.gov/oes/current/naics2_44-45.htm&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;makes $13.19&lt;/a&gt; an hour, but lower than &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.bls.gov/oes/current/naics4_493100.htm&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;typical&lt;/a&gt; warehousing jobs. On Thursday, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.aboutamazon.com/news/operations/amazon-recognizing-front-line-employees-with-an-additional-special-bonus-this-holiday-season&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Amazon said it would pay bonuses&lt;/a&gt; of $300 for full-time employees and $150 for part-time employees.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;To get the word out, Amazon used staffing agencies and advertised on television, billboards and in mailboxes by highlighting sign-on bonuses of up to $3,000 and its precautions against Covid-19. In one recent TV &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.ispot.tv/ad/tqT0/amazon-no-bad-time&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;spot&lt;/a&gt;, an Amazon employee wearing a mask said, “Safety, safety, safety!”&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;In many places, the hiring has come easily because Amazon is one of the few employers with open jobs. In the week leading up to Sept. 16, which the company billed as “Career Day,” it said it received more than 384,000 job applications in the United States and Canada, or 38 a minute.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;&lt;figure class=&quot;css-1ef8w8q e1g7ppur0&quot; aria-label=&quot;media&quot; role=&quot;group&quot; itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemid=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon4/merlin_160973106_8848aeae-b3f8-47b7-9bd8-5a62998ae332-articleLarge.jpg?quality=90&amp;amp;auto=webp&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;figcaption class=&quot;css-18crmh6 ewdxa0s0&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;css-16f3y1r e13ogyst0&quot;&gt;Job seekers waited in line to speak with Amazon recruiters and other company volunteers at a career fair in Chicago last year.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-cnj6d5 e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit...&lt;/span&gt;&lt;span&gt;Scott Olson/Getty Images&lt;/span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“It is happening in the context of an unprecedented loss of jobs elsewhere in the economy,” said Ellora Derenoncourt, an assistant professor at University of California, Berkeley, who has studied Amazon’s minimum wage.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Amazon is not the only beneficiary of how the pandemic has pushed people toward buying online instead of in stores. Walmart has added 180,000 employees in the United States since March, and its online sales rose &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/live/2020/11/17/business/us-economy-coronavirus#retail-sales-rose-again-in-october-as-americans-stocked-up&quot; title=&quot;&quot;&gt;79 percent&lt;/a&gt; in the latest quarter. Target’s e-commerce sales similarly soared&lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://investors.target.com/news-releases/news-release-details/target-corporation-reports-third-quarter-earnings&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt; 155 percent&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;In that sense, this downturn has differed from past recessions, when usually all industries slowed, said Jed Kolko, chief economist at Indeed, the online jobs site. “This period has been partly about a recession but also about a pretty dramatic shift of economic activity from some sectors to others,” he said.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Just two years ago, Amazon’s work force numbered fewer than 650,000 people. At the time, the company hit the brakes on hiring to focus more on profits. The hiring pace picked back up a year ago, after it introduced one-day shipping in the United States, an enormous effort that required more warehouses and more workers to pick, pack and sort packages.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;When the coronavirus hit the United States in March, online shopping condensed years of expansion into a few months. From April to June, Amazon said, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/live/2020/07/30/business/stock-market-today-coronavirus/amazons-earnings-double-as-sales-surge&quot; title=&quot;&quot;&gt;it sold 57 percent more items&lt;/a&gt; than a year earlier.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;That spurred its first pandemic hiring wave of about 175,000 temporary workers. Many were hired to replace employees who had taken advantage of an unlimited unpaid time off policy at the outset of the pandemic. To attract new employees, Amazon offered workers an extra $2 an hour and increased overtime pay. It said the extra wages were not “hazard pay,” but incentives.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;&lt;figure class=&quot;css-1ef8w8q e1g7ppur0&quot; aria-label=&quot;media&quot; role=&quot;group&quot; itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemid=&quot;https://static01.nyt.com/images/2020/11/23/business/00amazon5/merlin_172183599_156a3c6a-80dd-413e-9934-128b08b15c58-articleLarge.jpg?quality=90&amp;amp;auto=webp&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;figcaption class=&quot;css-18crmh6 ewdxa0s0&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;css-16f3y1r e13ogyst0&quot;&gt;An Amazon Prime delivery van in Hazle Township, Pa. The company has about 500,000 delivery workers who are contractors, according to internal documents.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-cnj6d5 e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit...&lt;/span&gt;&lt;span&gt;Michelle Gustafson for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Amazon had the hiring infrastructure in place to grow fast, said Ardine Williams, the vice president for work force development. As Covid-19 kept people like her elderly parents sheltering in place for safety, she said, consumers turned to e-commerce, accelerating the need to hire more.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“Some of that growth has clearly been planned,” she said. “I think that the head count ramp, though, has really been fueled by customer demand.”&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Over the summer, Amazon converted most of the 175,000 temporary workers to permanent employees and ended the extra pay bumps for all workers. Since then, it has continued with &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/live/2020/09/09/business/stock-market-today-coronavirus/amazon-announces-another-hiring-spree&quot; title=&quot;&quot;&gt;waves of hiring&lt;/a&gt;.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The company has also almost tripled the number of U.S. warehouses used for last-mile deliveries this year, said Marc Wulfraat, founder of the logistics consulting firm MWPVL International, who &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://mwpvl.com/html/amazon_com.html&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;tracks&lt;/a&gt; Amazon’s operations. The delivery drivers are usually contractors, so Amazon does not disclose their numbers in regulatory filings.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“They have built their own UPS in the last several years,” Mr. Wulfraat said. “This pace of change has never been seen before.”&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Ms. Williams said Amazon also built relationships with companies that were reducing staff, such as Uber, American Airlines and Marriott, to promote its hiring.&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“We dedicated a group that did nothing but connect with organizations who were furloughing people, whether it was temporary or permanent,” she said. “That allowed us to take a skilled, quality work force, and very quickly and easily move them into opportunities that were appropriate at Amazon.”&lt;/p&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The effort has been aided by 1,000 technology workers who create software for Amazon’s human resources teams, many building portals and algorithms that automate hiring, she said. Prospective employees can find jobs, apply and be hired entirely online, without talking to a single person.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;To grow so much, Amazon also needs to think long term, Ms. Williams said. As a result, she said, the company was already working with preschools to establish the foundation of tech education, so that “as our hiring demand unfolds over the next 10 years, that pipeline is there and ready.”&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;&lt;div class=&quot;css-53u6y8&quot;&gt;&lt;p class=&quot;css-pncxxs etfikam0&quot;&gt;Michael Corkery contributed reporting from New York.&lt;/p&gt;&lt;/div&gt;&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;</description>
<pubDate>Sat, 28 Nov 2020 14:02:21 +0000</pubDate>
<dc:creator>brian_herman</dc:creator>
<og:url>https://www.nytimes.com/2020/11/27/technology/pushed-by-pandemic-amazon-goes-on-a-hiring-spree-without-equal.html</og:url>
<og:type>article</og:type>
<og:title>Pushed by Pandemic, Amazon Goes on a Hiring Spree Without Equal</og:title>
<og:image>https://static01.nyt.com/images/2020/11/28/business/00amazon2/00amazon2-facebookJumbo.jpg</og:image>
<og:description>The company has added 427,300 employees in 10 months, bringing its global work force to more than 1.2 million.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2020/11/27/technology/pushed-by-pandemic-amazon-goes-on-a-hiring-spree-without-equal.html</dc:identifier>
</item>
<item>
<title>Summary of the Amazon Kinesis Event in the Northern Virginia (US-East-1) Region</title>
<link>https://aws.amazon.com/message/11201/</link>
<guid isPermaLink="true" >https://aws.amazon.com/message/11201/</guid>
<description>&lt;p&gt;&lt;strong&gt;November, 25th 2020&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We wanted to provide you with some additional information about the service disruption that occurred in the Northern Virginia (US-EAST-1) Region on November 25th, 2020.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Amazon Kinesis enables real-time processing of streaming data. In addition to its direct use by customers, Kinesis is used by several other AWS services. These services also saw impact during the event. The trigger, though not root cause, for the event was a relatively small addition of capacity that began to be added to the service at 2:44 AM PST, finishing at 3:47 AM PST. Kinesis has a large number of “back-end” cell-clusters that process streams. These are the workhorses in Kinesis, providing distribution, access, and scalability for stream processing. Streams are spread across the back-end through a sharding mechanism owned by a “front-end” fleet of servers. A back-end cluster owns many shards and provides a consistent scaling unit and fault-isolation. The front-end’s job is small but important. It handles authentication, throttling, and request-routing to the correct stream-shards on the back-end clusters.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;The capacity addition was being made to the front-end fleet. Each server in the front-end fleet maintains a cache of information, including membership details and shard ownership for the back-end clusters, called a shard-map. This information is obtained through calls to a microservice vending the membership information, retrieval of configuration information from DynamoDB, and continuous processing of messages from other Kinesis front-end servers. For the latter communication, each front-end server creates operating system threads for each of the other servers in the front-end fleet. Upon any addition of capacity, the servers that are already operating members of the fleet will learn of new servers joining and establish the appropriate threads. It takes up to an hour for any existing front-end fleet member to learn of new participants.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;At 5:15 AM PST, the first alarms began firing for errors on putting and getting Kinesis records. Teams engaged and began reviewing logs. While the new capacity was a suspect, there were a number of errors that were unrelated to the new capacity and would likely persist even if the capacity were to be removed. Still, as a precaution, we began removing the new capacity while researching the other errors. The diagnosis work was slowed by the variety of errors observed. We were seeing errors in all aspects of the various calls being made by existing and new members of the front-end fleet, exacerbating our ability to separate side-effects from the root cause. At 7:51 AM PST, we had narrowed the root cause to a couple of candidates and determined that any of the most likely sources of the problem would require a full restart of the front-end fleet, which the Kinesis team knew would be a long and careful process. The resources within a front-end server that are used to populate the shard-map compete with the resources that are used to process incoming requests. So, bringing front-end servers back online too quickly would create contention between these two needs and result in very few resources being available to handle incoming requests, leading to increased errors and request latencies. As a result, these slow front-end servers could be deemed unhealthy and removed from the fleet, which in turn, would set back the recovery process. All of the candidate solutions involved changing every front-end server’s configuration and restarting it. While the leading candidate (an issue that seemed to be creating memory pressure) looked promising, if we were wrong, we would double the recovery time as we would need to apply a second fix and restart again. To speed restart, in parallel with our investigation, we began adding a configuration to the front-end servers to obtain data directly from the authoritative metadata store rather than from front-end server neighbors during the bootstrap process.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;At 9:39 AM PST, we were able to confirm a root cause, and it turned out this wasn’t driven by memory pressure. Rather, the new capacity had caused all of the servers in the fleet to exceed the maximum number of threads allowed by an operating system configuration. As this limit was being exceeded, cache construction was failing to complete and front-end servers were ending up with useless shard-maps that left them unable to route requests to back-end clusters. We didn’t want to increase the operating system limit without further testing, and as we had just completed the removal of the additional capacity that triggered the event, we determined that the thread count would no longer exceed the operating system limit and proceeded with the restart. We began bringing back the front-end servers with the first group of servers taking Kinesis traffic at 10:07 AM PST. The front-end fleet is composed of many thousands of servers, and for the reasons described earlier, we could only add servers at the rate of a few hundred per hour. We continued to slowly add traffic to the front-end fleet with the Kinesis error rate steadily dropping from noon onward. Kinesis fully returned to normal at 10:23 PM PST.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;For Kinesis, we have a number of learnings that we will be implementing immediately. In the very short term, we will be moving to larger CPU and memory servers, reducing the total number of servers and, hence, threads required by each server to communicate across the fleet. This will provide significant headroom in thread count used as the total threads each server must maintain is directly proportional to the number of servers in the fleet. Having fewer servers means that each server maintains fewer threads. We are adding fine-grained alarming for thread consumption in the service. We will also finish testing an increase in thread count limits in our operating system configuration, which we believe will give us significantly more threads per server and give us significant additional safety margin there as well. In addition, we are making a number of changes to radically improve the cold-start time for the front-end fleet. We are moving the front-end server cache to a dedicated fleet. We will also move a few large AWS services, like CloudWatch, to a separate, partitioned front-end fleet. In the medium term, we will greatly accelerate the cellularization of the front-end fleet to match what we’ve done with the back-end. Cellularization is an approach we use to isolate the effects of failure within a service, and to keep the components of the service (in this case, the shard-map cache) operating within a previously tested and operated range. This had been under way for the front-end fleet in Kinesis, but unfortunately the work is significant and had not yet been completed. In addition to allowing us to operate the front-end in a consistent and well-tested range of total threads consumed, cellularization will provide better protection against any future unknown scaling limit.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;There were a number of services that use Kinesis that were impacted as well. Amazon Cognito uses Kinesis Data Streams to collect and analyze API access patterns. While this information is extremely useful for operating the Cognito service, this information streaming is designed to be best effort. Data is buffered locally, allowing the service to cope with latency or short periods of unavailability of the Kinesis Data Stream service. Unfortunately, the prolonged issue with Kinesis Data Streams triggered a latent bug in this buffering code that caused the Cognito webservers to begin to block on the backlogged Kinesis Data Stream buffers. As a result, Cognito customers experienced elevated API failures and increased latencies for Cognito User Pools and Identity Pools, which prevented external users from authenticating or obtaining temporary AWS credentials. In the early stages of the event, the Cognito team worked to mitigate the impact of the Kinesis errors by adding additional capacity and thereby increasing their capacity to buffer calls to Kinesis. While this initially reduced impact, by 7:01 AM PST errors rates increased significantly. The team was working in parallel on a change to Cognito to reduce the dependency on Kinesis. At 10:15 AM PST, deployment of this change began and error rates began falling. By 12:15 PM PST, error rates were significantly reduced, and by 2:18 PM PST Cognito was operating normally. To prevent a recurrence of this issue, we have modified the Cognito webservers so that they can sustain Kinesis API errors without exhausting their buffers that resulted in these user errors.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;CloudWatch uses Kinesis Data Streams for the processing of metric and log data. Starting at 5:15 AM PST, CloudWatch experienced increased error rates and latencies for the PutMetricData and PutLogEvents APIs, and alarms transitioned to the INSUFFICIENT_DATA state. While some CloudWatch metrics continued to be processed throughout the event, the increased error rates and latencies prevented the vast majority of metrics from being successfully processed. At 5:47 PM PST, CloudWatch began to see early signs of recovery as Kinesis Data Stream’s availability improved, and by 10:31 PM PST, CloudWatch metrics and alarms fully recovered. Delayed metrics and log data backfilling completed over the subsequent hours. While CloudWatch was experiencing these increased errors, both internal and external clients were unable to persist all metric data to the CloudWatch service. These errors will manifest as gaps in data in CloudWatch metrics. While CloudWatch currently relies on Kinesis for its complete metrics and logging capabilities, the CloudWatch team is making a change to persist 3-hours of metric data in the CloudWatch local metrics data store. This change will allow CloudWatch users, and services requiring CloudWatch metrics (including AutoScaling), to access these recent metrics directly from the CloudWatch local metrics data store. This change has been completed in the US-EAST-1 Region and will be deployed globally in the coming weeks.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Two services were also impacted as a result of the issues with CloudWatch metrics. First, reactive AutoScaling policies that rely on CloudWatch metrics experienced delays until CloudWatch metrics began to recover at 5:47 PM PST. And second, Lambda saw impact. Lambda function invocations currently require publishing metric data to CloudWatch as part of invocation. Lambda metric agents are designed to buffer metric data locally for a period of time if CloudWatch is unavailable. Starting at 6:15 AM PST, this buffering of metric data grew to the point that it caused memory contention on the underlying service hosts used for Lambda function invocations, resulting in increased error rates. At 10:36 AM PST, engineers took action to mitigate the memory contention, which resolved the increased error rates for function invocations. &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;CloudWatch Events and EventBridge experienced increased API errors and delays in event processing starting at 5:15 AM PST. As Kinesis availability improved, EventBridge began to deliver new events and slowly process the backlog of older events. Elastic Container Service (ECS) and Elastic Kubernetes Service (EKS) both make use of EventBridge to drive internal workflows used to manage customer clusters and tasks. This impacted provisioning of new clusters, delayed scaling of existing clusters, and impacted task de-provisioning. By 4:15 PM PST, the majority of these issues had been resolved.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Outside of the service issues, we experienced some delays in communicating service status to customers during the early part of this event. We have two ways of communicating during operational events – the Service Health Dashboard, which is our public dashboard to alert all customers of broad operational issues, and the Personal Health Dashboard, which we use to communicate directly with impacted customers. With an event such as this one, we typically post to the Service Health Dashboard. During the early part of this event, we were unable to update the Service Health Dashboard because the tool we use to post these updates itself uses Cognito, which was impacted by this event. We have a back-up means of updating the Service Health Dashboard that has minimal service dependencies. While this worked as expected, we encountered several delays during the earlier part of the event in posting to the Service Health Dashboard with this tool, as it is a more manual and less familiar tool for our support operators. To ensure customers were getting timely updates, the support team used the Personal Health Dashboard to notify impacted customers if they were impacted by the service issues. We also posted a global banner summary on the Service Health Dashboard to ensure customers had broad visibility into the event. During the remainder of event, we continued using a combination of the Service Health Dashboard, both with global banner summaries and service specific details, while also continuing to update impacted customers via Personal Health Dashboard. Going forward, we have changed our support training to ensure that our support engineers are regularly trained on the backup tool for posting to the Service Health Dashboard.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Finally, we want to apologize for the impact this event caused for our customers. While we are proud of our long track record of availability with Amazon Kinesis, we know how critical this service, and the other AWS services that were impacted, are to our customers, their applications and end users, and their businesses. We will do everything we can to learn from this event and use it to improve our availability even further.&lt;br/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 28 Nov 2020 07:51:35 +0000</pubDate>
<dc:creator>codesparkle</dc:creator>
<og:title>Summary of the Amazon Kinesis Event in the Northern Virginia (US-EAST-1) Region</og:title>
<og:type>company</og:type>
<og:url>https://aws.amazon.com/message/11201/</og:url>
<og:image>https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/message/11201/</dc:identifier>
</item>
<item>
<title>AWS hires Rust compiler team co-lead Felix Klock</title>
<link>https://www.theregister.com/2020/11/27/aws_hires_rust_compiler_team/</link>
<guid isPermaLink="true" >https://www.theregister.com/2020/11/27/aws_hires_rust_compiler_team/</guid>
<description>&lt;p&gt;Amazon Web Services has quietly revealed that it has hired Rust compiler co-lead Felix Klock.&lt;/p&gt;
&lt;p&gt;A Tuesday &lt;a href=&quot;https://aws.amazon.com/blogs/opensource/why-aws-loves-rust-and-how-wed-like-to-help/&quot;&gt;post&lt;/a&gt; from the AWS open source team expressing its ardour for Rust outlined several ways the cloud colossus has embraced the language.&lt;/p&gt;
&lt;p&gt;AWS's Matt Assay wrote that the company &quot;increasingly builds critical infrastructure like the Firecracker VMM using Rust because its out-of-the-box features reduce the time and effort needed to reach Amazon's high security bar, while still delivering runtime performance similar to C and C++.&quot;&lt;/p&gt;
&lt;p&gt;AWS likes Rust so much it sponsored the project and said the company has even &quot;started hiring Rust and Tokio committers to ensure they'd have the time and resources necessary to further improve Rust.&quot;&lt;/p&gt;
&lt;div class=&quot;promo_article&quot;&gt;&lt;img src=&quot;https://regmedia.co.uk/2017/07/06/layoffs_shuterstock.jpg?x=174&amp;amp;y=115&amp;amp;crop=1&quot; width=&quot;174&quot; height=&quot;115&quot; alt=&quot;layoffs&quot;/&gt;&lt;h2 title=&quot;250 'true Mozillians' laid off, Taiwan office completely shuttered&quot;&gt;Firefox maker Mozilla axes a quarter of its workforce, blames coronavirus, vows to 'develop new revenue streams'&lt;/h2&gt;
&lt;a href=&quot;https://www.theregister.com/2020/08/11/mozilla_staff_layoffs_products_revenue/&quot;&gt;&lt;span&gt;READ MORE&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Among those AWS says it has hired are Sean McArthur, who is named-checked in the &quot;Thank-you&quot; list of the Rust 1.0 release, plus prominent developers Lucio Franco and Jon Gjengset.&lt;/p&gt;
&lt;p&gt;The post also revealed that AWS recently hired Klock, currently the project's compiler co-lead.&lt;/p&gt;
&lt;p&gt;Klock previously worked at Mozilla and his LinkedIn profile says he finished there in August 2020 – when the organisation made a big round of job cuts – before arriving at AWS in October.&lt;/p&gt;
&lt;p&gt;&quot;Let's be clear: We understand that we are net beneficiaries of the exceptional work that others have done to make Rust thrive,&quot; Assay writes. &quot;AWS didn't start Rust or make it the success that it is today, but we'd like to contribute to its future success. We are convinced that investing in the wider Rust ecosystem helps our customers and those who may never become our customers. That's OK. That's how open source is supposed to work.&quot;&lt;/p&gt;
&lt;p&gt;AWS senior software engineering manager Shane Miller chimed in, saying: &quot;We're not just hiring a couple of folks for Tokio and the Rust compiler.&lt;/p&gt;
&lt;p&gt;&quot;Rust is a critical component of our long-term strategy, and we're investing to deliver Rust engineering at Amazon scale. That includes developer tools, infrastructure components, interoperability, and verification.&quot; ®&lt;/p&gt;

</description>
<pubDate>Sat, 28 Nov 2020 07:22:14 +0000</pubDate>
<dc:creator>ducaale</dc:creator>
<og:image>https://regmedia.co.uk/2020/04/28/shutterstock_rust_logo.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.theregister.com/2020/11/27/aws_hires_rust_compiler_team/</og:url>
<og:title>AWS hires Rust compiler team co-lead Felix Klock</og:title>
<og:description>Cloud giant has a lust for Rust so needs top minds and wants them to advance the language</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theregister.com/2020/11/27/aws_hires_rust_compiler_team/</dc:identifier>
</item>
<item>
<title>Tony Hsieh has died</title>
<link>https://www.yahoo.com/lifestyle/tony-hsieh-zappos-luminary-revolutionized-045239863.html</link>
<guid isPermaLink="true" >https://www.yahoo.com/lifestyle/tony-hsieh-zappos-luminary-revolutionized-045239863.html</guid>
<description>&lt;div class=&quot;caas-figure-with-pb&quot;&gt;
&lt;div class=&quot;caas-img-container&quot;&gt;&lt;img class=&quot;caas-img has-preview&quot; alt=&quot;&quot; src=&quot;https://s.yimg.com/ny/api/res/1.2/Bc.RpAMpxj9PY_jjoARCoQ--/YXBwaWQ9aGlnaGxhbmRlcjt3PTk2MDtoPTY0MC4zMTI1/https://s.yimg.com/uu/api/res/1.2/T9tlhN5WM.wCOMZS9TMQPw--~B/aD02ODM7dz0xMDI0O2FwcGlkPXl0YWNoeW9u/https://media.zenfs.com/en/footwear_news_642/b12b394ba5c99b387784e56b0c5301d9&quot; data-src=&quot;https://s.yimg.com/ny/api/res/1.2/Bc.RpAMpxj9PY_jjoARCoQ--/YXBwaWQ9aGlnaGxhbmRlcjt3PTk2MDtoPTY0MC4zMTI1/https://s.yimg.com/uu/api/res/1.2/T9tlhN5WM.wCOMZS9TMQPw--~B/aD02ODM7dz0xMDI0O2FwcGlkPXl0YWNoeW9u/https://media.zenfs.com/en/footwear_news_642/b12b394ba5c99b387784e56b0c5301d9&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Tony Hsieh, the brilliant and big-hearted Zappos.com luminary who revolutionized the shoe business and built one of the most innovative companies in modern history, has died. He was 46.&lt;/p&gt;
&lt;p&gt;Hsieh’s family confirmed his death tonight in a text message to friends, noting that Tony’s generous spirit touched the lives of countless people and that he left an indelible mark on the world.&lt;/p&gt;
&lt;p&gt;The executive died from injuries sustained in a Connecticut house fire, according to press reports citing a family lawyer.&lt;/p&gt;

&lt;p&gt;Hsieh, a serial entrepreneur, co-founded Zappos in 1999 and grew it into a blockbuster business before selling it to Amazon in 2009.&lt;/p&gt;
&lt;p&gt;Delivering happiness was the executive’s mantra. As he built Zappos, Hsieh’s chief goal was to redefine the meaning of company culture. From the beginning, his singular vision set the company apart as a pioneer in footwear e-commerce and corporate America.&lt;/p&gt;
&lt;p&gt;“The world has lost a tremendous visionary and an incredible human being,” said Zappos CEO Kedar Deshpande in a note to employees on Friday. “We recognize that not only have we lost our inspiring former leader, but many of you have also lost a mentor and a friend. Tony played such an integral part in helping create the thriving Zappos business we have today, along with his passion for helping to support and drive our company culture.”&lt;/p&gt;
&lt;p&gt;Hsieh, who retired and stepped down from the Zappos helm this summer, told FN last year how much the company had evolved since it was founded two decades ago.&lt;/p&gt;
&lt;p&gt;“A lot of our growth and innovation moving forward will be based on thinking about what we’re in the business of differently,” Hsieh told FN last year, when Zappos &lt;a href=&quot;https://footwearnews.com/2019/business/retail/zappos-culture-retail-future-strategy-interview-1202777453/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:celebrated its 20th anniversary&quot; class=&quot;link rapid-noclick-resp&quot;&gt;celebrated its 20th anniversary&lt;/a&gt;. “We used to say we’re a service company that just happens to sell shoes, and now it’s turned into: We’re a service company that just happens to sell blank.”&lt;/p&gt;
&lt;p&gt;The Zappos origin story is a familiar one — Hsieh shared it in his speaking engagements and &lt;a href=&quot;https://footwearnews.com/2010/business/news/reading-tony-hsieh-76614/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:in the pages of his New York Times best-seller&quot; class=&quot;link rapid-noclick-resp&quot;&gt;in the pages of his &lt;em&gt;New York Times&lt;/em&gt; best-seller&lt;/a&gt;, “Delivering Happiness: A Path to Profits, Passion, and Purpose.” And the 100,000-plus visitors who have toured Zappos’ headquarters have been regaled with the tale of a fateful phone call.&lt;/p&gt;
&lt;p&gt;&lt;button class=&quot;link rapid-noclick-resp caas-button collapse-button&quot; aria-label=&quot;&quot; title=&quot;&quot; data-ylk=&quot;elm:readmore;slk:Story continues&quot;&gt;Story continues&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;After Zappos co-founder Nick Swinmurn latched onto the idea of selling shoes online, he left a voicemail with Hsieh’s San Francisco venture capital fund, Venture Frogs, hooking him with one factoid: “It was the fact that 5 percent of a $40 billion shoe business was already being done through mail order,” Swinmurn told FN during &lt;a href=&quot;https://footwearnews.com/2009/business/news/zappos-milestone-qa-with-nick-swinmurn-90543/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:a 2009 interview&quot; class=&quot;link rapid-noclick-resp&quot;&gt;a 2009 interview&lt;/a&gt;. “That was my big statistic. People were already buying shoes without trying them on.”&lt;/p&gt;
&lt;p&gt;Then, after another call to the Nordstrom department store in San Francisco, Fred Mossler eventually jumped on board, and together the new team set out to change the industry.&lt;/p&gt;
&lt;p&gt;Zappos was a pioneer in free shipping and returns, and it didn’t take long for the concept to take hold as e-commerce took off.&lt;/p&gt;
&lt;p&gt;In 2009, &lt;a href=&quot;https://footwearnews.com/2009/business/news/amazon-finalizes-zappos-deal-83706/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:Zappos was acquired&quot; class=&quot;link rapid-noclick-resp&quot;&gt;Zappos was acquired&lt;/a&gt; by online behemoth Amazon.com Inc. for 10 million shares of Amazon stock, which, at the time of the deal, Hsieh said was valued at about $1.2 billion.&lt;/p&gt;
&lt;p&gt;While many market watchers celebrated the marriage, they also speculated that the new parent could impose its own culture on the new division. But true to the initial agreement, Zappos has continued to operate separately from Amazon, maintaining its own leadership team and unique character.&lt;/p&gt;
&lt;p&gt;Several years into the Amazon partnership, Hsieh launched The Downtown Project, an initiative to revitalize downtown Las Vegas.&lt;/p&gt;
&lt;p&gt;The goal, Hsieh explained at FN’s 2013 CEO Summit, was to &lt;a href=&quot;https://footwearnews.com/2013/business/news/tony-hsieh-details-downtown-project-142229/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:create a neighborhood&quot; class=&quot;link rapid-noclick-resp&quot;&gt;create a neighborhood&lt;/a&gt; that is walkable and community-focused. The Downtown Project is even investing in individuals, helping them realize their dreams of starting small businesses. “We are thinking of the city as a startup,” he said. “We want it to be the anti-Strip — with bars and coffee shops.”&lt;/p&gt;
&lt;p&gt;In 2015, the company did away with managers in favor of a form of self-organization called holacracy.&lt;/p&gt;
&lt;p&gt;In a blog post at the time, Hsieh wrote, “Like all the bold steps we’ve done in the past, it feels a little scary, but it also feels like exactly the type of thing that only a company such as Zappos would dare to attempt at this scale.”&lt;/p&gt;
&lt;p&gt;Since its early days, Zappos has functioned as something of an incubator for testing theories about corporate culture and productivity — long before those ideas became the buzzwords they are today. Much of the credit for that lies with Hsieh.&lt;/p&gt;
&lt;p&gt;“His spirit will forever be a part of Zappos, and we will continue to honor his memory by dedicating ourselves to continuing the work he was so passionate about,” Deshpande wrote in the note to employees. “Our thoughts remain with him and his loved ones. Zappos is a family, and we will continue to hold Tony close in our hearts.”&lt;/p&gt;
&lt;p&gt;Click through the gallery to see some memorable photos of Hsieh through the years.&lt;/p&gt;
&lt;p&gt;Launch Gallery: &lt;a href=&quot;https://footwearnews.com/gallery/zappos-tony-hsieh-photos/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:Zappos CEO Tony Hsieh Through the Years&quot; class=&quot;link rapid-noclick-resp&quot;&gt;Zappos CEO Tony Hsieh Through the Years&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;More from Footwear News&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sign up for &lt;a href=&quot;https://pages.email.footwearnews.com/signup/?source=yahoo&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:FN's Newsletter&quot; class=&quot;link rapid-noclick-resp&quot;&gt;FN's Newsletter&lt;/a&gt;. For the latest news, follow us on &lt;a href=&quot;http://bit.ly/2GfzHCH&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:Facebook&quot; class=&quot;link rapid-noclick-resp&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;http://bit.ly/2DLeLBQ&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:Twitter&quot; class=&quot;link rapid-noclick-resp&quot;&gt;Twitter&lt;/a&gt;, and &lt;a href=&quot;http://bit.ly/2TwcL5O&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; data-ylk=&quot;slk:Instagram&quot; class=&quot;link rapid-noclick-resp&quot;&gt;Instagram&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 28 Nov 2020 05:19:56 +0000</pubDate>
<dc:creator>MrMcDowall</dc:creator>
<og:title>Tony Hsieh, Zappos Luminary Who Revolutionized the Shoe Business, Dies at 46</og:title>
<og:url>https://www.yahoo.com/lifestyle/tony-hsieh-zappos-luminary-revolutionized-045239863.html</og:url>
<og:description>The big-hearted exec pioneered footwear e-tailing and delivered happiness to countless people.</og:description>
<og:image>https://s.yimg.com/uu/api/res/1.2/T9tlhN5WM.wCOMZS9TMQPw--~B/aD02ODM7dz0xMDI0O2FwcGlkPXl0YWNoeW9u/https://media.zenfs.com/en/footwear_news_642/b12b394ba5c99b387784e56b0c5301d9</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.yahoo.com/lifestyle/tony-hsieh-zappos-luminary-revolutionized-045239863.html</dc:identifier>
</item>
<item>
<title>K6: Like unit testing, for performance</title>
<link>https://github.com/loadimpact/k6</link>
<guid isPermaLink="true" >https://github.com/loadimpact/k6</guid>
<description>&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://k6.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://github.com/loadimpact/k6/raw/master/assets/logo.svg&quot; alt=&quot;k6&quot; width=&quot;220&quot; height=&quot;213&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 align=&quot;center&quot;&gt;Like unit testing, for performance&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;A modern load testing tool for developers and testers in the DevOps era.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/loadimpact/k6/releases&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/739a9cd9b2c7109f880196c2fe97a2ba6ba2f3e00f749a89b5374941a5410a2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6c6f6164696d706163742f6b362e737667&quot; alt=&quot;Github release&quot; data-canonical-src=&quot;https://img.shields.io/github/release/loadimpact/k6.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/loadimpact/k6/tree/master&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c50e38a9bc5cf4d547210716964624d03326bd321370ccd2102ed5bdf2cda4f8/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6c6f6164696d706163742f6b362f6d61737465722e737667&quot; alt=&quot;Build status&quot; data-canonical-src=&quot;https://img.shields.io/circleci/project/github/loadimpact/k6/master.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/loadimpact/k6&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/fde45311eeaefee5a9f2e8ce05439bc9cee22aef2b76a2267a4cb80e417d21cf/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6c6f6164696d706163742f6b36&quot; alt=&quot;Go Report Card&quot; data-canonical-src=&quot;https://goreportcard.com/badge/github.com/loadimpact/k6&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/loadimpact/k6&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/efaf4a73d9f0d510f9f696431f61594757dca2e228b692f93ea3a1a8c5cc0e5d/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6c6f6164696d706163742f6b362f6d61737465722e737667&quot; alt=&quot;Codecov branch&quot; data-canonical-src=&quot;https://img.shields.io/codecov/c/github/loadimpact/k6/master.svg&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://twitter.com/k6_io&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/417423c3f1545432d842b0ac12a1a7a439dfbf24a160a444d9395988d80eff74/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d406b365f696f2d3535616365652e737667&quot; alt=&quot;@k6_io on Twitter&quot; data-canonical-src=&quot;https://img.shields.io/badge/twitter-@k6_io-55acee.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://k6.io/slack&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/5dc191138d7586b2771594ce3bff93e74e633b069e7ab0b2791f65587eedb508/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d6b362d6666363962342e737667&quot; alt=&quot;Slack channel&quot; data-canonical-src=&quot;https://img.shields.io/badge/Slack-k6-ff69b4.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/loadimpact/k6/releases&quot;&gt;Download&lt;/a&gt; · &lt;a href=&quot;https://github.com/loadimpact/k6#install&quot;&gt;Install&lt;/a&gt; · &lt;a href=&quot;https://k6.io/docs&quot; rel=&quot;nofollow&quot;&gt;Documentation&lt;/a&gt; · &lt;a href=&quot;https://community.k6.io/&quot; rel=&quot;nofollow&quot;&gt;Community&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/loadimpact/k6/blob/master/assets/github-hr.png&quot;&gt;&lt;img src=&quot;https://github.com/loadimpact/k6/raw/master/assets/github-hr.png&quot; alt=&quot;---&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;k6&lt;/strong&gt; is a modern load testing tool, building on &lt;a href=&quot;https://loadimpact.com/&quot; rel=&quot;nofollow&quot;&gt;Load Impact&lt;/a&gt;'s years of experience in the load and performance testing industry. It provides a clean, approachable scripting API, &lt;a href=&quot;https://k6.io/docs/getting-started/running-k6&quot; rel=&quot;nofollow&quot;&gt;local&lt;/a&gt; and &lt;a href=&quot;https://k6.io/docs/cloud&quot; rel=&quot;nofollow&quot;&gt;cloud execution&lt;/a&gt;, and flexible configuration.&lt;/p&gt;
&lt;p&gt;This is how load testing should look in the 21st century.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/loadimpact/k6/blob/master/assets/k6-demo.gif&quot;&gt;&lt;img width=&quot;600&quot; src=&quot;https://github.com/loadimpact/k6/raw/master/assets/k6-demo.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Menu&lt;/h2&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Scripting in ES6 JS&lt;/strong&gt;: support for &lt;a href=&quot;https://k6.io/docs/using-k6/modules&quot; rel=&quot;nofollow&quot;&gt;modules&lt;/a&gt; to aid code reusability across an organization&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Everything as code&lt;/strong&gt;: test logic and &lt;a href=&quot;https://k6.io/docs/using-k6/options&quot; rel=&quot;nofollow&quot;&gt;configuration options&lt;/a&gt; are both in JS for version control friendliness&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automation-friendly&lt;/strong&gt;: &lt;a href=&quot;https://k6.io/docs/using-k6/checks&quot; rel=&quot;nofollow&quot;&gt;checks&lt;/a&gt; (like asserts) and &lt;a href=&quot;https://k6.io/docs/using-k6/thresholds&quot; rel=&quot;nofollow&quot;&gt;thresholds&lt;/a&gt; for easy and flexible CI configuration!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://k6.io/docs/using-k6/http-requests&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HTTP/1.1&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/using-k6/protocols/http-2&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HTTP/2&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://k6.io/docs/using-k6/protocols/websockets&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;WebSocket&lt;/strong&gt;&lt;/a&gt; protocol support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS features&lt;/strong&gt;: &lt;a href=&quot;https://k6.io/docs/using-k6/protocols/ssl-tls/ssl-tls-client-certificates&quot; rel=&quot;nofollow&quot;&gt;client certificates&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/using-k6/protocols/ssl-tls/ssl-tls-version-and-ciphers&quot; rel=&quot;nofollow&quot;&gt;configurable SSL/TLS versions and ciphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Batteries included&lt;/strong&gt;: &lt;a href=&quot;https://k6.io/docs/using-k6/cookies&quot; rel=&quot;nofollow&quot;&gt;Cookies&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-crypto&quot; rel=&quot;nofollow&quot;&gt;Crypto&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/using-k6/metrics#custom-metrics&quot; rel=&quot;nofollow&quot;&gt;Custom metrics&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-encoding&quot; rel=&quot;nofollow&quot;&gt;Encodings&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/using-k6/environment-variables&quot; rel=&quot;nofollow&quot;&gt;Environment variables&lt;/a&gt;, JSON, &lt;a href=&quot;https://k6.io/docs/using-k6/html/working-with-html-forms&quot; rel=&quot;nofollow&quot;&gt;HTML forms&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/javascript-api/init-context/open-filepath-mode&quot; rel=&quot;nofollow&quot;&gt;files&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/getting-started/running-k6#section-stages-ramping-updown-vus&quot; rel=&quot;nofollow&quot;&gt;flexible execution control&lt;/a&gt;, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Built-in HAR converter&lt;/strong&gt;: record browser sessions as &lt;a href=&quot;https://en.wikipedia.org/wiki/.har&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;.har&lt;/code&gt; files&lt;/a&gt; and &lt;a href=&quot;https://k6.io/docs/using-k6/session-recording-har-support&quot; rel=&quot;nofollow&quot;&gt;directly convert them to k6 scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flexible metrics storage and visualization&lt;/strong&gt;: &lt;a href=&quot;https://k6.io/docs/results-visualization/influxdb-+-grafana&quot; rel=&quot;nofollow&quot;&gt;InfluxDB&lt;/a&gt; (+Grafana), &lt;a href=&quot;https://k6.io/docs/getting-started/results-output/json&quot; rel=&quot;nofollow&quot;&gt;JSON&lt;/a&gt; or &lt;a href=&quot;https://k6.io/docs/cloud/analyzing-results/overview&quot; rel=&quot;nofollow&quot;&gt;k6 Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://k6.io/docs/using-k6/cloud-execution&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Cloud execution&lt;/strong&gt;&lt;/a&gt; and distributed tests &lt;em&gt;(currently only on infrastructure managed by &lt;a href=&quot;https://loadimpact.com/&quot; rel=&quot;nofollow&quot;&gt;Load Impact&lt;/a&gt;, with native distributed execution in k6 &lt;a href=&quot;https://github.com/loadimpact/k6/wiki/Roadmap&quot;&gt;planned&lt;/a&gt; for the near future!)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There's even more! &lt;a href=&quot;https://k6.io/docs/&quot; rel=&quot;nofollow&quot;&gt;See all features available in k6.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;h3&gt;Mac&lt;/h3&gt;
&lt;p&gt;Install with &lt;a href=&quot;https://brew.sh/&quot; rel=&quot;nofollow&quot;&gt;Homebrew&lt;/a&gt; by running:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
brew install k6
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Windows&lt;/h3&gt;
&lt;p&gt;You can manually download and install the &lt;a href=&quot;https://dl.bintray.com/loadimpact/windows/k6-v0.29.0-amd64.msi&quot; rel=&quot;nofollow&quot;&gt;official &lt;code&gt;.msi&lt;/code&gt; installation package&lt;/a&gt; or, if you use the &lt;a href=&quot;https://chocolatey.org/&quot; rel=&quot;nofollow&quot;&gt;chocolatey package manager&lt;/a&gt;, follow &lt;a href=&quot;https://bintray.com/repo/buildSettings?repoPath=%2Floadimpact%2Fchoco&quot; rel=&quot;nofollow&quot;&gt;these instructions&lt;/a&gt; to set up the k6 repository.&lt;/p&gt;
&lt;h3&gt;Linux&lt;/h3&gt;
&lt;p&gt;For Debian-based Linux distributions, you can install k6 from the private deb repo like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 379CE192D401AB61
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;deb https://dl.bintray.com/loadimpact/deb stable main&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/apt/sources.list
sudo apt-get update
sudo apt-get install k6
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for rpm-based ones like Fedora and CentOS:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
wget https://bintray.com/loadimpact/rpm/rpm -O bintray-loadimpact-rpm.repo
sudo mv bintray-loadimpact-rpm.repo /etc/yum.repos.d/
sudo dnf install k6   &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; use yum instead of dnf for older distros&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Docker&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
docker pull loadimpact/k6
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Pre-built binaries &amp;amp; other platforms&lt;/h3&gt;
&lt;p&gt;If there isn't an official package for your operating system or architecture, or if you don't want to install a custom repository, you can easily grab a pre-built binary from &lt;a href=&quot;https://github.com/loadimpact/k6/releases&quot;&gt;the GitHub Releases page&lt;/a&gt;. Once you download and unpack the release, you can optionally copy the &lt;code&gt;k6&lt;/code&gt; binary it contains somewhere in your &lt;code&gt;PATH&lt;/code&gt;, so you are able to run k6 from any location on your system.&lt;/p&gt;
&lt;h3&gt;Build from source&lt;/h3&gt;
&lt;p&gt;k6 is written in Go, so it's just a single statically-linked executable and very easy to build and distribute. To build from source you need &lt;strong&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot; rel=&quot;nofollow&quot;&gt;Git&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://golang.org/doc/install&quot; rel=&quot;nofollow&quot;&gt;Go&lt;/a&gt;&lt;/strong&gt; (1.12 or newer). Follow these instructions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Run &lt;code&gt;go get github.com/loadimpact/k6&lt;/code&gt; which will:
&lt;ul&gt;&lt;li&gt;git clone the repo and put the source in &lt;code&gt;$GOPATH/src/github.com/loadimpact/k6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;build a &lt;code&gt;k6&lt;/code&gt; binary and put it in &lt;code&gt;$GOPATH/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Make sure you have &lt;code&gt;$GOPATH/bin&lt;/code&gt; in your &lt;code&gt;PATH&lt;/code&gt; (or copy the &lt;code&gt;k6&lt;/code&gt; binary somewhere in your &lt;code&gt;PATH&lt;/code&gt;), so you are able to run k6 from any location.&lt;/li&gt;
&lt;li&gt;Tada, you can now run k6 using &lt;code&gt;k6 run script.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Running k6&lt;/h2&gt;
&lt;p&gt;k6 works with the concept of &lt;strong&gt;virtual users&lt;/strong&gt; (VUs) that execute scripts - they're essentially glorified, parallel &lt;code&gt;while(true)&lt;/code&gt; loops. Scripts are written using JavaScript, as ES6 modules, which allows you to break larger tests into smaller and more reusable pieces, making it easy to scale tests across an organization.&lt;/p&gt;
&lt;p&gt;Scripts must contain, at the very least, an exported &lt;code&gt;default&lt;/code&gt; function - this defines the entry point for your VUs, similar to the &lt;code&gt;main()&lt;/code&gt; function in many languages. Let's create a very simple script that makes an HTTP GET request to a test website:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;k6/http&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;https://test-api.k6.io&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The script details and how we can extend and configure it will be explained below, but for now simply save the above snippet as a &lt;code&gt;script.js&lt;/code&gt; file somewhere on your system. Assuming that you've &lt;a href=&quot;https://github.com/loadimpact/k6#install&quot;&gt;installed k6&lt;/a&gt; correctly, on Linux and Mac you can run the saved script by executing &lt;code&gt;k6 run script.js&lt;/code&gt; from the same folder. For Windows the command is almost the same - &lt;code&gt;k6.exe run script.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you decide to use the &lt;a href=&quot;https://hub.docker.com/r/loadimpact/k6/&quot; rel=&quot;nofollow&quot;&gt;k6 docker image&lt;/a&gt;, the command will be slightly different. Instead of passing the script filename to k6, a dash is used to instruct k6 to read the script contents directly via the standard input. This allows us to to avoid messing with docker volumes for such a simple single-file script, greatly simplifying the docker command: &lt;code&gt;docker run -i loadimpact/k6 run - &amp;lt;script.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In some situations it may also be useful to execute remote scripts. You can do that with HTTP&lt;strong&gt;S&lt;/strong&gt; URLs in k6 by &lt;a href=&quot;https://k6.io/docs/using-k6/modules#section-remote-modules&quot; rel=&quot;nofollow&quot;&gt;importing them&lt;/a&gt; in the script via their URL or simply specifying their URL in the CLI command: &lt;code&gt;k6 run github.com/loadimpact/k6/samples/http_2.js&lt;/code&gt; (k6 &quot;knows&quot; a bit about github and cdnjs URLs, so this command is actually shorthand for &lt;code&gt;k6 run raw.githubusercontent.com/loadimpact/k6/master/samples/http_2.js&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;For more information on how to get started running k6, please look at the &lt;a href=&quot;https://k6.io/docs/getting-started/running-k6&quot; rel=&quot;nofollow&quot;&gt;Running k6&lt;/a&gt; documentation page. If you want to know more about making and measuring HTTP requests with k6, take a look &lt;a href=&quot;https://k6.io/docs/using-k6/http-requests&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-http&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. And for information about the commercial k6 services like distributed cloud execution (the &lt;code&gt;k6 cloud&lt;/code&gt; command) or Cloud Results (&lt;code&gt;k6 run -o cloud&lt;/code&gt;), you can visit &lt;a href=&quot;https://k6.io/cloud&quot; rel=&quot;nofollow&quot;&gt;k6.io&lt;/a&gt; or view the &lt;a href=&quot;https://k6.io/docs/cloud&quot; rel=&quot;nofollow&quot;&gt;cloud documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;In this section we'll briefly explore some of the basic concepts and principles of how k6 works. If you want to learn more in-depth about the k6 scripting API, results output, and features, you can visit the full k6 documentation website at &lt;a href=&quot;https://k6.io/docs/&quot; rel=&quot;nofollow&quot;&gt;k6.io/docs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Init and VU stages&lt;/h3&gt;
&lt;p&gt;Earlier, in the &lt;a href=&quot;https://github.com/loadimpact/k6#running-k6&quot;&gt;Running k6&lt;/a&gt; section, we mentioned that scripts must contain a &lt;code&gt;default&lt;/code&gt; function. &lt;em&gt;&quot;Why not just run my script normally, from top to bottom&quot;&lt;/em&gt;, you might ask - the answer is: we do, but code &lt;strong&gt;inside&lt;/strong&gt; and &lt;strong&gt;outside&lt;/strong&gt; your &lt;code&gt;default&lt;/code&gt; function can do different things.&lt;/p&gt;
&lt;p&gt;Each virtual user (VU) executes your script in a completely separate JavaScript runtime, parallel to all of the other running VUs. Code inside the &lt;code&gt;default&lt;/code&gt; function is called &lt;em&gt;VU code&lt;/em&gt;, and is run over and over, for as long as the test is running. Code outside of the &lt;code&gt;default&lt;/code&gt; function is called &lt;em&gt;init code&lt;/em&gt;, and is run only once per VU, when that VU is initialized.&lt;/p&gt;
&lt;p&gt;VU code can make HTTP and websocket requests, emit metrics, and generally do everything you'd expect a load test to do, with a few important exceptions - you can't load anything from your local filesystem, or import any other modules. This all has to be done from the &lt;a href=&quot;https://k6.io/docs/javascript-api/init-context&quot; rel=&quot;nofollow&quot;&gt;init code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are two reasons for this. The first is, of course: performance. If you read a file from disk on every single script iteration, it'd be needlessly slow. Even if you cache the contents of the file and any imported modules, it'd mean the &lt;em&gt;first run&lt;/em&gt; of the script would be much slower than all the others. Worse yet, if you have a script that imports or loads things based on things that can only be known at runtime, you'd get slow iterations thrown in every time you load something new. That's also the reason why we initialize &lt;em&gt;all&lt;/em&gt; needed VUs before any of them starts the actual load test by executing the &lt;code&gt;default&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;But there's another, more interesting reason. By forcing all imports and file reads into the init context, we design for distributed execution. We know which files will be needed, so we distribute only those files to each node in the cluster. We know which modules will be imported, so we can bundle them up in an &lt;a href=&quot;https://k6.io/docs/using-k6/archives-for-bundling-sharing-a-test&quot; rel=&quot;nofollow&quot;&gt;archive&lt;/a&gt; from the get-go. And, tying into the performance point above, the other nodes don't even need writable file systems - everything can be kept in-memory.&lt;/p&gt;
&lt;p&gt;This means that if your script works when it's executed with &lt;code&gt;k6 run&lt;/code&gt; locally, it should also work without any modifications in a distributed execution environment like &lt;code&gt;k6 cloud&lt;/code&gt; (that executes it in the commercial &lt;a href=&quot;https://k6.io/cloud&quot; rel=&quot;nofollow&quot;&gt;k6 cloud infrastructure&lt;/a&gt;) or, in the future, with the &lt;a href=&quot;https://github.com/loadimpact/k6/wiki/Roadmap&quot;&gt;planned&lt;/a&gt; k6 native cluster execution mode.&lt;/p&gt;
&lt;h3&gt;Script execution&lt;/h3&gt;
&lt;p&gt;For simplicity, unlike many other JavaScript runtimes, a lot of the operations in k6 are synchronous. That means that, for example, the &lt;code&gt;let response = http.get(&quot;https://test-api.k6.io/&quot;)&lt;/code&gt; call from the &lt;a href=&quot;https://github.com/loadimpact/k6#running-k6&quot;&gt;Running k6&lt;/a&gt; example script will block the VU execution until the HTTP request is completed, save the &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-http/response-k6-http&quot; rel=&quot;nofollow&quot;&gt;response information&lt;/a&gt; in the &lt;code&gt;response&lt;/code&gt; variable and only then continue executing the rest of the script - no callbacks and promises needed.&lt;/p&gt;
&lt;p&gt;This simplification works because k6 isn't just a single JavaScript runtime. Instead each VU independently executes the supplied script in its own separate and semi-isolated JavaScript runtime, in parallel to all of the other running VUs. This allows us to fully utilize modern multi-core hardware, while at the same time lowering the script complexity by having mostly synchronous functions. Where it makes sense, we also have in-VU parallelization as well, for example the &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-http/batch-requests&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;http.batch()&lt;/code&gt;&lt;/a&gt; function (which allows a single VU to make multiple simultaneous HTTP requests like a browser/real user would) or the &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-ws&quot; rel=&quot;nofollow&quot;&gt;websocket&lt;/a&gt; support.&lt;/p&gt;
&lt;p&gt;As an added bonus, there's an actual &lt;a href=&quot;https://k6.io/docs/javascript-api/k6/sleep-t&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt; function&lt;/a&gt;! And you can also use the VU separation to reuse data between iterations (i.e. executions of the &lt;code&gt;default&lt;/code&gt; function) in the same VU:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;vuLocalCounter&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-s1&quot;&gt;vuLocalCounter&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Script options and execution control&lt;/h3&gt;
&lt;p&gt;So we've mentioned VUs and iterations, but how are those things controlled?&lt;/p&gt;
&lt;p&gt;By default, if nothing is specified, k6 runs a script with only 1 VU and for 1 iteration only. Useful for debugging, but usually not very useful when doing load testing. For actual script execution in a load test, k6 offers a lot of flexibility - there are a few different configuration mechanisms you can use to specify script options, and several different options to control the number of VUs and how long your script will be executed, among &lt;a href=&quot;https://k6.io/docs/using-k6/options&quot; rel=&quot;nofollow&quot;&gt;other things&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's say that you want to specify number of VUs in your script. In order of precedence, you can use any of the following configuration mechanisms to do it:&lt;/p&gt;
&lt;ol readability=&quot;13.655606407323&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Command-line flags: &lt;code&gt;k6 run --vus 10 script.js&lt;/code&gt;, or via the short &lt;code&gt;-u&lt;/code&gt; flag syntax if we want to save 3 keystrokes (&lt;code&gt;k6 run -u 10 script.js&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Environment variables: setting &lt;code&gt;K6_VUS=20&lt;/code&gt; before you run the script with k6. Especially useful when using the &lt;a href=&quot;https://hub.docker.com/r/loadimpact/k6/&quot; rel=&quot;nofollow&quot;&gt;docker k6 image&lt;/a&gt; and when running in containerized environments like Kubernetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;16.560885608856&quot;&gt;
&lt;p&gt;Your script can &lt;code&gt;export&lt;/code&gt; an &lt;code&gt;options&lt;/code&gt; object that k6 reads and uses to set any options you want; for example, setting VUs would look like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;vus&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;/* ... do whatever ... */&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This functionality is very useful, because here you have access to key-value &lt;a href=&quot;https://k6.io/docs/using-k6/environment-variables&quot; rel=&quot;nofollow&quot;&gt;environment variables&lt;/a&gt; that k6 exposes to the script via the global &lt;code&gt;__ENV&lt;/code&gt; object, so you can use the full power of JavaScript to do things like:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;__ENV&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;script_scenario&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;staging&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;/* first set of options */&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;/* second set of options */&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or any variation of the above, like importing different config files, etc. Also, having most of the script configuration right next to the script code makes k6 scripts very easily version-controllable.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6.9194078947368&quot;&gt;
&lt;p&gt;A global JSON config. By default k6 looks for it in the config home folder of the current user (OS-dependent, for Linux/BSDs k6 will look for &lt;code&gt;config.json&lt;/code&gt; inside of &lt;code&gt;${HOME}/.config/loadimpact/k6&lt;/code&gt;), though that can be modified with the &lt;code&gt;--config&lt;/code&gt;/&lt;code&gt;-c&lt;/code&gt; CLI flag. It uses the same option keys as the exported &lt;code&gt;options&lt;/code&gt; from the script file, so we can set the VUs by having &lt;code&gt;config.json&lt;/code&gt; contain &lt;code&gt;{ &quot;vus&quot;: 1 }&lt;/code&gt;. Although it rarely makes sense to set the number of VUs there, the global config file is much more useful for storing things like login credentials for the different &lt;a href=&quot;https://github.com/loadimpact/k6#outputs&quot;&gt;outputs&lt;/a&gt;, as used by the &lt;code&gt;k6 login&lt;/code&gt; subcommand...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Configuration mechanisms do have an order of precedence. As presented, options at the top of the list can override configuration mechanisms that are specified lower in the list. If we used all of the above examples for setting the number of VUs, we would end up with 10 VUs, since the CLI flags have the highest priority. Also please note that not all of the available options are configurable via all different mechanisms - some options may be impractical to specify via simple strings (so no CLI/environment variables), while other rarely-used ones may be intentionally excluded from the CLI flags to avoid clutter - refer to &lt;a href=&quot;https://k6.io/docs/using-k6/options&quot; rel=&quot;nofollow&quot;&gt;options docs&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;As shown above, there are several ways to configure the number of simultaneous virtual users k6 will launch. There are also different ways to specify how long those virtual users will be running. For simple tests you can:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set the test duration by the &lt;code&gt;--duration&lt;/code&gt;/&lt;code&gt;-d&lt;/code&gt; CLI flag (or the &lt;code&gt;K6_DURATION&lt;/code&gt; environment variable and the &lt;code&gt;duration&lt;/code&gt; script/JSON option). For ease of use, &lt;code&gt;duration&lt;/code&gt; is specified with human readable values like &lt;code&gt;1h30m10s&lt;/code&gt; - &lt;code&gt;k6 run --duration 30s script.js&lt;/code&gt;, &lt;code&gt;k6 cloud -d 15m10s script.js&lt;/code&gt;, &lt;code&gt;export K6_DURATION=1h&lt;/code&gt;, etc. If set to &lt;code&gt;0&lt;/code&gt;, k6 wouldn't stop executing the script unless the user manually stops it.&lt;/li&gt;
&lt;li&gt;Set the total number of script iterations with the &lt;code&gt;--iterations&lt;/code&gt;/&lt;code&gt;-i&lt;/code&gt; CLI flag (or the &lt;code&gt;K6_ITERATIONS&lt;/code&gt; environment variable and the &lt;code&gt;iterations&lt;/code&gt; script/JSON option). k6 will stop executing the script whenever the &lt;strong&gt;total&lt;/strong&gt; number of iterations (i.e. the number of iterations across all VUs) reaches the specified number. So if you have &lt;code&gt;k6 run --iterations 10 --vus 10 script.js&lt;/code&gt;, then each VU would make only a single iteration.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For more complex cases, you can specify execution stages. They are a combination of &lt;code&gt;duration,target-VUs&lt;/code&gt; pairs. These pairs instruct k6 to linearly ramp up, ramp down, or stay at the number of VUs specified for the period specified. Execution stages can be set via the &lt;code&gt;stages&lt;/code&gt; script/JSON option as an array of &lt;code&gt;{ duration: ..., target: ... }&lt;/code&gt; pairs, or with the &lt;code&gt;--stage&lt;/code&gt;/&lt;code&gt;-s&lt;/code&gt; CLI flags and the &lt;code&gt;K6_STAGES&lt;/code&gt; environment variable via the &lt;code&gt;duration:target,duration:target...&lt;/code&gt; syntax.&lt;/p&gt;
&lt;p&gt;For example, the following options would have k6 linearly ramping up from 5 to 10 VUs over the period of 3 minutes (k6 starts with &lt;code&gt;vus&lt;/code&gt; number of VUs, or 1 by default), then staying flat at 10 VUs for 5 minutes, then ramping up from 10 to 35 VUs over the next 10 minutes before finally ramping down to 0 VUs for another 90 seconds.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;17&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;vus&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;stages&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;3m&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;5m&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;10m&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;1m30s&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can use the CLI flags &lt;code&gt;--vus 5 --stage 3m:10,5m:10,10m:35,1m30s:0&lt;/code&gt; or set the environment variables &lt;code&gt;K6_VUS=5 K6_STAGES=&quot;3m:10,5m:10,10m:35,1m30s:0&quot;&lt;/code&gt; to achieve the same results.&lt;/p&gt;
&lt;p&gt;For a complete list of supported k6 options, refer to the documentation at &lt;a href=&quot;https://k6.io/docs/using-k6/options&quot; rel=&quot;nofollow&quot;&gt;k6.io/docs/using-k6/options&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hint: besides accessing the supplied &lt;a href=&quot;https://k6.io/docs/using-k6/environment-variables&quot; rel=&quot;nofollow&quot;&gt;environment variables&lt;/a&gt; through the &lt;code&gt;__ENV&lt;/code&gt; global object briefly mentioned above, you can also use the &lt;a href=&quot;https://k6.io/docs/using-k6/execution-context-variables&quot; rel=&quot;nofollow&quot;&gt;execution context variables&lt;/a&gt; &lt;code&gt;__VU&lt;/code&gt; and &lt;code&gt;__ITER&lt;/code&gt; to access the current VU number and the number of the current iteration &lt;strong&gt;for that VU&lt;/strong&gt;. These variables can be very useful if you want VUs to execute different scripts/scenarios or to aid in generating different data per VU. &lt;code&gt;http.post(&quot;https://some.example.website/signup&quot;, {username: `testuser${__VU}@testsite.com`, /* ... */})&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For even more complex scenarios, you can use the k6 &lt;a href=&quot;https://k6.io/docs/misc/k6-rest-api&quot; rel=&quot;nofollow&quot;&gt;REST API&lt;/a&gt; and the &lt;code&gt;k6 status&lt;/code&gt;, &lt;code&gt;k6 scale&lt;/code&gt;, &lt;code&gt;k6 pause&lt;/code&gt;, &lt;code&gt;k6 resume&lt;/code&gt; CLI commands to manually control a running k6 test. For &lt;a href=&quot;https://k6.io/docs/using-k6/cloud-execution&quot; rel=&quot;nofollow&quot;&gt;cloud-based tests&lt;/a&gt;, executed on our managed infrastructure via the &lt;code&gt;k6 cloud&lt;/code&gt; command, you can also specify the VU distribution percentages for different load zones when executing load tests, giving you scalable and geographically-distributed test execution.&lt;/p&gt;
&lt;h3&gt;Setup and teardown&lt;/h3&gt;
&lt;p&gt;Beyond the init code and the required VU stage (i.e. the &lt;code&gt;default&lt;/code&gt; function), which is code run for each VU, k6 also supports test wide setup and teardown stages, like many other testing frameworks and tools. The &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; functions, like the &lt;code&gt;default&lt;/code&gt; function, need to be &lt;code&gt;export&lt;/code&gt;ed. But unlike the &lt;code&gt;default&lt;/code&gt; function, &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; are only called once for a test - &lt;code&gt;setup()&lt;/code&gt; is called at the beginning of the test, after the init stage but before the VU stage (&lt;code&gt;default&lt;/code&gt; function), and &lt;code&gt;teardown()&lt;/code&gt; is called at the end of a test, after the last VU iteration (&lt;code&gt;default&lt;/code&gt; function) has finished executing. This is also supported in the distributed &lt;a href=&quot;https://k6.io/docs/using-k6/cloud-execution&quot; rel=&quot;nofollow&quot;&gt;cloud execution&lt;/a&gt; mode via &lt;code&gt;k6 cloud&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-smi&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;teardown&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;v&lt;/span&gt; != &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;incorrect data: &quot;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A copy of whatever data &lt;code&gt;setup()&lt;/code&gt; returns will be passed as the first argument to each iteration of the &lt;code&gt;default&lt;/code&gt; function and to &lt;code&gt;teardown()&lt;/code&gt; at the end of the test. For more information and examples, refer to the k6 docs &lt;a href=&quot;https://k6.io/docs/using-k6/test-life-cycle#setup-and-teardown-stages&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Metrics, tags and groups&lt;/h3&gt;
&lt;p&gt;By default k6 measures and collects a lot of metrics about the things your scripts do - the duration of different script iterations, how much data was sent and received, how many HTTP requests were made, the duration of those HTTP requests, and even how long did the TLS handshake of a particular HTTPS request take. To see a summary of these built-in metrics in the output, you can run a simple k6 test, e.g. &lt;code&gt;k6 run github.com/loadimpact/k6/samples/http_get.js&lt;/code&gt;. More information about the different built-in metrics collected by k6 (and how some of them can be accessed from inside of the scripts) is available in the docs &lt;a href=&quot;https://k6.io/docs/using-k6/metrics&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;k6 also allows the creation of user-defined &lt;code&gt;Counter&lt;/code&gt;, &lt;code&gt;Gauge&lt;/code&gt;, &lt;code&gt;Rate&lt;/code&gt; and &lt;code&gt;Trend&lt;/code&gt; metrics. They can be used to more precisely track and measure a custom subset of the things that k6 measures by default, or anything else the user wants, for example tracking non-timing information that is returned from the remote system. You can find more information about them &lt;a href=&quot;https://k6.io/docs/using-k6/metrics#custom-metrics&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; and a description of their APIs &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-metrics&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Every measurement metric in k6 comes with a set of key-value tags attached. Some of them are automatically added by k6 - for example a particular &lt;code&gt;http_req_duration&lt;/code&gt; metric may have the &lt;code&gt;method=GET&lt;/code&gt;, &lt;code&gt;status=200&lt;/code&gt;, &lt;code&gt;url=https://loadimpact.com&lt;/code&gt;, etc. system tags attached to it. Others can be added by users - globally for a test run via the &lt;code&gt;tags&lt;/code&gt; &lt;a href=&quot;https://k6.io/docs/using-k6/options#tags&quot; rel=&quot;nofollow&quot;&gt;option&lt;/a&gt;, or individually as a &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-http/params-k6-http&quot; rel=&quot;nofollow&quot;&gt;parameter&lt;/a&gt; in a specific HTTP request, websocket connection, &lt;code&gt;userMetric.Add()&lt;/code&gt; call, etc.&lt;/p&gt;
&lt;p&gt;These tags don't show in the simple summary at the end of a k6 test (unless you reference them in a &lt;a href=&quot;https://github.com/loadimpact/k6#checks-and-thresholds&quot;&gt;threshold&lt;/a&gt;), but they are invaluable for filtering and investigating k6 test results if you use any of the &lt;a href=&quot;https://github.com/loadimpact/k6#outputs&quot;&gt;outputs&lt;/a&gt; mentioned below. k6 also supports simple hierarchical groups for easier code and result organization. You can find more information about groups and system and user-defined tags &lt;a href=&quot;https://k6.io/docs/using-k6/tags-and-groups&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Checks and thresholds&lt;/h3&gt;
&lt;p&gt;Checks and thresholds are some of the k6 features that make it very easy to use load tests like unit and functional tests and integrate them in a CI (continuous integration) workflow.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://k6.io/docs/using-k6/checks&quot; rel=&quot;nofollow&quot;&gt;Checks&lt;/a&gt; are similar to asserts, but differ in that they don't halt execution. Instead they just store the result of the check, pass or fail, and let the script execution continue. Checks are great for codifying assertions relating to HTTP requests/responses. For example, making sure an HTTP response code is 2xx.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://k6.io/docs/using-k6/thresholds&quot; rel=&quot;nofollow&quot;&gt;Thresholds&lt;/a&gt; are global pass/fail criteria that can be used to verify if any result metric is within a specified range. They can also reference a subset of values in a given metric, based on the used metric tags. Thresholds are specified in the options section of a k6 script. If they are exceeded during a test run, k6 would exit with a nonzero code on test completion, and can also optionally abort the test early. This makes thresholds ideally suited as checks in a CI workflow!&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;k6/http&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;k6&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;Rate&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;k6/metrics&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;// A custom metric to track failure rates&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;failureRate&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;Rate&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;check_failure_rate&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;// Options&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;stages&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Linearly ramp up from 1 to 50 VUs during first minute&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;1m&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Hold at 50 VUs for the next 3 minutes and 30 seconds&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;3m30s&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Linearly ramp down from 50 to 0 50 VUs over the last 30 seconds&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;duration&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;30s&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Total execution time will be ~5 minutes&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;thresholds&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// We want the 95th percentile of all HTTP request durations to be less than 500ms&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&quot;http_req_duration&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;p(95)&amp;lt;500&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Requests with the staticAsset tag should finish even faster&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&quot;http_req_duration{staticAsset:yes}&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;p(99)&amp;lt;250&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Thresholds based on the custom metric we defined and use to track application failures&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&quot;check_failure_rate&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;pl-c&quot;&gt;// Global failure rate should be less than 1%&lt;/span&gt;
            &lt;span class=&quot;pl-s&quot;&gt;&quot;rate&amp;lt;0.01&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;pl-c&quot;&gt;// Abort the test early if it climbs over 5%&lt;/span&gt;
            &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;threshold&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;rate&amp;lt;=0.05&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;abortOnFail&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;// Main function&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;https://test.k6.io/&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;// check() returns false if any of the specified conditions fail&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;checkRes&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&quot;http2 is used&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;proto&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;HTTP/2.0&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&quot;status is 200&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&quot;content is present&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;Collection of simple web-pages suitable for load testing.&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; !== &lt;span class=&quot;pl-c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;// We reverse the check() result since we want to count the failures&lt;/span&gt;
    &lt;span class=&quot;pl-s1&quot;&gt;failureRate&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;!&lt;span class=&quot;pl-s1&quot;&gt;checkRes&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;// Load static assets, all requests&lt;/span&gt;
    &lt;span class=&quot;pl-en&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;Static Assets&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Execute multiple requests in parallel like a browser, to fetch some static resources&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;resps&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;https://test.k6.io/static/css/site.css&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;tags&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;staticAsset&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;https://test.k6.io/static/favicon.ico&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;tags&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;staticAsset&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;https://test.k6.io/static/js/prisms.js&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;tags&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;staticAsset&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;// Combine check() call with failure tracking&lt;/span&gt;
        &lt;span class=&quot;pl-s1&quot;&gt;failureRate&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;!&lt;span class=&quot;pl-en&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;resps&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;pl-s&quot;&gt;&quot;status is 200&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;pl-s&quot;&gt;&quot;reused connection&quot;&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;timings&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;connecting&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;pl-en&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; * &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;// Random sleep between 2s and 5s&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can save the above example as a local file and run it, or you can also run it directly from the &lt;a href=&quot;https://github.com/loadimpact/k6/blob/master/samples/thresholds_readme_example.js&quot;&gt;github copy of the file&lt;/a&gt; with the &lt;code&gt;k6 run github.com/loadimpact/k6/samples/thresholds_readme_example.js&lt;/code&gt; command. You can find (and contribute!) more k6 script examples here: &lt;a href=&quot;https://github.com/loadimpact/k6/tree/master/samples&quot;&gt;https://github.com/loadimpact/k6/tree/master/samples&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Outputs&lt;/h3&gt;
&lt;p&gt;To make full use of your test results and to be able to fully explore and understand them, k6 can output the raw metrics to an external repository of your choice.&lt;/p&gt;
&lt;p&gt;The simplest output option, meant primarily for debugging, is to send the JSON-encoded metrics to a file or to &lt;code&gt;stdout&lt;/code&gt;. Other output options are sending the metrics to an InfluxDB instance, an Apache Kafka queue, or even to the k6 cloud. This allows you to run your load tests locally or behind a company firewall, early in the development process or as a part of a CI suite, while at the same time being able store their results in the k6 cloud, where you can compare and analyse them. You can find more information about the available outputs &lt;a href=&quot;https://k6.io/docs/getting-started/results-output&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; and about k6 Cloud Results &lt;a href=&quot;https://k6.io/docs/getting-started/results-output/cloud&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://k6.io/docs/cloud/analyzing-results/overview&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Modules and JavaScript compatibility&lt;/h3&gt;
&lt;p&gt;k6 comes with several built-in modules for things like making (and measuring) &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-http&quot; rel=&quot;nofollow&quot;&gt;HTTP requests&lt;/a&gt; and &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-ws&quot; rel=&quot;nofollow&quot;&gt;websocket connections&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-html&quot; rel=&quot;nofollow&quot;&gt;parsing HTML&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/javascript-api/init-context/open-filepath-mode&quot; rel=&quot;nofollow&quot;&gt;reading files&lt;/a&gt;, &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-crypto&quot; rel=&quot;nofollow&quot;&gt;calculating hashes&lt;/a&gt;, setting up checks and thresholds, tracking &lt;a href=&quot;https://k6.io/docs/javascript-api/k6-metrics&quot; rel=&quot;nofollow&quot;&gt;custom metrics&lt;/a&gt;, and others.&lt;/p&gt;
&lt;p&gt;You can, of course, also write your own ES6 modules and &lt;code&gt;import&lt;/code&gt; them in your scripts, potentially reusing code across an organization. The situation with importing JavaScript libraries is a bit more complicated. You can potentially use &lt;strong&gt;some&lt;/strong&gt; JS libraries in k6, even ones intended for Node.js if you use browserify, though if they depend on network/OS-related APIs, they likely won't work. You can find more details and instructions about writing or importing JS modules &lt;a href=&quot;https://k6.io/docs/using-k6/modules&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;To get help about usage, report bugs, suggest features, and discuss k6 with other users see &lt;a href=&quot;https://github.com/loadimpact/k6/blob/master/SUPPORT.md&quot;&gt;SUPPORT.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you want to contribute or help with the development of k6, start by reading &lt;a href=&quot;https://github.com/loadimpact/k6/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;. Before you start coding, especially when it comes to big changes and features, it might be a good idea to first discuss your plans and implementation details with the k6 maintainers. You can do this either in the &lt;a href=&quot;https://github.com/loadimpact/k6/issues&quot;&gt;github issue&lt;/a&gt; for the problem you're solving (create one if it doesn't exist) or in the &lt;code&gt;#developers&lt;/code&gt; channel on &lt;a href=&quot;https://k6.io/slack&quot; rel=&quot;nofollow&quot;&gt;Slack&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 28 Nov 2020 02:42:55 +0000</pubDate>
<dc:creator>feross</dc:creator>
<og:image>https://repository-images.githubusercontent.com/54400687/29992200-7069-11ea-85c9-3824e56625b2</og:image>
<og:type>object</og:type>
<og:title>loadimpact/k6</og:title>
<og:url>https://github.com/loadimpact/k6</og:url>
<og:description>A modern load testing tool, using Go and JavaScript - https://k6.io - loadimpact/k6</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/loadimpact/k6</dc:identifier>
</item>
<item>
<title>Tasmania declares itself 100 per cent powered by renewable electricity</title>
<link>https://reneweconomy.com.au/tasmania-declares-itself-100-per-cent-powered-by-renewable-electricity-25119/</link>
<guid isPermaLink="true" >https://reneweconomy.com.au/tasmania-declares-itself-100-per-cent-powered-by-renewable-electricity-25119/</guid>
<description>&lt;div class=&quot;entry-content-inner padding-left&quot;&gt;
&lt;p&gt;The Tasmania government has declared that it has become the first Australian state, and one of just a handful of jurisdictions worldwide, to be powered entirely by renewable electricity.&lt;/p&gt;
&lt;p&gt;In a statement released on Friday, Tasmanian energy minister Guy Barnett said that state had effectively become entirely self-sufficient for supplies of renewable electricity, supplied by the state’s wind and hydroelectricity projects.&lt;/p&gt;
&lt;p&gt;“We have reached 100 per cent thanks to our commitment to realising Tasmania’s renewable energy potential through our nation-leading energy policies and making Tasmania attractive for industry investment, which in turn is creating jobs across the State, particularly in our regions,” Barnett said.&lt;/p&gt;
&lt;p&gt;Tasmania has long had one of the greenest supplies of electricity in Australia, with the state’s significant hydroelectricity resources supplying the bulk of the state’s power. Tasmania’s history with hydroelectricity dates back to 1895, with the Duck Reach power plant in Launceston becoming the first publicly owned hydroelectric power station in the southern hemisphere.&lt;/p&gt;
&lt;p&gt;Tasmania had been reliant on supplementary supplies of gas generation, as well as imported supplies from coal-heavy Victoria. However, with the growth of wind power in the state, Tasmania reduced its reliance on the supplementary supplies of fossil fuel electricity, and can now meet all of its needs with renewable sources.&lt;/p&gt;
&lt;p&gt;Barnett said Tasmania had reached the 100 per cent renewable threshold with the commissioning of one of the last wind turbines at the Granville Harbour wind farm being developed on the state’s west coast.&lt;/p&gt;
&lt;div class=&quot;code-block code-block-9&quot;&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-client=&quot;ca-pub-4737885209238599&quot; data-ad-slot=&quot;8795554017&quot; data-ad-format=&quot;auto&quot; data-full-width-responsive=&quot;true&quot;/&gt; &lt;/div&gt;
&lt;p&gt;“When the final two turbines are commissioned at Granville Harbour, Tasmania will have access to 10,741 GWh of renewable generating capacity – well above our average annual electricity demand of 10,500 GWh,” Barnett added.&lt;/p&gt;
&lt;p&gt;Granville wind farm project director, Lyndon Frearson, said it was an exciting moment to see the final components of the wind farm come together, and that the project would ultimately play a role in a &lt;a href=&quot;https://reneweconomy.com.au/tasmania-liberal-government-tables-200-per-cent-renewables-bill-26394/&quot;&gt;government aim to reach 200 per cent renewables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“The wind farm is already proving its worth as generator in the network and is a key part of the state’s development of new renewable energy resources to achieve its aspirational target of 200 per cent renewables by 2040,” Frearson said. “For Granville Harbour Wind Farm to be the actual catalyst for Tasmania achieving its 100 per cent renewable energy target two years ahead of schedule is a remarkable outcome, and one that everyone involved with its development should be very proud of.”&lt;/p&gt;
&lt;p&gt;Tasmania &lt;a href=&quot;https://reneweconomy.com.au/canberras-green-machines-act-reaches-100-renewable-electricity-target-78663/&quot;&gt;joins the ACT&lt;/a&gt;, as the only two Australian jurisdictions sourcing all of their electricity from renewable energy sources, and places Tasmania alongside countries like Scotland, Iceland and Costa Rica which have also made the transition to 100 per cent renewable electricity.&lt;/p&gt;

&lt;p&gt;Chief executive of the Clean Energy Council, Kane Thornton, said that the milestone had been achieved through a clear and meaningful policy direction from the Tasmanian state government, which enabled developers to develop new projects.&lt;/p&gt;
&lt;p&gt;“Tasmania has led the way when it comes to effecting change in Australia’s energy mix, and today’s milestone is well ahead of the original schedule of 2022. This considerable achievement highlights the Tasmanian Government’s policy leadership on renewable energy, which continues with the legislating of a visionary 200 per cent renewable target by 2040,” Thornton said.&lt;/p&gt;
&lt;p&gt;“The clean energy industry has responded in kind through investment, which in turn, will play a critical role in local Tasmanian economies creating employment opportunities now and into the future.”&lt;/p&gt;
&lt;p&gt;The milestone was welcomed by environmental groups, saying that it was another example of what is being achieved by state and territory governments that are stepping in to show leadership on energy policy in a vacuum left by ongoing conflict both between and within political parties at a federal level.&lt;/p&gt;
&lt;p&gt;“This is a significant achievement and opens up huge economic opportunities for Tasmania,” WWF Australia’s Nicky Ison said. “It also shows that Australian states are leading the way in the global energy transition and stepping up to act on climate.”&lt;/p&gt;
&lt;p&gt;Greenpeace Australia spokesperson Nelli Stevenson said that reaching 100 per cent renewable electricity was an ‘epic milestone’ for the state.&lt;/p&gt;
&lt;p&gt;“States and territories are surging ahead in the renewable energy race, leaving the Federal Government more and more isolated in its inaction on climate change,” Stevenson said. “Federal Governments are supposed to lead, and right now Australians are more than ever being let down by their elected Federal representatives while state leadership gets on with the job of moving Australia to 100 per cent safe and reliable renewable energy.”&lt;/p&gt;
&lt;p&gt;Barnett added that the Tasmanian government would continue to support an expansion of the state’s renewable energy capabilities, as the state looks to grow its role as a supplier of zero emissions energy to both mainland Australia and of green hydrogen into international export markets.&lt;/p&gt;
&lt;p&gt;“But there is more to do, which is why we have set a target to double our renewable generation to a global-leading target of 200 per cent of our current needs by 2040 – which we recently passed into law following the passing of legislation through both Houses of Parliament,” Barnett added. “We are also continuing to progress the Marinus Link and Battery of the Nation projects that represent an intergenerational opportunity to make Tasmania a global leader and the renewable energy powerhouse of Australia.”&lt;/p&gt;
&lt;p&gt;“And, we are continuing to develop a renewable hydrogen industry in Tasmania with the feasibility of key projects being progressed under the Government’s $50 million Tasmanian Renewable Hydrogen Industry Development Funding Program, which forms the backbone of our Tasmanian Renewable Hydrogen Action Plan.”&lt;/p&gt;
&lt;div class=&quot;saboxplugin-wrap&quot; itemtype=&quot;http://schema.org/Person&quot; itemscope=&quot;&quot; itemprop=&quot;author&quot;&gt;
&lt;div class=&quot;saboxplugin-gravatar&quot;&gt;&lt;a href=&quot;https://reneweconomy.com.au/author/michael-mazengarb/&quot;&gt;&lt;img src=&quot;https://reneweconomy.com.au/wp-content/uploads/2019/05/Headshot-M-Mazengarb.jpg&quot; alt=&quot;&quot; itemprop=&quot;image&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;div class=&quot;saboxplugin-desc&quot;&gt;
&lt;div itemprop=&quot;description&quot;&gt;
&lt;div&gt;Michael Mazengarb is a journalist with RenewEconomy, based in Sydney. Before joining RenewEconomy, Michael worked in the renewable energy sector for more than a decade.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;div class=&quot;printfriendly-bottom&quot;&gt;&lt;a href=&quot;https://reneweconomy.com.au/tasmania-declares-itself-100-per-cent-powered-by-renewable-electricity-25119/#&quot; rel=&quot;nofollow&quot; onclick=&quot;window.print(); return false;&quot; class=&quot;noslimstat&quot; title=&quot;Printer Friendly, PDF &amp;amp; Email&quot;&gt;&lt;img src=&quot;https://cdn.printfriendly.com/buttons/print-button-nobg.png&quot; alt=&quot;Print Friendly, PDF &amp;amp; Email&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 28 Nov 2020 01:00:44 +0000</pubDate>
<dc:creator>toomuchtodo</dc:creator>
<og:type>article</og:type>
<og:title>Tasmania declares itself 100 per cent powered by renewable electricity</og:title>
<og:url>https://reneweconomy.com.au/tasmania-declares-itself-100-per-cent-powered-by-renewable-electricity-25119/</og:url>
<og:description>Tasmania declares it now produces enough renewable electricity to meet 100 per cent of its needs, with wind turbines at Granville Harbour coming online.</og:description>
<og:image>https://reneweconomy.com.au/wp-content/uploads/2020/11/woolnorth-wind-farm-tasmania-optimised.jpg</og:image>
<dc:language>en-AU</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://reneweconomy.com.au/tasmania-declares-itself-100-per-cent-powered-by-renewable-electricity-25119/</dc:identifier>
</item>
<item>
<title>Apple CPU tricks: memory reordering, JavaScript support, ref counting</title>
<link>https://twitter.com/ErrataRob/status/1331735383193903104</link>
<guid isPermaLink="true" >https://twitter.com/ErrataRob/status/1331735383193903104</guid>
<description>&lt;p&gt;8/ Normally, that wouldn't have been enough time. When you recompile code for a new architecture, it usually breaks. But as I said above: Arm and Intel architectures have converged enough that code is much less likely to break, making recompiling easier.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Nov 2020 23:33:37 +0000</pubDate>
<dc:creator>simonpure</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/ErrataRob/status/1331735383193903104</dc:identifier>
</item>
<item>
<title>Reveal.js: HTML presentation framework</title>
<link>https://revealjs.com/</link>
<guid isPermaLink="true" >https://revealjs.com/</guid>
<description>&lt;p&gt;reveal.js is an open source HTML presentation framework. It's a tool that enables anyone with a web browser to create fully-featured and beautiful presentations for free.&lt;/p&gt;
&lt;p&gt;Presentations made with reveal.js are built on open web technologies. That means anything you can do on the web, you can do in your presentation. Change styles with CSS, include an external web page using an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; or add your own custom behavior using our &lt;a href=&quot;https://revealjs.com/api&quot;&gt;JavaScript API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The framework comes with a broad range of features including &lt;a href=&quot;https://revealjs.com/vertical-slides/&quot;&gt;nested slides&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/markdown/&quot;&gt;Markdown support&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/auto-animate/&quot;&gt;Auto-Animate&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/pdf-export/&quot;&gt;PDF export&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/speaker-view/&quot;&gt;speaker notes&lt;/a&gt;, &lt;a href=&quot;https://revealjs.com/math/&quot;&gt;LaTeX support&lt;/a&gt; and &lt;a href=&quot;https://revealjs.com/code/&quot;&gt;syntax highlighted code&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;ready-to-get-started%3F&quot;&gt;Ready to Get Started?&lt;/h2&gt;
&lt;p&gt;It only takes a minute to get set up. Learn how to create your first presentation in the &lt;a href=&quot;https://revealjs.com/installation/&quot;&gt;installation instructions&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;online-editor&quot;&gt;Online Editor&lt;/h2&gt;
&lt;p&gt;If you want the benefits of reveal.js without having to write HTML or Markdown try &lt;a href=&quot;https://slides.com?ref=github&quot;&gt;https://slides.com&lt;/a&gt;. It's a fully-featured visual editor and platform for reveal.js, by the same creator.&lt;/p&gt;
&lt;h2 id=&quot;supporting-reveal.js&quot;&gt;Supporting reveal.js&lt;/h2&gt;
&lt;p&gt;This project was started and is maintained by &lt;a href=&quot;https://github.com/hakimel/&quot;&gt;@hakimel&lt;/a&gt; with the help of many &lt;a href=&quot;https://github.com/hakimel/reveal.js/graphs/contributors&quot;&gt;contributions from the community&lt;/a&gt;. The best way to support the project is to &lt;a href=&quot;https://slides.com/pricing&quot;&gt;become a paying member of Slides.com&lt;/a&gt;—the reveal.js presentation platform that Hakim is building.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Nov 2020 22:31:07 +0000</pubDate>
<dc:creator>lopespm</dc:creator>
<og:title>The HTML presentation framework | reveal.js</og:title>
<og:description>Documentation and demos for the open source reveal.js HTML presentation framework.</og:description>
<og:image>https://revealjs.com/images/meta/reveal-og-card-1200-630.png</og:image>
<og:url>https://revealjs.com/</og:url>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://revealjs.com/</dc:identifier>
</item>
</channel>
</rss>