<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Google .dev domain early access</title>
<link>https://domains.google/tld/dev/</link>
<guid isPermaLink="true" >https://domains.google/tld/dev/</guid>
<description>&lt;p&gt;The Early Access Fee is a one-time payment to secure your desired .dev domain early. From February 19th at 8:00am PST to February 28th at 7:59am PST, you can get a .dev domain before General Availability for an additional fee (this fee decreases the closer we get to General Availability). During General Availability, starting February 28th at 8:00 PST, .dev domains will be available without an Early Access Fee.&lt;/p&gt;
&lt;p&gt;During both the Early Access Program and General Availability, there is a $12/year cost for .dev domains. Annual fees may vary for Premium domains.&lt;/p&gt;
</description>
<pubDate>Sat, 16 Feb 2019 14:52:53 +0000</pubDate>
<dc:creator>jonseitz</dc:creator>
<og:image></og:image>
<og:title>Google Domains .dev Early Access Program</og:title>
<og:type>website</og:type>
<og:url>https://domains.google/tld/dev/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://domains.google/tld/dev/</dc:identifier>
</item>
<item>
<title>How to Secure a Linux Server</title>
<link>https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</link>
<guid isPermaLink="true" >https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;An evolving how-to guide for securing a Linux server that, hopefully, also teaches you a little about security and why it matters.&lt;/p&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;p&gt;(TOC made with &lt;a href=&quot;https://imthenachoman.github.io/nGitHubTOC/&quot; rel=&quot;nofollow&quot;&gt;nGitHubTOC&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;h3&gt;Guide Objective&lt;/h3&gt;
&lt;p&gt;This guide's purpose is to teach you how to secure a Linux server.&lt;/p&gt;
&lt;p&gt;There are a lot of things you can do to secure a Linux server and this guide will attempt to cover as many of them as possible. More topics/material will be added as I learn, or as folks &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contributing&quot;&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Why Secure Your Server&lt;/h3&gt;
&lt;p&gt;I assume you're using this guide because you, hopefully, already understand why good security is important. That is a heavy topic onto itself and breaking it down is out-of-scope for this guide. If you don't know the answer to that question, I advise you research it first.&lt;/p&gt;
&lt;p&gt;At a high level, the second a device, like a server, is in the public domain -- i.e visible to the outside world -- it becomes a target for bad-actors. An unsecured device is a playground for bad-actors who want access to your data, or to use your server as another node for their large-scale DDOS attacks.&lt;/p&gt;
&lt;p&gt;What's worse is, without good security, you may never know if your server has been compromised. A bad-actor may have gained unauthorized access to your server and copied your data without changing anything so you'd never know. Or your server may have been part of a DDOS attack and you wouldn't know. Look at many of the large scale data breaches in the news -- the companies often did not discover the data leak or intrusion until long after the bad-actors were gone.&lt;/p&gt;
&lt;p&gt;Contrary to popular, bad-actors don't always want to change something or &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/blob/master&quot;&gt;lock you out of your data for money&lt;/a&gt;. Sometimes they just want your for their data warehouses (there is big money in big data) or to covertly use your server for their nefarious purposes.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Why Yet Another Guide&lt;/h3&gt;
&lt;p&gt;This guide may appear duplicative/unnecessary because there are countless articles online that tell you how to &lt;a href=&quot;https://duckduckgo.com/?q=how+to+secure+linux&amp;amp;t=ffab&amp;amp;atb=v151-7&amp;amp;ia=web&quot; rel=&quot;nofollow&quot;&gt;how to secure Linux&lt;/a&gt; but the information is spread across different articles, that cover different things, and in different ways. Who has time to scour through hundreds of articles?&lt;/p&gt;
&lt;p&gt;As I was going through research for my Debian build, I kept notes. At the end I realized that, along with what I already knew, and what I was learning, I had the makings of a how-to guide. I figured I'd put it online to hopefully help others &lt;strong&gt;learn&lt;/strong&gt;, and &lt;strong&gt;save time&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I've never found one guide that covers everything -- this guide is my attempt.&lt;/p&gt;
&lt;p&gt;Many of the things covered in this guide may be rather basic/trivial, but most of us do not install Linux every day and it is easy to forget those basic things.&lt;/p&gt;
&lt;p&gt;IT automation tools like &lt;a href=&quot;https://www.ansible.com/&quot; rel=&quot;nofollow&quot;&gt;Ansible&lt;/a&gt;, &lt;a href=&quot;https://www.chef.io/&quot; rel=&quot;nofollow&quot;&gt;Chef&lt;/a&gt;, &lt;a href=&quot;https://jenkins.io/&quot; rel=&quot;nofollow&quot;&gt;Jenkins&lt;/a&gt;, &lt;a href=&quot;https://puppet.com/&quot; rel=&quot;nofollow&quot;&gt;Puppet&lt;/a&gt;, etc. help with the tedious task of installing/configuring a server but IMHO they are better suited for multiple or large scale deployments. IMHO, the overhead required to use those kinds of automation tools is wholly unnecessary for a one-time single server install for home use.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;To Do / To Add&lt;/h3&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Guide Overview&lt;/h2&gt;
&lt;h3&gt;About This Guide&lt;/h3&gt;
&lt;p&gt;This guide...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; a work in progress.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; focused on &lt;strong&gt;at-home&lt;/strong&gt; Linux servers. All of the concepts/recommendations here apply to larger/professional environments but those use-cases call for more advanced and specialized configurations that are out-of-scope for this guide.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;does not&lt;/strong&gt; teach you about Linux, how to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#installing-linux&quot;&gt;install Linux&lt;/a&gt;, or how to use it.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; meant to be &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#picking-a-linux-distribution&quot;&gt;Linux distribution agnostic&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;does not&lt;/strong&gt; teach you everything you need to know about security nor does it get into all aspects of system/server security. For example, physical security is out of scope for this guide.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;does not&lt;/strong&gt; talk about how programs/tools work, nor does it delve into their nook and crannies. Most of the programs/tools this guide references are very powerful and highly configurable. The goal is to cover the bare necessities -- enough to wet your appetite and make you hungry enough to want to go and learn more.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;aims&lt;/strong&gt; to make it easy by providing code you can copy-and-paste. You might need to modify the commands before you paste so keep your favorite &lt;a href=&quot;https://notepad-plus-plus.org/&quot; rel=&quot;nofollow&quot;&gt;text editor&lt;/a&gt; handy.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; organized in an order that makes logical sense to me -- i.e. securing SSH before installing a firewall. As such, this guide is intended to be followed in the order it is presented but it is not necessary to do so. Just be careful if you do things in a different order -- some sections require previous sections to be completed.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Safe vs. DANGER ZONE&lt;/h3&gt;
&lt;p&gt;Some of the sections in this guide are generally considered safe and shouldn't make your system unusable.&lt;/p&gt;
&lt;p&gt;Some sections cover things that are high risk because there is a possibility they can make your system unusable, or are considered unnecessary by many because the risks outweigh any rewards. These sections are tagged with &lt;strong&gt;&lt;code&gt;[DZ]&lt;/code&gt;&lt;/strong&gt; and the content is hidden by default. &lt;strong&gt;!! PROCEED AT YOUR OWN RISK !!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some sections are not necessary to secure your server but are still helpful. For example, you don't need to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ns-configure-gmail-as-mta&quot;&gt;configure your server to send &lt;code&gt;mail&lt;/code&gt; through Gmail&lt;/a&gt; but you will want someway to send e-mails so you get critical system/security alerts. These sections are tagged with &lt;strong&gt;&lt;code&gt;[NS]&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Regardless of the section, as is with &lt;strong&gt;anything&lt;/strong&gt; in this guide, &lt;strong&gt;use with caution and proceed at your own risk&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Editing Configuration Files - For The Lazy&lt;/h3&gt;
&lt;p&gt;I am very lazy and do not like to edit files by hand if I don't need to. I also assume everyone else is just like me. :)&lt;/p&gt;
&lt;p&gt;So, when and where possible, I have provided &lt;code&gt;code&lt;/code&gt; snippets to quickly do what is needed, like add or change a line in a configuration file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;code&lt;/code&gt; snippets use basic commands like &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, and &lt;code&gt;grep&lt;/code&gt;. How the &lt;code&gt;code&lt;/code&gt; snippets work, like what each command/part does, is out of scope for this guide -- the &lt;code&gt;man&lt;/code&gt; pages are your friend.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;code&lt;/code&gt; snippets do not validate/verify the change went through -- i.e. the line was actually added or changed. I'll leave the verifying part in your capable hands. The steps in this guide do include taking backups of all files that will be changed.&lt;/p&gt;
&lt;p&gt;Not all changes can be automated with &lt;code&gt;code&lt;/code&gt; snippets. Those changes need good, old fashioned, manual editing. For example, you can't just append a line to an &lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot; rel=&quot;nofollow&quot;&gt;INI&lt;/a&gt; type file. Use your &lt;a href=&quot;https://en.wikipedia.org/wiki/Vi&quot; rel=&quot;nofollow&quot;&gt;favorite&lt;/a&gt; Linux text editor.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Contributing&lt;/h3&gt;
&lt;p&gt;I wanted to put this guide on &lt;a href=&quot;http://www.github.com&quot;&gt;GitHub&lt;/a&gt; to make it easy to collaborate. The more folks that contribute, the better and more complete this guide will become.&lt;/p&gt;
&lt;p&gt;To contribute you can fork and submit a pull request or submit a &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/issues/new&quot;&gt;new issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Before You Start&lt;/h2&gt;
&lt;h3&gt;Identify Your Principles&lt;/h3&gt;
&lt;p&gt;Before you start you will want to identify what your Principles are. What is your &lt;a href=&quot;https://en.wikipedia.org/wiki/Threat_model&quot; rel=&quot;nofollow&quot;&gt;threat model&lt;/a&gt;? Some things to think about:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why do you want to secure your server?&lt;/li&gt;
&lt;li&gt;How much security do you want or not want?&lt;/li&gt;
&lt;li&gt;How much convenience are you willing to compromise for security and vice-versa?&lt;/li&gt;
&lt;li&gt;What are the threats you want to protect against? What are the specifics to your situation? For example:
&lt;ul&gt;&lt;li&gt;Is physical access to your server/network a possible attack vector?&lt;/li&gt;
&lt;li&gt;Will you be opening ports on your router so you can access your server from outside your home?&lt;/li&gt;
&lt;li&gt;Will you be hosting a file share on your server that will be mounted on a desktop class machine? What is the possibility of the desktop machine getting infected and, in turn, infecting the server?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do you have a means of recovering if your security implementation locks you out of your own server? For example, you &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#dz-disable-root-login&quot;&gt;disabled root login&lt;/a&gt; or &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#dz-password-protect-grub&quot;&gt;password protected GRUB&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These are just &lt;strong&gt;a few things&lt;/strong&gt; to think about. Before you start securing your server you will want to understand what you're trying to protect against and why so you know what you need to do.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Picking A Linux Distribution&lt;/h3&gt;
&lt;p&gt;This guide is intended to be distribution agnostic so users can use &lt;a href=&quot;https://distrowatch.com/&quot; rel=&quot;nofollow&quot;&gt;any distribution&lt;/a&gt; they want. With that said, there are a few things to keep in mind:&lt;/p&gt;
&lt;p&gt;You want a distribution that...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;...&lt;strong&gt;is stable&lt;/strong&gt;. Unless you like debugging issues at 2 AM, you don't want an &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#tbd&quot;&gt;unattended upgrade&lt;/a&gt;, or a manual package/system update, to render your server inoperable. But this also means you're okay with not running the latest, greatest, bleeding edge software.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;stays up-to-date with security patches&lt;/strong&gt;. You can secure everything on your server, but if the core OS or applications you're running have known vulnerabilities, you'll never be safe.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;you're familiar with.&lt;/strong&gt; If you don't know Linux, I would advise you play around with one before you try to secure it. You should be comfortable with it and know your way around, like how to install software, where configuration files are, etc...&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is well supported.&lt;/strong&gt; Even the most seasoned admin needs help every now and then. Having a place to go for help will save your sanity.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Installing Linux&lt;/h3&gt;
&lt;p&gt;Installing Linux is out-of-scope for this guide because each distribution does it differently and the installation instructions are usually well documented. If you need help, start with your distribution's documentation. Regardless of the distribution, the high-level process usually goes like so:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;download the ISO&lt;/li&gt;
&lt;li&gt;burn/copy/transfer it to your install medium (e.g. a CD or USB stick)&lt;/li&gt;
&lt;li&gt;boot your server from your install medium&lt;/li&gt;
&lt;li&gt;follow the prompts to install&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Where applicable, use the expert install option so you have tighter control of what is running on your server. &lt;strong&gt;Only install what you absolutely need.&lt;/strong&gt; I, personally, do not install anything other than SSH.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Pre/Post Installation&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;If you're opening ports on your router so you can access your server from the outside, disable the port forwarding until your system is up and secured.&lt;/li&gt;
&lt;li&gt;Unless you're doing everything physically connected to your server, you'll need remote access so be sure SSH works.&lt;/li&gt;
&lt;li&gt;Be sure to keep your system up-to-date (i.e. &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt; on Debian based systems).&lt;/li&gt;
&lt;li&gt;At some point, like maybe right after configuring &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ssh-publicprivate-keys&quot;&gt;SSH public/private keys&lt;/a&gt;, make sure you perform any tasks specific to your setup like:
&lt;ul&gt;&lt;li&gt;configuring network&lt;/li&gt;
&lt;li&gt;configuring mount points in &lt;code&gt;/etc/fstab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;creating the initial user accounts&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Your server will need to be able to send e-mails so you can get important security alerts. If you're not setting up a mail server check &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ns-configure-gmail-as-mta&quot;&gt;Configure Gmail as MTA&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Other Important Notes&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;This guide is being written and tested on Debian. Most things below should work on other distributions. If you find something that does not, please &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contacting-me&quot;&gt;contact me&lt;/a&gt;. The main thing that separates each distribution will be its package management system. Since I use Debian, I will provide the appropriate &lt;code&gt;apt&lt;/code&gt; commands that should work on all &lt;a href=&quot;https://www.debian.org/derivatives/&quot; rel=&quot;nofollow&quot;&gt;Debian based distributions&lt;/a&gt;. If someone is willing to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contributing&quot;&gt;provide&lt;/a&gt; the respective commands for other distributions, I will add them.&lt;/li&gt;
&lt;li&gt;File paths and settings also may differ slightly -- check with your distribution's documentation if you have issues.&lt;/li&gt;
&lt;li&gt;Read the whole guide before you start. Your use-case and/or principals may call for not doing something or for changing the order.&lt;/li&gt;
&lt;li&gt;Do not &lt;strong&gt;blindly&lt;/strong&gt; copy-and-paste without understanding what you're pasting. Some commands will need to be modified for your needs before they'll work -- usernames for example.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;The Main Event&lt;/h2&gt;
&lt;h3&gt;SSH Public/Private Keys&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Using SSH public/private keys is more secure than using a password. It also makes it easier and faster, to connect to our server because you don't have to enter a password.&lt;/p&gt;
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ssh-key-references&quot;&gt;references&lt;/a&gt; below for more details but, at a high level, public/private keys work by using a pair of keys to verify identity.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;One key, the &lt;strong&gt;public&lt;/strong&gt; key, &lt;strong&gt;can only encrypt data&lt;/strong&gt;, not decrypt it&lt;/li&gt;
&lt;li&gt;The other key, the &lt;strong&gt;private&lt;/strong&gt; key, can decrypt the data&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;For SSH, a public and private key is created on the client. The public key is then securely transferred to the server you want to connect to. After this is done, SSH uses the public and private keys to verify identity and then establishing a secure connection. Identity is verified by the server encrypting a challenge message with the public key, then sending it to the client. If the client cannot decrypt the challenge message with the private key, the identity can't be verified and a connection will not be established.&lt;/p&gt;
&lt;p&gt;They are considered more secure because you need the private key to establish an SSH connection. If you set &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#PasswordAuthentication&quot;&gt;&lt;code&gt;PasswordAuthentication no&lt;/code&gt; in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/a&gt;, then SSH won't let you connect without the private key.&lt;/p&gt;
&lt;p&gt;You can also set a passphrase for the keys which would require you to enter the key passphrase when connecting using public/private keys. Keep in mind doing this means you can't use the key for automation because you'll have no way to send the passphrase in your scripts. &lt;code&gt;ssh-agent&lt;/code&gt; is a program that is shipped in many Linux distros (and usually already running) that will allow you to hold your unencrypted private key in memory for a configurable duration. Simply run &lt;code&gt;ssh-add&lt;/code&gt; and it will prompt you for your passphrase. You will not be prompted for your passphrase again until the configurable duration has passed.&lt;/p&gt;
&lt;p&gt;We will be using Ed25519 keys which, according to &lt;a href=&quot;https://linux-audit.com/using-ed25519-openssh-keys-instead-of-dsa-rsa-ecdsa/&quot; rel=&quot;nofollow&quot;&gt;https://linux-audit.com/&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is using an elliptic curve signature scheme, which offers better security than ECDSA and DSA. At the same time, it also has good performance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Ed25519 public/private SSH keys:
&lt;ul&gt;&lt;li&gt;private key on your client&lt;/li&gt;
&lt;li&gt;public key on your server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;You'll need to do this step for every computer and account you'll be connecting to your server from/as.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;From the computer you're going to use to connect to your server, &lt;strong&gt;the client&lt;/strong&gt;, not the server itself, create an &lt;a href=&quot;https://linux-audit.com/using-ed25519-openssh-keys-instead-of-dsa-rsa-ecdsa/&quot; rel=&quot;nofollow&quot;&gt;Ed25519&lt;/a&gt; key with &lt;code&gt;ssh-keygen&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh-keygen -t ed25519
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/user/.ssh/id_ed25519):
Created directory '/home/user/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_ed25519.
Your public key has been saved in /home/user/.ssh/id_ed25519.pub.
The key fingerprint is:
SHA256:F44D4dr2zoHqgj0i2iVIHQ32uk/Lx4P+raayEAQjlcs user@client
The key's randomart image is:
+--[ED25519 256]--+
|xxxx  x          |
|o.o +. .         |
| o o oo   .      |
|. E oo . o .     |
| o o. o S o      |
|... .. o o       |
|.+....+ o        |
|+.=++o.B..       |
|+..=**=o=.       |
+----[SHA256]-----+
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you set a passphrase, you'll need to enter it every time you connect to your server using this key, unless you're using &lt;code&gt;ssh-agent&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you SSH to your server, your server will look for your public key in the &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file &lt;strong&gt;in your home directory&lt;/strong&gt;. So we need to &lt;strong&gt;append&lt;/strong&gt; the contents of the public key &lt;code&gt;~/.ssh/id_ed25519.pub&lt;/code&gt; from the machine you're on (the client) to the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file on the &lt;strong&gt;target server&lt;/strong&gt;. You'll want to do this in a secure way since the public key gives access to your server. One approach is to copy it to a USB stick and physically transfer it to the server. If you're sure there is &lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot; rel=&quot;nofollow&quot;&gt;nobody listening between the client you're on and your server&lt;/a&gt;, you can use &lt;code&gt;ssh-copy-id&lt;/code&gt; to transfer and append the public key:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh-copy-id user@server    
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/home/user/.ssh/id_ed25519.pub&quot;
The authenticity of host 'host (192.168.1.96)' can't be established.
ECDSA key fingerprint is SHA256:QaDQb/X0XyVlogh87sDXE7MR8YIK7ko4wS5hXjRySJE.
Are you sure you want to continue connecting (yes/no)? yes
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
user@host's password:

Number of key(s) added: 1

Now try logging into the machine, with:   &quot;ssh 'user@host'&quot;
and check to make sure that only the key(s) you wanted were added.
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Now would be a good time to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#prepost-installation&quot;&gt;perform any tasks specific to your setup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Limit Who Can Use &lt;code&gt;sudo&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sudo&lt;/code&gt; lets accounts run commands as other accounts, including &lt;strong&gt;root&lt;/strong&gt;. We want to make sure that only the accounts we want can use &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sudo&lt;/code&gt; privileges limited to those who are in a group we specify&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Your installation may have already done this, or may already have a special group intended for this purpose so check first.
&lt;ul&gt;&lt;li&gt;Debian creates the &lt;code&gt;sudo&lt;/code&gt; group&lt;/li&gt;
&lt;li&gt;RedHat creates the &lt;code&gt;wheel&lt;/code&gt; group&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Create a group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo groupadd sudousers
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add account(s) to the group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo usermod -a -G sudousers user1
sudo usermod -a -G sudousers user2
sudo usermod -a -G sudousers  ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll need to do this for every account on your server that needs &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/sudoers&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/sudoers /etc/sudoers.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo visudo
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell &lt;code&gt;sudo&lt;/code&gt; to only allow users in the &lt;code&gt;sudousers&lt;/code&gt; group to use &lt;code&gt;sudo&lt;/code&gt; by &lt;strong&gt;adding&lt;/strong&gt; this line if it is not already there:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;%sudousers   ALL=(ALL:ALL) ALL
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Secure SSH&lt;/h3&gt;
&lt;h4&gt;Create SSH Group For &lt;code&gt;AllowGroups&lt;/code&gt;&lt;/h4&gt;
&lt;h5&gt;Why&lt;/h5&gt;
&lt;p&gt;To make it easy to control who can SSH to the server. By using a group, we can quickly add/remove accounts to the group to quickly allow or not allow SSH access to the server.&lt;/p&gt;
&lt;h5&gt;Goals&lt;/h5&gt;
&lt;h5&gt;Notes&lt;/h5&gt;
&lt;h5&gt;References&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;man groupadd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man usermod&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;Steps&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Create a group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo groupadd sshusers
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add account(s) to the group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo usermod -a -G sshusers user1
sudo usermod -a -G sshusers user2
sudo usermod -a -G sshusers ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll need to do this for every account on your server that needs SSH access.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h4&gt;Secure &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/h4&gt;
&lt;h5&gt;Why&lt;/h5&gt;
&lt;p&gt;SSH is a door into your server. This is especially true if you are opening ports on your router so you can SSH to your server from outside your home network. If it is not secured properly, a bad-actor could use it to gain unauthorized access to your system.&lt;/p&gt;
&lt;h5&gt;Goal&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;a secure SSH configuration&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;Notes&lt;/h5&gt;
&lt;h5&gt;References&lt;/h5&gt;
&lt;h5&gt;Steps&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and remove default comments to make it easier to read:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/ssh/sshd_config /etc/ssh/sshd_config.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo sed -i -r -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/^#|^$/ d&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; then &lt;strong&gt;find and edit or add&lt;/strong&gt; these settings that should apply regardless of your configuration/setup:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Your &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file may already have some of these settings/lines. You will want to remove those and replace them with the ones below.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;########################################################################################################
# start settings from https://infosec.mozilla.org/guidelines/openssh#modern-openssh-67 as of 2019-01-01
########################################################################################################

# Supported HostKey algorithms by order of preference.
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256

Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

# LogLevel VERBOSE logs user's key fingerprint on login. Needed to have a clear audit track of which key was using to log in.
LogLevel VERBOSE

# Use kernel sandbox mechanisms where possible in unprivileged processes
# Systrace on OpenBSD, Seccomp on Linux, seatbelt on MacOSX/Darwin, rlimit elsewhere.
UsePrivilegeSeparation sandbox

########################################################################################################
# end settings from https://infosec.mozilla.org/guidelines/openssh#modern-openssh-67 as of 2019-01-01
########################################################################################################

# Log sftp level file access (read/write/etc.) that would not be easily logged otherwise.
Subsystem sftp  internal-sftp -f AUTHPRIV -l INFO

# only use the newer, more secure protocl
Protocol 2

# disable X11 forwarding as X11 is very insecure
# you really shouldn't be running X on a server anyway
X11Forwarding no

# disable port forwarding
AllowTcpForwarding no
AllowStreamLocalForwarding no
GatewayPorts no
PermitTunnel no

# don't allow login if the account has an empty password
PermitEmptyPasswords no

# ignore .rhosts and .shosts
IgnoreRhosts yes

# verify hostname matches IP
UseDNS no

Compression no
TCPKeepAlive no
AllowAgentForwarding no
PermitRootLogin no
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then &lt;strong&gt;find and edit or add&lt;/strong&gt; these settings, and set values as per your requirements:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Setting&lt;/th&gt;
&lt;th&gt;Valid Values&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;AllowGroups&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;local UNIX group name&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AllowGroups sshusers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;group to allow SSH access to&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ClientAliveCountMax&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ClientAliveCountMax 0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of client alive messages sent without response&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ClientAliveInterval&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number of seconds&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ClientAliveInterval 300&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;timeout in seconds before a response request&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ListenAddress&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;space separated list of local addresses&lt;/td&gt;
&lt;td&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;ListenAddress 0.0.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ListenAddress 192.168.1.100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/td&gt;
&lt;td&gt;local addresses &lt;code&gt;sshd&lt;/code&gt; should listen on&lt;/td&gt;
&lt;td&gt;See &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/issues/1&quot;&gt;Issue #1&lt;/a&gt; for important details.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;LoginGraceTime&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number of seconds&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LoginGraceTime 30&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;time in seconds before login times-out&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MaxAuthTries&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MaxAuthTries 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum allowed attempts to login&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MaxSessions&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MaxSessions 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of open sessions&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MaxStartups&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MaxStartups 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of login sessions&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;PasswordAuthentication&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PasswordAuthentication no&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;if login with a password is allowed&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Port&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;any open/available port number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Port 22&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;port that &lt;code&gt;sshd&lt;/code&gt; should listen on&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Check &lt;code&gt;man sshd_config&lt;/code&gt; for more details what these settings mean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart ssh:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo service sshd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h4&gt;Deactivate Short Moduli&lt;/h4&gt;
&lt;h5&gt;Why&lt;/h5&gt;
&lt;p&gt;Per &lt;a href=&quot;https://infosec.mozilla.org/guidelines/openssh#modern-openssh-67&quot; rel=&quot;nofollow&quot;&gt;Mozilla's OpenSSH guidelines for OpenSSH 6.7+&lt;/a&gt;, &quot;all Diffie-Hellman moduli in use should be at least 3072-bit-long&quot;.&lt;/p&gt;
&lt;h5&gt;Goal&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;deactivate short moduli&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;References&lt;/h5&gt;
&lt;h5&gt;Steps&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/ssh/moduli&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/ssh/moduli /etc/ssh/moduli.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove short moduli:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;$5 &amp;gt;= 3071&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /etc/ssh/moduli &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee /etc/ssh/moduli.tmp
sudo mv /etc/ssh/moduli.tmp /etc/ssh/moduli
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;NTP Client&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Many security protocols leverage the time. If your system time is incorrect, it could have negative impacts to your server. An NTP client can solve that problem by keeping your system time in-sync with &lt;a href=&quot;https://www.pool.ntp.org/en/&quot; rel=&quot;nofollow&quot;&gt;global NTP servers&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;NTP client installed and keeping server time in-sync&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;ntp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install ntp
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check &lt;code&gt;ntp&lt;/code&gt;'s status:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo systemctl status ntp
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;● ntp.service - LSB: Start NTP daemon
   Loaded: loaded (/etc/init.d/ntp; generated; vendor preset: enabled)
   Active: active (running) since Sat 2019-02-16 00:32:20 EST; 3s ago
     Docs: man:systemd-sysv-generator(8)
   CGroup: /system.slice/ntp.service
           └─1051 /usr/sbin/ntpd -p /var/run/ntpd.pid -g -u 109:114

Feb 16 00:32:20 host ntpd[1051]: Listen normally on 3 enp0s3 192.168.1.96:123
Feb 16 00:32:20 host ntpd[1051]: Listen normally on 4 lo [::1]:123
Feb 16 00:32:20 host ntpd[1051]: Listen normally on 5 enp0s3 [fe80::a00:27ff:feb6:ed8e%2]:123
Feb 16 00:32:20 host ntpd[1051]: Listening on routing socket on fd #22 for interface updates
Feb 16 00:32:21 host ntpd[1051]: Soliciting pool server 173.255.206.154
Feb 16 00:32:22 host ntpd[1051]: Soliciting pool server 216.6.2.70
Feb 16 00:32:22 host ntpd[1051]: Soliciting pool server 82.197.188.130
Feb 16 00:32:23 host ntpd[1051]: Soliciting pool server 95.215.175.2
Feb 16 00:32:23 host ntpd[1051]: Soliciting pool server 107.155.79.108
Feb 16 00:32:23 host ntpd[1051]: Soliciting pool server 212.110.158.28
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ntpq -p
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;     remote           refid      st t when poll reach   delay   offset  jitter
==============================================================================
 0.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
 1.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
 2.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
 3.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
-li216-154.membe 45.56.123.24     3 u  119   64    2   51.912    0.663   2.311
+eudyptula.init7 162.23.41.10     2 u   60   64    3   99.378    1.563   3.485
+107.155.79.108  129.7.1.66       2 u  119   64    2   49.171   -1.372   1.441
-212.110.158.28  89.109.251.21    2 u  120   64    2  167.465   -1.064   1.263
*ec2-54-242-183- 128.10.19.24     2 u   62   64    3   19.157    2.536   4.434
-69.195.159.158  128.252.19.1     2 u  119   64    2   42.990    6.302   3.507
-200.89.75.198 ( 200.27.106.115   2 u   58   64    3  160.786   42.737  12.827
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[NS]&lt;/code&gt; Configure Gmail as MTA&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Unless you're planning on setting up your own mail server, you'll need a way to send e-mails from your server. This will be important for system alerts/messages.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;mail&lt;/code&gt; configured to send e-mails from your server using &lt;a href=&quot;https://mail.google.com/&quot; rel=&quot;nofollow&quot;&gt;Gmail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;exim4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install exim4
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure &lt;code&gt;exim4&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;For Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo dpkg-reconfigure exim4-config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll be prompted with some questions:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;Prompt&lt;/th&gt;
&lt;th&gt;Answer&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;General type of mail configuration&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mail sent by smarthost; no local mail&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;System mail name&lt;/td&gt;
&lt;td&gt;(default)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;IP-addresses to listen on for incoming SMTP connections&lt;/td&gt;
&lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Other destinations for which mail is accepted&lt;/td&gt;
&lt;td&gt;(default)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Visible domain name for local users&lt;/td&gt;
&lt;td&gt;(default)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;IP address or host name of the outgoing smarthost&lt;/td&gt;
&lt;td&gt;&lt;code&gt;smtp.gmail.com::587&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Keep number of DNS-queries minimal (Dial-on-Demand)?&lt;/td&gt;
&lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Split configuration into small files?&lt;/td&gt;
&lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/exim4/passwd.client&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
    sudo cp /etc/exim4/passwd.client /etc/exim4/passwd.client.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt; a line like this to &lt;code&gt;/etc/exim4/passwd.client&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;*.google.com:yourAccount@gmail.com:yourPassword
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Replace &lt;code&gt;yourAccount@gmail.com&lt;/code&gt; and &lt;code&gt;yourPassword&lt;/code&gt; with your details. If you have 2FA/MFA enabled on your Gmail then you'll need to create and use an app password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This file has your Gmail password so we need to lock it down:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo chown root:Debian-exim /etc/exim4/passwd.client
sudo chmod 640 /etc/exim4/passwd.client
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart &lt;code&gt;exim4&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo service exim4 restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add some mail aliases so we can send e-mails to local accounts by &lt;strong&gt;adding&lt;/strong&gt; lines like this to &lt;code&gt;/etc/aliases&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;user1: user1@gmail.com
user2: user2@gmail.com
...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You'll need to add all the local accounts that exist on your server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;UFW: Uncomplicated Firewall&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Call me paranoid, and you don't have to agree, but I want to deny all traffic in and out of my server except what I explicitly allow. Why would my server be sending traffic out that I don't know about? And why would external traffic be trying to access my server if I don't know who or what it is? When it comes to good security, my opinion is to reject/deny by default, and allow by exception.&lt;/p&gt;
&lt;p&gt;Of course, if you disagree, that is totally fine and can configure UFW to suit your needs.&lt;/p&gt;
&lt;p&gt;Either way, ensuring that only traffic we explicitly allow is the job of a firewall. On Linux, the most common firewall is &lt;a href=&quot;https://en.wikipedia.org/wiki/Iptables&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;iptables&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;iptables&lt;/code&gt;, however, is rather complicated and confusing (IMHO). This is where UFW comes in. UFW simplifies the process of creating and managing &lt;code&gt;iptables&lt;/code&gt; rules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UFW&lt;/strong&gt; works by letting you configure rules that:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;allow&lt;/strong&gt; or &lt;strong&gt;deny&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;input&lt;/strong&gt; or &lt;strong&gt;output&lt;/strong&gt; traffic&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to&lt;/strong&gt; or &lt;strong&gt;from&lt;/strong&gt; ports&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can create rules by explicitly specifying the ports or with application configurations that specify the ports.&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;all network traffic, input and output, blocked except those we explicitly allow&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;As you install other programs, you'll need to enable the necessary ports/applications.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;ufw&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install ufw
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deny all outgoing traffic:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw default deny outgoing comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;deny all outgoing traffic&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Default outgoing policy changed to 'deny'
(be sure to update your rules accordingly)
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;If you are not as paranoid as me, and don't want to deny all outgoing traffic, you can allow it instead:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw default allow outgoing comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow all outgoing traffic&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deny all incoming traffic:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw default deny incoming comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;deny all incoming traffic&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Obviously we want SSH connections in:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw limit &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; ssh comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow SSH connections in&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Rules updated
Rules updated (v6)
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow additional traffic as per your needs. Some common use-cases:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out on port 53 -- DNS&lt;/span&gt;
sudo ufw allow out 53 comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow DNS calls out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out on port 123 -- NTP&lt;/span&gt;
sudo ufw allow out 123 comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow NTP out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out for HTTP, HTTPS, or FTP&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; apt might needs these depending on which sources you're using&lt;/span&gt;
sudo ufw allow out http comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow HTTP traffic out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
sudo ufw allow out https comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow HTTPS traffic out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
sudo ufw allow out ftp comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow FTP traffic out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow mail to go out&lt;/span&gt;
sudo ufw allow out &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Mail submission&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow mail out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow whois&lt;/span&gt;
sudo ufw allow out whois comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow whois&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out on port 68 -- the DHCP client&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; you only need this if you're using DHCP&lt;/span&gt;
sudo ufw allow out 68 comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow the DHCP client to update&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;code&gt;ufw&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw &lt;span class=&quot;pl-c1&quot;&gt;enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Command may disrupt existing ssh connections. Proceed with operation (y|n)? y
Firewall is active and enabled on system startup
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to see a status:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw status
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status: active

To                         Action      From
--                         ------      ----
22/tcp                     LIMIT       Anywhere                   # allow SSH connections in
22/tcp (v6)                LIMIT       Anywhere (v6)              # allow SSH connections in

53                         ALLOW OUT   Anywhere                   # allow DNS calls out
123                        ALLOW OUT   Anywhere                   # allow NTP out
80/tcp                     ALLOW OUT   Anywhere                   # allow HTTP traffic out
443/tcp                    ALLOW OUT   Anywhere                   # allow HTTPS traffic out
21/tcp                     ALLOW OUT   Anywhere                   # allow FTP traffic out
Mail submission            ALLOW OUT   Anywhere                   # allow mail out
43/tcp                     ALLOW OUT   Anywhere                   # allow whois
53 (v6)                    ALLOW OUT   Anywhere (v6)              # allow DNS calls out
123 (v6)                   ALLOW OUT   Anywhere (v6)              # allow NTP out
80/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow HTTP traffic out
443/tcp (v6)               ALLOW OUT   Anywhere (v6)              # allow HTTPS traffic out
21/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow FTP traffic out
Mail submission (v6)       ALLOW OUT   Anywhere (v6)              # allow mail out
43/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow whois
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw status verbose
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status: active
Logging: on (low)
Default: deny (incoming), deny (outgoing), disabled (routed)
New profiles: skip

To                         Action      From
--                         ------      ----
22/tcp                     LIMIT IN    Anywhere                   # allow SSH connections in
22/tcp (v6)                LIMIT IN    Anywhere (v6)              # allow SSH connections in

53                         ALLOW OUT   Anywhere                   # allow DNS calls out
123                        ALLOW OUT   Anywhere                   # allow NTP out
80/tcp                     ALLOW OUT   Anywhere                   # allow HTTP traffic out
443/tcp                    ALLOW OUT   Anywhere                   # allow HTTPS traffic out
21/tcp                     ALLOW OUT   Anywhere                   # allow FTP traffic out
587/tcp (Mail submission)  ALLOW OUT   Anywhere                   # allow mail out
43/tcp                     ALLOW OUT   Anywhere                   # allow whois
53 (v6)                    ALLOW OUT   Anywhere (v6)              # allow DNS calls out
123 (v6)                   ALLOW OUT   Anywhere (v6)              # allow NTP out
80/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow HTTP traffic out
443/tcp (v6)               ALLOW OUT   Anywhere (v6)              # allow HTTPS traffic out
21/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow FTP traffic out
587/tcp (Mail submission (v6)) ALLOW OUT   Anywhere (v6)              # allow mail out
43/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow whois
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Default Applications&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ufw&lt;/code&gt; ships with some default applications. You can see them with:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw app list
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Available applications:
  AIM
  Bonjour
  CIFS
  DNS
  Deluge
  IMAP
  IMAPS
  IPP
  KTorrent
  Kerberos Admin
  Kerberos Full
  Kerberos KDC
  Kerberos Password
  LDAP
  LDAPS
  LPD
  MSN
  MSN SSL
  Mail submission
  NFS
  OpenSSH
  POP3
  POP3S
  PeopleNearby
  SMTP
  SSH
  Socks
  Telnet
  Transmission
  Transparent Proxy
  VNC
  WWW
  WWW Cache
  WWW Full
  WWW Secure
  XMPP
  Yahoo
  qBittorrent
  svnserve
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;To get details about the app, like which ports it includes, type:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw app info [app name]
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw app info DNS
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;Profile: DNS
Title: Internet Domain Name Server
Description: Internet Domain Name Server

Port:
  53
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h4&gt;Custom Application&lt;/h4&gt;
&lt;p&gt;If you don't want to create rules by explicitly providing the port number(s), you can create your own application configurations. To do this, create a file in &lt;code&gt;/etc/ufw/applications.d&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, here is what you would use for &lt;a href=&quot;https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/&quot; rel=&quot;nofollow&quot;&gt;Plex&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cat /etc/ufw/applications.d/plexmediaserver
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[PlexMediaServer]
title=Plex Media Server
description=This opens up PlexMediaServer for http (32400), upnp, and autodiscovery.
ports=32469/tcp|32413/udp|1900/udp|32400/tcp|32412/udp|32410/udp|32414/udp|32400/udp
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Then you can enable it like any other app:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw allow plexmediaserver
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;PSAD: &lt;code&gt;iptables&lt;/code&gt; Intrusion Detection And Prevention&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;I can't explain it any better than user &lt;a href=&quot;https://serverfault.com/users/143961/finesec&quot; rel=&quot;nofollow&quot;&gt;FINESEC&lt;/a&gt; from &lt;a href=&quot;https://serverfault.com/&quot; rel=&quot;nofollow&quot;&gt;https://serverfault.com/&lt;/a&gt; did at: &lt;a href=&quot;https://serverfault.com/a/447604/289829&quot; rel=&quot;nofollow&quot;&gt;https://serverfault.com/a/447604/289829&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fail2BAN scans log files of various applications such as apache, ssh or ftp and automatically bans IPs that show the malicious signs such as automated login attempts. PSAD on the other hand scans iptables and ip6tables log messages (typically /var/log/messages) to detect and optionally block scans and other types of suspect traffic such as DDoS or OS fingerprinting attempts. It's ok to use both programs at the same time because they operate on different level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And, since we're already using &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ufw-uncomplicated-firewall&quot;&gt;UFW&lt;/a&gt; so we'll follow the awesome instructions by &lt;a href=&quot;https://gist.github.com/netson&quot;&gt;netson&lt;/a&gt; at &lt;a href=&quot;https://gist.github.com/netson/c45b2dc4e835761fbccc&quot;&gt;https://gist.github.com/netson/c45b2dc4e835761fbccc&lt;/a&gt; to make PSAD work with UFW.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;psad&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install psad
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/psad/psad.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp /etc/psad/psad.conf /etc/psad/psad.conf.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Review and update configuration options in &lt;code&gt;/etc/psad/psad.conf&lt;/code&gt;. Pay special attention to these:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Setting&lt;/th&gt;
&lt;th&gt;Set To&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.cipherdyne.org/psad/docs/config.html#EMAIL_ADDRESSES&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;EMAIL_ADDRESSES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;your email address(s)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;HOSTNAME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;your server's hostname&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.cipherdyne.org/psad/docs/config.html#ENABLE_AUTO_IDS&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;ENABLE_AUTO_IDS&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ENABLE_AUTO_IDS Y;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;ENABLE_AUTO_IDS_EMAILS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ENABLE_AUTO_IDS_EMAILS Y;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;EXPECT_TCP_OPTIONS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXPECT_TCP_OPTIONS Y;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Check the configuration file &lt;code&gt;psad&lt;/code&gt;'s documentation at &lt;a href=&quot;http://www.cipherdyne.org/psad/docs/config.html&quot; rel=&quot;nofollow&quot;&gt;http://www.cipherdyne.org/psad/docs/config.html&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to make some changes to &lt;code&gt;ufw&lt;/code&gt; so it works with &lt;code&gt;psad&lt;/code&gt; by telling &lt;code&gt;ufw&lt;/code&gt; to log all traffic so &lt;code&gt;psad&lt;/code&gt; can analyze it. Do this by editing &lt;strong&gt;two files&lt;/strong&gt; and &lt;strong&gt;adding&lt;/strong&gt; these lines &lt;strong&gt;at the end but before the COMMIT line&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Make backups:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp /etc/ufw/before.rules /etc/ufw/before.rules.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo cp /etc/ufw/before6.rules /etc/ufw/before6.rules.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Edit the files:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/etc/ufw/before.rules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ufw/before6.rules&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And add &lt;strong&gt;add&lt;/strong&gt; this &lt;strong&gt;at the end but before the COMMIT line&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# log all traffic so psad can analyze
-A INPUT -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;
-A FORWARD -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We're adding a log prefix to all the &lt;code&gt;iptables&lt;/code&gt; logs. We'll need this for &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ns-separate-iptables-log-file&quot;&gt;seperating &lt;code&gt;iptables&lt;/code&gt; logs to their own file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;...

# log all traffic so psad can analyze
-A INPUT -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;
-A FORWARD -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;

# don't delete the 'COMMIT' line or these rules won't be processed
COMMIT
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to reload/restart &lt;code&gt;ufw&lt;/code&gt; and &lt;code&gt;psad&lt;/code&gt; for the changes to take effect:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw reload

sudo psad -R
sudo psad --sig-update
sudo psad -H
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analyze &lt;code&gt;iptables&lt;/code&gt; rules for errors:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo psad --fw-analyze
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[+] Parsing INPUT chain rules.
[+] Parsing INPUT chain rules.
[+] Firewall config looks good.
[+] Completed check of firewall ruleset.
[+] Results in /var/log/psad/fw_check
[+] Exiting.
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If there were any issues you will get an e-mail with the error.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the status of &lt;code&gt;psad&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo psad --Status
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[-] psad: pid file /var/run/psad/psadwatchd.pid does not exist for psadwatchd on vm
[+] psad_fw_read (pid: 3444)  %CPU: 0.0  %MEM: 2.2
    Running since: Sat Feb 16 01:03:09 2019

[+] psad (pid: 3435)  %CPU: 0.2  %MEM: 2.7
    Running since: Sat Feb 16 01:03:09 2019
    Command line arguments: [none specified]
    Alert email address(es): root@localhost

[+] Version: psad v2.4.3

[+] Top 50 signature matches:
        [NONE]

[+] Top 25 attackers:
        [NONE]

[+] Top 20 scanned ports:
        [NONE]

[+] iptables log prefix counters:
        [NONE]

    Total protocol packet counters:

[+] IP Status Detail:
        [NONE]

    Total scan sources: 0
    Total scan destinations: 0

[+] These results are available in: /var/log/psad/status.out
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[NS]&lt;/code&gt; Separate &lt;code&gt;iptables&lt;/code&gt; Log File&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;There will come a time when you'll need to look through your &lt;code&gt;iptables&lt;/code&gt; logs. Having all the &lt;code&gt;iptables&lt;/code&gt; logs go to their own file will make it a lot easier to find what you're looking for.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;The first step is by telling your firewall to prefix all log entries with some unique string. If you're using &lt;code&gt;iptables&lt;/code&gt; directly, you would do something like &lt;code&gt;--log-prefix &quot;[IPTABLES] &quot;&lt;/code&gt; for all the rules. We took care of this in step &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#psad_step4&quot;&gt;step 4 of installing &lt;code&gt;psad&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After you've added a prefix to the firewall logs, we need to tell &lt;code&gt;rsyslog&lt;/code&gt; to send those lines to its own file. Do this by &lt;strong&gt;creating&lt;/strong&gt; the file &lt;code&gt;/etc/rsyslog.d/10-iptables.conf&lt;/code&gt; and &lt;strong&gt;adding&lt;/strong&gt; this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:msg, contains, &quot;[IPTABLES] &quot; /var/log/iptables.log
&amp;amp; stop
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you're expecting a lot if data being logged by your firewall, prefix the filename with a &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;https://www.rsyslog.com/doc/v8-stable/configuration/actions.html#regular-file&quot; rel=&quot;nofollow&quot;&gt;&quot;to omit syncing the file after every logging&quot;&lt;/a&gt;. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:msg, contains, &quot;[IPTABLES] &quot; -/var/log/iptables.log
&amp;amp; stop
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Remember to change the prefix to whatever you use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since we're logging firewall messages to a different file, we need to tell &lt;code&gt;psad&lt;/code&gt; where the new file is. Edit &lt;code&gt;/etc/psad/psad.conf&lt;/code&gt; and set &lt;code&gt;IPT_SYSLOG_FILE&lt;/code&gt; to the path of the log file. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;IPT_SYSLOG_FILE /var/log/iptables.log;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart &lt;code&gt;psad&lt;/code&gt; and &lt;code&gt;rsyslog&lt;/code&gt; to activate the changes (or reboot):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo psad -R
sudo psad --sig-update
sudo psad -H
sudo service rsyslog restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The last thing we have to do is tell &lt;code&gt;logrotate&lt;/code&gt; to rotate the new log file so it doesn't get to big and fill up our disk. &lt;strong&gt;Create&lt;/strong&gt; the file &lt;code&gt;/etc/logrotate.d/iptables&lt;/code&gt; and &lt;strong&gt;add&lt;/strong&gt; this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/var/log/iptables.log
{
    rotate 7
    daily
    missingok
    notifempty
    delaycompress
    compress
    postrotate
        invoke-rc.d rsyslog rotate &amp;gt; /dev/null
    endscript
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Fail2ban: Application Intrusion Detection And Prevention&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;A firewall will board up all the doors and windows you don't want anyone using so nobody can see they are even there. But what about the doors and windows you want visible so approved folks can use them? Even if the door is locked, how do you ensure that someone doesn't try to force their way in?&lt;/p&gt;
&lt;p&gt;That is where &lt;strong&gt;Fail2ban&lt;/strong&gt; comes in. It will monitor network traffic/logs and prevent intrusions by blocking suspicious activity (e.g. multiple successive failed connections in a short time-span).&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;network monitoring for suspicious activity with automatic banning of offending IPs&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;As of right now, the only thing running on this server is SSH so we'll want Fail2ban to monitor SSH and ban as necessary.&lt;/li&gt;
&lt;li&gt;As you install other programs, you'll need to create/configure the appropriate jails and enable them.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;fail2ban&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install fail2ban
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We don't want to edit &lt;code&gt;/etc/fail2ban/fail2ban.conf&lt;/code&gt; or &lt;code&gt;/etc/fail2ban/jail.conf&lt;/code&gt; because a future update may overwrite those so we'll update a local copy instead. &lt;strong&gt;Add&lt;/strong&gt; this to &lt;code&gt;/etc/fail2ban/jail.local&lt;/code&gt; after replacing &lt;code&gt;[LAN SEGMENT]&lt;/code&gt; and &lt;code&gt;[your email]&lt;/code&gt; with the appropriate values:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[DEFAULT]
# the IP address range we want to ignore
ignoreip = 127.0.0.1/8 [LAN SEGMENT]

# who to send e-mail to
destemail = [your e-mail]

# who is the email from
sender = [your e-mail]

# since we're using exim4 to send emails
mta = mail

# get email alerts
action = %(action_mwl)s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note: Your server will need to be able to send e-mails so Fail2ban can let you know of suspicious activity and when it banned an IP.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to create a jail for &lt;code&gt;ssh&lt;/code&gt; that tells &lt;code&gt;fail2ban&lt;/code&gt; to look at &lt;code&gt;ssh&lt;/code&gt; logs and use &lt;code&gt;ufw&lt;/code&gt; to ban/unban IPs as needed. Create a jail for &lt;code&gt;ssh&lt;/code&gt; by &lt;strong&gt;adding&lt;/strong&gt; this to &lt;code&gt;/etc/fail2ban/jail.d/ssh.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[sshd]
enabled = true
banaction = ufw
port = ssh
filter = sshd
logpath = %(sshd_log)s
maxretry = 5
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the above we tell &lt;code&gt;fail2ban&lt;/code&gt; to use the &lt;code&gt;ufw&lt;/code&gt; as the &lt;code&gt;banaction&lt;/code&gt;. Fail2ban ships with an action configuration file for &lt;code&gt;ufw&lt;/code&gt;. You can see it in &lt;code&gt;/etc/fail2ban/action.d/ufw.conf&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable &lt;code&gt;fail2ban&lt;/code&gt; and the jail for SSH:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo fail2ban-client start
sudo fail2ban-client reload
sudo fail2ban-client add sshd
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check the status:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo fail2ban-client status
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status
|- Number of jail:      1
`- Jail list:   sshd
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo fail2ban-client status sshd
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status for the jail: sshd
|- Filter
|  |- Currently failed: 0
|  |- Total failed:     0
|  `- File list:        /var/log/auth.log
`- Actions
   |- Currently banned: 0
   |- Total banned:     0
   `- Banned IP list:
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Custom Jails&lt;/h4&gt;
&lt;p&gt;I have not needed to create a custom jail yet. Once I do, and I figure out how, I will update this guide. Or, if you know how please help &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contributing&quot;&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Unban an IP&lt;/h4&gt;
&lt;p&gt;To unban an IP use this command:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
fail2ban-client &lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; [jail] unbanip [IP]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;[jail]&lt;/code&gt; is the name of the jail that has the banned IP and &lt;code&gt;[IP]&lt;/code&gt; is the IP address you want to unban. For example, to unaban &lt;code&gt;192.168.1.100&lt;/code&gt; from SSH you would do:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
fail2ban-client &lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; sshd unbanip 192.168.1.100
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Linux Kernel &lt;code&gt;sysctl&lt;/code&gt; Hardening&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;The kernel is the brains of a Linux system. Securing it just makes sense.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;Changing kernel settings with &lt;code&gt;sysctl&lt;/code&gt; is risky and could break your server. If you don't know what you are doing, don't have the time to debug issues, or just don't want to take the risks, I would advise from not following these steps.&lt;/p&gt;
&lt;h4&gt;Disclaimer&lt;/h4&gt;
&lt;p&gt;I am not as knowledgeable about hardening/securing a Linux kernel as I'd like. As much as I hate to admit it, I do not know what all of these settings do. My understanding is that most of them are general kernel hardening and performance, and the others are to protect against spoofing and DOS attacks.&lt;/p&gt;
&lt;p&gt;In fact, since I am not 100% sure exactly what each setting does, I took recommended settings from numerous sites (all linked &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#sysctl-references&quot;&gt;below&lt;/a&gt;) and combined them to figure out what should be set. I figure if multiple reputable sites mention the same setting, it's probably safe.&lt;/p&gt;
&lt;p&gt;If you have a better understanding of what these settings do, or have any other feedback/advice on them, please &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contacting-me&quot;&gt;let me know&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I won't provide &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt; code in this section.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Documentation on all the &lt;code&gt;sysctl&lt;/code&gt; settings/keys is severely lacking. The &lt;a href=&quot;https://github.com/torvalds/linux/tree/master/Documentation&quot;&gt;documentation I can find&lt;/a&gt; seems to reference the 2.2 version kernel. I could not find anything newer. If you know where I can, please &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contacting-me&quot;&gt;let me know&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The reference sites listed &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#sysctl-references&quot;&gt;below&lt;/a&gt; have more comments on what each setting does.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;The &lt;code&gt;sysctl&lt;/code&gt; settings can be found in the &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/blob/master/linux-kernel-sysctl-hardening.md&quot;&gt;linux-kernel-sysctl-hardening.md&lt;/a&gt; file in this repo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before you make a kernel &lt;code&gt;sysctl&lt;/code&gt; change permanent, you can test it with the &lt;code&gt;sysctl&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -w [key&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;value]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -w kernel.ctrl-alt-del=0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There are no spaces in &lt;code&gt;key=value&lt;/code&gt;, including before and after the space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you have tested a setting, and made sure it works without breaking your server, you can make it permanent by adding the values to &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ sudo cat /etc/sysctl.conf
kernel.ctrl-alt-del = 0
fs.file-max = 65535
...
kernel.sysrq = 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After updating the file you can reload the settings or reboot. To reload:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If &lt;code&gt;sysctl&lt;/code&gt; has trouble writing any settings then &lt;code&gt;sysctl -w&lt;/code&gt; or &lt;code&gt;sysctl -p&lt;/code&gt; will write an error to &lt;code&gt;stderr&lt;/code&gt;. You can use this to quickly find invalid settings in your &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -p &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Password Protect GRUB&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;If a bad actor has physical access to your server, they could use GRUB to gain unauthorized access to your system.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;If you forget the password, you'll have to go through &lt;a href=&quot;https://www.cyberciti.biz/tips/howto-recovering-grub-boot-loader-password.html&quot; rel=&quot;nofollow&quot;&gt;some work&lt;/a&gt; to recover the password.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;auto boot the default Debian install and require a password for anything else&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;This will only protect GRUB and anything behind it like your operating systems. Check your motherboard's documentation for password protecting your BIOS to prevent a bad actor from circumventing GRUB.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Create a &lt;a href=&quot;https://en.wikipedia.org/wiki/PBKDF2&quot; rel=&quot;nofollow&quot;&gt;Password-Based Key Derivation Function 2 (PBKDF2)&lt;/a&gt; hash of your password:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
grub-mkpasswd-pbkdf2 -c 100000
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The below output is from using &lt;code&gt;password&lt;/code&gt; as the password:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Enter password:
Reenter password:
PBKDF2 hash of your password is grub.pbkdf2.sha512.100000.2812C233DFC899EFC3D5991D8CA74068C99D6D786A54F603E9A1EFE7BAEDDB6AA89672F92589FAF98DB9364143E7A1156C9936328971A02A483A84C3D028C4FF.C255442F9C98E1F3C500C373FE195DCF16C56EEBDC55ABDD332DD36A92865FA8FC4C90433757D743776AB186BD3AE5580F63EF445472CC1D151FA03906D08A6D
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy everything &lt;strong&gt;after&lt;/strong&gt; &lt;code&gt;PBKDF2 hash of your password is&lt;/code&gt; , &lt;strong&gt;starting from and including&lt;/strong&gt; &lt;code&gt;grub.pbkdf2.sha512...&lt;/code&gt; to the end. You'll need this in the next step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;update-grub&lt;/code&gt; program uses scripts to generate configuration files it will use for GRUB's settings. Create the file &lt;code&gt;/etc/grub.d/01_password&lt;/code&gt; and &lt;strong&gt;add&lt;/strong&gt; the below code after replacing &lt;code&gt;[hash]&lt;/code&gt; with the hash you copied from the first step. This tells &lt;code&gt;update-grub&lt;/code&gt; to use this username and password for GRUB.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/bin/sh&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; -e

cat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;set superusers=&quot;grub&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;password_pbkdf2 grub [hash]&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/bin/sh&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; -e

cat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;set superusers=&quot;grub&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;password_pbkdf2 grub grub.pbkdf2.sha512.100000.2812C233DFC899EFC3D5991D8CA74068C99D6D786A54F603E9A1EFE7BAEDDB6AA89672F92589FAF98DB9364143E7A1156C9936328971A02A483A84C3D028C4FF.C255442F9C98E1F3C500C373FE195DCF16C56EEBDC55ABDD332DD36A92865FA8FC4C90433757D743776AB186BD3AE5580F63EF445472CC1D151FA03906D08A6D&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the file's execute bit so &lt;code&gt;update-grub&lt;/code&gt; includes it when it updates GRUB's configuration:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo chmod a+x /etc/grub.d/01_password
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt; and unset execute bit so &lt;code&gt;update-grub&lt;/code&gt; doesn't try to run it:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/grub.d/10_linux /etc/grub.d/10_linux.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo chmod a-x /etc/grub.d/10_linux.&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make the default Debian install unrestricted (&lt;strong&gt;without&lt;/strong&gt; the password) while keeping everything else restricted (&lt;strong&gt;with&lt;/strong&gt; the password) modify &lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt; and &lt;strong&gt;add&lt;/strong&gt; &lt;code&gt;--unrestricted&lt;/code&gt; to the &lt;code&gt;CLASS&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sed -i -r -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;/^CLASS=/ a CLASS=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;\$&lt;/span&gt;{CLASS} --unrestricted&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /etc/grub.d/10_linux
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update GRUB with &lt;code&gt;update-grub&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Disable Root Login&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;If you have &lt;code&gt;sudo&lt;/code&gt; &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#limit-who-can-use-sudo&quot;&gt;configured properly&lt;/a&gt;, then the &lt;strong&gt;root&lt;/strong&gt; account will mostly never need to log in directly -- either at the terminal or remotely.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Be warned, this can cause issues with some configurations!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If your installation uses &lt;a href=&quot;https://linux.die.net/man/8/sulogin&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;sulogin&lt;/code&gt;&lt;/a&gt; (like Debian) to drop to a &lt;strong&gt;root&lt;/strong&gt; console during boot failures, then locking the &lt;strong&gt;root&lt;/strong&gt; account will prevent &lt;code&gt;sulogin&lt;/code&gt; from opening the &lt;strong&gt;root&lt;/strong&gt; shell and you will get this error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Cannot open access to console, the root account is locked.

See sulogin(8) man page for more details.

Press Enter to continue.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To work around this, you can use the &lt;code&gt;--force&lt;/code&gt; option for &lt;code&gt;sulogin&lt;/code&gt;. Some distributions already include this, or some other, workaround.&lt;/p&gt;
&lt;p&gt;An alternative to locking the &lt;strong&gt;root&lt;/strong&gt; acount is set a long/complicated &lt;strong&gt;root&lt;/strong&gt; password and store it in a secured, non digital format. That way you have it when/if you need it.&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;locked &lt;strong&gt;root&lt;/strong&gt; account that nobody can use to log in as &lt;strong&gt;root&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Some distributions disable &lt;strong&gt;root&lt;/strong&gt; login by default (e.g. Ubuntu) so you may not need to do this step. Check with your distribution's documentation.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Lock the &lt;strong&gt;root&lt;/strong&gt; account:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo passwd -l root
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Change Default &lt;code&gt;umask&lt;/code&gt;&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;umask&lt;/code&gt; controls the &lt;strong&gt;default&lt;/strong&gt; permissions of files/folders when they are created. Insecure file/folder permissions give other accounts potentially unauthorized access to your data. This may include the ability to make configuration changes.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For &lt;strong&gt;non-root&lt;/strong&gt; accounts, there is no need for other accounts to get any access to the account's files/folders &lt;strong&gt;by default&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;For the &lt;strong&gt;root&lt;/strong&gt; account, there is no need for the file/folder primary group or other accounts to have any access to &lt;strong&gt;root&lt;/strong&gt;'s files/folders &lt;strong&gt;by default&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When and if other accounts need access to a file/folder, you want to explicitly grant it using a combination of file/folder permissions and primary group.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;Changing the default &lt;code&gt;umask&lt;/code&gt; can create unexpected problems. For example, if you set &lt;code&gt;umask&lt;/code&gt; to &lt;code&gt;0077&lt;/code&gt; for &lt;strong&gt;root&lt;/strong&gt;, then &lt;strong&gt;non-root&lt;/strong&gt; accounts &lt;strong&gt;will not&lt;/strong&gt; have access to application configuration files/folders in &lt;code&gt;/etc/&lt;/code&gt; which could break applications that do not run with &lt;strong&gt;root&lt;/strong&gt; privileges.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;set default &lt;code&gt;umask&lt;/code&gt; for &lt;strong&gt;non-root&lt;/strong&gt; accounts to &lt;strong&gt;0027&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;set default &lt;code&gt;umask&lt;/code&gt; for the &lt;strong&gt;root&lt;/strong&gt; account to &lt;strong&gt;0077&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;umask&lt;/code&gt; is a Bash built-in which means a user can change their own &lt;code&gt;umask&lt;/code&gt; setting.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Set default &lt;code&gt;umask&lt;/code&gt; for &lt;strong&gt;non-root&lt;/strong&gt; accounts to &lt;strong&gt;0027&lt;/strong&gt; by &lt;strong&gt;adding&lt;/strong&gt; this line to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/bash.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;umask 0027
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/profile /etc/profile.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo cp --preserve /etc/bash.bashrc /etc/bash.bashrc.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\numask 0027         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/profile /etc/bash.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We also need to &lt;strong&gt;add&lt;/strong&gt; this line to &lt;code&gt;/etc/login.defs&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;UMASK 0027
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/login.defs /etc/login.defs.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\nUMASK 0027         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/login.defs 
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set default &lt;code&gt;umask&lt;/code&gt; for the &lt;strong&gt;root&lt;/strong&gt; account to &lt;strong&gt;0077&lt;/strong&gt; by &lt;strong&gt;adding&lt;/strong&gt; this line to &lt;code&gt;/root/.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;umask 0077
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /root/.bashrc /root/.bashrc.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\numask 0077         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /root/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Force Accounts To Use Secure Passwords&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;By default, accounts can use any password they want, including bad ones. &lt;a href=&quot;https://linux.die.net/man/5/pwquality.conf&quot; rel=&quot;nofollow&quot;&gt;pwquality&lt;/a&gt;/&lt;a href=&quot;https://linux.die.net/man/8/pam_pwquality&quot; rel=&quot;nofollow&quot;&gt;pam_pwquality&lt;/a&gt; addresses this security gap by providing &quot;a way to configure the default password quality requirements for the system passwords&quot; and checking &quot;its strength against a system dictionary and a set of rules for identifying poor choices.&quot;&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;enforced strong passwords&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;libpam-pwquality&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install libpam-pwquality
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell PAM to use &lt;code&gt;libpam-pwquality&lt;/code&gt; to enforce strong passwords by editing the file &lt;code&gt;/etc/pam.d/common-password&lt;/code&gt; and &lt;strong&gt;change&lt;/strong&gt; the line that starts like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;password        requisite                       pam_pwquality.so
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;password        requisite                       pam_pwquality.so retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1 maxrepeat=3 gecoschec
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The above options are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;retry=3&lt;/code&gt; = prompt user 3 times before returning with error.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minlen=10&lt;/code&gt; = the minimum length of the password, factoring in any credits (or debits) from these:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;dcredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one digit&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ucredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one upper case letter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lcredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one lower case letter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ocredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one non-alphanumeric character&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difok=3&lt;/code&gt; = at least 3 characters from the new password cannot have been in the old password&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxrepeat=3&lt;/code&gt; = allow a maximum of 3 repeated characters&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gecoschec&lt;/code&gt; = do not allow passwords with the account's name&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/pam.d/common-password /etc/pam.d/common-password.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

sudo sed -i -r -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;s/^(password\s+requisite\s+pam_pwquality.so)(.*)$/# \1\2         # commented by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n\1 retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1 maxrepeat=3 gecoschec         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;/&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /etc/pam.d/common-password
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;2FA/MFA for SSH&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Even though SSH is a pretty good security guard for your doors and windows, it is still a visible door that bad-actors can see and try to brute-force in. &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#fail2ban-application-intrusion-detection-and-prevention&quot;&gt;Fail2ban&lt;/a&gt; will monitor for these brute-force attempts but there is no such thing as being too secure.&lt;/p&gt;
&lt;p&gt;Using Two Factor Authentication (2FA) / Multi Factor Authentication (MFA) requires anyone entering to have &lt;strong&gt;two&lt;/strong&gt; keys to enter which makes it harder for bad actors. The two keys are:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Their password&lt;/li&gt;
&lt;li&gt;A 6 digit token that changes every 30 seconds&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Without both keys, they won't be able to get in.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;Many folks might find the experience cumbersome or annoying. And, acesss to your system is dependent on the accompanying authenticator app that generates the code.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;2FA/MFA enabled for all SSH connections&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Before you do this, you should have an idea of how 2FA/MFA works and you'll need an authenticator app on your phone to continue.&lt;/li&gt;
&lt;li&gt;We'll use &lt;a href=&quot;https://github.com/google/google-authenticator-libpam&quot;&gt;google-authenticator-libpam&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;With the below configuration, a user will only need to enter their 2FA/MFA code if they are logging on with their password but not &lt;strong&gt;not&lt;/strong&gt; if they are using &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ssh-publicprivate-keys&quot;&gt;SSH public/private keys&lt;/a&gt;. Check the documentation on how to change this behavior to suite your requirements.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install it &lt;code&gt;libpam-google-authenticator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install libpam-google-authenticator
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Make sure you're logged in as the ID you want to enable 2FA/MFA for&lt;/strong&gt; and &lt;strong&gt;execute&lt;/strong&gt; &lt;code&gt;google-authenticator&lt;/code&gt; to create the necessary token data:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
google-authenticator
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Do you want authentication tokens to be time-based (y/n) y
https://www.google.com/chart?chs=200x200&amp;amp;chld=M|0&amp;amp;cht=qr&amp;amp;chl=otpauth://totp/user@host%3Fsecret%3DR4ZWX34FQKZROVX7AGLJ64684Y%26issuer%3Dhost

...

Your new secret key is: R3NVX3FFQKZROVX7AGLJUGGESY
Your verification code is 751419
Your emergency scratch codes are:
  12345678
  90123456
  78901234
  56789012
  34567890

Do you want me to update your &quot;/home/user/.google_authenticator&quot; file (y/n) y

Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) y

By default, tokens are good for 30 seconds. In order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with
poor time synchronization, you can increase the window from its default
size of +-1min (window size of 3) to about +-4min (window size of
17 acceptable tokens).
Do you want to do so? (y/n) y

If the computer that you are logging into isn't hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Notice this is &lt;strong&gt;not run as root&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Select default option (y in most cases) for all the questions it asks and remember to save the emergency scratch codes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to enable it as an authentication method for SSH by &lt;strong&gt;adding&lt;/strong&gt; this line to &lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;auth       required     pam_google_authenticator.so nullok
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Check &lt;a href=&quot;https://github.com/google/google-authenticator-libpam/blob/master/README.md#nullok&quot;&gt;here&lt;/a&gt; for what &lt;code&gt;nullok&lt;/code&gt; means.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/pam.d/sshd /etc/pam.d/sshd.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\nauth       required     pam_google_authenticator.so nullok         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/pam.d/sshd
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell SSH to levearage it by &lt;strong&gt;adding&lt;/strong&gt; this line in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ChallengeResponseAuthentication yes
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/ssh/sshd_config /etc/ssh/sshd_config.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\nChallengeResponseAuthentication yes         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart &lt;code&gt;ssh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo service sshd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Apticron - Automatic Update Notifier&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;It is important to keep your server up-to-date with all security patches. Otherwise you're at risk of known security vulnerabilities that bad-actors could use to gain unauthorized access to your server.&lt;/p&gt;
&lt;p&gt;You have two options:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Configure your server for unattended updates&lt;/li&gt;
&lt;li&gt;Be notified when updates are available&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Which option you pick is up to you but I prefer being notified by e-mail when updates are available. This is because an update may break something else. If the server updates it-self then I may not know and, if I do find out, I'll have to scramble to fix it. If it e-mails me when updates are available, then I can do the updates at my schedule.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Your server will need a way to send e-mails for this to work&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;apticron&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install apticron
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the value of &lt;code&gt;EMAIL&lt;/code&gt; in &lt;code&gt;/etc/apticron/apticron.conf&lt;/code&gt; to your e-mail address.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Orphaned Software&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;As you use your system, and you install and uninstall software, you'll eventually end up with orphaned, or unused software/packages/libraries. You don't need to remove them, but if you don't need them, why keep them? When security is a priority, anything not explicitly needed is a potential security threat. You want to keep your server as trimmed and lean as possible.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Each distribution manages software/packages/libraries differently so how you find and remove orphaned packages will be different.&lt;/li&gt;
&lt;li&gt;So far I only have steps for Debian; I will add for other distributions as I learn how.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Steps&lt;/h4&gt;
&lt;h5&gt;Debian&lt;/h5&gt;
&lt;p&gt;For Debian based distributions, you can use &lt;a href=&quot;http://freshmeat.sourceforge.net/projects/deborphan/&quot; rel=&quot;nofollow&quot;&gt;deborphan&lt;/a&gt; to find orphaned packages.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;deborphan&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install deborphan
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;deborphan&lt;/code&gt; as &lt;strong&gt;root&lt;/strong&gt; to see a list of orphaned packages:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo deborphan
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;libxapian30
libpipeline1
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pass it's output to &lt;code&gt;apt&lt;/code&gt; to remove them:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt --autoremove purge &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;deborphan&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will want to repeatedly run this command until &lt;code&gt;deborphan&lt;/code&gt; no longer returns any orphaned packages.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; [[ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;deborphan &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; wc -l&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;!=&lt;/span&gt; 0 ]] &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
    sudo apt --autoremove purge &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;deborphan&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Lynis - Linux Security Auditing&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;From &lt;a href=&quot;https://cisofy.com/lynis/&quot; rel=&quot;nofollow&quot;&gt;https://cisofy.com/lynis/&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lynis is a battle-tested security tool for systems running Linux, macOS, or Unix-based operating system. It performs an extensive health scan of your systems to support system hardening and compliance testing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Lynis installed&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;lynis&lt;/code&gt;. &lt;a href=&quot;https://cisofy.com/lynis/#installation&quot; rel=&quot;nofollow&quot;&gt;https://cisofy.com/lynis/#installation&lt;/a&gt; has detailed instructions on how to install it for your distribution.&lt;/p&gt;
&lt;p&gt;On Debian based systems, using CISOFY's community software repository:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo wget -O - https://packages.cisofy.com/keys/cisofy-software-public.key &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo apt-key add -
sudo apt install apt-transport-https
sudo &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;deb https://packages.cisofy.com/community/lynis/deb/ stable main&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/cisofy-lynis.list
sudo apt update
sudo apt install lynis
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update it:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo lynis update info
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run a security audit:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo lynis audit system
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will scan your server, report its audit findings, and at the end it will give you suggestions. Spend some time going through the output and address gaps as necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Miscellaneous&lt;/h2&gt;
&lt;h3&gt;Contacting Me&lt;/h3&gt;
&lt;p&gt;For any questions, comments, concerns, feedback, or issues, submit a &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/issues/new&quot;&gt;new issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Additional References&lt;/h3&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Acknowledgments&lt;/h3&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Disclaimer / Warranty&lt;/h3&gt;
&lt;p&gt;This guide comes with ABSOLUTELY NO WARRANTY. Use with caution. I take no responsibility for anything, related to or not related to this guide.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 16 Feb 2019 06:47:25 +0000</pubDate>
<dc:creator>known</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/83817?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>imthenachoman/How-To-Secure-A-Linux-Server</og:title>
<og:url>https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</og:url>
<og:description>An evolving how-to guide for securing a Linux server. - imthenachoman/How-To-Secure-A-Linux-Server</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</dc:identifier>
</item>
<item>
<title>First contact made with melted nuclear fuel at Fukushima plant</title>
<link>http://www.asahi.com/ajw/articles/AJ201902140041.html</link>
<guid isPermaLink="true" >http://www.asahi.com/ajw/articles/AJ201902140041.html</guid>
<description>&lt;p&gt;A probe touched melted nuclear fuel debris in a destroyed reactor at the Fukushima No. 1 nuclear plant, a long-awaited milestone in the battle toward decommissioning, Tokyo Electric Power Co. said Feb. 13.&lt;/p&gt;
&lt;p&gt;The rod-like probe, fitted with 3-centimeter-long claws, lifted pieces of the nuclear fuel debris during the eight-hour operation at the bottom of the No. 2 reactor at the plant, the utility said.&lt;/p&gt;
&lt;p&gt;Data obtained through the investigation, such as the hardness, temperature and radioactivity of the debris, will be used to develop equipment and containers for the eventual removal of the melted fuel. The probe, which was recovered after the investigation, also took pictures of the inside of the containment vessel.&lt;/p&gt;
&lt;p&gt;No debris was taken outside the reactor, according to TEPCO.&lt;/p&gt;
&lt;p&gt;The retrieval process will start in earnest at one of the reactors in 2021, according to the plan drawn up jointly by the central government and TEPCO.&lt;/p&gt;
&lt;p&gt;It was the first physical contact with melted fuel at the plant since the Great East Japan Earthquake and tsunami on March 11, 2011, caused the meltdowns of three reactors there.&lt;/p&gt;
&lt;p&gt;It took TEPCO years just to locate the melted fuel debris because of the high radiation levels in the reactor buildings.&lt;/p&gt;
&lt;p&gt;The utility said workers manually inserted the probe through a crack created early in the disaster on the side of the No. 2 reactor’s containment vessel.&lt;/p&gt;
&lt;p&gt;The probe, which resembles a prize-grabbing crane machine at a game arcade, was also equipped with a dosimeter and a camera. It can extend 15 meters and can lift pieces up to 8 centimeters in diameter and weighing 2 kilograms.&lt;/p&gt;
&lt;p&gt;Workers remotely operated the probe from the operating room in a building close to the No. 2 reactor building, and lowered it to the bottom of the reactor’s containment vessel.&lt;/p&gt;
&lt;p&gt;The probe lifted pebble-like nuclear fuel debris and structural parts up to 8 cm in diameter at five spots in the 2,500-square-cm area that was investigated. It failed to pick up debris at one spot.&lt;/p&gt;
&lt;p&gt;TEPCO said the probe could not lift clay-like debris likely because it had adhered to the bottom of the containment vessel.&lt;/p&gt;
&lt;p&gt;The probe also touched nuclear fuel debris lying at several spots on the lattice-shaped scaffold for workers directly below the reactor’s pressure vessel.&lt;/p&gt;
&lt;p&gt;The previous investigation of the No. 2 reactor in 2017 located melted fuel debris on the scaffold. But a robot deployed for a further investigation broke down on its way to the debris.&lt;/p&gt;
&lt;p&gt;In a survey last year, the utility used the rod-like probe to take images of the inside of the reactor.&lt;/p&gt;
&lt;p&gt;TEPCO is expected to remove a small amount of nuclear fuel debris in the second half of fiscal 2019 as part of preparations for full-scale retrieval.&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 19:46:20 +0000</pubDate>
<dc:creator>howard941</dc:creator>
<og:title>1st contact made with melted nuclear fuel at Fukushima plant：The Asahi Shimbun</og:title>
<og:url>http://www.asahi.com/ajw/articles/AJ201902140041.html</og:url>
<og:image>http://www.asahicom.jp/ajw/articles/images/AS20190214003281_comm.jpg</og:image>
<og:type>article</og:type>
<og:description>A probe touched melted nuclear fuel debris in a destroyed reactor at the Fukushima No. 1 nuclear pla</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.asahi.com/ajw/articles/AJ201902140041.html</dc:identifier>
</item>
<item>
<title>Modern Alternatives to PGP</title>
<link>https://blog.gtank.cc/modern-alternatives-to-pgp/</link>
<guid isPermaLink="true" >https://blog.gtank.cc/modern-alternatives-to-pgp/</guid>
<description>&lt;p&gt;Did your last Yubikey just break? Perhaps you forgot an offline backup password. Maybe you're just tired of &lt;a href=&quot;https://gist.github.com/grugq/03167bed45e774551155&quot;&gt;living like a spy&lt;/a&gt; and never using smartphones. Whatever it is, you're here, and you're finally ready to &lt;a href=&quot;https://blog.filippo.io/giving-up-on-long-term-pgp&quot;&gt;give up on PGP&lt;/a&gt;. That's great!&lt;/p&gt;
&lt;img src=&quot;https://blog.gtank.cc/content/images/2019/02/225357.jpg&quot; class=&quot;kg-image&quot;/&gt;We're here to help!
&lt;p&gt;No one was sending you encrypted emails anyway, so that's easy enough. But the most widespread uses of PGP are machine-oriented, for needs like package signing and local file encryption. I recently got into this again on a thread that mentioned &lt;a href=&quot;https://github.com/golang/go/issues/30141&quot;&gt;deprecating Go's OpenPGP package&lt;/a&gt; and people always ask the same question: if not PGP, then what?&lt;/p&gt;
&lt;p&gt;The thing is, there can't be a direct modern alternative to PGP. It's a do-everything design that predates modern cryptographic engineering and hasn't worked out well. The &quot;modern alternative&quot; is to use a much more specific and much less configurable solution to your problem.&lt;/p&gt;
&lt;p&gt;Here are the most common uses of PGP and their modern, focused alternatives.&lt;/p&gt;
&lt;h2 id=&quot;signatures-for-os-or-package-updates&quot;&gt;Signatures for OS or package updates&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Original need:&lt;/strong&gt; &lt;a href=&quot;https://tutorials.ubuntu.com/tutorial/tutorial-how-to-verify-ubuntu#0&quot;&gt;Linux distributions&lt;/a&gt; and many other software update mechanisms use PGP signatures to prevent malicious mirrors or network attackers from altering the contents of their packages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Modern alternative:&lt;/strong&gt; a lightweight signing tool like OpenBSD's &lt;a href=&quot;https://https.www.google.com.tedunangst.com/flak/post/signify&quot;&gt;signify&lt;/a&gt; or &lt;a href=&quot;https://jedisct1.github.io/minisign/&quot;&gt;minisign&lt;/a&gt;, either of which you could quickly build in Go using &lt;a href=&quot;https://godoc.org/golang.org/x/crypto/ed25519&quot;&gt;x/crypto/ed25519&lt;/a&gt;. I wrote one as a &lt;a href=&quot;https://github.com/gtank/sshsign&quot;&gt;party trick&lt;/a&gt; last month – it's less than 200 lines of code and that includes some silly key parsing tricks.&lt;/p&gt;
&lt;p&gt;These tools are extremely simple and robust because they only support one algorithm, lack state or any notion of a keyring, and are usually decoupled from complex messaging formats (which should be a separate concern from your signature cryptography). As a bonus they're mostly compatible with each other because the keys are all &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;EdDSA&lt;/a&gt; keys. Need I even mention that EdDSA is much, much faster than RSA?&lt;/p&gt;
&lt;p&gt;If you're a maintainer of self-serve packaging infrastructure or otherwise have more complex needs, you should take a look at &lt;a href=&quot;https://theupdateframework.github.io/&quot;&gt;TUF&lt;/a&gt;. It's a modern toolkit meant to resist all kinds of update-related attacks that PGP signatures simply don't address. For an idea of how it works in practice, check out the designs for Python's package infrastructure (&lt;a href=&quot;https://www.python.org/dev/peps/pep-0458/&quot;&gt;PEP 458&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0480/&quot;&gt;PEP 480&lt;/a&gt;). The &lt;a href=&quot;https://github.com/theupdateframework/notary&quot;&gt;Notary project&lt;/a&gt; is a productionized and audited implementation.&lt;/p&gt;
&lt;h2 id=&quot;encrypting-data-blobs&quot;&gt;Encrypting data blobs&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Original need:&lt;/strong&gt; You want to store individual pieces of data without making their contents accessible to anyone else on your system. For some reason this isn't built into operating systems yet, so programs like &lt;a href=&quot;https://www.passwordstore.org&quot;&gt;pass&lt;/a&gt; use PGP.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Modern alternative:&lt;/strong&gt; &lt;a href=&quot;https://godoc.org/golang.org/x/crypto/nacl/box&quot;&gt;nacl/box&lt;/a&gt; and &lt;a href=&quot;https://godoc.org/golang.org/x/crypto/nacl/secretbox&quot;&gt;nacl/secretbox&lt;/a&gt;. These are general-purpose replacements for encrypting any kind of data. They support public-key and secret-key encryption, respectively, and both use secure modern modes and ciphers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt; made a very solid attempt to specify nacl in a storable message format with &lt;a href=&quot;https://saltpack.org&quot;&gt;saltpack&lt;/a&gt;, which has a good Go implementation using the above x/crypto package. It works as a nearly drop-in replacement anywhere you were using ASCII-armored PGP data.&lt;/p&gt;
&lt;h2 id=&quot;sending-files-securely&quot;&gt;Sending files securely&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Original need:&lt;/strong&gt; You have files that you want to send to another person, but you don't want the data to be visible in transit or stored in the cloud. For this, folks often attach an encrypted ZIP file to an email.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Modern alternative:&lt;/strong&gt; &lt;a href=&quot;https://magic-wormhole.readthedocs.io/en/latest/welcome.html&quot;&gt;magic-wormhole&lt;/a&gt;. If you need to send files to another person securely, use this. It's based on a modern cryptographic technique called &lt;a href=&quot;https://blog.cryptographyengineering.com/2018/10/19/lets-talk-about-pake/&quot;&gt;PAKE&lt;/a&gt;, which basically means it keeps your data safe in transit while giving an attacker no chance to crack the password. It generates those passwords for you, and they're short, one-time-use combinations of three English words – all your recipient needs to do is enter the words. There's nothing to remember long-term and no account information to lose in a data breach. Wormhole also works through firewalls and optionally supports Tor.&lt;/p&gt;
&lt;p&gt;We live in the future. There are better options than emailing encrypted files around.&lt;/p&gt;
&lt;h2 id=&quot;something-else&quot;&gt;Something else?&lt;/h2&gt;
&lt;p&gt;What's your lingering use case for PGP? Hit me up &lt;a href=&quot;https://twitter.com/gtank__&quot;&gt;on Twitter&lt;/a&gt; or send me &lt;a href=&quot;mailto:blog@gtank.cc?subject=I'm%20still%20using%20PGP&quot;&gt;an email&lt;/a&gt; and let's talk about getting you off PGP for good.&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 18:22:23 +0000</pubDate>
<dc:creator>tptacek</dc:creator>
<og:type>article</og:type>
<og:title>Modern Alternatives to PGP</og:title>
<og:description>Did your last Yubikey just break? Perhaps you forgot an offline backup password. Maybe you're just tired of living like a spy [https://gist.github.com/grugq/03167bed45e774551155] and never using smartphones. Whatever it is, you're here, and you're finally ready to give up on PGP [https://blog.filippo.io/giving-up-on-long-term-pgp]. That's great! We're here to help!No one was sending you encrypted emails anyway, so that's easy enough. But the most widespread uses of PGP are machine-oriented, fo</og:description>
<og:url>https://blog.gtank.cc/modern-alternatives-to-pgp/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.gtank.cc/modern-alternatives-to-pgp/</dc:identifier>
</item>
<item>
<title>Visa, Mastercard mull increasing fees for processing transactions: WSJ</title>
<link>https://www.reuters.com/article/us-paymentprocessors-fees/visa-mastercard-mull-increasing-fees-for-processing-transactions-wsj-idUSKCN1Q41ME</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-paymentprocessors-fees/visa-mastercard-mull-increasing-fees-for-processing-transactions-wsj-idUSKCN1Q41ME</guid>
<description>&lt;p&gt;(Reuters) - Visa Inc and Mastercard Inc, the two biggest U.S. card networks, are preparing to raise certain fees levied on U.S. merchants for processing transactions from this April, the Wall Street Journal reported on Friday, citing people familiar with the matter.&lt;/p&gt;
&lt;div class=&quot;PrimaryAsset_container&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;Image_container&quot; tabindex=&quot;-1&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;LazyImage_container LazyImage_dark&quot;&gt;&lt;img src=&quot;https://s3.reutersmedia.net/resources/r/?m=02&amp;amp;d=20190215&amp;amp;t=2&amp;amp;i=1356967969&amp;amp;r=LYNXNPEF1E10N&amp;amp;w=20&quot; aria-label=&quot;FILE PHOTO: A Mastercard logo is seen on a credit card in this picture illustration August 30, 2017. REUTERS/Thomas White/File Photo&quot;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;FILE PHOTO: A Mastercard logo is seen on a credit card in this picture illustration August 30, 2017. REUTERS/Thomas White/File Photo&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Some of the changes relate to so-called interchange fees, the report said. Interchange fees are what merchants pay to banks when consumers use a credit or a debit card to make a purchase from their store.&lt;/p&gt;
&lt;p&gt;Fees that Mastercard and Visa charge financial institutions, such as banks, for processing card payments on behalf of merchants, are also set to go up, the report said.&lt;/p&gt;
&lt;p&gt;A Visa spokesperson confirmed that the fee hikes would go into effect in April, 2019, but only for merchant banks, and not merchants.&lt;/p&gt;
&lt;p&gt;Merchant banks are financial institutions that maintain accounts for sellers such as Amazon and Costco. JPMorgan, Citigroup and Bank of America are some of the top merchant banks in the country.&lt;/p&gt;
&lt;p&gt;However, it is up to merchant banks if they want to pass on the fee hike to sellers, or absorb it themselves. Similarly, it is sellers’ discretion to pass on the hike to consumers or not.&lt;/p&gt;
&lt;p&gt;Up to 2.5 percent of prices for goods and services go to cover card fees, the WSJ said.&lt;/p&gt;
&lt;p&gt;Card companies have said in the past that their credit and debit cards usually result in more sales for merchants, especially in countries like the United States. They also say that expenses for ramping up anti-fraud/theft security measures, to make payment processing safer, need to be covered.&lt;/p&gt;
&lt;p&gt;Mastercard did not respond to Reuters’ request for comment on the story.&lt;/p&gt;
&lt;p&gt;Recently, the two companies along with several U.S. banks, had to pay over $6 billion to settle a lawsuit brought by merchants who accused the credit card companies of violating federal antitrust laws by forcing merchants to pay swipe fees and prohibiting them from directing consumers toward other methods of payment.&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Reporting by Aparajita Saxena and Bharath Manjesh; Editing by Shinjini Ganguli&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 15 Feb 2019 16:21:34 +0000</pubDate>
<dc:creator>protomyth</dc:creator>
<og:title>Visa, Mastercard mull increasing fees for processing transactions: WSJ</og:title>
<og:url>https://www.reuters.com/article/us-paymentprocessors-fees-idUSKCN1Q41ME</og:url>
<og:type>article</og:type>
<og:description>Visa Inc and Mastercard Inc, the two biggest U.S. card networks, are preparing t...</og:description>
<og:image>https://s3.reutersmedia.net/resources/r/?m=02&amp;d=20190215&amp;t=2&amp;i=1356967969&amp;w=1200&amp;r=LYNXNPEF1E10N</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-paymentprocessors-fees/visa-mastercard-mull-increasing-fees-for-processing-transactions-wsj-idUSKCN1Q41ME</dc:identifier>
</item>
<item>
<title>Don’t Get Clever with Login Forms</title>
<link>http://bradfrost.com/blog/post/dont-get-clever-with-login-forms/</link>
<guid isPermaLink="true" >http://bradfrost.com/blog/post/dont-get-clever-with-login-forms/</guid>
<description>&lt;p&gt;As time goes on I find myself increasingly annoyed with login forms. As password managers like &lt;a href=&quot;https://1password.com/&quot;&gt;1Password&lt;/a&gt; (which is what I use) and Chrome’s password manager (which I also sorta use) become more popular, it’s important for websites to be aware of how users go about logging into their sites.&lt;/p&gt;
&lt;p&gt;Let’s walk through some login patterns and why I think they’re not ideal. And then let’s look at some better ways of tackling login. &lt;strong&gt;TL;DR; create login forms that are simple, linkable, predictable, and play nicely with password managers.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Don’ts&lt;/h2&gt;
&lt;p&gt;Here are some patterns that I encounter on websites that I think should be avoided.&lt;/p&gt;
&lt;h3&gt;Don’t put logins in modals&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12543&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-13-22.41.20-1-700x364.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;364&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-13-22.41.20-1-700x364.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-13-22.41.20-1-768x399.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-13-22.41.20-1-1024x532.png 1024w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Hertz and a whole bunch of other sites keep their login form in a modal window or a drawer. The problems with this pattern are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Extra steps for the user&lt;/strong&gt; – “1. Click on the menu button, 2. select login, 3. fill out form” rather than visiting a login page (via search, customer support chat, bookmark, password manager, directly, or via the primary navigation) and filling out the form.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Not being able to link directly to the login&lt;/strong&gt;, which can be a pain for customer support people (since they have to give a bunch of instructions described above rather than simply providing a link). It also prevents password managers from doing their thing since the modal is hidden. 1Password has an awesome “open and fill” feature allowing you to visit a website and populate the login form with your credentials. This feature doesn’t work with modal login forms.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Don’t hide fields&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;alignnone wp-image-12544 size-medium&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/ooijScreenshot-2019-02-13-14.54.08-700x606.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;606&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/ooijScreenshot-2019-02-13-14.54.08-700x606.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/ooijScreenshot-2019-02-13-14.54.08-768x665.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/ooijScreenshot-2019-02-13-14.54.08-1024x887.png 1024w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Delta’s site hides a required “Last Name” field, which I’d assume is to clean up the UI by introducing a bit of progressive disclosure.   The problem is that field is required, and because it’s hidden &lt;strong&gt;password managers can’t pre-fill the field&lt;/strong&gt;. Users have to exit out of another field in order to expose this surprise extra field to fill. It’s just one additional, unnecessary hoop they have to jump through in order to login.&lt;/p&gt;
&lt;p&gt;MacOS login screen also buries the password field to “clean up” the UI (and I’d also assume to encourage users to login via TouchID), but that cleanliness leads to (in my view) a more confusing experience.&lt;/p&gt;
&lt;h3&gt;Don’t get funky with magic links&lt;/h3&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12546&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.00.01-700x444.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;444&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.00.01-700x444.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.00.01-768x487.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.00.01-1024x649.png 1024w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I think this may have started with Slack, but I’m seeing other digital products like &lt;a href=&quot;https://www.notion.so&quot;&gt;Notion&lt;/a&gt; (which I love by the way) send users a temporary password to their email in order to login. I can appreciate the cleverness of this pattern as it avoids the rigamarole of users having to remember yet another password and building out all the “Forgot password” flow stuff. But.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;This pattern is incredibly tedious&lt;/strong&gt;. 1. Enter email into login form. 2. Open new tab or switch programs. 3. Open your inbox. 4. Find message from service (if you don’t get distracted by other emails first). 5. Open message. 6. Copy gobbledygook password. 7. Go back to website. 8. Paste in gobbledygook password. 9. Submit login form. Holy shit.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;This doesn’t work at all with password managers,&lt;/strong&gt; which is incredibly annoying as I want to lean on password managers to, uh, manage my passwords. With the advent of design systems we talk a lot about consistency. But it’s not just about creating consistency within your own ecosystem, it’s about being consistent with the rest of the internet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It forces users to learn a new convention&lt;/strong&gt; – Users learn patterns (login, checkout, navigation, etc) by experiencing them again and again in many applications over many years. While I’m not saying we shouldn’t ever innovate, it’s important to recognize users come to your product or service with a lifetime of hard-earned knowledge about how to use the internet. When we try to get too clever we force users to learn new conventions which slows them down (at least initially).&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Don’t split login across multiple pages&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12551&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/shopify-1-1-700x700.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;700&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/shopify-1-1-700x700.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/shopify-1-1-768x768.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/shopify-1-1.png 960w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12552&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/shopify-2-700x700.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;700&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/shopify-2-700x700.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/shopify-2-768x768.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/shopify-2.png 960w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12553&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/shopify-3-700x689.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;689&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/shopify-3-700x689.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/shopify-3-768x756.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/shopify-3.png 996w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Shopify (another service I love) annoyingly splits its login across three separate screens. Again, I can appreciate the intention here: they’re not trying to overload a user with too much info at once. And while I agree with this pattern for certain contexts (like in an e-commerce flow you typically see billing information, shipping method and address, credit card info, etc chunked out into discrete steps), this is overkill for what’s essentially a three-field form.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Adds unnecessary steps to login&lt;/strong&gt; – Again this is a three-field form, but now users have to slog through three screens to log in. This no doubt slows users down.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Doesn’t work with password managers&lt;/strong&gt; – While they sort of work, password managers are only able to fill in the one field on the page.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Do&lt;/h2&gt;
&lt;p&gt;So what should web designers do instead? I think having a boring old predictable login form is just fine. Here’s &lt;a href=&quot;https://www.getharvest.com/&quot;&gt;Harvest&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12560&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.43.43-700x767.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;767&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.43.43-700x767.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.43.43-768x842.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.43.43-935x1024.png 935w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.43.43.png 982w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And here’s WordPress:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-12561&quot; src=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.44.04-700x901.png&quot; alt=&quot;&quot; width=&quot;700&quot; height=&quot;901&quot; srcset=&quot;http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.44.04-700x901.png 700w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.44.04-768x988.png 768w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.44.04-796x1024.png 796w, http://bradfrost.com/wp-content/uploads/2019/02/Screenshot-2019-02-14-09.44.04.png 802w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Simple, concise, predictable. Works with password managers. Good stuff. Here’s some considerations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Have a dedicated page for login&lt;/strong&gt; – Customer support people can direct people to a URL (domain.com/login) rather than having to spell out a bunch of instructions on where to find the login form on the page. Password managers can store that login page and with a click of a button open that page and pre-fill the form.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expose all required fields&lt;/strong&gt; – If you need to enter your last name in order to log in, expose that field!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep all fields on one page&lt;/strong&gt; – login should be a swift process, not an unnecessary slog through multiple pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don’t get fancy&lt;/strong&gt; – There may be something to the whole magic link thing and other inventive login patterns, but I think it’s important to recognize how users are used to logging in across the internet. Lean into that boring, predictable settled science.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This list isn’t exhaustive and I haven’t touched on things like social login or two-factor authentication, so I’d love to hear more from you about other patterns to be avoided or gotchas to look out for.&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 15:02:30 +0000</pubDate>
<dc:creator>octosphere</dc:creator>
<og:title>Don't Get Clever with Login Forms</og:title>
<og:url>http://bradfrost.com/blog/post/dont-get-clever-with-login-forms/</og:url>
<og:type>article</og:type>
<og:description>As time goes on I find myself increasingly annoyed with login forms. As password managers like 1Password (which is what I use) and Chrome's password manager (which I also sorta use) become more popular, it's important for websites to be aware of how users go about logging into their sites. Let's</og:description>
<og:image>http://bradfrost.com/wp-content/uploads/2019/02/ooijScreenshot-2019-02-13-14.54.08.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://bradfrost.com/blog/post/dont-get-clever-with-login-forms/</dc:identifier>
</item>
<item>
<title>Altavista: The rise and fall of the biggest pre-Google search engine</title>
<link>https://digital.com/about/altavista/</link>
<guid isPermaLink="true" >https://digital.com/about/altavista/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://digital.com/about/altavista/&quot;&gt;https://digital.com/about/altavista/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19170950&quot;&gt;https://news.ycombinator.com/item?id=19170950&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 511&lt;/p&gt;
&lt;p&gt;# Comments: 293&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 14:01:57 +0000</pubDate>
<dc:creator>cromat3</dc:creator>
<og:title>Don't Get Clever with Login Forms</og:title>
<og:url>http://bradfrost.com/blog/post/dont-get-clever-with-login-forms/</og:url>
<og:type>article</og:type>
<og:description>As time goes on I find myself increasingly annoyed with login forms. As password managers like 1Password (which is what I use) and Chrome's password manager (which I also sorta use) become more popular, it's important for websites to be aware of how users go about logging into their sites. Let's</og:description>
<og:image>http://bradfrost.com/wp-content/uploads/2019/02/ooijScreenshot-2019-02-13-14.54.08.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://bradfrost.com/blog/post/dont-get-clever-with-login-forms/</dc:identifier>
</item>
<item>
<title>My Chromecast Ultra would not start until I began answering 8.8.8.8</title>
<link>https://mailarchive.ietf.org/arch/msg/dnsop/WCVv57IizUSjNb2RQNP84fBclI0</link>
<guid isPermaLink="true" >https://mailarchive.ietf.org/arch/msg/dnsop/WCVv57IizUSjNb2RQNP84fBclI0</guid>
<description>&lt;h3&gt;[DNSOP] my chromecast ultra would not start until i began answering 8.8.8.8&lt;/h3&gt;


&lt;div class=&quot;msg-payload&quot; readability=&quot;26&quot;&gt;
&lt;pre class=&quot;wordwrap&quot;&gt;
google, this is bogus as hell. my dhcp server gives you dns servers to 
use. please don't make me route and answer 8.8.8.8 just to watch youtube.

&amp;gt; [71] 2019-02-13 16:39:40.548137 [#68 vtnet0 4095] \
&amp;gt;         [24.104.150.186].56915 [8.8.8.8].53  \
&amp;gt;         dns QUERY,NOERROR,7357,rd \
&amp;gt;         1 lh3.googleusercontent.com,IN,A 0 0 0
&amp;gt; [71] 2019-02-13 16:39:40.548210 [#69 vtnet0 4095] \
&amp;gt;         [24.104.150.186].56915 [8.8.8.8].53  \
&amp;gt;         dns QUERY,NOERROR,49247,rd \
&amp;gt;         1 lh3.googleusercontent.com,IN,AAAA 0 0 0

(no, this device i've paid for, will NOT be allowed to send you any 
information, other than what i personally approve, which will never 
include DNS traffic. if you don't like that deal, buy it back from me 
and i'll find some other video appliance that doesn't twist my arm.)

-- 
P Vixie

&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 15 Feb 2019 13:23:06 +0000</pubDate>
<dc:creator>baptou12</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://mailarchive.ietf.org/arch/msg/dnsop/WCVv57IizUSjNb2RQNP84fBclI0</dc:identifier>
</item>
<item>
<title>The Lonely Life of a Yacht Influencer</title>
<link>https://melmagazine.com/en-us/story/the-lonely-life-of-a-yacht-influencer</link>
<guid isPermaLink="true" >https://melmagazine.com/en-us/story/the-lonely-life-of-a-yacht-influencer</guid>
<description>&lt;p&gt;&lt;span&gt;While chasing a 2017&lt;/span&gt; &lt;a href=&quot;https://www.instagram.com/p/BszVs4ABzVD/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;story about medical tourism and Slovakian stem cells&lt;/span&gt;&lt;/a&gt; &lt;span&gt;that had already taken me to hospital facilities in&lt;/span&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Bratislava&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;Bratislava&lt;/span&gt;&lt;/a&gt; &lt;span&gt;and Vienna, I wound up partying on a 283-foot yacht floating in the French Riviera. As I watched intoxicated rich people having expensive fun in their cheap white shower slippers — first rule of yacht club is there are no shoes on the yacht, which are instead piled in a big heap at the yacht’s entrance — I began to wonder, “How could anyone spend their whole life doing this?”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then, almost on cue, seated at a table on the&lt;/span&gt; &lt;a href=&quot;https://www.instagram.com/p/BUU1Kj0D2UZ/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;rear deck with Lindsay Lohan&lt;/span&gt;&lt;/a&gt; &lt;span&gt;and her entourage, I spotted a dude who had, in fact, spent his entire life doing this.&lt;/span&gt; &lt;a href=&quot;https://www.instagram.com/theyachtguy/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;Alex Jimenez&lt;/span&gt;&lt;/a&gt; &lt;span&gt;was a professional yacht influencer, and he was hard at work.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BpT3Yu4Bo2Z/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;I didn’t know that at the time, of course. I just saw an open chair next to&lt;/span&gt; &lt;a href=&quot;https://www.instagram.com/p/Bp2L2ZhBt8g/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;a lanky guy&lt;/span&gt;&lt;/a&gt; &lt;span&gt;wearing a loose polo shirt and a flat-brimmed Yankees hat, and sat down in it. As everyone else gradually made their way toward the raucous festivities taking place on the foredeck, Jimenez struck up a conversation with me. He remarked that I seemed both thoughtful and decidedly out of place.&lt;/span&gt;&lt;/p&gt;
&lt;img class=&quot;wp-image-33809 size-full&quot; src=&quot;https://melmagazine.com/wp-content/uploads/2019/02/image1-1.jpg&quot; alt=&quot;&quot; width=&quot;960&quot; height=&quot;720&quot; srcset=&quot;https://melmagazine.com/wp-content/uploads/2019/02/image1-1.jpg 960w, https://melmagazine.com/wp-content/uploads/2019/02/image1-1-300x225.jpg 300w, https://melmagazine.com/wp-content/uploads/2019/02/image1-1-768x576.jpg 768w, https://melmagazine.com/wp-content/uploads/2019/02/image1-1-640x480.jpg 640w&quot; sizes=&quot;(max-width: 960px) 100vw, 960px&quot;/&gt;Aboard the Yacht Chakra, 2017 (author in light blue)
&lt;p&gt;&lt;span&gt;“I’m working,” I said. “I never stop working. All I can think about is work.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“Hey, me too,” he replied. “I’m working right now.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“I used to feel all messed up about my career,” he continued. “I was a short-haul truck driver in the Bronx, and I guess I caught the yacht bug. I’d go to a bookstore, grab a table and read everything I could about yachts. Then, on the very first weekend after I downloaded the Instagram app, right after Instagram became a thing you could download, I went to a luxury boat show and took some of pictures of the yachts. I added some hashtags, and pretty soon I had 800,000 followers. But the quantity doesn’t really matter to the folks who pay me, it’s the quality. Influential people follow me,&lt;/span&gt; &lt;a href=&quot;https://yachtharbour.com/news/how-russian-oligarchs-shaped-the-yachting-industry-825&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;Gulf state princes and Russian moguls&lt;/span&gt;&lt;/a&gt; &lt;span&gt;who might actually be able to buy these yachts.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Wait, what?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When Jimenez said that he was working, I assumed he was “working” the same way Lindsay Lohan was — that is, “working the crowd.” He looked important enough, wearing an expensive, custom-made watch with all of the wheels, ratchets and levers exposed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“Nah, I’m nobody you’d know,” he assured me. “I’m here to take some pictures and post some video stories of the yacht, which a brokerage group is trying to sell. The watch is a loaner from a friend. I wear it, take a picture of my wrist and tag his company on my Instagram account. It’s just a small part of the hustle.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The yacht hustle, I soon learned, was the all-consuming passion of Jimenez’s life. He went from a guy who took Instagram pictures, always head-on yacht shots run through one of the generic filters, to a guy that yacht brokers paid to stay on their yachts in order to mention that said yachts were docked in a port and available for sale or charter. He was helicoptered from yacht to yacht, and slept in the smallest guest cabins.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BngtXxPBT2N/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;“The&lt;/span&gt; &lt;a href=&quot;https://www.yachtcharterfleet.com/yacht-reviews/chakra-61.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;yacht we’re on right now&lt;/span&gt;&lt;/a&gt; &lt;span&gt;used to be a cruise ship that they retrofitted,” he told me. “You can sleep a dozen or more people on here, and the decks can fit a bunch more, but it’s all kind of crowded.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I mentioned that the bathrooms were both tiny, and with a hundred or so people aboard the yacht, already rather foul.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“Yeah, that’s just how it goes,” he said. “It’s an endless party, especially on the yachts that are 200 feet and up, the so-called ‘superyachts.’ Conditions are cramped, everyone’s out of their mind on some substance, and the bathrooms are being used for who knows what. There’s a kitchen and a big dining area, but good luck getting food out of there when you really want it. You’re not on here to eat a sit-down meal, even though they usually have nice dining rooms. The bars on each level are the focal points of these things.”&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BpPZG0IBGgW/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;We took a walk around the yacht while people boozed and bumped into each other, their words slurring together and distorted further by the deep bass thump of the music playing from the upper and lower decks. Jimenez’s own cabin was indeed tiny, very nearly a capsule hotel. He showed me the heavy-duty metal suitcase where he secured his borrowed valuables, a collection of watches on loan from various business acquaintances.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“The watches are heavy on the wrist,” he said. “They’re great to look at, but their bands often cut into the wrist. And yeah, the room is small, but with my nocturnal schedule, it’s not like I sleep very much. I take maybe one picture a day and post a few Instagram stories, but I’m expected to be up on the deck, mingling with partygoers and selling the mystique of the yacht.”&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BkWSJKLDlAy/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;Jimenez leveled with me — once upon a time, he had been excited by the idea of partying on a yacht. After all, who wouldn’t be? But now he was basically just a working stiff. He too had a home and a family, with kids he didn’t see as much as he could because his “feet were never on dry land.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;He had considerable yacht expertise and knew all the major players in the yacht world, buyers and sellers and their glorious boats. He had been on the 100-foot yachts and the 500-foot yachts, and seen yacht-related activities he assured me exceeded any fantasies, dark or light, that I could ever imagine. Yet all that meant he was now just another yacht worker, someone who punched the clock — or the pearl-faced wristwatch, in his case — the same as the kitchen staff, the bartenders and the yacht’s crew.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BUU1Kj0D2UZ/?utm_source=ig_embed&amp;amp;utm_medium=loading&quot; data-instgrm-version=&quot;12&quot;&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;“You’ve seen the crew,” he told me. “It’s about 30 people on this yacht, and they’re Greek and serious as a heart attack. Nine times out of ten, the crews on these yachts are either Greek or Russian. The rich people that staff these yachts talk at length about whether it’s better to go with one or the other. They can make pretty decent money, and on a 500-footer with a 60 or 70 person crew, you’re probably talking $5,000 or $6,000 a month plus room and board.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After years of yacht influence, the true appeal of high-class maritime life had become clear to Jimenez. “You have to be really rich to own one of these,” he said. “I mean, you have to be so rich to own a yacht that’s 300 feet or more. You can’t be rich like LeBron James, because that’s nothing. You can’t be rich like Tiger Woods or Johnny Depp. They’re not rich in super-yacht terms. We’re talking 10 percent or more of the purchase cost of the yacht paid out in upkeep every month. The brokerages and buying groups can swing it because there’s a bunch of investors, and because they charter the yachts to offset costs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“But for the guy who owns the&lt;/span&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_(yacht)&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;em&gt;&lt;span&gt;Eclipse&lt;/span&gt;&lt;/em&gt;&lt;/a&gt; &lt;span&gt;[&lt;/span&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Roman_Abramovich&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;Roman Abramovich&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, a Russian oligarch], that’s not the point. He’s not chartering that thing out. It has a submarine and a missile detection system. See, the power of owning a magnificent yacht like that is in how you’re telling the world that you’re beyond buying and selling. You have more money than there is money to have. You’ve transcended. There are no frontiers left for you on dry land. I mean,&lt;/span&gt; &lt;a href=&quot;https://gamepedia.cursecdn.com/dota2_gamepedia/c/ca/Kunk_respawn_08.mp3&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;true peace is only at sea&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.”&lt;/span&gt;&lt;/p&gt;
&lt;iframe width=&quot;568&quot; height=&quot;320&quot; src=&quot;https://www.youtube.com/embed/bK8EO07naT8?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;&lt;span&gt;Jimenez, a poor Puerto Rican kid, grew up hustling. He worked 50- and 60-hour shifts at whatever job he had; he considered overtime to be a necessary part of his base pay and counts himself among those annoying grinders who dismiss 40 hours of work per week as a “&lt;/span&gt;&lt;a href=&quot;https://pics.me.me/you-have-a-40-hour-work-week-remember-my-first-4032463.png&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;part-time job&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.” He now made a “comfortable middle-class living,” but sitting there with me in the cabin, fretted that it could go away at any time. “This is me working a little network I’ve built using someone else’s social media platform,” he said. “If Instagram changes its algorithm slightly, there goes a bit of my business. If Instagram disconnects some of the tools I use to build and monitor my account, there goes a bit of my business. And if Instagram goes away and is replaced by something newer and better, I need to get there first, just like I did with this account. If I don’t, I’m done. I’m totally dependent on a platform that’s completely out-of-control.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For Jimenez, Instagram is essentially a money tree that must be fertilized and harvested as much as possible before its popularity wanes. As another side hustle, he “plants” subsidiary yacht accounts, accounts with soundalike names and images, and uses cross-promotion from his primary account to grow them until they’re large enough to sell to yacht brokers or manufacturers. “I build them up and then sell them off, and my client gets a ready-made account that has real followers and legitimate engagement,” he told me. “I started focusing on that when I realized that this wasn’t just a ‘life of the party’ job, that pushing social media is something you do all day and all night long.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“I fire off these posts while I’m sitting around on the yacht, when things are very slow. I’m not in this for the fun of it, I’m not posting silly stuff. I basically do sponsored advertisements that follow a set format. I watch Instagram like a hawk to see if anything is hampering the growth of these other accounts, and to see if I’m continuing to get the activity I need on my primary posts.”&lt;/span&gt;&lt;/p&gt;
&lt;iframe width=&quot;568&quot; height=&quot;320&quot; src=&quot;https://www.youtube.com/embed/yfE02NGAxcs?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;&lt;span&gt;After surveying his cabin, Jimenez and I walked to the side deck and slouched over the railing. The sun had set, and we studied&lt;/span&gt; &lt;a href=&quot;https://media.gettyimages.com/photos/cannes-at-night-picture-id184611729?b=1&amp;amp;k=6&amp;amp;m=184611729&amp;amp;s=612x612&amp;amp;w=0&amp;amp;h=hP1UL8lWOvRcl2-DtYR4zywt6SizGZtv5I-Sw_mrKQ4=&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;&lt;span&gt;the well-lit coastline of Cannes&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. “If you could have anything at all, anything in the world, what would you want?” he asked me.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“I guess I’d want to keep writing and keep getting paid for it,” I responded.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“Well, I want to own a yacht,” Jimenez said. “I used to just want to be on yachts, because I thought the parties were cool and the technology was awesome, but now that I’ve spent a good portion of my life partying on them, I actually want to own a yacht. Owning a yacht, really owning it in full and being able to pay for its upkeep, means that you’ve somehow freed yourself from work and want. If you own the yacht that way, you’re a free man. The hustle and grind are things of the past.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I asked him if he had plans to leave the yacht while we were in the French Riviera.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“No, I’m going to hang back here, because I’m scheduled to be on another one of these yachts tomorrow,” he said. “I know pretty much every boat in this harbor — owners, captains, specifications. People say, ‘Alex, you’re on yachts all day — that’s the life.’ Well, for me, it’s not&lt;/span&gt; &lt;em&gt;&lt;span&gt;the&lt;/span&gt;&lt;/em&gt; &lt;span&gt;life, it’s&lt;/span&gt; &lt;em&gt;&lt;span&gt;my&lt;/span&gt;&lt;/em&gt; &lt;span&gt;life. It’s not some permanent summer or year-long vacation. It’s my living. I help rich people and rich companies advertise their yachts. I’ve got all this knowledge that I gained when I loved yachts so much that I’d spend all weekend studying them for free, and now, I sell my knowledge to people. I sell that know-how all day long, and everything I know is worth something. I’m always on the clock, always tracking my time on these expensive wristwatches with the big clock faces. And so, I’m sure to never set foot on dry land when I’m working.”&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;post-authors&quot;&gt;
&lt;hr/&gt;&lt;div class=&quot;contributor-item -wide&quot;&gt;
&lt;div class=&quot;contributor-image&quot;&gt;&lt;a href=&quot;https://melmagazine.com/en-us/story/author/oliver-lee-bateman&quot;&gt;&lt;img src=&quot;https://melmagazine.com/wp-content/uploads/2018/08/IMG_8289-80x80.jpg&quot; width=&quot;80&quot; height=&quot;80&quot; alt=&quot;IMG_8289&quot; title=&quot;IMG_8289&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;contributor-info&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;https://melmagazine.com/en-us/story/author/oliver-lee-bateman&quot;&gt;Oliver Lee Bateman&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;contributor-bio&quot;&gt;Oliver Bateman is a contributing writer to MEL Magazine. He writes about the extreme sides of fitness, the weirder sides of MMA and pro wrestling, and the unorthodox lifestyles of professional athletes. His writing on these topics has appeared in publications such as the Paris Review, the Atlantic, and the New Republic. Ever since he was a little kid, he's been really good at exercising.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 15 Feb 2019 10:49:54 +0000</pubDate>
<dc:creator>microtherion</dc:creator>
<og:type>article</og:type>
<og:title>The Lonely Life of a Yacht Influencer - MEL Magazine</og:title>
<og:description>While chasing a 2017 story about medical tourism and Slovakian stem cells that had already taken me to hospital facilities in Bratislava and Vienna, I...</og:description>
<og:url>https://melmagazine.com/en-us/story/the-lonely-life-of-a-yacht-influencer</og:url>
<og:image>https://melmagazine.com/wp-content/uploads/2019/02/yachtguy.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://melmagazine.com/en-us/story/the-lonely-life-of-a-yacht-influencer</dc:identifier>
</item>
<item>
<title>Chrome will Soon Let You Share Links to a Specific Word or Sentence on a Page</title>
<link>https://www.chromestory.com/2019/02/chrome-scroll-to-text/</link>
<guid isPermaLink="true" >https://www.chromestory.com/2019/02/chrome-scroll-to-text/</guid>
<description>&lt;p&gt;Here is a really innovative and interesting Chrome feature that’s getting ready. I cannot explain this new feature in just one sentence, so stay with me.&lt;/p&gt;

&lt;p&gt;When you share a YouTube video, you now have an option to create a link that will start the video at a specific spot. For example, if you want your friend start playing the video at two minutes mark, you can create a link for that specific spot.&lt;/p&gt;
&lt;p&gt;Now, imagine you are sharing a link to a web page. There is one specific sentence or paragraph that you want your friend to read. The page does not have any anchor links.&lt;/p&gt;
&lt;p&gt;What will you do?&lt;/p&gt;
&lt;p&gt;Highlight in a screenshot? Ask him to do a Ctrl + F on the page for a specific word or phrase? Well, what if they are on mobile? It is difficult to even dot he Ctrl + F thing there!&lt;/p&gt;
&lt;h2&gt;Enter Scroll to Text&lt;/h2&gt;
&lt;p&gt;Scroll to Text is a new Chrome feature that will let you create a link targeting a word or phrase on a page.&lt;/p&gt;
&lt;p&gt;Here is the flag description, explaining this feature:&lt;/p&gt;
&lt;p&gt;“Enables scrolling to text specified in URL’s fragment.” The flag is named “Enable Text Fragment Anchor”&lt;/p&gt;
&lt;p&gt;You can see the &lt;a href=&quot;https://chromium-review.googlesource.com/c/chromium/src/+/1470735&quot;&gt;code commit here&lt;/a&gt;. But wait. I have plenty more to show you! Looks like this is a small project available on GitHub and is being ported to Chrome. The &lt;a href=&quot;https://github.com/bokand/ScrollToTextFragment&quot;&gt;GitHub page&lt;/a&gt; is well documented and explains this feature in great detail.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;When referencing a specific section of a web page, for example as part of sharing that content via email or on social media, it is desirable to be able to link directly to the specific section. If a section is not linkable by a named anchor or element with id, it is not currently possible to share a link directly to a specific section. Users may work around this by sharing screenshots of the relevant portion of the document (preventing the recipient of the content from engaging with the actual web page that hosts the content), or by including extra instructions to scroll to a specific part of the document (e.g. “skip to the sixth paragraph”). We would like to enable users to link to the relevant section of a document directly. Linking directly to the relevant section of a document preserves attribution, and allows the user following the URL to engage directly with the original publisher.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I highly recommend reading the whole introduction on GitHub. It is a well-written document.&lt;/p&gt;
&lt;p&gt;This feature is being added as a flag to Chrome. It might take a week or so to show up in the Canary channel. I am hoping to get you a video demo of this feature pretty soon. (&lt;a href=&quot;https://www.youtube.com/user/chromestory&quot;&gt;Subscribe to my channel here&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.chromestory.com/wp-content/uploads/2019/02/chrome-scroll-to-text-1024x986.png&quot; alt=&quot;&quot; class=&quot;wp-image-25798&quot; srcset=&quot;https://www.chromestory.com/wp-content/uploads/2019/02/chrome-scroll-to-text-1024x986.png 1024w, https://www.chromestory.com/wp-content/uploads/2019/02/chrome-scroll-to-text-350x337.png 350w, https://www.chromestory.com/wp-content/uploads/2019/02/chrome-scroll-to-text-768x739.png 768w, https://www.chromestory.com/wp-content/uploads/2019/02/chrome-scroll-to-text.png 1498w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;Here is How This will Work&lt;/h2&gt;
&lt;p&gt;Borrowing from the Github document:&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;We propose encoding a text snippet in the URL fragment, prefixed with the &lt;code&gt;targetText=&lt;/code&gt; string. Since text can contain characters invalid in a URL (e.g. spaces), the text must be percent encoded. For example, &lt;code&gt;#targetText=My%20Heading&lt;/code&gt; would cause the first occurance of “My Heading” on the page to be selected as the indicated part of the document.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.example.com/&quot; class=&quot;&quot;&gt;www.example.com&lt;/a&gt;#targetText=alpha%20beta,psi%20omega Will scroll and highlight a block of text starting with “alpha beta” and ending with “psi omega”&lt;/p&gt;
&lt;h2&gt;Beyond Chrome&lt;/h2&gt;
&lt;p&gt;Here is what I think. Let me know your opinion too, in comments. I would say this is not going to be a Chrome-only feature. It is most likely that this will be added to other browsers like Firefox too.&lt;/p&gt;
&lt;p&gt;Microsoft’s &lt;a href=&quot;https://www.chromestory.com/2015/04/microsofts-edge-browser-will-run-chrome-and-firefox-extensions/&quot;&gt;new version of Edge is going to be based on Chromium&lt;/a&gt;, so this will be available on Edge too.&lt;/p&gt;
&lt;p&gt;What do you think?&lt;/p&gt;
&lt;h2&gt;Latest Video from Chrome Story&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;embed-youtube&quot;&gt;&lt;iframe class=&quot;youtube-player&quot; type=&quot;text/html&quot; width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/GVN-WJw7x5U?version=3&amp;amp;rel=1&amp;amp;fs=1&amp;amp;autohide=2&amp;amp;showsearch=0&amp;amp;showinfo=1&amp;amp;iv_load_policy=1&amp;amp;wmode=transparent&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;
&lt;h3 class=&quot;jp-relatedposts-headline&quot;&gt;&lt;em&gt;Related&lt;/em&gt;&lt;/h3&gt;
&lt;/p&gt;
</description>
<pubDate>Fri, 15 Feb 2019 04:22:11 +0000</pubDate>
<dc:creator>kumaranvpl</dc:creator>
<og:type>article</og:type>
<og:title>Chrome will Soon Let You Share Link to Specific Word or Sentence on a Page - Chrome Story</og:title>
<og:description>Here is a really innovative and interesting Chrome feature that’s getting ready. I cannot explain this new feature in just one sentence, so stay with me. When you share a YouTube video, you now have an option to create a link that will start the video at a specific spot. For example, if you want …</og:description>
<og:url>https://www.chromestory.com/2019/02/chrome-scroll-to-text/</og:url>
<og:image>https://www.chromestory.com/wp-content/uploads/2019/02/chrome-scroll-to-text.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.chromestory.com/2019/02/chrome-scroll-to-text/</dc:identifier>
</item>
</channel>
</rss>