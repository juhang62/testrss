<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Ask HN: Books giving practical advice on starting a solo SaaS business?</title>
<link>https://news.ycombinator.com/item?id=22712138</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=22712138</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: Books giving practical advice on starting a solo SaaS business?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.984962406015&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;5.7669172932331&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;22712138&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22712138&quot; class=&quot;storylink&quot;&gt;Ask HN: Books giving practical advice on starting a solo SaaS business?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.75949367088608&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_22712138&quot;&gt;205 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=Dockson&quot; class=&quot;hnuser&quot;&gt;Dockson&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22712138&quot;&gt;8 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_22712138&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=22712138&amp;amp;goto=item%3Fid%3D22712138&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Books%20giving%20practical%20advice%20on%20starting%20a%20solo%20SaaS%20business%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20Books%20giving%20practical%20advice%20on%20starting%20a%20solo%20SaaS%20business%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=22712138&amp;amp;auth=a260af172dd3d8d43ae588d298bb4741279183da&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=22712138&quot;&gt;65 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;13&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;11&quot;&gt;My goal in life (as of right now at least) is to start my own SaaS business so that I can eventually quit my 40 hour work week and have more time for things I enjoy doing. To reach that goal I am first compiling practical advice from people who have already been through that process and are now sharing that advice around ideation and idea validation, marketing, pricing, etc.
&lt;p&gt;I've been looking for book recommendations on this topic both here on HN and also on Indiehackers and while there are many books that are most certainly relevant in some ways and generally just good reads, I would like to start out by asking you if there are any books you've read that specifically give this type of advice. I say books to keep it simple but am of course also open to other types of high-quality resources like blog series or conference talks.&lt;/p&gt;
&lt;p&gt;Looking forward to hearing about all the great things you guys have read!&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Sat, 28 Mar 2020 16:25:27 +0000</pubDate>
<dc:creator>Dockson</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=22712138</dc:identifier>
</item>
<item>
<title>From Spain to Germany, farmers warn of fresh food shortages</title>
<link>https://www.bloomberg.com/news/articles/2020-03-27/from-spain-to-germany-farmers-warn-of-fresh-food-shortages</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2020-03-27/from-spain-to-germany-farmers-warn-of-fresh-food-shortages</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-03-27/from-spain-to-germany-farmers-warn-of-fresh-food-shortages&quot;&gt;https://www.bloomberg.com/news/articles/2020-03-27/from-spain-to-germany-farmers-warn-of-fresh-food-shortages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22711661&quot;&gt;https://news.ycombinator.com/item?id=22711661&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 286&lt;/p&gt;
&lt;p&gt;# Comments: 379&lt;/p&gt;
</description>
<pubDate>Sat, 28 Mar 2020 15:24:37 +0000</pubDate>
<dc:creator>montalbano</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=d24db470-7158-11ea-b39d-6df3b7ae7106&amp;url=L25ld3MvYXJ0aWNsZXMvMjAyMC0wMy0yNy9mcm9tLXNwYWluLXRvLWdlcm1hbnktZmFybWVycy13YXJuLW9mLWZyZXNoLWZvb2Qtc2hvcnRhZ2Vz</dc:identifier>
</item>
<item>
<title>The internet should be a public utility</title>
<link>https://qz.com/1826043/the-coronavirus-crisis-proves-internet-should-be-a-public-utility/</link>
<guid isPermaLink="true" >https://qz.com/1826043/the-coronavirus-crisis-proves-internet-should-be-a-public-utility/</guid>
<description>&lt;p class=&quot;_6bdca&quot;&gt;Imagine if you had no internet access in this time of global crisis. It would be bad, right?&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;For one thing, you couldn’t read this story. More importantly, you’d be in some form of quarantine unable to access information, with far fewer distractions and means to connect with others, and no way to work (if indeed your job has moved online in these difficult times). And if you were an indigent parent, you wouldn’t be able to maintain some semblance of continuing education for your children.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;You’d be struggling—alienated and uninformed—much more so than you may already be.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;The spread of the novel coronavirus around the world has made many of us shut-ins and proven conclusively that the internet should be a public utility. It’s a basic necessity in the 21st century, like running water, gas, and electricity. Indeed, the United Nations in 2016 declared that &lt;a href=&quot;https://www.brookings.edu/blog/techtank/2016/11/07/the-internet-as-a-human-right/&quot;&gt;internet access is a human right&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Sure, you &lt;em&gt;could &lt;/em&gt;theoretically survive without it, just as you might light your home with candles or warm it by fire. Just as you could arguably trek to the closest freshwater source and walk back with buckets of the life-sustaining stuff.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;But in wealthy societies, like the US, those are absurd notions. Living under such conditions is virtually impossible and endangers everyone.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;The pandemic has illuminated &lt;a href=&quot;https://qz.com/1820249/global-cherry-blossom-festivities-are-off-but-natures-lessons-are-not/&quot;&gt;the interconnectedness of everyone and everything&lt;/a&gt;. That’s why we’re staying inside and avoiding physical contact. Your ignorance of infectious disease could lead to my demise and vice versa. With no ill intent at all, your loveliest neighbor or a total stranger could put you in grave danger.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;So, though we have a whole lot of social woes to contend with right now—pressing medical and economic needs—it’s not too soon to recognize that internet service providers’ profits are not the top priority and that lack of access exacerbates existing class divides.&lt;/p&gt;
&lt;h2 class=&quot;a539f&quot;&gt;The classless society&lt;/h2&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Americans like to believe they live in a classless society. In theory, anyone can lift themselves up by their proverbial bootstraps and live the dream. Realistically, it’s a whole lot harder if at every stage in your upbringing and adulthood you have fewer tools and opportunities. At this point, it’s virtually impossible if you’re not up to speed on technology or cut off from its offerings.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;As labor economist Julia Pollak noted on Twitter, internet access is critical for education and employment and many people, until this pandemic changed things, relied on hotspots in cafes or libraries or schools for connection.&lt;/p&gt;

&lt;p class=&quot;_6bdca&quot;&gt;Internet service providers—like Comcast—&lt;a href=&quot;https://www.engadget.com/2020-03-13-comcast-data-caps-coronavirus.html&quot;&gt;recognize this&lt;/a&gt;, as evidenced by recent announcements that in these unusual times they’re relaxing data restrictions, offering free service for a limited period, suspending disconnections, and hooking up new customers. Meanwhile, many American public schools have issued laptops to students who couldn’t afford them, hoping the extended disruption to studies won’t disproportionately affect the poor, although this doesn’t necessarily mean every kid’s household will be &lt;a href=&quot;https://www.wpbf.com/article/undocumented-families-concerned-as-they-transition-kids-to-online-learning/31917921&quot;&gt;connected to the internet&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;That is all very nice for now. But these charitable actions only highlight the need for widespread access regardless of economic circumstances.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Comcast can clearly afford to be generous. In 2017 and 2018 the company spent more than &lt;a href=&quot;https://arstechnica.com/tech-policy/2019/05/comcast-does-so-much-lobbying-that-it-says-disclosing-it-all-is-too-hard/&quot;&gt;$30 million lobbying Congress&lt;/a&gt;. How much it spent to convince state and municipal politicians that private companies should control access to the public web is unknown, prompting shareholders to demand transparency last year.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Their concern was that the company’s activities would lead to a public backlash and greater demand for municipal broadband, which will erode profits. So, basically, what the shareholders were saying is that if the public truly understood just how much money the company was spending to ensure it controls internet access, voters would themselves be lobbying politicians for a public option that could ultimately undermine Comcast’s ability to attract any customers at all.&lt;/p&gt;
&lt;h2 class=&quot;a539f&quot;&gt;Deep pockets and open secrets&lt;/h2&gt;
&lt;p class=&quot;_6bdca&quot;&gt;If you’re not steeped in technology or law, you might not realize that Americans have been fighting for a fair internet for quite some time, losing the battle against big business. Comcast is the biggest spender when it comes to lobbying politicians but it isn’t alone in &lt;a href=&quot;https://www.opensecrets.org/news/issues/net_neutrality/&quot;&gt;spending millions&lt;/a&gt; to fight so-called net neutrality.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;When the “net” is neutral, service providers can’t slow, block, or prioritize one type of data over another, meaning they can’t manipulate service to ensure those who can afford to do so spend more for better broadband.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;In 2017, telecoms found a powerful ally in government. The  Federal Communications Commission (FCC)—led by Trump appointee Ajit Pai, formerly a lawyer for Verizon—&lt;a href=&quot;https://qz.com/1158328/what-will-happen-now-that-net-neutrality-is-gone-we-asked-the-experts/&quot;&gt;repealed net neutrality protections&lt;/a&gt; after a notice period plagued with allegations of unfairness. Some of the companies supporting the repeal of net neutrality protections appear to have contributed to &lt;a href=&quot;https://www.buzzfeednews.com/article/jsvine/net-neutrality-fcc-fake-comments-impersonation&quot;&gt;campaigns by internet trolls&lt;/a&gt; posting support for the new rules online, which skewed the official record meant to reflect what the public wants.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;The FCC also beat legal challenges by state attorneys and internet advocacy groups, &lt;a href=&quot;https://qz.com/1721633/us-net-neutralitys-crushing-defeat-this-week-may-end-up-saving-it/&quot;&gt;to some extent&lt;/a&gt;. A federal circuit court of appeals found the new regulations are legal, so telecoms can throttle service. But the court also held that the US government cannot bar states or other localities from creating public options.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;While FCC chairman Pai lauded the decision as a win for consumers and broadband deployment, his counterpart, FCC commissioner Jessica Rosenworcel &lt;a href=&quot;https://docs.fcc.gov/public/attachments/DOC-359971A1.pdf&quot;&gt;issued her own statement&lt;/a&gt;, saying the agency was “on the wrong side of the American people and the wrong side of history.” She pointed out that the ruling proved the FCC had failed to understand the law. Rosenworcel wrote:&lt;/p&gt;
&lt;blockquote class=&quot;d90f0&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Today’s court decision vacates the FCC’s unlawful effort to block states and localities from protecting an open internet for their citizens. From small towns to big cities, from state houses to governors’ executive actions, states and localities have been stepping in because the FCC shirked its duties. In addition, the court took the agency to task for disregarding its duty to consider how its decision threatens public safety, lifeline service, and broadband infrastructure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class=&quot;a539f&quot;&gt;The public interest&lt;/h2&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Enlightened localities have long understood just how critical internet access is. After last year’s ruling, &lt;a href=&quot;https://yalebooks.yale.edu/book/9780300241402/after-net-neutrality&quot;&gt;democratic internet advocates posited&lt;/a&gt; that the short-term win for telecoms would ultimately result in their losses and a victory for the public. Not only had the broadband providers proven they don’t feel responsible to the people they serve, they also gave mayors and governors good reason and plenty of motivation to act boldly &lt;a href=&quot;https://www.fastcompany.com/90432191/telecoms-wield-enormous-power-over-the-internet-but-cities-are-fighting-back&quot;&gt;on behalf of their constituents&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Increasingly, towns, cities, and states are taking a close look at &lt;a href=&quot;https://www.thenation.com/article/chattanooga-was-a-typical-post-industrial-city-then-it-began-offering-municipal-broadband/&quot; rel=&quot;noopener noreferrer&quot;&gt;Chattanooga, Tennessee&lt;/a&gt;, which built its own high-speed fiber-optic internet network in 2009. A 2018 &lt;a href=&quot;https://www.consumerreports.org/telecom-services/cord-cutting-continues-high-cable-pricing/&quot;&gt;Consumer Reports survey&lt;/a&gt; found the city’s broadband was rated best in the US. There are already more than 500 communities nationwide operating public networks or leveraging their massive contracts with broadband providers to ensure free wiring of schools, libraries, and other publicly-accessible wifi hotspots.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;This patchwork approach to public access is taking hold across the US and there is a growing understanding that internet access is a social issue that has to be addressed by governments, not private companies operating with profit as their sole motivator.&lt;/p&gt;
&lt;p class=&quot;_6bdca&quot;&gt;Perhaps after the pandemic panic gives way to a new state of normalcy, the people will demand inexpensive and reliable high-quality broadband, and maybe private internet service providers will have to sing a different tune. They already recognize that access is essential, based on their response to the coronavirus quarantines. That will make it harder to walk back the admissions and concessions they’re making today, and they may well find that if they don’t want to keep playing nice, a time will come when they’re no longer necessary because the game has totally changed.&lt;/p&gt;
</description>
<pubDate>Sat, 28 Mar 2020 14:53:21 +0000</pubDate>
<dc:creator>laurex</dc:creator>
<og:description>It's never been more evident than in this time of pandemic panic that internet access is as essential as electricity and running water.</og:description>
<og:image>https://cms.qz.com/wp-content/uploads/2020/03/PublicInternet.jpeg?quality=75&amp;strip=all&amp;w=1400</og:image>
<og:title>The coronavirus crisis proves the internet should be a public utility</og:title>
<og:type>article</og:type>
<og:url>https://qz.com/1826043/the-coronavirus-crisis-proves-internet-should-be-a-public-utility/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://qz.com/1826043/the-coronavirus-crisis-proves-internet-should-be-a-public-utility/</dc:identifier>
</item>
<item>
<title>Static Analysis in GCC 10</title>
<link>https://developers.redhat.com/blog/2020/03/26/static-analysis-in-gcc-10/</link>
<guid isPermaLink="true" >https://developers.redhat.com/blog/2020/03/26/static-analysis-in-gcc-10/</guid>
<description>&lt;img width=&quot;535&quot; height=&quot;523&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2020/02/heckert_gnu.transparent.png&quot; class=&quot;single-post-featured-img wp-post-image&quot; alt=&quot;Static analysis in GCC 10&quot; srcset=&quot;https://developers.redhat.com/blog/wp-content/uploads/2020/02/heckert_gnu.transparent.png 535w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/heckert_gnu.transparent-300x293.png 300w&quot; sizes=&quot;(max-width: 535px) 100vw, 535px&quot;/&gt;&lt;p&gt;I work at Red Hat on &lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;GCC, the GNU Compiler Collection&lt;/a&gt;. For the next major release of GCC, &lt;a href=&quot;https://gcc.gnu.org/gcc-10/changes.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;GCC 10&lt;/a&gt;, I’ve been implementing a new &lt;code&gt;-fanalyzer&lt;/code&gt; option: A static analysis pass to identify various problems at compile-time, rather than at runtime.&lt;/p&gt;
&lt;p&gt;My thinking here is that it’s best to catch problems as early as possible as the code is written, using the compiler the code is written in as part of the compile-edit-debug cycle, rather than having static analysis as an extra tool “on the side” (perhaps proprietary). Hence, it seems worthwhile to have a static analyzer built into the compiler that can see exactly the same code as the compiler sees—because it &lt;em&gt;is&lt;/em&gt; the compiler.&lt;/p&gt;

&lt;p&gt;This issue is, of course, a huge problem to tackle. For this release, I’ve focused on the kinds of problems seen in C code—and, in particular &lt;a href=&quot;https://cwe.mitre.org/data/definitions/415.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;double-free bugs&lt;/a&gt;—but with a view toward creating a framework that we can expand on in subsequent releases (when we can add more checks and support languages other than C).&lt;/p&gt;
&lt;p&gt;My hope is that the analyzer provides a decent amount of extra checking while not being too expensive. I’ve aimed for &lt;code&gt;-fanalyzer&lt;/code&gt; to “merely” double the compile time as a reasonable trade-off for the extra checks. I haven’t succeeded yet, as you’ll see below, but I’m working on it.&lt;/p&gt;
&lt;p&gt;Right now the code is in GCC’s master branch for GCC 10 and can be tried out on &lt;a href=&quot;http://godbolt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Compiler Explorer, aka godbolt.org&lt;/a&gt;. It works well for small and medium-sized examples, but there are bugs that mean it’s not ready for production use. I’m working hard on fixing things in the hope that the feature will be meaningfully usable for C code by the time of GCC 10’s release (likely in April).&lt;/p&gt;
&lt;h2&gt;Diagnostic paths&lt;/h2&gt;
&lt;p&gt;Here’s the simplest possible example of a double-free bug:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span&gt;void&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;(&lt;span&gt;void&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;ptr)
{
  free(ptr);
  free(ptr);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GCC 10 with &lt;code&gt;-fanalyzer&lt;/code&gt; reports it as follows:&lt;/p&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer double-free-1.c
&lt;span&gt;double-free-1.c:&lt;/span&gt; In function ‘&lt;span&gt;test&lt;/span&gt;’:
&lt;span&gt;double-free-1.c:6:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;double-‘&lt;span&gt;free&lt;/span&gt;’ of ‘&lt;span&gt;ptr&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;CWE-415&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-double-free&lt;/span&gt;&lt;/span&gt;]
    6 |   &lt;span&gt;&lt;span&gt;free(ptr)&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;test&lt;/span&gt;’: events 1-2
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    5 |   &lt;span&gt;&lt;span&gt;free(ptr)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; first ‘&lt;span&gt;free&lt;/span&gt;’ here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    6 |   &lt;span&gt;&lt;span&gt;free(ptr)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; second ‘&lt;span&gt;free&lt;/span&gt;’ here; first ‘&lt;span&gt;free&lt;/span&gt;’ was at &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;This response shows that GCC has learned some new tricks; first, the ability for diagnostics to have &lt;a href=&quot;https://cwe.mitre.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Common Weakness Enumeration (CWE) identifiers&lt;/a&gt;. In this example, the double-free diagnostic is tagged with &lt;a href=&quot;https://cwe.mitre.org/data/definitions/415.html&quot;&gt;CWE-415&lt;/a&gt;. This tag hopefully makes the output more clear, improves precision, and gives you something simple to type into search engines. So far, only diagnostics from &lt;code&gt;-fanalyzer&lt;/code&gt; have been tagged with CWE weakness identifiers.&lt;/p&gt;
&lt;p&gt;If you’re using GCC 10 with a suitable terminal (e.g. recent gnome-terminal), the CWE identifier is a clickable hyperlink, taking you to a &lt;a href=&quot;https://cwe.mitre.org/data/definitions/415.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;description of the problem&lt;/a&gt;. Speaking of hyperlinks, for many releases, when GCC emits a warning it prints the option controlling that warning. As of GCC 10, that option text is now a clickable hyperlink (again, assuming a &lt;a href=&quot;https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;sufficiently capable terminal&lt;/a&gt;), which should take you to the documentation for that option (for any warning, not just the ones relating to the analyzer).&lt;/p&gt;
&lt;p&gt;Second, GCC diagnostics can now have a chain of events associated with them, describing a path through the code that triggers the problem. Given the lack of control flow in the above example, it has just two events, but you can see how the second event refers to the first event in its description.&lt;/p&gt;
&lt;p&gt;Here’s a more involved example. Can you see the issue in the following code? (Hint: It’s not a double-free this time):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;setjmp.h&amp;gt;&lt;/span&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span&gt;static&lt;/span&gt; &lt;span&gt;jmp_buf&lt;/span&gt; env;

&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;inner&lt;/span&gt;(&lt;span&gt;void&lt;/span&gt;)
{
  longjmp(env, &lt;span&gt;1&lt;/span&gt;);
}

&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;middle&lt;/span&gt;(&lt;span&gt;void&lt;/span&gt;)
{
  &lt;span&gt;void&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;ptr &lt;span&gt;=&lt;/span&gt; malloc(&lt;span&gt;1024&lt;/span&gt;);
  inner();
  free(ptr);
}

&lt;span&gt;void&lt;/span&gt; &lt;span&gt;outer&lt;/span&gt;(&lt;span&gt;void&lt;/span&gt;)
{
  &lt;span&gt;int&lt;/span&gt; i;

  i &lt;span&gt;=&lt;/span&gt; setjmp(env);
  &lt;span&gt;if&lt;/span&gt; (i &lt;span&gt;==&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;)
    middle();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s what GCC’s &lt;code&gt;-fanalyzer&lt;/code&gt; reports, which shows the interprocedural control flow via ASCII art:&lt;/p&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer longjmp-demo.c
&lt;span&gt;longjmp-demo.c:&lt;/span&gt; In function ‘&lt;span&gt;inner&lt;/span&gt;’:
&lt;span&gt;longjmp-demo.c:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;leak of ‘&lt;span&gt;ptr&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;CWE-401&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-malloc-leak&lt;/span&gt;&lt;/span&gt;]
    8 |   &lt;span&gt;&lt;span&gt;longjmp(env, 1)&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;outer&lt;/span&gt;’: event 1
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   18 | void &lt;span&gt;&lt;span&gt;outer&lt;/span&gt;&lt;/span&gt;(void)
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;^~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; entry to ‘&lt;span&gt;outer&lt;/span&gt;’
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;outer&lt;/span&gt;’: event 2
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   22 |   i = &lt;span&gt;&lt;span&gt;setjmp&lt;/span&gt;&lt;/span&gt;(env);
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; ‘&lt;span&gt;setjmp&lt;/span&gt;’ called here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;outer&lt;/span&gt;’: events 3-5
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   23 |   if &lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;i == 0)
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;(3)&lt;/span&gt;&lt;/span&gt; following ‘&lt;span&gt;true&lt;/span&gt;’ branch (when ‘&lt;span&gt;i == 0&lt;/span&gt;’)...
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   24 |     &lt;span&gt;&lt;span&gt;middle()&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;(4)&lt;/span&gt;&lt;/span&gt; ...to here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;(5)&lt;/span&gt;&lt;/span&gt; calling ‘&lt;span&gt;middle&lt;/span&gt;’ from ‘&lt;span&gt;outer&lt;/span&gt;’
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;+--&amp;gt; &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;middle&lt;/span&gt;’: events 6-8
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   11 | static void &lt;span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;/span&gt;(void)
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;(6)&lt;/span&gt;&lt;/span&gt; entry to ‘&lt;span&gt;middle&lt;/span&gt;’
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   12 | {
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   13 |   void *ptr = &lt;span&gt;&lt;span&gt;malloc(1024)&lt;/span&gt;&lt;/span&gt;;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |               &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |               &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |               &lt;span&gt;&lt;span&gt;(7)&lt;/span&gt;&lt;/span&gt; allocated here
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   14 |   &lt;span&gt;&lt;span&gt;inner()&lt;/span&gt;&lt;/span&gt;;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(8)&lt;/span&gt;&lt;/span&gt; calling ‘&lt;span&gt;inner&lt;/span&gt;’ from ‘&lt;span&gt;middle&lt;/span&gt;’
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;+--&amp;gt; &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;inner&lt;/span&gt;’: events 9-11
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    6 | static void &lt;span&gt;&lt;span&gt;inner&lt;/span&gt;&lt;/span&gt;(void)
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;^~~~~&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;(9)&lt;/span&gt;&lt;/span&gt; entry to ‘&lt;span&gt;inner&lt;/span&gt;’
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    7 | {
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    8 |   &lt;span&gt;&lt;span&gt;longjmp(env, 1)&lt;/span&gt;&lt;/span&gt;;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(10)&lt;/span&gt;&lt;/span&gt; ‘&lt;span&gt;ptr&lt;/span&gt;’ leaks here; was allocated at &lt;span&gt;&lt;span&gt;(7)&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(11)&lt;/span&gt;&lt;/span&gt; rewinding from ‘&lt;span&gt;longjmp&lt;/span&gt;’ in ‘&lt;span&gt;inner&lt;/span&gt;’...
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;&amp;lt;-------------+&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;outer&lt;/span&gt;’: event 12
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   22 |   i = &lt;span&gt;&lt;span&gt;setjmp&lt;/span&gt;&lt;/span&gt;(env);
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;(12)&lt;/span&gt;&lt;/span&gt; ...to ‘&lt;span&gt;setjmp&lt;/span&gt;’ in ‘&lt;span&gt;outer&lt;/span&gt;’ (saved at &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt;)
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The above is rather verbose, though perhaps it needs to be to convey what’s going on, given the use of &lt;code&gt;setjmp&lt;/code&gt; and &lt;code&gt;longjmp&lt;/code&gt;. I hope the description is reasonably clear: There’s a memory leak that occurs when the call to &lt;code&gt;longjmp&lt;/code&gt; unwinds the stack back to &lt;code&gt;outer&lt;/code&gt; past the cleanup point in &lt;code&gt;middle&lt;/code&gt;, without invoking the cleanup.&lt;/p&gt;
&lt;p&gt;If you don’t like the ASCII art above, you can view the events as separate “note” diagnostics with &lt;code&gt;-fdiagnostics-path-format=separate-events&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer -fdiagnostics-path-format=separate-events longjmp-demo.c
&lt;span&gt;longjmp-demo.c:&lt;/span&gt; In function ‘&lt;span&gt;inner&lt;/span&gt;’:
&lt;span&gt;longjmp-demo.c:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;leak of ‘&lt;span&gt;ptr&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;CWE-401&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-malloc-leak&lt;/span&gt;&lt;/span&gt;]
    8 |   &lt;span&gt;&lt;span&gt;longjmp(env, 1)&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:18:6:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (1)&lt;/span&gt;&lt;/span&gt; entry to ‘outer’
   18 | void &lt;span&gt;&lt;span&gt;outer&lt;/span&gt;&lt;/span&gt;(void)
      |      &lt;span&gt;&lt;span&gt;^~~~~&lt;/span&gt;&lt;/span&gt;
In file included from &lt;span&gt;longjmp-demo.c:1&lt;/span&gt;:
&lt;span&gt;longjmp-demo.c:22:7:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (2)&lt;/span&gt;&lt;/span&gt; ‘setjmp’ called here
   22 |   i = &lt;span&gt;&lt;span&gt;setjmp&lt;/span&gt;&lt;/span&gt;(env);
      |       &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:23:6:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (3)&lt;/span&gt;&lt;/span&gt; following ‘true’ branch (when ‘i == 0’)...
   23 |   if &lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;i == 0)
      |      &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:24:5:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (4)&lt;/span&gt;&lt;/span&gt; ...to here
   24 |     &lt;span&gt;&lt;span&gt;middle()&lt;/span&gt;&lt;/span&gt;;
      |     &lt;span&gt;&lt;span&gt;^~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:24:5:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (5)&lt;/span&gt;&lt;/span&gt; calling ‘middle’ from ‘outer’
&lt;span&gt;longjmp-demo.c:11:13:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (6)&lt;/span&gt;&lt;/span&gt; entry to ‘middle’
   11 | static void &lt;span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;/span&gt;(void)
      |             &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:13:15:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (7)&lt;/span&gt;&lt;/span&gt; allocated here
   13 |   void *ptr = &lt;span&gt;&lt;span&gt;malloc(1024)&lt;/span&gt;&lt;/span&gt;;
      |               &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:14:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (8)&lt;/span&gt;&lt;/span&gt; calling ‘inner’ from ‘middle’
   14 |   &lt;span&gt;&lt;span&gt;inner()&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:6:13:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (9)&lt;/span&gt;&lt;/span&gt; entry to ‘inner’
    6 | static void &lt;span&gt;&lt;span&gt;inner&lt;/span&gt;&lt;/span&gt;(void)
      |             &lt;span&gt;&lt;span&gt;^~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (10)&lt;/span&gt;&lt;/span&gt; ‘ptr’ leaks here; was allocated at (7)
    8 |   &lt;span&gt;&lt;span&gt;longjmp(env, 1)&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;longjmp-demo.c:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (11)&lt;/span&gt;&lt;/span&gt; rewinding from ‘longjmp’ in ‘inner’...
In file included from &lt;span&gt;longjmp-demo.c:1&lt;/span&gt;:
&lt;span&gt;longjmp-demo.c:22:7:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: (12)&lt;/span&gt;&lt;/span&gt; ...to ‘setjmp’ in ‘outer’ (saved at (2))
   22 |   i = &lt;span&gt;&lt;span&gt;setjmp&lt;/span&gt;&lt;/span&gt;(env);
      |       &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;or turn them off altogether with &lt;code&gt;-fdiagnostics-path-format=none&lt;/code&gt;. There’s also a JSON output format.&lt;/p&gt;
&lt;p&gt;All of the new diagnostics have a &lt;code&gt;-Wanalyzer-SOMETHING&lt;/code&gt; name: We’ve already seen &lt;code&gt;-Wanalyzer-double-free&lt;/code&gt; and &lt;code&gt;-Wanalyzer-malloc-leak&lt;/code&gt; above. These diagnostics are all enabled when &lt;code&gt;-fanalyzer&lt;/code&gt; is enabled, but they can be selectively disabled via the &lt;code&gt;-Wno-analyzer-SOMETHING&lt;/code&gt; variants (e.g., via pragmas).&lt;/p&gt;

&lt;h2&gt;What are the new warnings?&lt;/h2&gt;
&lt;p&gt;As well as double-free detection, there are checks for &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;fopen&lt;/code&gt; leaks:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span&gt;void&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;(&lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;filename)
{
  &lt;span&gt;FILE&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;f &lt;span&gt;=&lt;/span&gt; fopen(filename, &lt;span&gt;&quot;r&quot;&lt;/span&gt;);
  &lt;span&gt;void&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;p &lt;span&gt;=&lt;/span&gt; malloc(&lt;span&gt;1024&lt;/span&gt;);
  &lt;span&gt;/* do stuff */&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer leak.c
&lt;span&gt;leak.c:&lt;/span&gt; In function ‘&lt;span&gt;test&lt;/span&gt;’:
&lt;span&gt;leak.c:9:1:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;leak of ‘&lt;span&gt;p&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;CWE-401&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-malloc-leak&lt;/span&gt;&lt;/span&gt;]
    9 | &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;
      | &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;test&lt;/span&gt;’: events 1-2
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    7 |   void *p = &lt;span&gt;&lt;span&gt;malloc(1024)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; allocated here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    8 |   /* do stuff */
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    9 | &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      | &lt;span&gt;&lt;span&gt;~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      | &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      | &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; ‘&lt;span&gt;p&lt;/span&gt;’ leaks here; was allocated at &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;leak.c:9:1:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;leak of FILE ‘&lt;span&gt;f&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;CWE-775&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-file-leak&lt;/span&gt;&lt;/span&gt;]
    9 | &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;
      | &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;test&lt;/span&gt;’: events 1-2
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    6 |   FILE *f = &lt;span&gt;&lt;span&gt;fopen(filename, &quot;r&quot;)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; opened here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;......
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    9 | &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      | &lt;span&gt;&lt;span&gt;~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      | &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      | &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; ‘&lt;span&gt;f&lt;/span&gt;’ leaks here; was opened at &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;For using memory after it has been freed:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span&gt;struct&lt;/span&gt; link { &lt;span&gt;struct&lt;/span&gt; link &lt;span&gt;*&lt;/span&gt;next; };

&lt;span&gt;int&lt;/span&gt; &lt;span&gt;free_a_list_badly&lt;/span&gt;(&lt;span&gt;struct&lt;/span&gt; link &lt;span&gt;*&lt;/span&gt;n)
{
  &lt;span&gt;while&lt;/span&gt; (n) {
    free(n);
    n &lt;span&gt;=&lt;/span&gt; n&lt;span&gt;-&amp;gt;&lt;/span&gt;next;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer use-after-free.c
&lt;span&gt;use-after-free.c:&lt;/span&gt; In function ‘&lt;span&gt;free_a_list_badly&lt;/span&gt;’:
&lt;span&gt;use-after-free.c:9:7:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;use after ‘&lt;span&gt;free&lt;/span&gt;’ of ‘&lt;span&gt;n&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;CWE-416&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-use-after-free&lt;/span&gt;&lt;/span&gt;]
    9 |     &lt;span&gt;&lt;span&gt;n = n-&amp;gt;next&lt;/span&gt;&lt;/span&gt;;
      |     &lt;span&gt;&lt;span&gt;~~^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;free_a_list_badly&lt;/span&gt;’: events 1-4
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    7 |   while &lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;n) {
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |         &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |         &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |         &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; following ‘&lt;span&gt;true&lt;/span&gt;’ branch (when ‘&lt;span&gt;n&lt;/span&gt;’ is non-NULL)...
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    8 |     &lt;span&gt;&lt;span&gt;free(n)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; ...to here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;(3)&lt;/span&gt;&lt;/span&gt; freed here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    9 |     &lt;span&gt;&lt;span&gt;n = n-&amp;gt;next&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |       &lt;span&gt;&lt;span&gt;(4)&lt;/span&gt;&lt;/span&gt; use after ‘&lt;span&gt;free&lt;/span&gt;’ of ‘&lt;span&gt;n&lt;/span&gt;’; freed at &lt;span&gt;&lt;span&gt;(3)&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;For freeing a non-heap pointer:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;

&lt;span&gt;void&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; n)
{
  &lt;span&gt;int&lt;/span&gt; buf[&lt;span&gt;10&lt;/span&gt;];
  &lt;span&gt;int&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;ptr;

  &lt;span&gt;if&lt;/span&gt; (n &lt;span&gt;&amp;lt;&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;)
    ptr &lt;span&gt;=&lt;/span&gt; buf;
  &lt;span&gt;else&lt;/span&gt;
    ptr &lt;span&gt;=&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;)malloc(&lt;span&gt;sizeof&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;) &lt;span&gt;*&lt;/span&gt; n);

  &lt;span&gt;/* do stuff.  */&lt;/span&gt;

  &lt;span&gt;/* oops; this free should be conditionalized.  */&lt;/span&gt;
  free(ptr);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer heap-vs-stack.c
&lt;span&gt;heap-vs-stack.c:&lt;/span&gt; In function ‘&lt;span&gt;test&lt;/span&gt;’:
&lt;span&gt;heap-vs-stack.c:16:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;free&lt;/span&gt;’ of ‘&lt;span&gt;ptr&lt;/span&gt;’ which points to memory not on the heap [&lt;span&gt;&lt;span&gt;CWE-590&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-free-of-non-heap&lt;/span&gt;&lt;/span&gt;]
   16 |   &lt;span&gt;&lt;span&gt;free(ptr)&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;test&lt;/span&gt;’: events 1-4
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    8 |   if &lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;n &amp;lt; 10)
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; following ‘&lt;span&gt;true&lt;/span&gt;’ branch (when ‘&lt;span&gt;n &amp;lt;= 9&lt;/span&gt;’)...
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    9 |     &lt;span&gt;&lt;span&gt;ptr = buf&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |         &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |         &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; ...to here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |         &lt;span&gt;&lt;span&gt;(3)&lt;/span&gt;&lt;/span&gt; pointer is from here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;......
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   16 |   &lt;span&gt;&lt;span&gt;free(ptr)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(4)&lt;/span&gt;&lt;/span&gt; call to ‘&lt;span&gt;free&lt;/span&gt;’ here
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;For using a function that’s known to be unsafe to use inside a signal handler:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span&gt;#include&lt;/span&gt; &lt;span&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;

&lt;span&gt;extern&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;body_of_program&lt;/span&gt;(&lt;span&gt;void&lt;/span&gt;);

&lt;span&gt;void&lt;/span&gt; &lt;span&gt;custom_logger&lt;/span&gt;(&lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;msg)
{
  fprintf(stderr, &lt;span&gt;&quot;LOG: %s&quot;&lt;/span&gt;, msg);
}

&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;handler&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; signum)
{
  custom_logger(&lt;span&gt;&quot;got signal&quot;&lt;/span&gt;);
}

&lt;span&gt;int&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; argc, &lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;argv)
{
  custom_logger(&lt;span&gt;&quot;started&quot;&lt;/span&gt;);

  signal(SIGINT, handler);

  body_of_program();

  custom_logger(&lt;span&gt;&quot;stopped&quot;&lt;/span&gt;);

  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
$ gcc -c -fanalyzer signal.c
&lt;span&gt;signal.c:&lt;/span&gt; In function ‘&lt;span&gt;custom_logger&lt;/span&gt;’:
&lt;span&gt;signal.c:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;call to ‘&lt;span&gt;fprintf&lt;/span&gt;’ from within signal handler [&lt;span&gt;&lt;span&gt;CWE-479&lt;/span&gt;&lt;/span&gt;] [&lt;span&gt;&lt;span&gt;-Wanalyzer-unsafe-call-within-signal-handler&lt;/span&gt;&lt;/span&gt;]
    8 |   &lt;span&gt;&lt;span&gt;fprintf(stderr, &quot;LOG: %s&quot;, msg)&lt;/span&gt;&lt;/span&gt;;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
  ‘&lt;span&gt;main&lt;/span&gt;’: events 1-2
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   16 | int &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;(int argc, const char *argv)
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;^~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |     &lt;span&gt;&lt;span&gt;(1)&lt;/span&gt;&lt;/span&gt; entry to ‘&lt;span&gt;main&lt;/span&gt;’
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;......
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   20 |   &lt;span&gt;&lt;span&gt;signal(SIGINT, handler)&lt;/span&gt;&lt;/span&gt;;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(2)&lt;/span&gt;&lt;/span&gt; registering ‘&lt;span&gt;handler&lt;/span&gt;’ as signal handler
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
  event 3
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;cc1:&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;(3)&lt;/span&gt;&lt;/span&gt;: later on, when the signal is delivered to the process
    &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span&gt;+--&amp;gt; &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;handler&lt;/span&gt;’: events 4-5
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   11 | static void &lt;span&gt;&lt;span&gt;handler&lt;/span&gt;&lt;/span&gt;(int signum)
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;^~~~~~~&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |             &lt;span&gt;&lt;span&gt;(4)&lt;/span&gt;&lt;/span&gt; entry to ‘&lt;span&gt;handler&lt;/span&gt;’
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   12 | {
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;   13 |   &lt;span&gt;&lt;span&gt;custom_logger(&quot;got signal&quot;)&lt;/span&gt;&lt;/span&gt;;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(5)&lt;/span&gt;&lt;/span&gt; calling ‘&lt;span&gt;custom_logger&lt;/span&gt;’ from ‘&lt;span&gt;handler&lt;/span&gt;’
           &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;+--&amp;gt; &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;custom_logger&lt;/span&gt;’: events 6-7
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    6 | void &lt;span&gt;&lt;span&gt;custom_logger&lt;/span&gt;&lt;/span&gt;(const char *msg)
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |      &lt;span&gt;&lt;span&gt;(6)&lt;/span&gt;&lt;/span&gt; entry to ‘&lt;span&gt;custom_logger&lt;/span&gt;’
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    7 | {
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;    8 |   &lt;span&gt;&lt;span&gt;fprintf(stderr, &quot;LOG: %s&quot;, msg)&lt;/span&gt;&lt;/span&gt;;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;      |   &lt;span&gt;&lt;span&gt;(7)&lt;/span&gt;&lt;/span&gt; call to ‘&lt;span&gt;fprintf&lt;/span&gt;’ from within signal handler
                  &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Along with &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Static-Analyzer-Options.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;other warnings&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What’s left to do?&lt;/h2&gt;
&lt;p&gt;As it stands, the checker works well on small- and medium-sized examples, but there are two problem areas I’m running into as I scale it up to real-world C code. First, there are bugs in my state-management code. Within the checker are classes for describing program state in an abstract way. The checker explores the program, building a directed graph of (point, state) pairs with logic for simplifying state and merging state at control flow join-points.&lt;/p&gt;
&lt;p&gt;In theory, if the state gets too complicated, the checker is meant to go into a least-defined state, but there are bugs with this approach that lead to the number of states at a given point exploding, which then leads to the checker running slowly, eventually hitting a safety limit, and not fully exploring the program. To fix this, I’ve been rewriting the guts of the state-management code. I hope to land the rewrite in “master” next week.&lt;/p&gt;
&lt;p&gt;Second, even if we do fully explore the program, the paths through the code generated by &lt;code&gt;-fanalyzer&lt;/code&gt; are sometimes ludicrously verbose. The worst I’ve seen is a 110-event path for the use of uninitialized data reported when compiling GCC itself. I think this one was a false positive, but clearly it’s unreasonable to expect users to wade through something like that.&lt;/p&gt;
&lt;p&gt;The analyzer tries to find the shortest feasible path through the (point, state) graph, generates a chain of events from it, and then tries to simplify the chain. Effectively, it’s applying a series of peephole optimizations to the chain of events to come up with a minimal chain that expresses the problem.&lt;/p&gt;
&lt;p&gt;I recently implemented a way of filtering irrelevant control-flow edges from the path, which ought to help, and I’m working on a similar patch to eliminate redundant interprocedural edges.&lt;/p&gt;
&lt;p&gt;To give a concrete example, I tried the analyzer on a real bug (albeit one from fifteen years ago)—&lt;a href=&quot;https://access.redhat.com/security/cve/cve-2005-1689&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CVE-2005-1689&lt;/a&gt;, a double-free vulnerability in krb5 1.4.1. It correctly identifies the bug with no false positives, but the output is currently 170 lines of stderr. Rather than showing the output inline here, you can see it at &lt;a href=&quot;https://dmalcolm.fedorapeople.org/gcc/2020-02-28/recvauth.c.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Initially, the above was 1187 lines of stderr. I fixed various bugs and implemented more simplifications to get it down to 170 lines. Part of the problem is that the &lt;code&gt;free&lt;/code&gt; is being done through a &lt;code&gt;krb5_xfree&lt;/code&gt; macro and the path-printing code shows how each macro is expanded each time an event occurs within a macro. Perhaps the output should only show each macro expansion once per diagnostic. Also, the first few events in each diagnostic are interprocedural logic that’s not really relevant to the user (I’m working on a fix for that). With these changes, the output should be considerably shorter.&lt;/p&gt;
&lt;p&gt;Perhaps a better interface might write out a separate HTML file, one per warning, and emit a “note” giving the location of the additional information?&lt;/p&gt;
&lt;p&gt;I want to give the end-user enough information to act on a warning, but without overwhelming them. Are there better ways of presenting this? Let me know in the comments.&lt;/p&gt;
&lt;h2&gt;Trying it out&lt;/h2&gt;
&lt;p&gt;GCC 10 will be in Fedora 32, which should be out in a couple of months.&lt;/p&gt;
&lt;p&gt;For simple code examples, you can play around with the new GCC online at &lt;a href=&quot;https://godbolt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;godbolt.org&lt;/a&gt; (select gcc “trunk” and add &lt;code&gt;-fanalyzer&lt;/code&gt; to the compiler options).&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;


&lt;div class=&quot;addtoany_share_save_container addtoany_content addtoany_content_bottom&quot;&gt;
&lt;div class=&quot;a2a_kit a2a_kit_size_16 addtoany_list&quot; data-a2a-url=&quot;https://developers.redhat.com/blog/2020/03/26/static-analysis-in-gcc-10/&quot; data-a2a-title=&quot;Static analysis in GCC 10&quot;&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share&quot;&gt;&lt;img src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; alt=&quot;Share&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 28 Mar 2020 14:42:23 +0000</pubDate>
<dc:creator>fanf2</dc:creator>
<og:type>article</og:type>
<og:title>Static analysis in GCC 10 - Red Hat Developer</og:title>
<og:description>Discover the new -fanalyzer option coming to GCC 10 that provides a static analysis pass to identify problems at compile-time, rather than at runtime.</og:description>
<og:url>https://developers.redhat.com/blog/2020/03/26/static-analysis-in-gcc-10/</og:url>
<og:image>https://developers.redhat.com/blog/wp-content/uploads/2020/02/heckert_gnu.transparent.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://developers.redhat.com/blog/2020/03/26/static-analysis-in-gcc-10/</dc:identifier>
</item>
<item>
<title>The northern-hemisphere winter of 2019-20 was the warmest ever on land</title>
<link>https://www.economist.com/graphic-detail/2020/03/28/the-northern-hemisphere-winter-of-2019-20-was-the-warmest-ever-on-land</link>
<guid isPermaLink="true" >https://www.economist.com/graphic-detail/2020/03/28/the-northern-hemisphere-winter-of-2019-20-was-the-warmest-ever-on-land</guid>
<description>&lt;aside class=&quot;article__aside&quot;&gt;&lt;p&gt;&lt;time itemscope=&quot;&quot; itemtype=&quot;http://schema.org/DateTime&quot; datetime=&quot;2020-03-28T00:00:00Z&quot; class=&quot;article__dateline-datetime&quot;&gt;Mar 28th 2020&lt;/time&gt;&lt;/p&gt;
&lt;/aside&gt;

&lt;p class=&quot;article__body-text&quot;&gt;&lt;span data-caps=&quot;initial&quot;&gt;T&lt;/span&gt;&lt;small&gt;HE MOST&lt;/small&gt; commonly cited risks of climate change are natural disasters: fiercer wildfires and hurricanes, bigger floods and longer droughts. But one of the most striking recent effects of global warming has been unusually mild weather in many parts of the world.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;The northern-hemisphere winter that ended on March 20th was the second-warmest since records began, and the warmest ever on land. The anomaly was biggest in Europe and Asia, where average temperatures from December to February were 3.2°C (5.8°F) and 3.1°C above the average from 1951-80, and 0.8°C and 0.7°C above those continents’ previous record highs. After a normal autumn, temperatures stayed close to their November levels for months. In Boston, where daily lows in January tend to hover around -6°C, the average minimum this January was 0°C; for Tokyo the figures were 0°C and 5°C. By local standards, the balmiest winter of all was in Russia. Moscow’s average daily low in January was -2°C, far from the customary -13°C.&lt;/p&gt;

&lt;p class=&quot;article__body-text&quot;&gt;The winter-that-wasn’t of 2019-20 is not yet a new normal. The main factor determining the severity of northern winters is the “Arctic oscillation”: the relative pressure of Arctic and sub-tropical air. When pressure is higher in the Arctic, cold air from the North Pole pushes south, bringing harsh, dry winters to many places. When pressure is higher towards the sub-tropics, warm air pushes northwards, hemming in cold air around the pole. These two patterns flip back and forth irregularly.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;For reasons that are not yet clear, pressure in the sub-tropics this year was much stronger than in the Arctic. And researchers have not yet determined how rising temperatures affect the Arctic oscillation. Until a few years ago, climate models tended to show pressure in the Arctic strengthening, reducing the amount of warming during winter at temperate northern latitudes. The latest models find the reverse.&lt;/p&gt;


&lt;p class=&quot;article__body-text&quot;&gt;However, climate change is still responsible for anomalies like this one. At the average global temperature in 1950, a winter this mild was all but impossible. In today’s climate, such reprieves from the cold should occur once every 11 years. And if global warming continues on its current trajectory, winters like this year’s could become standard within a few decades.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Mild winters offer benefits. Heating is cheaper, flu seasons are shorter and fewer people die overall. But problems mount as well. Without hard frosts, pests can survive and multiply to attack crops more harshly. Warmer winters are usually wetter, changing snowfall patterns. This can shrink the snowpack that supplies rivers, and cause floods. Even people who bemoan frigid winters may miss them if they vanish. &lt;span data-ornament=&quot;ufinish&quot;&gt;■&lt;/span&gt;&lt;/p&gt;
&lt;p data-interactive-class=&quot;g-interactive-source&quot; class=&quot;article__body-text&quot;&gt;Sources: NASA GISTEMP; NOAA GHCND&lt;/p&gt;
&lt;p data-test-id=&quot;Footnote&quot; class=&quot;article__footnote&quot;&gt;This article appeared in the Graphic detail section of the print edition under the headline &quot;Winter is not coming&quot;&lt;/p&gt;
&lt;div class=&quot;layout-article-links&quot;&gt;&lt;a href=&quot;https://s100.copyright.com/AppDispatchServlet?publisherName=economist&amp;amp;publication=economist&amp;amp;title=The%20northern-hemisphere%20winter%20of%202019-20%20was%20the%20warmest%20ever%20on%20land&amp;amp;publicationDate=2020-03-28&amp;amp;contentID=%2Fcontent%2F6doib1qkp2gtp3q5uj7ibjf4uf7ema5b&amp;amp;type=A&amp;amp;orderBeanReset=TRUE&quot; target=&quot;_blank&quot; class=&quot;ds-actioned-link ds-actioned-link--reuse-this-content&quot;&gt;&lt;span&gt;Reuse this content&lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;https://www.economist.com/about-the-economist&quot; target=&quot;_self&quot; class=&quot;ds-actioned-link ds-actioned-link--the-trust-project&quot;&gt;&lt;span&gt;The Trust Project&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 28 Mar 2020 12:14:28 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:title>The northern-hemisphere winter of 2019-20 was the warmest ever on land</og:title>
<og:type>Article</og:type>
<og:url>https://www.economist.com/graphic-detail/2020/03/28/the-northern-hemisphere-winter-of-2019-20-was-the-warmest-ever-on-land</og:url>
<og:description>Temperatures stayed roughly the same from November to March</og:description>
<og:image>https://www.economist.com/sites/default/files/20200328_GDP210.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.economist.com/graphic-detail/2020/03/28/the-northern-hemisphere-winter-of-2019-20-was-the-warmest-ever-on-land</dc:identifier>
</item>
<item>
<title>Boids</title>
<link>https://en.wikipedia.org/wiki/Boids</link>
<guid isPermaLink="true" >https://en.wikipedia.org/wiki/Boids</guid>
<description>&lt;a class=&quot;mw-jump-link&quot; href=&quot;https://en.wikipedia.org/wiki/Boids#mw-head&quot;&gt;Jump to navigation&lt;/a&gt;
		&lt;a class=&quot;mw-jump-link&quot; href=&quot;https://en.wikipedia.org/wiki/Boids#p-search&quot;&gt;Jump to search&lt;/a&gt;
		&lt;div id=&quot;mw-content-text&quot; lang=&quot;en&quot; dir=&quot;ltr&quot; class=&quot;mw-content-ltr&quot;&gt;&lt;div class=&quot;mw-parser-output&quot;&gt;
&lt;p class=&quot;mw-empty-elt&quot;&gt;
&lt;/p&gt;
&lt;div role=&quot;note&quot; class=&quot;hatnote navigation-not-searchable&quot;&gt;For the reptilian family, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Boidae&quot; title=&quot;Boidae&quot;&gt;Boidae&lt;/a&gt;.&lt;/div&gt;
&lt;div class=&quot;thumb tright&quot;&gt;&lt;div class=&quot;thumbinner&quot; style=&quot;width:222px;&quot;&gt;&lt;div id=&quot;mwe_player_0&quot; class=&quot;PopUpMediaTransform&quot; style=&quot;width:220px;&quot; videopayload=&quot;&amp;lt;div class=&amp;quot;mediaContainer&amp;quot; style=&amp;quot;width:480px&amp;quot;&amp;gt;&amp;lt;video id=&amp;quot;mwe_player_1&amp;quot; poster=&amp;quot;//upload.wikimedia.org/wikipedia/commons/thumb/4/43/Boids_OpenGL_example.webm/480px--Boids_OpenGL_example.webm.jpg&amp;quot; controls=&amp;quot;&amp;quot; preload=&amp;quot;none&amp;quot; autoplay=&amp;quot;&amp;quot; style=&amp;quot;width:480px;height:480px&amp;quot; class=&amp;quot;kskin&amp;quot; data-durationhint=&amp;quot;80&amp;quot; data-startoffset=&amp;quot;0&amp;quot; data-mwtitle=&amp;quot;Boids_OpenGL_example.webm&amp;quot; data-mwprovider=&amp;quot;wikimediacommons&amp;quot;&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.480p.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp8, vorbis&amp;amp;quot;&amp;quot; data-title=&amp;quot;SD WebM (480P)&amp;quot; data-shorttitle=&amp;quot;WebM 480P&amp;quot; data-transcodekey=&amp;quot;480p.webm&amp;quot; data-width=&amp;quot;480&amp;quot; data-height=&amp;quot;480&amp;quot; data-bandwidth=&amp;quot;1017288&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.480p.vp9.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp9, opus&amp;amp;quot;&amp;quot; data-title=&amp;quot;SD VP9 (480P)&amp;quot; data-shorttitle=&amp;quot;VP9 480P&amp;quot; data-transcodekey=&amp;quot;480p.vp9.webm&amp;quot; data-width=&amp;quot;480&amp;quot; data-height=&amp;quot;480&amp;quot; data-bandwidth=&amp;quot;1272536&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/4/43/Boids_OpenGL_example.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp8&amp;amp;quot;&amp;quot; data-title=&amp;quot;Original WebM file, 500 × 500 (1.96 Mbps)&amp;quot; data-shorttitle=&amp;quot;WebM source&amp;quot; data-width=&amp;quot;500&amp;quot; data-height=&amp;quot;500&amp;quot; data-bandwidth=&amp;quot;1956537&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.120p.vp9.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp9, opus&amp;amp;quot;&amp;quot; data-title=&amp;quot;Lowest bandwidth VP9 (120P)&amp;quot; data-shorttitle=&amp;quot;VP9 120P&amp;quot; data-transcodekey=&amp;quot;120p.vp9.webm&amp;quot; data-width=&amp;quot;120&amp;quot; data-height=&amp;quot;120&amp;quot; data-bandwidth=&amp;quot;117392&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.160p.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp8, vorbis&amp;amp;quot;&amp;quot; data-title=&amp;quot;Low bandwidth WebM (160P)&amp;quot; data-shorttitle=&amp;quot;WebM 160P&amp;quot; data-transcodekey=&amp;quot;160p.webm&amp;quot; data-width=&amp;quot;160&amp;quot; data-height=&amp;quot;160&amp;quot; data-bandwidth=&amp;quot;128832&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.180p.vp9.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp9, opus&amp;amp;quot;&amp;quot; data-title=&amp;quot;Low bandwidth VP9 (180P)&amp;quot; data-shorttitle=&amp;quot;VP9 180P&amp;quot; data-transcodekey=&amp;quot;180p.vp9.webm&amp;quot; data-width=&amp;quot;180&amp;quot; data-height=&amp;quot;180&amp;quot; data-bandwidth=&amp;quot;200328&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.240p.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp8, vorbis&amp;amp;quot;&amp;quot; data-title=&amp;quot;Small WebM (240P)&amp;quot; data-shorttitle=&amp;quot;WebM 240P&amp;quot; data-transcodekey=&amp;quot;240p.webm&amp;quot; data-width=&amp;quot;240&amp;quot; data-height=&amp;quot;240&amp;quot; data-bandwidth=&amp;quot;256200&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.240p.vp9.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp9, opus&amp;amp;quot;&amp;quot; data-title=&amp;quot;Small VP9 (240P)&amp;quot; data-shorttitle=&amp;quot;VP9 240P&amp;quot; data-transcodekey=&amp;quot;240p.vp9.webm&amp;quot; data-width=&amp;quot;240&amp;quot; data-height=&amp;quot;240&amp;quot; data-bandwidth=&amp;quot;319704&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.360p.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp8, vorbis&amp;amp;quot;&amp;quot; data-title=&amp;quot;WebM (360P)&amp;quot; data-shorttitle=&amp;quot;WebM 360P&amp;quot; data-transcodekey=&amp;quot;360p.webm&amp;quot; data-width=&amp;quot;360&amp;quot; data-height=&amp;quot;360&amp;quot; data-bandwidth=&amp;quot;509984&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;source src=&amp;quot;//upload.wikimedia.org/wikipedia/commons/transcoded/4/43/Boids_OpenGL_example.webm/Boids_OpenGL_example.webm.360p.vp9.webm&amp;quot; type=&amp;quot;video/webm; codecs=&amp;amp;quot;vp9, opus&amp;amp;quot;&amp;quot; data-title=&amp;quot;VP9 (360P)&amp;quot; data-shorttitle=&amp;quot;VP9 360P&amp;quot; data-transcodekey=&amp;quot;360p.vp9.webm&amp;quot; data-width=&amp;quot;360&amp;quot; data-height=&amp;quot;360&amp;quot; data-bandwidth=&amp;quot;638248&amp;quot; data-framerate=&amp;quot;25&amp;quot;/&amp;gt;&amp;lt;/video&amp;gt;&amp;lt;/div&amp;gt;&quot;&gt;&lt;img alt=&quot;File:Boids OpenGL example.webm&quot; style=&quot;width:220px;height:220px&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Boids_OpenGL_example.webm/220px--Boids_OpenGL_example.webm.jpg&quot;/&gt;&lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/4/43/Boids_OpenGL_example.webm&quot; title=&quot;Play media&quot; target=&quot;new&quot;&gt;&lt;span class=&quot;play-btn-large&quot;&gt;&lt;span class=&quot;mw-tmh-playtext&quot;&gt;Play media&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;  &lt;div class=&quot;thumbcaption&quot;&gt;A Boids example created in &lt;a href=&quot;https://en.wikipedia.org/wiki/OpenGL&quot; title=&quot;OpenGL&quot;&gt;OpenGL&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;Boids&lt;/b&gt; is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Artificial_life&quot; title=&quot;Artificial life&quot;&gt;artificial life&lt;/a&gt; program, developed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Craig_Reynolds_(computer_graphics)&quot; title=&quot;Craig Reynolds (computer graphics)&quot;&gt;Craig Reynolds&lt;/a&gt; in 1986, which simulates the &lt;a href=&quot;https://en.wikipedia.org/wiki/Flocking_(behavior)&quot; title=&quot;Flocking (behavior)&quot;&gt;flocking&lt;/a&gt; behaviour of &lt;a href=&quot;https://en.wikipedia.org/wiki/Bird&quot; title=&quot;Bird&quot;&gt;birds&lt;/a&gt;. His paper on this topic was published in 1987 in the proceedings of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Association_for_Computing_Machinery&quot; title=&quot;Association for Computing Machinery&quot;&gt;ACM&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/SIGGRAPH&quot; title=&quot;SIGGRAPH&quot;&gt;SIGGRAPH&lt;/a&gt; conference. &lt;sup id=&quot;cite_ref-1&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;
The name &quot;boid&quot; corresponds to a shortened version of &quot;bird-oid object&quot;, which refers to a bird-like object.&lt;sup id=&quot;cite_ref-2&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; Incidentally, &quot;boid&quot; is also a New York Metropolitan dialect pronunciation for &quot;bird&quot;.
&lt;/p&gt;
&lt;style data-mw-deduplicate=&quot;TemplateStyles:r923042769/mw-parser-output/.tmulti&quot;&gt;&lt;![CDATA[.mw-parser-output .tmulti .thumbinner{display:flex;flex-direction:column}.mw-parser-output .tmulti .trow{display:flex;flex-direction:row;clear:left;flex-wrap:wrap;width:100%;box-sizing:border-box}.mw-parser-output .tmulti .tsingle{margin:1px;float:left}.mw-parser-output .tmulti .theader{clear:both;font-weight:bold;text-align:center;align-self:center;background-color:transparent;width:100%}.mw-parser-output .tmulti .thumbcaption{text-align:left;background-color:transparent}.mw-parser-output .tmulti .thumbcaption-center{text-align:center;background-color:transparent}.mw-parser-output .tmulti .text-align-left{text-align:left}.mw-parser-output .tmulti .text-align-right{text-align:right}.mw-parser-output .tmulti .text-align-center{text-align:center}@media all and (max-width:720px){.mw-parser-output .tmulti .thumbinner{width:100%!important;box-sizing:border-box;max-width:none!important;align-items:center}.mw-parser-output .tmulti .trow{justify-content:center}.mw-parser-output .tmulti .tsingle{float:none!important;max-width:100%!important;box-sizing:border-box;text-align:center}.mw-parser-output .tmulti .thumbcaption{text-align:center}}]]&gt;&lt;/style&gt;&lt;div class=&quot;thumb tmulti tright&quot;&gt;&lt;div class=&quot;thumbinner&quot; style=&quot;width:204px;max-width:204px&quot;&gt;&lt;div class=&quot;trow&quot;&gt;&lt;div class=&quot;theader&quot; style=&quot;text-align:center;background-color:transparent&quot;&gt;Rules applied in simple Boids&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;trow&quot;&gt;&lt;div class=&quot;tsingle&quot; style=&quot;width:202px;max-width:202px&quot;&gt;&lt;div class=&quot;thumbimage&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/File:Rule_separation.gif&quot; class=&quot;image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Rule_separation.gif/200px-Rule_separation.gif&quot; decoding=&quot;async&quot; width=&quot;200&quot; height=&quot;134&quot; srcset=&quot;//upload.wikimedia.org/wikipedia/commons/e/e1/Rule_separation.gif 1.5x&quot; data-file-width=&quot;217&quot; data-file-height=&quot;145&quot;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;thumbcaption&quot;&gt;Separation&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;trow&quot;&gt;&lt;div class=&quot;tsingle&quot; style=&quot;width:202px;max-width:202px&quot;&gt;&lt;div class=&quot;thumbimage&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/File:Rule_alignment.gif&quot; class=&quot;image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Rule_alignment.gif/200px-Rule_alignment.gif&quot; decoding=&quot;async&quot; width=&quot;200&quot; height=&quot;134&quot; srcset=&quot;//upload.wikimedia.org/wikipedia/commons/e/e1/Rule_alignment.gif 1.5x&quot; data-file-width=&quot;217&quot; data-file-height=&quot;145&quot;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;thumbcaption&quot;&gt;Alignment&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;trow&quot;&gt;&lt;div class=&quot;tsingle&quot; style=&quot;width:202px;max-width:202px&quot;&gt;&lt;div class=&quot;thumbimage&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/File:Rule_cohesion.gif&quot; class=&quot;image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Rule_cohesion.gif/200px-Rule_cohesion.gif&quot; decoding=&quot;async&quot; width=&quot;200&quot; height=&quot;134&quot; srcset=&quot;//upload.wikimedia.org/wikipedia/commons/2/2b/Rule_cohesion.gif 1.5x&quot; data-file-width=&quot;217&quot; data-file-height=&quot;145&quot;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;thumbcaption&quot;&gt;Cohesion&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As with most artificial life simulations, Boids is an example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Emergence&quot; title=&quot;Emergence&quot;&gt;emergent&lt;/a&gt; behavior; that is, the complexity of Boids arises from the interaction of individual agents (the boids, in this case) adhering to a set of simple rules.  The rules applied in the simplest Boids world are as follows:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;b&gt;separation&lt;/b&gt;: &lt;a href=&quot;https://en.wiktionary.org/wiki/steer#Verb_2&quot; class=&quot;extiw&quot; title=&quot;wikt:steer&quot;&gt;steer&lt;/a&gt; to avoid crowding local flockmates&lt;/li&gt;
&lt;li&gt;&lt;b&gt;alignment&lt;/b&gt;: steer towards the average heading of local flockmates&lt;/li&gt;
&lt;li&gt;&lt;b&gt;cohesion&lt;/b&gt;: steer to move towards the average position (center of mass) of local flockmates&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;More complex rules can be added, such as obstacle avoidance and goal seeking.
&lt;/p&gt;&lt;p&gt;The basic model has been extended in several different ways since Reynolds proposed it. For instance, Delgado-Mata et al.&lt;sup id=&quot;cite_ref-3&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;
extended the basic model to incorporate the effects of fear. Olfaction was used to transmit emotion between animals, through pheromones modelled as particles in a free expansion gas. Hartman and Benes&lt;sup id=&quot;cite_ref-4&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;
introduced a complementary force to the alignment that they call the change of leadership. This steer defines the chance of the boid to become a leader and try to escape.
&lt;/p&gt;&lt;p&gt;The movement of Boids can be characterized as either chaotic (splitting groups and wild behaviour) or orderly. Unexpected behaviours, such as splitting flocks and reuniting after avoiding obstacles, can be considered emergent.
&lt;/p&gt;&lt;p&gt;The boids framework is often used in computer graphics, providing realistic-looking representations of flocks of birds and other creatures, such as schools of fish or herds of animals. It was for instance used in the 1998 video game &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Half-Life_(video_game)&quot; title=&quot;Half-Life (video game)&quot;&gt;Half-Life&lt;/a&gt;&lt;/i&gt; for the flying bird-like creatures seen at the end of the game on &lt;a href=&quot;https://en.wikipedia.org/wiki/Locations_of_Half-Life#Xen&quot; title=&quot;Locations of Half-Life&quot;&gt;Xen&lt;/a&gt;, named &quot;boid&quot; in the game files.
&lt;/p&gt;&lt;p&gt;The Boids model can be used for direct control and stabilization of teams of simple Unmanned Ground Vehicles (UGV)&lt;sup id=&quot;cite_ref-5&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt; or Micro Aerial Vehicles (MAV)&lt;sup id=&quot;cite_ref-6&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_robotics&quot; title=&quot;Swarm robotics&quot;&gt;swarm robotics&lt;/a&gt;. For stabilization of heterogeneous UAV-UGV teams, the model was adapted for using onboard relative localization by Saska et al.&lt;sup id=&quot;cite_ref-7&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-7&quot;&gt;[7]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;At the time of proposal, Reynolds' approach represented a giant step forward compared to the traditional techniques used in computer animation for motion pictures. The first animation created with the model was &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Stanley_and_Stella_in:_Breaking_the_Ice&quot; title=&quot;Stanley and Stella in: Breaking the Ice&quot;&gt;Stanley and Stella in: Breaking the Ice&lt;/a&gt;&lt;/i&gt; (1987), followed by a feature film debut in &lt;a href=&quot;https://en.wikipedia.org/wiki/Tim_Burton&quot; title=&quot;Tim Burton&quot;&gt;Tim Burton&lt;/a&gt;'s film &lt;i&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Batman_Returns&quot; title=&quot;Batman Returns&quot;&gt;Batman Returns&lt;/a&gt;&lt;/i&gt; (1992) with computer generated bat swarms and armies of penguins marching through the streets of Gotham City.&lt;sup id=&quot;cite_ref-8&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-8&quot;&gt;[8]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;The boids model has been used for other interesting applications. It has been applied to automatically program Internet multi-channel radio stations.&lt;sup id=&quot;cite_ref-9&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-9&quot;&gt;[9]&lt;/a&gt;&lt;/sup&gt;
It has also been used for visualizing information&lt;sup id=&quot;cite_ref-10&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-10&quot;&gt;[10]&lt;/a&gt;&lt;/sup&gt;
and for optimization tasks.&lt;sup id=&quot;cite_ref-11&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_note-11&quot;&gt;[11]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;See_also&quot;&gt;See also&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_intelligence&quot; title=&quot;Swarm intelligence&quot;&gt;Swarm intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Collective_cell_migration&quot; title=&quot;Collective cell migration&quot;&gt;Collective cell migration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;References&quot;&gt;References&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;reflist&quot; style=&quot;list-style-type: decimal;&quot;&gt;
&lt;div class=&quot;mw-references-wrap mw-references-columns&quot;&gt;&lt;ol class=&quot;references&quot;&gt;&lt;li id=&quot;cite_note-1&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-1&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation book&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Craig_Reynolds_(computer_graphics)&quot; title=&quot;Craig Reynolds (computer graphics)&quot;&gt;Reynolds, Craig&lt;/a&gt; (1987). &lt;i&gt;Flocks, herds and schools: A distributed behavioral model&lt;/i&gt;. &lt;i&gt;SIGGRAPH '87: Proceedings of the 14th Annual Conference on Computer Graphics and Interactive Techniques&lt;/i&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Association_for_Computing_Machinery&quot; title=&quot;Association for Computing Machinery&quot;&gt;Association for Computing Machinery&lt;/a&gt;. pp. 25–34. &lt;a href=&quot;https://en.wikipedia.org/wiki/CiteSeerX&quot; title=&quot;CiteSeerX&quot;&gt;CiteSeerX&lt;/a&gt; &lt;span class=&quot;cs1-lock-free&quot; title=&quot;Freely accessible&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.103.7187&quot;&gt;10.1.1.103.7187&lt;/a&gt;&lt;/span&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1145%2F37401.37406&quot;&gt;10.1145/37401.37406&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/International_Standard_Book_Number&quot; title=&quot;International Standard Book Number&quot;&gt;ISBN&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Special:BookSources/978-0-89791-227-3&quot; title=&quot;Special:BookSources/978-0-89791-227-3&quot;&gt;&lt;bdi&gt;978-0-89791-227-3&lt;/bdi&gt;&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=book&amp;amp;rft.btitle=Flocks%2C+herds+and+schools%3A+A+distributed+behavioral+model.&amp;amp;rft.pages=25-34&amp;amp;rft.pub=Association+for+Computing+Machinery&amp;amp;rft.date=1987&amp;amp;rft_id=%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.103.7187&amp;amp;rft_id=info%3Adoi%2F10.1145%2F37401.37406&amp;amp;rft.isbn=978-0-89791-227-3&amp;amp;rft.aulast=Reynolds&amp;amp;rft.aufirst=Craig&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;style data-mw-deduplicate=&quot;TemplateStyles:r935243608&quot;&gt;&lt;![CDATA[.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output .citation q{quotes:&quot;\&quot;&quot;&quot;\&quot;&quot;&quot;'&quot;&quot;'&quot;}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png&quot;)no-repeat;background-position:right .1em center}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png&quot;)no-repeat;background-position:right .1em center}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png&quot;)no-repeat;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-ws-icon a{background:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/12px-Wikisource-logo.svg.png&quot;)no-repeat;background-position:right .1em center}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-maint{display:none;color:#33aa33;margin-left:0.3em}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}]]&gt;&lt;/style&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-2&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-2&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation journal&quot;&gt;Banks, Alec; Vincent, Jonathan; Anyakoha, Chukwudi (July 2007). &quot;A review of particle swarm optimization. Part I: background and development&quot;. &lt;i&gt;Natural Computing&lt;/i&gt;. &lt;b&gt;6&lt;/b&gt; (4): 467–484. &lt;a href=&quot;https://en.wikipedia.org/wiki/CiteSeerX&quot; title=&quot;CiteSeerX&quot;&gt;CiteSeerX&lt;/a&gt; &lt;span class=&quot;cs1-lock-free&quot; title=&quot;Freely accessible&quot;&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.605.5879&quot;&gt;10.1.1.605.5879&lt;/a&gt;&lt;/span&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1007%2Fs11047-007-9049-5&quot;&gt;10.1007/s11047-007-9049-5&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=Natural+Computing&amp;amp;rft.atitle=A+review+of+particle+swarm+optimization.+Part+I%3A+background+and+development&amp;amp;rft.volume=6&amp;amp;rft.issue=4&amp;amp;rft.pages=467-484&amp;amp;rft.date=2007-07&amp;amp;rft_id=%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.605.5879&amp;amp;rft_id=info%3Adoi%2F10.1007%2Fs11047-007-9049-5&amp;amp;rft.aulast=Banks&amp;amp;rft.aufirst=Alec&amp;amp;rft.au=Vincent%2C+Jonathan&amp;amp;rft.au=Anyakoha%2C+Chukwudi&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-3&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-3&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;
&lt;cite class=&quot;citation journal&quot;&gt;Delgado-Mata, Carlos; Martinez, Jesus Ibanez; Bee, Simon; Ruiz-Rodarte, Rocio; Aylett, Ruth (2007). &quot;On the use of Virtual Animals with Artificial Fear in Virtual Environments&quot;. &lt;i&gt;New Generation Computing&lt;/i&gt;. &lt;b&gt;25&lt;/b&gt; (2): 145–169. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1007%2Fs00354-007-0009-5&quot;&gt;10.1007/s00354-007-0009-5&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=New+Generation+Computing&amp;amp;rft.atitle=On+the+use+of+Virtual+Animals+with+Artificial+Fear+in+Virtual+Environments&amp;amp;rft.volume=25&amp;amp;rft.issue=2&amp;amp;rft.pages=145-169&amp;amp;rft.date=2007&amp;amp;rft_id=info%3Adoi%2F10.1007%2Fs00354-007-0009-5&amp;amp;rft.aulast=Delgado-Mata&amp;amp;rft.aufirst=Carlos&amp;amp;rft.au=Martinez%2C+Jesus+Ibanez&amp;amp;rft.au=Bee%2C+Simon&amp;amp;rft.au=Ruiz-Rodarte%2C+Rocio&amp;amp;rft.au=Aylett%2C+Ruth&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-4&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-4&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;
&lt;cite class=&quot;citation journal&quot;&gt;Hartman, Christopher; Benes̆, Bedr̆ich (July 2006). &quot;Autonomous boids&quot;. &lt;i&gt;Computer Animation and Virtual Worlds&lt;/i&gt;. &lt;b&gt;17&lt;/b&gt; (3–4): 199–206. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1002%2Fcav.123&quot;&gt;10.1002/cav.123&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=Computer+Animation+and+Virtual+Worlds&amp;amp;rft.atitle=Autonomous+boids&amp;amp;rft.volume=17&amp;amp;rft.issue=3%E2%80%934&amp;amp;rft.pages=199-206&amp;amp;rft.date=2006-07&amp;amp;rft_id=info%3Adoi%2F10.1002%2Fcav.123&amp;amp;rft.aulast=Hartman&amp;amp;rft.aufirst=Christopher&amp;amp;rft.au=Benes%CC%86%2C+Bedr%CC%86ich&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-5&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-5&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation conference&quot;&gt;Min, Hongkyu; Wang, Zhidong (2011). &lt;i&gt;Design and analysis of Group Escape Behavior for distributed autonomous mobile robots&lt;/i&gt;. IEEE International Conference on Robotics and Automation (ICRA). &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1109%2FICRA.2011.5980123&quot;&gt;10.1109/ICRA.2011.5980123&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=conference&amp;amp;rft.btitle=Design+and+analysis+of+Group+Escape+Behavior+for+distributed+autonomous+mobile+robots&amp;amp;rft.date=2011&amp;amp;rft_id=info%3Adoi%2F10.1109%2FICRA.2011.5980123&amp;amp;rft.aulast=Min&amp;amp;rft.aufirst=Hongkyu&amp;amp;rft.au=Wang%2C+Zhidong&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-6&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-6&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation conference&quot;&gt;Saska, Martin; Jan, Vakula; Libor, Preucil (2014). &lt;i&gt;Swarms of micro aerial vehicles stabilized under a visual relative localization&lt;/i&gt;. IEEE International Conference on Robotics and Automation (ICRA). &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1109%2FICRA.2014.6907374&quot;&gt;10.1109/ICRA.2014.6907374&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=conference&amp;amp;rft.btitle=Swarms+of+micro+aerial+vehicles+stabilized+under+a+visual+relative+localization&amp;amp;rft.date=2014&amp;amp;rft_id=info%3Adoi%2F10.1109%2FICRA.2014.6907374&amp;amp;rft.aulast=Saska&amp;amp;rft.aufirst=Martin&amp;amp;rft.au=Jan%2C+Vakula&amp;amp;rft.au=Libor%2C+Preucil&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-7&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-7&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation conference&quot;&gt;Saska, Martin; Vojtech, Vonasek; Tomas, Krajnik; Libor, Preucil (2012). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://labe.felk.cvut.cz/~tkrajnik/ardrone/articles/formace.pdf&quot;&gt;&lt;i&gt;Coordination and Navigation of Heterogeneous UAVs-UGVs Teams Localized by a Hawk-Eye Approach&lt;/i&gt;&lt;/a&gt; &lt;span class=&quot;cs1-format&quot;&gt;(PDF)&lt;/span&gt;. IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS).&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=conference&amp;amp;rft.btitle=Coordination+and+Navigation+of+Heterogeneous+UAVs-UGVs+Teams+Localized+by+a+Hawk-Eye+Approach&amp;amp;rft.date=2012&amp;amp;rft.aulast=Saska&amp;amp;rft.aufirst=Martin&amp;amp;rft.au=Vojtech%2C+Vonasek&amp;amp;rft.au=Tomas%2C+Krajnik&amp;amp;rft.au=Libor%2C+Preucil&amp;amp;rft_id=http%3A%2F%2Flabe.felk.cvut.cz%2F~tkrajnik%2Fardrone%2Farticles%2Fformace.pdf&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-8&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-8&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite class=&quot;citation journal&quot;&gt;Lebar Bajec, Iztok; Heppner, Frank H. (2009). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://lrss.fri.uni-lj.si/people/ilbajec/papers/ilb_ab09.pdf&quot;&gt;&quot;Organized flight in birds&quot;&lt;/a&gt; &lt;span class=&quot;cs1-format&quot;&gt;(PDF)&lt;/span&gt;. &lt;i&gt;Animal Behaviour&lt;/i&gt;. &lt;b&gt;78&lt;/b&gt; (4): 777–789. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1016%2Fj.anbehav.2009.07.007&quot;&gt;10.1016/j.anbehav.2009.07.007&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=Animal+Behaviour&amp;amp;rft.atitle=Organized+flight+in+birds&amp;amp;rft.volume=78&amp;amp;rft.issue=4&amp;amp;rft.pages=777-789&amp;amp;rft.date=2009&amp;amp;rft_id=info%3Adoi%2F10.1016%2Fj.anbehav.2009.07.007&amp;amp;rft.aulast=Lebar+Bajec&amp;amp;rft.aufirst=Iztok&amp;amp;rft.au=Heppner%2C+Frank+H.&amp;amp;rft_id=http%3A%2F%2Flrss.fri.uni-lj.si%2Fpeople%2Filbajec%2Fpapers%2Filb_ab09.pdf&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-9&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-9&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;
&lt;cite class=&quot;citation conference&quot;&gt;Ibáñez, Jesús; Gómez-Skarmeta, Antonio F.; Blat, Josep (2003). &quot;DJ-boids: emergent collective behavior as multichannel radio station programming&quot;. &lt;i&gt;Proceedings of the 8th international conference on Intelligent User Interfaces&lt;/i&gt;. pp. 248–250. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1145%2F604045.604089&quot;&gt;10.1145/604045.604089&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=conference&amp;amp;rft.atitle=DJ-boids%3A+emergent+collective+behavior+as+multichannel+radio+station+programming&amp;amp;rft.btitle=Proceedings+of+the+8th+international+conference+on+Intelligent+User+Interfaces&amp;amp;rft.pages=248-250&amp;amp;rft.date=2003&amp;amp;rft_id=info%3Adoi%2F10.1145%2F604045.604089&amp;amp;rft.aulast=Ib%C3%A1%C3%B1ez&amp;amp;rft.aufirst=Jes%C3%BAs&amp;amp;rft.au=G%C3%B3mez-Skarmeta%2C+Antonio+F.&amp;amp;rft.au=Blat%2C+Josep&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-10&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-10&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;
&lt;cite class=&quot;citation conference&quot;&gt;Moere, A V (2004). &quot;Time-Varying Data Visualization Using Information Flocking Boids&quot;. &lt;i&gt;Proceedings of the IEEE Symposium on Information Visualization&lt;/i&gt;. pp. 97–104. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1109%2FINFVIS.2004.65&quot;&gt;10.1109/INFVIS.2004.65&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=conference&amp;amp;rft.atitle=Time-Varying+Data+Visualization+Using+Information+Flocking+Boids&amp;amp;rft.btitle=Proceedings+of+the+IEEE+Symposium+on+Information+Visualization&amp;amp;rft.pages=97-104&amp;amp;rft.date=2004&amp;amp;rft_id=info%3Adoi%2F10.1109%2FINFVIS.2004.65&amp;amp;rft.aulast=Moere&amp;amp;rft.aufirst=A+V&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-11&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Boids#cite_ref-11&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;
&lt;cite class=&quot;citation journal&quot;&gt;Cui, Zhihua; Shi, Zhongzhi (2009). &quot;Boid particle swarm optimisation&quot;. &lt;i&gt;International Journal of Innovative Computing and Applications&lt;/i&gt;. &lt;b&gt;2&lt;/b&gt; (2): 77–85. &lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_object_identifier&quot; title=&quot;Digital object identifier&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1504%2FIJICA.2009.031778&quot;&gt;10.1504/IJICA.2009.031778&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=International+Journal+of+Innovative+Computing+and+Applications&amp;amp;rft.atitle=Boid+particle+swarm+optimisation&amp;amp;rft.volume=2&amp;amp;rft.issue=2&amp;amp;rft.pages=77-85&amp;amp;rft.date=2009&amp;amp;rft_id=info%3Adoi%2F10.1504%2FIJICA.2009.031778&amp;amp;rft.aulast=Cui&amp;amp;rft.aufirst=Zhihua&amp;amp;rft.au=Shi%2C+Zhongzhi&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ABoids&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r935243608&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;External_links&quot;&gt;External links&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://www.red3d.com/cwr/boids/&quot;&gt;Craig Reynolds' Boids page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://www.vergenet.net/~conrad/boids/pseudocode.html&quot;&gt;Explanation of algorithm in pseudocode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://gpolo.github.com/birdflocking&quot;&gt;JavaScript implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://web.archive.org/web/20080205014305/http://www.navgen.com/3d_boids/&quot;&gt;3D Boids Simulation using OpenGL, used by the BBC's Natural History Unit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://black-square.github.io/BirdFlock/&quot;&gt;Live In-Browser 3D Simulation of Bird Flocking Behavior in Unity3D&lt;/a&gt; – Open Source implementation for Windows, Linux and Mac&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://github.com/piskvorky/PredatorPrey&quot;&gt;UNIX+Windows open source implementation in C++, using OpenGL and simulation controls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://github.com/tofti/javafx-boids&quot;&gt;A java implementation using the javafx API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GLSchool - part of &lt;a href=&quot;https://en.wikipedia.org/wiki/XScreenSaver&quot; title=&quot;XScreenSaver&quot;&gt;XScreenSaver&lt;/a&gt; software&lt;/li&gt;&lt;/ul&gt;&lt;div role=&quot;navigation&quot; class=&quot;navbox&quot; aria-labelledby=&quot;Swarming&quot; style=&quot;padding:3px&quot;&gt;&lt;table class=&quot;nowraplinks mw-collapsible autocollapse navbox-inner&quot; style=&quot;border-spacing:0;background:transparent;color:inherit&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th scope=&quot;col&quot; class=&quot;navbox-title&quot; colspan=&quot;3&quot;&gt;&lt;div class=&quot;plainlinks hlist navbar mini&quot;&gt;&lt;ul&gt;&lt;li class=&quot;nv-view&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Template:Swarming&quot; title=&quot;Template:Swarming&quot;&gt;&lt;abbr title=&quot;View this template&quot; style=&quot;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;&quot;&gt;v&lt;/abbr&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;nv-talk&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Template_talk:Swarming&quot; title=&quot;Template talk:Swarming&quot;&gt;&lt;abbr title=&quot;Discuss this template&quot; style=&quot;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;&quot;&gt;t&lt;/abbr&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;nv-edit&quot;&gt;&lt;a class=&quot;external text&quot; href=&quot;https://en.wikipedia.org/w/index.php?title=Template:Swarming&amp;amp;action=edit&quot;&gt;&lt;abbr title=&quot;Edit this template&quot; style=&quot;;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;&quot;&gt;e&lt;/abbr&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div id=&quot;Swarming&quot; style=&quot;font-size:114%;margin:0 4em&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_behaviour&quot; title=&quot;Swarm behaviour&quot;&gt;Swarming&lt;/a&gt;&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_behaviour#Biological_swarming&quot; title=&quot;Swarm behaviour&quot;&gt;Biological swarming&lt;/a&gt;&lt;/th&gt;&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Agent-based_model_in_biology&quot; title=&quot;Agent-based model in biology&quot;&gt;Agent-based model in biology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bait_ball&quot; title=&quot;Bait ball&quot;&gt;Bait ball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Collective_animal_behavior&quot; title=&quot;Collective animal behavior&quot;&gt;Collective animal behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Feeding_frenzy&quot; title=&quot;Feeding frenzy&quot;&gt;Feeding frenzy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Flock_(birds)&quot; title=&quot;Flock (birds)&quot;&gt;Flock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Flocking_(behavior)&quot; title=&quot;Flocking (behavior)&quot;&gt;Flocking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Herd&quot; title=&quot;Herd&quot;&gt;Herd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Herd_behavior&quot; title=&quot;Herd behavior&quot;&gt;Herd behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mixed-species_foraging_flock&quot; title=&quot;Mixed-species foraging flock&quot;&gt;Mixed-species foraging flock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mobbing_(animal_behavior)&quot; title=&quot;Mobbing (animal behavior)&quot;&gt;Mobbing behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pack_(canine)&quot; title=&quot;Pack (canine)&quot;&gt;Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pack_hunter&quot; title=&quot;Pack hunter&quot;&gt;Pack hunter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Patterns_of_self-organization_in_ants&quot; title=&quot;Patterns of self-organization in ants&quot;&gt;Patterns of self-organization in ants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shoaling_and_schooling&quot; title=&quot;Shoaling and schooling&quot;&gt;Shoaling and schooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sort_sol&quot; title=&quot;Sort sol&quot;&gt;Sort sol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Symmetry_breaking_of_escaping_ants&quot; title=&quot;Symmetry breaking of escaping ants&quot;&gt;Symmetry breaking of escaping ants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_behaviour&quot; title=&quot;Swarm behaviour&quot;&gt;Swarming behaviour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarming_(honey_bee)&quot; title=&quot;Swarming (honey bee)&quot;&gt;Swarming (honey bee)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarming_motility&quot; title=&quot;Swarming motility&quot;&gt;Swarming motility&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;navbox-image&quot; rowspan=&quot;6&quot; style=&quot;width:1px;padding:0px 0px 0px 2px&quot;&gt;&lt;div&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/File:Auklet_flock_Shumagins_1986.jpg&quot; class=&quot;image&quot;&gt;&lt;img alt=&quot;Auklet flock Shumagins 1986.jpg&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Auklet_flock_Shumagins_1986.jpg/140px-Auklet_flock_Shumagins_1986.jpg&quot; decoding=&quot;async&quot; width=&quot;140&quot; height=&quot;95&quot; srcset=&quot;//upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Auklet_flock_Shumagins_1986.jpg/210px-Auklet_flock_Shumagins_1986.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Auklet_flock_Shumagins_1986.jpg/280px-Auklet_flock_Shumagins_1986.jpg 2x&quot; data-file-width=&quot;3756&quot; data-file-height=&quot;2561&quot;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Animal_migration&quot; title=&quot;Animal migration&quot;&gt;Animal migration&lt;/a&gt;&lt;/th&gt;&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Animal_migration&quot; title=&quot;Animal migration&quot;&gt;Animal migration&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Altitudinal_migration&quot; title=&quot;Altitudinal migration&quot;&gt;altitudinal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Animal_migration_tracking&quot; title=&quot;Animal migration tracking&quot;&gt;tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Coded_wire_tag&quot; title=&quot;Coded wire tag&quot;&gt;coded wire tag&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bird_migration&quot; title=&quot;Bird migration&quot;&gt;Bird migration&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Category:Bird_migration_flyways&quot; title=&quot;Category:Bird migration flyways&quot;&gt;flyways&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Reverse_migration_(birds)&quot; title=&quot;Reverse migration (birds)&quot;&gt;reverse migration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cell_migration&quot; title=&quot;Cell migration&quot;&gt;Cell migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fish_migration&quot; title=&quot;Fish migration&quot;&gt;Fish migration&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Diel_vertical_migration&quot; title=&quot;Diel vertical migration&quot;&gt;diel vertical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Lessepsian_migration&quot; title=&quot;Lessepsian migration&quot;&gt;Lessepsian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Salmon_run&quot; title=&quot;Salmon run&quot;&gt;salmon run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sardine_run&quot; title=&quot;Sardine run&quot;&gt;sardine run&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Homing_(biology)&quot; title=&quot;Homing (biology)&quot;&gt;Homing&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Natal_homing&quot; title=&quot;Natal homing&quot;&gt;natal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Philopatry&quot; title=&quot;Philopatry&quot;&gt;philopatry&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Insect_migration&quot; title=&quot;Insect migration&quot;&gt;Insect migration&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Lepidoptera_migration&quot; title=&quot;Lepidoptera migration&quot;&gt;butterflies&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monarch_butterfly_migration&quot; title=&quot;Monarch butterfly migration&quot;&gt;monarch&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sea_turtle_migration&quot; title=&quot;Sea turtle migration&quot;&gt;Sea turtle migration&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_behaviour#Models&quot; title=&quot;Swarm behaviour&quot;&gt;Swarm algorithms&lt;/a&gt;&lt;/th&gt;&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Agent-based_model&quot; title=&quot;Agent-based model&quot;&gt;Agent-based models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithm&quot; class=&quot;mw-redirect&quot; title=&quot;Ant colony optimization algorithm&quot;&gt;Ant colony optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;mw-selflink selflink&quot;&gt;Boids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Crowd_simulation&quot; title=&quot;Crowd simulation&quot;&gt;Crowd simulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Particle_swarm_optimization&quot; title=&quot;Particle swarm optimization&quot;&gt;Particle swarm optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_intelligence&quot; title=&quot;Swarm intelligence&quot;&gt;Swarm intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_(simulation)&quot; title=&quot;Swarm (simulation)&quot;&gt;Swarm (simulation)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Collective_motion&quot; title=&quot;Collective motion&quot;&gt;Collective motion&lt;/a&gt;&lt;/th&gt;&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Active_matter&quot; title=&quot;Active matter&quot;&gt;Active matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Collective_motion&quot; title=&quot;Collective motion&quot;&gt;Collective motion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Self-propelled_particles&quot; title=&quot;Self-propelled particles&quot;&gt;Self-propelled particles&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Clustering_of_self-propelled_particles&quot; title=&quot;Clustering of self-propelled particles&quot;&gt;clustering&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Vicsek_model&quot; title=&quot;Vicsek model&quot;&gt;Vicsek model&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_robotics&quot; title=&quot;Swarm robotics&quot;&gt;Swarm robotics&lt;/a&gt;&lt;/th&gt;&lt;td class=&quot;navbox-list navbox-odd hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ant_robotics&quot; title=&quot;Ant robotics&quot;&gt;Ant robotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Intelligent_Small_World_Autonomous_Robots_for_Micro-manipulation&quot; title=&quot;Intelligent Small World Autonomous Robots for Micro-manipulation&quot;&gt;I-Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Microbotics&quot; title=&quot;Microbotics&quot;&gt;Microbotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Nanorobotics&quot; title=&quot;Nanorobotics&quot;&gt;Nanorobotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarm_robotics&quot; title=&quot;Swarm robotics&quot;&gt;Swarm robotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Symbrion&quot; title=&quot;Symbrion&quot;&gt;Symbrion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope=&quot;row&quot; class=&quot;navbox-group&quot; style=&quot;width:1%&quot;&gt;Related topics&lt;/th&gt;&lt;td class=&quot;navbox-list navbox-even hlist&quot; style=&quot;text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px&quot;&gt;&lt;div style=&quot;padding:0em 0.25em&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Allee_effect&quot; title=&quot;Allee effect&quot;&gt;Allee effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Animal_navigation&quot; title=&quot;Animal navigation&quot;&gt;Animal navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Collective_intelligence&quot; title=&quot;Collective intelligence&quot;&gt;Collective intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Decentralised_system&quot; title=&quot;Decentralised system&quot;&gt;Decentralised system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Eusociality&quot; title=&quot;Eusociality&quot;&gt;Eusociality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Group_size_measures&quot; title=&quot;Group size measures&quot;&gt;Group size measures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Microbial_intelligence&quot; title=&quot;Microbial intelligence&quot;&gt;Microbial intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mutualism_(biology)&quot; title=&quot;Mutualism (biology)&quot;&gt;Mutualism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Predator_satiation&quot; title=&quot;Predator satiation&quot;&gt;Predator satiation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Quorum_sensing&quot; title=&quot;Quorum sensing&quot;&gt;Quorum sensing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Spatial_organization&quot; title=&quot;Spatial organization&quot;&gt;Spatial organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Stigmergy&quot; title=&quot;Stigmergy&quot;&gt;Stigmergy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Swarming_(military)&quot; title=&quot;Swarming (military)&quot;&gt;Military swarming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Task_allocation_and_partitioning_of_social_insects&quot; title=&quot;Task allocation and partitioning of social insects&quot;&gt;Task allocation and partitioning of social insects&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;!-- 
NewPP limit report
Parsed by mw1375
Cached time: 20200328185008
Cache expiry: 2592000
Dynamic content: false
Complications: [vary&amp;#8208;revision&amp;#8208;sha1]
CPU time usage: 0.352 seconds
Real time usage: 0.483 seconds
Preprocessor visited node count: 875/1000000
Post&amp;#8208;expand include size: 38663/2097152 bytes
Template argument size: 758/2097152 bytes
Highest expansion depth: 13/40
Expensive parser function count: 3/500
Unstrip recursion depth: 1/20
Unstrip post&amp;#8208;expand size: 37187/5000000 bytes
Number of Wikibase entities loaded: 2/400
Lua time usage: 0.209/10.000 seconds
Lua memory usage: 5.17 MB/50 MB
--&gt;
&lt;!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  421.142      1 -total
 58.25%  245.303      1 Template:Reflist
 37.40%  157.515      1 Template:Cite_book
 18.09%   76.198      1 Template:Short_description
 14.24%   59.956      2 Template:Pagetype
  9.62%   40.519      5 Template:Cite_conference
  7.92%   33.336      5 Template:Cite_journal
  6.37%   26.829      1 Template:Multiple_image
  6.19%   26.061      1 Template:Use_mdy_dates
  6.10%   25.676      1 Template:Collective_animal_behaviour
--&gt;

&lt;!-- Saved in parser cache with key enwiki:pcache:idhash:404015-0!canonical and timestamp 20200328185008 and revision id 947829494
 --&gt;
&lt;/div&gt;&lt;noscript&gt;&lt;img src=&quot;https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&quot; alt=&quot;&quot; title=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; style=&quot;border: none; position: absolute;&quot;/&gt;&lt;/noscript&gt;&lt;/div&gt;
		&lt;div class=&quot;printfooter&quot;&gt;Retrieved from &quot;&lt;a dir=&quot;ltr&quot; href=&quot;https://en.wikipedia.org/w/index.php?title=Boids&amp;amp;oldid=947829494&quot;&gt;https://en.wikipedia.org/w/index.php?title=Boids&amp;amp;oldid=947829494&lt;/a&gt;&quot;&lt;/div&gt;
		
		&lt;div class=&quot;visualClear&quot;/&gt;
		
	</description>
<pubDate>Sat, 28 Mar 2020 07:30:29 +0000</pubDate>
<dc:creator>jonbaer</dc:creator>
<og:image>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Boids_OpenGL_example.webm/500px--Boids_OpenGL_example.webm.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://en.wikipedia.org/wiki/Boids</dc:identifier>
</item>
<item>
<title>FDA grants emergency use authorization for 5-13 minute Covid-19 test</title>
<link>https://www.abbott.com/corpnewsroom/product-and-innovation/detect-covid-19-in-as-little-as-5-minutes.html</link>
<guid isPermaLink="true" >https://www.abbott.com/corpnewsroom/product-and-innovation/detect-covid-19-in-as-little-as-5-minutes.html</guid>
<description>&lt;p&gt;Abbott has received emergency use authorization (EUA) from the U.S. Food and Drug Administration (FDA) for the &lt;a href=&quot;https://abbott.mediaroom.com/2020-03-27-Abbott-Launches-Molecular-Point-of-Care-Test-to-Detect-Novel-Coronavirus-in-as-Little-as-Five-Minutes&quot;&gt;fastest available molecular point-of-care test&lt;/a&gt; for the detection of novel coronavirus (COVID-19), delivering positive results in as little as five minutes and negative results in 13 minutes.&lt;/p&gt;
&lt;p&gt;What makes this test so different is where it can be used: outside the four walls of a traditional hospital such as in the physicians' office or urgent care clinics.&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&quot;https://www.alere.com/en/home/product-details/id-now-covid-19.html&quot; target=&quot;_blank&quot;&gt;Abbott ID NOW COVID-19 test&lt;/a&gt; runs on Abbott's ID NOW&lt;sup&gt;TM&lt;/sup&gt; platform—a lightweight box (6.6 pounds and the size of a small toaster) that can sit in a variety of locations.&lt;/p&gt;
&lt;p&gt;Because of its small size, it can be used in more non-traditional places where people can have their results in a matter of minutes, bringing an alternate testing technology to combat the novel coronavirus.&lt;/p&gt;
&lt;p&gt;We're ramping up production to deliver 50,000 ID NOW COVID-19 tests per day, beginning next week, to the U.S. healthcare system.&lt;/p&gt;
&lt;p&gt;This comes on the heels of our announcement last week of the availability of the Abbott RealTi&lt;em&gt;m&lt;/em&gt;e SARS-CoV-2 EUA test under FDA EUA, which runs on &lt;em&gt;m&lt;/em&gt;2000 RealTi&lt;em&gt;m&lt;/em&gt;e molecular system for centralized lab environments. Combined with ID NOW, Abbott expects to produce about 5 million tests in April.&lt;/p&gt;
&lt;p&gt;Testing remains a crucial step in controlling the novel COVID-19 pandemic. Continuing to supply healthcare providers with new technologies to help curb the spread of infection is a top priority for public health officials and healthcare providers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Taking molecular testing to the front lines&lt;/strong&gt;&lt;br/&gt;Molecular point-of-care testing for COVID-19 offers healthcare workers rapid results in more settings where people show up for care. Molecular testing technologies help detect the presence of a virus by identifying a small section of the virus' genome, then amplifying that portion until there's enough for detection. This process can cut testing wait time from hours, if not days, to as little as five minutes for positive results and 13 minutes for negative results.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/MqICkkOaNKo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;&gt;&amp;amp;amp;nbsp;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;When not being used for COVID-19 testing, ID NOW is the leading molecular point-of-care platform for Influenza A&amp;amp;B, Strep A and respiratory syncytial virus (RSV) testing. Our platform holds the largest molecular point-of-care footprint in the U.S. and is already widely available in physicians' offices, urgent care clinics, and hospital emergency departments across the country.&lt;/p&gt;
&lt;p&gt;&quot;Through the incredible work of teams across Abbott, we expect to deliver 50,000 COVID-19 tests per day to healthcare professionals on the front lines, where testing capabilities are needed most,&quot; said Chris Scoggins, senior vice president, Rapid Diagnostics, Abbott. &quot;Portable molecular testing expands the country's capacity to get people answers faster.&quot;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The ID NOW COVID-19 EUA has not been FDA cleared or approved. It has been authorized by the FDA under an emergency use authorization for use by authorized laboratories and patient care settings. The test has been authorized only for the detection of nucleic acid from SARS-CoV-2, not for any other viruses or pathogens, and is only authorized for the duration of the declaration that circumstances exist justifying the authorization of emergency use of in vitro diagnostic tests for detection and/or diagnosis of COVID-19 under Section 564(b)(1) of the Act, 21 U.S.C. § 360bbb-3(b)(1), unless the authorization is terminated or revoked sooner.&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 28 Mar 2020 01:49:23 +0000</pubDate>
<dc:creator>edouard-harris</dc:creator>
<og:title>Detect COVID-19 in as Little as 5 Minutes</og:title>
<og:description>Available on the portable ID NOW platform, Abbott's molecular COVID-19 test delivers results in minutes in a variety of healthcare settings.</og:description>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.abbott.com/corpnewsroom/product-and-innovation/detect-covid-19-in-as-little-as-5-minutes.html</dc:identifier>
</item>
<item>
<title>Zoom’s Use of Facebook’s SDK in iOS Client</title>
<link>https://blog.zoom.us/wordpress/2020/03/27/zoom-use-of-facebook-sdk-in-ios-client/</link>
<guid isPermaLink="true" >https://blog.zoom.us/wordpress/2020/03/27/zoom-use-of-facebook-sdk-in-ios-client/</guid>
<description>&lt;section class=&quot;individual&quot; readability=&quot;42.41455399061&quot;&gt;&lt;p&gt;Zoom’s Use of Facebook’s SDK in iOS Client&lt;/p&gt;

&lt;div class=&quot;individual-image&quot;&gt;&lt;img src=&quot;https://blog.zoom.us/wordpress/wp-content/uploads/2020/02/Zoom-Logo.jpg&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Zoom takes its users’ privacy extremely seriously. We would like to share a change that we have made regarding the use of Facebook’s SDK.  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We originally implemented the “Login with Facebook” feature using the Facebook SDK for iOS (Software Development Kit) in order to provide our users with another convenient way to access our platform. However, we were made aware on Wednesday, March 25, 2020, that the Facebook SDK was collecting device information unnecessary for us to provide our services. The information collected by the Facebook SDK did not include information and activities related to meetings such as attendees, names, notes, etc., but rather included information about devices such as the mobile OS type and version, the device time zone, device OS, device model and carrier, screen size, processor cores, and disk space. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Our customers’ privacy is incredibly important to us, and therefore we decided to remove the Facebook SDK in our iOS client and have reconfigured the feature so that users will still be able to log in with Facebook via their browser. Users will need to update to the latest version of our application that’s already available at 2:30 p.m. Pacific time on Friday, March 27, 2020, in order for these changes to take hold, and we strongly encourage them to do so. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Example information sent by the SDK on installation and application open and close:&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Application Bundle Identifier&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Application Instance ID&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Application Version&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Device Carrier&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Advertiser ID&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Device CPU Cores&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Device Disk Space Available&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Device Disk Space Remaining&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Device Display Dimensions&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Device Model&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Language&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Timezone&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;iOS Version&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;IP Address&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;We would like to thank Joseph Cox from Motherboard for bringing this to our attention&lt;/span&gt; &lt;a href=&quot;https://www.vice.com/en_us/article/z3b745/zoom-removes-code-that-sends-data-to-facebook&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We sincerely apologize for the concern this has caused, and remain firmly committed to the protection of our users’ privacy. We are reviewing our process and protocols for implementing these features in the future to ensure this does not happen again.&lt;/span&gt;&lt;/p&gt;


&lt;/section&gt;
</description>
<pubDate>Sat, 28 Mar 2020 00:49:57 +0000</pubDate>
<dc:creator>patrickyevsukov</dc:creator>
<og:image>https://blog.zoom.us/wordpress/wp-content/uploads/2020/02/Zoom-Logo.jpg</og:image>
<og:type>article</og:type>
<og:title>Zoom’s Use of Facebook’s SDK in iOS Client - Zoom Blog</og:title>
<og:description>Zoom takes its users’ privacy extremely seriously. We would like to share a change that we have made regarding the use of Facebook’s SDK.  </og:description>
<og:url>https://blog.zoom.us/wordpress/2020/03/27/zoom-use-of-facebook-sdk-in-ios-client/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.zoom.us/wordpress/2020/03/27/zoom-use-of-facebook-sdk-in-ios-client/</dc:identifier>
</item>
<item>
<title>New Grad vs. Senior Dev</title>
<link>https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/</link>
<guid isPermaLink="true" >https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/</guid>
<description>&lt;p&gt;A student who I used to tutor in CS occasionally sent me a meme yesterday which showed “NEW GRAD vs SENIOR DEVELOPER”; the new grad is all caps yelling&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NO! YOU CAN’T JUST USE BRUTE FORCE HERE! WE NEED TO USE SEGMENT TREES TO GET UPDATE TIME COMPLEXITY DOWN TO O(LOG N)! BREAK THE DATA INTO CHUNKS AT LEAST! OH THE INEFFICIENCY!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and the senior developer responds&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ha ha, nested for loops go brrrrrrrrrrrr…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK, that’s silly and juvenile, but… oh no, I feel a flashback coming on.&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;It is 1994 and I am a second-year CS student at my first internship at Microsoft on the Visual Basic compiler team, reading the source code for InStr for the first time. InStr is the function in Visual Basic that takes two strings, call them &lt;strong&gt;source&lt;/strong&gt; and &lt;strong&gt;query&lt;/strong&gt;, and tells you the index at which &lt;strong&gt;query&lt;/strong&gt; first appears as a substring of &lt;strong&gt;source&lt;/strong&gt;, and the implementation is naive-brute-force.&lt;/p&gt;
&lt;p&gt;I am shocked to learn this! Shocked, I tell you!&lt;/p&gt;
&lt;p&gt;Let me digress slightly here and say what the naive brute force algorithm is for this problem.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Aside: To keep it simple we’ll ignore all the difficulties inherent in this problem entailed by the fact that VB was the first Microsoft product where one version worked everywhere in the world on every version of Windows no matter how Windows was localized; systems that used Chinese DBCS character encodings ran the same VB binary as systems that used European code pages, and we had to support all these encodings plus Unicode UTF-16. As you might imagine, the string code was a bit of a mess. (And cleaning it up in VBScript was one of my first jobs as an FTE in 1996!)&lt;/p&gt;
&lt;p&gt;Today for simplicity we’ll just assume we have a flat, zero-terminated array of chars, one character per char as was originally intended.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;The &lt;em&gt;extremely&lt;/em&gt; naive algorithm for finding a string in another goes something like this pseudo-C algorithm:&lt;/p&gt;
&lt;pre&gt;
bool starts(char *source, char *query)
{
  int i = 0;
  while (query[i] != '\0')
  {
    if (source[i] != query[i])
      return false;
    i = i + 1;
  }
  return true;
}
int find(char *source, char *query)
{
  int i = 0;
  while (source[i] != '\0')
  {
    if (starts(source + i, query))
      return i;
    i = i + 1;
  }
  return -1;  
}
&lt;/pre&gt;
&lt;p&gt;The attentive reader will note that this is the aforementioned &lt;strong&gt;nested for loop&lt;/strong&gt;; I’ve just extracted the nested loop into its own helper method. The extremely attentive reader will have already noticed that I wrote a few bugs into the algorithm above; what are they?&lt;/p&gt;
&lt;p&gt;Of course there are many nano-optimizations one can perform on this algorithm if you know a few C tips and tricks; again, we’ll ignore those. It’s the algorithmic complexity I’m interested in here.&lt;/p&gt;
&lt;p&gt;The action of the algorithm is straightforward. If we want to know if query “banana” is inside source “apple banana orange” then we ask:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;does “apple banana orange” start with “banana”? No.&lt;/li&gt;
&lt;li&gt;does “pple banana orange” start with “banana”? No.&lt;/li&gt;
&lt;li&gt;does “ple banana orange” start with “banana”? No.&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;li&gt;does “banana orange” start with “banana”? Yes! We’re done.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It might not be clear why the naive algorithm is bad. The key is to think about what the worst case is. The worst case would have to be one where there is no match, because that means we have to check the most possible substrings. Of the no-match cases, what are the worst ones? The ones where &lt;strong&gt;starts&lt;/strong&gt; does the most work to return false.  For example, suppose &lt;strong&gt;source&lt;/strong&gt; is “aaaaaaaaaaaaaaaaaaaa” — twenty characters — and &lt;strong&gt;query&lt;/strong&gt; is “aaaab”. What does the naive algorithm do?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Does “aaaaaaaaaaaaaaaaaaaa” start with “aaaab”? No, but it takes five comparisons to determine that.&lt;/li&gt;
&lt;li&gt;Does “aaaaaaaaaaaaaaaaaaa” start with “aaaab”? No, but it takes five comparisons to determine that.&lt;/li&gt;
&lt;li&gt;… and so on.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In the majority of attempts it takes us the maximum number of comparisons to determine that the &lt;strong&gt;source&lt;/strong&gt; substring does not start with the &lt;strong&gt;query&lt;/strong&gt;. The naive algorithm’s worst case is O(n*m) where n is the length of &lt;strong&gt;source&lt;/strong&gt; and m is the length of the &lt;strong&gt;query&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There are a lot of obvious ways to make minor improvements to the extremely naive version above, and in fact the implementation in VB was slightly better. The implementation in VB was basically this:&lt;/p&gt;
&lt;pre&gt;
char* skipto(char *source, char c)
{
  char *result = source;
  while (*result != '\0' &amp;amp;&amp;amp; *result != c)
    result = result + 1;
  return result;
}
int find(char *source, char *query)
{
  char *current = skipto(source, query[0]);
  while (*current != '\0;)
  {
    if (starts(current, query))
      return current - source;
    current = skipto(current + 1, query[0]);
  }
  return -1;
}
&lt;/pre&gt;
&lt;p&gt;(WOW, EVEN MORE BUGS! Can you spot them? It’s maybe easier this time.)&lt;/p&gt;
&lt;p&gt;This is more complicated but not actually better algorithmically; all we’ve done is moved the initial check in &lt;strong&gt;starts&lt;/strong&gt; that checks for equality of the first letters into its own helper method. In fact, what the heck, this code looks &lt;em&gt;worse&lt;/em&gt;. It does &lt;em&gt;more work&lt;/em&gt; and is &lt;em&gt;more complicated&lt;/em&gt;. What’s going on here? We’ll come back to this.&lt;/p&gt;
&lt;p&gt;As I said, I was a second year CS student and (no surprise) a bit of a keener; I had read ahead and knew that there were string finding algorithms that are considerably better than O(n*m). The basic strategy of these better algorithms is to do some preprocessing of the strings to look for interesting features that allow you to “skip over” regions of the source string that you know cannot possibly contain the query string.&lt;/p&gt;
&lt;p&gt;This is a heavily-studied problem because, first off, obviously it is a “foundational” problem; finding substrings is useful in many other algorithms, and second, because we genuinely do have extremely difficult problems to solve in this space. “Find this DNA fragment inside this genome”, for example, involves strings that may be billions of characters long with lots of partial matches.&lt;/p&gt;
&lt;p&gt;I’m not going to go into the various different algorithms that are available to solve this problem and their many pros and cons; you can &lt;a href=&quot;https://en.wikipedia.org/wiki/String-searching_algorithm#Single-pattern_algorithms&quot;&gt;read about them on Wikipedia&lt;/a&gt; if you’re interested.&lt;/p&gt;
&lt;p&gt;Anyways, where was I, oh yes, &lt;strong&gt;CS student summer intern vs Senior Developer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I read this code and was outraged that it was not the most asymptotically efficient possible code, so I got a meeting with Tim Paterson, who had written much of the string library and had the office next to me.&lt;/p&gt;
&lt;p&gt;Let me repeat that for those youngsters in the audience here, &lt;strong&gt;TIM FREAKIN’ PATERSON.&lt;/strong&gt; Tim “QDOS” Paterson, who one fine day wrote an operating system, sold it to BillG, and that became MS-DOS, &lt;em&gt;the most popular operating system in the world.&lt;/em&gt; &lt;a href=&quot;https://ericlippert.com/2003/09/26/what-could-numeric-rounding-possibly-have-to-do-with-ms-dos/&quot;&gt;As I’ve mentioned before, Tim was very intimidating to young me and did not always suffer foolish questions gladly&lt;/a&gt;, but it turned out that in this case he was very patient with all-caps THIS IS INEFFICIENT Eric. More patient than I likely deserved.&lt;/p&gt;
&lt;p&gt;As Tim explained to me, first off, the reason why VB does this seemingly bizarre “find the first character match, then check if &lt;strong&gt;query&lt;/strong&gt; is a prefix of &lt;strong&gt;source&lt;/strong&gt;” logic is because the &lt;strong&gt;skipto&lt;/strong&gt; method is not written in the naive fashion that I showed here. &lt;strong&gt;The skipto method is a single x86 machine instruction.&lt;/strong&gt; (&lt;strong&gt;REPNE SCASB,&lt;/strong&gt; maybe? My x86 machine code knowledge was never very good. It was something in the &lt;strong&gt;REP&lt;/strong&gt; family at least.) It is &lt;em&gt;blazingly&lt;/em&gt; fast. It harnesses the power of purpose-built hardware to solve the problem of “where’s that first character at?”&lt;/p&gt;
&lt;p&gt;That explains that; it genuinely is a big perf win to let the hardware do the heavy lifting here. But what about the asymptotic problem? Well, as Tim patiently explained to me, guess what? Most VB developers are NOT asking if “aaaab” can be found in “aaaaaaa…”. The vast majority of VB developers are asking is “London” anywhere in this address, or similar problems where the strings are normal human-language strings without a lot of repetitions, and both the source and query strings are &lt;em&gt;short&lt;/em&gt;.  Like, very short. Less than 100 characters short. Fits into a cache line short.&lt;/p&gt;
&lt;p&gt;Think about it this way; most &lt;strong&gt;source&lt;/strong&gt; strings that VB developers are searching have any given character in them maybe 2% of the time, and so for whatever the start character is of the &lt;strong&gt;query&lt;/strong&gt; string, the &lt;strong&gt;skipto&lt;/strong&gt; step is going to find those 2% of possible matches &lt;em&gt;very quickly&lt;/em&gt;. And then the &lt;strong&gt;starts&lt;/strong&gt; step is the vast majority of the time going to &lt;em&gt;very quickly&lt;/em&gt; identify false matches. &lt;strong&gt;In practice the naive brute force algorithm is almost always O(n + m). &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Moreover, Tim explained to me, any solution that involves allocating a table, preprocessing strings, and so on, is going to take longer to do all that stuff than the blazingly-fast-99.9999%-of-the-time brute force algorithm takes to just give you the answer. The additional complexity is simply not worth it in scenarios that are relevant to VB developers. VB developers are developing line-of-business solutions, and their line of business is not typically genomics; if it is, they have special-purpose libraries for those problems; they’re not using &lt;strong&gt;InStr&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;And we’re back in 2020. I hope you enjoyed that trip down memory lane.&lt;/p&gt;
&lt;p&gt;It turns out that yes, fresh grads and keener interns &lt;em&gt;do&lt;/em&gt; complain to senior developers about asymptotic efficiency, and senior developers &lt;em&gt;do&lt;/em&gt; say “but nested for loops go &lt;em&gt;brrrrrrr&lt;/em&gt;” — yes, they go &lt;em&gt;brrrrrr&lt;/em&gt; extremely quickly much of the time, and senior developers know that!&lt;/p&gt;
&lt;p&gt;And now I am the senior developer, and I try to be patient with the fresh grads as my mentors were patient with me.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;UPDATE: Welcome, Hacker News readers. I always know when I’m linked from Hacker News because of the huge but short-lived spike in traffic. &lt;a href=&quot;https://news.ycombinator.com/item?id=22712178&quot;&gt;The original author of the meme that inspired this post has weighed in&lt;/a&gt;. Thanks for inspiring this trip back to a simpler time!&lt;/p&gt;


&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-67759120-6796-5e7ff3490f5e8&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20190321#blog_id=67759120&amp;amp;post_id=6796&amp;amp;origin=ericlippert.wordpress.com&amp;amp;obj_id=67759120-6796-5e7ff3490f5e8&amp;amp;domain=ericlippert.com&quot; data-name=&quot;like-post-frame-67759120-6796-5e7ff3490f5e8&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Sat, 28 Mar 2020 00:20:21 +0000</pubDate>
<dc:creator>kogir</dc:creator>
<og:type>article</og:type>
<og:title>New grad vs senior dev</og:title>
<og:url>https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/</og:url>
<og:description>A student who I used to tutor in CS occasionally sent me a meme yesterday which showed “NEW GRAD vs SENIOR DEVELOPER”; the new grad is all caps yelling NO! YOU CAN’T JUST USE BRUT…</og:description>
<og:image>https://s0.wp.com/i/blank.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/</dc:identifier>
</item>
<item>
<title>Bird lays off hundreds via Zoom call</title>
<link>https://twitter.com/mjnblack/status/1243641637420453889</link>
<guid isPermaLink="true" >https://twitter.com/mjnblack/status/1243641637420453889</guid>
<description>&lt;p&gt;Remember, don't knock someone for just laying employees off, knock them if they don't care about their employees while doing it. Closing shop is out of a lot of ppl's control rn but HOW they do it is not. Stay empathetic and offer whatever help you can.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Mar 2020 23:49:44 +0000</pubDate>
<dc:creator>benatkin</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/mjnblack/status/1243641637420453889</dc:identifier>
</item>
</channel>
</rss>