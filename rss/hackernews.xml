<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>I only use an iFrame to crawl and scrape content</title>
<link>http://www.airovic.com/itsjustaniframe.html</link>
<guid isPermaLink="true" >http://www.airovic.com/itsjustaniframe.html</guid>
<description>

Mon 23rd December, 2019 | By &lt;a href=&quot;https://www.twitter.com/betoayesa&quot; target=&quot;_blank&quot;&gt;@betoayesa&lt;/a&gt;&lt;p&gt;Injecting an iframe to any production page gives you full capabilities to automate navigaition through it, avoiding for example cross-domain blocking issues. Browser's developer tool gives you big part of all you need to complete a small crawling and scraping project.&lt;/p&gt;&lt;p&gt;Also a library like jQuery, that will allow you to manipulate and have access to the DOM, and an iframe, that will support pagination for example.&lt;/p&gt;&lt;h2&gt;üî¨Some examples using browser's developer tools&lt;/h2&gt;
Using Dev console, you can have a scraper with few lines of code. You can inject jquery on any page. Of course, with this code, you will find issues with malformed urls, browser errors that will block everything else, speed, and you probably get banned after a few minutes depending on the target site... but its just to show the core of the idea.&lt;h3&gt;Common lines of code&lt;/h3&gt;
Work with jQuery or whatever you want. The thing is to access the DOM to manipulate it.&lt;p&gt;Injecting jQuery:
&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot;&gt;
var urls = result = [];
$ = $ || jQuery;

if (typeof $ == &quot;undefined&quot;){
        var s = document.createElement(&quot;script&quot;);
        s.type = &quot;text/javascript&quot;;
        s.src = &quot;https://code.jquery.com/jquery-3.4.1.slim.min.js&quot;;
        document.body.appendChild((s);
}

var $iframe = $('&amp;lt;iframe id=&quot;iframe&quot;  name=&quot;iframe&quot; src=&quot;&quot;&amp;gt;').appendTo('body');
&lt;/pre&gt;
Saving, outputing results:
&lt;pre class=&quot;prettyprint&quot;&gt;
var result = []; // I will use result to store all scraped data
JSON.stringify(result); // will output JSON string in the developer's console
&lt;/pre&gt;&lt;h3&gt;Seo audit (without iframe)&lt;/h3&gt;
Simple code to get all urls from current page, then retrieve them all getting their title, h1 and h2 text and download all images. For example, quick seo audit of any site:&lt;br /&gt;Thanks god, this will be 0 level deep scraping, and you will be visiting a lot of urls = '#', so it will finish soon.
&lt;pre class=&quot;prettyprint&quot;&gt;
var urls = result = [];
$('body a').each(function(){ urls.push($(this).attr(&quot;href&quot;)); });
urls.forEach(function(url){
        $.get(url,function(body){
                var scraped ={
                        title: $(body).find('title').text(),
                        h1: $(body).find('h1').text(),
                        h2: $(body).find('h2')[0].text()                        
                };
                result.push(scraped); 
        });
});
&lt;/pre&gt;
&lt;h3&gt;üöÄ Scraping All Craiglist's housing NYC listings (with an iframe)&lt;/h3&gt;
With an iframe we can use pagination, you can keep a parent state while navigating through all site's pages. Target url: https://newyork.craigslist.org/d/apts-housing-for-rent/search/apa
&lt;pre class=&quot;prettyprint&quot;&gt;
var data = [];
var $iframe = $('&amp;lt;iframe id=&quot;iframe&quot;  name=&quot;iframe&quot; src=&quot;&quot;&amp;gt;').appendTo('body');

$iframe.on('load',function(){
        $iframe.contents().find('.result-row').each(function(){
        data.push({
                        title: $(this).find('.result-title').text(),
                        img: $(this).find('img').attr(&quot;src&quot;),
                        price: $(this).find('.result-price:first').text()
            });
        });
        
        setTimeout(function(){
                $iframe.prop(&quot;src&quot;,$iframe.contents().find('body').find('.next.button').attr(&quot;href&quot;));
        },500);
});

// And everything starts running when you set first iframe's target url
$iframe.prop(&quot;src&quot;, &quot;https://newyork.craigslist.org/d/apts-housing-for-rent/search/apa&quot;);

// data array will be collecting scraped data.
console.log(JSON.stringify(data)); // Will give you a JSON string that you can export
&lt;/pre&gt;
Attention this code won't stop, it will be going through all paginated results.
&lt;h3&gt;Scraping your own tweets on Twitter&lt;/h3&gt;
With twitter you don't need an iframe, you just need to scroll down to get more tweets. A part from it, it's just not possible to inject jQuery here, you need the http tunneling component to modify repsonse headers.
&lt;pre class=&quot;prettyprint&quot;&gt;
var data = [];
function extract(){
        var els = document.querySelectorAll('article');
        els.forEach(function(el){
                data.push(el.innerText); // I'm storing all html inside it
        });
        
        window.scrollTo(0,document.body.scrollHeight);
};

setInterval(extract,2000);
&lt;/pre&gt;
&lt;p&gt;üåü Want more examples? Ask me please &lt;a href=&quot;https://www.twitter.com/betoayesa&quot; target=&quot;_blank&quot;&gt;@betoayesa&lt;/a&gt; or &lt;a href=&quot;mailto:betolopezayesa@gmail.com&quot;&gt;betolopezayesa@gmail.com&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;‚ö†Ô∏è Mind the gap&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Big sites takes security seriously, so it's different to try to scrape twitter or google than a wordpress site. Injecting jQuery to twitter for example, isn't easy&lt;/li&gt;
&lt;li&gt;It's different to scrape data one time than setting up a process for regular extraction&lt;/li&gt;
&lt;li&gt;All Scraping scenarios are different&lt;/li&gt;
&lt;li&gt;And as they are websites, &quot;scenarios&quot; get updated over time.&lt;/li&gt;
&lt;li&gt;It's never a good idea to have a business that depends on external sources like apis or scraping&lt;/li&gt;
&lt;li&gt;There are 3 big parts on any scraping project: (a) Research target URL, (b) Craft Crawl &amp;amp; Scrape scripts and run it successfuly first time (c) Plan to maintain the scraped data&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;üëé Limitations&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;It will fail because all edge cases you need to manage (malformed urls, run time errors, ...)&lt;/li&gt;
&lt;li&gt;You need a browser, and maintain it open&lt;/li&gt;
&lt;li&gt;The iframe is slow,&lt;/li&gt;
&lt;li&gt;You cannot bypass their protections without using a HTTP Tunneling component&lt;/li&gt;
&lt;li&gt;You cannot rotate proxies&lt;/li&gt;
&lt;li&gt;You cannot manipulate http headers&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;üëå Benefits&lt;/h2&gt;
It gives me the total flexibility I find missing in other solutions. You can execute UI actions pre or post scraping the content, while having access to exact same visitor version, window object, console, all html ...
&lt;ul&gt;&lt;li&gt;All requests will be legit under any oauth or protocol. No issues with sites that needs login&lt;/li&gt;
&lt;li&gt;You can control everything in a full rendered version of the target page, ui actions, clicks... every thing inside, and most important, what to do next. You can fill forms automatically too.&lt;/li&gt;
&lt;li&gt;You can test out scraping scripts fast&lt;/li&gt;
&lt;li&gt;I'm testing the same concept inside an electron application with a native webview component and the speed improvement its impressive.&lt;/li&gt;
&lt;/ul&gt;
Benefit of having http tunneling that at the same time use rotative proxies: you are unstoppable. As you can manipulate headers, and you are showing the content inside an iframe (but in the same domain!), you have the content perfectly ready to be scraped and automated.&lt;h2&gt;üö¥ All together: Airovic.com&lt;/h2&gt;
&lt;br /&gt;Perfect for personal projects like look for real estat listings, flights prices, etc... or medium level. For bigger projects, I would use airovic to do the research, prepare and plan the project, then configure the high-frequency-high-speed scrapers (scripts that will be executed from command line or cron) to do the day to day work.&lt;p&gt;Airovic is:
&lt;/p&gt;&lt;ul&gt;&lt;li&gt;An Iframe that manage error edge cases and element inspector skills&lt;/li&gt;
&lt;li&gt;A Crawler = An iframe url queue&lt;/li&gt;
&lt;li&gt;A handleDocument( ) function that encapsulates user's function&lt;/li&gt;
&lt;li&gt;A HTTP Tunneling that gives you full control over response and headers&lt;/li&gt;
&lt;li&gt;Rotative Proxies&lt;/li&gt;
&lt;/ul&gt;
It was born from my last Crawling &amp;amp; Scraping project I had, the easiest way to get the data, was to extract a javascript variable that was loaded via ajax after the page was rendered in the browser. As I had access to the variable from the developer console, I started to use the iframe to automatize the process, because this was the straight forward solution over the others. Think on how to store thousands of JS objects, so you can read them later. CasperJS was not helpful.&lt;p&gt;üåü Help me test the beta please! I would love to read your thoughts. &lt;a href=&quot;http://www.airovic.com/&quot;&gt;www.airovic.com&lt;/a&gt;, &lt;a href=&quot;https://www.twitter.com/betoayesa&quot; target=&quot;_blank&quot;&gt;@betoayesa&lt;/a&gt; or &lt;a href=&quot;mailto:betolopezayesa@gmail.com&quot;&gt;betolopezayesa@gmail.com&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Scraping Process with Airovic, ¬øHow to use it?&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;First, start by visiting the domain or target url. The url will be shown inside the iframe &quot;previewer&quot;.&lt;/li&gt;
&lt;li&gt;Navigate through the page until you arrive to a page that has the data you need to extract&lt;/li&gt;
&lt;li&gt;Right click on all elements that you want to scrape. One by one, write down, or use the code editor, to store html selectors and what type of attribute you want to scrape (text? html? src attr? href attr?...).&lt;/li&gt;
&lt;li&gt;In fact you can just click to the selector, and new line of code will be added to code editor.&lt;/li&gt;
&lt;li&gt;Review the code that will process each page, when you are done, click on &quot;Test on current page&quot;&lt;/li&gt;
&lt;li&gt;If it says successfull, you can proceed, if not, you will need to fix your code&lt;/li&gt;
&lt;li&gt;If everything was fine, then you can click on Start Robot to open its menu&lt;/li&gt;
&lt;li&gt;You can click on list of urls on the right, or just set the url discovery option enabled&lt;/li&gt;
&lt;li&gt;Click the button to STart Crawling &amp;amp; Scraping&lt;/li&gt;
&lt;li&gt;Results will be added to &quot;Results&quot; tab. And you will be able to download everything as JSON&lt;/li&gt;
&lt;/ol&gt;&lt;br /&gt;Yep, as I re-read this, I know I need to make it easier.&lt;p&gt;Please try &lt;a href=&quot;http://www.airovic.com/&quot;&gt;airovic&lt;/a&gt;, and let me know your thoughts! ü§úü§õ &lt;a href=&quot;mailto:betolopezayesa@gmail.com&quot;&gt;betolopezayesa@gmail.com&lt;/a&gt; &lt;a href=&quot;https://www.twitter.com/betoayesa&quot; target=&quot;_blank&quot;&gt;@betoayesa&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;RoadMap&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;First thing: validate interest &amp;amp; fix bugs&lt;/li&gt;
&lt;li&gt;More work on iFrame inspector component&lt;/li&gt;
&lt;li&gt;More work on Code editor component&lt;/li&gt;
&lt;li&gt;User-friendly way of adding selectors, attributes and actions, instead of code&lt;/li&gt;
&lt;li&gt;Full scraping recipes for popular platforms&lt;/li&gt;
&lt;li&gt;Electron standalone application&lt;/li&gt;
&lt;li&gt;Release Airovic under an open source license&lt;/li&gt;
&lt;li&gt;¬øWhat happens if I use multiple iframes?&lt;/li&gt;
&lt;/ul&gt;&lt;br /&gt;&lt;h2&gt;Author&lt;/h2&gt;
&lt;a href=&quot;https://www.twitter.com/betoayesa&quot; target=&quot;_blank&quot;&gt;@betoayesa&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;mailto:betolopezayesa@gmail.com&quot;&gt;betolopezayesa@gmail.com&lt;/a&gt;&lt;p&gt;Hi! I'm Beto, as a developer I got on several crawling &amp;amp; scraping projects. The big ones were e-comprice (price monitoring service) and sporteeze (a service to monitor app store &amp;amp; android play store), but I did a lot of small-medium scraping too. I used a lot of different languages to scrape content, but mostly python, php and javascript with CasperJs. With this crawling &amp;amp; scraping tool, &lt;a href=&quot;http://www.airovic.com/&quot;&gt;airovic.com&lt;/a&gt;, I'm trying to workout another project, &lt;a href=&quot;http://natzar.co&quot; target=&quot;_blank&quot;&gt;natzar.co&lt;/a&gt;, and been using it recently to visit websites automatically checking for errors in the console, so I can send an email from &lt;a href=&quot;https://phpninja.info&quot; target=&quot;_blank&quot;&gt;phpninja.info&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Thanks for reading until here! Someone should create badges or something so we the people that reads until the end gets some recognition : )&lt;/p&gt;</description>
<pubDate>Thu, 26 Dec 2019 15:04:21 +0000</pubDate>
<dc:creator>natzar</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.airovic.com/itsjustaniframe.html</dc:identifier>
</item>
<item>
<title>OnlyKey: Open-Source Alternative to YubiKey</title>
<link>https://onlykey.io/</link>
<guid isPermaLink="true" >https://onlykey.io/</guid>
<description>‚úÖ &lt;strong&gt;PROTECT ONLINE ACCOUNTS&lt;/strong&gt; ‚Äì A hardware password manager, two-factor security key, and¬†file encryption token in one, OnlyKey can keep your accounts safe even if your computer or a website is compromised. OnlyKey is open source, verified, and trustworthy.&lt;br/&gt;‚úÖ &lt;strong&gt;UNIVERSALLY SUPPORTED&lt;/strong&gt; ‚Äì Works with all websites including Twitter, Facebook, GitHub, and Google. Onlykey supports multiple methods of two-factor authentication including FIDO2 / U2F, Yubikey OTP, TOTP, Challenge-response.&lt;br/&gt;‚úÖ &lt;strong&gt;PORTABLE PROTECTION&lt;/strong&gt; ‚Äì Extremely durable, waterproof, and tamper resistant design allows you to take your OnlyKey with you everywhere.&lt;br/&gt;‚úÖ &lt;strong&gt;PIN PROTECTED&lt;/strong&gt; ‚Äì The PIN used to unlock OnlyKey is entered directly on it. This means that if this device is stolen, data remains secure, after 10 failed attempts to unlock all data is securely erased.&lt;br/&gt;‚úÖ &lt;strong&gt;EASY LOG IN&lt;/strong&gt; ‚Äì No need to remember multiple passwords because by plugging OnlyKey to your computer, it automatically inputs your username and password. It works with Windows, Mac OS, Linux, or Chromebook, just press a button to login securely!&lt;p&gt;&lt;br/&gt;Buy¬†on Amazon¬†with free 2-day prime shipping in US&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://crp.to/Amazon-Forwarder&quot;&gt;&lt;img alt=&quot;Buy on Amazon&quot; src=&quot;https://cdn.shopify.com/s/files/1/2670/1700/files/amazon_b7b85698-6d21-48fb-998b-f3be031c0279_large.png?v=1514856579&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Dec 2019 14:54:58 +0000</pubDate>
<dc:creator>mcone</dc:creator>
<og:url>https://onlykey.io/</og:url>
<og:title>OnlyKey Hardware Password Manager | One PIN to remember</og:title>
<og:type>website</og:type>
<og:description>The only device that works everywhere to secure accounts, email, and communication online. Strong two-factor authentication and professional grade encryption. Use it to log into any device, application, or unlock encrypted drives.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://onlykey.io/</dc:identifier>
</item>
<item>
<title>Nim vs. Crystal</title>
<link>https://embark.status.im/news/2019/11/18/nim-vs-crystal-part-1-performance-interoperability/index.html</link>
<guid isPermaLink="true" >https://embark.status.im/news/2019/11/18/nim-vs-crystal-part-1-performance-interoperability/index.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://embark.status.im/assets/images/nim-crystal-header-img_NEW.jpg&quot; alt=&quot;crystal vs nim&quot;/&gt;&lt;/p&gt;&lt;p&gt;I‚Äôve been wanting to write-up a comparison on Nim and Crystal for quite some time now, and I‚Äôm happy that I‚Äôm finally able to do so. What I‚Äôve decided on doing; is breaking this up into a three part series as there are &lt;strong&gt;&lt;em&gt;SO&lt;/em&gt;&lt;/strong&gt; many features of both languages I‚Äôd like to talk about, and therein many opinions held too. I do have a habit of writing &lt;strong&gt;very&lt;/strong&gt; long articles, so I‚Äôd like to limit the topic scope, to keep each of these a little snappier!&lt;/p&gt;
&lt;p&gt;Before I go into specifics on either of these languages, I‚Äôd first like to go into my reasons for first learning both languages, and briefly touch on my past experiences with the two of them. I admit that I &lt;em&gt;have&lt;/em&gt; had more experience with Crystal than I have with Nim; however, I will give an objective view of both languages until I go into my personal preference towards the end of each article in this series.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.1333333333333&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;crystal or nim? Both super immature but fun&lt;/p&gt;
‚Äî @r4vi (@r4vi) &lt;a href=&quot;https://twitter.com/r4vi/status/874741870093623296?ref_src=twsrc%5Etfw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;June 13, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Back in mid-2017, I sent out a tweet asking my dev followers which low-level languages they would recommend I take a look at. For a while before this, I had been waiting for a new systems language for me to learn, but until this tweet, I never really found one that I was &lt;em&gt;actually&lt;/em&gt; interested in taking a look at.&lt;/p&gt;
&lt;p&gt;Naturally, both languages have a &lt;strong&gt;TONNE&lt;/strong&gt; of features, so I‚Äôm not going to go into details on things like basic types, etc. I will simply compare the biggest things that attracted me to both languages. For in-depth tutorials on the features of both langs, check out the &lt;a href=&quot;https://crystal-lang.org/reference/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Crystal Docs&lt;/a&gt;, or the &lt;a href=&quot;https://nim-lang.org/docs/lib.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nim Docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, let‚Äôs take a look at both languages, and you can make your own mind up as to which you‚Äôd rather be programming in. Maybe both. Maybe neither!&lt;/p&gt;
&lt;br/&gt;&lt;h2 id=&quot;Nim&quot;&gt;Nim&lt;/h2&gt;
&lt;p&gt;Nim is a statically-typed, imperative, systems programming language; aiming to achieve the performance of C, be as expressive as Lisp, and have a simple, clear syntax like Python. I have to say, from my experience Nim manages to &lt;strong&gt;&lt;em&gt;pretty much&lt;/em&gt;&lt;/strong&gt; fit these criterion.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;By compiling to C, Nim is able to take advantage of many features offered by modern C compilers. The primary benefits gained by this compilation model include incredible portability and optimisations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;The binaries produced by Nim have zero dependencies and are typically very small. This makes their distribution easy and keeps your users happy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When I say it &lt;em&gt;pretty much&lt;/em&gt; matches the criteria, the only statement that doesn‚Äôt quite match is achieving the performance of C. In realise this is an almost impossible task, but Nim actually did fall short on a few occasions when it came to performance. I will go into detail about this later on in the article.&lt;/p&gt;
&lt;h3 id=&quot;Installing-Nim&quot;&gt;Installing Nim&lt;/h3&gt;
&lt;p&gt;Nim is super easy to install. If you‚Äôre on Windows, &lt;a href=&quot;https://nim-lang.org/install_windows.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;head over here&lt;/a&gt;, and download/run the installer.&lt;/p&gt;
&lt;p&gt;If you‚Äôre on any other Unix-based system, you can run:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ curl https://nim-lang.org/choosenim/init.sh -sSf | sh`&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;If you‚Äôre on Mac, and with Homebrew installed, simply run:&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ brew install nim&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;You could also consider using &lt;a href=&quot;https://github.com/dom96/choosenim&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;choosenim&lt;/a&gt; to manage Nim installations in a similar way to &lt;code&gt;pyenv&lt;/code&gt; and &lt;code&gt;rustup&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Interfacing-Other-Languages&quot;&gt;Interfacing Other Languages&lt;/h3&gt;
&lt;p&gt;One of the things that attracted me to both Nim &lt;strong&gt;and&lt;/strong&gt; Crystal, was the ability to natively interface with other languages, and the &lt;strong&gt;ease&lt;/strong&gt; with which that is achieved. Nim has bidirectional interfacing not only with C, but also natively with JavaScript. Crystal natively interfaces with C, but is only unidirectional. Definitely a point scored here for Nim!&lt;/p&gt;
&lt;p&gt;When it comes to building DApps, the variety of target hardware they must be run on is already large, and growing all the time. The low-level ability to interop with other languages makes for both languages being a much more attractive proposition.&lt;/p&gt;
&lt;p&gt;For a quick demo, let‚Äôs take a look at interfacing both C and JavaScript from Nim.&lt;/p&gt;
&lt;h4 id=&quot;C-Invocation&quot;&gt;C Invocation&lt;/h4&gt;
&lt;p&gt;Firstly, create the file &lt;code&gt;logic.c&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;table readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addTwoIntegers&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Next, create the file &lt;code&gt;calculator.nim&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;table readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;9.5&quot;&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;{.compile: &quot;logic.c&quot;.}&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;proc&lt;/span&gt; addTwoIntegers(a, b: &lt;span class=&quot;built_in&quot;&gt;cint&lt;/span&gt;): &lt;span class=&quot;built_in&quot;&gt;cint&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;{.importc.}&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; isMainModule:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  echo addTwoIntegers(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Now then, with these two &lt;em&gt;very simple&lt;/em&gt; files in place, we can run:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ nim c -r calculator.nim&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The Nim compiler will compile the &lt;code&gt;logic.c&lt;/code&gt; file in addition to &lt;code&gt;calculator.nim&lt;/code&gt; and link both into an executable; which outputs &lt;code&gt;10&lt;/code&gt; when run. Very sharp, in my opinion!&lt;/p&gt;
&lt;h4 id=&quot;JavaScript-Invocation&quot;&gt;JavaScript Invocation&lt;/h4&gt;
&lt;p&gt;Even sharper, in my opinion, is the ability to interop with JavaScript. Create a file titled &lt;code&gt;host.html&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;table readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addTwoIntegers&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    {&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;calculator.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Now, create another &lt;code&gt;calculator.nim&lt;/code&gt; file with the following content (or reuse the one from the above C example):&lt;/p&gt;
&lt;table readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;8.5&quot;&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;proc&lt;/span&gt; addTwoIntegers(a, b: &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;): &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;{.importc.}&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; isMainModule:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  echo addTwoIntegers(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Compile the Nim code to JavaScript by running:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ nim js -o:calculator.js calculator.nim&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Once that‚Äôs done, go ahead and open &lt;code&gt;host.html&lt;/code&gt; in a browser and you should see the value &lt;code&gt;10&lt;/code&gt; in the browser‚Äôs console. I think this is &lt;strong&gt;REALLY&lt;/strong&gt; neat. It‚Äôs superb how easy it is to achieve that, too.&lt;/p&gt;
&lt;h3 id=&quot;Aside-‚Äì-a-Quick-not-so-Secret&quot;&gt;Aside ‚Äì a Quick (not-so) Secret:&lt;/h3&gt;
&lt;p&gt;Instead of writing out the HTML above, you could actually use &lt;strong&gt;&lt;em&gt;Nim‚Äôs native&lt;/em&gt;&lt;/strong&gt; HTML DSL:&lt;/p&gt;
&lt;table readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; html_dsl&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;html page:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  head:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    title(&lt;span class=&quot;string&quot;&gt;&quot;Title&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  body:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    p(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    p(&lt;span class=&quot;string&quot;&gt;&quot;World&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    dv:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      p &lt;span class=&quot;string&quot;&gt;&quot;Example&quot;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;echo render(page())&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Running this will output the following:&lt;/p&gt;
&lt;table readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;'has-navbar-fixed-top'&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;'has-navbar-fixed-top'&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &amp;gt;&lt;/span&gt;Hello&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &amp;gt;&lt;/span&gt;World&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Example&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;br/&gt;&lt;h2 id=&quot;Crystal&quot;&gt;Crystal&lt;/h2&gt;
&lt;p&gt;Crystal is a statically-typed, object-oriented, systems programming language; with the aim of achieving the speed and performance of c/c++, whilst having a syntax as simple, readable, and easy to learn as Ruby.&lt;/p&gt;
&lt;p&gt;I first came across Crystal when I saw &lt;a href=&quot;https://twitter.com/sferik&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@sferik&lt;/a&gt; giving a talk on it in Poland back in 2015. &lt;a href=&quot;https://www.youtube.com/watch?v=Ysm4IU4aWoQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Video here.&lt;/a&gt; It was a great talk, and sparked my interest in Crystal right there and then. When I initially explored Crystal I thought it looked awesome, but I was too busy with all the other languages I was using on a daily basis, to be able to focus my time on it properly.&lt;/p&gt;
&lt;h3 id=&quot;Installing-Crystal&quot;&gt;Installing Crystal&lt;/h3&gt;
&lt;p&gt;You can find all of the relevant instructions for installing Crystal, on the &lt;a href=&quot;https://crystal-lang.org/install/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;main website installation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are on Mac, and have Homebrew installed, you can simply run:&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ brew install crystal&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, if you are a Windows user, &lt;em&gt;for the time being&lt;/em&gt; you are out of luck, unless you use the Windows Subsystem for Linux. If I were in a more shocking/pedantic mood, I‚Äôd take a (not yet gained) point &lt;strong&gt;away&lt;/strong&gt; from Crystal here, for lack of Windows support.&lt;/p&gt;
&lt;h3 id=&quot;Interfacing-C&quot;&gt;Interfacing C&lt;/h3&gt;
&lt;p&gt;Let‚Äôs build a simple script in C that says ‚Äúhi!‚Äù. We‚Äôll then write a Crystal app to bind to our C library. This is a great starting point for anyone who wants to know about binding C in Crystal.&lt;/p&gt;
&lt;p&gt;First off, let‚Äôs create a project with Crystal‚Äôs scaffolding tool (I‚Äôll cover this feature later). Run:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ crystal init app sayhi_c&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Then head into the directory &lt;code&gt;sayhi_c/src/sayhi_c&lt;/code&gt; and let‚Äôs create a file &lt;code&gt;sayhi.c&lt;/code&gt; with the following contents:&lt;/p&gt;
&lt;table readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;7.5&quot;&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * name)&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hi %s!\n&quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Now we need to compile our C file into an object. On Ubuntu or Mac using gcc we can run:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ gcc -c sayhi.c -o sayhi.o&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Using the -o flags allow us to create an Object filetype. Once we‚Äôve got our Object file, we can bind it from within our Crystal app. Open up our &lt;code&gt;sayhi_c.cr&lt;/code&gt; file, and have it reflect the following:&lt;/p&gt;
&lt;table readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;./sayhi_c/*&quot;&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@[Link(ldflags: &lt;span class=&quot;meta-string&quot;&gt;&quot;#{__DIR__}/sayhi_c/sayhi.o&quot;&lt;/span&gt;)]&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Say&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hi&lt;/span&gt;&lt;/span&gt;(name : &lt;span class=&quot;symbol&quot;&gt;LibC:&lt;/span&gt;:Char*) : Void&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;Say.hi(&lt;span class=&quot;string&quot;&gt;&quot;Status&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;I‚Äôll mention now that there are no implicit type conversions except to_unsafe - explained here when invoking a C function: you must pass the exact type that is expected.&lt;/p&gt;
&lt;p&gt;Also worth noting at this point is that since we have built our C file into an object file, we can include it in the project directory and link from there. When we want to link dynamic libraries or installed C packages, we can just link them without including a path.&lt;/p&gt;
&lt;p&gt;So, if we build our project file and run it, we get the following:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ crystal build --release src/sayhi_c.cr&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;$ ./sayhi_c&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt; &amp;gt; Hi Status!&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;As you can see, Nim takes the winners trophy in this case, as it is &lt;strong&gt;much&lt;/strong&gt; simpler to achieve a similar goal. With Nim, we were also able to link both the Nim and C files into the same executable, which Crystal sadly cannot do.&lt;/p&gt;
&lt;br/&gt;&lt;h2 id=&quot;Performance-Tests&quot;&gt;Performance Tests&lt;/h2&gt;
&lt;h3 id=&quot;Parsing-amp-calculating-values-from-a-large-JSON-file&quot;&gt;Parsing &amp;amp; calculating values from a large JSON file:&lt;/h3&gt;
&lt;p&gt;Firstly, we need to generate our large JSON file. For this test, we‚Äôre going to generate a dataset which includes &lt;strong&gt;1 Million&lt;/strong&gt; items.&lt;/p&gt;
&lt;center/&gt;
&lt;p&gt;We can do so with the following Ruby script:&lt;/p&gt;
&lt;table readability=&quot;6&quot;&gt;&lt;tr readability=&quot;18&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;22&quot;&gt;
&lt;pre readability=&quot;17&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'json'&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;x = []&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;.times &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  h = {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;'x'&lt;/span&gt; =&amp;gt; rand,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;'y'&lt;/span&gt; =&amp;gt; rand,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;'z'&lt;/span&gt; =&amp;gt; rand,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;'name'&lt;/span&gt; =&amp;gt; (&lt;span class=&quot;string&quot;&gt;'a'&lt;/span&gt;..&lt;span class=&quot;string&quot;&gt;'z'&lt;/span&gt;).to_a.shuffle[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;].join + &lt;span class=&quot;string&quot;&gt;' '&lt;/span&gt; + rand(&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;).to_s,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;'opts'&lt;/span&gt; =&amp;gt; {&lt;span class=&quot;string&quot;&gt;'1'&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;]},&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  x &amp;lt;&amp;lt; h&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;File.open(&lt;span class=&quot;string&quot;&gt;&quot;1.json&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;'w'&lt;/span&gt;) { &lt;span class=&quot;params&quot;&gt;|f|&lt;/span&gt; f.write JSON.pretty_generate(&lt;span class=&quot;string&quot;&gt;'coordinates'&lt;/span&gt; =&amp;gt; x, &lt;span class=&quot;string&quot;&gt;'info'&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;some info&quot;&lt;/span&gt;) }&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This will generate a JSON file &lt;strong&gt;of around 212mb&lt;/strong&gt;, with the following syntax:&lt;/p&gt;
&lt;table readability=&quot;4.5&quot;&gt;&lt;tr readability=&quot;13.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;x&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.10327081810860272&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;y&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.03247172212368832&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;z&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.8155255437507467&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;scojbq 5965&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;opts&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;1&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;info&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;some info&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Now that we have our chunky JSON file; we can write our first test ‚Äì &lt;strong&gt;in Nim&lt;/strong&gt;:&lt;/p&gt;
&lt;table readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;11.5&quot;&gt;
&lt;pre readability=&quot;12&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; jobj = parseFile(&lt;span class=&quot;string&quot;&gt;&quot;1.json&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; coordinates = jobj[&lt;span class=&quot;string&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;].elems&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; len = &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;(coordinates.len)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; z = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; coord &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; coordinates:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  x += coord[&lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt;].fnum&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  y += coord[&lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt;].fnum&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  z += coord[&lt;span class=&quot;string&quot;&gt;&quot;z&quot;&lt;/span&gt;].fnum&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;echo x / len&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;echo y / len&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;echo z / len&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;And again; the same simple test, this time written &lt;strong&gt;in Crystal&lt;/strong&gt;:&lt;/p&gt;
&lt;table readability=&quot;2&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;10.5&quot;&gt;
&lt;pre readability=&quot;10&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;text = File.read(&lt;span class=&quot;string&quot;&gt;&quot;1.json&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;jobj = JSON.parse(text)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;coordinates = jobj[&lt;span class=&quot;string&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;].as_a&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;len = coordinates.size&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;x = y = z = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;coordinates.each &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |coord|&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  x += coord[&lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt;].as_f&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  y += coord[&lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt;].as_f&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  z += coord[&lt;span class=&quot;string&quot;&gt;&quot;z&quot;&lt;/span&gt;].as_f&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;p x / len&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;p y / len&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;p z / len&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;Results&quot;&gt;Results:&lt;/h3&gt;
&lt;p&gt;Building our test files into tiny release packages with the respective commands below:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ crystal build json_test.cr --release -o json_test_cr --no-debug&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ nim c -o:json_test_nim -d:danger --cc:gcc --verbosity:0 json_test.nim&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;We can then time &amp;amp; run those packages, to obtain our test results:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Time (s)&lt;/th&gt;
&lt;th&gt;Memory (Mb)&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Nim&lt;/td&gt;
&lt;td&gt;6.92&lt;/td&gt;
&lt;td&gt;1320.4&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Crystal&lt;/td&gt;
&lt;td&gt;4.58&lt;/td&gt;
&lt;td&gt;960.7&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;As you can see; in this case &lt;strong&gt;&lt;em&gt;Crystal&lt;/em&gt;&lt;/strong&gt; is the more performant language ‚Äì taking less time to execute &amp;amp; complete the test, and also fewer Megabytes in memory doing so.&lt;/p&gt;
&lt;br/&gt;&lt;h3 id=&quot;Base64-encoding-decoding-a-large-blob&quot;&gt;Base64 encoding / decoding a large blob:&lt;/h3&gt;
&lt;p&gt;In this test; we will firstly encode and then decode a string, with a current timestamp into newly allocated buffers, utilising the Base64 algorithm. For starters, let‚Äôs look at the &lt;strong&gt;&lt;em&gt;Nim&lt;/em&gt;&lt;/strong&gt; test:&lt;/p&gt;
&lt;table readability=&quot;7.5&quot;&gt;&lt;tr readability=&quot;22.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;27.5&quot;&gt;
&lt;pre readability=&quot;22&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; base64, times, strutils, strformat&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;STR_SIZE&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;131072&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TRIES&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; str = strutils.repeat('a', &lt;span class=&quot;type&quot;&gt;STR_SIZE&lt;/span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str2 = base64.encode(str)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;stdout&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;fmt&quot;encode {str[..3]}... to {str2[..3]}...: &quot;&lt;/span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = times.epochTime()&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s:&lt;span class=&quot;built_in&quot;&gt;int64&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; &lt;span class=&quot;type&quot;&gt;TRIES&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  str2 = base64.encode(str)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  s += len(str2)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;echo(&lt;span class=&quot;string&quot;&gt;fmt&quot;{s}, {formatFloat(times.epochTime() - t, ffDefault, 6)}&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str3 = base64.decode(str2)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;stdout&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;fmt&quot;decode {str2[..3]}... to {str3[..3]}...: &quot;&lt;/span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;t = times.epochTime()&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;s = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; &lt;span class=&quot;type&quot;&gt;TRIES&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  str3 = base64.decode(str2)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  s += len(str3)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;echo(&lt;span class=&quot;string&quot;&gt;fmt&quot;{s}, {formatFloat(times.epochTime() - t, ffDefault, 6)}&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;And now the same test, written in Crystal:&lt;/p&gt;
&lt;table readability=&quot;5.5&quot;&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;23&quot;&gt;
&lt;pre readability=&quot;21&quot;&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;base64&quot;&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;STR_SIZE = &lt;span class=&quot;number&quot;&gt;131072&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;TRIES = &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;str = &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt; * STR_SIZE&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;str2 = Base64.strict_encode(str)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;print &lt;span class=&quot;string&quot;&gt;&quot;encode &lt;span class=&quot;subst&quot;&gt;#{str[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]}&lt;/span&gt;... to &lt;span class=&quot;subst&quot;&gt;#{str2[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]}&lt;/span&gt;...: &quot;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;t, s = Time.local, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;TRIES.times &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |i|&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  str2 = Base64.strict_encode(str)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  s += str2.bytesize&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;puts &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;#{s}&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;#{Time.local - t}&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;str3 = Base64.decode_string(str2)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;print &lt;span class=&quot;string&quot;&gt;&quot;decode &lt;span class=&quot;subst&quot;&gt;#{str2[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]}&lt;/span&gt;... to &lt;span class=&quot;subst&quot;&gt;#{str3[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]}&lt;/span&gt;...: &quot;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;t, s = Time.local, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;TRIES.times &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |i|&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  str3 = Base64.decode_string(str2)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  s += str3.bytesize&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;puts &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;#{s}&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;#{Time.local - t}&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;Results-1&quot;&gt;Results:&lt;/h3&gt;
&lt;p&gt;We can again; build our Base64 test files into release packages with the respective commands below:&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ crystal build base64_test.cr --release -o base64_test_cr --no-debug&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;table readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;$ nim c -o:base64_test_nim -d:danger --cc:gcc --verbosity:0 base64_test.nim&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;As with our last test suite, we can then time &amp;amp; run those packages, to obtain our test results:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Time (s)&lt;/th&gt;
&lt;th&gt;Memory (Mb)&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Nim&lt;/td&gt;
&lt;td&gt;4.17&lt;/td&gt;
&lt;td&gt;6.6&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Crystal&lt;/td&gt;
&lt;td&gt;2.36&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Once again, to my surprise, Crystal came out on top. And did again and again for me, running a bunch of different tests I could scrape together from other curious devs.&lt;/p&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The summary of this first-in-series article, is most definitely one of surprise. I already knew that Crystal was a highly-performant language, and I have previously done my own research &amp;amp; testing to see how close to &lt;em&gt;C speeds&lt;/em&gt; it could achieve. That being said, I was &lt;em&gt;also&lt;/em&gt; already aware that Nim &lt;strong&gt;claims&lt;/strong&gt; close to C speeds, and that one of the language‚Äôs principals was to run well on old &amp;amp; less-performant hardware.&lt;/p&gt;
&lt;p&gt;Yet, Crystal beat not only my own expectations; but beat Nim for both memory usage &lt;strong&gt;AND&lt;/strong&gt; execution times. I really didn‚Äôt expect to see Crystal come out &lt;em&gt;this&lt;/em&gt; far ahead in performance. On the other hand, Nim came out by-far the leader when it comes to language interoperability. &lt;strong&gt;Nim makes it even easier&lt;/strong&gt; than Crystal when interfacing other langs ‚Äì not something I thought possible, given just how easy Crystal makes the task.&lt;/p&gt;
&lt;p&gt;In conclusion, it seems that we have 1 point for Nim (interoperability), and 1 point for Crystal (performance). Both languages have pleasantly surprised me, and I look forward to diving into the next topics in the series:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Part 2: Threading and Tooling&lt;/li&gt;
&lt;li&gt;Part 3: Crypto, DApps and P2P&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These two articles will be released over the next couple of days, so don‚Äôt forget to come back then to check them out!&lt;/p&gt;
&lt;p&gt;Thanks for reading - as ever, if you have any questions, please feel free to reach out at &lt;a href=&quot;https://embark.status.im/cdn-cgi/l/email-protection#a7d5c8c5cec9e7d4d3c6d3d2d489ceca&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;__cf_email__&quot; data-cfemail=&quot;22504d404b4c62515643565751&quot;&gt;[email¬†protected]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/rbin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;- &lt;strong&gt;@rbin&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Dec 2019 14:11:45 +0000</pubDate>
<dc:creator>open-source-ux</dc:creator>
<og:image>/img/share.png?v=0.0.5</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://embark.status.im/news/2019/11/18/nim-vs-crystal-part-1-performance-interoperability/index.html</dc:identifier>
</item>
<item>
<title>I love coding in C</title>
<link>https://lord-left.github.io/posts/love-coding-c.html</link>
<guid isPermaLink="true" >https://lord-left.github.io/posts/love-coding-c.html</guid>
<description>&lt;p&gt;For the first time in almost a year, I brushed up on my C fundamentals and built a few toy programs. As I played around with pointers and printed out a memory location, I experienced a literal chill down my spine. I had almost forgotten how marvelous programming in this language was.&lt;/p&gt;
&lt;p&gt;The last time I had coded anything substantive in C was almost two years ago, when I had written a Web Server for &lt;a href=&quot;http://www.cs.columbia.edu/~jae/&quot;&gt;Professor Jae‚Äôs&lt;/a&gt; (in)famous &lt;a href=&quot;http://www.cs.columbia.edu/~jae/3157/?asof=20190901&quot;&gt;system programming class&lt;/a&gt;. As a callow junior, I was baptised into a highly partisan cult of C and Unix worship, and I loved every second of it. Well, any second that didn‚Äôt involve string manipulation.&lt;/p&gt;
&lt;p&gt;In the years since, I coded less and less in C and more and more in languages like Javascript and Python. I had become estranged from low-level systems stuff. Returning to C reminded me why so many programmers love this language.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C is closest to the real&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Computer Science traffics in abstractions. As a dicipline, many of its most import conceits were theorized and proven before the existence of physical computers. Modern CS and Software Engineering retains this theoretic and abstracted quality, especially as one employs higher level languages and technologies. Almost by necessity, most programmers have a superficial conception of the vast, layered ediface of systems that enable and support their work. There isn‚Äôt anything wrong with this; abstraction is pleasurable and useful in and of itself. But there is also a pleasure to be had in being close to the metal.&lt;/p&gt;
&lt;p&gt;When I saw a memory address outputted to stdout, I felt that I was as close to the hardware that I could be without literally opening up my machine and stroking my ram modules like a crazy person. Now I did this in a Ubuntu WSL instance, so who knows what interfaces actually mediated my encounter with a memory address. The point is that aside from assembly, C gets as close as possible to the physical, tangible and real aspects of computing. There is something intoxicating in this proximity to physical components. Your virtual objects, of dubious ontology, suddenly seem as real as your motherboard.&lt;/p&gt;
&lt;p&gt;I hope that it is clear that what I am describing is fundamentally a feeling, and is as such highly subjective and is also not morally superior to any other preference. There are a lot of holes in this notion of C being ‚Äúclose to reality.‚Äù But it feels that way, and in articulating this, I hope I am able to explain some of the psychological appeal of lower level programming in C.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C as the &lt;em&gt;Ur&lt;/em&gt;-language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is another thing I love about programming in C. Because C endows a programmer with a profound degree of control over memory, you know that it is a very good choice (from the perspective of performance) for building other elemental software. C is often the language of choice for OS, language and systems development. You know you could, at least in theory, write almost everything that could be written in C - from the kernel at the bottom of your OS to the graphics library at the top. There is an immense sense of possibility here. It doesn‚Äôt actually matter if you never write a kernel module or a compiler; just knowing you could is often enough to entice you into the cult of C.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In writing this article, I am not making a partisan case for the superiority of C. Rust and other languages are rightfully questioning the propriety of C in relation to its now (in)famous memory safety, or rather lack of memory safety. Python is my other favorite language. But C will always retain a certain mystical quality in my eyes because of what I have described above. I hope I have helped decode the immense appeal of this language, born out of Bell Labs, as our dicipline hurtles away from the bare-metal physicality of lower-level computing.&lt;/p&gt;

</description>
<pubDate>Thu, 26 Dec 2019 13:43:27 +0000</pubDate>
<dc:creator>lordleft</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lord-left.github.io/posts/love-coding-c.html</dc:identifier>
</item>
<item>
<title>Dropbox Transfer</title>
<link>https://www.dropbox.com/transfer/about</link>
<guid isPermaLink="true" >https://www.dropbox.com/transfer/about</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.dropbox.com/transfer/about&quot;&gt;https://www.dropbox.com/transfer/about&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21883430&quot;&gt;https://news.ycombinator.com/item?id=21883430&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 246&lt;/p&gt;
&lt;p&gt;# Comments: 192&lt;/p&gt;
</description>
<pubDate>Thu, 26 Dec 2019 12:50:03 +0000</pubDate>
<dc:creator>sbolt</dc:creator>
<og:url>https://www.dropbox.com/transfer/about</og:url>
<og:type>website</og:type>
<og:description>Find out just how easy it is to make fast and secure file transfers to your friends, family, colleagues or another device with Dropbox as your file transfer app.</og:description>
<og:title>Dropbox Transfer</og:title>
<og:image>https://cfl.dropboxstatic.com/static/images/logo_catalog/glyph_m1%402x.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.dropbox.com/transfer/about</dc:identifier>
</item>
<item>
<title>Hepatitis C kills more Americans than all other infectious diseases combined</title>
<link>https://scopeblog.stanford.edu/2019/09/03/hepatitis-c-all-adults-in-u-s-under-80-should-be-tested/</link>
<guid isPermaLink="true" >https://scopeblog.stanford.edu/2019/09/03/hepatitis-c-all-adults-in-u-s-under-80-should-be-tested/</guid>
<description>&lt;p&gt;The &lt;a href=&quot;https://www.cdc.gov/hepatitis/hcv/index.htm&quot;&gt;hepatitis C&lt;/a&gt; virus now kills more Americans than all other reportable infectious diseases combined -- including HIV. Acute cases of HCV have increased 3.5-fold over the last decade, particularly among young, white, injection drug users.&lt;/p&gt;
&lt;p&gt;Women aged 15 to 44 have also been hit hard by the virus that is spread through contaminated blood, and the prevalence of HCV infection among women giving birth &lt;a href=&quot;https://www.cdc.gov/mmwr/volumes/66/wr/mm6618a3.htm&quot;&gt;has nearly doubled&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Those staggering details were revealed earlier this week when the &lt;a href=&quot;https://www.uspreventiveservicestaskforce.org/&quot;&gt;U.S. Preventive Services Task Force&lt;/a&gt; issued a &lt;a href=&quot;https://www.uspreventiveservicestaskforce.org/Page/Document/UpdateSummaryFinal/hepatitis-c-screening&quot;&gt;draft recommendation&lt;/a&gt; that calls on clinicians to screen all adults 18 to 79 years old for the virus, even those with no symptoms or known liver disease.&lt;/p&gt;
&lt;p&gt;The opioid epidemic has fueled what is now the most common chronic bloodborne pathogen, said Stanford Health Policy's &lt;a href=&quot;https://healthpolicy.fsi.stanford.edu/people/douglas_k_owens&quot;&gt;Douglas Owens&lt;/a&gt;, MD, chair of the independent, voluntary panel of national experts in prevention and evidence-based medicine.&lt;/p&gt;
&lt;p&gt;The Task Force, which makes recommendations followed by primary care clinicians nationwide, has until now recommended hepatitis C testing for people who are at high risk, as well as baby boomers born between 1945 and 1965.&lt;/p&gt;
&lt;p&gt;&quot;Unfortunately, HCV now affects a broader age range than previously with three times as many new infections per year,&quot; said Owens.&lt;/p&gt;
&lt;p&gt;I wondered how the dramatic increase in HCV infection was impacting clinical practices, so I turned to Stanford Medicine hepatologist &lt;a href=&quot;https://profiles.stanford.edu/amanda-cheung&quot;&gt;Amanda Cheung&lt;/a&gt;, MD.&lt;/p&gt;
&lt;p&gt;Cheung said that because patients with chronic HCV typically do not have symptoms until many decades after exposure, she hasn't yet seen the downstream impact of this new wave of infection. But once those patients discover the infection, she said, &quot;it's already started to wreak havoc on their bodies and causes development of cirrhosis, liver failure, liver cancer, or death.&quot;&lt;/p&gt;
&lt;p&gt;Cheung said the baby boomer population is a great example.&lt;/p&gt;
&lt;p&gt;&quot;Until guidelines started to advise screening for patients within this birth cohort, these patients were arriving to hepatology offices worldwide with end-stage liver disease and the patients had no clue that they harbored such a high-risk infection,&quot; she told me.&lt;/p&gt;
&lt;p&gt;Until just a few years ago, there was no universally effective treatment for hepatitis C that was well tolerated by patients, Cheung said. But the landscape has changed dramatically and clinicians are now able to successfully cure at least 95% of patients with the chronic condition with oral medications that have little or no side effects.&lt;/p&gt;
&lt;p&gt;&quot;With such an effective means for cure, it only makes sense to universally screen patients,&quot; Cheung said. &quot;Implementation of universal screening will also decrease the likelihood of primary care physicians forgetting who does or does not need screening -- and it avoids the sometimes uncomfortable discussion with the patient about why they have been labeled as high risk and needing further screening.&quot;&lt;/p&gt;
&lt;p&gt;An estimated 4.1 million people in the United States are carrying HCV antibodies; about 2.4 million are living with the virus, according to the Task Force. The HCV infection becomes chronic in 75% to 85% of cases and some of those people develop symptoms such as chronic fatigue and depression, and liver diseases that can range from cirrhosis to liver cancer.&lt;/p&gt;
&lt;p&gt;Approximately one-third of people ages 18 to 30 who inject drugs are infected with the virus; 70% to 90% of older injection-drug users are infected.&lt;/p&gt;
&lt;p&gt;I asked Owens why people who are not injection drug users should be worried or get tested. It's because, he said, some people are not aware of the risks -- such as a blood transfusion years ago -- and many people don't want to disclose injection drug use.&lt;/p&gt;
&lt;p&gt;&quot;We have evidence from modeling studies that you prevent more deaths by screening everyone than you do by picking and choosing,&quot; he told me. &quot;It also creates stigma to screen only certain people.&quot;&lt;/p&gt;
&lt;p&gt;We saw that play out with the HIV and risk-based screening only, which Owens called &quot;often ineffective,&quot; and is why the Task Force recommends universal screening for HIV today.&lt;/p&gt;
&lt;p&gt;Photo by Getty Images&lt;/p&gt;

</description>
<pubDate>Thu, 26 Dec 2019 11:57:30 +0000</pubDate>
<dc:creator>vo2maxer</dc:creator>
<og:type>article</og:type>
<og:title>Hepatitis C: All adults in U.S. - under 80 - should be tested - Scope</og:title>
<og:description>Hepatitis C has become so widespread that experts are calling on doctors to screen all adults 18 to 79, even those with no known risk factors or symptoms.</og:description>
<og:url>https://scopeblog.stanford.edu/2019/09/03/hepatitis-c-all-adults-in-u-s-under-80-should-be-tested/</og:url>
<og:image>https://scopeblog.stanford.edu/wp-content/uploads/2019/08/GettyImages-HepC-1024x683.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://scopeblog.stanford.edu/2019/09/03/hepatitis-c-all-adults-in-u-s-under-80-should-be-tested/</dc:identifier>
</item>
<item>
<title>Takeaways from coaching CEOs, founders and VCs</title>
<link>https://leowid.com/2019-2</link>
<guid isPermaLink="true" >https://leowid.com/2019-2</guid>
<description>&lt;p&gt;I went through my calendar recently to count all the clients I worked with in 2019 as part of my coaching practice. The answer: 101 powerful and extraordinary individuals. Wow, I was blown away, I had no idea that it would be this many. The kinds of people I had and continue to have the privilege to coach ranges tremendously in their backgrounds: I‚Äôm coaching VCs in and outside the US, CEOs on their 3rd or 4th company, founders that have been through YCombinator, founders with billion$+ valuations, founders that are just starting out, filmmakers, radio hosts, people with other, varied backgrounds. About 60% were men, 40% were women. Some of these people were part of the CEO group coaching programs (I ran 3 this year) and all of the rest were in 1:1 coaching.¬†&lt;/p&gt;
&lt;p&gt;Since most people find me through word of mouth, I haven‚Äôt found it important enough to update this website, and frankly, I‚Äôm a bit embarrassed about what it looks like today. Instead of fixing the said website, I thought it more helpful to type out some of the biggest takeaways these people have shared with me. I believe it is rare to have access to the inner world of so many brilliant and extraordinary people. And I thought sharing some of the inner workings could be helpful to many. Here we go:&lt;/p&gt;
&lt;p&gt;Note: Since I operate with an agreement of confidentiality, all of the below is anonymous and in parts abstracted:¬†&lt;/p&gt;
&lt;h2&gt;‚ÄúWe‚Äôre all just big, complicated bags of emotion walking around.‚Äù¬†&lt;/h2&gt;
&lt;p&gt;I love this insight a successful CEO told me after one of our sessions. When I ask people what the most difficult thing is about being a founder, CEO, VC or otherwise high-achieving individual, some answers are this: hiring, fund-raising, sales, building the team, etc. What I‚Äôve learned time and again this year especially, is that this is not the case. The hardest of hard things to deal with for all these people (including myself, when I work with my own coach), no matter the level of success, &lt;strong&gt;is the perpetual, ever-recurring loop of mental chatter, difficult emotions and body sensations.¬†&lt;/strong&gt;To frame differently, it‚Äôs our capacity to be with what‚Äôs alive and right in front of us, whether we like that or not in any given moment.&lt;/p&gt;
&lt;p&gt;As part of my training as a trauma therapist and having spent almost 2 years living in a Buddhist monastery, I employ most of my tools from that time to support people in how to find peace and harmony with what‚Äôs presently alive, no matter how difficult it is. And eventually, to even have fun with it. I‚Äôd argue that this is 60-70% of my work. All my learnings as an entrepreneur (I co-founded a startup called Buffer) and angel investor come way later and frankly, tend to be much less important than helping folks with their inner workings first.&lt;/p&gt;
&lt;p&gt;To that point, people have heard me say that I think it quite reckless and silly for founders and other executives to go through their life and business world (when you can afford it) without a trusted mentor, coach, advisor or therapist. The demands on the psyche of this kind of work can‚Äôt be overstated and acknowledging it and meeting it head-on with outside support has been my own best life and business decision. And I‚Äôd like to think the same is true for those that I had the privilege to work with.¬†¬†&lt;/p&gt;
&lt;p&gt;I couldn‚Äôt agree more with how my friend David Cancel put it in this Tweet:¬†&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/SJk2EWZ_YYvdiwfbbkFaL04IcOFHsivUK2JO1fqTjnU_FY94hZ7DirkWRg0dpjreLNnEg0hnogqPxSGrwHNEvYzr4UYUYCL2mOBX4P2YAGABJnfLZ-EE_vhn5_Wzl5S-7EMzGZDI&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;Power comes with the ability to receive a ‚Äúno‚Äù&lt;/h2&gt;
&lt;p&gt;We often tend to think of CEOs, VCs, founders and other successful people as being powerful. Coaching is fascinating because it evolves around the aspects of their lives where they have forgotten or lost access to their own sense of power and agency. Case in point, several founders talk to me about &lt;strong&gt;how to improve their relationship with their investors&lt;/strong&gt;. They‚Äôd like some tips and advice on what to say to them and how to communicate. And then, regularly, I point out that this is not about their investors at all, but about how scared they are and how they perceive their own power in that relationship. And sometimes I say that right now, at this moment they are bringing up that question, they are beggars, asking me to help them in how to plead and beg more convincingly.¬†That can be very irritating to hear from me, but that very irritation often also stokes something within them that brings them to an insight to see things differently.&lt;/p&gt;
&lt;p&gt;What I‚Äôve learned is that most of our problems occur when we don‚Äôt see our own power anymore. When we‚Äôve become small and think we‚Äôve gotten the shorter end of the stick. ‚ÄúWell, but they are the investor, they got the money, I gotta do what they say!‚Äù is one version of that. And then we go to work, and dismantle that statement, to see that that is not the case at all. That said investors are humans, with their own fears, insecurities, dreams and losses. And that what they want more than anyone else, is a founder that acts from their power, because that is how they will be most successful too.¬†&lt;/p&gt;
&lt;p&gt;The question I often like to ask then is: What do you have to accept to step back into your power in this moment/relationship? Frequent answer: That the answer might be ‚Äúno‚Äù. That this investor might not give you any more money in the future. That they might be upset or irritated or scared. Once we get to that, once we‚Äôve slowed down enough to embrace that whatever they are attempting, coming from their deepest dreams or wishes may be met with a ‚Äúno‚Äù, things tend to shift. A new freedom often opens up, that a simple ‚Äúno‚Äù, as scary as it was at first, upon closer inspection, isn‚Äôt so bad after all.¬†&lt;/p&gt;
&lt;h2&gt;‚ÄúMaybe this isn‚Äôt what 1:1s are about. Maybe it‚Äôs about really listening‚Ä¶‚Äù¬†&lt;/h2&gt;
&lt;p&gt;This was from a very successful founder who came to this insight around what it means to be a manager. Most of his entrepreneurial career he was the one pushing the boulder up the hill. And he got incredibly good at it, world-class in fact, I would say. As his organization added more and more layers of management, he became stuck. Then, something clicked and things fell into place. Being a manager wasn‚Äôt anymore about pushing the boulder up the hill and carrying others with him. What came to him was the scary and yet powerful idea of leaning back, of making space for his team and others around him. He dared to ask what would happen if he were to truly listen and hold space, without jamming the meeting with his ideas on what to do and how to solve things.¬†&lt;/p&gt;
&lt;p&gt;As much as we can read about this concept in books, it is something else entirely when it comes as a deep insight from our own direct, inner exploration. When people dare to make this move, of leaning back, especially after they‚Äôve become somewhat successful already,¬† it tends to come with the deep inner fear that doing so will mean that they will now lose it all. Because they‚Äôre no longer leaning forward and doing and that is the posture they have associated with success. It requires a great deal of courage to lean back and I often invite people to experience this physically in their chairs and notice the difference of being forward or rested back on the back of their chairs. And once they do, magic seems to happen. Things don‚Äôt fall apart, they don‚Äôt lose it all and surprisingly, quite the opposite occurs often: Others have the chance to step up and to create and achieve. That is, what I believe great leaders and managers have learned and can execute on.¬†&lt;/p&gt;
&lt;h2&gt;Learning to manage your focus, not your time¬†&lt;/h2&gt;
&lt;p&gt;Frequently founders show up to sessions with a plea for help. Their schedule is too full, their calendars are packed, they are overwhelmed. Do I have some advice on how they could manage their time better? My answer is always a version of ‚Äúno, but I don‚Äôt think time is your problem, focus is‚Äù. When most of us set out to become entrepreneurs of any kind, it comes with a wish for freedom, for doing what is our deepest inner calling. Yet, soon enough, after a few months or years and even some success, many find themselves in that same trap. Their calendars full, reacting to email after email, bogged down by meetings. Where is that freedom now?¬†&lt;/p&gt;
&lt;p&gt;In moments like that, I like to remind people of something bigger: Why are you here? Why have you started this company in the first place? What are your 3 most important values for doing what you do? When we recalibrate to that, we also place back the sense of power and agency onto ourselves. We can step out of the victim role that we‚Äôve assumed in relation to our company and calendar. And we step back into the role of the powerful individual, often quite literally the CEO of a company that has the ability to shape her life however it is good and right for her. Which of these meetings and calendar events are not serving you? Which of these relationships are not serving you anymore? Which ARE serving you and really underline the focus you want to have for yourself and your company? Coming from that place, they rarely need my help to make the changes required to be on top of their lives instead of it being on top of them. They step into that fear of the unknown, of possibly being met with upset or irritation, but also coming from their own clarity and peace of mind. That is real power.¬†&lt;/p&gt;
&lt;h2&gt;Detachment is not non-attachment¬†&lt;/h2&gt;
&lt;p&gt;Since Buddhist and Stoic concepts have become quite popular in the tech world and with the CEOs, VCs and founders I coach, there‚Äôs an interesting thing that I started to notice in my coaching sessions. As founders become more successful and they hear more demands from team members, customers, the press and so on, some of them come back with the idea that they now need to practice non-attachment from all those things. When I ask them what they mean with that is that they want to somehow find a way to not let these things bother them, to have them fall off of their armoring so they won‚Äôt be impacted by it.¬†&lt;/p&gt;
&lt;p&gt;My response here is that that kind of approach is not non-attachment, but rather detachment. Or put more provocatively, a form of numbing. Non-attachment, on the other hand, is a different journey and process. It is about becoming like water, learning to let these emotions come to you, agreeing to them and then letting them leave. Whether it‚Äôs fear, anger or hurt, what I started to practice with my clients is to let these things come and as they come, notice how they don‚Äôt want to stick around if we really agree to them:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;strong&gt;sadness&lt;/strong&gt; wants to become tears and flow and become tender thereafter&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;anger&lt;/strong&gt; wants to punch, ball hands into fists and then fizzle out through the arms and legs&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;loneliness&lt;/strong&gt; wants attention, to be held, embraced and just sat with.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;fear&lt;/strong&gt; wants to be felt, receive attention and permission to flow through the body, only to leave a trail of energy and aliveness behind.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;They just want to be felt, heard, acknowledged and then move on. This often happens very viscerally, with the body trembling or shaking, sometimes tears running down their cheeks. All of that is fine and welcome. That is the idea of us not attaching to our emotions, without however shutting them out or detaching from them. As a byproduct of practicing with that, a lot of founders and executives reported that they have in return been able to listen more deeply and more closely to their team, customers or their friends and family.¬†&lt;/p&gt;
&lt;h2&gt;The paradoxical approach to dealing with successful people‚Äôs biggest fear&lt;/h2&gt;
&lt;p&gt;There‚Äôs a paradoxical secret of coaching successful people. And a good chunk of the people I coach has been way more successful materially than I ever was as an entrepreneur. &lt;strong&gt;That paradoxical secret is, that for them to keep growing, to keep living even more deeply and authentically into what makes them come alive, I invite them to risk what brought them to where they are today.&lt;/strong&gt; This might sound like a common quote from Instagram, but in reality, this can be brutal and powerful. What this brings up for all people, is the deepest fear most of us carry, which is to lose it all, after we‚Äôve accomplished something. And yet, that is exactly where some of the biggest insights come about after we go there.¬†&lt;/p&gt;
&lt;p&gt;In one session I invited a founder with a million $ company on this journey with the words ‚ÄúYour company has gone bankrupt, I‚Äôm sorry. What do you notice?‚Äù He described that letting himself go into that brought up a fear so vast that he felt as if he was being swallowed up in a giant brick of concrete. Staying with that, I invited him to notice what it‚Äôs like to be fully stuck in it, with all the pain and unpleasantness. Then I asked him what he wanted to do. His answer clear as day: ‚ÄúI want to break out of it.‚Äù And so he did, viscerally, arms and fists swinging, in controlled motions breaking out of the cement block. As this passed, he said that it is as if he‚Äôs a new person, free to do whatever is right and helps him come alive. The steps he took from there to help his business grow were some of the most inspiring I‚Äôd seen to date.¬†&lt;/p&gt;
&lt;p&gt;The question that remains for me after this is: &lt;strong&gt;Who are you willing to continue to become, even after you‚Äôve accomplished some success? What are you willing to risk, to continue going in the direction that is calling you?&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Life is not an endurance exercise&lt;/h2&gt;
&lt;p&gt;When I think of the beautiful conversation that this insight and transformation sprang out of, my heart and eyes light up. Here was someone, successful in ways that most of us dream about, having accomplished career-wise and spiritually (if there‚Äôs anything to accomplish there üòâ) to the highest level in my book. And yet, as we went deeper and deeper in one of our sessions, all of a sudden we unearthed a belief that was holding this powerful woman back from stepping into life into its fullest forms. It was around the belief that life is an exercise in endurance. To be tough and strong, to swim through the rough waters, no matter what waves are being thrown at us. And to keep going, no matter what.¬†&lt;/p&gt;
&lt;p&gt;Most successful people carry a version of that belief with themselves around and I too have for the longest period of this life (and I‚Äôm sure some layers of it are still there!). This belief is powerful, it gets many of us to accomplish things that most people only dream of. Yet, there comes a point where that belief has served its time. Where we‚Äôve become so tired and exhausted from all the enduring, that a quiet voice dares to ask: Is that really what it is about? What I like to challenge that belief with is this: What if life is not about endurance? What if it is about love, freedom, doing what‚Äôs fun and enjoyable? When I throw that out there, the first reaction is often one of disbelief and irritation. When we go deeper, there then tends to be a period of grieving and tears, of all the hardship and bracing from the time we‚Äôve endured that‚Äôs now flowing out of us, making way for a gentler, more loving and at the same time more powerful lens to see the world through.¬†&lt;/p&gt;
&lt;p&gt;Enduring gets us far, but I don‚Äôt think that‚Äôs what life is for. To let go of that belief and to allow a new one to emerge, often one rooted in love and joy, is scary and takes courage. Especially when endurance has helped you build a massive company or another successful thing. When people still decide to step into that, I‚Äôm in awe, I sometimes do dance parties after sessions alone in my apartment, simply to celebrate their lives and insight and willingness to continue to dare becoming more true to who they really want to be. Ask yourself those same questions and even if the reactions are painful within you, see what happens if you keep going with it.¬†&lt;/p&gt;
&lt;h2&gt;‚ÄúI‚Äôm realizing it is boundaries that create connection. Now everything has changed.‚Äù¬†&lt;/h2&gt;
&lt;p&gt;Here was a brilliant founder on his 3rd company, all of them successful, that had yet landed in the ‚Äúpleasing people trap‚Äù for most of his life. He had thought that his job was about being agreeable, listening to everyone coming to his office, and helping people solve their problems. I suggested that he‚Äôs not looking at this from the angle that serves him and other people most. I proposed to him that we do one thing only in response to this: We work on his anger and rage and let that come up in his life. From my trauma therapy training I know that when we‚Äôre trapped in victim or pleasing mode, it is often because we don‚Äôt see our agency in creating healthy boundaries that protect us. And the key to creating those is &lt;a href=&quot;https://leowid.com/want-to-be-a-courageous-leader-reclaim-your-rage/&quot;&gt;our anger and healthy aggression&lt;/a&gt;.¬†&lt;/p&gt;
&lt;p&gt;Slowly, he started to change how he was available to others and when and he took charge again of his time, his space and ultimately his life. Of course, there was a tremendous fear ‚Äì now that he was setting up these boundaries and took charge of his life, would people react with rejection? Rejection is no joke, it is our ultimate social fear ‚Äì to be ostracised from our tribes would surely mean we would die just a couple of thousand years ago. To his surprise, they didn‚Äôt, they were grateful that he had become firm and clear on his boundaries and what served him because they too wished for more of that in their lives. This moment of honesty created a whole new connection with his co-founders and team, one that was way deeper before.¬†&lt;/p&gt;
&lt;p&gt;When we allow ourselves to create our boundaries and learn to state them firmly, we are able to live our lives in peace and relaxation. This is because we can now trust into our boundaries to protect us, with a good dose of healthy aggression when we need it. And we can let down our guard for the moments where that isn‚Äôt necessary and create deep connection with other humans.¬†&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;‚ÄúFor the first time I can feel, it really is about sharpening the ax before chopping down the tree.‚Äù¬†&lt;/h2&gt;
&lt;p&gt;Most all of us struggle with resting, with really honing our sense of inner emotional resilience. This YC founder had seen and done most of it all when it comes to startup journeys, now working on his 3rd company, but with a family and in a new place. What he‚Äôd often bring up was a duality of his life, on the one hand, his startup, and the emotional rollercoaster and on the other his family and private life. How to handle it all?¬†&lt;/p&gt;
&lt;p&gt;What I challenged him to see was that these seemingly opposite aspects of his life, are in fact not opposites, but one and the same. When he was playing with his daughter, spending time away from his computer, he was serving his dream and purpose of building this company deeply. And when he was working on the startup, the same was true for how he modeled and supported his family and friends in working on something of value and meaning to him. The hours he spent recharging, vacationing, coaching, those all as he put it, aren‚Äôt just helping him personally, but everything he was touching and wanting to accomplish as a whole.¬†&lt;/p&gt;
&lt;p&gt;There‚Äôs an insight into self-care here, that I think is easily overlooked. And that is that self-care and accomplishment are inter-dependent. They are like good friends holding hands and one without the other is a sad story. The center here is also not self-care or accomplishment, but the human being that lives in between. Both are there to serve us on our journey to a fulfilled and meaningful life. Self-care is not a means to work even harder. It is a servant to us in our humanity, in the same way, that our work is.¬†&lt;/p&gt;
&lt;h2&gt;Gratitude to all those that danced with me in 2019&lt;/h2&gt;
&lt;p&gt;If you‚Äôre reading this and we‚Äôve worked together in a coaching capacity in 2019, I want to thank you from the bottom of my heart. I‚Äôm so grateful for your courage and ability to step into your fears and power and coming into the arena with me. I often don‚Äôt get enough time in sessions to go into detail around how you have impacted me. How your ability to show up, to be vulnerable, to be scared, to allow yourself to trust in our connection builds my own trust and confidence to keep doing so day in and day out in my life.&lt;/p&gt;
&lt;p&gt;I once sheepishly and guiltily admitted to my own coach that I feel that my clients are among the most inner layers of my community. I was scared she might rebuke me for bringing work and life this close together. Instead, she encouraged me, smiled and cheered me on, saying with her eyes ‚ÄúYou understood!‚Äù. So I want to share that with you, I don‚Äôt take that you‚Äôve come into my life lightly, in fact, quite the opposite. I see it as one of the most meaningful signs of love and openness to allow yourself to be seen by me in the ways that we have together in our sessions. Thanks again and to the many of you I‚Äôm continuing to work with in 2020, I‚Äôm so excited about what‚Äôs to come, even though I have no idea of what that will be exactly, something tells me that it‚Äôll be epic.&lt;/p&gt;
&lt;h2&gt;Final words&lt;/h2&gt;
&lt;p&gt;I love coaching, it‚Äôs the most fun and exciting thing I‚Äôve ever done in my life. I get to meet people in their deepest confusion, only to see them emerge with their crystal clearest insights and wisdom. To witness that, over and over again, frankly, I would pay THEM money to get to do it. That it‚Äôs the other way around is just the cherry on top. I hope some of this is helpful to you on your journey to becoming your own best version of yourself, achieving your dream of being a founder, investor, CEO, executive or otherwise successful individual contributing to life meaningfully.¬†&lt;/p&gt;
&lt;p&gt;If there‚Äôs just one thing these incredible people have taught me from the hundreds of sessions this past year, it‚Äôs this: Learn to embrace all aspects of your humanity, particularly of your emotions and I guarantee you, if you stick with it, you‚Äôll have everything you ever dreamed of. To me, this is not an empty promise, this is science, clear as day. When we are able to trust, agree and embrace it all, over and over again, we arrive at a place of stillness, with the possibility for powerful action. And that, repeated over time, creates the life we want.¬†&lt;/p&gt;
&lt;p&gt;Thanks for reading,&lt;br/&gt;love, Leo.¬†&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;saboxplugin-wrap&quot; itemtype=&quot;http://schema.org/Person&quot; itemscope=&quot;&quot; itemprop=&quot;author&quot;&gt;
&lt;div class=&quot;saboxplugin-gravatar&quot;&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://secure.gravatar.com/avatar/4f258be53ae2b9450e634bd67f285a15?s=100&amp;amp;d=mm&amp;amp;r=g&quot; srcset=&quot;https://secure.gravatar.com/avatar/4f258be53ae2b9450e634bd67f285a15?s=200&amp;amp;d=mm&amp;amp;r=g 2x&quot; class=&quot;avatar avatar-100 photo&quot; height=&quot;100&quot; width=&quot;100&quot; itemprop=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;saboxplugin-desc&quot;&gt;
&lt;div itemprop=&quot;description&quot;&gt;
&lt;p&gt;&lt;span&gt;Leo Widrich&lt;/span&gt; &lt;span&gt;coaches extraordinary people&lt;/span&gt;&lt;span&gt;. In his previous life, he co-founded Buffer, a $20m+ revenue software company. He also lived in Buddhist monasteries for close to two years, trained as a trauma therapist and now lives in Vienna near the forest. He tweets @leowid. To learn about working with him, &lt;a href=&quot;https://leowid.com/contact/&quot;&gt;go here&lt;/a&gt;.¬†&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 26 Dec 2019 07:14:30 +0000</pubDate>
<dc:creator>LeonW</dc:creator>
<og:type>article</og:type>
<og:title>I coached 101 CEOs, founders, VCs and other executives in 2019: These are the biggest takeaways - Leo Widrich</og:title>
<og:description>I went through my calendar recently to count all the clients I worked with in 2019 as part of my ‚Ä¶</og:description>
<og:url>https://leowid.com/2019-2/</og:url>
<og:image>https://leowid.com/wp-content/uploads/2019/12/ashley-batz-betmVWGYcLY-unsplash-1024x683.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://leowid.com/2019-2</dc:identifier>
</item>
<item>
<title>Go through your family&amp;#039;s phone settings and turn on all the privacy features</title>
<link>https://twitter.com/matthew_d_green/status/1209500062163832832</link>
<guid isPermaLink="true" >https://twitter.com/matthew_d_green/status/1209500062163832832</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/matthew_d_green/status/1209500062163832832&quot;&gt;https://twitter.com/matthew_d_green/status/1209500062163832832&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21881014&quot;&gt;https://news.ycombinator.com/item?id=21881014&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 310&lt;/p&gt;
&lt;p&gt;# Comments: 141&lt;/p&gt;
</description>
<pubDate>Wed, 25 Dec 2019 23:10:35 +0000</pubDate>
<dc:creator>GordonS</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/matthew_d_green/status/1209500062163832832</dc:identifier>
</item>
<item>
<title>Show HN: Made this with my daughter to help kids ages 2 to 4 learn logic</title>
<link>https://countable.github.io/cats-of-jasnah/</link>
<guid isPermaLink="true" >https://countable.github.io/cats-of-jasnah/</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&lt;title&gt;Cats of Jasnah. Teach your 4-year-old logic&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;25.074367088608&quot;&gt;
&lt;p&gt;‚Üê&lt;/p&gt;
&lt;p&gt;‚Üí&lt;/p&gt;

&lt;p&gt;LEVEL:&lt;/p&gt;
&lt;div class=&quot;number-bar no-select&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span onclick=&quot;submit(1)&quot;&gt;1&lt;/span&gt; &lt;span onclick=&quot;submit(2)&quot;&gt;2&lt;/span&gt; &lt;span onclick=&quot;submit(3)&quot;&gt;3&lt;/span&gt; &lt;span onclick=&quot;submit(4)&quot;&gt;4&lt;/span&gt; &lt;span onclick=&quot;submit(5)&quot;&gt;5&lt;/span&gt; &lt;span onclick=&quot;submit(6)&quot;&gt;6&lt;/span&gt; &lt;span onclick=&quot;submit(7)&quot;&gt;7&lt;/span&gt; &lt;span onclick=&quot;submit(8)&quot;&gt;8&lt;/span&gt; &lt;span onclick=&quot;submit(9)&quot;&gt;9&lt;/span&gt; &lt;span onclick=&quot;submit(0)&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;To answer questions, tap the numbers above or just use your keyboard.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span id=&quot;forkongithub&quot;&gt;&lt;a href=&quot;https://github.com/countable/cats-of-jasnah&quot;&gt;Fork me on GitHub&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;instructions&quot;&gt;&lt;strong&gt;Instructions:&lt;/strong&gt;&lt;p&gt;Choose a level to start.&lt;/p&gt;&lt;ul&gt;&lt;li onclick=&quot;set_level(0)&quot;&gt;0. counting&lt;/li&gt;
&lt;li onclick=&quot;set_level(1)&quot;&gt;1. one category&lt;/li&gt;
&lt;li onclick=&quot;set_level(2)&quot;&gt;2. negation&lt;/li&gt;
&lt;li onclick=&quot;set_level(3)&quot;&gt;3. combination&lt;/li&gt;
&lt;li onclick=&quot;set_level(4)&quot;&gt;4. conjunction&lt;/li&gt;
&lt;li onclick=&quot;set_level(5)&quot;&gt;5. negation and conjunction&lt;/li&gt;
&lt;li onclick=&quot;set_level(6)&quot;&gt;6. triple combination&lt;/li&gt;
&lt;li onclick=&quot;set_level(7)&quot;&gt;7. triple conjunction&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;

&lt;/body&gt;</description>
<pubDate>Wed, 25 Dec 2019 21:02:48 +0000</pubDate>
<dc:creator>ech085</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://countable.github.io/cats-of-jasnah/</dc:identifier>
</item>
<item>
<title>Tell HN: I used to be homeless and want to work as a software developer</title>
<link>https://news.ycombinator.com/item?id=21880179</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=21880179</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Tell HN: I used to be homeless and want to work as a software developer&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.1731207289294&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;4.3109339407745&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;21880179&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21880179&quot; class=&quot;storylink&quot;&gt;Tell HN: I used to be homeless and want to work as a software developer&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.75&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_21880179&quot;&gt;348 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=jackm2019&quot; class=&quot;hnuser&quot;&gt;jackm2019&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21880179&quot;&gt;1 day ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_21880179&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=21880179&amp;amp;goto=item%3Fid%3D21880179&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Tell%20HN%3A%20I%20used%20to%20be%20homeless%20and%20want%20to%20work%20as%20a%20software%20developer&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Tell%20HN%3A%20I%20used%20to%20be%20homeless%20and%20want%20to%20work%20as%20a%20software%20developer&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=21880179&amp;amp;auth=1470ede9c69ce4db5232b543d052c9f420adff73&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=21880179&quot;&gt;124¬†comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;16&quot;&gt;I have a degree in the hard sciences and went through a period of homelessness during which I started teaching myself how to program.
&lt;p&gt;I have been on the hunt for developer positions in the United Kingdom without any luck. I am also open to developer positions else where in Europe.&lt;/p&gt;
&lt;p&gt;I am reaching out to the great community here in hopes that there are hiring managers/employees who can give me an opportunity at interviews and also for any advice that may help get a foot into the door.&lt;/p&gt;
&lt;p&gt;Although I welcome opportunities all over the UK and Europe, I am located in a rainy city in northen England so I have a preference towards any opportunities or leads in my area.&lt;/p&gt;
&lt;p&gt;Thank you for being a humanitarian and enjoy your holidays!&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Wed, 25 Dec 2019 20:07:12 +0000</pubDate>
<dc:creator>jackm2019</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=21880179</dc:identifier>
</item>
</channel>
</rss>