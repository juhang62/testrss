<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Remembering Roger Boisjoly: He Tried to Stop Shuttle Challenger Launch</title>
<link>https://www.npr.org/sections/thetwo-way/2012/02/06/146490064/remembering-roger-boisjoly-he-tried-to-stop-shuttle-challenger-launch</link>
<guid isPermaLink="true" >https://www.npr.org/sections/thetwo-way/2012/02/06/146490064/remembering-roger-boisjoly-he-tried-to-stop-shuttle-challenger-launch</guid>
<description>&lt;div id=&quot;res146490853&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2012/02/06/ap910901091_custom-86160ed8319f56f9e6b028740254b283b7dfd523-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2012/02/06/ap910901091_custom-86160ed8319f56f9e6b028740254b283b7dfd523-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;Engineer Roger Boisjoly examines a model of the O-Rings, used to bring the Space Shuttle into orbit, at a meeting of senior executives and academic representatives in Rye, New York in Sept. 1991. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;AP&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;AP&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2012/02/06/ap910901091_custom-86160ed8319f56f9e6b028740254b283b7dfd523-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;Engineer Roger Boisjoly examines a model of the O-Rings, used to bring the Space Shuttle into orbit, at a meeting of senior executives and academic representatives in Rye, New York in Sept. 1991.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;AP&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Roger Boisjoly was a booster rocket engineer at NASA contractor Morton Thiokol in Utah in January, 1986, when he and four colleagues became embroiled in the fatal decision to launch the Space Shuttle Challenger.&lt;/p&gt;
&lt;p&gt;Boisjoly was also one of two confidential sources quoted by NPR three weeks later in the first detailed report about the Challenger launch decision, and the stiff resistance by Boisjoly and other Thiokol engineers.&lt;/p&gt;
&lt;p&gt;The experience both haunted and inspired Boisjoly in the decades that followed. We learned this weekend from &lt;a href=&quot;http://www.nytimes.com/2012/02/04/us/roger-boisjoly-73-dies-warned-of-shuttle-danger.html&quot;&gt;this story in &lt;em&gt;The New York Times&lt;/em&gt;&lt;/a&gt; that Boisjoly died last month in Utah at age 73.&lt;/p&gt;
&lt;p&gt;Bulky, bald and tall, Boisjoly was an imposing figure, especially when armed with data. He found disturbing the data he reviewed about the booster rockets that would lift Challenger into space. Six months before the Challenger explosion, he predicted &quot;a catastrophe of the highest order&quot; involving &quot;loss of human life&quot; in a memo to managers at Thiokol.&lt;/p&gt;
&lt;p&gt;The problem, Boisjoly wrote, was the elastic seals at the joints of the multi-stage booster rockets. They tended to stiffen and unseal in cold weather and NASA's ambitious shuttle launch schedule included winter lift-offs with risky temperatures, even in Florida.&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;On January 27, 1986, the forecast for the next morning at the Kennedy Space Center included a launch-time temperature as low as 30 degrees Fahrenheit. NASA had never launched in temperatures that cold and Boisjoly and his four colleagues at Thiokol headquarters in Utah concluded it would be too dangerous too launch.&lt;/p&gt;
&lt;p&gt;Three weeks later, he told NPR's Daniel Zwerdling in an unrecorded and confidential interview, &quot;I fought like Hell to stop that launch. I'm so torn up inside I can hardly talk about it, even now.&quot;&lt;/p&gt;
&lt;article id=&quot;res146485468&quot; class=&quot;bucketwrap resaudio secondary insecure&quot; aria-label=&quot;audio-module&quot;&gt;&lt;div class=&quot;audio-module&quot;&gt;
&lt;h4 class=&quot;audio-module-title&quot;&gt;NPR's Daniel Zwerdling Reports In 1986&lt;/h4&gt;


&lt;/div&gt;
&lt;/article&gt;&lt;p&gt;But Boisjoly did talk about it in a hotel room in Alabama, revealing for the first time the details of that effort to keep Challenger on the launch pad. He asked that he not be named but he agreed to be quoted anonymously. As he spoke with Zwerdling, a second engineer revealed the same details to me under the same conditions at his home in Brigham City, Utah.&lt;/p&gt;
&lt;p&gt;Boisjoly's family agreed to release him from our pledge of confidentiality so that his efforts to get the truth out can be widely known.&lt;/p&gt;
&lt;p&gt;&quot;We all knew what the implication was without actually coming out and saying it,&quot; a tearful Boisjoly told Zwerdling in 1986. &quot;We all knew if the seals failed the shuttle would blow up.&quot;&lt;/p&gt;
&lt;p&gt;Armed with the data that described that possibility, Boisjoly and his colleagues argued persistently and vigorously for hours. At first, Thiokol managers agreed with them and formally recommended a launch delay. But NASA officials on a conference call challenged that recommendation.&lt;/p&gt;
&lt;p&gt;&quot;I am appalled,&quot; said NASA's George Hardy, according to Boisjoly and our other source in the room. &quot;I am appalled by your recommendation.&quot;&lt;/p&gt;
&lt;p&gt;Another shuttle program manager, Lawrence Mulloy, didn't hide his disdain. &quot;My God, Thiokol,&quot; he said. &quot;When do you want me to launch — next April?&quot;&lt;/p&gt;
&lt;p&gt;These words and this debate were not known publicly until our interviews with Boisjoly and his colleague. They told us that the NASA pressure caused Thiokol managers to &quot;put their management hats on,&quot; as one source told us. They overruled Boisjoly and the other engineers and told NASA to go ahead and launch.&lt;/p&gt;
&lt;p&gt;&quot;We thought that if the seals failed the shuttle would never get off the launch pad,&quot; Boisjoly told Zwerdling. So, when Challenger lifted off without incident, he and the others watching television screens at Thiokol's Utah plant were relieved.&lt;/p&gt;
&lt;p&gt;&quot;And when we were one minute into the launch a friend turned to me and said, 'Oh God. We made it. We made it!'&quot; Boisjoly continued. &quot;Then, a few seconds later, the shuttle blew up. And we all knew exactly what happened.&quot;&lt;/p&gt;
&lt;p&gt;Until NPR's story, the special commission investigating the Challenger tragedy hadn't even interviewed all the engineers involved in the pre-launch debate.&lt;/p&gt;
&lt;p&gt;The explosion of Challenger and the deaths of its crew, including Teacher-in Space Christa McAuliffe, traumatized the nation and left Boisjoly disabled by severe headaches, steeped in depression and unable to sleep. When I visited him at his Utah home in April of 1987, he was thin, tearful and tense. He huddled in the corner of a couch, his arms tightly folded on his chest. But he was ready to speak publicly.&lt;/p&gt;
&lt;article id=&quot;res146485548&quot; class=&quot;bucketwrap resaudio secondary insecure&quot; aria-label=&quot;audio-module&quot;&gt;&lt;div class=&quot;audio-module&quot;&gt;
&lt;h4 class=&quot;audio-module-title&quot;&gt;NPR's Howard Berkes Talks With Roger Boisjoly In 1987&lt;/h4&gt;


&lt;/div&gt;
&lt;/article&gt;&lt;p&gt;&quot;I'm very angry that nobody listened,&quot; Boisjoly told me. And he asked himself, he said, if he could have done anything different. But then a flash of certainty returned.&lt;/p&gt;
&lt;p&gt;&quot;We were talking to the right people,&quot; he said. &quot;We were talking to the people who had the power to stop that launch.&quot;&lt;/p&gt;
&lt;p&gt;Boisjoly testified before the Challenger Commission and filed unsuccessful lawsuits against Thiokol and NASA. He continued to suffer and was ostracized by some of his colleagues. One said he'd drop his kids on Boisjoly's doorstep if they all lost their jobs, according to his wife Roberta.&lt;/p&gt;
&lt;p&gt;&quot;He took it very hard,&quot; she recalls. &quot;He had always been held in such high esteem and it hurt so bad when they wouldn't listen to him.&quot;&lt;/p&gt;
&lt;p&gt;A therapist recommended speaking out even more and for close to three decades, Boisjoly traveled to engineering schools around the world, speaking about ethical decision-making and sticking with data. &quot;This is what I was meant to do,&quot; he told Roberta, &quot;to have impact on young people's lives.&quot;&lt;/p&gt;
&lt;p&gt;Boisjoly continued to respond to emails and letters from engineering students right up until his sudden death in his sleep last month in St. George, Utah. He was diagnosed with cancer two weeks before.&lt;/p&gt;
&lt;p&gt;&quot;He always stood by his work,&quot; Roberta recalls, her voice breaking. &quot;He lived an honorable and ethical life. And he was at peace when he died.&quot;&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 02:11:36 +0000</pubDate>
<dc:creator>drewvolpe</dc:creator>
<og:title>Remembering Roger Boisjoly: He Tried To Stop Shuttle Challenger Launch</og:title>
<og:url>https://www.npr.org/sections/thetwo-way/2012/02/06/146490064/remembering-roger-boisjoly-he-tried-to-stop-shuttle-challenger-launch</og:url>
<og:type>article</og:type>
<og:description>Boisjoly was the engineer who boisterously warned about problems with the Challenger's elastic seals. That he couldn't do anything about the launch haunted him and turned him into a crusader for ethics in engineering. Boisjoly died at age 73.</og:description>
<og:image>https://media.npr.org/assets/img/2012/02/06/ap910901091_wide-4b9d81f04c302c13e2c4eb67c743b479310f37ad.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/sections/thetwo-way/2012/02/06/146490064/remembering-roger-boisjoly-he-tried-to-stop-shuttle-challenger-launch</dc:identifier>
</item>
<item>
<title>Facebook has been paying people to install a “Research” VPN</title>
<link>https://techcrunch.com/2019/01/29/facebook-project-atlas/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/29/facebook-project-atlas/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;Desperate for data on its competitors, &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/facebook&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;facebook&quot;&gt;Facebook&lt;/a&gt; has been secretly paying people to install a “Facebook Research” VPN that lets the company suck in all of a user’s phone and web activity, similar to Facebook’s Onavo Protect app that Apple banned in June and that was removed in August. Facebook sidesteps the App Store and rewards teenagers and adults to download the Research app and give it root access to network traffic in what may be a violation of Apple policy so the social network can decrypt and analyze their phone activity, a TechCrunch investigation confirms. Facebook admitted to TechCrunch it was running the Research program to gather data on usage habits.&lt;/p&gt;
&lt;p&gt;Since 2016, Facebook has been paying users ages 13 to 35 up to $20 per month plus referral fees to sell their privacy by installing the iOS or Android “Facebook Research” app. Facebook even asked users to screenshot their Amazon order history page. The program is administered through beta testing services Applause, BetaBound and uTest to cloak Facebook’s involvement, and is referred to in some documentation as “Project Atlas” — a fitting name for Facebook’s effort to map new trends and rivals around the globe.&lt;/p&gt;
&lt;p&gt;[Update 11:20pm PT: Facebook now tells TechCrunch it will shut down the iOS version of its Research app in the wake of our report. We’re still awaiting comment from Apple on whether Facebook officially violated its policy and if it asked Facebook to stop the program. The rest of this article has been updated to reflect this development.]&lt;/p&gt;
&lt;div id=&quot;attachment_1775664&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;breakout wp-image-1775664 size-full&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png&quot; alt=&quot;&quot; width=&quot;1667&quot; height=&quot;934&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png 1667w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png?resize=150,84 150w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png?resize=300,168 300w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png?resize=768,430 768w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png?resize=680,381 680w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Install1.png?resize=50,28 50w&quot; sizes=&quot;(max-width: 1667px) 100vw, 1667px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook’s Research app requires users to ‘Trust’ it with extensive access to their data&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We asked Guardian Mobile Firewall’s security expert Will Strafach to dig into the Facebook Research app, and he told us that “If Facebook makes full use of the level of access they are given by asking users to install the Certificate, they will have the ability to continuously collect the following types of data: private messages in social media apps, chats from in instant messaging apps – including photos/videos sent to others, emails, web searches, web browsing activity, and even ongoing location information by tapping into the feeds of any location tracking apps you may have installed.” It’s unclear exactly what data Facebook is concerned with, but it gets nearly limitless access to a user’s device once they install the app. Despite plans to shut down the iOS version of the program, Facebook Research’s VPN will remain available on Android.&lt;/p&gt;
&lt;p&gt;The strategy shows how far Facebook is willing to go and how much it’s willing to pay to protect its dominance — even at the risk of breaking the rules of Apple’s iOS platform on which it depends. Apple may have asked Facebook to discontinue distributing its Research app. A more stringent punishment would be to revoke Facebook’s permission to offer employee-only apps. The situation could further chill relations between the tech giants. Apple’s Tim Cook has repeatedly criticized Facebook’s data collection practices. Facebook disobeying iOS policies to slurp up more information could become a new talking point. TechCrunch has spoken to Apple and it’s aware of the issue, but the company did not provide a statement before press time.&lt;/p&gt;
&lt;div id=&quot;attachment_1775572&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;img class=&quot;breakout wp-image-1775572&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg?w=680&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;414&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg 6000w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg?resize=150,78 150w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg?resize=300,155 300w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg?resize=768,398 768w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg?resize=680,352 680w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Project-Atlas.jpg?resize=50,26 50w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook’s Research program is referred to as Project Atlas on sign-up sites that don’t mention Facebook’s involvement&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“The fairly technical sounding ‘install our Root Certificate’ step is appalling,” Strafach tells us. “This hands Facebook continuous access to the most sensitive data about you, and most users are going to be unable to reasonably consent to this regardless of any agreement they sign, because there is no good way to articulate just how much power is handed to Facebook when you do this.”&lt;/p&gt;
&lt;h2&gt;Facebook’s surveillance app&lt;/h2&gt;
&lt;p&gt;Facebook first got into the data-sniffing business when it &lt;a href=&quot;https://techcrunch.com/2013/10/13/facebook-buys-mobile-analytics-company-onavo-and-finally-gets-its-office-in-israel/&quot;&gt;acquired Onavo&lt;/a&gt; for around $120 million in 2014. The VPN app helped users track and minimize their mobile data plan usage, but also gave Facebook deep analytics about what other apps they were using. Internal documents acquired by Charlie Warzel and Ryan Mac of &lt;a href=&quot;https://techcrunch.com/2018/02/12/facebook-starts-pushing-its-data-tracking-onavo-vpn-within-its-main-mobile-app/&quot;&gt;BuzzFeed News&lt;/a&gt; reveal that Facebook was able to leverage Onavo to learn that WhatsApp was sending more than twice as many messages per day as Facebook Messenger. &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/onavo&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;onavo&quot;&gt;Onavo&lt;/a&gt; allowed Facebook to spot WhatsApp’s meteoric rise and justify paying $19 billion to buy the chat startup in 2014. WhatsApp has since tripled its user base, demonstrating the power of Onavo’s foresight.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-1775658 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Onavo-Protect.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;354&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Onavo-Protect.png 768w, https://techcrunch.com/wp-content/uploads/2019/01/Onavo-Protect.png?resize=150,78 150w, https://techcrunch.com/wp-content/uploads/2019/01/Onavo-Protect.png?resize=300,156 300w, https://techcrunch.com/wp-content/uploads/2019/01/Onavo-Protect.png?resize=680,354 680w, https://techcrunch.com/wp-content/uploads/2019/01/Onavo-Protect.png?resize=50,26 50w&quot; sizes=&quot;(max-width: 680px) 100vw, 680px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Over the years since, Onavo clued Facebook in to what apps to copy, features to build and flops to avoid. By 2018, Facebook was promoting the &lt;a href=&quot;https://techcrunch.com/2018/02/12/facebook-starts-pushing-its-data-tracking-onavo-vpn-within-its-main-mobile-app/&quot;&gt;Onavo app in a Protect&lt;/a&gt; bookmark of the main Facebook app in hopes of scoring more users to snoop on. Facebook also launched the &lt;a href=&quot;https://gizmodo.com/facebook-launches-another-deceptive-security-app-design-1823650981&quot;&gt;Onavo Bolt app&lt;/a&gt; that let you lock apps behind a passcode or fingerprint while it surveils you, but Facebook shut down the app the day it was discovered following privacy criticism. Onavo’s main app remains available on Google Play and has been installed more than 10 million times.&lt;/p&gt;
&lt;p&gt;The backlash heated up after security expert &lt;a href=&quot;https://medium.com/@chronic_9612/notes-on-analytics-and-tracking-in-onavo-protect-for-ios-904bdff346c0&quot;&gt;Strafach detailed&lt;/a&gt; in March how Onavo Protect was reporting to Facebook when a user’s screen was on or off, and its Wi-Fi and cellular data usage in bytes even when the VPN was turned off. In June, Apple updated its developer policies to ban collecting data about usage of other apps or data that’s not necessary for an app to function. Apple proceeded to inform Facebook in August that Onavo Protect violated those data collection policies and that the social network needed to remove it from the App Store, which it did, Deepa Seetharaman of the &lt;a href=&quot;https://www.wsj.com/articles/facebook-to-remove-data-security-app-from-apple-store-1534975340&quot;&gt;WSJ&lt;/a&gt; reported.&lt;/p&gt;
&lt;p&gt;But that didn’t stop Facebook’s data collection.&lt;/p&gt;
&lt;h2&gt;Project Atlas&lt;/h2&gt;
&lt;p&gt;TechCrunch recently received a tip that despite Onavo Protect being banished by Apple, Facebook was paying users to sideload a similar VPN app under the Facebook Research moniker from outside of the App Store. We investigated, and learned Facebook was working with three app beta testing services to distribute the Facebook Research app: BetaBound, uTest and Applause. Facebook began distributing the Research VPN app in 2016. It has been referred to as Project Atlas since at least mid-2018, around when backlash to Onavo Protect magnified and Apple instituted its new rules that prohibited Onavo. Previously, a similar program was called Project Kodiak. Facebook didn’t want to stop collecting data on people’s phone usage and so the Research program continued, in disregard for Apple banning Onavo Protect.&lt;/p&gt;
&lt;div id=&quot;attachment_1775666&quot; class=&quot;wp-caption alignright&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;wp-image-1775666 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Icon.png?w=339&quot; alt=&quot;&quot; width=&quot;339&quot; height=&quot;359&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Icon.png 339w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Icon.png?resize=142,150 142w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Icon.png?resize=283,300 283w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Icon.png?resize=47,50 47w&quot; sizes=&quot;(max-width: 339px) 100vw, 339px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook’s Research App on iOS&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ads (shown below) for the program run by uTest on Instagram and Snapchat sought teens 13-17 years old for a “paid social media research study.” The &lt;a href=&quot;http://smrsignup.applause.com/refer&quot;&gt;sign-up page&lt;/a&gt; for the Facebook Research program administered by Applause doesn’t mention Facebook, but seeks users “Age: 13-35 (parental consent required for ages 13-17).” If minors try to sign-up, they’re asked to get their parents’ permission with a form that reveal’s Facebook’s involvement and says “There are no known risks associated with the project, however you acknowledge that the inherent nature of the project involves the tracking of personal information via your child’s use of apps. You will be compensated by Applause for your child’s participation.” For kids short on cash, the payments could coerce them to sell their privacy to Facebook.&lt;/p&gt;
&lt;p&gt;The Applause site explains what data could be collected by the Facebook Research app (emphasis mine):&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“By installing the software, you’re giving our client permission to collect data from your phone that will help them understand how you browse the internet, and how you use the features in the apps you’ve installed . . . This means you’re &lt;strong&gt;letting our client collect information such as which apps are on your phone, how and when you use them&lt;/strong&gt;, data about your activities and content within those apps, as well as how other people interact with you or your content within those apps. You are also &lt;strong&gt;letting our client collect information about your internet browsing activity&lt;/strong&gt; (including the websites you visit and data that is exchanged between your device and those websites) and your use of other online services. There are some instances when &lt;strong&gt;our client will collect this information even where the app uses encryption&lt;/strong&gt;, or from within secure browser sessions.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Meanwhile, the &lt;a href=&quot;https://my.betabound.com/key/atlas&quot;&gt;BetaBound sign-up page&lt;/a&gt; with a URL ending in “Atlas” explains that “For $20 per month (via e-gift cards), you will install an app on your phone and let it run in the background.” It also offers $20 per friend you refer. That site also doesn’t initially mention Facebook, but the instruction manual for installing Facebook Research reveals the company’s involvement.&lt;/p&gt;
&lt;div id=&quot;attachment_1775846&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;img class=&quot;breakout wp-image-1775846 size-full&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png&quot; alt=&quot;&quot; width=&quot;915&quot; height=&quot;898&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png 915w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=150,147 150w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=300,294 300w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=768,754 768w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=680,667 680w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=32,32 32w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=50,50 50w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-advertises-Project-Atlas-Research1.png?resize=64,64 64w&quot; sizes=&quot;(max-width: 915px) 100vw, 915px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook’s intermediary uTest ran ads on Snapchat and Instagram, luring teens to the Research program with the promise of money&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Facebook seems to have purposefully avoided TestFlight, Apple’s official beta testing system, which requires apps to be reviewed by Apple and is limited to 10,000 participants. Instead, the instruction manual reveals that users download the app from r.facebook-program.com and are told to install an Enterprise Developer Certificate and VPN and “Trust” Facebook with root access to the data their phone transmits. Apple requires that developers agree to only use this certificate system for distributing internal corporate apps to their own employees. Randomly recruiting testers and paying them a monthly fee appears to violate the spirit of that rule.&lt;/p&gt;
&lt;div id=&quot;attachment_1775895&quot; class=&quot;wp-caption alignright&quot; readability=&quot;34&quot;&gt;&lt;img class=&quot;vertical wp-image-1775895 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Code-The-Same-As-Onavo.jpg?w=298&quot; alt=&quot;&quot; width=&quot;298&quot; height=&quot;584&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Code-The-Same-As-Onavo.jpg 298w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Code-The-Same-As-Onavo.jpg?resize=77,150 77w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Code-The-Same-As-Onavo.jpg?resize=153,300 153w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-App-Code-The-Same-As-Onavo.jpg?resize=26,50 26w&quot; sizes=&quot;(max-width: 298px) 100vw, 298px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Security expert Will Strafach found Facebook’s Research app contains lots of code from Onavo Protect, the Facebook-owned app Apple banned last year&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Once installed, users just had to keep the VPN running and sending data to Facebook to get paid. The Applause-administered program requested that users screenshot their Amazon orders page. This data could potentially help Facebook tie browsing habits and usage of other apps with purchase preferences and behavior. That information could be harnessed to pinpoint ad targeting and understand which types of users buy what.&lt;/p&gt;
&lt;p&gt;TechCrunch commissioned Strafach to analyze the Facebook Research app and find out where it was sending data. He confirmed that data is routed to “&lt;a href=&quot;http://vpn-sjc1.v.facebook-program.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-saferedirecturl=&quot;https://www.google.com/url?q=http://vpn-sjc1.v.facebook-program.com&amp;amp;source=gmail&amp;amp;ust=1548865211198000&amp;amp;usg=AFQjCNEzl7D5RC3O41RcVhVzAo59Er0fTw&quot;&gt;vpn-sjc1.v.facebook-program.&lt;wbr/&gt;com&lt;/a&gt;” that is associated with Onavo’s IP address, and that the facebook-program.com domain is registered to Facebook, according to MarkMonitor. The app can update itself without interacting with the App Store, and is linked to the email address PeopleJourney@fb.com. He also discovered that the Enterprise Certificate first acquired in 2016 indicates Facebook renewed it on June 27th, 2018 — weeks after Apple announced its new rules that prohibited the similar Onavo Protect app.&lt;/p&gt;
&lt;p&gt;“It is tricky to know what data Facebook is actually saving (without access to their servers). The only information that is knowable here is what access Facebook is capable of based on the code in the app. And it paints a very worrisome picture,” Strafach explains. “They might respond and claim to only actually retain/save very specific limited data, and that could be true, it really boils down to how much you trust Facebook’s word on it. The most charitable narrative of this situation would be that Facebook did not think too hard about the level of access they were granting to themselves . . . which is a startling level of carelessness in itself if that is the case.”&lt;/p&gt;
&lt;h2&gt;“Flagrant defiance of Apple’s rules”&lt;/h2&gt;
&lt;p&gt;In response to TechCrunch’s inquiry, a Facebook spokesperson confirmed it’s running the program to learn how people use their phones and other services. The spokesperson told us “Like many companies, we invite people to participate in research that helps us identify things we can be doing better. Since this research is aimed at helping Facebook understand how people use their mobile devices, we’ve provided extensive information about the type of data we collect and how they can participate. We don’t share this information with others and people can stop participating at any time.”&lt;/p&gt;
&lt;div id=&quot;attachment_1775696&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;img class=&quot;breakout wp-image-1775696&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png&quot; alt=&quot;&quot; width=&quot;1000&quot; height=&quot;558&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png 1319w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png?resize=150,84 150w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png?resize=300,167 300w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png?resize=768,429 768w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png?resize=680,379 680w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Install-Root-Certificate.png?resize=50,28 50w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook’s Research app requires Root Certificate access, which Facebook gather almost any piece of data transmitted by your phone&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Facebook’s spokesperson claimed that the Facebook Research app was in line with Apple’s Enterprise Certificate program, but didn’t explain how in the face of evidence to the contrary. They said Facebook first launched its Research app program in 2016. They tried to liken the program to a focus group and said Nielsen and comScore run similar programs, yet neither of those ask people to install a VPN or provide root access to the network. The spokesperson confirmed the Facebook Research program does recruit teens but also other age groups from around the world. They claimed that Onavo and Facebook Research are separate programs, but admitted the same team supports both as an explanation for why their code was so similar.&lt;/p&gt;
&lt;div id=&quot;attachment_1775661&quot; class=&quot;wp-caption alignright&quot; readability=&quot;33&quot;&gt;&lt;img class=&quot;vertical wp-image-1775661 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Screenshot-Amazon.png?w=371&quot; alt=&quot;&quot; width=&quot;371&quot; height=&quot;680&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Screenshot-Amazon.png 491w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Screenshot-Amazon.png?resize=82,150 82w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Screenshot-Amazon.png?resize=164,300 164w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Screenshot-Amazon.png?resize=371,680 371w, https://techcrunch.com/wp-content/uploads/2019/01/Facebook-Research-Screenshot-Amazon.png?resize=27,50 27w&quot; sizes=&quot;(max-width: 371px) 100vw, 371px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Facebook’s Research program requested users screenshot their Amazon order history to provide it with purchase data&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;However, Facebook’s claim that it doesn’t violate &lt;a href=&quot;https://www.slideshare.net/joshsc/apple-policy-prohibits-distributing-enterprise-certificate-apps-to-nonemployees&quot;&gt;Apple’s Enterprise Certificate policy&lt;/a&gt; is directly contradicted by the terms of that policy. Those include that developers “Distribute Provisioning Profiles only to Your Employees and only in conjunction with Your Internal Use Applications for the purpose of developing and testing”. The policy also states that “You may not use, distribute or otherwise make Your Internal Use Applications available to Your Customers” unless under direct supervision of employees or on company premises. Given Facebook’s customers are using the Enterprise Certificate-powered app without supervision, it appears Facebook is in violation.&lt;/p&gt;
&lt;p&gt;Seven hours after this report was first published, Facebook updated its position and told TechCrunch that it would shut down the iOS Research app. A Facebook spokesperson also provided this additional statement:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“Key facts about this market research program are being ignored. Despite early reports, there was nothing ‘secret’ about this; it was literally called the Facebook Research App. It wasn’t ‘spying’ as all of the people who signed up to participate went through a clear on-boarding process asking for their permission and were paid to participate. Finally, less than 5 percent of the people who chose to participate in this market research program were teens. All of them with signed parental consent forms.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Facebook did not publicly promote the Research VPN itself and used intermediaries that often didn’t disclose Facebook’s involvement until users had begun the signup process. While users were given clear instructions and warnings, the program never stresses nor mentions the full extent of the data Facebook can collect through the VPN. A small fraction of the users paid may have been teens, but we stand by the newsworthiness of its choice not to exclude minors from this data collection initiative.&lt;/p&gt;
&lt;p&gt;Facebook disobeying Apple so directly and then pulling the app could hurt their relationship. “The code in this iOS app strongly indicates that it is simply a poorly re-branded build of the banned Onavo app, now using an Enterprise Certificate owned by Facebook in direct violation of Apple’s rules, allowing Facebook to distribute this app without Apple review to as many users as they want,” Strafach tells us. ONV prefixes and mentions of graph.onavo.com, “onavoApp://” and “onavoProtect://” custom URL schemes litter the app. “This is an egregious violation on many fronts, and I hope that Apple will act expeditiously in revoking the signing certificate to render the app inoperable.”&lt;/p&gt;
&lt;p&gt;Facebook is particularly interested in what teens do on their phones as the demographic has increasingly abandoned the social network in favor of Snapchat, YouTube and Facebook’s acquisition Instagram. Insights into how popular with teens is Chinese video music app TikTok and meme sharing led Facebook to launch a clone called Lasso and begin developing a meme-browsing feature called LOL, TechCrunch first reported. But Facebook’s desire for data about teens riles critics at a time when the company has been battered in the press. Analysts on tomorrow’s Facebook earnings call should inquire about what other ways the company has to collect competitive intelligence now that it’s ceased to run the Research program on iOS.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-900340 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;373&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png 950w, https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png?resize=150,82 150w, https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png?resize=300,165 300w, https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png?resize=768,421 768w, https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png?resize=680,373 680w, https://techcrunch.com/wp-content/uploads/2013/10/facebook-teens.png?resize=50,27 50w&quot; sizes=&quot;(max-width: 680px) 100vw, 680px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Last year when Tim Cook was asked what he’d do in Mark Zuckerberg’s position in the wake of the Cambridge Analytica scandal, &lt;a href=&quot;https://www.nbcnews.com/tech/tech-news/mark-zuckerberg-fires-back-apple-ceo-s-extremely-glib-comment-n862056&quot;&gt;he said&lt;/a&gt; “I wouldn’t be in this situation . . . The truth is we could make a ton of money if we monetized our customer, if our customer was our product. We’ve elected not to do that.” Zuckerberg told Ezra Klein that he felt Cook’s comment was “extremely glib.”&lt;/p&gt;
&lt;p&gt;Now it’s clear that even after Apple’s warnings and the removal of Onavo Protect, Facebook was still aggressively collecting data on its competitors via Apple’s iOS platform. “I have never seen such open and flagrant defiance of Apple’s rules by an App Store developer,” Strafach concluded. Now that Facebook has ceased the program on iOS and its Android future is uncertain, it may either have to invent new ways to surveil our behavior amidst a climate of privacy scrutiny, or be left in the dark.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Additional reporting by Zack Whittaker.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 29 Jan 2019 23:39:36 +0000</pubDate>
<dc:creator>randomacct3847</dc:creator>
<og:title>Facebook pays teens to install VPN that spies on them, but will stop on iPhone</og:title>
<og:description>Desperate for data on its competitors, Facebook has been secretly paying people to install a “Facebook Research” VPN that lets the company suck in all of a user’s phone and web activity, similar to Facebook’s Onavo Protect app that Apple banned in June and that was removed i…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/facebook-research-vpn-project-atlas.jpg?w=711</og:image>
<og:url>http://social.techcrunch.com/2019/01/29/facebook-project-atlas/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/29/facebook-project-atlas/</dc:identifier>
</item>
<item>
<title>Office 365 global authentication outage</title>
<link>https://status.office365.com/</link>
<guid isPermaLink="true" >https://status.office365.com/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://status.office365.com/&quot;&gt;https://status.office365.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19030099&quot;&gt;https://news.ycombinator.com/item?id=19030099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 266&lt;/p&gt;
&lt;p&gt;# Comments: 108&lt;/p&gt;
</description>
<pubDate>Tue, 29 Jan 2019 21:48:01 +0000</pubDate>
<dc:creator>Jedd</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://status.office365.com/</dc:identifier>
</item>
<item>
<title>Instacart paying 80 cents an hour because worker received a large tip</title>
<link>https://www.workingwa.org/instacart-eighty-cents</link>
<guid isPermaLink="true" >https://www.workingwa.org/instacart-eighty-cents</guid>
<description>&lt;p&gt;In case that email is as confusing to you as it looks to us, let us help you parse it: what Brie is saying is that &lt;strong&gt;because the customer left a high tip on this particular job, the “batch payment” — the amount Instacart actually pays to the worker — was just 80 cents,&lt;/strong&gt; including a mileage reimbursement.&lt;/p&gt;
&lt;p&gt;In other words, Instacart is now confirming &lt;a href=&quot;http://www.workingwa.org/22cents&quot; target=&quot;_blank&quot;&gt;what workers have been saying since the change in pay structure&lt;/a&gt;: that &lt;strong&gt;the company is actually using customers’ tips to pay workers’ wages&lt;/strong&gt;. When a customer tips up-front, it doesn't mean extra money for the worker. Instacart just pays the worker less to make up for it.&lt;/p&gt;
&lt;p&gt;That's right: the customer's tip doesn't get added to the worker's check — it just gets deducted from what Instacart pays. In other words, &lt;strong&gt;up-front tips go to Instacart, not to the worker.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Even Instacart seems to know how messed up it is to pay workers less when they get tipped more — which is why &lt;strong&gt;they’ve denied the practice when speaking to reporters at&lt;/strong&gt; &lt;a href=&quot;https://www.businessinsider.com/instacart-shoppers-threaten-boycott-claim-lower-pay-2018-12&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Business Insider&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;&amp;amp; the&lt;/strong&gt; &lt;a href=&quot;https://www.miamiherald.com/site-services/new-newsletters/business-news/article224072360.html&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Miami Herald&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, it seems like Instacart has been hearing us speaking out about the issue…and decided to double down by finally &lt;strong&gt;admitting that they’re taking workers’ tips&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Instacart knows it’s wrong. Workers know it’s wrong. We know it’s wrong.&lt;/p&gt;
&lt;p&gt;Let’s not let them get away with it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Think a company paying workers 80 cents for more than an hour of work needs to be held accountable?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Want to tell Instacart you don’t think taking workers’ tips is more “accurate” or treats them as “valuable”?&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://actionnetwork.org/petitions/instacart-heres-our-22-cents-no-more-tip-theft-low-pay-and-black-box-pay-algorithms&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Click here to sign on to our demands for Instacart&lt;/strong&gt;&lt;/a&gt; — we’ll be in touch to tell you how you can fight back.&lt;/h3&gt;
&lt;p&gt;And if you’re a customer on Instacart, &lt;a href=&quot;http://www.workingwa.org/22cents&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;click here to learn how you can work around Instacart taking your tips&lt;/strong&gt;&lt;/a&gt; by tipping just 22 cents up-front and changing it later.&lt;/p&gt;
</description>
<pubDate>Tue, 29 Jan 2019 21:10:18 +0000</pubDate>
<dc:creator>timebomb0</dc:creator>
<og:title>earn eighty cents an hour by delivering groceries with instacart! — Working Washington</og:title>
<og:url>http://www.workingwa.org/instacart-eighty-cents/</og:url>
<og:type>website</og:type>
<og:description>Yep, that’s right. Eighty cents. That’s what Instacart actually paid Tom, an Instacart worker, for 69 minutes of his time .</og:description>
<og:image>http://static1.squarespace.com/static/5237604ce4b0e51f969029ae/t/5c4e498c575d1f05fb47f0b9/1548634512546/tom+fb+link+version.png?format=1500w</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.workingwa.org/instacart-eighty-cents</dc:identifier>
</item>
<item>
<title>Advice to new programmers</title>
<link>http://olafurw.com/2019-01-27-programmer-advice/</link>
<guid isPermaLink="true" >http://olafurw.com/2019-01-27-programmer-advice/</guid>
<description>&lt;p&gt;It’s not every day where students new to programming get to ask 709 software developers for advice.&lt;/p&gt;&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;p&gt;There is a school here in Malmö, Sweden called &lt;a href=&quot;https://www.thegameassembly.com/&quot;&gt;The Game Assembly&lt;/a&gt;. This school focuses on teaching students game production. Everything from programming to art and design. This is a three year program where the last year is spent at a games studio.&lt;/p&gt;
&lt;p&gt;Since I work for a &lt;a href=&quot;https://www.massive.se/&quot;&gt;games company&lt;/a&gt;, we get asked to hold lectures for the students. I’ve done this a few times over the years and feel very honored when I get the opportunity.&lt;/p&gt;
&lt;p&gt;This year I got to speak to the first year students. The idea was to go over &lt;a href=&quot;https://speakerdeck.com/olafurw/the-basics-of-object-oriented-programming&quot;&gt;the basics of object oriented programming&lt;/a&gt; but I had another idea as well.&lt;/p&gt;
&lt;p&gt;Why not reach out to Twitter and ask if they had any advice for some “impressionable youth” ?&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;13.291139240506&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hey, Programming Twitter!&lt;/p&gt;&lt;p&gt;I'm going to be speaking to impressionable youth in a couple of days&lt;/p&gt;&lt;p&gt;They are in their early years of learning. In the 20ish age range.&lt;/p&gt;&lt;p&gt;What is your one solid advice? Language Agnostic.&lt;/p&gt;&lt;p&gt;RT's are loved&lt;/p&gt;&lt;p&gt;(I'm gonna quote you in the slides so be nice :)&lt;/p&gt;
— Ólafur Waage (@olafurw) &lt;a href=&quot;https://twitter.com/olafurw/status/1087438169585434624?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Getting well over 700 replies was not something I imagined would happen. Because I only had two days from the tweet until the talk, I was not able to summarize all of the wisdom. But I tried to find the most liked ones and replies from individuals that work in the gaming industry.&lt;/p&gt;
&lt;p&gt;But there was just too much data to gloss over. I needed to analyze the replies.&lt;/p&gt;
&lt;h2 id=&quot;getting-the-data&quot;&gt;Getting the data&lt;/h2&gt;
&lt;p&gt;First I tried to just browse the timeline on Twitter and copy the text from there. But apparently when a thread reaches a certain size, Twitter limits how many tweets you can see. So from that data set I was only able to get 285 replies.&lt;/p&gt;
&lt;p&gt;Next up was to use the Twitter Developer API, which is heavily throttled but allows for more granularity in searching.&lt;/p&gt;
&lt;p&gt;Using Python and Tweepy and a 5 minute sleep between requests, I was able to fetch 763 tweets that were a direct reply to my request. This took &lt;strong&gt;362 minutes&lt;/strong&gt;, or &lt;strong&gt;6 hours&lt;/strong&gt;. It might have been ok to have a shorter sleep but I left it overnight, so it didn’t matter much.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweepy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;to:olafurw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1087438169585434624'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'extended'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;replies.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in_reply_to_status_id_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--==--&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;repliesFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;basic-analysis&quot;&gt;Basic Analysis&lt;/h2&gt;
&lt;p&gt;Analyzing a text corpus is an educational field on it’s own and I don’t have the knowledge or the time to go in depth. But I do want to highlight a few things that stood out.&lt;/p&gt;
&lt;h3 id=&quot;programming-is-a-human-field&quot;&gt;Programming is a human field&lt;/h3&gt;
&lt;p&gt;131 out of 763 tweets talk about other people. &lt;strong&gt;17.1%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They talk about humans, teams, peers, friends, colleagues.&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;blockquote readability=&quot;3.5714285714286&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/tomjadams/status/1088336413827915776&quot;&gt;@tomjadams&lt;/a&gt;&lt;br/&gt;Software is a team sport&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5.5221238938053&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/mrdowden/status/1087882550964641792&quot;&gt;@mrdowden&lt;/a&gt;&lt;br/&gt;The most important thing in life – and something you always control – is how you treat other people&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7.4458874458874&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/originalJonLowe/status/1087594133357760513&quot;&gt;@originalJonLowe&lt;/a&gt;&lt;br/&gt;Be supportive and kind in your journey for knowledge&lt;br/&gt;Build other developers up because at the end of the day, you’re a part of a team&lt;br/&gt;Be a team player over a “Rockstar” because knowledge is meant to be shared&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;4.3076923076923&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/ccmccomb/status/1087845662937546756&quot;&gt;@ccmccomb&lt;/a&gt;&lt;br/&gt;Never forget to find room for compassion in computation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;programming-is-about-continuous-learning&quot;&gt;Programming is about continuous learning&lt;/h3&gt;
&lt;p&gt;13 replies were literally “Never stop learning”&lt;/p&gt;
&lt;p&gt;82 out of 763 tweets talked about learning or practice in some way. &lt;strong&gt;10.7%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;blockquote readability=&quot;6.1884057971014&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/iam_js_/status/1088153200371355650&quot;&gt;@iam_js_&lt;/a&gt;&lt;br/&gt;There are no shortcuts, practice, practice and more practice&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;4.4&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/curtisko/status/1087725805982093312&quot;&gt;@curtisko&lt;/a&gt;&lt;br/&gt;You are responsible for continued learning and career progression&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6.637037037037&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hedgeb/status/1087525264140234752&quot;&gt;@hedgeb&lt;/a&gt;&lt;br/&gt;Even if you are just one page ahead in the manual, you can mentor someone and help them along in their journey learning to code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6.5302013422819&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/howbazaar/status/1087773774374522881&quot;&gt;@howbazaar&lt;/a&gt;&lt;br/&gt;You are going to keep learning&lt;br/&gt;You’re not done&lt;br/&gt;Being good takes practice&lt;br/&gt;Read books, read blogs&lt;br/&gt;Don’t expect to be great in six months&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;programming-can-be-intimidating&quot;&gt;Programming can be intimidating&lt;/h3&gt;
&lt;p&gt;Many replies reflected this well. There is a lot to learn and a lot you do not know. Looking at experts in the field can be daunting.&lt;/p&gt;
&lt;p&gt;27 replies talked about mistakes or failing, 29 about fear, being afraid or scared.&lt;/p&gt;
&lt;blockquote readability=&quot;5.3617021276596&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/jitterted/status/1087575050318835712&quot;&gt;@jitterted&lt;/a&gt;&lt;br/&gt;Don’t compare yourself to others, compare yourself to where &lt;em&gt;you&lt;/em&gt; were in the past.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5.5555555555556&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/greberger/status/1087842355481325574&quot;&gt;@greberger&lt;/a&gt;&lt;br/&gt;Never be afraid to say that you don’t know something&lt;br/&gt;Don’t be afraid to ask for help&lt;br/&gt;We all suffer(ed) impostor syndrome&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6.578313253012&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/ben_deane/status/1087805790423904256&quot;&gt;@ben_deane&lt;/a&gt;&lt;br/&gt;We all make mistakes&lt;br/&gt;Try to honestly accept responsibility for your mistakes without being ashamed, and don’t put shame on others when they make mistakes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6.5767441860465&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/FiddlersCode/status/1087619274032721926&quot;&gt;@FiddlersCode&lt;/a&gt;&lt;br/&gt;Tech is ephemeral but relationships last&lt;br/&gt;Get to know your colleagues and yourself emotionally&lt;br/&gt;Have the courage to be vulnerable about your struggles&lt;br/&gt;Ask for help even if you’re afraid of looking dumb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;programming-is-not-just-the-latest-tech&quot;&gt;Programming is not just the latest tech&lt;/h3&gt;
&lt;p&gt;Yes the shiny new library/language/framework is cool. But as many replies showed, the fundamentals mattered much more.&lt;/p&gt;
&lt;p&gt;34 replies talked directly about tech, algorithms and focusing on the bigger picture.&lt;/p&gt;
&lt;blockquote readability=&quot;9.4573643410853&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/bjorn_fahller/status/1087439484709490689&quot;&gt;@bjorn_fahller&lt;/a&gt;&lt;br/&gt;Languages and tools come and go.&lt;br/&gt;Learn to see patterns that repeat, or rather rhyme, in different languages and libraries and even paradigms.&lt;br/&gt;Learn the pros and cons of different techniques, so you can choose wisely for your specific problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;10.738095238095&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/aras_p/status/1087443639750529025&quot;&gt;@aras_p&lt;/a&gt;&lt;br/&gt;Find area of programming that interests you and do work there.&lt;br/&gt;Small incremental tasks - “hey I made screen red! now I made a gradient!”, “hey I made button on the page move!” etc.&lt;br/&gt;Language, framework, library, “tech stack” does not matter (ignore everyone who say it does).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5.0434782608696&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/rickschott/status/1087492136331812867&quot;&gt;@rickschott&lt;/a&gt;&lt;br/&gt;The world needs problem solvers, not memorized algorithms&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;programming-can-ask-too-much-of-you&quot;&gt;Programming can ask too much of you&lt;/h3&gt;
&lt;p&gt;Personal health was also a common discussion point. Sleep and eating right were top of the list regarding healthy behaviors.&lt;/p&gt;
&lt;p&gt;33 replies talk about sleep, eating, personal health and working hours.&lt;/p&gt;
&lt;blockquote readability=&quot;9.6296296296296&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/sehurlburt/status/1087448744113684481&quot;&gt;@sehurlburt&lt;/a&gt;&lt;br/&gt;Get sleep, eat healthy, take care of your body— even if you feel fine&lt;br/&gt;More hours working doesn’t mean better work, it doesn’t even mean more work gets done&lt;br/&gt;You don’t have to have your career figured out&lt;br/&gt;You don’t need to hit external life milestones to be just fine and happy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;11.512195121951&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/caffodian/status/1087449579589591044&quot;&gt;@caffodian&lt;/a&gt;&lt;br/&gt;Take care of yourself physically&lt;br/&gt;Yea, actual programming skills are useful, but so is being able to use a mouse without hurting yourself, or being able to sit without back pain, looking at screens without giving yourself headaches, etc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;6.0869565217391&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/ArvidGerstmann/status/1087462222551490560&quot;&gt;@ArvidGerstmann&lt;/a&gt;&lt;br/&gt;Don’t overdo it. Enjoy your god damn life while you can. Signed, a 24 year old who feels like 44.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;7.5984555984556&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/ma_lindstedt/status/1087683256835809281&quot;&gt;@ma_lindstedt&lt;/a&gt;&lt;br/&gt;Working 100 hour weeks does not mean you are dedicated&lt;br/&gt;Take care of your body, speak with managers and be frank&lt;br/&gt;Enjoy your spare time so you can deliver your best work every time&lt;br/&gt;Hobbies + friends are not mutually exclusive with good work ethics&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;programming-other-interesting-replies&quot;&gt;Programming, other interesting replies&lt;/h3&gt;
&lt;p&gt;The categories above were common themes, but there are some that don’t fit into a generalized category but are worth mentioning.&lt;/p&gt;
&lt;p&gt;30 replies mention testing&lt;/p&gt;
&lt;blockquote readability=&quot;4.6783625730994&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/brianokken/status/1088177245431115776&quot;&gt;@brianokken&lt;/a&gt;&lt;br/&gt;Learn to ask early these questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How do I know it’s working?&lt;/li&gt;
&lt;li&gt;How do I automate that?&lt;br/&gt;Learning to rely on automated tests ASAP will save them loads of time&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;18 replies talk about some kind of version control&lt;/p&gt;
&lt;blockquote readability=&quot;5.1176470588235&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/UndefinedBehav/status/1087441412747128832&quot;&gt;@UndefinedBehav&lt;/a&gt;&lt;br/&gt;Use a version control system&lt;br/&gt;I would have love it if someone would have told me before&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;14 replies mention debugging&lt;/p&gt;
&lt;blockquote readability=&quot;5.6666666666667&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/AliBeeGfx/status/1087826867363741696&quot;&gt;@AliBeeGfx&lt;/a&gt;&lt;br/&gt;Coding is often like the opposite of the uncertainty principle&lt;br/&gt;the only way to have any certainty something is &lt;em&gt;really&lt;/em&gt; happening is to observe very closely via debugging!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;grateful&quot;&gt;Grateful&lt;/h2&gt;
&lt;p&gt;A thread like this comes once in a blue moon. That so many individuals took their time to reply is beyond comprehension.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thank you to all who replied, re-tweeted and liked.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I hope the thread inspired you and I hope this blog post helped as well.&lt;/p&gt;
&lt;blockquote readability=&quot;4.1538461538462&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/ericniebler/status/1087447876286869504&quot;&gt;@ericniebler&lt;/a&gt;&lt;br/&gt;Stay humble, stay curious.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Tue, 29 Jan 2019 19:40:05 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:title>Advice to new Programmers</og:title>
<og:description>It’s not every day where students new to programming get to ask 709 software developers for advice. Overview There is a school here in Malmö, Sweden called The Game Assembly. This school focuses on teaching students game production. Everything from programming to art and design. This is a three year...</og:description>
<og:type>website</og:type>
<og:url>https://olafurw.github.io/2019-01-27-programmer-advice/</og:url>
<og:image>https://olafurw.github.io/img/avatar-icon.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://olafurw.com/2019-01-27-programmer-advice/</dc:identifier>
</item>
<item>
<title>AresDB: Uber’s GPU-Powered Open-Source, Real-Time Analytics Engine</title>
<link>https://eng.uber.com/aresdb/</link>
<guid isPermaLink="true" >https://eng.uber.com/aresdb/</guid>
<description>&lt;div class=&quot;td-post-featured-image&quot;&gt;&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/Featured-1.png&quot; data-caption=&quot;&quot;&gt;&lt;img width=&quot;696&quot; height=&quot;298&quot; class=&quot;entry-thumb td-modal-image&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-696x298.png&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-696x298.png 696w, https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-300x128.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-768x329.png 768w, https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-1024x438.png 1024w, https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-1068x457.png 1068w, https://eng.uber.com/wp-content/uploads/2019/01/Featured-1-981x420.png 981w, https://eng.uber.com/wp-content/uploads/2019/01/Featured-1.png 1500w&quot; sizes=&quot;(max-width: 696px) 100vw, 696px&quot; alt=&quot;&quot; title=&quot;Featured&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;At Uber, real-time analytics allow us to attain business insights and operational efficiency, enabling us to make data-driven decisions to improve experiences on the Uber platform. For example, our operations team relies on data to monitor the market health and spot potential issues on our platform; software powered by machine learning models leverages data to predict rider supply and driver demand; and data scientists use data to improve machine learning models for better forecasting.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the past, we have utilized many third-party database solutions for real-time analytics, but none were able to simultaneously address all of our functional, scalability, performance, cost, and operational requirements.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Released in November 2018, AresDB is an open source, real-time analytics engine that leverages an unconventional power source, graphics processing units (GPUs), to enable our analytics to grow at scale. An emerging tool for real-time analytics, GPU technology has advanced significantly over the years, making it a perfect fit for real-time computation and data processing in parallel.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the following sections, we describe the design of AresDB and how this powerful solution for real-time analytics has allowed us to more performatively and efficiently unify, simplify, and improve Uber’s real-time analytics database solutions. After reading this article, we hope you try out AresDB for your own projects and find the tool useful your own analytics needs, too!&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Real-time analytics applications at Uber&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;Data analytics are crucial to the success of Uber’s business. Among other functions, these analytics are used to:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Build&lt;/span&gt; &lt;strong&gt;dashboards&lt;/strong&gt; &lt;span&gt;to monitor our business metrics&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Make&lt;/span&gt; &lt;strong&gt;automated decisions&lt;/strong&gt; &lt;span&gt;(such as&lt;/span&gt; &lt;a href=&quot;https://www.uber.com/drive/partner-app/how-surge-works/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;trip pricing&lt;/span&gt;&lt;/a&gt; &lt;span&gt;and&lt;/span&gt; &lt;a href=&quot;https://eng.uber.com/advanced-technologies-detecting-preventing-fraud-uber/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;fraud detection&lt;/span&gt;&lt;/a&gt;&lt;span&gt;) based on aggregated metrics that we collect&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Make&lt;/span&gt; &lt;strong&gt;ad hoc queries&lt;/strong&gt; &lt;span&gt;to diagnose and troubleshoot business operations issues&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;We can summarize these functions into categories with different requirements as follows:&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td/&gt;
&lt;td&gt;&lt;strong&gt;Dashboards&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Decision Systems&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Ad hoc Queries&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Query Pattern&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Well known&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Well known&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Arbitrary&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Query QPS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;High&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;High&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Low&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Query Latency&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Low&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;High&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Dataset&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Subset&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Subset&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;All data&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;span&gt;Dashboards and decision systems leverage real-time analytical systems to make similar queries over relatively small, yet highly valuable, subsets of data (with maximum data freshness) at high QPS and low latency.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;The need for another analytical engine&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;The most common problem that real-time analytics solves at Uber is how to compute time series aggregates, calculations that give us insight into the user experience so we can improve our services accordingly. With these computations, we can request metrics by specific dimensions (such as day, hour, city ID, and trip status) over a time range on arbitrarily filtered (or sometimes joined) data. Over the years, Uber has deployed multiple solutions to solve this problem in different ways.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some of the third-party solutions we’ve used for solving this type of problem include:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/apache/incubator-pinot&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Apache Pinot&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;, an open source distributed analytical database written in Java, can be leveraged for large-scale data analytics. Pinot employs a lambda architecture internally to query batch and real-time data in columnar storage, uses inverted bitmap index for filtering, and relies on star-tree for aggregate result caching. However, it does not support key-based deduplication, upsert, joins, and advanced query features such as geo-spatial-filtering. In addition, being a JVM-based database, query execution on Pinot runs at a higher cost in terms of memory usage.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.elastic.co/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt;&lt;/a&gt; &lt;span&gt;is used at Uber for a variety of streaming analytics needs. It was built on Apache&lt;/span&gt; &lt;a href=&quot;http://lucene.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Lucene&lt;/span&gt;&lt;/a&gt; &lt;span&gt;for full-text keyword search that stores documents and inverted index. It has been widely adopted and extended to also support aggregates. The inverted index enables filtering, yet it is not optimized for time range-based storage and filtering. It stores records as JSON documents, imposing additional storage and query access overhead. Like Pinot, Elasticsearch is a JVM-based database, and as such, does not support joins and its query execution runs at a higher memory cost.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;While these technologies have strengths of their own, they lacked crucial functionalities for our use case. We needed a unified, simplified, and optimized solution, and thought outside-of-the-box (or rather, inside the GPU) to reach a solution.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Leveraging GPUs for real-time analytics&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;To render realistic views of images at a high frame rate, GPUs process a massive amount of geometries and pixels in parallel at high speed. While the clock-rate increase for processing units has plateaued over the past few years, the number of transistors on a chip has only increased per&lt;/span&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Moore%27s_law&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Moore’s law&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. As a result, GPU computation speeds, measured in Gigaflops per second (GFLOP/s), are rapidly increasing. Figure 1, below, depicts the theoretical GFLOP/s trend comparing NVIDIA GPUs and Intel CPUs over the years:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image11-2.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5345&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image11-2.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;314&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image11-2.png 1999w, https://eng.uber.com/wp-content/uploads/2019/01/image11-2-300x157.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image11-2-768x402.png 768w, https://eng.uber.com/wp-content/uploads/2019/01/image11-2-1024x536.png 1024w, https://eng.uber.com/wp-content/uploads/2019/01/image11-2-696x365.png 696w, https://eng.uber.com/wp-content/uploads/2019/01/image11-2-1068x559.png 1068w, https://eng.uber.com/wp-content/uploads/2019/01/image11-2-802x420.png 802w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 1: Comparison of CPU and GPU single precision floating point performance through the years. Image taken from Nvidia’s CUDA C programming guide.
&lt;p&gt;&lt;span&gt;When designing our real-time analytics querying engine, integrating GPU processing was a natural fit. At Uber, the typical real-time analytical query processes a few days of data with millions to billions of records and then filters and aggregates them in a short amount of time. This computation task fits perfectly into the parallel processing model of general purpose GPUs because they:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Process data in parallel very quickly.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Deliver greater computation throughput (GFLOPS/s), making them a good fit for heavy computation tasks (per unit data) that can be parallelized.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Offer greater compute-to-storage (ALU to GPU global memory) data access throughput (not latency) compared to central processing units (CPUs), making them ideal for processing I/O (memory)-bound parallel tasks that require a massive amount of data.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;Once we settled on using a GPU-based analytical database, we assessed a few existing analytics solutions that leveraged GPUs for our needs:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.kinetica.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Kinetica&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;, a GPU-based analytics engine, was initially marketed towards U.S. military and intelligence applications in 2009. While it demonstrates the great potential of GPU technology in analytics, we found many key features missing&lt;/span&gt; &lt;span&gt;for our use case, including&lt;/span&gt; &lt;span&gt;schema alteration, partial insertion or updates, data compression, column-level memory/disk retention configuration, and join by geospatial relationships.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.omnisci.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;OmniSci&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;, an open source, SQL-based query engine, seemed like a promising option, but as we evaluated the product, we realized that it did not have critical&lt;/span&gt; &lt;span&gt;features for Uber’s use case, such as deduplication. While&lt;/span&gt; &lt;span&gt;OminiSci&lt;/span&gt; &lt;span&gt;open sourced their project in 2017, after some analysis of their C++-based solution, we concluded that neither contributing back nor forking their codebase was viable.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;GPU-based real-time analytics engines, including&lt;/span&gt; &lt;a href=&quot;https://www.cse.ust.hk/gpuqp/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;GPUQP&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://cogadb.dfki.de/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;CoGaDB&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://www.vldb.org/pvldb/vol6/p817-yuan.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;GPUDB&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://www.vldb.org/pvldb/vol6/p709-heimel.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Ocelot&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://www.vldb.org/pvldb/vol6/p1374-he.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;OmniDB&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, and&lt;/span&gt; &lt;a href=&quot;https://github.com/bakks/virginian&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Virginian&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, are frequently used by academic institutions. However, given their academic purpose, these solutions focus on developing algorithms and designing proof of concepts as opposed to handling real-world production scenarios. For this reason, we discounted them for our scope and scale.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;Overall,&lt;/span&gt; &lt;span&gt;these engines&lt;/span&gt; &lt;span&gt;demonstrate the great advantage and potential of data processing using GPU technology, and they inspired us to build our own GPU-based, real-time analytics solution tailored to Uber’s needs. With these concepts in mind, we built and open sourced AresDB.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;AresDB architecture overview&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;At a high level, AresDB stores most of its data in host memory (RAM that is connected to CPUs), handling data ingestion using CPUs and data recovery via disks. At query time, AresDB transfers data from host memory to GPU memory for parallel processing on GPU. As shown in Figure 2, below, AresDB consists of a memory store, a meta datastore, and a disk store:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image20.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5346&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image20.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;340&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image20.png 1999w, https://eng.uber.com/wp-content/uploads/2019/01/image20-300x170.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image20-768x435.png 768w, https://eng.uber.com/wp-content/uploads/2019/01/image20-1024x580.png 1024w, https://eng.uber.com/wp-content/uploads/2019/01/image20-696x394.png 696w, https://eng.uber.com/wp-content/uploads/2019/01/image20-1068x605.png 1068w, https://eng.uber.com/wp-content/uploads/2019/01/image20-741x420.png 741w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 2: The AresDB single instance architecture features memory and disk stores, and meta stores.
&lt;h4&gt;Tables&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;Unlike most&lt;/span&gt; &lt;span&gt;relational database management systems (&lt;/span&gt;&lt;span&gt;RDBMSs), there is no database or schema scope in AresDB. All tables belong to the same scope in the same AresDB cluster/instance, enabling users to refer to them directly. Users store their data as fact tables and dimension tables.&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Fact table&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;A fact table stores an infinite stream of time series events. Users use a fact table to store events/facts that are happening in real time, and each event is associated with an event time, with the table often queried by the event time. An example of the type of information stored by fact tables are trips, where each trip is an event and the trip request time is often designated as the event time. In case an event has multiple timestamps associated with it, only one timestamp is designated as the time of the event displayed in the fact table.&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Dimension table&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;A dimension table stores current properties for entities (including cities, clients, and drivers). For example, users can store city information, such as city name, time zone, and country, in a dimension table. Compared to fact tables, which grow infinitely over time, dimension tables are always bounded by size (e.g., for Uber, the cities table is bounded by the actual number of cities in the world). Dimension tables do not need a special time column.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Data types&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;Table below details the current data types supported in AresDB:&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody readability=&quot;7.4910277324633&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/uber/aresdb/wiki/Data-Types&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Data Types&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Storage (in Bytes)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;Bool&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1/8&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Boolean type data, stored as single bit&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;Int8, Uint8&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;td rowspan=&quot;3&quot;&gt;&lt;span&gt;Integer number types. User can choose based on cardinality of field and memory cost.&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Int16, Uint16&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Int32, Uint32&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;SmallEnum&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Strings are auto translated into enums. SmallEnum can holds string type with cardinality up to 256&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;BigEnum&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Similar to BigEnum, but holds higher cardinality up to 65532&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;Float32&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Floating point number. We support Float32 and intend to add Float64 support as needed&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.43243243243243&quot;&gt;&lt;td&gt;&lt;span&gt;UUID&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;16&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Universally unique identifier&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;GeoPoint&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Geographic points&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;GeoShape&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Variable Length&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Polygon or multi-polygons&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;With AresDB, strings are converted to&lt;/span&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Enumerated_type&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;enumerated types&lt;/span&gt;&lt;/a&gt; &lt;span&gt;(enums) automatically before they enter the database for better storage and query efficiency. This allows case-sensitive equality checking, but does not support advanced operations such as concatenation, substrings, globs, and regex matching. We intend to add full string support in the future.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;Key features&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;AresDB’s architecture supports the following features:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Column-based storage with compression&lt;/strong&gt; &lt;span&gt;for storage efficiency (less memory usage in terms of bytes to store data) and query efficiency (less data transfer from CPU memory to GPU memory during querying)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Real-time upsert with primary key deduplication&lt;/strong&gt; &lt;span&gt;for&lt;/span&gt; &lt;span&gt;high data accuracy and near real-time data freshness within seconds&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPU powered query processing&lt;/strong&gt; &lt;span&gt;for highly parallelized data processing powered by GPU, rendering low query latency (sub-seconds to seconds)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Columnar storage&lt;/h4&gt;
&lt;h5&gt;Vector&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;AresDB stores all data in a columnar format. The values of each column are stored as a columnar value vector. Validity/nullness of the values in each column&lt;/span&gt; &lt;span&gt;is stored in a separate null vector, with the validity of each value represented by one bit.&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;&lt;span&gt;Live store&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;AresDB&lt;/span&gt; &lt;span&gt;stores uncompressed and unsorted columnar data (live vectors) in a live store&lt;/span&gt;&lt;strong&gt;.&lt;/strong&gt; &lt;span&gt;Data records in a live store are partitioned into (live) batches of configured capacity. New batches are created at ingestion, while old batches are purged after records are archived. A primary key index is used to locate the records for deduplication and updates. Figure 3, below, demonstrates how we organize live records and use a primary key value to locate them:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image23.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5347 size-full&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image23.png&quot; alt=&quot;&quot; width=&quot;577&quot; height=&quot;232&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image23.png 577w, https://eng.uber.com/wp-content/uploads/2019/01/image23-300x121.png 300w&quot; sizes=&quot;(max-width: 577px) 100vw, 577px&quot;/&gt;&lt;/a&gt;Figure 3: We use a primary key value to locate the batch and position within the batch for each record.
&lt;p&gt;&lt;span&gt;The values of each column within a batch are stored as a columnar vector. Validity/nullness of the values in each value vector is stored as a separate null vector, with the validity of each value represented by one bit. In Figure 4, below, we offer an an example with five values for a&lt;/span&gt; &lt;span&gt;city_id&lt;/span&gt; &lt;span&gt;column:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5348&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;440&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771.png 1635w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-300x220.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-768x563.png 768w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-1024x751.png 1024w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-80x60.png 80w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-696x510.png 696w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-1068x783.png 1068w, https://eng.uber.com/wp-content/uploads/2019/01/image3-4-e1548709370771-573x420.png 573w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 4: We store values (actual value) and null vectors (validity) for uncompressed columns in the data table.
&lt;h5&gt;Archive store&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;AresDB also stores mature, sorted, and compressed columnar data (archive vectors) in an archive store via fact tables. Records in archive store are also partitioned into batches. Unlike live batches,&lt;/span&gt; &lt;span&gt;an&lt;/span&gt; &lt;span&gt;archive batch contains records of a particular Universal Time Coordinated (UTC) day. Archive batch uses the number of days since Unix Epoch as its batch ID.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Records are kept sorted according to a user configured column sort order. As depicted in Figure 5, below, we sort by&lt;/span&gt; &lt;span&gt;city_id&lt;/span&gt; &lt;span&gt;column first, followed by a status column:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5349&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;239&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337.png 1994w, https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337-300x119.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337-768x306.png 768w, https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337-1024x408.png 1024w, https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337-696x277.png 696w, https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337-1068x425.png 1068w, https://eng.uber.com/wp-content/uploads/2019/01/image16-1-e1548709469337-1055x420.png 1055w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 5: We sort all rows by&lt;span&gt;&lt;em&gt;city_id&lt;/em&gt;&lt;/span&gt;, followed by status, then compress each column using run-length encoding. Each column will have a count vector after being sorted and compressed.
&lt;p&gt;&lt;span&gt;The goal of configuring the user-configured column sort order is to:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Maximize compression effects by sorting low cardinality columns earlier. Maximized compression increases storage efficiency (less bytes needed for storing data) and query efficiency (less bytes transferred from CPU to GPU memory).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Allow cheap range-based prefiltering for common equi-filters such as&lt;/span&gt; &lt;span&gt;city_id=12&lt;/span&gt;&lt;span&gt;. Prefiltering enables us to minimize the bytes needed to be transferred from CPU memory to GPU memory, thereby maximizing query efficiency.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;A column is compressed only if it appears in the user-configured sort order. We do not attempt to compress high cardinality columns because the amount of storage saved by compressing high cardinality columns is negligible.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After sorting, the data for each qualified column is compressed using a variation of run-length encoding. In addition to the value vector and null vector, we introduce the count vector to represent a repetition of the same value.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Real-time ingestion with upsert support&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;Clients ingest data through the ingestion HTTP API by posting an upsert batch. The upsert batch is a custom, serialized binary format that minimizes space overhead while still keeping the data randomly accessible.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When AresDB receives an upsert batch for ingestion, it first writes the upsert batch to redo logs for recovery. After an upsert batch is appended to the end of the redo log, AresDB then identifies and skips late records on fact tables for ingestion into the live store. A record is considered “late” if its event time is older than the archived cut-off event time. For records not considered “late,” AresDB uses the primary key index to locate the batch within live store where they should be applied to. As depicted in Figure 6, below, brand new records (not seen before based on the primary key value) will be applied to the empty space while existing records will be updated directly:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image10-2.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5350&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image10-2.png&quot; alt=&quot;&quot; width=&quot;586&quot; height=&quot;308&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image10-2.png 586w, https://eng.uber.com/wp-content/uploads/2019/01/image10-2-300x158.png 300w&quot; sizes=&quot;(max-width: 586px) 100vw, 586px&quot;/&gt;&lt;/a&gt;Figure 6: During ingestion, after the upsert batch is appended to the redo log, “late” records will be appended to a backfill queue while other records will be applied to the live store.
&lt;h5&gt;Archiving&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;At ingestion time, records are either appended/updated in the live store or appended to a backfill queue waiting to be placed in the archive store.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We periodically run a scheduled process, referred to as archiving, on live store records to merge the new records (records that have never been archived before) into the archive store. Archiving will only process records in the live store with their event time falling into the range of the old cut-off time (the cut-off time from last archiving process) and new cut-off time (the new cut-off time based on the archive delay setting in the table schema).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The records’ times of event will be used to determine which archive batch the records should be merged into as we batch archived data into daily batches. Archiving does not require primary key value index deduplication during merging since only records between the old cut-off and new cut-off ranges will be archived.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Figure 7, below, depicts the timeline based on the given record’s event time:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image14.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5351&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image14.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;433&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image14.png 622w, https://eng.uber.com/wp-content/uploads/2019/01/image14-300x217.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image14-324x235.png 324w, https://eng.uber.com/wp-content/uploads/2019/01/image14-582x420.png 582w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 7: We use event time and cut-off times to determine which records are new (live) and old (with an event time older than the archiving cut-off).
&lt;p&gt;&lt;span&gt;In this scenario, the archiving interval is the time between two archiving runs, while the archiving delay is the duration after the event time but before an event can be archived. Both are defined in AresDB’s table schema configurations.&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Backfill&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;As shown in Figure 7, above, old records (with event time older than the archiving cut-off) for fact tables are appended to the backfill queue and eventually handled by the backfill process. This process is also triggered by the time or size of the backfill queue onces it reaches its threshold. Compared to ingestion by the live store, backfilling is asynchronous and relatively more expensive in terms of CPU and memory resources. Backfill is used in the following scenarios:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Handling occasional very late arrivals&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Manual fixing of historical data from upstream&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Populating historical data for recently added columns&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;Unlike archiving, backfilling is idempotent and requires primary key value-based deduplication.  The data being backfilled will eventually be visible to queries.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The backfill queue is maintained in memory with a pre-configured size, and, during massive backfill loads, the client will be blocked from proceeding before the queue is cleared by a backfill run.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Query processing&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;With the current implementation, the user will need to use&lt;/span&gt; &lt;a href=&quot;https://github.com/uber/aresdb/wiki/Ares-Query-Language&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Ares Query Language&lt;/span&gt;&lt;/a&gt; &lt;span&gt;(AQL), created by Uber to run queries against AresDB. AQL is an effective time series analytical query language and does not follow the standard SQL syntax of SELECT FROM WHERE GROUP BY like other SQL-like languages. Instead, AQL is specified in structured fields and can be carried with JSON, YAML, and Go objects. For instance, instead of&lt;/span&gt; &lt;span&gt;&lt;span&gt;SELECT count(*) FROM trips GROUP BY city_id WHERE status =&lt;/span&gt; &lt;span&gt;‘completed’&lt;/span&gt;&lt;/span&gt; &lt;span&gt;AND &lt;span&gt;request_at &amp;gt;= 1512000000&lt;/span&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;the equivalent AQL in JSON is written as:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt; “table”: “trips”,&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt; “dimensions”: [&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;   {“sqlExpression”: “city_id”}&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt; ],&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt; “measures”: [&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;   {“sqlExpression”: “count(*)”}&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt; ],&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;;”&amp;gt; &lt;span&gt; “rowFilters”: [&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;   “status = ‘completed'”&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt; ],&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “timeFilter”: {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;   “column”: “request_at”,&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;   “from”: “2 days ago”&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt; }&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In JSON-format, AQL provides better programmatic query experience than SQL for dashboard and decision system developers, because it allows them to easily compose and manipulate queries using code without worrying about issues like SQL injection. It serves as the universal query format on typical architectures from web browsers, front-end servers, and back-end servers, all the way back into the database (AresDB). In addition, AQL provides handy&lt;/span&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Syntactic_sugar&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;syntactic sugar&lt;/span&gt;&lt;/a&gt; &lt;span&gt;for time filtering and bucketization, with native time zone support. The language also supports features like&lt;/span&gt; &lt;span&gt;implicit sub-queries&lt;/span&gt; &lt;span&gt;to avoid common query mistakes and makes query analysis and rewriting easy for back-end developers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Despite the various benefits AQL provides, we are fully aware that most engineers are more familiar with SQL. Exposing a SQL interface for querying is one of the next steps that we will look into to enhance the AresDB user experience.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We depict the AQL query execution flow in Figure 8, below:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image19.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5352&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image19.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;267&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image19.png 624w, https://eng.uber.com/wp-content/uploads/2019/01/image19-300x134.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 8: AresDB’s query execution flow leverages our homegrown AQL query language for fast, efficient data processing and retrieval.
&lt;h5&gt;Query compilation&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;An AQL query is compiled into&lt;/span&gt; &lt;span&gt;internal query context&lt;/span&gt;&lt;strong&gt;.&lt;/strong&gt; &lt;span&gt;Expressions in filters, dimensions, and measurements are parsed into abstract syntax trees (AST) for later processing via GPU.&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Data feeding&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;AresDB&lt;/span&gt; &lt;span&gt;utilizes pre-filters&lt;/span&gt; &lt;span&gt;to cheaply filter archived data before sending them to a GPU for parallel processing. Since archived data is sorted according to a configured column order, some filters may be able to utilize this sorted order by applying binary search to locate the corresponding matching range. In particular, equi-filters on all of the first X-sorted columns and optionally range filter on sorted X+1 columns can be processed as pre-filters, as depicted in Figure 9, below:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image13-2.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5353&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image13-2.png&quot; alt=&quot;&quot; width=&quot;566&quot; height=&quot;413&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image13-2.png 566w, https://eng.uber.com/wp-content/uploads/2019/01/image13-2-300x219.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image13-2-324x235.png 324w&quot; sizes=&quot;(max-width: 566px) 100vw, 566px&quot;/&gt;&lt;/a&gt;Figure 9: AresDB pre-filters columnar data before sending it to the GPU for processing.
&lt;p&gt;&lt;span&gt;After prefiltering, only the green values (satisfying filter condition) need to be pushed to the GPU for parallel processing.&lt;/span&gt; &lt;span&gt;Input data is fed to the GPU and executed there one batch at a time. This includes both live batches and archive batches.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AresDB utilizes&lt;/span&gt; &lt;a href=&quot;https://devblogs.nvidia.com/gpu-pro-tip-cuda-7-streams-simplify-concurrency/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;CUDA streams&lt;/span&gt;&lt;/a&gt; &lt;span&gt;for pipelined data feeding and execution. Two streams are used alternately on each query for processing in two overlapping stages. In Figure 10, below, we offer a timeline illustration of this process:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image8-2.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5354&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image8-2.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;128&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image8-2.png 622w, https://eng.uber.com/wp-content/uploads/2019/01/image8-2-300x64.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 10: With AresDB, two CUDA streams alternate on data transfer and processing.
&lt;h5&gt;Query execution&lt;/h5&gt;
&lt;p&gt;&lt;span&gt;For simplicity, AresDB utilizes the&lt;/span&gt; &lt;a href=&quot;https://developer.nvidia.com/thrust&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Thrust library&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to implement query execution procedures, which offers fine-tuned parallel algorithm building blocks for quick implementation in the current query engine.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In Thrust, input and output vector data is accessed using random access iterators. Each GPU thread seeks the input iterators to its workload position, reads the values and performs the computation, and then writes the result to the corresponding position on the output iterator.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AresDB follows the one-operator-per-kernel (OOPK) model for evaluating expressions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Figure 11, below, demonstrates this procedure on an example AST, generated from a dimension expression&lt;/span&gt; &lt;span&gt;&lt;span&gt;request_at – request_at % 8640&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt; &lt;span&gt;in the query compilation stage:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image7-1.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5355 size-full&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image7-1.png&quot; alt=&quot;&quot; width=&quot;368&quot; height=&quot;333&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image7-1.png 368w, https://eng.uber.com/wp-content/uploads/2019/01/image7-1-300x271.png 300w&quot; sizes=&quot;(max-width: 368px) 100vw, 368px&quot;/&gt;&lt;/a&gt;Figure 11: AresDB leverages the OOPK model model for expression evaluation.
&lt;p&gt;&lt;span&gt;In the OOPK model, the AresDB query engine traverses each leaf node of the AST tree and returns an iterator for its parent node. In cases where the root node is also a leaf, the root action is taken directly on the input iterator.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At each non-root non-leaf node (&lt;/span&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Modulo_operation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;modulo operation&lt;/span&gt;&lt;/a&gt; &lt;span&gt;in this example), a temporary scratch space vector is allocated to store the intermediate result produced from&lt;/span&gt; &lt;span&gt;request_at % 86400&lt;/span&gt; &lt;span&gt;expression. Leveraging Thrust, a kernel function is launched to compute the output for this operator on GPU. The results are stored in the scratch space iterator.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At the root node, a kernel function is launched in the same manner as a non-root, non-leaf node. Different output actions are taken based on the expression type, detailed below:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Filter action to reduce the cardinality of input vectors&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Write dimension output to the dimension vector for later aggregation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Write measure output to the measure vector for later aggregation&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;After expression evaluation,&lt;/span&gt; &lt;a href=&quot;https://thrust.github.io/doc/group__sorting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;sorting&lt;/span&gt;&lt;/a&gt; &lt;span&gt;and&lt;/span&gt; &lt;a href=&quot;https://thrust.github.io/doc/group__reductions.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;reduction&lt;/span&gt;&lt;/a&gt; &lt;span&gt;are executed to conduct final aggregation. In both sorting and reduction operations, we use the values of the dimension vector as the key values of sorting and reduction, and the values of the measure vector as the values to aggregate on. In this way, rows with same dimension values will be grouped together and aggregated. Figure 12, below, depicts this sorting and reduction process:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image22.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5356&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image22.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;233&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image22.png 624w, https://eng.uber.com/wp-content/uploads/2019/01/image22-300x116.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 12: After expression evaluation, AresDB sorts and reduces data by key value on the dimension (key value) and measure (value) vectors.
&lt;p&gt;&lt;span&gt;AresDB also supports the following advanced query features:&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Resource management&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;As an in-memory-based database, AresDB needs to manage the following types of memory usage:&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody readability=&quot;8.5&quot;&gt;&lt;tr&gt;&lt;td/&gt;
&lt;td&gt;&lt;strong&gt;Allocation&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Management Mode&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;Live Store Vectors (live store columnar data)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;C&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Tracked&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;Archive Store Vectors (archive store columnar data)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;C&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Managed (Load and eviction)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;Primary Key Index (hash table for record deduplication)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;C&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Tracked&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;Backfill Queue (store “late” arrival data waiting for backfill)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Golang&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Tracked&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;Archive / Backfill Process Temporary Storage (Temporary memory allocated during the Archive and Backfill process)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;C&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Tracked&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;Ingestion / Query Temporary Storage;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;Process Overheads;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Allocation fragmentations&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Golang and C&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;Statically Configured Estimate&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;When AresDB goes into production, it leverages a configured total memory budget. This budget is shared by all six memory types and should also leave enough room for the operating system and other processes. This budget also covers a statically configured overhead estimation, live data storage monitored by the server, and archived data that the server can decide to load and evict depending on the remaining memory budget.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Figure 13, below, depicts the AresDB host memory model:&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image12-2.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5357&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image12-2.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;273&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image12-2.png 617w, https://eng.uber.com/wp-content/uploads/2019/01/image12-2-300x137.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 13: AresDB manages its own memory usage so that it does not exceed the configured total process budget.
&lt;p&gt;&lt;span&gt;AresDB allows users to configure pre-loading days and priority at the column level for fact tables, and only pre-loads archive data within pre-loading days. Non-preloaded data is loaded into memory from disk on demand. Once full, AresDB also evicts archived data from the host memory. AresDB’s eviction policies are based on the number of preloading days, column priorities, the day of the batch, and the column size.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AresDB also manages multiple GPU devices and models device resources as GPU threads and device memory, tracking GPU memory usage as processing queries. AresDB manages GPU devices through device manager, which models GPU device resources in two dimensions–GPU threads and device memory–and tracks the usage while processing queries. After query compilation, AresDB enables users to estimate the amount of resources needed to execute the query. Device memory requirements must be satisfied before a query is allowed to start; the query must wait to run if there is not enough memory at that moment on any device. Currently, AresDB can run either one or several queries on the same GPU device simultaneously, so long as the device satisfies all resource requirements.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the current implementation, AresDB does not cache input data in device memory for reuse across multiple queries. AresDB targets supporting queries on datasets that are constantly updated in real time and hard to cache correctly. We intend to implement a data caching functionality GPU memory in future iterations of AresDB, a step that will help optimize query performance.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Use Case: Uber’s Summary Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;At Uber, we use AresDB to build dashboards for extracting real-time business insights. AresDB plays the role of storing fresh raw events with constant updates and computing crucial metrics  against them in sub seconds using GPU power with low cost so that users can utilize the dashboards interactively. For example, anonymized trip data, which has a long lifespan in the datastore, is updated by multiple services, including our dispatch, payments, and ratings systems. To utilize trips data effectively, users will slice and dice the data into different dimensions to get insights for real-time decisions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Leveraging AresDB, Uber’s Summary Dashboard is a widely used analytics dashboard leveraged by teams across the company to retrieve relevant product metrics and respond in real time to improve user experience.&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image18.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img class=&quot;wp-image-5358&quot; src=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image18.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;293&quot; srcset=&quot;https://eng.uber.com/wp-content/uploads/2019/01/image18.png 624w, https://eng.uber.com/wp-content/uploads/2019/01/image18-300x147.png 300w, https://eng.uber.com/wp-content/uploads/2019/01/image18-533x261.png 533w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;Figure 14: The Uber Summary Dashboard’s hourly view uses AresDB to view real-time data analytics during specific time periods.
&lt;p&gt;&lt;span&gt;To build the mock-up dashboard, above, we modeled the following tables:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Trips (fact table)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;trip_id&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;request_at&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;city_id&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;status&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;driver_id&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;fare&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1542058870&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;completed&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;8.5&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1541977200&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;rejected&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;10.75&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;…&lt;/span&gt;&lt;/td&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Cities (dimension table)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;city_id&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;city_name&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;timezone&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;San Francisco&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;America/Los_Angeles&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;New York&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;America/New_York&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;…&lt;/span&gt;&lt;/td&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table schemas in AresDB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To create the two modeled tables described above, we will first need to create the tables in AresDB in the following schemas:&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody readability=&quot;22.5&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Trips&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Cities&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;45&quot;&gt;&lt;td&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “name”: “trips”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “columns”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “request_at”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “Uint32”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “trip_id”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “UUID”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “city_id”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “Uint16”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “status”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “SmallEnum”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “driver_id”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “UUID”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “fare”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “Float32”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “primaryKeyColumns”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   1&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “isFactTable”: true,&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “config”: {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “batchSize”: 2097152,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “archivingDelayMinutes”: 1440,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “archivingIntervalMinutes”: 180,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;  “recordRetentionInDays”: 30&lt;/span&gt;&lt;br/&gt;&lt;span&gt; },&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “archivingSortColumns”: [2,3]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “name”: “cities”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “columns”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt; {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “city_id”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    “type”: “Uint16”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “city_name”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “SmallEnum”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   },&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “timezone”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “type”: “SmallEnum”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “primaryKeyColumns”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   0&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “isFactTable”: false,&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “config”: {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “batchSize”: 2097152&lt;/span&gt;&lt;br/&gt;&lt;span&gt; }&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;As described in schema, trips tables are created as fact tables, representing trips events that are happening in real time, while cities tables are created as dimension tables, storing information about actual cities.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After tables are created, users may leverage the&lt;/span&gt; &lt;a href=&quot;https://github.com/uber/aresdb/blob/master/client/connector.go#L48&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;AresDB client library&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to ingest data from an event bus such as Apache&lt;/span&gt; &lt;a href=&quot;https://kafka.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Kafka&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, or streaming or batch processing platforms such as Apache&lt;/span&gt; &lt;a href=&quot;https://flink.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Flink&lt;/span&gt;&lt;/a&gt; &lt;span&gt;or Apache&lt;/span&gt; &lt;a href=&quot;https://spark.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Spark&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sample queries against AresDB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the mock-up dashboards, we choose two metrics as examples, total trip fare and active drivers. In the dashboard, users can filter the city for the metrics, eg. San Francisco. To draw the time series for these two metrics for the last 24 hours shown in the dashboards, we can run the following queries in AQL:&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody readability=&quot;18&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;&lt;strong&gt;Total trips fare in San Francisco in the last 24 hours group by hours&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Active drivers in San Francisco in the last 24 hours group by hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;32&quot;&gt;&lt;td&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “table”: “trips”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “joins”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “alias”: “cities”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “cities”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “conditions”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;       “cities.id = trips.city_id”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     ]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “dimensions”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “sqlExpression”: “request_at”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “timeBucketizer”: “hour”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “measures”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “sqlExpression”: “sum(fare)”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “rowFilters”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “status = ‘completed'”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “cities.city_name = ‘San Francisco'”&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “timeFilter”: {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “column”: “request_at”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “from”: “24 hours ago”&lt;/span&gt;&lt;br/&gt;&lt;span&gt; },&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “timezone”: “America/Los_Angeles”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “table”: “trips”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “joins”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “alias”: “cities”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “name”: “cities”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “conditions”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;       “cities.id = trips.city_id”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     ]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “dimensions”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “sqlExpression”: “request_at”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “timeBucketizer”: “hour”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “measures”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “sqlExpression”: “countDistinctHLL(driver_id)”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “rowFilters”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “status = ‘completed'”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “cities.city_name = ‘San Francisco'”&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ],&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “timeFilter”: {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “column”: “request_at”,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   “from”: “24 hours ago”&lt;/span&gt;&lt;br/&gt;&lt;span&gt; },&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “timezone”: “America/Los_Angeles”&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Sample results from the query:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The above mock-up queries will produce results in the following time series result, which can be easily drawn into time-series graphs, as shown below:&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;&lt;tbody readability=&quot;11&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;&lt;strong&gt;Total trips fare in San Francisco in the last 24 hours group by hours&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Active drivers in San Francisco in the last 24 hours group by hours&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;18&quot;&gt;&lt;td&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “results”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547060400”: 1000.0,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547064000”: 1000.0,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547067600”: 1000.0,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547071200”: 1000.0,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547074800”: 1000.0,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     …&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt; “results”: [&lt;/span&gt;&lt;br/&gt;&lt;span&gt;   {&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547060400”: 100,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547064000”: 100,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547067600”: 100,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547071200”: 100,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;     “1547074800”: 100,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    …  &lt;/span&gt;&lt;br/&gt;&lt;span&gt;   }&lt;/span&gt;&lt;br/&gt;&lt;span&gt; ]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;In the above example, we demonstrated how to leverage AresDB to ingest raw events happening in real-time within seconds and issue arbitrary user queries against the data right away to compute metrics in sub seconds. AresDB helps engineers to easily build data products that extract metrics crucial to businesses that requires real-time insights for human or machine decisions.&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Next steps&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;AresDB is widely used at Uber to power our real-time data analytics dashboards, enabling us to make data-driven decisions at scale about myriad aspects of our business. By open sourcing this tool, we hope others in the community can leverage AresDB for their own analytics.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the future, we intend to enhance the project with the following features:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Distributed design: &lt;span&gt;We are working on building out the distributed design of AresDB, including replication, sharding management, and schema management to improve its scalability and reduce operational costs.&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developer support and tooling:&lt;/strong&gt; &lt;span&gt;Since open sourcing AresDB in November 2018, we have been working on building more intuitive tooling, refactoring code structures, and enriching documentation to improve the onboarding experience, enabling developers to quickly integrate AresDB to their analytics stack.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expanding feature set:&lt;/strong&gt; &lt;span&gt;We also plan to expand our query feature set to include functionality such as window functions and nested loop joins, thereby allowing the tool to support more use cases.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Query engine optimization&lt;/strong&gt;&lt;span&gt;: We will also be looking into developing more advanced ways to optimize query performance, such as&lt;/span&gt; &lt;a href=&quot;https://llvm.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;Low Level Virtual Machine (LLVM)&lt;/span&gt;&lt;/a&gt; &lt;span&gt;and GPU memory caching.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;AresDB is&lt;/span&gt; &lt;a href=&quot;https://github.com/uber/aresdb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span&gt;open sourced&lt;/span&gt;&lt;/a&gt; &lt;span&gt;under the Apache License. We encourage you to try out AresDB and join our community.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;span&gt;If building large-scale, real-time data analytics technologies interests you, consider applying for a role on our team.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Acknowledgements&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Special thanks to Kate Zhang, Jennifer Anderson, Nikhil Joshi, Abhi Khune, Shengyue Ji, Chinmay Soman, Xiang Fu, David Chen, and Li Ning for making this project a fabulous success!&lt;/em&gt;&lt;/p&gt;



</description>
<pubDate>Tue, 29 Jan 2019 18:49:07 +0000</pubDate>
<dc:creator>manojlds</dc:creator>
<og:image>https://eng.uber.com/wp-content/uploads/2019/01/Featured-1.png</og:image>
<og:type>article</og:type>
<og:title>Introducing AresDB: Uber’s GPU-Powered Open Source, Real-time Analytics Engine</og:title>
<og:description>AresDB, Uber's open source real-time analytics engine, leverages GPUs to enable real-time computation and data processing in parallel.</og:description>
<og:url>https://eng.uber.com/aresdb/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://eng.uber.com/aresdb/</dc:identifier>
</item>
<item>
<title>A Self-Learning, Modern Computer Science Curriculum</title>
<link>https://functionalcs.github.io/curriculum/</link>
<guid isPermaLink="true" >https://functionalcs.github.io/curriculum/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&lt;title&gt;A Self-Learning, Modern Computer Science Curriculum&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;248.89269606101&quot;&gt;



&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&quot;The great idea of constructive type theory is that there is no distinction between programs and proofs... Theorems are types (specifications), and proofs are programs&quot; (Robert Harper)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a collection of modern resources on various undergrad level computer science topics, for someone with an interest in theory. Use &lt;a href=&quot;https://en.wikipedia.org/wiki/Library_Genesis&quot;&gt;LibGen&lt;/a&gt; if you can't buy these books. You don't have to do everything here, just the topics of interest to you. If for any reason you want a condensed version, watch the &lt;em&gt;Great Theoretical Ideas in Computer Science&lt;/em&gt; lecture series to see what interests you in the field. Almost all the material in each resource is self contained so will cover necessary background which if you don't have see the &lt;em&gt;preliminaries&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;how-to-learn&quot;&gt;How to Learn&lt;/h2&gt;
&lt;p&gt;On Isaac Newton's iteration method to self-learn geometry:&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&quot;He bought Descartes' Geometry and read it by himself .. when he was got over 2 or 3 pages he could understand no farther, than he began again and got 3 or 4 pages father till he came to another difficult place, than he began again and advanced farther and continued so doing till he made himself master of the whole without having the least light or instruction from anybody&quot; (King's Cam.,Keynes MS 130.10,fol. 2/v/)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cal Newport has some anecdotes on how he was able to get the &lt;a href=&quot;http://calnewport.com/blog/2008/11/25/case-study-how-i-got-the-highest-grade-in-my-discrete-math-class/&quot;&gt;best&lt;/a&gt; grade in his Discrete Mathematics class, and the rest of the site is full of advice on studying, how to schedule yourself and deliberate &lt;a href=&quot;http://calnewport.com/blog/2010/01/06/the-grandmaster-in-the-corner-office-what-the-study-of-chess-experts-teaches-us-about-building-a-remarkable-life/&quot;&gt;practice&lt;/a&gt;. Further anecdotes exist on the importance of deep work and &lt;a href=&quot;https://azeria-labs.com/the-importance-of-deep-work-the-30-hour-method-for-learning-a-new-skill/&quot;&gt;deliberate&lt;/a&gt; practice. There is a free &lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn&quot;&gt;course&lt;/a&gt; &lt;em&gt;Learning How to Learn&lt;/em&gt; on coursera.org which suggest the same techniques plus Cornell style note taking and how to read a &lt;a href=&quot;https://www.cs.jhu.edu/~jason/advice/how-to-read-a-paper.html&quot;&gt;research paper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Everything here is optional, you could try just starting with &lt;em&gt;CS 3110&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;intro-to-computation&quot;&gt;Intro to Computation&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://htdp.org/&quot;&gt;book&lt;/a&gt; &lt;em&gt;How to Design Programs (HtDP)&lt;/em&gt; has proven success teaching an introduction to programming while remaining rigorous. One of it's authors is now running a public school curriculum project called &lt;a href=&quot;https://www.bootstrapworld.org/index.shtml&quot;&gt;Bootstrap&lt;/a&gt; and gave a &lt;a href=&quot;https://youtu.be/5c0BvOlR5gs&quot;&gt;talk&lt;/a&gt; why this style of teaching programming has the most success, and how it's curriculum transfers to other fields such as how the students writing games are actually writing differential equations, as the behavior of a game over time is the integral. If you really want to understand programming you should start with this book. If you liked HtDP, it's sequel is &lt;a href=&quot;https://papl.cs.brown.edu/2018/index.html&quot;&gt;PAPL&lt;/a&gt; (original &lt;a href=&quot;http://cs.brown.edu/courses/cs173/2012/book/&quot;&gt;Racket&lt;/a&gt; version also exists, but Pyret and Racket are essentially the same languages just the author was tired of parenthesis complaints from other professors). A very rigorous introduction exists as the classic MIT book &lt;em&gt;Structural Interpretation of Computer Programs&lt;/em&gt; &lt;em&gt;(SICP)&lt;/em&gt; but the more programming you do before reading SICP, the more you get out of it.&lt;/p&gt;
&lt;h2 id=&quot;some-additional-optional-intros&quot;&gt;Some Additional Optional Intros&lt;/h2&gt;
&lt;h3 id=&quot;common-lisp-intro&quot;&gt;Common Lisp Intro&lt;/h3&gt;
&lt;p&gt;It's possible to do (or at least model) every course in this list using Common Lisp, such as building your own domain-specific &lt;a href=&quot;https://www.pvk.ca/Blog/2014/03/15/sbcl-the-ultimate-assembly-code-breadboard/&quot;&gt;machine code&lt;/a&gt; while completing 15-213 &lt;em&gt;Computer Systems&lt;/em&gt;, or hacking together &lt;a href=&quot;https://common-lisp.net/project/fset/Site/FSet-Tutorial.html&quot;&gt;purely&lt;/a&gt; functional &lt;a href=&quot;https://common-lisp.net/project/funds/funds.pdf&quot;&gt;data structures&lt;/a&gt;, or writing your own pattern matcher, or simulating a turing machine, ect. Of course you will do the courses using their recommended languages and tools, but in addition to this, building your own toy prototypes for the topics here in Lisp can help you learn this material as you discover it for yourself with active learning. Another shill for Common Lisp as a good language choice is it hasn't changed much in decades, so an old library you found that hasn't been updated in 15 years will still work. There is also the joy of programming Lisp as a &lt;a href=&quot;http://stevelosh.com/blog/2018/08/a-road-to-common-lisp/#lisp-as-a-system&quot;&gt;system&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;little-schemer-series&quot;&gt;Little Schemer Series&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.ccs.neu.edu/home/matthias/BTLS/&quot;&gt;Little Schemer series&lt;/a&gt; books are a Q&amp;amp;A format/Socratic method for learning the basics of computation (read the Preface of each book). You can do the Little Schemer with pencil and paper in a weekend though the authors recommend at least 3 sittings. The first in the series is &lt;em&gt;The Little Schemer&lt;/em&gt; which teaches you to think recursively. The second is the &lt;em&gt;Seasoned Schemer&lt;/em&gt; covering higher-order functions, which will help understand calculus. The differential operator is a higher-order function: given a function on the real line it yields its first derivative as a function on the real line.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.ccs.neu.edu/home/matthias/BTML/&quot;&gt;(Book) The Little MLer - Matthias Felleisen, Daniel P. Friedman&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Self contained but will make much more sense if you've already done the first book, &lt;em&gt;The Little Schemer&lt;/em&gt; covering cons, lists and recursion.&lt;/li&gt;
&lt;li&gt;Teaches you to think recursively, and provides an introduction to the principles of types, computation, and program construction.&lt;/li&gt;
&lt;li&gt;Applies to any functional language, almost all the exercises can be done in OCaml or another language with a small amount of syntactic adjustment.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;carnegie-mellon-university&quot;&gt;Carnegie Mellon University&lt;/h3&gt;
&lt;p&gt;Students with direct entry to this CMU course already have a background in programming. Good information here on style, design and efficiency, with an introduction to &lt;a href=&quot;https://www.cs.cmu.edu/~112/notes/notes-limits-of-computation.html&quot;&gt;complexity&lt;/a&gt; otherwise you would learn all of this in HtDP.&lt;/p&gt;
&lt;h2 id=&quot;elementary-math&quot;&gt;Elementary Math&lt;/h2&gt;
&lt;blockquote readability=&quot;31.553398058252&quot;&gt;
&lt;p&gt;&quot;So I went to Case, and the Dean of Case says to us, it's a all men's school, &quot;Men, look at, look to the person on your left, and the person on your right. One of you isn't going to be here next year; one of you is going to fail.&quot; So I get to Case, and again I'm studying all the time, working really hard on my classes, and so for that I had to be kind of a machine. In high school, our math program wasn't much, and I had never heard of calculus until I got to college. But the calculus book that we had was (in college) was great, and in the back of the book there were supplementary problems that weren't assigned by the teacher. So this was a famous calculus text by a man named George Thomas (&lt;a href=&quot;https://www.amazon.com/gp/customer-reviews/R1HJTYVOE94R83/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;amp;ASIN=0201077795&quot;&gt;second edition&lt;/a&gt;), and I mention it especially because it was one of the first books published by Addison-Wesley, and I loved this calculus book so much that later I chose Addison-Wesley to be the publisher of my own book. Our teacher would assign, say, the even numbered problems, or something like that (from the book). I would also do the odd numbered problems. In the back of Thomas's book he had supplementary problems, the teacher didn't assign the supplementary problems; I worked the supplementary problems. I was scared I wouldn't learn calculus, so I worked hard on it, and it turned out that of course it took me longer to solve all these problems than the kids who were only working on what was assigned, at first. But after a year, I could do all of those problems in the same time as my classmates were doing the assigned problems, and after that &lt;em&gt;I could just coast in mathematics, because I'd learned how to solve problems&lt;/em&gt;&quot; (&lt;a href=&quot;https://github.com/kragen/knuth-interview-2006&quot;&gt;Don Knuth&lt;/a&gt; )&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I bought George Thomas' &lt;em&gt;Calculus and Analytical Geometry&lt;/em&gt; &lt;a href=&quot;https://www.amazon.com/Calculus-Analytic-Geometry-3rd-Mathematics/dp/B0000CKUFL&quot;&gt;3rd edition&lt;/a&gt; for around $12 off Thrift Books and can see why Knuth liked this book so much as Thomas carefully goes through each proof describing what is happening. The second or classic edition is the one Knuth used and was &lt;a href=&quot;https://www.amazon.com/Calculus-Analytic-Geometry-Supplementary-Problems/dp/0201077795&quot;&gt;reprinted&lt;/a&gt; recently. There's a review of trigonometry in the 3rd edition as well.&lt;/p&gt;
&lt;h3 id=&quot;nonexistent-math-background&quot;&gt;Nonexistent Math Background&lt;/h3&gt;
&lt;p&gt;The Gelfand Correspondence &lt;a href=&quot;http://gcpm.rutgers.edu/former_description.html&quot;&gt;Program&lt;/a&gt; in Mathematics existed in the 90s, where students were sent books and could mail back assignments to be graded and coached. These &lt;a href=&quot;http://gcpm.rutgers.edu/books.html&quot;&gt;books&lt;/a&gt; are still around and are excellent taking a problem solving approach on every page. &lt;em&gt;Algebra&lt;/em&gt; and &lt;em&gt;Trigonometry&lt;/em&gt; are both recommended. While you go through any of these books try a survey of The &lt;a href=&quot;https://betterexplained.com/ebook/math/&quot;&gt;Better Explained&lt;/a&gt; Math and Calculus series books, which explain basic math such as the natural logarithm. Gilbert Strang also has a lecture series &lt;a href=&quot;https://ocw.mit.edu/resources/res-18-005-highlights-of-calculus-spring-2010/&quot;&gt;Highlights of Calculus&lt;/a&gt;. Cambridge also offers advice for incoming undergrads on readable &lt;a href=&quot;http://www.maths.cam.ac.uk/documents/reading-list.pdf/&quot;&gt;texts&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;weakforgotten-math-background&quot;&gt;Weak/Forgotten Math Background&lt;/h3&gt;
&lt;p&gt;Start with &lt;a href=&quot;https://en.wikipedia.org/wiki/Po-Shen_Loh&quot;&gt;Po-Shen Loh's&lt;/a&gt; new site &lt;a href=&quot;https://www.expii.com/&quot;&gt;Expii&lt;/a&gt;.com which presents topics in a brief intuitive manner, then feeds you problems in that domain and makes decisions based on your answers if you need more practice problems. The Advanced Topics have all kinds of great tutorials on CS Theory as well as Number Theory.&lt;/p&gt;
&lt;h3 id=&quot;calculus-with-theory&quot;&gt;Calculus With Theory&lt;/h3&gt;
&lt;p&gt;Optional, Thomas' text will teach you the theory of calculus, though doing the exercises of Apostol's &lt;em&gt;Calculus I&lt;/em&gt; is a great way to build &lt;a href=&quot;https://en.wikipedia.org/wiki/Mathematical_maturity&quot;&gt;mathematical maturity&lt;/a&gt;. This alternative Calculus w/Theory lecture &lt;a href=&quot;https://www.youtube.com/playlist?list=PLzdiPTrEWyz4rKFN541wFKvKPSg5Ea6XB&quot;&gt;series&lt;/a&gt; only uses a simple algebraic framework, eliminating limits/infinity. Linear algebraic ideas and the Discrete Calculus are both highly relevant to the material here. There is also a &lt;a href=&quot;https://www.openlearning.com/courses/algebraic-calculus-one&quot;&gt;full course&lt;/a&gt; available.&lt;/p&gt;

&lt;h2 id=&quot;principles-of-functional-programming&quot;&gt;Principles of Functional Programming&lt;/h2&gt;
&lt;p&gt;The 2012 version by &lt;a href=&quot;http://dlicata.web.wesleyan.edu/&quot;&gt;Dan Licata&lt;/a&gt; has the best lecture notes, optionally combine with most &lt;a href=&quot;http://www.cs.cmu.edu/~15150/lect.html&quot;&gt;recent&lt;/a&gt; course notes. Robert Harper keeps a &lt;a href=&quot;https://existentialtype.wordpress.com/2012/08/17/intro-curriculum-update/&quot;&gt;blog&lt;/a&gt; and a follow up &lt;a href=&quot;https://existentialtype.wordpress.com/2011/03/21/the-dog-that-didnt-bark/&quot;&gt;post&lt;/a&gt; on the success of teaching this course. SML is used because it's syntax and module system is simple, much like Scheme's easy syntax was once preferred for introductory courses so the complexity of the language gets out of the way and you learn the fundamentals.&lt;/p&gt;
&lt;h2 id=&quot;intro-to-programming-using-ocaml&quot;&gt;Intro to Programming using OCaml&lt;/h2&gt;
&lt;p&gt;This Cornell OCaml course is totally self contained with it's own &lt;a href=&quot;http://www.cs.cornell.edu/courses/cs3110/2018fa/textbook/&quot;&gt;textbook&lt;/a&gt;. You will want to archive the entire course locally using &lt;a href=&quot;https://www.guyrutenberg.com/2014/05/02/make-offline-mirror-of-a-site-using-wget/&quot;&gt;wget&lt;/a&gt;. The release code for the assignments wget them &lt;a href=&quot;https://www.cs.cornell.edu/courses/cs3110/2018sp/a5/a5.zip&quot;&gt;here&lt;/a&gt; and change URL to /a4/a4.zip, /a3/a3.zip, they range a0.zip - a5.zip&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.cs.cornell.edu/courses/cs3110/2018sp/&quot;&gt;(Full Course) CS 3110 Data Structures and Functional Programming&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;The free textbook is essentially the lectures, the &lt;a href=&quot;https://www.cs.cornell.edu/courses/cs3110/2018sp/&quot;&gt;notes&lt;/a&gt; have recommended chapters for additional books like &lt;em&gt;Real World Ocaml&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Introduction to Coq, you can extract OCaml from Coq, F* or from &lt;a href=&quot;http://www.cs.ru.nl/~gondelman/toolchain.pdf&quot;&gt;Why3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No prereqs in programming required, if you get lost on something directly look it up in &lt;a href=&quot;http://greenteapress.com/thinkocaml/&quot;&gt;this&lt;/a&gt; free book &lt;em&gt;How to Think Like a (functional) Computer Scientist&lt;/em&gt;
&lt;ul&gt;&lt;li&gt;See this &lt;a href=&quot;https://www.youtube.com/watch?v=-J8YyfrSwTk&quot;&gt;talk&lt;/a&gt; Effective ML how to properly write interfaces, error handling&lt;/li&gt;
&lt;li&gt;You can even program hardware such as a &lt;a href=&quot;https://www.youtube.com/watch?v=X1cgRXhpQLY&quot;&gt;FPGA&lt;/a&gt; in OCaml using this &lt;a href=&quot;https://github.com/janestreet/hardcaml&quot;&gt;library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Or websites using &lt;a href=&quot;https://bucklescript.github.io/&quot;&gt;bucklescript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is possible in a functional language like ML to do algebra with types, proving two types are isomorphic with the desired properties of reflexivity, symmetry, and transitivity. It's also possible to abstract Lists and Trees into polynomials, as every polynomial looks like a sum of terms. As you will learn in 15-150 &lt;em&gt;Principles of Functional Programming&lt;/em&gt; &quot;most functional datastructures have constant time access near the outer layer of their structure, ie: the head of a list or the root of a tree. However, access at some random point inside the structure is typically linear since looking at some element of a list is linear in the length of the list, and looking at some element of a tree is linear in the depth of the tree. Datatype derivatives allow constant time access to the entire structure.&quot;&lt;/p&gt;
&lt;h2 id=&quot;linear-algebra&quot;&gt;Linear Algebra&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://cs.brown.edu/courses/cs053/current/lectures.htm&quot;&gt;(Full Course) CS053 - Coding the Matrix&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Covers interesting applications like what was shown in &lt;em&gt;Great Theoretical Ideas in Computer Science&lt;/em&gt; when you learned how a parity bit works.&lt;/li&gt;
&lt;li&gt;No formal prerequisites except assumes you know how to do basic proofs&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.springer.com/gp/book/9780387940991&quot;&gt;(Book) Linear Algebra: An Introduction to Abstract Mathematics - Robert J. Valenza&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;This free &lt;a href=&quot;https://www.math.ucdavis.edu/~anne/linear_algebra/index.html&quot;&gt;book&lt;/a&gt; &lt;em&gt;Linear Algebra - As an Introduction to Abstract Mathematics&lt;/em&gt; from UC Davis, is an excellent companion to Valenza's text&lt;/li&gt;
&lt;li&gt;These YouTube presentations &lt;a href=&quot;https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&quot;&gt;here&lt;/a&gt; help with understanding the topics on a geometric level. Watch the &lt;a href=&quot;https://youtu.be/kjBOesZCoqc?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&quot;&gt;Essence of Linear Algebra&lt;/a&gt; to see what this means
&lt;ul&gt;&lt;li&gt;Other Resource: Sheldon Axler has &lt;a href=&quot;https://www.youtube.com/playlist?list=PLGAnmvB9m7zOBVCZBUUmSinFV0wEir2Vw&quot;&gt;recorded lectures&lt;/a&gt; for his book &lt;em&gt;Linear Algebra Done Right&lt;/em&gt; aka Down With Determinants!
&lt;ul&gt;&lt;li&gt;The exercises in Axler's book are either too easy, sometimes near impossible, but the presentation of material with vectors explained first before determinants is preferred&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Yet Another Resource: NJ Wildberger has a Linear Algebraic Geometry series of &lt;a href=&quot;https://www.youtube.com/watch?v=yAb12PWrhV0&amp;amp;list=PLIljB45xT85BhzJ-oWNug1YtUjfWp1qAp&quot;&gt;lectures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;abstract-algebra&quot;&gt;Abstract Algebra&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.math.upenn.edu/~ted/371F14/hw-371SchedTab.html&quot;&gt;(Full Course) Math-371 Abstract Algebra&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Has recorded lectures which are essential as you can quickly get lost in the texts at this level of abstraction&lt;/li&gt;
&lt;li&gt;Uses readings from &lt;a href=&quot;https://www.math.upenn.edu/~ted/371F14/info.html#texts&quot;&gt;three texts&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;There is also this &lt;a href=&quot;http://www.extension.harvard.edu/open-learning-initiative/abstract-algebra&quot;&gt;Harvard course&lt;/a&gt; with excellent recorded lectures and uses readings from &lt;em&gt;Algebra - M. Artin&lt;/em&gt; (blue book) as a great compliment to Math-371 lectures&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.math.hawaii.edu/~lee/algebra/history.html&quot;&gt;history&lt;/a&gt; of Abstract Algebra by Prof Lee Lady&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resources to learn undergrad Discrete Mathematics.&lt;/p&gt;
&lt;h2 id=&quot;introduction-to-pure-mathematics&quot;&gt;Introduction to Pure Mathematics&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://infinitedescent.xyz/&quot;&gt;(Book) An Infinite Descent into Pure Mathematics&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Collection of excellent lecture notes used in CMU's 15-151/21-127 Concepts of Mathematics class&lt;/li&gt;
&lt;li&gt;Curriculum based on findings in evidenced based teaching&lt;/li&gt;
&lt;li&gt;Author's motivations for not including answers are explained &lt;a href=&quot;https://infinitedescent.xyz/20180214-exercises-ibl/&quot;&gt;here&lt;/a&gt;: &quot;people learn more when they discover something for themselves than they do if someone tells them about it.&quot;
&lt;ul&gt;&lt;li&gt;Alternatively try the &lt;a href=&quot;https://archive.org/details/B-001-002-135&quot;&gt;book&lt;/a&gt; &lt;em&gt;Concrete Mathematics&lt;/em&gt; for a complete description of proof by induction, summation notation, generating functions, ect., with answers included for self-study.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;discrete-math-with-standard-ml&quot;&gt;Discrete Math with Standard ML&lt;/h2&gt;
&lt;p&gt;The merging of proof and program is what makes this a great book. If you can't get this book &lt;em&gt;Discrete Mathematics&lt;/em&gt;, by L. Lovász, J. Pelikán, and K. Vesztergombi is normally &lt;a href=&quot;http://www.math.cmu.edu/~lohp/2013-228.shtml&quot;&gt;used&lt;/a&gt; or just skip to 15-251 &lt;em&gt;Great Theoretical Ideas in CS&lt;/em&gt;. If you can finish this book you've essentially done most of 15-150 &lt;em&gt;Principles of Functional Programming&lt;/em&gt; (such as proving programs correct) and most of 15-215 &lt;em&gt;Great Theoretical Ideas in Computer Science&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://cs.wheaton.edu/~tvandrun/dmfp/&quot;&gt;(Book/Lectures) Discrete Mathematics and Functional Programming - Thomas VanDrunen&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Lectures exist on the author's homepage, this book is used for a one semester university course with additional elective chapters in Graph Theory, Complexity Theory, Automata, ect.&lt;/li&gt;
&lt;li&gt;List of &lt;a href=&quot;https://math.vanderbilt.edu/schectex/commerrs/&quot;&gt;Common Errors in Undergrad Math&lt;/a&gt; like undistributed cancellations, sign errors, confusion about notation ect. if you missed it from the prelims section of this guide
&lt;ul&gt;&lt;li&gt;&lt;em&gt;The Art of Computer Programming Vol 1: Fundamental Algorithms&lt;/em&gt; by Donald E. Knuth also offers an excellent but terse introduction to Discrete Math&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;great-theoretical-ideas-in-computer-science&quot;&gt;Great Theoretical Ideas in Computer Science&lt;/h2&gt;
&lt;p&gt;This is a crash course in multiple topics such as Probability, Linear Algebra, Modular Arithmetic, Polynomials, Cryptography and Complexity Theory. 15-251 assumes students have completed &lt;em&gt;An Infinite Descent into Pure Mathematics&lt;/em&gt; though it is self contained. &quot;This course teaches the mathematical underpinnings of computation and explores some of the central results and questions regarding the nature of computation.&quot;&lt;/p&gt;

&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;&quot;[Computer science] is not really about computers - and it's not about computers in the same sense that physics is not really about particle accelerators, and biology is not about microscopes and Petri dishes...and geometry isn't really about using surveying instruments. Now the reason that we think computer science is about computers is pretty much the same reason that the Egyptians thought geometry was about surveying instruments: when some field is just getting started and you don't really understand it very well, it's very easy to confuse the essence of what you're doing with the tools that you use.&quot; (Hal Abelson)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This covers computer architecture from a programmer's perspective, such as how to write cache friendly code, and other optimizations for the x86-64 arch. You learn how to manually write loops in assembly and see how recursion works at a lower abstraction. You learn machine code instructions, how compilers work, return oriented programming (ROP) to bypass stack protections, the memory hierarchy, and networks. You could read K&amp;amp;R's &lt;em&gt;The C Programming Language&lt;/em&gt; for a brief intro, though this course will explain C as you go anyway and fully covers pointers at the assembly language level making it self contained.&lt;/p&gt;
&lt;h2 id=&quot;designing-systems&quot;&gt;Designing Systems&lt;/h2&gt;
&lt;p&gt;Knuth constructed a futuristic architecture with 256 registers for his &lt;em&gt;Art of Computer Programming&lt;/em&gt; series to make hacking around with experimental systems programming easier. If you ever find yourself implementing instructions for something (webAssembly devs) you should read through &lt;a href=&quot;http://mmix.cs.hm.edu/doc/instructions-en.html&quot;&gt;MMIX&lt;/a&gt; documentation, for gems like MOR/MXOR.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://archive.org/details/springer_10.1007-3-540-46611-8&quot;&gt;(Book) MMIXware: a RISC computer for the third millennium - Donald E Knuth&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;An intro to MMIX &lt;a href=&quot;http://mmix.cs.hm.edu/doc/fasc1.pdf&quot;&gt;here&lt;/a&gt; with some of it's interesting design (such as implementing proper integer arithmetic) and &lt;a href=&quot;http://mmix.cs.hm.edu/getstarted.html&quot;&gt;simulators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Knuth uses literate programming to go through all design decisions, describing every line of code in detail as it's how he learned to write symbolic assemblers in the 1950s by reading other people's &lt;a href=&quot;https://github.com/kragen/knuth-interview-2006&quot;&gt;programs&lt;/a&gt; while on vacation&lt;/li&gt;
&lt;li&gt;Combine with some &lt;a href=&quot;https://www.cse.unsw.edu.au/~cs9242/18/lectures/&quot;&gt;course notes&lt;/a&gt; on open research issues for operating systems or read about the architecture and critiques of &lt;a href=&quot;http://walfield.org/papers/200707-walfield-critique-of-the-GNU-Hurd.pdf&quot;&gt;Hurd&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;A &lt;a href=&quot;https://www.morganclaypool.com/toc/cac/1/1&quot;&gt;series&lt;/a&gt; of papers in Computer Architecture curated by Princeton U (use &lt;a href=&quot;https://en.wikipedia.org/wiki/Sci-Hub&quot;&gt;sci-hub&lt;/a&gt; to access them)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Search libgen.io or sci-hub for additional &lt;a href=&quot;https://cc-conference.github.io/18/accepted-papers/&quot;&gt;papers&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Compilers:_Principles,_Techniques,_and_Tools&quot;&gt;books&lt;/a&gt; on parsers/compilers.&lt;/p&gt;

&lt;p&gt;Interesting &lt;a href=&quot;http://www.cs.cmu.edu/~./pavlo/blog/2015/09/the-next-50-years-of-databases.html&quot;&gt;post&lt;/a&gt; on the future of database systems by Andy Pavlo.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.datasciencecourse.org/lectures/&quot;&gt;(Full Course) 15-388 Practical Data Science&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Provides a practical introduction to the 'full stack' of data science analysis: data collection and processing, data visualization and presentation, statistical model building using machine learning, and big data techniques for scaling these methods.&lt;/li&gt;
&lt;li&gt;Jupyter notebook is a &lt;a href=&quot;http://www.literateprogramming.com/index.html&quot;&gt;literate programming&lt;/a&gt; paradigm tool, you can freely write using LaTeX or markdown and run the code cells in any order to not interrupt the flow of documentation.
&lt;ul&gt;&lt;li&gt;This course teaches the Python libraries, but you can do the assignments in &lt;a href=&quot;http://ucidatascienceinitiative.github.io/IntroToJulia/&quot;&gt;Julia&lt;/a&gt; if you want, or experiment in &lt;a href=&quot;http://ocaml.xyz/&quot;&gt;OCaml&lt;/a&gt; with static typing.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A classic introductory computer science book on thinking about the big picture of programs with abstraction: finding general patterns from specific problems and building programs based on these patterns. An applied example of this is the package manager &lt;a href=&quot;http://dustycloud.org/misc/talks/guix/chicagolug_2015/guix_talk.html&quot;&gt;GNU Guix&lt;/a&gt; and distro GuixSD, which is a GNU implementation of the NixOS &lt;a href=&quot;https://arxiv.org/pdf/1305.4584.pdf&quot;&gt;functional software deployment model&lt;/a&gt;. Package builds, including entire system builds, are declared in one text file. The resulting software deployment is functional: build inputs go in such as compilers, customizations, environments ect, and a reproducible, immutable build comes out with a hashed identifier meaning you can do roll backs to previous successful builds. A recent GUixSD feature &lt;a href=&quot;https://arxiv.org/pdf/1709.00833.pdf&quot;&gt;gexp&lt;/a&gt; (g-expressions) is a good example what can be achieved through syntactic extensions of the Scheme language.&lt;/p&gt;
&lt;p&gt;You are more likely to benefit from this book after having some programming experience, but no matter what &lt;a href=&quot;https://twitter.com/id_aa_carmack/status/350028210551013376?lang=en&quot;&gt;level&lt;/a&gt; of programmer you are you'll still benefit from SICP.&lt;/p&gt;


&lt;p&gt;Read &lt;a href=&quot;http://www.cs.cmu.edu/~rwh/courses/ppl/phil.html&quot;&gt;these reasons&lt;/a&gt; for studying programming languages.&lt;/p&gt;

&lt;p&gt;How to verify software, and strategies of programming that minimize catastrophe during failure. The &lt;a href=&quot;https://mitpress.mit.edu/books/little-prover&quot;&gt;Little Prover&lt;/a&gt; is a good introduction in determining facts about computer programs. Prof Rob Simmons can be &lt;a href=&quot;https://calculem.us/classes/&quot;&gt;hired&lt;/a&gt; as a tutor to teach you Coq, the curriculum follows the Software Foundations book series below.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://15316-cmu.github.io/index.html&quot;&gt;(Lecture Notes) 15-316 Software Foundations of Security and Privacy&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Covers side channel attacks, provable privacy, web security, sandboxing, assignments are extending an http network server (in C), and spotting bugs.&lt;/li&gt;
&lt;li&gt;Read about tests, strategies to safe program design (in OCaml), and proving safety from the 2017 version: git clone &lt;a href=&quot;https://github.com/jeanqasaur/cmu-15316-spring17.git&quot; class=&quot;uri&quot;&gt;https://github.com/jeanqasaur/cmu-15316-spring17.git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.princeton.edu/~appel/vfa/&quot;&gt;(Book) Verified Functional Algorithms&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Some recorded lectures by Andrew Appel &lt;a href=&quot;https://deepspec.org/event/dsss17/lecture_appel.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Part 3 of the &lt;a href=&quot;https://deepspec.org/page/SF/&quot;&gt;Deep Specifications&lt;/a&gt; interactive book series by Andrew Appel, learn by doing&lt;/li&gt;
&lt;li&gt;Assumes you have read &lt;a href=&quot;https://softwarefoundations.cis.upenn.edu/current/index.html&quot;&gt;these&lt;/a&gt; chapters of Software Foundations Part I: Preface, Basics, Induction, Lists, Poly, Tactics, Logic, IndProp, Maps, (ProofObjects), (IndPrinciples)
&lt;ul&gt;&lt;li&gt;A good introduction to Dependent Types by Dan Licata is &lt;a href=&quot;https://youtu.be/LXvP1A97oAM&quot;&gt;here&lt;/a&gt; or The Little Typer &lt;a href=&quot;https://mitpress.mit.edu/books/little-typer&quot;&gt;book&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;physical-systems-software-security&quot;&gt;Physical Systems Software Security&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://symbolaris.com/course/fcps16.html&quot;&gt;(Full Course) 15-424 Foundations of Cyber-Physical Systems&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Course (with recorded lectures) if you're interested in programming drones/space shuttles/robots/cars and other things that cannot fail from avoidable errors.&lt;/li&gt;
&lt;li&gt;Self contained, will teach you differential eq but assumes you already have some calculus background.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;introduction-to-parallel-and-sequential-algorithms&quot;&gt;Introduction to Parallel and Sequential Algorithms&lt;/h2&gt;
&lt;p&gt;Unlike a traditional introduction to algorithms and data structures, this puts an emphasis on thinking about how algorithms can do multiple things at once instead of one at a time and ways to design to exploit these properties. It uses a language based analysis model to estimate complexity for abstractions such as garbage collection.&lt;/p&gt;
&lt;h2 id=&quot;advanced-algorithms-purely-functional-data-structures&quot;&gt;Advanced Algorithms (Purely Functional Data Structures)&lt;/h2&gt;
&lt;p&gt;The typical text for a senior undergrad or graduate course on algorithm analysis is &lt;em&gt;The Design and Analysis of Algorithms&lt;/em&gt; by Kozen (1992). This is an excellent book to study with difficult problems well presented and clearly analyzed by Kozen. The Okasaki book (1999), &lt;em&gt;Purely Functional Data Structures&lt;/em&gt; gives examples in Standard ML and Haskell.&lt;/p&gt;

&lt;h2 id=&quot;undergraduate-complexity-theory&quot;&gt;Undergraduate Complexity Theory&lt;/h2&gt;
&lt;p&gt;Expands on the lectures in 15-251.&lt;/p&gt;
&lt;h2 id=&quot;graduate-complexity-theory&quot;&gt;Graduate Complexity Theory&lt;/h2&gt;
&lt;p&gt;You may want to &lt;a href=&quot;https://news.ycombinator.com/item?id=6346697&quot;&gt;try solving&lt;/a&gt; some of the problems in this domain.&lt;/p&gt;
&lt;h2 id=&quot;useful-math-for-theoretical-cs&quot;&gt;Useful Math for Theoretical CS&lt;/h2&gt;
&lt;p&gt;These scribed lecture &lt;a href=&quot;http://www.cs.cmu.edu/~odonnell/toolkit13/&quot;&gt;notes&lt;/a&gt; give you a diverse background in math useful for theoretical CS, from the excellent book &lt;a href=&quot;http://www.nature-of-computation.org/&quot;&gt;The Nature of Computation&lt;/a&gt; such as these &lt;a href=&quot;http://www.cs.cmu.edu/~15751/2016-lecture1.pdf&quot;&gt;slides&lt;/a&gt; from &lt;em&gt;A Theorist's ToolKit&lt;/em&gt; which describe how to find research, how to write math in LaTeX, how to give a talk, resources on math.overflow ect.&lt;/p&gt;

&lt;p&gt;This is a graduate introduction to quantum computation/information theory, from the perspective of theoretical computer science.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~odonnell/quantum18/&quot;&gt;(Full Course) 15-859BB: Quantum Computation&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Recorded lectures on &lt;a href=&quot;https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz&quot;&gt;YouTube&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The prereqs are an undergrad background in complexity theory (15-251 or 15-455), linear algebra, and discrete &lt;a href=&quot;http://www.cs.cmu.edu/~odonnell/papers/probability-and-computing-lecture-notes.pdf&quot;&gt;probability&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&quot;90% of the understanding of the quantum circuit model is achieved by reviewing three purely 'classical' topics: classical Boolean circuits; reversible classical circuits; and randomized computation&quot;
&lt;ul&gt;&lt;li&gt;A &lt;a href=&quot;https://www.morganclaypool.com/toc/qmc/1/1&quot;&gt;series&lt;/a&gt; of curated papers on Quantum Computing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This &lt;a href=&quot;https://triplebyte.com/&quot;&gt;service&lt;/a&gt; matches your skills to people who want to pay you. Jane Street Capital is a finance tech company that hires functional programmers worldwide, you may want to &lt;a href=&quot;https://blogs.janestreet.com/interviewing-at-jane-street/&quot;&gt;apply&lt;/a&gt; there. There are numerous opportunities to apprentice as a &lt;a href=&quot;https://www.nccgroup.trust/us/about-us/careers/current-vacancies/security-consultant/&quot;&gt;security researcher&lt;/a&gt; or get paid to prove business logic programs like 'smart contracts'. Check your local university employment listings as well, often students do not take these jobs as they are off chasing that startup stock options payday or doing industry internships, plenty of opportunities to work with post-doc researchers writing algorithms or analyzing data. For web programming there exists free programming &lt;a href=&quot;https://books.goalkicker.com/&quot;&gt;notes&lt;/a&gt; for software like NodeJS, which you can write software for in OCaml by compiling it into JS with &lt;a href=&quot;https://bucklescript.github.io/&quot;&gt;bucklescript&lt;/a&gt; or compile to web assembly.&lt;/p&gt;

&lt;p&gt;Read these &lt;a href=&quot;http://www.cs.cmu.edu/~15751/2016-lecture1.pdf&quot;&gt;slides&lt;/a&gt; from &lt;em&gt;A Theorist's ToolKit&lt;/em&gt; on how to find research, how to write math in LaTeX, how to give a talk, where to ask on stackexchange ect.&lt;/p&gt;
&lt;h2 id=&quot;basic-proof-theory&quot;&gt;Basic Proof Theory&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Start with the &lt;a href=&quot;https://www.cs.uoregon.edu/research/summerschool/summer12/curriculum.html&quot;&gt;lectures&lt;/a&gt; on &lt;em&gt;Basic Proof Theory&lt;/em&gt; by Frank Pfenning
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;intro-to-category-theory&quot;&gt;Intro to Category Theory&lt;/h2&gt;
&lt;h2 id=&quot;type-theory-foundations&quot;&gt;Type Theory Foundations&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Read Chapters 1-12, 23 and 24 from &lt;a href=&quot;http://www.seas.upenn.edu/~bcpierce/tapl/index.html&quot;&gt;TAPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Watch &lt;a href=&quot;https://www.cs.uoregon.edu/research/summerschool/summer12/curriculum.html&quot;&gt;seminar&lt;/a&gt; on &lt;em&gt;Type Theory Foundations&lt;/em&gt; by Robert Harper
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;higher-dimensional-type-theory&quot;&gt;Higher Dimensional Type Theory&lt;/h2&gt;
&lt;p&gt;Start with this &lt;a href=&quot;https://youtu.be/caSOTjr1z18&quot;&gt;talk&lt;/a&gt; &lt;em&gt;A Functional Programmer's Guide to Homotopy Type Theory&lt;/em&gt; with intro to Cubical Type Theory&lt;/p&gt;
&lt;h2 id=&quot;further-research&quot;&gt;Further Research&lt;/h2&gt;

&lt;p&gt;Read these &lt;a href=&quot;http://www.cs.cmu.edu/~15751/2016-lecture1.pdf&quot;&gt;slides&lt;/a&gt; from &lt;em&gt;A Theorist's ToolKit&lt;/em&gt; on how to find research, how to write math in LaTeX, how to give a talk, where to ask on stackexchange ect.&lt;/p&gt;
&lt;h2 id=&quot;graduate-introduction-to-general-ai&quot;&gt;Graduate Introduction to General AI&lt;/h2&gt;
&lt;p&gt;These notes &lt;a href=&quot;http://www.cs.cmu.edu/~./15381/#schedule&quot;&gt;here&lt;/a&gt; cover more topics, such as Computer Vision/NLP/AGI and follows &lt;em&gt;AI: A Modern Approach&lt;/em&gt; book by Norvig. The 15-780 course is specific to some topics in AI providing them 2-3 lectures each.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.cs.cmu.edu/afs/cs/Web/People/15780/#schedule&quot;&gt;(Full Course) 15-780 Graduate Introduction to AI&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Recorded lectures &lt;a href=&quot;https://www.youtube.com/playlist?list=PLpIxOj-HnDsPfw9slkk0BfwuiNEYVnsd_&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/playlist?list=PL_Ig1a5kxu55zgIn3Tb5Pc5C62Yo2sYHf&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No formal pre-requisites except grad level standing so familiar with some undergrad calculus and linear algebra/probability
&lt;ul&gt;&lt;li&gt;MIT's Artificial General Intelligence &lt;a href=&quot;https://agi.mit.edu/&quot;&gt;free class&lt;/a&gt; explores possible research paths for creating AGI&lt;/li&gt;
&lt;li&gt;Sussman had a great 2017 grad &lt;a href=&quot;https://ai6034.mit.edu/wiki/index.php?title=6.S966:_A_Graduate_Section_for_6.034#Prospectus&quot;&gt;course&lt;/a&gt; reviewing older paper with unsolved problems or deep ideas, like his own &lt;em&gt;Art of the Propagator&lt;/em&gt; paper and &lt;a href=&quot;http://groups.csail.mit.edu/mac/users/gjs/propagators/&quot;&gt;implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AI &lt;a href=&quot;https://courses.csail.mit.edu/6.803/schedule.html&quot;&gt;readings&lt;/a&gt; to explain intelligence from a computational point of view&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;math-background-for-ml&quot;&gt;Math Background for ML&lt;/h2&gt;
&lt;p&gt;A series of &lt;a href=&quot;https://www.youtube.com/playlist?list=PL7y-1rk2cCsAqRtWoZ95z-GMcecVG5mzA&quot;&gt;recorded&lt;/a&gt; lectures and recommended &lt;a href=&quot;https://canvas.cmu.edu/courses/603/assignments/syllabus&quot;&gt;texts&lt;/a&gt; for a crash course in the Math background for ML introductory courses&lt;/p&gt;
&lt;h2 id=&quot;statistics-theory&quot;&gt;Statistics Theory&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.stat.cmu.edu/~larry/=stat705/&quot;&gt;(Full Course) 36-705 Intermediate Statistics&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;The author of &lt;em&gt;All of Statistics&lt;/em&gt; Larry Wasserman covers the fundamentals of theoretical statistics in these (badly) recorded lectures&lt;/li&gt;
&lt;li&gt;The probability prereqs can be found &lt;a href=&quot;https://www.youtube.com/playlist?list=PL_Ig1a5kxu57qPZnHm-ie-D7vs9g7U-Cl&quot;&gt;here&lt;/a&gt; or from any undergrad text on probability&lt;/li&gt;
&lt;li&gt;Additional lecture &lt;a href=&quot;http://www.stat.cmu.edu/~larry/=sml/&quot;&gt;notes&lt;/a&gt; on the intersection of stats theory and ML&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;graduate-introduction-to-ml&quot;&gt;Graduate Introduction to ML&lt;/h2&gt;
&lt;h2 id=&quot;advanced-introduction-to-ml&quot;&gt;Advanced Introduction to ML&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~bapoczos/Classes/ML10715_2015Fall/index.html&quot;&gt;(Full Course) 10-715 Advanced Introduction to ML&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Most recent version &lt;a href=&quot;https://sites.google.com/site/10715advancedmlintro2017f/lectures&quot;&gt;here&lt;/a&gt; uses mostly the same recorded lectures.&lt;/li&gt;
&lt;li&gt;Fast paced curriculum intended to prepare PhD students in the ML grad program to write research papers&lt;/li&gt;
&lt;li&gt;Some &lt;a href=&quot;http://curtis.ml.cmu.edu/w/courses/index.php/Syllabus_for_Machine_Learning_with_Large_Datasets_10-605_in_Fall_2017&quot;&gt;slides&lt;/a&gt; on the practical techniques needed for working with large datasets
&lt;ul&gt;&lt;li&gt;Linear Algebra review crash course w/recorded lectures &lt;a href=&quot;http://www.cs.cmu.edu/~zkolter/course/linalg/index.html&quot;&gt;here&lt;/a&gt; relevant to optimization/ML&lt;/li&gt;
&lt;li&gt;Real Analysis review &lt;a href=&quot;https://www.youtube.com/channel/UC7gOYDYEgXG1yIH_rc2LgOw/playlists&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Probability lecture &lt;a href=&quot;http://www.stat.cmu.edu/~siva/700/main.html&quot;&gt;notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~epxing/Class/10701/lecture.html&quot;&gt;(Full Course) 10-701 Introduction to ML&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Intended for PhD students outside the ML program, more theory and rigor than 10-601&lt;/li&gt;
&lt;li&gt;Assumes you have this &lt;em&gt;Math Background for ML&lt;/em&gt; math background&lt;/li&gt;
&lt;li&gt;Some recorded recitations are &lt;a href=&quot;https://www.youtube.com/playlist?list=PL_Ig1a5kxu54nrfuy4V0V1eHJk3C4dV3X&quot;&gt;here&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Some &lt;a href=&quot;http://curtis.ml.cmu.edu/w/courses/index.php/Syllabus_for_Machine_Learning_with_Large_Datasets_10-605_in_Fall_2017&quot;&gt;slides&lt;/a&gt; on the practical techniques needed for working with large datasets&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;convex-optimization&quot;&gt;Convex Optimization&lt;/h2&gt;
&lt;h2 id=&quot;deep-learning&quot;&gt;Deep Learning&lt;/h2&gt;
&lt;p&gt;If you're interested in parallel GPU programming for training see these &lt;a href=&quot;https://www.youtube.com/playlist?list=PLpIxOj-HnDsO4Atvrp86c-4La9Mq3kMQZ&quot;&gt;lectures&lt;/a&gt; and &lt;a href=&quot;http://15418.courses.cs.cmu.edu/spring2016/lectures&quot;&gt;notes&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.cs.cmu.edu/~bhiksha/courses/deeplearning/Fall.2015/&quot;&gt;(Full Course) 11-785 Introduction to Deep Learning&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Recorded lectures &lt;a href=&quot;https://www.youtube.com/playlist?list=PLwrNrH82f0KgdZhGB7sm9NrOanfWBS-EN&quot;&gt;here&lt;/a&gt; to learn to build and tune deep learning models
&lt;ul&gt;&lt;li&gt;If the playlist is deleted, which is frequently, (use youtube-dl to archive) search YouTube for &quot;CMU 11-785&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;There are also applied courses and practical challenges/competitions on kaggle.com
&lt;ul&gt;&lt;li&gt;Some &lt;a href=&quot;http://www.archive.ece.cmu.edu/~ece739/schedule.html&quot;&gt;slides&lt;/a&gt; on techniques for making deep learning robust to adversarial manipulation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;algorithms-for-big-data&quot;&gt;Algorithms for Big Data&lt;/h2&gt;
&lt;h2 id=&quot;further-research-1&quot;&gt;Further Research&lt;/h2&gt;

&lt;p&gt;Read these &lt;a href=&quot;http://www.cs.cmu.edu/~15751/2016-lecture1.pdf&quot;&gt;slides&lt;/a&gt; from &lt;em&gt;A Theorist's ToolKit&lt;/em&gt; on how to find research, how to write math in LaTeX, how to give a talk, where to ask on stackexchange ect.&lt;/p&gt;
&lt;h2 id=&quot;graduate-cryptography-intro&quot;&gt;Graduate Cryptography Intro&lt;/h2&gt;
&lt;p&gt;This course covers post-quantum crypto, elliptic curve crypto, and is taught by premiere researcher Tanja Lange (TU/e)&lt;/p&gt;
&lt;h2 id=&quot;applied-cryptography&quot;&gt;Applied Cryptography&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Draft &lt;a href=&quot;https://crypto.stanford.edu/~dabo/cryptobook/&quot;&gt;book&lt;/a&gt; &lt;em&gt;A Graduate Course in Applied Cryptography&lt;/em&gt; - Dan Boneh and Victor Shoup&lt;/li&gt;
&lt;li&gt;Lecture &lt;a href=&quot;https://www.ece.cmu.edu/~ece733/schedule.html&quot;&gt;notes&lt;/a&gt; from 18-733 Applied Cryptography&lt;/li&gt;
&lt;li&gt;Read all Daniel J. Bernstein's (and Peter Gutmann's) posts on the IETF Crypto Forum Research Group [Cfrg] archive, it's a &lt;a href=&quot;https://mailarchive.ietf.org/arch/msg/cfrg/E-q_6ABdKfPU5XG2N6IVAs_sNhA/?qid=435ba2be2c3db3444e338cc0259ee124&quot;&gt;master class&lt;/a&gt; in modern &lt;a href=&quot;https://mailarchive.ietf.org/arch/msg/cfrg/oOY_QNA6QMsTJHLLbUjch6-GLsc/?qid=435ba2be2c3db3444e338cc0259ee124&quot;&gt;cryptanalysis&lt;/a&gt; and he rips apart bad standards/protocol designs.&lt;/li&gt;
&lt;li&gt;Read &lt;em&gt;The Art of Computer Programming - Seminumerical Algorithms&lt;/em&gt; by Knuth (Vol 2) chapter on Random Numbers. These tests are still used in MIT grad courses. Try them on every library you can find that supposedly generates pseudorandom numbers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wireguard.com/formal-verification/&quot;&gt;Read&lt;/a&gt; about the proof of the Wireguard protocol, a VPN that uses &lt;code&gt;AEAD_CHACHA20_POLY1305&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;future-research&quot;&gt;Future Research&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Follow whatever the PhD students of djb and Tanja Lange are &lt;a href=&quot;https://hyperelliptic.org/tanja/students.html&quot;&gt;working on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://2017.pqcrypto.org/school/schedule.html&quot;&gt;Watch&lt;/a&gt; the lectures from the 2017 Post-Quantum Crypto Summer School&lt;/li&gt;
&lt;li&gt;Read the journal of &lt;a href=&quot;https://link.springer.com/journal/13389&quot;&gt;Crypto Engineering&lt;/a&gt; (use SciHub proxy)&lt;/li&gt;
&lt;li&gt;Read a &lt;a href=&quot;http://www.math.cmu.edu/~af1p/BOOK.pdf&quot;&gt;book&lt;/a&gt; on Random Graphs there is a &lt;a href=&quot;http://math.nsc.ru/conference/g2/g2c2/TokarevaN.pdf&quot;&gt;connection&lt;/a&gt; between Graph Theory and Cryptography&lt;/li&gt;
&lt;li&gt;Try the &lt;a href=&quot;https://cryptopals.com/&quot;&gt;Cryptopals&lt;/a&gt; challenges&lt;/li&gt;
&lt;li&gt;Read some cryptocurrency papers, such as Stellar's Consensus algorithm (soon to be used by mobilecoin.com), &lt;a href=&quot;https://medium.com/@homakov/introducing-failsafe-network-ea47ab476fe6&quot;&gt;Fail-Safe Network&lt;/a&gt; or the &lt;a href=&quot;https://github.com/zcash/zips/blob/master/protocol/protocol.pdf&quot;&gt;protocol specification&lt;/a&gt; for Zcash.&lt;/li&gt;
&lt;/ul&gt;&lt;/body&gt;</description>
<pubDate>Tue, 29 Jan 2019 18:48:48 +0000</pubDate>
<dc:creator>hacknrk</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://functionalcs.github.io/curriculum/</dc:identifier>
</item>
<item>
<title>YC 120</title>
<link>https://blog.ycombinator.com/yc-120/</link>
<guid isPermaLink="true" >https://blog.ycombinator.com/yc-120/</guid>
<description>&lt;div class=&quot;post-content&quot; readability=&quot;68.601386481802&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/yc120-v1.png&quot;&gt;&lt;img src=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/yc120-v1-300x300.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;300&quot; class=&quot;aligncenter size-medium wp-image-1103414&quot; srcset=&quot;https://blog.ycombinator.com/wp-content/uploads/2019/01/yc120-v1-300x300.png 300w, https://blog.ycombinator.com/wp-content/uploads/2019/01/yc120-v1-150x150.png 150w, https://blog.ycombinator.com/wp-content/uploads/2019/01/yc120-v1-768x768.png 768w, https://blog.ycombinator.com/wp-content/uploads/2019/01/yc120-v1.png 1000w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The world is shaped by people with intelligence, drive and vision. At YC, we’ve learned a lot about cultivating a network of such people — and we believe that having a strong network is such a force multiplier that it is one of the most important assets for anyone who wants to have a significant impact on the world.&lt;/p&gt;
&lt;p&gt;We’d like to find more curious, creative people who are doing exciting work in emerging fields and give them an opportunity to start building their network. We want to connect them to each other, to people who have already done impactful work, and to us.&lt;/p&gt;
&lt;p&gt;We’d like to bring 120 of those people together for a weekend conference in Colorado from Friday, April 26 to Sunday, April 28.&lt;/p&gt;
&lt;p&gt;Are you interested in gene editing? Using technology to improve democracy and a return to fact-based debate? Finally solving physics? Building AGI? Nuclear fusion? Building a space colony? We’d like to hear from you.&lt;/p&gt;
&lt;p&gt;We’ll invite about 100 people who could use more of a network, and 20 people who are already at the top of their fields. We’ll pay for a plane ticket from anywhere in the world, lodging, and food. To continue to build the community, there will also be a few optional follow-up dinners throughout the course of the year.&lt;/p&gt;
&lt;p&gt;Aside from some basic information, all you need to do to apply is submit a one-minute video with answers to these three questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What are you interested in and what are you working on?&lt;/li&gt;
&lt;li&gt;What have you done so far that shows your potential for greatness, adjusted for whatever life circumstances you were born into?&lt;/li&gt;
&lt;li&gt;In a best-case scenario, what do you want your obituary to say?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Applications are now open. You can &lt;a href=&quot;https://apply.ycombinator.com/events/200/event_app/new&quot;&gt;apply here&lt;/a&gt;. The application deadline is Feb 18th at 11:59 PM PST.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;h3 id=&quot;mc_copy&quot;&gt;Sign up for weekly updates from Y Combinator.&lt;/h3&gt;

&lt;/div&gt;
</description>
<pubDate>Tue, 29 Jan 2019 17:03:59 +0000</pubDate>
<dc:creator>jameshk</dc:creator>
<og:title>YC 120</og:title>
<og:url>https://blog.ycombinator.com/yc-120/</og:url>
<og:type>article</og:type>
<og:description>We’d like to find more curious, creative people who are doing exciting work in emerging fields and give them an opportunity to start building their network. We’ll bring 120 of those people together for a weekend conference in Colorado from Friday, April 26 to Sunday, April 28.</og:description>
<og:image>https://blog.ycombinator.com/wp-content/uploads/2019/01/YC-120.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.ycombinator.com/yc-120/</dc:identifier>
</item>
<item>
<title>The Man Who Invented Information Theory (2017)</title>
<link>http://bostonreview.net/science-nature/tom-rutledge-man-who-invented-information-theory</link>
<guid isPermaLink="true" >http://bostonreview.net/science-nature/tom-rutledge-man-who-invented-information-theory</guid>
<description>&lt;div class=&quot;detail-secondary-mobile&quot; id=&quot;detail-secondary-mobile&quot;&gt;
&lt;div class=&quot;detail-secondary-mobile-topper&quot;&gt;
&lt;div class=&quot;detail-date&quot;&gt;
&lt;p&gt;Aug 16, 2017&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;detail-readtime&quot;&gt;
&lt;p&gt;16 Min read time&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;p class=&quot;caption caption_first&quot;&gt;&lt;em&gt;Image: &lt;a href=&quot;https://www.flickr.com/photos/tekniskamuseet/6832884236/&quot;&gt;Tekniska Museet&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;detailsummary&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;Of the pioneers who drove the information technology revolution, Claude Shannon may have been the most brilliant. A new book resurrects his legacy.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;In a video from the early 1950s, Bell Labs scientist Claude Shannon demonstrates one of his new inventions: a toy mouse named Theseus that looks like it could be a wind-up. The gaunt Shannon, looking a bit like Gary Cooper, stands next to a handsomely crafted tabletop maze and explains that Theseus (which Shannon pronounces with two syllables: “THEE-soose”) has been built to solve the maze. Through trial and error, the mouse finds a series of unimpeded openings and records the successful route. On its second attempt, Theseus follows the right path, error-free from start to finish.&lt;/p&gt;
&lt;p&gt;Shannon then unveils the secret to Theseus’s success: a dense array of electrical relays, sourced from the Bell System’s trove of phone-switching hardware. It is the 1950s equivalent of a computer chip, but it’s about a thousand times bigger and only a millionth as powerful as today’s hardware.&lt;/p&gt;
&lt;p&gt;Claude Shannon's achievements were at the level of an Einstein or a Feynman, but he has not achieved commensurate fame.&lt;/p&gt;
&lt;p&gt;While some scientists and engineers may have recognized Theseus as something important—a tidy and clever example of a thinking machine—many in Shannon’s audience probably dismissed the contraption as a fancy wind-up toy, or maybe a fraudulent automaton in the tradition of the &lt;a href=&quot;http://www.atlasobscura.com/articles/object-of-intrigue-the-turk&quot;&gt;chess-playing Turk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But the intellect behind Theseus was prodigious. Of the computer pioneers who drove the mid-20&lt;sup&gt;th&lt;/sup&gt;-century information technology revolution—an elite men’s club of scholar-engineers who also helped &lt;a href=&quot;http://www.newyorker.com/magazine/2006/02/06/code-breaker&quot;&gt;crack Nazi codes&lt;/a&gt; and pinpoint missile trajectories—Shannon may have been the most brilliant of them all. His achievements were at the level of an Einstein or a Feynman, but Shannon has not achieved commensurate fame. It’s possible his playful tinkering caused some to write him off as unserious. But it’s also possible that his greatest work seemed unapproachable to most.&lt;/p&gt;
&lt;p&gt;Shannon’s seminal work was profoundly abstract.  As the “father of information theory,” he took the bold step of divorcing information from meaning, conceiving of messages as just collections of bits, devoid of an explicit connection to the world. In many ways his work is not only counterintuitive, but dismal and remote.&lt;/p&gt;
&lt;p&gt;A new Shannon biography, &lt;em&gt;A Mind at Play: How Claude Shannon Invented the Information Age,&lt;/em&gt; may help reverse this legacy. Authors Jimmy Soni and Rob Goodman make a strong bid to expose Shannon’s work to a popular audience, balancing a chronological narrative, the “Eureka!” moments that sprang from his disciplined approach to solving puzzles, and his propensity for playfulness. The book begins, for example, in the 1920s, when a young Shannon electrified the fence around his small-town Michigan home to transform it into a telegraph wire. By the end of the century, we find Shannon playing tour guide to a parade of MIT students at his suburban Boston home, &lt;a href=&quot;http://spectrum.ieee.org/computing/software/claude-shannon-tinkerer-prankster-and-father-of-information-theory&quot;&gt;a virtual museum of homemade gadgets and toys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In between, Soni and Goodman sink their teeth into Shannon’s two greatest achievements. First, Shannon is likely the reason that almost all computers today are digital. In the 1930s, computer pioneers were essentially using watchmaking techniques to refine the wheels and cogs of hulking analog difference engines—“one of engineering’s long, blind alleys,” in Soni and Goodman’s words. Shannon set computer science definitively on the digital track with what is often called the most influential Master’s thesis ever.&lt;/p&gt;
&lt;p&gt;His &lt;a href=&quot;http://dspace.mit.edu/handle/1721.1/11173#files-area&quot;&gt;1937 MIT thesis&lt;/a&gt;, completed at age 21, demonstrated that the on-off switches of digital devices could be represented with the true-false notation developed eighty years prior by the English logician George Boole. Shannon single-handedly imported Boolean algebra into the task of electronic circuit design, radically streamlining the process and sealing off the blind alley of analog design once and for all.&lt;/p&gt;
&lt;p&gt;Shannon took the bold step of divorcing information from meaning, conceiving of messages as just collections of bits, devoid of an explicit connection to the world.&lt;/p&gt;
&lt;p&gt;Shannon may also be the reason that modern communication has progressed from the fritzy TV pictures of the 1950s to a civilization saturated with high-speed and ubiquitous multimedia data. Shannon’s crowning academic achievement, his 1948 publication of &lt;a href=&quot;http://math.harvard.edu/~ctm/home/text/others/shannon/entropy/entropy.pdf&quot;&gt;“A Mathematical Theory of Communication,”&lt;/a&gt; immediately found an audience among engineers looking to send messages faster and with greater fidelity. The paper’s deep analysis of messages—their information content, how that content can be converted to signals sent through a communication channel and then received intact at the end—provided the principles and lexicon for the transmission of all kinds of information, everywhere. Even if the names of the technologies (e.g. data compression, channel optimization, and noise reduction) mean nothing to you, you rely on them when you make a phone call, binge-watch a Netflix series, or tweet.&lt;/p&gt;
&lt;p&gt;But while information theory’s offspring have been plentiful, its pure form has no obvious calling card. It’s too intangible; the essence of information theory is in its least practical aspects. As such, it is the perfect expression of Shannon’s gift for abstraction. Soni and Goodman write that Shannon “had a way of getting behind things. He loved the objects under his hands, right up to the point when he abstracted his way past them.”&lt;/p&gt;
&lt;p&gt;• • •&lt;/p&gt;
&lt;p&gt;As Shannon began work on information theory, he faced mid-century problems: making and breaking codes, sending messages intact over long distances through wires and through the air, and building a common phone network that could connect anyone to anyone. At the time, Soni and Goodman write, “Information was a presence offstage.” Shannon’s goal was to unite the many disparate problems of information under one comprehensive solution.&lt;/p&gt;
&lt;p&gt;He delivered in 1948, after a solid decade of solitary “tooling” (in the parlance of MIT-bred engineers). His math had expanded to a consistent and complete system, applicable to every form of message transmitted through every possible communication channel. Shannon’s achievement in information theory was comparable to what Euclid’s &lt;em&gt;Elements&lt;/em&gt; had done for geometry.&lt;/p&gt;
&lt;p&gt;To make a rigorous and technical solution possible, Shannon constrained the problem. At the outset, he declared that meaning was “irrelevant to the engineering problem.” It would simply be too hard to evaluate successful transmission while taking into account all the “correlated. . . physical or conceptual entities” that make up a message’s meaning. He reduced the act of sending a message to selecting among finite possibilities and replicating the selection at the other end. This made accuracy measurable—simply compare the received message to the original.&lt;/p&gt;
&lt;p&gt;Information theory corresponds elegantly to the human elements of communication.&lt;/p&gt;
&lt;p&gt;For his working example, Shannon chose the English language. By using English, Shannon was able to appeal to readers’ intuition about what was sensible and what was nonsense. Although sense and nonsense were irrelevant under his “no meaning” stipulation, they were good intuitive proxies for accurate/inaccurate. The choice of English also opened up the language’s entire history as a literary database for both analytical and empirical information about how letters were used—their frequencies, as well as the patterns and frequencies of word combinations. Those statistics were an essential part of his model.&lt;/p&gt;
&lt;p&gt;Shannon needed an atomic unit of information, so he created one. Harkening back to Boole, Shannon reduced letters, images and sounds to bits—strings of ones and zeros. Once a message was reduced to bits, the mathematical relationships began to emerge. A message delivered in text could be measured for its contribution to the recipient’s existing knowledge—or, put differently, its ability to resolve uncertainty. In information theory, that’s “information.”&lt;/p&gt;
&lt;p&gt;Following Euclid’s model of axioms and postulates, Shannon went about the task of defining information theory's elements and their roles in the system. For example, &quot;redundancy&quot;—predictable or even repetitive strings of bits—could either be dead weight in a message or counterweight to a garbled message unintelligible without repetition. Soni and Goodman relate how early transatlantic telegraphy, due to the distortion created by primitive underwater cables, often devolved into either long sequences of the same word over again, or requests for more redundancy—“Repeat, please.” (The authors describe a scene of “communication about communication, telegraphy as an especially bleak Samuel Beckett play.”)&lt;/p&gt;
&lt;p&gt;Shannon then observed that this complex system, dynamic and variable but governed by parameters, could be characterized as a Markov process. In a nutshell, Markov processes are random, but their patterns depend on their current state. For example, the next letter in an English sentence is random but depends on the current letter—“u” is very likely after “q.” This observation availed communication of the rich analytical toolkit already in use with Markov processes and present in real-world phenomena, such as &lt;a href=&quot;https://www.researchgate.net/profile/Charles_Nelson8/publication/222463053_A_Markov_Model_of_Heteroskedasticity_Risk_and_Learning_in_the_Stock_Market/links/02e7e5182f0b5534b7000000/A-Markov-Model-of-Heteroskedasticity-Risk-and-Learning-in-the-Stoc&quot;&gt;stock price movements&lt;/a&gt;, population growth, and queues for ice cream.&lt;/p&gt;
&lt;p&gt;• • •&lt;/p&gt;
&lt;p&gt;Just as measures of length, area, and volume are fundamental to Euclid’s geometry, the actual measure of information in a message was an essential building block for information theory. The units (bits) were defined, but how would Shannon go about determining the total bits in a message? Making a leap reminiscent of his Boolean insight, Shannon imported a concept from thermodynamics. In information theory, he argued, the amount of information in a message is its “entropy.”&lt;/p&gt;
&lt;p&gt;In thermodynamics, the attributes of a system (such as temperature, volume, and energy) define its state. We may know a thermodynamic state has all of the above attributes but not know their values. Similarly, we may know a message uses a certain number of letters but not know which ones. In both cases, entropy measures the expected value of that state (or message). A very attribute-rich thermodynamic state and a very elaborate message both have high entropy.&lt;/p&gt;
&lt;p&gt;If you want to see the tools of information theory at work, consider this:&lt;/p&gt;
&lt;p&gt;The Kindle e-book of Mario Puzo’s &lt;em&gt;The Godfather&lt;/em&gt; is about a million bytes. I downloaded a 35,000-byte picture of Marlon Brando as Vito Corleone. So, since the book is about 172,000 words, or 7.5 bytes per word, that makes the picture of Vito worth almost 5,000 words.&lt;/p&gt;
&lt;p&gt;For the record, the Word file of this review is about 35,000 bytes, the same size as the Vito Corleone photo. (When you’re writing about communication, the air grows thick with &lt;em&gt;meta&lt;/em&gt; very quickly.)&lt;/p&gt;
&lt;p&gt;Turning away from meaning was a pragmatic decision that led to Shannon’s greatest triumph. It was also a kind of trick.&lt;/p&gt;
&lt;p&gt;Having built a construct as complete and powerful as information theory, Shannon gently made a point of noting the barriers to replicating his act. The “no meaning” caveat, in addition to making the math work, also challenged those following Shannon to match his standards of analytical rigor—and generally, to not overthink things.&lt;/p&gt;
&lt;p&gt;Many did not get the message. After the release of Shannon’s 1948 paper, sojourners from all disciplines projected their own problems onto the blank canvas of information theory. (Soni and Goodman sum up the public’s overly effusive response to information theory in a chapter titled “TMI.”) Perhaps this was to be expected; in some respects, every scholar traffics in “information.” And despite his caveats, Shannon left the door ajar for cross-pollination by reaching into thermodynamics for the framework of entropy. But when interlopers didn’t take his cues about the necessity of rigor, he spelled it out for them.&lt;/p&gt;
&lt;p&gt;In his 1956 essay “The Bandwagon,” Shannon wrote, &quot;The establishing of [new] applications is not a trivial matter of translating words to a new domain, but rather the slow tedious process of hypothesis and experimental verification.&quot;&lt;/p&gt;
&lt;p&gt;Shannon rejected most of the new applications of information theory, but there was one exception. In the 1950s, he advised John L. Kelly Jr.—a younger member of the Bell Labs-MIT men’s club—on a paper linking information theory to gambling. Kelly noticed the mathematical similarities between the processes of deciding how much to bet on a given risk and determining the amount of information that can be successfully transmitted over a noisy channel. The paper laid out what is now known in finance theory as the Kelly Criterion, a rule for allocating capital to risky propositions, &lt;a href=&quot;https://www.amazon.com/Fortunes-Formula-Scientific-Betting-Casinos/dp/0809045990&quot;&gt;whether at the blackjack table or in the stock market&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;• • •&lt;/p&gt;
&lt;p&gt;In the interest of keeping their narrative manageable and centered on its subject, Soni and Goodman limit discussions of information theory’s extensions. But entropy and Kelly provide seductive examples, and it’s worth letting out the leash a bit to see where the extensions might run.&lt;/p&gt;
&lt;p&gt;Information scholars are currently following the lead of physics, exploring beyond classical assumptions about the state of a communication system and incorporating concepts from quantum mechanics. Instead of using bits that resolve to one of two binary states, quantum information processing considers the possibility of information having multiple states that can be superposed. (The resulting quantum information measure is known as a “qubit.”) “Quantum Shannon theory” &lt;a href=&quot;https://books.google.com/books/about/Quantum_Information_Theory.html?id=T36v2Sp7DnIC&amp;amp;printsec=frontcover&amp;amp;source=kp_read_button#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;posits the existence of efficiencies&lt;/a&gt; (such as data compression or noise reduction techniques) that could apply to processes in the quantum world.&lt;/p&gt;
&lt;p&gt;Shannon had a way of getting behind things. He loved the objects under his hands, right up to the point when he abstracted his way past them.&lt;/p&gt;
&lt;p&gt;Are there other phenomena that could be understood and described using the template provided by information theory?&lt;/p&gt;
&lt;p&gt;Maybe. In 1961, the Cambridge physiologist H. B. Barlow wrote a paper on how nervous systems may have evolved to encode and deliver messages with maximum efficiency through an organism’s nervous system. Barlow termed his model “the efficient coding hypothesis,” evoking Eugene Fama’s “efficient-market hypothesis.”&lt;/p&gt;
&lt;p&gt;Fama’s work gave the world an analytical toolkit and lexicon for financial market risk and return. The parallels between information and economics identified by Kelly open the question of whether the concepts should complete the round-trip from Shannon to Kelly and back to Shannon. The information theory equivalents of financial concepts like risk, return, volatility, and the &lt;a href=&quot;https://www.wsj.com/articles/SB10001424052702304692804577283773166995992&quot;&gt;Sharpe Ratio&lt;/a&gt; could offer insight and discipline to some forms of communication.&lt;/p&gt;
&lt;p&gt;Turning away from meaning was a pragmatic decision that led to Shannon’s greatest triumph. At the same time, it was a kind of trick, a litigator’s crafty courtroom maneuver. Shannon approached the bench at the beginning of the trial and had the judge declare any references to “meaning” inadmissible. This enabled him to win the case at hand—the engineering problem—but left unfulfilled the promise implied by the name “information theory.”&lt;/p&gt;
&lt;p&gt;Without meaning, information theory can solve the engineering problem—but only the engineering problem. Granting engineering problems primacy in questions of meaning, however, seems like a hasty, ignominious surrender. We should at least wait to size up our coming mechanical overlords by taking stock of how current advances in artificial intelligence and machine learning play out. Soni and Goodman write that the rejection of meaning “formalized an intuition wired into the phone company—which was, after all, in the business of transmission, not interpretation.” It’s hard to avoid grim images of pale kings locked in bureaucracies executing menial tasks.&lt;/p&gt;
&lt;p&gt;Shannon clearly did not envision that kind of future for information theory. Smack in the middle of his 1948 paper, in a statement that almost serves as a giant asterisk, Shannon turned to James Joyce:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Two extremes of redundancy in English prose are represented by Basic English and by James Joyce’s book &lt;em&gt;Finnegans Wake&lt;/em&gt;. The Basic English vocabulary is limited to 850 words and the redundancy is very high. This is reflected in the expansion that occurs when a passage is translated into Basic English. Joyce on the other hand enlarges the vocabulary and is alleged to achieve a compression of semantic content.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nowhere else in the paper does Shannon use the phrase “semantic content,” nor does he again suggest that some version of data compression can apply to it. In the paper’s second paragraph, fourteen pages earlier, he had already ruled out meaning. Yet it is impossible to conclude that this comment, referencing possibly the least-mechanical English-language writer of all, was anything but intentional. While winning his court case for a meaning-free information theory, Shannon left the door open for appeals.&lt;/p&gt;
&lt;p&gt;Theoretical approaches to meaning, in fact, do abound. Contemporary literary criticism, for example, has made many &lt;a href=&quot;https://newleftreview.org/II/68/franco-moretti-network-theory-plot-analysis&quot;&gt;Shannon-inspired appropriations of scientific concepts&lt;/a&gt;, as have Saussure’s semiotics, Derrida’s deconstructionism, a wide range of &lt;a href=&quot;http://news.mit.edu/2012/applying-information-theory-to-linguistics-1010&quot;&gt;philosophical linguistics&lt;/a&gt;, and the more culturally oriented realm of media studies associated with Marshall McLuhan.&lt;/p&gt;
&lt;p&gt;• • •&lt;/p&gt;
&lt;p&gt;Despite Shannon’s admonitions, the hard scientists and engineers have also forged ahead into meaning.&lt;/p&gt;
&lt;p&gt;One was Warren Weaver. Weaver was a scholar known for republishing Shannon’s 1948 paper with a less daunting, less math-y introduction, but around the same time, he also began making pivotal breakthroughs in machine translation. By definition, translation is a task that requires more than the mere replication of a message. Weaver’s approach embraced Shannon-inspired ideas about how to use word clusters and universal language elements to improve the power and accuracy of a translation. Weaver once wrote about a hack that would help prepare verbal inputs to make them digestible for even early computers:&lt;/p&gt;
&lt;blockquote readability=&quot;21&quot;&gt;
&lt;p&gt;“It is, of course, true that Basic [English] puts multiple use on an action verb such as 'get.' But, even so, the two-word combinations such as 'get up,' 'get over,' 'get back,' etc., are, in Basic, not really very numerous. Suppose we take a vocabulary of 2,000 words, and admit for good measure all the two-word combinations as if they were single words. The vocabulary is still only four million: and that is not so formidable a number to a modern computer, is it?”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Theseus, the toy mouse, was itself a harbinger of information theory’s expanding borders. It did more than just send or receive information about its maze. It sought information out and then used it to find the right path, Theseus identified the relationships among “certain physical or conceptual entities” that Shannon considered “meaning.”&lt;/p&gt;
&lt;p&gt;In considering meaning, the humanists and the scientists are heading toward the same destination. &lt;a href=&quot;http://spectrum.ieee.org/geek-life/history/meet-the-authors-of-a-mind-at-play-how-claude-shannon-invented-the-information-age&quot;&gt;In a recent interview&lt;/a&gt;, &lt;em&gt;A Mind at Play&lt;/em&gt; co-author Rob Goodman noted information theory’s potential to unify the two tribes:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;Shannon’s life and work really called into question the whole “two cultures” paradigm, that math and science and the humanities on the other hand have very little to say to each other. . . . What Shannon was doing was not all simply hard math. It was thinking about problems that really, at the same time, consumed people in linguistics and philosophy as well.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Could information theory open a channel between the math-science tribe and the humanities tribe? Or perhaps between people and machines?&lt;/p&gt;
&lt;p&gt;Consider &lt;a href=&quot;http://www.independent.co.uk/voices/facebook-shuts-down-robots-ai-artificial-intelligence-develop-own-language-common-a7871341.html&quot;&gt;Facebook’s recent decision to shut down Bob and Alice&lt;/a&gt;, two artificially intelligent chatbots. The bots were trained in English, but suddenly became fluent in a pidgin understandable only to each other. “I can i i everything else,” for example, was a phrase Bob used to negotiate with Alice about how to split up a task.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.shortlist.com/tech/facebook-chatbot-zo-evil-ai-apocalypse-robot&quot;&gt;Some observers&lt;/a&gt; framed the occasion as a harbinger of the “technological singularity,” in which “superintelligent” machines develop the ability to improve themselves—and, so the story goes, take over the world. The concern is certainly legitimate, but in a calmer moment, it’s also interesting to consider how these bots mirror human behavior, and what that may say.&lt;/p&gt;
&lt;p&gt;What was Bob’s comment if not jargon? It is reminiscent of the transformations that &lt;a href=&quot;http://blog.oxforddictionaries.com/2014/06/social-media-changing-language/&quot;&gt;human language has undergone&lt;/a&gt; at the hand of text messaging (IMHO). When we use jargon, acronyms, metaphors—and adding more dimensions, stories and multimedia—isn’t data compression the goal?&lt;/p&gt;
&lt;p&gt;Despite an apparent cultural chasm between bibliophiles and technophiles, the engineering concepts of Claude Shannon’s information theory correspond elegantly to the more human elements of communication. If we develop that thought further, information theory may have a role to play as a rubric for good communication—one that cuts across at least two cultures.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bostonreview.net/store/&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://bostonreview.net/sites/default/files/ANoteToOurReaders_4.PNG&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;span id=&quot;most-related-view-mobile&quot;&gt;&lt;/span&gt;

</description>
<pubDate>Tue, 29 Jan 2019 15:49:05 +0000</pubDate>
<dc:creator>huihuiilly</dc:creator>
<og:type>article</og:type>
<og:title>The Man Who Invented Information Theory</og:title>
<og:url>http://bostonreview.net/science-nature/tom-rutledge-man-who-invented-information-theory</og:url>
<og:description>Of the pioneers who drove the information technology revolution, Claude Shannon may have been the most brilliant. A new book resurrects his legacy.</og:description>
<og:image>http://bostonreview.net/sites/default/files/shannonfinal2.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://bostonreview.net/science-nature/tom-rutledge-man-who-invented-information-theory</dc:identifier>
</item>
<item>
<title>Firefox 65.0 released</title>
<link>https://www.mozilla.org/en-US/firefox/65.0/releasenotes/</link>
<guid isPermaLink="true" >https://www.mozilla.org/en-US/firefox/65.0/releasenotes/</guid>
<description>&lt;li id=&quot;note-787851&quot; readability=&quot;4.8503740648379&quot;&gt;
&lt;p&gt;Enhanced tracking protection: Simplified content blocking settings give users standard, strict, and custom options to control online trackers. A redesigned content blocking section in the site information panel (viewed by expanding the small “i” icon in the address bar) shows what Firefox detects and blocks on each website you visit. To learn more about content blocking, visit the &lt;a href=&quot;https://blog.mozilla.org/blog/2019/01/29/todays-firefox-gives-users-more-control-over-their-privacy/&quot;&gt;Mozilla Blog&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;&lt;li id=&quot;note-787846&quot; readability=&quot;1.8032786885246&quot;&gt;
&lt;p&gt;A better experience for multilingual users: An &lt;a href=&quot;https://support.mozilla.org/kb/use-firefox-another-language&quot;&gt;updated Language section&lt;/a&gt; in Preferences allows users to install multiple language packs and order language preferences for Firefox and websites, without having to download locale-specific versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;note-787847&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;Support for Handoff on macOS: Continue browsing across devices. Pick up where you left off with iOS (via Firefox or Safari) on Firefox on Mac.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;note-787852&quot; readability=&quot;1.8403755868545&quot;&gt;
&lt;p&gt;A better video streaming experience for Windows users: Firefox now supports the next-generation, royalty-free video compression technology called AV1. Read about Mozilla’s contribution to this &lt;a href=&quot;https://medium.com/mozilla-tech/mozilla-celebrates-release-of-free-high-quality-video-compression-technology-av1-in-firefox-65-7c95f2b7e56&quot;&gt;new open standard&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;note-787854&quot; readability=&quot;2.7548076923077&quot;&gt;
&lt;p&gt;Improved performance and web compatibility, with support for the &lt;a href=&quot;https://developers.google.com/speed/webp/&quot;&gt;WebP image format&lt;/a&gt;: WebP brings the same image quality as existing formats at smaller file sizes, which saves bandwidth and speeds up page load.&lt;/p&gt;
&lt;/li&gt;
</description>
<pubDate>Tue, 29 Jan 2019 14:15:19 +0000</pubDate>
<dc:creator>theodorejb</dc:creator>
<og:type>website</og:type>
<og:url>https://www.mozilla.org/en-US/firefox/65.0/releasenotes/</og:url>
<og:image>https://www.mozilla.org/media/img/firefox/template/page-image.4b108ed0b8d8.png</og:image>
<og:title>Firefox 65.0, See All New Features, Updates and Fixes</og:title>
<og:description></og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.mozilla.org/en-US/firefox/65.0/releasenotes/</dc:identifier>
</item>
</channel>
</rss>