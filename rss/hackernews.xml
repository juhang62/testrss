<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Three.js Fundamentals</title>
<link>https://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html</link>
<guid isPermaLink="true" >https://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html</guid>
<description>&lt;p&gt;This is the first article in a series of articles about three.js. &lt;a href=&quot;http://threejs.org&quot;&gt;Three.js&lt;/a&gt; is a 3D library that tries to make it as easy as possible to get 3D content on a webpage.&lt;/p&gt;
&lt;p&gt;Three.js is often confused with WebGL since more often than not, but not always, three.js uses WebGL to draw 3D. &lt;a href=&quot;https://webglfundamentals.org&quot;&gt;WebGL is a very low-level system that only draws points, lines, and triangles&lt;/a&gt;. To do anything useful with WebGL generally requires quite a bit of code and that is where three.js comes in. It handles stuff like scenes, lights, shadows, materials, textures, 3d math, all things that you'd have to write yourself if you were to use WebGL directly.&lt;/p&gt;
&lt;p&gt;These tutorials assume you already know JavaScript and, for the most part they will use ES6 style. &lt;a href=&quot;https://threejsfundamentals.org/threejs/lessons/threejs-prerequisites.html&quot;&gt;See here for a terse list of things you're expected to already know&lt;/a&gt;. Most browsers that support three.js are auto-updated so most users should be able to run this code. If you'd like to make this code run on really old browsers look into a transpiler like &lt;a href=&quot;http://babel.io&quot;&gt;Babel&lt;/a&gt;. Of course users running really old browsers probably have machines that can't run three.js.&lt;/p&gt;
&lt;p&gt;When learning most programming languages the first thing people do is make the computer print &lt;code&gt;&quot;Hello World!&quot;&lt;/code&gt;. For 3D one of the most common first things to do is to make a 3D cube. so let's start with &quot;Hello Cube!&quot;&lt;/p&gt;
&lt;p&gt;The first thing we need is a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; tag so&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-html&quot;&gt;&amp;lt;body&amp;gt;
  &amp;lt;canvas id=&quot;c&quot;&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Three.js will draw into that canvas so we need to look it up and pass it to three.js.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-html&quot;&gt;&amp;lt;script&amp;gt;
'use strict';

/* global THREE */

function main() {
  const canvas = document.querySelector('#c');
  const renderer = new THREE.WebGLRenderer({canvas});
  ...
&amp;lt;/script&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note there are some esoteric details here. If you don't pass a canvas into three.js it will create one for you but then you have to add it to your document. Where to add it may change depending on your use case and you'll have to change your code so I find that passing a canvas to three.js feels a little more flexible. I can put the canvas anywhere and the code will find it where as if I had code to insert the canvas into to the document I'd likely have to change that code if my use case changed.&lt;/p&gt;
&lt;p&gt;After we look up the canvas we create a &lt;code&gt;WebGLRenderer&lt;/code&gt;. The renderer is the thing responsible for actually taking all the data you provide and rendering it to the canvas. In the past there have been other renderers like &lt;code&gt;CSSRenderer&lt;/code&gt;, a &lt;code&gt;CanvasRenderer&lt;/code&gt; and in the future there may be a &lt;code&gt;WebGL2Renderer&lt;/code&gt; or &lt;code&gt;WebGPURenderer&lt;/code&gt;. For now there's the &lt;code&gt;WebGLRenderer&lt;/code&gt; that uses WebGL to render 3D to the canvas.&lt;/p&gt;
&lt;p&gt;Next up we need a camera.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;const fov = 75;
const aspect = 2;  // the canvas default
const near = 0.1;
const far = 5;
const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;fov&lt;/code&gt; is short for &lt;code&gt;field of view&lt;/code&gt;. In this case 75 degrees in the vertical dimension. Note that most angles in three.js are in radians but for some reason the perspective camera takes degrees.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aspect&lt;/code&gt; is the display aspect of the canvas. We'll go over the details in another article but by default a canvas is 300x150 pixels which makes the aspect 300/150 or 2.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;near&lt;/code&gt; and &lt;code&gt;far&lt;/code&gt; represent the space in front of the camera that will be rendered. Anything before that range or after that range will be clipped (not drawn).&lt;/p&gt;
&lt;p&gt;Those 4 settings define a &lt;em&gt;&quot;frustum&quot;&lt;/em&gt;. A &lt;em&gt;frustum&lt;/em&gt; is the name of a 3d shape that is like a pyramid with the tip sliced off. In other words think of the word &quot;frustum&quot; as another 3D shape like sphere, cube, prism, frustum.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://threejsfundamentals.org/threejs/lessons/resources/frustum-3d.svg&quot; width=&quot;500&quot; class=&quot;threejs_center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The height of the near and far planes are determined by the field of view. The width of both planes is determined by the field of view and the aspect.&lt;/p&gt;
&lt;p&gt;Anything inside the defined frustum will be be drawn. Anything outside will not.&lt;/p&gt;
&lt;p&gt;The camera defaults to looking down the -Z axis with +Y up. We'll put our cube at the origin so we need to move the camera back a litte from the origin in order to see anything.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;camera.position.z = 2;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here's what we're aiming for.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://threejsfundamentals.org/threejs/lessons/resources/scene-down.svg&quot; width=&quot;500&quot; class=&quot;threejs_center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In the diagram above we can see our camera is at &lt;code&gt;z = 2&lt;/code&gt;. It's looking down the -Z axis. Our frustum starts 0.1 units from the front of the camera and goes to 5 units in front of the camera. Because in this diagram we are looking down, the field of view is affected by the aspect. Our canvas is twice as wide as it is tall so across view the field of view will be much wider than our specified 75 degrees which is the vertical field of view.&lt;/p&gt;
&lt;p&gt;Next we make a &lt;code&gt;Scene&lt;/code&gt;. A &lt;code&gt;Scene&lt;/code&gt; in three.js is the root of a form of scene graph. Anything you want three.js to draw needs to be added to the scene. We'll cover more details of &lt;a href=&quot;https://threejsfundamentals.org/threejs/lessons/threejs-scenegraph.html&quot;&gt;how scenes work in a future article&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;const scene = new THREE.Scene();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Next up we create a &lt;code&gt;BoxGeometry&lt;/code&gt; which contains the data for a box. Almost anything we want to display in Three.js needs geometry which defines the vertices that make up our 3D object.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;const boxWidth = 1;
const boxHeight = 1;
const boxDepth = 1;
const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We then create a basic material and set its color. Colors can be specified using standard CSS style 6 digit hex color values.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;const material = new THREE.MeshBasicMaterial({color: 0x44aa88});
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We then create a &lt;code&gt;Mesh&lt;/code&gt;. A &lt;code&gt;Mesh&lt;/code&gt; in three represents the combination of a &lt;code&gt;Geometry&lt;/code&gt; (the shape of the object) and a &lt;code&gt;Material&lt;/code&gt; (how to draw the object, shiny or flat, what color, what texture(s) to apply. Etc.) as well as the position, orientation, and scale of that object in the scene.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;const cube = new THREE.Mesh(geometry, material);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And finally we add that mesh to the scene&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;scene.add(cube);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can then render the scene by calling the renderer's render function and passing it the scene and the camera&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;renderer.render(scene, camera);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here's a working exmaple&lt;/p&gt;

&lt;p&gt;It's kind of hard to tell that is a 3D cube since we're viewing it directly down the -Z axis and the cube itself is axis aligned so we're only seeing a single face.&lt;/p&gt;
&lt;p&gt;Let's animate it spinning and hopefully that will make it clear it's being drawn in 3D. To animate it we'll render inside a render loop using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's our loop&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;function render(time) {
  time *= 0.001;  // convert time to seconds

  cube.rotation.x = time;
  cube.rotation.y = time;

  renderer.render(scene, camera);

  requestAnimationFrame(render);
}
requestAnimationFrame(render);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt; is a request to the browser that you want to animate something. You pass it a function to be called. In our case that function is &lt;code&gt;render&lt;/code&gt;. The browser will call your function and if you update anything related to the display of the page the browser will re-render the page. In our case we are calling three's &lt;code&gt;renderer.render&lt;/code&gt; function which will draw our scene.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt; passes the time since the page loaded to our function. That time is passed in milliseconds. I find it's much easier to work with seconds so here we're converting that to seconds.&lt;/p&gt;
&lt;p&gt;We then set the cube's X and Y rotation to the current time. These rotations are in &lt;a href=&quot;https://en.wikipedia.org/wiki/Radian&quot;&gt;radians&lt;/a&gt;. There are 2 pi radians in a circle so our cube should turn around once on each axis in about 6.28 seconds.&lt;/p&gt;
&lt;p&gt;We then render the scene and request another animation frame to continue our loop.&lt;/p&gt;
&lt;p&gt;Outside the loop we call &lt;code&gt;requestAnimationFrame&lt;/code&gt; one time to start the loop.&lt;/p&gt;

&lt;p&gt;It's a little better but it's still hard to see the 3d. What would help is to add some lighting so let's add a light. There are many kinds of lights in three.js which we'll go over in a future article. For now let's create a directional light.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;{
  const color = 0xFFFFFF;
  const intensity = 1;
  const light = new THREE.DirectionalLight(color, intensity);
  light.position.set(-1, 2, 4);
  scene.add(light);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Directional lights have a position and a target. Both default to 0, 0, 0. In our case we're setting the light's position to -1, 2, 4 so it's slightly on the left, above, and behind our camera. The target is still 0, 0, 0 so it will shine toward the origin.&lt;/p&gt;
&lt;p&gt;We also need to change the material. The &lt;code&gt;MeshBasicMaterial&lt;/code&gt; is not affected by lights. Let's change it to a &lt;code&gt;MeshPhongMaterial&lt;/code&gt; which is affected by lights.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;-const material = new THREE.MeshBasicMaterial({color: 0x44aa88});  // greenish blue
+const material = new THREE.MeshPhongMaterial({color: 0x44aa88});  // greenish blue
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And here it is working.&lt;/p&gt;

&lt;p&gt;It should now be pretty clearly 3D.&lt;/p&gt;
&lt;p&gt;Just for the fun of it let's add 2 more cubes.&lt;/p&gt;
&lt;p&gt;We'll use the same geometry for each cube but make a different material so each cube can be a different color.&lt;/p&gt;
&lt;p&gt;First we'll make a function that creates a new material with the specified color. Then it creates a mesh using the specified geometry and adds it to the scene and sets its X position.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;function makeInstance(geometry, color, x) {
  const material = new THREE.MeshPhongMaterial({color});

  const cube = new THREE.Mesh(geometry, material);
  scene.add(cube);

  cube.position.x = x;

  return cube;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then we'll call it 3 times with 3 different colors and X positions saving the &lt;code&gt;Mesh&lt;/code&gt; instances in an array.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;const cubes = [
  makeInstance(geometry, 0x44aa88,  0),
  makeInstance(geometry, 0x8844aa, -2),
  makeInstance(geometry, 0xaa8844,  2),
];
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Finally we'll spin all 3 cubes in our render function. We compute a slightly different rotation for each one.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
&lt;code class=&quot;lang-js&quot;&gt;function render(time) {
  time *= 0.001;  // convert time to seconds

  cubes.forEach((cube, ndx) =&amp;gt; {
    const speed = 1 + ndx * .1;
    const rot = time * speed;
    cube.rotation.x = rot;
    cube.rotation.y = rot;
  });

  ...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and here's that.&lt;/p&gt;

&lt;p&gt;If you compare it to the top down diagram above you can see it matches our expectections. With cubes at X = -2 and X = +2 they are partially outside our frustum. They are also somewhat exaggeratedly warped since the field of view across the canvas is so extreme.&lt;/p&gt;
&lt;p&gt;I hope this short intro helps to get things started. &lt;a href=&quot;https://threejsfundamentals.org/threejs/lessons/threejs-responsive.html&quot;&gt;Next up we'll cover making our code responsive so it is adaptable to multiple situations&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 18 May 2019 01:14:48 +0000</pubDate>
<dc:creator>petethomas</dc:creator>
<og:title>Three.js Fundamentals</og:title>
<og:type>website</og:type>
<og:image>http://threejsfundamentals.org/threejs/lessons/resources/threejsfundamentals.jpg</og:image>
<og:description>Your first Three.js lesson starting with the fundamentals</og:description>
<og:url>http://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html</dc:identifier>
</item>
<item>
<title>Using Rust to Scale Elixir for 11M Concurrent Users</title>
<link>https://blog.discordapp.com/using-rust-to-scale-elixir-for-11-million-concurrent-users-c6f19fc029d3</link>
<guid isPermaLink="true" >https://blog.discordapp.com/using-rust-to-scale-elixir-for-11-million-concurrent-users-c6f19fc029d3</guid>
<description>&lt;p name=&quot;6fca&quot; id=&quot;6fca&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Over the last year, the Backend Infrastructure team at Discord was hard at work improving the scalability and performance of our core real-time communications infrastructure.&lt;/p&gt;
&lt;p name=&quot;b20a&quot; id=&quot;b20a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;One big project we undertook was changing how we update the Member List (all those nifty people on the right side of the screen). Instead of sending updates for every single person in the Member List, we could just send down the updates for the visible portion of the Member List. This has obvious benefits such as less network traffic, less CPU usage, better battery life; the list goes on and on.&lt;/p&gt;
&lt;p name=&quot;0c5b&quot; id=&quot;0c5b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;However, this posed one big problem on the server side: We needed a data structure capable of holding hundreds of thousands of entries, sorted in a particular way that can accept and process tons of mutations, and can report back indices of where things are being added and removed.&lt;/p&gt;
&lt;p name=&quot;e697&quot; id=&quot;e697&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Elixir is a functional language; its data structures are immutable. This is great for reasoning about code and supporting the massive concurrency you enjoy when you write Elixir. The double-edged sword of immutable data structures is that mutations are modeled by taking an existing data structure and an operation and creating a brand new data structure that is the result of applying that operation to the existing data structure.&lt;/p&gt;
&lt;p name=&quot;c6bd&quot; id=&quot;c6bd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This meant that when someone joined a server — internally referred to as guilds — with a Member List of 100,000 members, we would have to build a new list with 100,001 members in it. The BEAM VM is pretty speedy and &lt;a href=&quot;http://blog.erlang.org/My-OTP-21-Highlights/&quot; data-href=&quot;http://blog.erlang.org/My-OTP-21-Highlights/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;getting faster everyday&lt;/a&gt;. It tries to take advantage of &lt;a href=&quot;https://en.wikipedia.org/wiki/Persistent_data_structure&quot; data-href=&quot;https://en.wikipedia.org/wiki/Persistent_data_structure&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;persistent data structures&lt;/a&gt; where it can, but at the scale we operate, these large lists could not be updated fast enough.&lt;/p&gt;
&lt;h3 name=&quot;5413&quot; id=&quot;5413&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Pushing Elixir to the Limits&lt;/h3&gt;
&lt;p name=&quot;b7ee&quot; id=&quot;b7ee&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Two engineers took up the challenge of making a pure Elixir data structure that could hold large sorted sets and support fast mutation operations. This is easier said than done, so let’s put on our Computer Science helmets and go spelunking into the caves of data structure design.&lt;/p&gt;
&lt;p name=&quot;002f&quot; id=&quot;002f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Elixir ships with a set implementation called MapSet. MapSet is a general purpose data structure built on top of the Map data structure. It’s useful for lots of Set operations, but it provides no guarantees around ordering, which is a key requirement for the Member List. This pretty much ruled out MapSet as a contender.&lt;/p&gt;
&lt;p name=&quot;32d2&quot; id=&quot;32d2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Next up would be the venerable List type: wrap the List with a helper that would enforce uniqueness and sort the list after insertion of new elements. A quick benchmark of this approach shows that for small lists — 5,000 elements— insertion time was measured between 500𝜇s and 3,000𝜇s. This was already far too slow to be viable.&lt;/p&gt;
&lt;p name=&quot;9b1f&quot; id=&quot;9b1f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Even worse, the performance of insertion scaled with size of list and depth of position in the list. Worst case that was benchmarked was adding a new element to the end of a 250,000 item list, which came in around 170,000𝜇s: basically an eternity.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*1UCJXCtJk0TNYxRgPk6htw.png&quot; data-width=&quot;1150&quot; data-height=&quot;200&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*1UCJXCtJk0TNYxRgPk6htw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*1UCJXCtJk0TNYxRgPk6htw.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;2703&quot; id=&quot;2703&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Two down, but BEAM isn’t out of the competition yet.&lt;/p&gt;
&lt;p name=&quot;f3dc&quot; id=&quot;f3dc&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Erlang ships with a module called ordsets. Ordsets are Ordered Sets, so sounds like we found the solution to our problem: Let’s break out the benchmarking to check for viability. When the list is small the performance looks pretty great measuring between 0.008𝜇s and 288𝜇s. Sadly, when the size tested was increased to 250,000 worst-case performance increased to 27,000𝜇s, which was five times faster than our custom List implementation but still not fast enough.&lt;/p&gt;
&lt;p name=&quot;5923&quot; id=&quot;5923&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Having exhausted all the obvious candidates that come with the language, a cursory search of packages was done to see if someone else had already solved and open sourced the solution to this problem. A few packages were checked, but none of them provided the properties and performance required. Thankfully, the field of Computer Science has been optimizing algorithms and data structures for storing and sorting data for the last 60 years, so there were plenty of ideas about how to proceed.&lt;/p&gt;
&lt;h3 name=&quot;c5b6&quot; id=&quot;c5b6&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;SkipList&lt;/h3&gt;
&lt;p name=&quot;1ee8&quot; id=&quot;1ee8&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The ordsets perform extremely well at small sizes. Maybe there was some way that we could chain a bunch of very small ordsets together and quickly access the correct one when accessing a particular position. If you turn your head sideways and squint real hard, this starts to look like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Skip_list&quot; data-href=&quot;https://en.wikipedia.org/wiki/Skip_list&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Skip List&lt;/a&gt;, which is exactly what was implemented.&lt;/p&gt;
&lt;p name=&quot;4cc8&quot; id=&quot;4cc8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The first incarnation of this new data structure was pretty straightforward. The OrderedSet was a wrapper around a list of Cells, inside each cell was a small ordset: the first item of the ordset, the last item of the ordset, and a count of the number of items. This allowed the OrderedSet to quickly traverse the list of Cells to find the appropriate Cell and then do a very fast ordset operation. By leveraging compile time guards in the implementation of traversal, you can get pretty good performance in the worst case scenarios that stymie ordset. Insertion of an item at the end of a 250,000 item list dropped from 27,000𝜇s to 5,000𝜇s, five times faster than raw ordsets and 34 times faster than the naive List implementation.&lt;/p&gt;
&lt;p name=&quot;bc45&quot; id=&quot;bc45&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So pop the champagne corks and celebrate, right? Not quite.&lt;/p&gt;
&lt;p name=&quot;78bd&quot; id=&quot;78bd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The old worst case was better, but a new worst case of insertion at the beginning of the list had been created; a 250,000 item list was clocking in at 19,000𝜇s. Wat?!&lt;/p&gt;
&lt;p name=&quot;f286&quot; id=&quot;f286&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This makes sense if you think about the data structure. When you insert an item into the front of the OrderedSet it ends up in the first Cell, but that Cell is full, so it evicts its last item to the next Cell, but that Cell is full, so it evicts its last item to the next Cell, and so on. At this point, most engineers would shrug and say “You can’t have your cake and eat it too,” but at Discord we are pushing the envelope on quantum cake technology.&lt;/p&gt;
&lt;h3 name=&quot;0103&quot; id=&quot;0103&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;OrderedSet&lt;/h3&gt;
&lt;p name=&quot;d726&quot; id=&quot;d726&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The problem is that when things fill up, operations can cascade from Cell to Cell. What if we could do something more clever? What if we allow Cells to swell and split, dynamically inserting new Cells in the middle of the list? This is slightly more expensive, but has the benefit that the worst case is a Cell Split instead of 2N Cell operations, where N is the number of Cells.&lt;/p&gt;
&lt;p name=&quot;df9a&quot; id=&quot;df9a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Another day of coding data structures and we were ready to benchmark.&lt;/p&gt;
&lt;p name=&quot;8780&quot; id=&quot;8780&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At small list sizes, this new dynamic OrderedSet could perform insertions at any point in the list between 4𝜇s and 34𝜇s. Not bad. The real test came when we cranked up the size to 250,000. Inserting at the beginning of the list took…. drumroll…. 4𝜇s. That’s looking fast. But remember last time we made one number fast, we made another slow. Maybe the end of the list is horrible now, better check.&lt;/p&gt;
&lt;p name=&quot;3e46&quot; id=&quot;3e46&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With a list size of 250,000 items, inserting an item at the end of the list took 640𝜇s. Looks like we have a winner.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*9c8HPdzJLpot3cdTRMEFFw.png&quot; data-width=&quot;1134&quot; data-height=&quot;200&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*9c8HPdzJLpot3cdTRMEFFw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*9c8HPdzJLpot3cdTRMEFFw.png&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;2567&quot; id=&quot;2567&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Must. Go. Faster.&lt;/h3&gt;
&lt;p name=&quot;5d36&quot; id=&quot;5d36&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;This solution would work for guilds up to 250,000 members, but that was the scaling limit. For a lot of people, this would have been the end of the story. But Discord has been using Rust to make things go fast, and we posed a question: “Could we use Rust to go faster?”&lt;/p&gt;
&lt;p name=&quot;efd9&quot; id=&quot;efd9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Rust is not a functional language, and will happily let you mutate data structures. It also has no run-time and provides “zero-cost abstractions.” If we could somehow get Rust to manage this set, it would probably perform much better.&lt;/p&gt;
&lt;p name=&quot;8e58&quot; id=&quot;8e58&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Our core services aren’t written in Rust, they are Elixir-based. Elixir serves this purpose very well, and lucky for us, the BEAM VM had another nifty trick up its sleeve. The BEAM VM has three types of functions:&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;9ddc&quot; id=&quot;9ddc&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Functions that are written in Erlang or Elixir. These are simple user-space functions.&lt;/li&gt;
&lt;li name=&quot;2b15&quot; id=&quot;2b15&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Functions that are built into the language and act as the building blocks for user-space functions. These are called BIFs or Built-In Functions.&lt;/li&gt;
&lt;li name=&quot;0685&quot; id=&quot;0685&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Then there are NIFs or Native Implemented Functions. These are functions that are built in C or Rust and compiled into the BEAM VM. Calling these functions is just like calling a BIF but, you can control what it does.&lt;/li&gt;
&lt;/ol&gt;&lt;p name=&quot;1154&quot; id=&quot;1154&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;There’s a fantastic Elixir project called &lt;a href=&quot;https://github.com/hansihe/Rustler&quot; data-href=&quot;https://github.com/hansihe/Rustler&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Rustler&lt;/a&gt;. It provides nice support on the Elixir and Rust side for making a safe NIF that is well behaved and using the guarantees of Rust is guaranteed not to crash the VM or leak memory.&lt;/p&gt;
&lt;p name=&quot;966c&quot; id=&quot;966c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We set aside a week to see if this would be worth the effort. By the end of the week, we had a very limited proof-of-concept that we could measure. The first benchmarks were extremely promising. The best case for adding an item to the set was 0.4𝜇s with a worst case of 2.85𝜇s, compared to OrderedSet’s 4𝜇s to 640𝜇s. This was a benchmark just using integers, but it was enough evidence to build out support for a wider range of Erlang Terms and fill out the rest of the functionality.&lt;/p&gt;
&lt;p name=&quot;8e0a&quot; id=&quot;8e0a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With the spike showing so much promise, we continued on building out support for most Erlang Terms and all the functionality we needed for the member list. It was time to benchmark again. We cranked the number of items all the way up to 1,000,000 items. The test machine churned for a few minutes and finally printed out the result: SortedSet best case was 0.61𝜇s and worst case was 3.68𝜇s, testing multiple sizes of sets from 5,000 to 1,000,000 items.&lt;/p&gt;
&lt;p name=&quot;4ad7&quot; id=&quot;4ad7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For the second iteration in a row we were able to make the worst case as good as the previous iterations best-case timings.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*mJ0QzqsUwQXEoi_piLOZ1A.png&quot; data-width=&quot;1142&quot; data-height=&quot;346&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*mJ0QzqsUwQXEoi_piLOZ1A.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*mJ0QzqsUwQXEoi_piLOZ1A.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;df17&quot; id=&quot;df17&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The Rust backed NIF provides massive performance benefits without trading off ease of use or memory. Since the library operations all clocked in well under the 1 millisecond threshold, we could just use the built-in Rustler guarantees and not need to worry about reductions or yielding. The SortedSet module looks to the caller to just be a vanilla Elixir module that performs crazy fast.&lt;/p&gt;
&lt;h3 name=&quot;5f22&quot; id=&quot;5f22&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Happily Ever After&lt;/h3&gt;
&lt;p name=&quot;f4e2&quot; id=&quot;f4e2&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Today, the Rust backed SortedSet powers every single Discord guild: from the 3 person guild planning a trip to Japan to 200,000 people enjoying the latest, fun game.&lt;/p&gt;
&lt;p name=&quot;5bf6&quot; id=&quot;5bf6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Since deploying SortedSet, we’ve seen performance improve across the board with no impact to memory pressure. We learned that Rust and Elixir can work side by side to operate in extremely tight performance constraints. We can still keep our core real-time communications logic in the higher-level Elixir with its wonderful guarantees and easy concurrency while dropping down into Rust when needed.&lt;/p&gt;
&lt;p name=&quot;b9af&quot; id=&quot;b9af&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If you need a high-speed mutation friendly SortedSet, &lt;a href=&quot;https://github.com/discordapp/sorted_set_nif&quot; data-href=&quot;https://github.com/discordapp/sorted_set_nif&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;we have released SortedSet as an open source library&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;63e3&quot; id=&quot;63e3&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;If solving hard problems with awesome tools like Elixir and Rust is interesting to you, &lt;a href=&quot;https://discordapp.com/jobs?team=engineering&quot; data-href=&quot;https://discordapp.com/jobs?team=engineering&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;go check out our jobs page&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 18 May 2019 00:10:23 +0000</pubDate>
<dc:creator>O_H_E</dc:creator>
<og:title>Using Rust to Scale Elixir for 11 Million Concurrent Users</og:title>
<og:url>https://blog.discordapp.com/using-rust-to-scale-elixir-for-11-million-concurrent-users-c6f19fc029d3</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*wtla_J4eY8-ftoQznTPiFA.png</og:image>
<og:description>Must. Go. Faster.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.discordapp.com/using-rust-to-scale-elixir-for-11-million-concurrent-users-c6f19fc029d3?gi=4a315b2375ff</dc:identifier>
</item>
<item>
<title>Game Engine Black Books Update</title>
<link>http://fabiensanglard.net/gebb/index.html</link>
<guid isPermaLink="true" >http://fabiensanglard.net/gebb/index.html</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;Game Engine Black Books Update&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;86.410752688172&quot;&gt;

&lt;center&gt;

&lt;/center&gt;
&lt;p&gt;May 17, 2019&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Game Engine Black Books Update&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/gebb/doom.png&quot; width=&quot;20%&quot; /&gt;&lt;img src=&quot;http://fabiensanglard.net/gebb/wolf3d.png&quot; width=&quot;20%&quot; /&gt; Here are a few updates about the Game Engine Black Books.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All reported errata have been addressed.&lt;/li&gt;
&lt;li&gt;High-quality, premium colors printouts are available.&lt;/li&gt;
&lt;li&gt;Both books are available as 300dpi PDFs. &lt;/li&gt;
&lt;li&gt;I am releasing the LateX source code of the books so you can compile them and see how they were put together.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Details of what is new:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;DOOM v1.1: All errata fixed, John Romero added a foreword (same as his anniversary post &lt;a href=&quot;https://rome.ro/news/2018/12/10/reflections-on-dooms-development&quot;&gt;Reflections on DOOM's Development&lt;/a&gt;), updated Saturn VDP1/VDP2 analysis, and better SNES dithering screenshot.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;WOLF v2.1: All errata fixed.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;They are available at the following locations and formats:&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.paypal.me/fabiensanglard&quot;&gt;Gift&lt;/a&gt; what you want, free high-res PDFs (&lt;a href=&quot;http://fabiensanglard.net/gebbdoom_v1.1.pdf&quot;&gt;DOOM&lt;/a&gt;, &lt;a href=&quot;http://fabiensanglard.net/gebbwolf3d_v2.1.pdf&quot;&gt;WOLF&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;TheBookPatch, glossy paperback with 80g coated paper and premium colors (&lt;a href=&quot;https://app.thebookpatch.com/BookStore/game-engine-black-book-doom/4df84e18-cac1-47b9-bfb3-57e8c7c8cdca&quot;&gt;DOOM&lt;/a&gt;, &lt;a href=&quot;https://app.thebookpatch.com/BookStore/game-engine-black-book-wolfenstein-3d/c1ab64b2-6df8-4ae7-91ae-64318af85a64&quot;&gt;WOLF&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Google Play DRM free eBook (&lt;a href=&quot;https://play.google.com/books/reader?id=wel6DwAAQBAJ&quot;&gt;DOOM&lt;/a&gt;, &lt;a href=&quot;https://play.google.com/books/reader?id=hel6DwAAQBAJ&quot;&gt;WOLF&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Unfortunately, I was not able to update the books on Amazon. Kindle Direct Publishing portal is rejecting my pdfs&lt;a name=&quot;back_1&quot; href=&quot;http://fabiensanglard.net/gebb/index.html#footnote_1&quot; id=&quot;back_1&quot;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt; despite accepting the three previous revisions. Their tech support could not tell me what was wrong after two weeks and multiple emails. Lesson learned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hardcover and High Quality paper version&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;http://fabiensanglard.net/gebb/prints.jpg&quot;&gt;&lt;img src=&quot;http://fabiensanglard.net/gebb/prints_small.jpg&quot; width=&quot;32%&quot; /&gt;&lt;/a&gt; Ever since publishing with CreateSpace on Amazon, I wondered how the quality compared to other printing services. After a quick survey, I ended up with three printers able to handle the Black Books peculiar dimensions.&lt;/p&gt;&lt;p&gt;- Amazon.&lt;br /&gt;- Ingram.&lt;br /&gt;- TheBookPatch.&lt;/p&gt;&lt;p&gt;I also gave a try to hardcover with Ingram since they were the only shop supporting it in 7'5&quot; x 9'25&quot; format. The $45/book listing fees and their reputation got my hopes up but the results were disappointing.&lt;/p&gt;&lt;p&gt;Ingram books were damaged upon arrival, the folding lacked polish, the customer service had room for improvement and more importantly, even premium colors looked washed out. As a result, hardcover was abandoned.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;a href=&quot;http://fabiensanglard.net/gebb/boo1.jpg&quot;&gt;&lt;img src=&quot;http://fabiensanglard.net/gebb/boo1_small.jpg&quot; width=&quot;32%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://fabiensanglard.net/gebb/boo2.jpg&quot;&gt; &lt;img src=&quot;http://fabiensanglard.net/gebb/boo2_small.jpg&quot; width=&quot;32%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://fabiensanglard.net/gebb/boo3.jpg&quot;&gt; &lt;img src=&quot;http://fabiensanglard.net/gebb/boo3_small.jpg&quot; width=&quot;32%&quot; /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Premium prints&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;I was pleased with TheBookPatch quality and professionalism. The books were well protected and in pristine condition upon arrival. Their used high-quality 80g paper. Colors were crisp so every single pixel were discernible on all screenshots.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://fabiensanglard.net/gebb/comp.jpg&quot;&gt; &lt;img src=&quot;http://fabiensanglard.net/gebb/comp_small.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Even in difficult scenes such as those rendered by the SNES, TheBookPatch did an impressive job. The achievement is striking when placed side by side with other printers where individual pixels are blended together and the dithering is not visible.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://fabiensanglard.net/gebb/pixels.jpg&quot;&gt; &lt;img src=&quot;http://fabiensanglard.net/gebb/pixels_small.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also experienced with changing the books cover. Out of the box, the matte cover looked gorgeous but rapidly turned into an off-putting fingerprint magnet. Many readers complained about it so I decided to switch to glossy which solved the problem.&lt;/p&gt;&lt;p&gt;Prices are set to I make $0.01 for each copy sold (the minimum allowed). Individual prices are $58.67 for DOOM and $44.11 for WOLF. Too bad I did not find this printer when I first got started since ordering 1000 copies entails a 30% discount. The prices could have been $41.06 for DOOM and $30.87 for WOLF. This made me regret not creating a kick starter when I got started. Something to keep in mind if I ever write an other book.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;If you are curious about how the Black Books were written, here is the LateX source code:&lt;/p&gt;&lt;p&gt;- Game Engine Black Book: Wolfenstein 3D &lt;a href=&quot;https://github.com/fabiensanglard/gebbwolf3&quot;&gt;source code&lt;/a&gt;.&lt;br /&gt;- Game Engine Black Book: DOOM &lt;a href=&quot;https://github.com/fabiensanglard/gebbdoom&quot;&gt;source code&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Each book can be compiled with a single command:&lt;/p&gt;
&lt;pre&gt;

./make.sh
  
&lt;/pre&gt;
&lt;p&gt;All work was done on MacOSX with &lt;a href=&quot;http://www.tug.org/mactex/&quot;&gt;mactex&lt;/a&gt; library and &lt;a href=&quot;https://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt; but I am confident it could build on a Linux system with minor tweaking. It is probably not very good code but it got the job done. If you have suggestions on how it could have been done better, I would be curious to hear about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;p id=&quot;paperbox&quot;&gt;&lt;a href=&quot;http://fabiensanglard.net/gebb/index.html#back_1&quot;&gt;^&lt;/a&gt; [1] Source: &lt;a href=&quot;http://fabiensanglard.net/gebb/error.png&quot;&gt;Kindle Direct Publishing error message is 'There was an error, check your PDF.'&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;center&gt;*&lt;/center&gt;
&lt;/body&gt;</description>
<pubDate>Fri, 17 May 2019 19:47:01 +0000</pubDate>
<dc:creator>brundolf</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://fabiensanglard.net/gebb/index.html</dc:identifier>
</item>
<item>
<title>Gmail tracks the history of things you buy, and it’s hard to delete</title>
<link>https://www.cnbc.com/2019/05/17/google-gmail-tracks-purchase-history-how-to-delete-it.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2019/05/17/google-gmail-tracks-purchase-history-how-to-delete-it.html</guid>
<description>&lt;div class=&quot;InlineImage-imageEmbed hasBkg&quot; id=&quot;ArticleBody-InlineImage-105621779&quot;&gt;
&lt;div class=&quot;InlineImage-wrapper&quot; readability=&quot;11&quot;&gt;

&lt;div readability=&quot;17&quot;&gt;
&lt;p&gt;Sundar Pichai, chief executive officer of Google, is sworn in during a House Judiciary Committee hearing in Washington, D.C., U.S., on Tuesday, Dec. 11, 2018.&lt;/p&gt;
&lt;p&gt;Andrew Harrer | Bloomberg | Getty Images&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;group&quot; readability=&quot;36.419152276295&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=GOOGL&quot; alt=&quot;&quot; class=&quot;&quot; rel=&quot;&quot; target=&quot;&quot; title=&quot;&quot; role=&quot;&quot; tabindex=&quot;&quot; data-type=&quot;&quot; aria-label=&quot;&quot;&gt;Google&lt;/a&gt; tracks a lot of what you buy, even if you purchased it elsewhere, like in a store or from Amazon.&lt;/p&gt;
&lt;p&gt;Last week, CEO Sundar Pichai wrote a New York Times &lt;a href=&quot;https://www.nytimes.com/2019/05/07/opinion/google-sundar-pichai-privacy.html&quot; alt=&quot;&quot; class=&quot;&quot; rel=&quot;&quot; target=&quot;&quot; title=&quot;&quot; role=&quot;&quot; tabindex=&quot;&quot; data-type=&quot;&quot; aria-label=&quot;&quot;&gt;op-ed&lt;/a&gt; that said &quot;privacy cannot be a luxury good.&quot; But behind the scenes, Google is still collecting a lot of personal information from the services you use, such as Gmail, and some of it can't be easily deleted.&lt;/p&gt;

&lt;p&gt;A page called &quot;&lt;a href=&quot;https://myaccount.google.com/purchases&quot; alt=&quot;&quot; class=&quot;&quot; rel=&quot;&quot; target=&quot;&quot; title=&quot;&quot; role=&quot;&quot; tabindex=&quot;&quot; data-type=&quot;&quot; aria-label=&quot;&quot;&gt;Purchases&lt;/a&gt; &quot; shows an accurate list of many — though not all — of the things I've bought dating back to at least 2012. I made these purchases using online services or apps such as Amazon, DoorDash or Seamless, or in stores such as Macy's, but never directly through Google.&lt;/p&gt;
&lt;p&gt;But because the digital receipts went to my Gmail account, Google has a list of info about my buying habits.&lt;/p&gt;
&lt;p&gt;Google even knows about things I long forgot I'd purchased, like dress shoes I bought inside a Macy's store on Sept. 14, 2015. It also knows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I ordered a Philly cheesesteak on a hoagie roll with Cheez Whiz and banana peppers on Jan. 14, 2016.&lt;/li&gt;
&lt;li&gt;I reloaded my Starbucks card in November 2014.&lt;/li&gt;
&lt;li&gt;I bought a new Kindle on Dec. 18, 2013, from Amazon.&lt;/li&gt;
&lt;li&gt;I bought &quot;Solo: A Star Wars Story&quot; from iTunes on Sept. 14, 2018.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And so on.&lt;/p&gt;
&lt;p&gt;Take a look at this sample, which covers some things I bought within the last week:&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;InlineImage-imageEmbed hasBkg&quot; id=&quot;ArticleBody-InlineImage-105919611&quot;&gt;
&lt;div class=&quot;InlineImage-wrapper&quot; readability=&quot;6&quot;&gt;

&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;A list of my purchases Google pulled in from Gmail.&lt;/p&gt;
&lt;p&gt;Todd Haselton | CNBC&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;group&quot; readability=&quot;22.986301369863&quot;&gt;
&lt;p&gt;Go here to see your own: &lt;a href=&quot;https://myaccount.google.com/purchases&quot; alt=&quot;&quot; class=&quot;&quot; rel=&quot;&quot; target=&quot;&quot; title=&quot;&quot; role=&quot;&quot; tabindex=&quot;&quot; data-type=&quot;&quot; aria-label=&quot;&quot;&gt;http://myaccount.google.com/purchases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&quot;To help you easily view and keep track of your purchases, bookings and subscriptions in one place, we've created a private destination that can only be seen by you,&quot; a Google spokesperson told CNBC. &quot;You can delete this information at any time. We don't use any information from your Gmail messages to serve you ads, and that includes the email receipts and confirmations shown on the Purchase page.&quot;&lt;/p&gt;
&lt;p&gt;But there isn't an easy way to remove all of this. You can delete all the receipts in your Gmail inbox and archived messages. But, if you're like me, you might save receipts in Gmail in case you need them later for returns. There is no way to delete them from Purchases without also deleting them from Gmail -- when you click on the &quot;Delete&quot; option in Purchases, it simply guides you back to the Gmail message.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;InlineImage-imageEmbed hasBkg&quot; id=&quot;ArticleBody-InlineImage-105919639&quot;&gt;
&lt;div class=&quot;InlineImage-wrapper&quot; readability=&quot;6&quot;&gt;

&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;You need to delete each purchase manually rom Gmail to get rid of it.&lt;/p&gt;
&lt;p&gt;Todd Haselton | CNBC&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;group&quot; readability=&quot;34.46372688478&quot;&gt;
&lt;p&gt;Google's privacy page says that only you can view your purchases. But it says &quot;Information about your orders may also be saved with your activity in other Google services &quot; and that you can see and delete this information on a separate &quot;My Activity&quot; page.&lt;/p&gt;
&lt;p&gt;Except you can't. Google's &lt;a href=&quot;https://myaccount.google.com/data-and-personalization&quot; alt=&quot;&quot; class=&quot;&quot; rel=&quot;&quot; target=&quot;&quot; title=&quot;&quot; role=&quot;&quot; tabindex=&quot;&quot; data-type=&quot;&quot; aria-label=&quot;&quot;&gt;activity controls page&lt;/a&gt; doesn't give you any ability to manage the data it stores on Purchases.&lt;/p&gt;
&lt;p&gt;Google told CNBC you can turn off the tracking entirely, but you have to go to another page for search setting preferences. However, when CNBC tried this, it didn't work -- there was no such option to fully turn off the tracking. It's weird this isn't front and center on Google's new privacy pages or even in Google's privacy checkup feature.&lt;/p&gt;
&lt;p&gt;Google says it &lt;a href=&quot;https://support.google.com/mail/answer/6603?hl=en&quot; alt=&quot;&quot; class=&quot;&quot; rel=&quot;&quot; target=&quot;&quot; title=&quot;&quot; role=&quot;&quot; tabindex=&quot;&quot; data-type=&quot;&quot; aria-label=&quot;&quot;&gt;doesn't use your Gmail to show you ads&lt;/a&gt; and promises it &quot;does not sell your personal information, which includes your Gmail and Google Account information,&quot; and does &quot;not share your personal information with advertisers, unless you have asked us to.&quot;&lt;/p&gt;
&lt;p&gt;But, for reasons that still aren't clear, it's pulling that information out of your Gmail and dumping it into a &quot;Purchases&quot; page most people don't seem to know exists. Even if it's not being used for ads, there's no clear reason why Google would need to track years of purchases and make it hard to delete that information. Google says it's looking into simplifying its settings to make them easier to control, however.&lt;/p&gt;
&lt;/div&gt;



</description>
<pubDate>Fri, 17 May 2019 18:27:23 +0000</pubDate>
<dc:creator>coloneltcb</dc:creator>
<og:type>article</og:type>
<og:title>Google uses Gmail to track a history of things you buy — and it's hard to delete</og:title>
<og:description>Google collects the purchases you've made, including from other stores and sites such as Amazon, and saves them on a page called Purchases.</og:description>
<og:url>https://www.cnbc.com/2019/05/17/google-gmail-tracks-purchase-history-how-to-delete-it.html</og:url>
<og:image>https://image.cnbcfm.com/api/v1/image/105621779-1544565379218pichai.jpg?v=1558107434</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2019/05/17/google-gmail-tracks-purchase-history-how-to-delete-it.html</dc:identifier>
</item>
<item>
<title>Homeless Population Jumps by Thousands Across the San Francisco Bay Area</title>
<link>https://www.latimes.com/local/lanow/la-me-ln-northern-california-homeless-count-20190517-story.html</link>
<guid isPermaLink="true" >https://www.latimes.com/local/lanow/la-me-ln-northern-california-homeless-count-20190517-story.html</guid>
<description>&lt;p&gt;Farther south in the Bay Area, the number of homeless people living in Santa Clara County increased 31% over the last two years, from 7,394 to 9,706, according to &lt;a href=&quot;https://www.sccgov.org/sites/opa/newsroom/Documents/2019%20Homeless%20Census%20News%20Release.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;preliminary results released by the county.&lt;/a&gt; San Jose saw a surge of 1,822 people, for a total of 6,172 homeless residents living in the county’s largest city.&lt;/p&gt;
</description>
<pubDate>Fri, 17 May 2019 18:17:18 +0000</pubDate>
<dc:creator>ilamont</dc:creator>
<og:url>https://www.latimes.com/local/lanow/la-me-ln-northern-california-homeless-count-20190517-story.html</og:url>
<og:title>Homeless population jumps by thousands across the San Francisco Bay Area</og:title>
<og:image>https://www.latimes.com/resizer/qZeSxjEVEtBn3sYOcSH0Or_XRuo=/1200x0/arc-anglerfish-arc2-prod-tronc.s3.amazonaws.com/public/MQIVUFJIMBGZRLGV4XNZTOXPR4.jpg</og:image>
<og:description>San Francisco, like other cities and counties across the Bay Area, reported Thursday that homelessness has increased dramatically over the last two years.</og:description>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.latimes.com/local/lanow/la-me-ln-northern-california-homeless-count-20190517-story.html</dc:identifier>
</item>
<item>
<title>Aldi, a brutally efficient grocery chain, is upending America&amp;#039;s supermarkets</title>
<link>https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/index.html</link>
<guid isPermaLink="true" >https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/index.html</guid>
<description>&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Running a supermarket in America has never been harder.&lt;/p&gt;&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Profits are razor thin. Online shopping and home delivery are changing the way people buy their food. Dollar stores and drugstores &lt;a href=&quot;https://www.cnn.com/2018/12/05/business/dollar-general-stores-food/index.html&quot; target=&quot;_blank&quot;&gt;are selling more groceries&lt;/a&gt;. Pressures are so intense that regional chains like Southeastern Grocers, the owner of Winn-Dixie and Bi-Lo, filed for bankruptcy. Large companies increasingly control the industry, which had long operated as a dispersed network of smaller, local grocers. And even Walmart — the largest player of all — faces new competition from Amazon, which &lt;a href=&quot;https://money.cnn.com/2018/08/28/technology/business/amazon-whole-foods-365-walmart-kroger-costco-grocery/index.html&quot; target=&quot;_blank&quot;&gt;bought Whole Foods in 2017&lt;/a&gt; for almost $14 billion.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;But when Walmart’s US CEO Greg Foran invokes words like “fierce,” “good” and “clever” in &lt;a href=&quot;https://corporate.walmart.com/media-library/document/2019-ubs-global-consumer-retail-conference-webcast-transcript/_proxyDocument?id=00000169-7873-d4ef-adeb-7b73b8e00000&quot; target=&quot;_blank&quot;&gt;speaking almost admiringly&lt;/a&gt; about one of his competitors, he’s not referring to Amazon. He isn’t pointing to large chains like Kroger or Albertsons, dollar stores like Dollar General or online entrants like FreshDirect and Instacart.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Foran is describing Aldi, the no-frills German discount grocery chain that’s growing aggressively in the United States and reshaping the industry along the way.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/01-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/01-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;In recent years, Aldi has expanded its produce and organic offerings to draw in more customers.&quot;/&gt;&lt;/a&gt; In recent years, Aldi has expanded its produce and organic offerings to draw in more customers.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;New customers may be jolted at first by the experience of shopping at an Aldi, which expects its customers to endure a number of minor inconveniences not typical at other American grocery stores. Shoppers need a quarter to rent a shopping cart. Plastic and paper bags are available only for a fee. And at checkout, cashiers hurry shoppers away, expecting them to bag their own groceries in a separate location away from the cash register.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;But Aldi has built a cult-like following. When it enters a new town, it’s not uncommon for hundreds of people to turn out for the grand opening. The allure is all in the rock-bottom prices, which are so cheap that Aldi often beats Walmart at its own low-price game.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;&quot;I am willing to do the extra work because the prices are amazing,” said Diane Youngpeter, who runs a fan blog about the grocer called the Aldi Nerd and an &lt;a href=&quot;https://www.facebook.com/groups/1753737854844689/&quot; target=&quot;_blank&quot;&gt;Aldi Facebook group with 50,000 members&lt;/a&gt;. “There’s a lot of Aldi nerds out there,” she said. “I didn’t realize that there were so many of us.”&lt;/p&gt;
&lt;div class=&quot;cnnix-article__image--split-grid&quot;&gt;
&lt;div class=&quot;cnnix-article__image--split-grid__item&quot;&gt;&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/meat-wide.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/meat-wide-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;cnnix-article__image--split-grid__item&quot;&gt;&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/chicke-closeup.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/chicke-closeup-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
On a recent trip to an Aldi in New Jersey, antibiotic-free chicken was $4.29 a pound. At nearby competitors, Trader Joe’s “All Natural Chicken” and Whole Foods’ “365 Organic Fresh Chicken” were $4.99 and $6.99 a pound, respectively.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi has more than 1,800 stores in 35 states and is focused on growing in the Midwest, the Mid-Atlantic, Florida and California. It’s on track to become America’s third largest supermarket chain behind Walmart and Kroger, with &lt;a href=&quot;https://corporate.aldi.us/fileadmin/fm-dam/news_and_awards/Press_Release_2017/ALDI_2017_Growth_Announcement.pdf&quot; target=&quot;_blank&quot;&gt;2,500 stores by the end of 2022&lt;/a&gt;. Its close competitor Lidl, another German grocer with a similar low-cost business model, is racing to grow in the United States, too.&lt;/p&gt;
&lt;div class=&quot;ad-container&quot;&gt;


&lt;p&gt;Advertisement&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Amid their aggressive growth push, the two discount chains have forced the rest of the grocery industry to make big changes to hold onto their customers. Aldi has even encroached on Walmart’s turf— literally. As if throwing down a gauntlet, in October Aldi opened a store in Bentonville, Arkansas, just a mile from Walmart’s corporate headquarters.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;&quot;I never underestimate them,&quot; Foran &lt;a href=&quot;https://corporate.walmart.com/media-library/document/2019-ubs-global-consumer-retail-conference-webcast-transcript/_proxyDocument?id=00000169-7873-d4ef-adeb-7b73b8e00000&quot; target=&quot;_blank&quot;&gt;said at an industry conference in March&lt;/a&gt;. “I've been competing against Aldi for 20-plus years. They are fierce and they are good.”&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;But as competitors fight back, can the company hold on to its low-cost advantage? Can it stick to what it calls the “Aldi way?”&lt;/p&gt;
&lt;section class=&quot;cnnix-article__chart&quot;&gt;
&lt;/section&gt;&lt;h2 class=&quot;cnnix-article__subheader&quot;&gt;The Aldi way: How the chain beats Walmart on price&lt;/h2&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;There’s no secret to how Aldi keeps its prices so low: The company strips down the shopping experience in an unapologetically and brutally efficient way.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“They are able to drive out every fractional cent of cost without compromising on quality,” said Katrijn Gielens, professor of marketing at UNC's Kenan-Flagler Business School.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi is privately held, and through a spokesperson, the company declined to make its executives available for interviews. But Gielens estimates that its operating costs are about half those of mainstream retailers. The company also operates at a lower profit margin than competitors, she said.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;From a customer’s point of view, the distinct experience starts at the shopping carts, which Aldi keeps locked up.&lt;/p&gt;
&lt;section class=&quot;cnnix-article__info-box&quot;&gt;&lt;div class=&quot;cnnix-article__info-box-inner&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;cnnix-article__info-box-inner__content&quot; readability=&quot;34&quot;&gt;
&lt;h2&gt;25-cent deposit&lt;/h2&gt;
&lt;p&gt;Aldi locks up its shopping carts to save on labor costs. Customers deposit a quarter, which they get back when they return the carts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cnnix-article__info-box-inner__image&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/info-box-cart-quarter.jpg&quot; alt=&quot;25-cent deposit&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Rather than employ a team of runners to retrieve carts from the parking lot all day, Aldi expects its customers to return carts to the store after each shopping trip. It forces that behavior by charging customers a quarter deposit that they get back when they return their carts.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;This is not a novel idea. Several American grocers tried it in the 1980s and 1990s, but abandoned the practice after it annoyed customers who had come to expect more services at  their grocery stores. Aldi, which opened its &lt;a href=&quot;https://corporate.aldi.us/en/aldi-history/&quot; target=&quot;_blank&quot;&gt;first US store in Iowa in 1976&lt;/a&gt;, has stuck with the model, insisting the deposit system is key to its low-price strategy. The store’s most die-hard fans even celebrate it, heralding when Aldi offers “quarter keeper” keychains from time to time. Some fans even knit their own versions. A search on Etsy for “Aldi quarter keeper” turns up &lt;a href=&quot;https://www.etsy.com/search?q=Aldi+quarter+keeper&quot; target=&quot;_blank&quot;&gt;more than 500 results&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;“I never underestimate them. I've been competing against Aldi for 20-plus years. They are fierce and they are good.”&lt;/p&gt;
&lt;/blockquote&gt;
Greg Foran, CEO of Walmart's US operations
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;The quirks don’t stop there.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;When customers enter stores, they’ll notice they look almost nothing like traditional supermarkets in the United States. With five or six super-wide aisles, Aldi only stocks around &lt;a href=&quot;https://www.dailypress.com/business/tidewater/dp-tidewaterbiz-aldi-20170427-story.html&quot; target=&quot;_blank&quot;&gt;1,400 items&lt;/a&gt; — compared to around 40,000 at traditional supermarkets and more than 100,000 at Walmart supercenters.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/aldi-shoppers2.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/aldi-shoppers2-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;Aldi displays products in their original cardboard shipping boxes, rather than stacking them individually, to save employees time stocking shelves.&quot;/&gt;&lt;/a&gt; Aldi displays products in their original cardboard shipping boxes, rather than stacking them individually, to save employees time stocking shelves.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;For time-strapped shoppers like Youngpeter, Aldi’s simple layouts and limited selection save her time. “I’m a busy mom. I don’t have time to navigate a huge grocery store with kids begging to get out and go home,” she said. “I can get in and out of an Aldi in no time. I’m not sifting through 50 different varieties of salsa.”&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;And good luck trying to find major name brands. More than 90% of the brands Aldi sells are its own private labels like Simply Nature organic products, Millville cereals, Burman’s ketchup and Specially Selected bread. (If this sounds like Trader Joe’s, that’s not a coincidence. The two companies share a common history.)&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;The packaging on these items sometimes looks so similar to  brand-name alternatives that customers find themselves doing a double-take. Aldi's Honey Nut Crispy Oats, for example, come in a box nearly the same shades of orange, yellow and brown as General Mills’ Honey Nut Cheerios, and with a similar font, too. Aldi sells its Tandil laundry detergent in an orange plastic jug with blue and yellow graphics reminiscent of Tide. The Millville Toaster Tarts, an Aldi house brand, look strikingly similar to Pop-Tarts — but a 12-pack of the Millville version is $1.85 while a 12-pack of Pop-Tarts costs $2.75.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/06-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/06-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;More than 90% of the products Aldi sells are its own private labels. In many cases, the packaging closely resembles familiar brands.&quot;/&gt;&lt;/a&gt; More than 90% of the products Aldi sells are its own private labels. In many cases, the packaging closely resembles familiar brands.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“I’m like, ‘these corn flakes are just as good, if not better, than the ones that have a chicken on the box! They’re the same exact ones,’” said Allison Robicelli, a food writer in Baltimore who describes herself as an Aldi loyalist.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Although it may not be obvious at first glance, Aldi employs several key design details that maximize efficiency at checkout, too. On many of its products, barcodes are either supersized or printed on multiple sides to speed up the scanning process. After groceries are rung up, there’s nowhere for them to linger. The cashier drops them directly into a shopping cart below. Aldi doesn’t waste time bagging groceries. Customers must wheel away their shopping carts to bag their own groceries in a separate section at the front. Since stores don’t offer free bags, customers often scour the store for empty cardboard boxes to use instead.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“Those lines fly. You’re not waiting for people to bag. They’re not messing around there,” said Robicelli. “Once you see that kind of efficiency, it makes going to other supermarkets really annoying and really tedious.”&lt;/p&gt;
&lt;section class=&quot;cnnix-article__info-box&quot;&gt;&lt;div class=&quot;cnnix-article__info-box-inner&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;cnnix-article__info-box-inner__content&quot; readability=&quot;34&quot;&gt;
&lt;h2&gt;Speedy cashiers&lt;/h2&gt;
&lt;p&gt;Another labor-saving trick: Cashiers don’t bag groceries. Instead, they drop items directly into customers’ carts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cnnix-article__info-box-inner__image&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/info-box-cashier.jpg&quot; alt=&quot;Speedy cashiers&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi has other tactics to keep real estate and labor costs down. Size is one factor. A Walmart supercenter averages around 178,000 square feet. &lt;a href=&quot;https://www.cnn.com/2018/09/14/business/costco-warehouse-kirkland-signature-amazon-retail/index.html&quot; target=&quot;_blank&quot;&gt;Costco warehouses&lt;/a&gt; average around 145,000 square feet. Aldi’s small box stores, however, take up just a fraction of that space, at 12,000 square feet on average.&lt;/p&gt;
&lt;div class=&quot;cnnix-article__stat-logo&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/bubbles.png&quot; alt=&quot;Aldi only stocks about 1,400 items compared to 40,000 at traditional supermarkets.&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;cnnix-article__stat-vs&quot;&gt;&lt;span class=&quot;number&quot;&gt;1,400&lt;/span&gt; VS &lt;span class=&quot;number-2&quot;&gt;40,000&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;cnnix-article__stat-copy cnnix-article__stat-copy--right&quot;&gt;Aldi only stocks about 1,400 items compared to 40,000 at traditional supermarkets.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;And unlike other stores, where there’s a clear division of labor — runners retrieve carts, cashiers ring up customers and clerks stock shelves — Aldi employees are cross-trained to perform every function. Their duties are also streamlined. Aldi displays products in their original cardboard shipping boxes, rather than stacking them individually, to save employees time stocking shelves. Most stores don’t list their phone numbers publicly because Aldi doesn’t want its workers to spend time answering calls.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;The result: A single Aldi might have only three to five employees in the store at any given time, and only 15 to 20 on the entire payroll. The company claims to pay its workers above the industry average, but still saves on overall labor costs simply by having fewer people.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;All of these cost savings add up and are passed on to customers. Aldi claims its prices are up to 50% cheaper than traditional supermarkets, and independent analysis by Wolfe Research shows its prices are around 15% cheaper than Walmart in markets like Houston and Chicago.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/08-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/08-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;Aldi is investing $1.9 billion in remodeling 1,300 US stores, including expanded frozen and refrigerated sections.&quot;/&gt;&lt;/a&gt; Aldi is investing $1.9 billion in remodeling 1,300 US stores, including expanded frozen and refrigerated sections.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;&quot;They've driven prices down, cleverly,&quot; Walmart's Foran said. Last year, &lt;a href=&quot;https://corporate.walmart.com/media-library/document/2018-investment-community-meeting-meeting-transcript/_proxyDocument?id=00000166-82dd-ddfc-a3f6-d2ff4f800001&quot; target=&quot;_blank&quot;&gt;he noted&lt;/a&gt; that when he visited Aldi, a gallon of milk and a dozen eggs each cost 99 cents. Foran said he and his team could not risk losing on those popular items.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Despite the stripped-down store experience, Aldi scores &lt;a href=&quot;https://talkbusiness.net/2019/01/new-survey-shows-walmart-ranks-below-aldi-supermarket-chains-in-overall-satisfaction/&quot; target=&quot;_blank&quot;&gt;higher on customer satisfaction surveys&lt;/a&gt; and benefits far more from word-of-mouth marketing than Walmart and other supermarkets. It has one of the highest Net Promoter Scores — a key measure of how likely customers are to recommend the brand to their friends and family — in the grocery industry, according to Bain &amp;amp; Company.&lt;/p&gt;
&lt;h2 class=&quot;cnnix-article__subheader&quot;&gt;Cheap kombucha on the shelves, BMWs in the parking lots&lt;/h2&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;After Aldi first entered the United States, it took two decades for the company to expand to 500 stores.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Now, in its rapid growth phase, Aldi is on track to open more than 130 new stores just this year alone.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/09-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/09-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;It’s not uncommon to see luxury cars in Aldi’s parking lots — a detail even a top Walmart executive has noted.&quot;/&gt;&lt;/a&gt; It’s not uncommon to see luxury cars in Aldi’s parking lots — a detail even a top Walmart executive has noted.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;The Great Recession and its slow recovery helped the discount grocer gain popularity among budget-conscious shoppers in the United States. Aldi’s latest expansion builds on that momentum. &quot;Over the last 10 years, they’ve really flourished in the US,” said Mikey Vu, partner at Bain. “There’s instability in the economy. People are worried. They’re paying much closer attention to pennies on their grocery purchases than ever before.”&lt;/p&gt;
&lt;div class=&quot;cnnix-article__stat-logo&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/us-shoppers.png&quot; alt=&quot;85% of US shoppers say they're open to trying store brands.&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;cnnix-article__stat-copy cnnix-article__stat-copy--left&quot;&gt;&lt;span class=&quot;number&quot;&gt;85%&lt;/span&gt;85% of US shoppers say they're open to trying store brands.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__stat-credit&quot;&gt;Source: Bain &amp;amp; Company survey&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Of course, Aldi is not the only discount store growing in retail. &lt;a href=&quot;https://money.cnn.com/2018/07/30/news/companies/ross-stores-tj-maxx-burlington-off-price-discount-retail/index.html&quot; target=&quot;_blank&quot;&gt;TJMaxx, Ross&lt;/a&gt; and Burlington are all opening new doors, and their cheap prices have put pressure on department stores. &lt;a href=&quot;https://www.cnn.com/2019/01/11/business/ollies-buys-toys-r-us/index.html&quot; target=&quot;_blank&quot;&gt;Ollie’s Bargain Outlet&lt;/a&gt; and Five Below are growing rapidly. &lt;a href=&quot;https://www.cnn.com/2019/05/14/business/dollar-general-app/index.html&quot; target=&quot;_blank&quot;&gt;Dollar General has opened up thousands&lt;/a&gt; of stores in recent years.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;For Aldi, part of its success lies in appealing not only to low or mid-income shoppers, but to wealthier ones as well. Aldi’s core shopper tends to make more money and have a slightly higher education level than the overall grocery shopper, according to Bain. On a recent trip to an Aldi in Hackensack, New Jersey, luxury vehicles, including a $50,000 Jaguar and an $80,000 Tesla Model X, dotted the small parking lot alongside Toyotas, Fords and Hondas. Walmart’s Foran has marveled that when he visited an Aldi in Australia, BMWs and Mercedes were in the parking lot there, too.&lt;/p&gt;
&lt;section class=&quot;cnnix-article__chart&quot;&gt;
&lt;/section&gt;&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“People love saving money on staples. And it would apply to every single person in this room,” he said to an audience of investors and retail executives at a Four Seasons Hotel in Boston. “You feel pretty good if you can save $10 on your grocery bill because it makes you feel better when you go out for dinner on Saturday night and spend $200 at a restaurant.”&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;In recent years, Aldi has ramped up its efforts to appeal to high-income shoppers by offering more fresh, organic produce as well as imported items like Irish cheese, &lt;a href=&quot;https://www.aldi.us/en/grocery-goods/quality-brands/specially-selected/pantry/pantry-detail/ps/p/specially-selected-sliced-brioche-loaf-2/&quot; target=&quot;_blank&quot;&gt;brioche from France&lt;/a&gt; and pastas from Italy. The stores now offer private-label versions of kombucha, cold-pressed juices, an array of gluten-free products and peanut butter powder.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;“It used to be the white label knock-off stuff that you were a little bit embarrassed to buy, but it was cheap. Now, people don't care anymore about the big brands the way they used to. That plays right into the Aldi playbook.”&lt;/p&gt;
&lt;/blockquote&gt;
Mikey Vu, partner at Bain &amp;amp; Company
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi is investing $1.9 billion to remodel 1,300 stores with natural lighting and refreshed produce, dairy and meat sections. Since 2017, its new stores have been concentrated in more populous, upper middle-class suburbs, according to Bain. Aldi’s new stores are in zip codes with a $65,822 household income on average — about $4,500 above the national average. “They’re clearly trying to go after a more upmarket customer,” Vu said.&lt;/p&gt;
&lt;div class=&quot;cnnix-article__image--split-grid&quot;&gt;
&lt;div class=&quot;cnnix-article__image--split-grid__item&quot;&gt;&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/11-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/11-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;cnnix-article__image--split-grid__item&quot;&gt;&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/aldi-kombucha-closeup.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/aldi-kombucha-closeup-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
As part of its plan to attract a broader range of US shoppers, Aldi is offering more specialty products at low prices, including its own peanut butter powder and kombucha.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Part of Aldi’s appeal is not in a lower grocery bill alone, but in the way Aldi cleverly markets its discounts, UNC’s Gielens said. Bargain hunters across the income ladder end up feeling like they’re outsmarting other, higher-priced supermarkets and big brands when they see their grocery receipts. Aiming to be the &quot;smart shopping alternative,” Aldi wants to &quot;spread the message that traditional grocers and brands simply rip off consumers,” she said.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi hammers home that message on its signs in stores. “The same is always better when it costs less.” “New deals every week. Find them here. Brag like crazy.” Aldi encourages customers to ditch their grocery stores: “Switch and save.”&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Americans are listening. Last year, 19% of shoppers who switched retailers started buying at Aldi, according to a Morgan Stanley survey. That was second only to Walmart.&lt;/p&gt;
&lt;section class=&quot;cnnix-article__info-box&quot;&gt;&lt;div class=&quot;cnnix-article__info-box-inner&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;cnnix-article__info-box-inner__content&quot; readability=&quot;34&quot;&gt;
&lt;h2&gt;More Barcodes&lt;/h2&gt;
&lt;p&gt;On many products, barcodes are either super large or they're printed on multiple sides to speed up the scanning process at the cash register.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cnnix-article__info-box-inner__image&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/desktop-chocolate.jpg&quot; alt=&quot;More Barcodes&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi’s reliance on private-label brands is also helping it win Millennials, who are increasingly brand-agnostic and are instead drawn to lower prices and convenience, according to Bain data. Private-label products have undergone a renaissance in recent years and are now growing faster at supermarkets than the top 20 national brands, &lt;a href=&quot;https://www.nielsen.com/us/en/insights/reports/2018/the-rise-and-rise-again-of-private-label.html&quot; target=&quot;_blank&quot;&gt;Nielsen data shows&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Stores like Trader Joe’s and Costco have built empires selling their own brands. &lt;a href=&quot;https://www.cnn.com/2019/01/10/business/costco-kirkland-signature-brand/index.html&quot; target=&quot;_blank&quot;&gt;Costco’s Kirkland Signature&lt;/a&gt;, for example, raked in nearly $40 billion last year, an 11% increase from 2017. Kirkland’s sales last year beat out Campbell Soup, Kellogg and Hershey put together. Retailers’ brands challenge these consumer goods heavyweights, which spend billions marketing their products.&lt;/p&gt;
&lt;div class=&quot;ad-container&quot;&gt;


&lt;p&gt;Advertisement&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“It used to be the white label knock-off stuff that you were a little bit embarrassed to buy, but it was cheap,” Vu said of store brands. Now, Bain customer surveys show that 85% of US shoppers say they’re open to trying private label products. “People don't care anymore about the big brands the way they used to,&quot; he said. &quot;That plays right into the Aldi playbook.&quot;&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/14-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/14-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;The “Aldi Finds” aisle, which includes seasonal and quirky items, is popular among regular shoppers.&quot;/&gt;&lt;/a&gt; The “Aldi Finds” aisle, which includes seasonal and quirky items, is popular among regular shoppers.
&lt;h2 class=&quot;cnnix-article__subheader&quot;&gt;It all began with a thrifty family&lt;/h2&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi’s obsession with frugality comes from its early owners: &lt;a href=&quot;https://corporate.aldi.us/en/aldi-history/&quot; target=&quot;_blank&quot;&gt;brothers Theo and Karl Albrecht&lt;/a&gt;, who took over the family grocery business in Essen, Germany after World War II. Out of necessity, early stores initially stocked only a handful of items, but the brothers planned to expand the selection as the business grew. Over time, however, they recognized that they could be successful selling a narrow range of basics. “If we did not want to offer customers a wide range of products, then we had at least to offer them some other advantage. From that point on, we sold our products for decisively less,” Karl said in 1953, according to a &lt;a href=&quot;https://www.amazon.com/BARE-ESSENTIALS-Dieter-Brandes/dp/3844817026/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=YBR6KXMF3D2153HS2KQ9&quot; target=&quot;_blank&quot;&gt;book by former Aldi manager Dieter Brandes&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Theo was so insistent on keeping costs low that he was known to take notes on both sides of a piece of paper and to turn off the lights at stores during the daytime. The brothers purposefully kept store aesthetics to a Spartan minimum. “There are no decorations in stores,” Karl said in 1953. “All of our promotional efforts are put into discount prices.”&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;In 1961, the brothers split the business in two, reportedly over a dispute over whether to sell cigarettes in stores. Karl took southern Germany, and Theo ran the North. To this day, Aldi Süd and Aldi Nord remain separate companies, with the dividing line between the two in Germany known as the “Aldi Equator.”&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/15-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/15-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;Aldi’s stores are smaller than traditional supermarkets and feature wide aisles.&quot;/&gt;&lt;/a&gt; Aldi’s stores are smaller than traditional supermarkets and feature wide aisles.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi Süd is the company that’s expanding rapidly now in the United States, as well as throughout Europe. Aldi Nord also has an American presence through Trader Joe’s, which it acquired in 1979 — but its growth is less ambitious than that of its cousin company. Trader Joe’s had 484 stores in United States at the end of 2018.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;The Albrecht brothers both passed away within the last decade. Now, the two chains operate in 18 countries, bringing in an estimated $98 billion in combined sales last year, &lt;a href=&quot;https://www2.deloitte.com/content/dam/Deloitte/global/Documents/Consumer-Business/cons-global-powers-retailing-2019.pdf&quot; target=&quot;_blank&quot;&gt;according to Deloitte.&lt;/a&gt; That revenue makes the Aldi companies not only one of the largest grocers, but also the eighth biggest retailer in the world. The two Aldis combined are now larger than CVS or Tesco, and just a few rungs down from Amazon, Home Depot and Walgreens Boots Alliance.&lt;/p&gt;
&lt;h2 class=&quot;cnnix-article__subheader&quot;&gt;Competitors react&lt;/h2&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi Süd’s rapid growth in the United States mimics its broader international expansion in places like Ireland, Hungary, Switzerland, Australia and even China. The company has also grown quickly in the United Kingdom, where many local grocers ignored Aldi until it was too late.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;But as Aldi scales in the United States, there are real concerns about whether it can maintain its low-cost advantage. American competitors have learned to respond faster when Aldi lowers prices, which could blunt its impact.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/16-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/16-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;Customers bag their own groceries at Aldi. It’s yet another way the store saves on labor costs.&quot;/&gt;&lt;/a&gt; Customers bag their own groceries at Aldi. It’s yet another way the store saves on labor costs.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“They’ve taken Aldi as a much more credible threat,” Vu said.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Walmart has narrowed its price gap with Aldi since July 2017, according to a study conducted by &lt;a href=&quot;https://wolferesearch.com/scott-mushkin&quot; target=&quot;_blank&quot;&gt;Wolfe Research analyst Scott Mushkin&lt;/a&gt;, who recorded prices of 40 top-selling items at a Houston Walmart and an Aldi across the street from one another. Walmart also narrowed that gap with Aldi in Chicago-area stores, he found.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;To counter Walmart and other grocers’ moves, Aldi has started compromising its bare-bones approach. In September, it launched a &lt;a href=&quot;https://www.supermarketnews.com/marketing/aldi-set-kick-national-ad-campaign&quot; target=&quot;_blank&quot;&gt;national advertising campaign&lt;/a&gt;, including television commercials, to drive the message that it sells high-quality products. Aldi also recently pledged to cut plastic and transition to 100% sustainable packaging by 2025 — not a cheap endeavor. Aldi increased its fresh food offerings by 40% in 2018 by expanding its produce selection and adding new vegan and vegetarian options. And it started offering more alternative milks, including soy and almond.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Those changes are expensive and could eat away at Aldi’s margins. “The model only works if they are the actual cheapest,” said Simon Johnstone, analyst at Kantar.&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/17-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/17-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;“Those lines fly. You’re not waiting for people to bag. They’re not messing around there,” said Allison Robicelli, a frequent Aldi shopper.&quot;/&gt;&lt;/a&gt; “Those lines fly. You’re not waiting for people to bag. They’re not messing around there,” said Allison Robicelli, a frequent Aldi shopper.
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Customers also say they’re starting to notice a few more brand-name goods on the shelves, such as Coca-Cola, Tide and Old Spice deodorant. “I honestly don’t like it when they bring in national brands. I like the sanctity of Aldi,” Robicelli said, adding that she worries prices might go up.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;At the same time, Aldi faces heightened competition from its closest rival, Lidl. Lidl cut the ribbon on its first US stores in Virginia, North Carolina and South Carolina in 2017 and recently opened three stores outside of Atlanta. It’s expanding in upper income communities, too. Now, Lidl operates more than 60 stores in the country.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Aldi is closely monitoring Lidl’s growth. In a &lt;a href=&quot;https://www.supermarketnews.com/retail-financial/aldi-names-lidl-lawsuit-against-two-ex-employees&quot; target=&quot;_blank&quot;&gt;federal lawsuit filed in March&lt;/a&gt;, Aldi alleged that two of its former US employees illegally shared confidential information about its sales, future store locations and real estate strategy with Lidl.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;A spokesperson for Lidl said the company &quot;believes in fair competition and the allegations in the lawsuit are not consistent with our business practices and values. We are looking into the claims, which we take seriously.&quot;&lt;/p&gt;
&lt;a href=&quot;https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/media/18-aldi.jpg&quot; class=&quot;progressive replace&quot;&gt;&lt;img src=&quot;https://cdn.cnn.com/cnn/interactive/2019/05/business/aldi-walmart-low-food-prices/media/18-aldi-tiny.jpg&quot; class=&quot;preview&quot; alt=&quot;Other American grocers have tried shopping cart deposits but abandoned the practice after it irritated shoppers. Aldi has stuck with the model, insisting it’s core to the store’s low-cost strategy.&quot;/&gt;&lt;/a&gt; Other American grocers have tried shopping cart deposits but abandoned the practice after it irritated shoppers. Aldi has stuck with the model, insisting it’s core to the store’s low-cost strategy.
&lt;h2 class=&quot;cnnix-article__subheader&quot;&gt;Aldi’s lasting impact: Lower prices and fewer grocers&lt;/h2&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Although huge competitors can reduce prices to compete with Aldi, regional supermarkets are getting squeezed by the grocery price war.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;Tops Markets and Southeastern Grocers, the owner of Winn-Dixie and Bi-Lo, have &lt;a href=&quot;https://www.supermarketnews.com/retail-financial/courts-ok-southeastern-grocers-tops-restructuring-plans&quot; target=&quot;_blank&quot;&gt;recently filed for bankruptcy&lt;/a&gt;. Save-A-Lot, the second-largest discount grocery chain in the United States after Aldi, is deep in debt and can’t afford to continue lowering prices without sacrificing profit.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;“Aldi and Lidl will be a significant disrupting force in the US, threatening smaller regional supermarket chains and forcing larger players to cut prices,” Fitch Solutions said in a research report in March.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;More bankruptcies are on the way for America’s grocery stores, analysts predict. &quot;The US has a much bigger tranche of second and third tier grocery retailers,” said Vu from Bain. “Those are the ones that are dying off.”&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;With smaller grocers disappearing, there’s probably room for both Walmart and Aldi to pick up the pieces, Vu added. In the meantime, Aldi will keep leading the price wars, putting pressure on the bigger players, too.&lt;/p&gt;
&lt;p class=&quot;cnnix-article__paragraph&quot;&gt;&quot;They're incredibly successful,&quot; he said. &quot;We haven't seen a disrupter in the grocery space like this in a long time.&quot;&lt;/p&gt;
</description>
<pubDate>Fri, 17 May 2019 18:12:53 +0000</pubDate>
<dc:creator>oftenwrong</dc:creator>
<og:description>Aldi, a discount grocery chain, is on an aggressive growth spurt in the United States, pressuring even Walmart on low food prices.</og:description>
<og:image>https://i2.cdn.turner.com/cnnnext/dam/assets/190516111856-03-aldi-low-prices-full-169.jpg</og:image>
<og:type>Article</og:type>
<og:title>How a cheap, brutally efficient grocery chain is upending America's supermarkets</og:title>
<og:url>https://www.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/index.html</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://edition.cnn.com/interactive/2019/05/business/aldi-walmart-low-food-prices/index.html</dc:identifier>
</item>
<item>
<title>Update to Security Incident</title>
<link>https://stackoverflow.blog/2019/05/17/update-to-security-incident-may-17-2019/</link>
<guid isPermaLink="true" >https://stackoverflow.blog/2019/05/17/update-to-security-incident-may-17-2019/</guid>
<description>&lt;div class=&quot;m-post-card__excerpt&quot; itemprop=&quot;articleBody&quot;&gt;Over the weekend, there was an attack on Stack Overflow. We have confirmed that some level of production access was gained on May 11. We discovered and investigated the extent...&lt;/div&gt;&lt;div class=&quot;m-post-card__excerpt&quot; itemprop=&quot;articleBody&quot;&gt;Engineers from Expensify talk about how they are using Stack Overflow for Teams to improve collaboration and how it saves them hours of wasted time each week.&lt;/div&gt;&lt;div class=&quot;m-post-card__excerpt&quot; itemprop=&quot;articleBody&quot;&gt;Check out a cool project that leverages Stack Overflow Data and Google's Cloud AI to predict what tags would work best on Stack Overflow questions.&lt;/div&gt;</description>
<pubDate>Fri, 17 May 2019 17:38:30 +0000</pubDate>
<dc:creator>rahuldottech</dc:creator>
<og:type>article</og:type>
<og:title>Update to Security Incident [May 17, 2019] - Stack Overflow Blog</og:title>
<og:description>While we continue to investigate the recent attack to Stack Overflow, here is an update on what we’re able to share today. The intrusion originated on May 5 when a build deployed to the development tier for stackoverflow.com contained a bug, which allowed an attacker to log in to our development tier as well as escalate their access on the production version of stackoverflow.com. Between May 5 and May 11, the intruder contained their activities to exploration. On May 11, the intruder made a change to our system to grant themselves a privileged access on production. This change was quickly identified and we revoked their access network-wide, began investigating the intrusion, and began taking steps to remediate the intrusion. As part of our security procedures to protect sensitive customer data, we maintain separate infrastructure and networks for clients of our Teams, Business, and Enterprise products and we have found no evidence that those systems or customer data were accessed. Our Advertising and Talent businesses were also not impacted by this intrusion. While our overall user database was not compromised, we have identified privileged web requests that the attacker made that could have returned IP address, names, or emails for a very small number of Stack Exchange users. Our team is currently reviewing these logs and will be providing appropriate notifications to any users who are impacted.</og:description>
<og:url>https://stackoverflow.blog/2019/05/17/update-to-security-incident-may-17-2019/</og:url>
<og:image>https://zgab33vy595fw5zq-zippykid.netdna-ssl.com/wp-content/uploads/2017/02/apple-touch-icon@2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stackoverflow.blog/2019/05/17/update-to-security-incident-may-17-2019/</dc:identifier>
</item>
<item>
<title>Salesforce enables ‘modify all’ in user profiles</title>
<link>https://www.reddit.com/r/salesforce/comments/bpq336/salesforce_enables_modify_all_in_all_user_profiles/</link>
<guid isPermaLink="true" >https://www.reddit.com/r/salesforce/comments/bpq336/salesforce_enables_modify_all_in_all_user_profiles/</guid>
<description>&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;One of our projects had all its profiles modified to enable modify all, allowing all users access to all data.&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;This was admitted by a Salesforce representative&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Updates to follow&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Edit 1: THIS IS NOT A JOKE - CHECK COMMENTS&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;This is a call to all to check PERMISSION SETS and PROFILES on ALL of their orgs.&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Please keep us up to date in the comments below&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Edit 2: Both standard AND custom profiles&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Edit 3: courtesy of G1trogFr0g Found this on the Discord, everybody check your .org:&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;@everyone CRITICAL SALESFORCE ISSUE&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;It has been confirmed on mutliple orgs, spanning multiple shards (eu6, eu8, NA41, NA49 at least) that Salesforce has bugged out this morning and has given MODIFY ALL (so all permisisons) to literally EVERY SINGLE PROFILE in some orgs. This includes Standard profiles and Custom as well. Yes, EVEN STANDARD PROFILES&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Please log in to ANY org you mnage and check if they are affected. If they are:&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;• ⁠log a case with Salesforce about this ASAP • ⁠check if you have a recently refreshed sandbox. If so, check if profile permissions are correctly set there - sandboxes seem to be unaffected. • ⁠Contact the customer, explain that there is a Salesforce issue that is on the Salesforce side. If they are NOT using standard profiles and you have a sandbox backup, you acn use this to (manually) reset profiles to the correct state. If there isn't or this is undoable for any reason, the customer can either wait it out, or Freeze ALL USERS to prevent data that shouldn't be shared from being shared.&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;This is not a friday joke. CHECK ALL ORGS.&lt;/p&gt;
&lt;p class=&quot;s1w8oh2o-10 bQeEFC&quot;&gt;Salesforce have confirmed it's a multi-org issue and they're working on a solution right now ^ from premier support it's confirmed boys watch it burn&lt;/p&gt;
</description>
<pubDate>Fri, 17 May 2019 16:31:23 +0000</pubDate>
<dc:creator>LinuxBender</dc:creator>
<og:title>r/salesforce - Salesforce enables modify all in all user profiles</og:title>
<og:type>website</og:type>
<og:url>https://www.reddit.com/r/salesforce/comments/bpq336/salesforce_enables_modify_all_in_all_user_profiles/</og:url>
<og:description>284 votes and 233 comments so far on Reddit</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reddit.com/r/salesforce/comments/bpq336/salesforce_enables_modify_all_in_all_user_profiles/</dc:identifier>
</item>
<item>
<title>Walking Away from the Product I Spent a Year Building</title>
<link>https://www.derrickreimer.com/essays/2019/05/17/im-walking-away-from-the-product-i-spent-a-year-building.html</link>
<guid isPermaLink="true" >https://www.derrickreimer.com/essays/2019/05/17/im-walking-away-from-the-product-i-spent-a-year-building.html</guid>
<description>&lt;p&gt;Here I sit, in a cabin on Lake Superior by the fire, with late-season snow pelting the windows and ominous waves crashing against the rocky shore.&lt;/p&gt;
&lt;p&gt;Despite the treacherous terrain that surrounds me, I feel at peace with the decision I’ve been weighing. I’ve decided it’s time to take a step back from building &lt;a href=&quot;https://level.app&quot;&gt;Level&lt;/a&gt; as a standalone alternative to Slack.&lt;/p&gt;
&lt;p&gt;I’ve become comfortable sharing the behind-the-scenes journey on my weekly podcast, The Art of Product, in hopes that it will be helpful to someone, somewhere. Keeping with that tradition, this my in-depth retrospective on what happened, the thought process that brought me here, and what’s coming next.&lt;/p&gt;
&lt;h2 id=&quot;the-backstory&quot;&gt;The Backstory&lt;/h2&gt;
&lt;p&gt;On March 3rd, 2018, I was filled with optimism. I had just left &lt;a href=&quot;https://www.drip.com&quot;&gt;Drip&lt;/a&gt;, the company I helped start five years earlier, and I was eager to return to the startup phase.&lt;/p&gt;
&lt;p&gt;To use terminology coined by Justin Vincent of the TechZing podcast, I had a strong case of &lt;em&gt;The Madness&lt;/em&gt;. I was hungry to get back to designing, marketing, and writing code unencumbered by legacy.&lt;/p&gt;
&lt;p&gt;In the short time leading up to my departure, I finally allowed myself to entertain what was next. (I held off for much of my post-acquisition earn out, lest I become too anxious to get started). I filled pages in my notebook with ideas, but one, in particular, I couldn’t shake.&lt;/p&gt;
&lt;p&gt;When Drip was acquired, our small team of 9 joined the Leadpages team of around 150. I remember looking across the office, bewildered that there could be so many people working on a product of a similar size to Drip. I soon discovered there was a slew of challenges coordinating work, and nearly all of it was happening in Slack.&lt;/p&gt;
&lt;p&gt;The larger my immediate team grew, the more I struggled to remain productive. My days felt increasingly chaotic. I was no longer focusing for long periods. I realized that the way we were structuring our communication was a significant part of the problem.&lt;/p&gt;
&lt;p&gt;Real-time chat was making &lt;em&gt;everything&lt;/em&gt; feel urgent. Moreover, the company culture had evolved to the point that people expected quick responses to all messages. Conversations were disorganized. Vital information was getting misplaced among the din of idle chatter.&lt;/p&gt;
&lt;p&gt;We were not alone. People across the internet were beginning to recognize these shortcomings of chat. Maybe chat wasn’t the holy grail of workplace communication that so many believed it to be. There were signs that a movement was afoot, but no one was championing the cause with an alternative product in hand. Why not me?&lt;/p&gt;
&lt;h3 id=&quot;putting-a-stake-in-the-ground&quot;&gt;Putting a stake in the ground&lt;/h3&gt;
&lt;p&gt;The Monday after leaving Drip, I published the Level manifesto with great fanfare: &lt;em&gt;The War on Developer Productivity (And How I Intend to Win It)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The manifesto was the first step in validating that my idea had legs: make a bold statement about the problem (without too many specifics about the solution) and gather email addresses of people who wanted to join the movement.&lt;/p&gt;
&lt;p&gt;The numbers were encouraging. Hundreds of people handed me their information and shared it on Twitter. Even a handful of haters came out of the woodwork – striking a nerve is a good sign you’ve transcended complacency.&lt;/p&gt;
&lt;p&gt;Despite being encouraged, I was determined not to fall into the trap of proceeding to build without sufficient evidence that a reachable market exists. The next step was to email the list (about 500 people) and ask to chat with them for 20 minutes, to learn about their problems and their willingness to pay for a solution.&lt;/p&gt;
&lt;p&gt;Around 40 people ended up booking a time slot! The calls felt productive, and by the end, I felt like I wasn’t learning much that I hadn’t already heard. Many folks echoed the sentiments from the manifesto:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Ugh, Slack distracts me so often. You’re right; everything feels urgent even when it’s not. I’m super interested in what you’re building here. We’re pretty open to change at my company – I don’t see switching being too big of a deal.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some folks were fans of my podcast but were not really in my target market. Others were not decision makers, so I had to take their feedback with a grain of salt. However, I didn’t interpret much of what I heard as unfavorable.&lt;/p&gt;
&lt;p&gt;Armed with lots of qualitative data, I set off to build.&lt;/p&gt;
&lt;p&gt;I also decided to introduce an element of scarcity to my landing page: reserve your username on Level before someone else takes it. In the months that followed, over 6,000 people took the bait and claimed their handle.&lt;/p&gt;
&lt;h3 id=&quot;setting-the-public-deadline&quot;&gt;Setting the public deadline&lt;/h3&gt;
&lt;p&gt;Before long, I began to feel a creeping sense of uneasiness. I was learning a handful of new technologies in the process of building, and it was taking a while. Was I still on the right track?&lt;/p&gt;
&lt;p&gt;I decided to run a small alpha in early October. It quickly became apparent that Level would have to be further along before anyone could try it earnestly with their team. Without trying the product for real, they couldn’t accurately predict whether Level was going to be a good fit.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“It seems like you’re on to something here. I’m interested in trying it out when it’s further along!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was frustrated, but not deterred. I felt confident that I could get Level mature enough for at least some teams to start piloting it by late January. To keep myself honest, I set a public deadline on my podcast and sold $49 pre-orders to those who wanted to be in the first batch. Around 50 people bought the pre-order.&lt;/p&gt;
&lt;p&gt;By the time the deadline rolled around, I was feeling good about where the product stood. It was still early, still missing trivial things like password reset, but the core mechanics were in place.&lt;/p&gt;
&lt;p&gt;I decided it was essential to manually onboard each customer to ensure they started on the right foot, so I began scheduling onboarding calls with the first batch.&lt;/p&gt;
&lt;p&gt;The response did not live up to my expectations. Only a subset of people who paid booked an onboarding session. Of those who did, some never touched the product. Some who did poke around the product never gave it a real go with their team (and didn’t show much interest in following up with me). A handful did convert.&lt;/p&gt;
&lt;p&gt;Every conversion funnel leaks, but I was admittedly disheartened. There seemed to be a curious mismatch between the sentiments I gathered early on and the actions people were taking. If people were ravenous for a solution, why weren’t most people even &lt;em&gt;attempting&lt;/em&gt; to pilot Level?&lt;/p&gt;
&lt;h3 id=&quot;getting-a-larger-sample-size&quot;&gt;Getting a larger sample size&lt;/h3&gt;
&lt;p&gt;I knew I needed a larger sample size before drawing more profound conclusions, so I decided to forge ahead with my next goal of making the small base of currently paying customers happy.&lt;/p&gt;
&lt;p&gt;Those who did latch on to Level had a plethora of feature requests, most of which were in alignment with my vision for the product. I spent the next six weeks building. By that point, my customers were loving the product – even my largest customer that started out highly skeptical of the paradigm. Everyone who had converted so far applauded the user experience and agreed Level was a beautiful product.&lt;/p&gt;
&lt;p&gt;I decided to invite the 500 most recent people to try Level, in pursuit of more data. (I chose the most recent ones because Level would be relatively top-of-mind for them).&lt;/p&gt;
&lt;p&gt;I sent a warm-up email to the first batch on the Thursday before Easter, in which I reintroduced Level and informed them that an invitation was coming on Monday. At 10 am on Monday, I sent the invites.&lt;/p&gt;
&lt;p&gt;I observed how people were using it for about a week. There was a lot of poking around and, once again, virtually zero evidence of anyone piloting it with their team. I reached out directly to everyone who made it into the product: are you planning to test Level out? What can I do to help?&lt;/p&gt;
&lt;p&gt;It became clear pretty quickly that the gap between interest and implementation was of canyon-like proportions. The next week, I repeated the process with another batch of 500, with very similar results.&lt;/p&gt;
&lt;p&gt;Small teams (who have a much easier time making the jump due to their size) didn’t seem that compelled by Level. In follow-up conversations, I discovered that Slack was at most a minor annoyance for them. Suboptimal? Yes. Worth going through the trouble of switching? Probably not.&lt;/p&gt;
&lt;p&gt;Every large team I spoke to had an exceptionally high bar and was unwilling to entertain Level until it was significantly more “mature.” They are the ones who need Level the most, and yet it was looking like I wouldn’t have a shot at converting them without months (or years) of development work.&lt;/p&gt;
&lt;h2 id=&quot;the-turning-point&quot;&gt;The Turning Point&lt;/h2&gt;
&lt;p&gt;I knew what my gut was telling me. However, I’m far too rational to make such an existential decision based solely on intuition. I had to feel confident that I was not just weary from the slog and seeking greener pastures. I had to be sure I was not giving up prematurely.&lt;/p&gt;
&lt;h3 id=&quot;everyone-is-lying&quot;&gt;Everyone is lying&lt;/h3&gt;
&lt;p&gt;As I was confiding in my friend, he recommended a book called &lt;em&gt;The Mom Test&lt;/em&gt; by Rob Fitzpatrick. Once you understand the premise, the title makes more sense. The subtitle is more blatant than the title:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to talk to customers and learn if your business is a good idea when &lt;em&gt;everyone is lying to you&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s a quick read and should be a mandatory prerequisite for anyone embarking on the startup journey. The gist is that it’s tough to get unbiased feedback during customer validation. I already knew this to be correct, but I underestimated to the degree to which everyone lies.&lt;/p&gt;
&lt;p&gt;Reading this struck a chord. I felt betrayed by my early validation efforts since reality proved to be radically different.&lt;/p&gt;
&lt;p&gt;Publishing a manifesto from the onset made getting untainted data more difficult. Of course, you have to get people in your pipeline to talk to them somehow, but coming out with a strong hypothesis meant that I needed to be extra vigilant and mostly ignore sentiments that tacitly confirmed my manifesto.&lt;/p&gt;
&lt;p&gt;Instead of seeking confirmation, I needed to focus on specific scenarios in that past:&lt;/p&gt;
&lt;p&gt;“What is your team communication workflow?”&lt;/p&gt;
&lt;p&gt;As they point out flaws, follow up with, “Tell me about the last time that happened. How did you respond? How have you tried to fix that problem to prevent it from happening again?”&lt;/p&gt;
&lt;p&gt;I did another round of calls, this time running the Mom Test playbook. What I found was troubling. Everyone expressed being “annoyed” by Slack, even calling it a “big problem.” However, when pressed with the question of “what have you done about it so far?”, almost universally the answer was “nothing.” No process changes — no trials of Slack alternatives.&lt;/p&gt;
&lt;p&gt;I spoke to a handful of companies who have successfully tamed Slack — the outliers.&lt;/p&gt;
&lt;p&gt;An engineer at Stripe told me about their careful balance of email, forums, and Slack. They recognize that Slack is not suitable for meaningful conversations, so they automatically delete chat messages older than a few weeks to discourage relying on it for long-term archival. In retrospectives, team members often reflect on whether they chose the right medium (email, chat, or forum) for various conversations.&lt;/p&gt;
&lt;p&gt;The team at Honeybadger is small but acutely aware of the cost of distractions. They use Slack for chat-ops and quick back-and-forth conversations, but they are always experimenting with different tools (like Basecamp) to organize more permanent discussions. Most of the Honeybadger team has removed Slack from their phones, and they make a habit of frequently closing it on the desktop (or using Do-Not-Disturb) when it’s time to focus.&lt;/p&gt;
&lt;p&gt;Each has clear policies around internal communication and consider deep work to be part of their cultural DNA.&lt;/p&gt;
&lt;h3 id=&quot;is-this-a-problem-i-want-to-tackle&quot;&gt;Is this a problem I want to tackle?&lt;/h3&gt;
&lt;p&gt;If there is a growing movement around valuing deep work (and I hope there is), it’s still in its infancy. I’ve spent hours brainstorming the path forward.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should I offer a service to train companies and help facilitate that cultural change?&lt;/li&gt;
&lt;li&gt;Should I go freemium with the hopes of igniting grassroots adoption and someday converting 1% of them to paying customers?&lt;/li&gt;
&lt;li&gt;Should I hire a salesperson to help sway key stakeholders in larger companies that only have one champion?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Some of these might be good ideas, but none are compatible with my goals as a founder. I aspire to stay small, abstain from raising outside funding, and achieve profitability quickly.&lt;/p&gt;
&lt;p&gt;For me, profitability means covering my family’s cost of living, necessary business expenses, and taxes – in the neighborhood of $10k - $15k MRR.&lt;/p&gt;
&lt;p&gt;I’m fortunate to have a relatively long runway from my previous business sales. However, it’s still a finite one.&lt;/p&gt;
&lt;p&gt;That means, given my constraints, I can’t reimplement all the parts people love about Slack before reaching profitability. I can’t hire a team of engineers to move faster. I have no desire to run a consulting practice.&lt;/p&gt;
&lt;p&gt;Having robust filtering criteria is ideal when making hard decisions. I’m happy to be discovering my constraints early on before I find myself years into running a business that doesn’t fit me, and I wind up hating my job. I only wish I had this much clarity a year earlier, but you know what they say about hindsight.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What’s Next&lt;/h2&gt;
&lt;p&gt;One of the unique aspects of entrepreneurship is uncapped earning potential. (The opposite would be something like working in public bureaucracy, where you can look at a chart and know what you will make in 10 years.)&lt;/p&gt;
&lt;p&gt;I find uncapped potential to be one of the most motivating parts of starting a business. If I do my job well, I can find a pain point that a large market will pay to solve, build the solution, figure out distribution, and watch the recurring revenue-based profits rack up while I retain the freedom to work on what I want, how I want.&lt;/p&gt;
&lt;p&gt;The startup news cycle bombards us with unicorn stories about massive, unexpected growth experienced by a small team with a big idea. It’s an intoxicating fantasy. I would assert that even the most disciplined entrepreneurs hold on to a shred of hope that their company might blow up beyond their wildest dreams. I don’t think there’s anything wrong with that.&lt;/p&gt;
&lt;p&gt;However, I do think it can yield trouble when that small hope of a big success starts to influence your decision making. Unless you are raising venture capital and planning to shoot for the moon, unicorn dreams shouldn’t bias your decisions.&lt;/p&gt;
&lt;p&gt;On this much-needed retreat where I am writing these words, I reread Paul Jarvis’ &lt;em&gt;Company of One&lt;/em&gt;. It’s a beautiful masterpiece that breathes new life into what many pejoratively call “lifestyle business” and is chocked full of tips for starting small and staying intentionally small.&lt;/p&gt;
&lt;p&gt;In hindsight, I took on an unreasonably audacious endeavor with Level in part because of my internal “this &lt;em&gt;might&lt;/em&gt; get big if I play my cards right” dialogue. It would have been far better to either deliberately go for the big idea (and probably seek venture funding to make it happen), or start far smaller and build my way into a sustainable company of one.&lt;/p&gt;
&lt;p&gt;At the time of writing this, that is all I truly know about what’s next. I’m passionate about serving the needs of makers (developers, designers, founders, indie hackers, and the like) so I will return there. Perhaps there’s a way to deliver on the Level vision that is compatible with my goals – I am exploring that as well.&lt;/p&gt;
&lt;p&gt;About one thing, I am sure: I can’t wait to see what’s in store in my next chapter.&lt;/p&gt;
</description>
<pubDate>Fri, 17 May 2019 16:19:40 +0000</pubDate>
<dc:creator>rwalling</dc:creator>
<og:title>I’m Walking Away From the Product I Spent a Year Building</og:title>
<og:description>The story behind Level and why it failed.</og:description>
<og:url>/essays/2019/05/17/im-walking-away-from-the-product-i-spent-a-year-building.html</og:url>
<og:image>/assets/logo-square-300.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.derrickreimer.com/essays/2019/05/17/im-walking-away-from-the-product-i-spent-a-year-building.html</dc:identifier>
</item>
<item>
<title>Black – Uncompromising Python code formatter</title>
<link>https://github.com/python/black</link>
<guid isPermaLink="true" >https://github.com/python/black</guid>
<description>&lt;div class=&quot;Box-body&quot;&gt;
&lt;article class=&quot;markdown-body entry-content p-5&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/python/black/master/docs/_static/logo2-readme.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/python/black/master/docs/_static/logo2-readme.png&quot; alt=&quot;Black Logo&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;The Uncompromising Code Formatter&lt;/h2&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://travis-ci.org/python/black&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Build Status&quot; src=&quot;https://camo.githubusercontent.com/6a65624d50487e1ad4d28425d6cfe7f9bef4ac3a/68747470733a2f2f7472617669732d63692e6f72672f707974686f6e2f626c61636b2e7376673f6272616e63683d6d6173746572&quot; data-canonical-src=&quot;https://travis-ci.org/python/black.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://black.readthedocs.io/en/stable/?badge=stable&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Documentation Status&quot; src=&quot;https://camo.githubusercontent.com/ab197284ad0cd9cae552157b75f815b640eba827/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f626c61636b2f62616467652f3f76657273696f6e3d737461626c65&quot; data-canonical-src=&quot;https://readthedocs.org/projects/black/badge/?version=stable&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/python/black?branch=master&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Coverage Status&quot; src=&quot;https://camo.githubusercontent.com/99541b6507d979c791a08fdc2eb188ffdca98d09/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f707974686f6e2f626c61636b2f62616467652e7376673f6272616e63683d6d6173746572&quot; data-canonical-src=&quot;https://coveralls.io/repos/github/python/black/badge.svg?branch=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/python/black/blob/master/LICENSE&quot;&gt;&lt;img alt=&quot;License: MIT&quot; src=&quot;https://camo.githubusercontent.com/14a9abb7e83098f2949f26d2190e04fb1bd52c06/68747470733a2f2f626c61636b2e72656164746865646f63732e696f2f656e2f737461626c652f5f7374617469632f6c6963656e73652e737667&quot; data-canonical-src=&quot;https://black.readthedocs.io/en/stable/_static/license.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/black/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;PyPI&quot; src=&quot;https://camo.githubusercontent.com/f1f8b5776407ddc1be187fa61091f9b14833d24f/68747470733a2f2f626c61636b2e72656164746865646f63732e696f2f656e2f737461626c652f5f7374617469632f707970692e737667&quot; data-canonical-src=&quot;https://black.readthedocs.io/en/stable/_static/pypi.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://pepy.tech/project/black&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Downloads&quot; src=&quot;https://camo.githubusercontent.com/7b3026c6e1fecc9574cb4b93a3925e392bee087d/68747470733a2f2f706570792e746563682f62616467652f626c61636b&quot; data-canonical-src=&quot;https://pepy.tech/badge/black&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/python/black&quot;&gt;&lt;img alt=&quot;Code style: black&quot; src=&quot;https://camo.githubusercontent.com/28a51fe3a2c05048d8ca8ecd039d6b1619037326/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667&quot; data-canonical-src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Any color you like.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; is the uncompromising Python code formatter. By using it, you agree to cede control over minutiae of hand-formatting. In return, &lt;em&gt;Black&lt;/em&gt; gives you speed, determinism, and freedom from &lt;code&gt;pycodestyle&lt;/code&gt; nagging about formatting. You will save time and mental energy for more important matters.&lt;/p&gt;
&lt;p&gt;Blackened code looks the same regardless of the project you're reading. Formatting becomes transparent after a while and you can focus on the content instead.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; makes code review faster by producing the smallest diffs possible.&lt;/p&gt;
&lt;p&gt;Try it out now using the &lt;a href=&quot;https://black.now.sh&quot; rel=&quot;nofollow&quot;&gt;Black Playground&lt;/a&gt;. Watch the &lt;a href=&quot;https://youtu.be/esZLCuWs_2Y&quot; rel=&quot;nofollow&quot;&gt;PyCon 2019 talk&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Contents:&lt;/em&gt; &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#installation-and-usage&quot;&gt;Installation and usage&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#the-black-code-style&quot;&gt;Code style&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#pyprojecttoml&quot;&gt;pyproject.toml&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#editor-integration&quot;&gt;Editor integration&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#blackd&quot;&gt;blackd&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#version-control-integration&quot;&gt;Version control integration&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#ignoring-unmodified-files&quot;&gt;Ignoring unmodified files&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#used-by&quot;&gt;Used by&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#testimonials&quot;&gt;Testimonials&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#show-your-style&quot;&gt;Show your style&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#contributing-to-black&quot;&gt;Contributing&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#change-log&quot;&gt;Change Log&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://github.com/python/black#authors&quot;&gt;Authors&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Installation and usage&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; can be installed by running &lt;code&gt;pip install black&lt;/code&gt;. It requires Python 3.6.0+ to run but you can reformat Python 2 code with it, too.&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;To get started right away with sensible defaults:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;black {source_file_or_directory}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Command line options&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; doesn't provide many options. You can list them by running &lt;code&gt;black --help&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang=&quot;text&quot;&gt;
&lt;code&gt;black [OPTIONS] [SRC]...

Options:
  -c, --code TEXT                 Format the code passed in as a string.
  -l, --line-length INTEGER       How many characters per line to allow.
                                  [default: 88]
  -t, --target-version [py27|py33|py34|py35|py36|py37|py38]
                                  Python versions that should be supported by
                                  Black's output. [default: per-file auto-
                                  detection]
  --py36                          Allow using Python 3.6-only syntax on all
                                  input files.  This will put trailing commas
                                  in function signatures and calls also after
                                  *args and **kwargs. Deprecated; use
                                  --target-version instead. [default: per-file
                                  auto-detection]
  --pyi                           Format all input files like typing stubs
                                  regardless of file extension (useful when
                                  piping source on standard input).
  -S, --skip-string-normalization
                                  Don't normalize string quotes or prefixes.
  --check                         Don't write the files back, just return the
                                  status.  Return code 0 means nothing would
                                  change.  Return code 1 means some files
                                  would be reformatted.  Return code 123 means
                                  there was an internal error.
  --diff                          Don't write the files back, just output a
                                  diff for each file on stdout.
  --fast / --safe                 If --fast given, skip temporary sanity
                                  checks. [default: --safe]
  --include TEXT                  A regular expression that matches files and
                                  directories that should be included on
                                  recursive searches.  An empty value means
                                  all files are included regardless of the
                                  name.  Use forward slashes for directories
                                  on all platforms (Windows, too).  Exclusions
                                  are calculated first, inclusions later.
                                  [default: \.pyi?$]
  --exclude TEXT                  A regular expression that matches files and
                                  directories that should be excluded on
                                  recursive searches.  An empty value means no
                                  paths are excluded. Use forward slashes for
                                  directories on all platforms (Windows, too).
                                  Exclusions are calculated first, inclusions
                                  later.  [default: /(\.eggs|\.git|\.hg|\.mypy
                                  _cache|\.nox|\.tox|\.venv|_build|buck-
                                  out|build|dist)/]
  -q, --quiet                     Don't emit non-error messages to stderr.
                                  Errors are still emitted, silence those with
                                  2&amp;gt;/dev/null.
  -v, --verbose                   Also emit messages to stderr about files
                                  that were not changed or were ignored due to
                                  --exclude=.
  --version                       Show the version and exit.
  --config PATH                   Read configuration from PATH.
  -h, --help                      Show this message and exit.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; is a well-behaved Unix-style command-line tool:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it does nothing if no sources are passed to it;&lt;/li&gt;
&lt;li&gt;it will read from standard input and write to standard output if &lt;code&gt;-&lt;/code&gt; is used as the filename;&lt;/li&gt;
&lt;li&gt;it only outputs messages to users on standard error;&lt;/li&gt;
&lt;li&gt;exits with code 0 unless an internal error occurred (or &lt;code&gt;--check&lt;/code&gt; was used).&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;NOTE: This is a beta product&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; is already &lt;a href=&quot;https://github.com/python/black#used-by&quot;&gt;successfully used&lt;/a&gt; by many projects, small and big. It also sports a decent test suite. However, it is still very new. Things will probably be wonky for a while. This is made explicit by the &quot;Beta&quot; trove classifier, as well as by the &quot;b&quot; in the version number. What this means for you is that &lt;strong&gt;until the formatter becomes stable, you should expect some formatting to change in the future&lt;/strong&gt;. That being said, no drastic stylistic changes are planned, mostly responses to bug reports.&lt;/p&gt;
&lt;p&gt;Also, as a temporary safety measure, &lt;em&gt;Black&lt;/em&gt; will check that the reformatted code still produces a valid AST that is equivalent to the original. This slows it down. If you're feeling confident, use &lt;code&gt;--fast&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;The &lt;em&gt;Black&lt;/em&gt; code style&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; reformats entire files in place. It is not configurable. It doesn't take previous formatting into account. It doesn't reformat blocks that start with &lt;code&gt;# fmt: off&lt;/code&gt; and end with &lt;code&gt;# fmt: on&lt;/code&gt;. &lt;code&gt;# fmt: on/off&lt;/code&gt; have to be on the same level of indentation. It also recognizes &lt;a href=&quot;https://github.com/google/yapf&quot;&gt;YAPF&lt;/a&gt;'s block comments to the same effect, as a courtesy for straddling code.&lt;/p&gt;
&lt;h3&gt;How &lt;em&gt;Black&lt;/em&gt; wraps lines&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; ignores previous formatting and applies uniform horizontal and vertical whitespace to your code. The rules for horizontal whitespace can be summarized as: do whatever makes &lt;code&gt;pycodestyle&lt;/code&gt; happy. The coding style used by &lt;em&gt;Black&lt;/em&gt; can be viewed as a strict subset of PEP 8.&lt;/p&gt;
&lt;p&gt;As for vertical whitespace, &lt;em&gt;Black&lt;/em&gt; tries to render one full expression or simple statement per line. If this fits the allotted line length, great.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; in:&lt;/span&gt;

l &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;,
     &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;,
     &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;,
]

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; out:&lt;/span&gt;

l &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If not, &lt;em&gt;Black&lt;/em&gt; will look at the contents of the first outer matching brackets and put that in a separate indented line.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; in:&lt;/span&gt;

ImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument)

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; out:&lt;/span&gt;

ImportantClass.important_method(
    exc, limit, lookup_lines, capture_locals, extra_argument
)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that still doesn't fit the bill, it will decompose the internal expression further using the same rule, indenting matching brackets every time. If the contents of the matching brackets pair are comma-separated (like an argument list, or a dict literal, and so on) then &lt;em&gt;Black&lt;/em&gt; will first try to keep them on the same line with the matching brackets. If that doesn't work, it will put all of them in separate lines.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; in:&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;very_important_function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;str&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;variables&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;file&lt;/span&gt;: os.PathLike, &lt;span class=&quot;pl-smi&quot;&gt;engine&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;str&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;header&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;debug&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;):
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;Applies `variables` to the `template` and writes to `file`.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;file&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;w&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; f:
        &lt;span class=&quot;pl-c1&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; out:&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;very_important_function&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;str&lt;/span&gt;,
    &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;variables&lt;/span&gt;,
    &lt;span class=&quot;pl-smi&quot;&gt;file&lt;/span&gt;: os.PathLike,
    &lt;span class=&quot;pl-smi&quot;&gt;engine&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;str&lt;/span&gt;,
    &lt;span class=&quot;pl-smi&quot;&gt;header&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;True&lt;/span&gt;,
    &lt;span class=&quot;pl-smi&quot;&gt;debug&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;False&lt;/span&gt;,
):
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;Applies `variables` to the `template` and writes to `file`.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;file&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;w&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; f:
        &lt;span class=&quot;pl-c1&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You might have noticed that closing brackets are always dedented and that a trailing comma is always added. Such formatting produces smaller diffs; when you add or remove an element, it's always just one line. Also, having the closing bracket dedented provides a clear delimiter between two distinct sections of the code that otherwise share the same indentation level (like the arguments list and the docstring in the example above).&lt;/p&gt;
&lt;p&gt;If a data structure literal (tuple, list, set, dict) or a line of &quot;from&quot; imports cannot fit in the allotted length, it's always split into one element per line. This minimizes diffs as well as enables readers of code to find which commit introduced a particular entry. This also makes &lt;em&gt;Black&lt;/em&gt; compatible with &lt;a href=&quot;https://pypi.org/p/isort/&quot; rel=&quot;nofollow&quot;&gt;isort&lt;/a&gt; with the following configuration.&lt;/p&gt;
&lt;details&gt;A compatible `.isort.cfg`
&lt;pre&gt;
&lt;code&gt;[settings]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The equivalent command line is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ isort --multi-line=3 --trailing-comma --force-grid-wrap=0 --use-parentheses --line-width=88 [ file.py ]
&lt;/code&gt;
&lt;/pre&gt;&lt;/details&gt;&lt;h3&gt;Line length&lt;/h3&gt;
&lt;p&gt;You probably noticed the peculiar default line length. &lt;em&gt;Black&lt;/em&gt; defaults to 88 characters per line, which happens to be 10% over 80. This number was found to produce significantly shorter files than sticking with 80 (the most popular), or even 79 (used by the standard library). In general, &lt;a href=&quot;https://youtu.be/wf-BqAjZb8M?t=260&quot; rel=&quot;nofollow&quot;&gt;90-ish seems like the wise choice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you're paid by the line of code you write, you can pass &lt;code&gt;--line-length&lt;/code&gt; with a lower number. &lt;em&gt;Black&lt;/em&gt; will try to respect that. However, sometimes it won't be able to without breaking other rules. In those rare cases, auto-formatted code will exceed your allotted limit.&lt;/p&gt;
&lt;p&gt;You can also increase it, but remember that people with sight disabilities find it harder to work with line lengths exceeding 100 characters. It also adversely affects side-by-side diff review on typical screen resolutions. Long lines also make it harder to present code neatly in documentation or talk slides.&lt;/p&gt;
&lt;p&gt;If you're using Flake8, you can bump &lt;code&gt;max-line-length&lt;/code&gt; to 88 and forget about it. Alternatively, use &lt;a href=&quot;https://github.com/PyCQA/flake8-bugbear&quot;&gt;Bugbear&lt;/a&gt;'s B950 warning instead of E501 and keep the max line length at 80 which you are probably already using. You'd do it like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[flake8]&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;max-line-length&lt;/span&gt; = 80
...
&lt;span class=&quot;pl-k&quot;&gt;select&lt;/span&gt; = C,E,F,W,B,B950
&lt;span class=&quot;pl-k&quot;&gt;ignore&lt;/span&gt; = E501
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll find &lt;em&gt;Black&lt;/em&gt;'s own .flake8 config file is configured like this. If you're curious about the reasoning behind B950, &lt;a href=&quot;https://github.com/PyCQA/flake8-bugbear#opinionated-warnings&quot;&gt;Bugbear's documentation&lt;/a&gt; explains it. The tl;dr is &quot;it's like highway speed limits, we won't bother you if you overdo it by a few km/h&quot;.&lt;/p&gt;
&lt;h3&gt;Empty lines&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; avoids spurious vertical whitespace. This is in the spirit of PEP 8 which says that in-function vertical whitespace should only be used sparingly.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; will allow single empty lines inside functions, and single and double empty lines on module level left by the original editors, except when they're within parenthesized expressions. Since such expressions are always reformatted to fit minimal space, this whitespace is lost.&lt;/p&gt;
&lt;p&gt;It will also insert proper spacing before and after function definitions. It's one line before and after inner functions and two lines before and after module-level functions and classes. &lt;em&gt;Black&lt;/em&gt; will not put empty lines between function/class definitions and standalone comments that immediately precede the given function/class.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; will enforce single empty lines between a class-level docstring and the first following field or method. This conforms to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0257/#multi-line-docstrings&quot; rel=&quot;nofollow&quot;&gt;PEP 257&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; won't insert empty lines after function docstrings unless that empty line is required due to an inner function starting immediately after.&lt;/p&gt;
&lt;h3&gt;Trailing commas&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; will add trailing commas to expressions that are split by comma where each element is on its own line. This includes function signatures.&lt;/p&gt;
&lt;p&gt;Unnecessary trailing commas are removed if an expression fits in one line. This makes it 1% more likely that your line won't exceed the allotted line length limit. Moreover, in this scenario, if you added another argument to your call, you'd probably fit it in the same line anyway. That doesn't make diffs any larger.&lt;/p&gt;
&lt;p&gt;One exception to removing trailing commas is tuple expressions with just one element. In this case &lt;em&gt;Black&lt;/em&gt; won't touch the single trailing comma as this would unexpectedly change the underlying data type. Note that this is also the case when commas are used while indexing. This is a tuple in disguise: &lt;code&gt;numpy_array[3, ]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One exception to adding trailing commas is function signatures containing &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;*args&lt;/code&gt;, or &lt;code&gt;**kwargs&lt;/code&gt;. In this case a trailing comma is only safe to use on Python 3.6. &lt;em&gt;Black&lt;/em&gt; will detect if your file is already 3.6+ only and use trailing commas in this situation. If you wonder how it knows, it looks for f-strings and existing use of trailing commas in function signatures that have stars in them. In other words, if you'd like a trailing comma in this situation and &lt;em&gt;Black&lt;/em&gt; didn't recognize it was safe to do so, put it there manually and &lt;em&gt;Black&lt;/em&gt; will keep it.&lt;/p&gt;
&lt;h3&gt;Strings&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; prefers double quotes (&lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt;) over single quotes (&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;'''&lt;/code&gt;). It will replace the latter with the former as long as it does not result in more backslash escapes than before.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; also standardizes string prefixes, making them always lowercase. On top of that, if your code is already Python 3.6+ only or it's using the &lt;code&gt;unicode_literals&lt;/code&gt; future import, &lt;em&gt;Black&lt;/em&gt; will remove &lt;code&gt;u&lt;/code&gt; from the string prefix as it is meaningless in those scenarios.&lt;/p&gt;
&lt;p&gt;The main reason to standardize on a single form of quotes is aesthetics. Having one kind of quotes everywhere reduces reader distraction. It will also enable a future version of &lt;em&gt;Black&lt;/em&gt; to merge consecutive string literals that ended up on the same line (see &lt;a href=&quot;https://github.com/python/black/issues/26&quot;&gt;#26&lt;/a&gt; for details).&lt;/p&gt;
&lt;p&gt;Why settle on double quotes? They anticipate apostrophes in English text. They match the docstring standard described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring&quot; rel=&quot;nofollow&quot;&gt;PEP 257&lt;/a&gt;. An empty string in double quotes (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is impossible to confuse with a one double-quote regardless of fonts and syntax highlighting used. On top of this, double quotes for strings are consistent with C which Python interacts a lot with.&lt;/p&gt;
&lt;p&gt;On certain keyboard layouts like US English, typing single quotes is a bit easier than double quotes. The latter requires use of the Shift key. My recommendation here is to keep using whatever is faster to type and let &lt;em&gt;Black&lt;/em&gt; handle the transformation.&lt;/p&gt;
&lt;p&gt;If you are adopting &lt;em&gt;Black&lt;/em&gt; in a large project with pre-existing string conventions (like the popular &lt;a href=&quot;https://stackoverflow.com/a/56190&quot; rel=&quot;nofollow&quot;&gt;&quot;single quotes for data, double quotes for human-readable strings&quot;&lt;/a&gt;), you can pass &lt;code&gt;--skip-string-normalization&lt;/code&gt; on the command line. This is meant as an adoption helper, avoid using this for new projects.&lt;/p&gt;
&lt;h3&gt;Numeric literals&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; standardizes most numeric literals to use lowercase letters for the syntactic parts and uppercase letters for the digits themselves: &lt;code&gt;0xAB&lt;/code&gt; instead of &lt;code&gt;0XAB&lt;/code&gt; and &lt;code&gt;1e10&lt;/code&gt; instead of &lt;code&gt;1E10&lt;/code&gt;. Python 2 long literals are styled as &lt;code&gt;2L&lt;/code&gt; instead of &lt;code&gt;2l&lt;/code&gt; to avoid confusion between &lt;code&gt;l&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Line breaks &amp;amp; binary operators&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; will break a line before a binary operator when splitting a block of code over multiple lines. This is so that &lt;em&gt;Black&lt;/em&gt; is compliant with the recent changes in the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#should-a-line-break-before-or-after-a-binary-operator&quot; rel=&quot;nofollow&quot;&gt;PEP 8&lt;/a&gt; style guide, which emphasizes that this approach improves readability.&lt;/p&gt;
&lt;p&gt;This behaviour may raise &lt;code&gt;W503 line break before binary operator&lt;/code&gt; warnings in style guide enforcement tools like Flake8. Since &lt;code&gt;W503&lt;/code&gt; is not PEP 8 compliant, you should tell Flake8 to ignore these warnings.&lt;/p&gt;
&lt;h3&gt;Slices&lt;/h3&gt;
&lt;p&gt;PEP 8 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements&quot; rel=&quot;nofollow&quot;&gt;recommends&lt;/a&gt; to treat &lt;code&gt;:&lt;/code&gt; in slices as a binary operator with the lowest priority, and to leave an equal amount of space on either side, except if a parameter is omitted (e.g. &lt;code&gt;ham[1 + 1 :]&lt;/code&gt;). It also states that for extended slices, both &lt;code&gt;:&lt;/code&gt; operators have to have the same amount of spacing, except if a parameter is omitted (&lt;code&gt;ham[1 + 1 ::]&lt;/code&gt;). &lt;em&gt;Black&lt;/em&gt; enforces these rules consistently.&lt;/p&gt;
&lt;p&gt;This behaviour may raise &lt;code&gt;E203 whitespace before ':'&lt;/code&gt; warnings in style guide enforcement tools like Flake8. Since &lt;code&gt;E203&lt;/code&gt; is not PEP 8 compliant, you should tell Flake8 to ignore these warnings.&lt;/p&gt;
&lt;h3&gt;Parentheses&lt;/h3&gt;
&lt;p&gt;Some parentheses are optional in the Python grammar. Any expression can be wrapped in a pair of parentheses to form an atom. There are a few interesting cases:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;if (...):&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;while (...):&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for (...) in (...):&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;assert (...), (...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from X import (...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;assignments like:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;target = (...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;target: type = (...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;some, *un, packing = (...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;augmented += (...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In those cases, parentheses are removed when the entire statement fits in one line, or if the inner expression doesn't have any delimiters to further split on. If there is only a single delimiter and the expression starts or ends with a bracket, the parenthesis can also be successfully omitted since the existing bracket pair will organize the expression neatly anyway. Otherwise, the parentheses are added.&lt;/p&gt;
&lt;p&gt;Please note that &lt;em&gt;Black&lt;/em&gt; does not add or remove any additional nested parentheses that you might want to have for clarity or further code organization. For example those parentheses are not going to be removed:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;not&lt;/span&gt; (this &lt;span class=&quot;pl-k&quot;&gt;or&lt;/span&gt; that)
decision &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; (maybe.this() &lt;span class=&quot;pl-k&quot;&gt;and&lt;/span&gt; values &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;or&lt;/span&gt; (maybe.that() &lt;span class=&quot;pl-k&quot;&gt;and&lt;/span&gt; values &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Call chains&lt;/h3&gt;
&lt;p&gt;Some popular APIs, like ORMs, use call chaining. This API style is known as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Fluent_interface&quot; rel=&quot;nofollow&quot;&gt;fluent interface&lt;/a&gt;. &lt;em&gt;Black&lt;/em&gt; formats those by treating dots that follow a call or an indexing operation like a very low priority delimiter. It's easier to show the behavior than to explain it. Look at the example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;example&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;session&lt;/span&gt;):
    result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; (
        session.query(models.Customer.id)
        .filter(
            models.Customer.account_id &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; account_id,
            models.Customer.email &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; email_address,
        )
        .order_by(models.Customer.id.asc())
        .all()
    )
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Typing stub files&lt;/h3&gt;
&lt;p&gt;PEP 484 describes the syntax for type hints in Python. One of the use cases for typing is providing type annotations for modules which cannot contain them directly (they might be written in C, or they might be third-party, or their implementation may be overly dynamic, and so on).&lt;/p&gt;
&lt;p&gt;To solve this, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484/#stub-files&quot; rel=&quot;nofollow&quot;&gt;stub files with the &lt;code&gt;.pyi&lt;/code&gt; file extension&lt;/a&gt; can be used to describe typing information for an external module. Those stub files omit the implementation of classes and functions they describe, instead they only contain the structure of the file (listing globals, functions, and classes with their members). The recommended code style for those files is more terse than PEP 8:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;prefer &lt;code&gt;...&lt;/code&gt; on the same line as the class/function signature;&lt;/li&gt;
&lt;li&gt;avoid vertical whitespace between consecutive module-level functions, names, or methods and fields within a single class;&lt;/li&gt;
&lt;li&gt;use a single blank line between top-level class definitions, or none if the classes are very small.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; enforces the above rules. There are additional guidelines for formatting &lt;code&gt;.pyi&lt;/code&gt; file that are not enforced yet but might be in a future version of the formatter:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;all function bodies should be empty (contain &lt;code&gt;...&lt;/code&gt; instead of the body);&lt;/li&gt;
&lt;li&gt;do not use docstrings;&lt;/li&gt;
&lt;li&gt;prefer &lt;code&gt;...&lt;/code&gt; over &lt;code&gt;pass&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;for arguments with a default, use &lt;code&gt;...&lt;/code&gt; instead of the actual default;&lt;/li&gt;
&lt;li&gt;avoid using string literals in type annotations, stub files support forward references natively (like Python 3.7 code with &lt;code&gt;from __future__ import annotations&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;use variable annotations instead of type comments, even for stubs that target older versions of Python;&lt;/li&gt;
&lt;li&gt;for arguments that default to &lt;code&gt;None&lt;/code&gt;, use &lt;code&gt;Optional[]&lt;/code&gt; explicitly;&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;float&lt;/code&gt; instead of &lt;code&gt;Union[int, float]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;pyproject.toml&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; is able to read project-specific default values for its command line options from a &lt;code&gt;pyproject.toml&lt;/code&gt; file. This is especially useful for specifying custom &lt;code&gt;--include&lt;/code&gt; and &lt;code&gt;--exclude&lt;/code&gt; patterns for your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip&lt;/strong&gt;: If you're asking yourself &quot;Do I need to configure anything?&quot; the answer is &quot;No&quot;. &lt;em&gt;Black&lt;/em&gt; is all about sensible defaults.&lt;/p&gt;
&lt;h3&gt;What on Earth is a &lt;code&gt;pyproject.toml&lt;/code&gt; file?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0518/&quot; rel=&quot;nofollow&quot;&gt;PEP 518&lt;/a&gt; defines &lt;code&gt;pyproject.toml&lt;/code&gt; as a configuration file to store build system requirements for Python projects. With the help of tools like &lt;a href=&quot;https://poetry.eustace.io/&quot; rel=&quot;nofollow&quot;&gt;Poetry&lt;/a&gt; or &lt;a href=&quot;https://flit.readthedocs.io/en/latest/&quot; rel=&quot;nofollow&quot;&gt;Flit&lt;/a&gt; it can fully replace the need for &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;setup.cfg&lt;/code&gt; files.&lt;/p&gt;
&lt;h3&gt;Where &lt;em&gt;Black&lt;/em&gt; looks for the file&lt;/h3&gt;
&lt;p&gt;By default &lt;em&gt;Black&lt;/em&gt; looks for &lt;code&gt;pyproject.toml&lt;/code&gt; starting from the common base directory of all files and directories passed on the command line. If it's not there, it looks in parent directories. It stops looking when it finds the file, or a &lt;code&gt;.git&lt;/code&gt; directory, or a &lt;code&gt;.hg&lt;/code&gt; directory, or the root of the file system, whichever comes first.&lt;/p&gt;
&lt;p&gt;If you're formatting standard input, &lt;em&gt;Black&lt;/em&gt; will look for configuration starting from the current working directory.&lt;/p&gt;
&lt;p&gt;You can also explicitly specify the path to a particular file that you want with &lt;code&gt;--config&lt;/code&gt;. In this situation &lt;em&gt;Black&lt;/em&gt; will not look for any other file.&lt;/p&gt;
&lt;p&gt;If you're running with &lt;code&gt;--verbose&lt;/code&gt;, you will see a blue message if a file was found and used.&lt;/p&gt;
&lt;p&gt;Please note &lt;code&gt;blackd&lt;/code&gt; will not use &lt;code&gt;pyproject.toml&lt;/code&gt; configuration.&lt;/p&gt;
&lt;h3&gt;Configuration format&lt;/h3&gt;
&lt;p&gt;As the file extension suggests, &lt;code&gt;pyproject.toml&lt;/code&gt; is a &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; file. It contains separate sections for different tools. &lt;em&gt;Black&lt;/em&gt; is using the &lt;code&gt;[tool.black]&lt;/code&gt; section. The option keys are the same as long names of options on the command line.&lt;/p&gt;
&lt;p&gt;Note that you have to use single-quoted strings in TOML for regular expressions. It's the equivalent of r-strings in Python. Multiline strings are treated as verbose regular expressions by Black. Use &lt;code&gt;[ ]&lt;/code&gt; to denote a significant space character.&lt;/p&gt;
&lt;details&gt;Example `pyproject.toml`
&lt;div class=&quot;highlight highlight-source-toml&quot;&gt;
&lt;pre&gt;
[&lt;span class=&quot;pl-en&quot;&gt;tool&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;black&lt;/span&gt;]
&lt;span class=&quot;pl-smi&quot;&gt;line-length&lt;/span&gt; = &lt;span class=&quot;pl-c1&quot;&gt;88&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;target-version&lt;/span&gt; = [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;py37&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class=&quot;pl-smi&quot;&gt;include&lt;/span&gt; = &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;\.pyi?$&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;exclude&lt;/span&gt; = &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'''&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;  /(&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;      \.eggs         # exclude a few common directories in the&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | \.git          # root of the project&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | \.hg&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | \.mypy_cache&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | \.tox&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | \.venv&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | _build&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | buck-out&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | build&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    | dist&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;  )/&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;  | foo.py           # also separately exclude a file named foo.py in&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                     # the root of the project&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'''&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;h3&gt;Lookup hierarchy&lt;/h3&gt;
&lt;p&gt;Command-line options have defaults that you can see in &lt;code&gt;--help&lt;/code&gt;. A &lt;code&gt;pyproject.toml&lt;/code&gt; can override those defaults. Finally, options provided by the user on the command line override both.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; will only ever use one &lt;code&gt;pyproject.toml&lt;/code&gt; file during an entire run. It doesn't look for multiple files, and doesn't compose configuration from different levels of the file hierarchy.&lt;/p&gt;
&lt;h2&gt;Editor integration&lt;/h2&gt;
&lt;h3&gt;Emacs&lt;/h3&gt;
&lt;p&gt;Use &lt;a href=&quot;https://github.com/proofit404/blacken&quot;&gt;proofit404/blacken&lt;/a&gt; or &lt;a href=&quot;https://github.com/jorgenschaefer/elpy&quot;&gt;Elpy&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;PyCharm/IntelliJ IDEA&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Install &lt;code&gt;black&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;highlight highlight-text-shell-session&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-s1&quot;&gt;pip install black&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;&lt;li&gt;Locate your &lt;code&gt;black&lt;/code&gt; installation folder.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;On macOS / Linux / BSD:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-shell-session&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-s1&quot;&gt;which black&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;/usr/local/bin/black  # possible location&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-shell-session&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-s1&quot;&gt;where black&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;%LocalAppData%\Programs\Python\Python36-32\Scripts\black.exe  # possible location&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;&lt;li&gt;Open External tools in PyCharm/IntelliJ IDEA&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;On macOS:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PyCharm -&amp;gt; Preferences -&amp;gt; Tools -&amp;gt; External Tools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On Windows / Linux / BSD:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;File -&amp;gt; Settings -&amp;gt; Tools -&amp;gt; External Tools&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;&lt;li&gt;
&lt;p&gt;Click the + icon to add a new external tool with the following values:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Name: Black&lt;/li&gt;
&lt;li&gt;Description: Black is the uncompromising Python code formatter.&lt;/li&gt;
&lt;li&gt;Program: &amp;lt;install_location_from_step_2&amp;gt;&lt;/li&gt;
&lt;li&gt;Arguments: &lt;code&gt;&quot;$FilePath$&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Format the currently opened file by selecting &lt;code&gt;Tools -&amp;gt; External Tools -&amp;gt; black&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Alternatively, you can set a keyboard shortcut by navigating to &lt;code&gt;Preferences or Settings -&amp;gt; Keymap -&amp;gt; External Tools -&amp;gt; External Tools - Black&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optionally, run &lt;em&gt;Black&lt;/em&gt; on every file save:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make sure you have the &lt;a href=&quot;https://plugins.jetbrains.com/plugin/7177-file-watchers&quot; rel=&quot;nofollow&quot;&gt;File Watcher&lt;/a&gt; plugin installed.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Preferences or Settings -&amp;gt; Tools -&amp;gt; File Watchers&lt;/code&gt; and click &lt;code&gt;+&lt;/code&gt; to add a new watcher:
&lt;ul&gt;&lt;li&gt;Name: Black&lt;/li&gt;
&lt;li&gt;File type: Python&lt;/li&gt;
&lt;li&gt;Scope: Project Files&lt;/li&gt;
&lt;li&gt;Program: &amp;lt;install_location_from_step_2&amp;gt;&lt;/li&gt;
&lt;li&gt;Arguments: &lt;code&gt;$FilePath$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Output paths to refresh: &lt;code&gt;$FilePath$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Working directory: &lt;code&gt;$ProjectFileDir$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Uncheck &quot;Auto-save edited files to trigger the watcher&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Wing IDE&lt;/h3&gt;
&lt;p&gt;Wing supports black via the OS Commands tool, as explained in the Wing documentation on &lt;a href=&quot;https://wingware.com/doc/edit/pep8&quot; rel=&quot;nofollow&quot;&gt;pep8 formatting&lt;/a&gt;. The detailed procedure is:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Install &lt;code&gt;black&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;highlight highlight-text-shell-session&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-s1&quot;&gt;pip install black&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;&lt;li&gt;Make sure it runs from the command line, e.g.&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;highlight highlight-text-shell-session&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-s1&quot;&gt;black --help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;&lt;li&gt;In Wing IDE, activate the &lt;strong&gt;OS Commands&lt;/strong&gt; panel and define the command &lt;strong&gt;black&lt;/strong&gt; to execute black on the currently selected file:&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Use the Tools -&amp;gt; OS Commands menu selection&lt;/li&gt;
&lt;li&gt;click on &lt;strong&gt;+&lt;/strong&gt; in &lt;strong&gt;OS Commands&lt;/strong&gt; -&amp;gt; New: Command line..
&lt;/li&gt;
&lt;/ul&gt;&lt;ol start=&quot;4&quot;&gt;&lt;li&gt;Select a file in the editor and press &lt;strong&gt;F1&lt;/strong&gt; , or whatever key binding you selected in step 3, to reformat the file.&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Vim&lt;/h3&gt;
&lt;p&gt;Commands and shortcuts:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;:Black&lt;/code&gt; to format the entire file (ranges not supported);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:BlackUpgrade&lt;/code&gt; to upgrade &lt;em&gt;Black&lt;/em&gt; inside the virtualenv;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:BlackVersion&lt;/code&gt; to get the current version of &lt;em&gt;Black&lt;/em&gt; inside the virtualenv.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Configuration:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;g:black_fast&lt;/code&gt; (defaults to &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:black_linelength&lt;/code&gt; (defaults to &lt;code&gt;88&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:black_skip_string_normalization&lt;/code&gt; (defaults to &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:black_virtualenv&lt;/code&gt; (defaults to &lt;code&gt;~/.vim/black&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To install with &lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Plug 'python/black'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or with &lt;a href=&quot;https://github.com/VundleVim/Vundle.vim&quot;&gt;Vundle&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Plugin 'python/black'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or you can copy the plugin from &lt;a href=&quot;https://github.com/python/black/tree/master/plugin/black.vim&quot;&gt;plugin/black.vim&lt;/a&gt;. Let me know if this requires any changes to work with Vim 8's builtin &lt;code&gt;packadd&lt;/code&gt;, or Pathogen, and so on.&lt;/p&gt;
&lt;p&gt;This plugin &lt;strong&gt;requires Vim 7.0+ built with Python 3.6+ support&lt;/strong&gt;. It needs Python 3.6 to be able to run &lt;em&gt;Black&lt;/em&gt; inside the Vim process which is much faster than calling an external command.&lt;/p&gt;
&lt;p&gt;On first run, the plugin creates its own virtualenv using the right Python version and automatically installs &lt;em&gt;Black&lt;/em&gt;. You can upgrade it later by calling &lt;code&gt;:BlackUpgrade&lt;/code&gt; and restarting Vim.&lt;/p&gt;
&lt;p&gt;If you need to do anything special to make your virtualenv work and install &lt;em&gt;Black&lt;/em&gt; (for example you want to run a version from master), create a virtualenv manually and point &lt;code&gt;g:black_virtualenv&lt;/code&gt; to it. The plugin will use it.&lt;/p&gt;
&lt;p&gt;To run &lt;em&gt;Black&lt;/em&gt; on save, add the following line to &lt;code&gt;.vimrc&lt;/code&gt; or &lt;code&gt;init.vim&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;autocmd BufWritePre *.py execute ':Black'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;How to get Vim with Python 3.6?&lt;/strong&gt; On Ubuntu 17.10 Vim comes with Python 3.6 by default. On macOS with Homebrew run: &lt;code&gt;brew install vim --with-python3&lt;/code&gt;. When building Vim from source, use: &lt;code&gt;./configure --enable-python3interp=yes&lt;/code&gt;. There's many guides online how to do this.&lt;/p&gt;
&lt;h3&gt;Visual Studio Code&lt;/h3&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-python.python&quot; rel=&quot;nofollow&quot;&gt;Python extension&lt;/a&gt; (&lt;a href=&quot;https://code.visualstudio.com/docs/python/editing#_formatting&quot; rel=&quot;nofollow&quot;&gt;instructions&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;SublimeText 3&lt;/h3&gt;
&lt;p&gt;Use &lt;a href=&quot;https://github.com/jgirardet/sublack&quot;&gt;sublack plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Jupyter Notebook Magic&lt;/h3&gt;
&lt;p&gt;Use &lt;a href=&quot;https://github.com/csurfer/blackcellmagic&quot;&gt;blackcellmagic&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Python Language Server&lt;/h3&gt;
&lt;p&gt;If your editor supports the &lt;a href=&quot;https://langserver.org/&quot; rel=&quot;nofollow&quot;&gt;Language Server Protocol&lt;/a&gt; (Atom, Sublime Text, Visual Studio Code and many more), you can use the &lt;a href=&quot;https://github.com/palantir/python-language-server&quot;&gt;Python Language Server&lt;/a&gt; with the &lt;a href=&quot;https://github.com/rupert/pyls-black&quot;&gt;pyls-black&lt;/a&gt; plugin.&lt;/p&gt;
&lt;h3&gt;Atom/Nuclide&lt;/h3&gt;
&lt;p&gt;Use &lt;a href=&quot;https://atom.io/packages/python-black&quot; rel=&quot;nofollow&quot;&gt;python-black&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Other editors&lt;/h3&gt;
&lt;p&gt;Other editors will require external contributions.&lt;/p&gt;
&lt;p&gt;Patches welcome! ✨ 🍰 ✨&lt;/p&gt;
&lt;p&gt;Any tool that can pipe code through &lt;em&gt;Black&lt;/em&gt; using its stdio mode (just &lt;a href=&quot;https://www.tldp.org/LDP/abs/html/special-chars.html#DASHREF2&quot; rel=&quot;nofollow&quot;&gt;use &lt;code&gt;-&lt;/code&gt; as the file name&lt;/a&gt;). The formatted code will be returned on stdout (unless &lt;code&gt;--check&lt;/code&gt; was passed). &lt;em&gt;Black&lt;/em&gt; will still emit messages on stderr but that shouldn't affect your use case.&lt;/p&gt;
&lt;p&gt;This can be used for example with PyCharm's or IntelliJ's &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/file-watchers.html&quot; rel=&quot;nofollow&quot;&gt;File Watchers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;blackd&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;blackd&lt;/code&gt; is a small HTTP server that exposes &lt;em&gt;Black&lt;/em&gt;'s functionality over a simple protocol. The main benefit of using it is to avoid paying the cost of starting up a new &lt;em&gt;Black&lt;/em&gt; process every time you want to blacken a file.&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;blackd&lt;/code&gt; is not packaged alongside &lt;em&gt;Black&lt;/em&gt; by default because it has additional dependencies. You will need to do &lt;code&gt;pip install black[d]&lt;/code&gt; to install it.&lt;/p&gt;
&lt;p&gt;You can start the server on the default port, binding only to the local interface by running &lt;code&gt;blackd&lt;/code&gt;. You will see a single line mentioning the server's version, and the host and port it's listening on. &lt;code&gt;blackd&lt;/code&gt; will then print an access log similar to most web servers on standard output, merged with any exception traces caused by invalid formatting requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;blackd&lt;/code&gt; provides even less options than &lt;em&gt;Black&lt;/em&gt;. You can see them by running &lt;code&gt;blackd --help&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang=&quot;text&quot;&gt;
&lt;code&gt;Usage: blackd [OPTIONS]

Options:
  --bind-host TEXT                Address to bind the server to.
  --bind-port INTEGER             Port to listen on
  --version                       Show the version and exit.
  -h, --help                      Show this message and exit.
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Protocol&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;blackd&lt;/code&gt; only accepts &lt;code&gt;POST&lt;/code&gt; requests at the &lt;code&gt;/&lt;/code&gt; path. The body of the request should contain the python source code to be formatted, encoded according to the &lt;code&gt;charset&lt;/code&gt; field in the &lt;code&gt;Content-Type&lt;/code&gt; request header. If no &lt;code&gt;charset&lt;/code&gt; is specified, &lt;code&gt;blackd&lt;/code&gt; assumes &lt;code&gt;UTF-8&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are a few HTTP headers that control how the source is formatted. These correspond to command line flags for &lt;em&gt;Black&lt;/em&gt;. There is one exception to this: &lt;code&gt;X-Protocol-Version&lt;/code&gt; which if present, should have the value &lt;code&gt;1&lt;/code&gt;, otherwise the request is rejected with &lt;code&gt;HTTP 501&lt;/code&gt; (Not Implemented).&lt;/p&gt;
&lt;p&gt;The headers controlling how code is formatted are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;X-Line-Length&lt;/code&gt;: corresponds to the &lt;code&gt;--line-length&lt;/code&gt; command line flag.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Skip-String-Normalization&lt;/code&gt;: corresponds to the &lt;code&gt;--skip-string-normalization&lt;/code&gt; command line flag. If present and its value is not the empty string, no string normalization will be performed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Fast-Or-Safe&lt;/code&gt;: if set to &lt;code&gt;fast&lt;/code&gt;, &lt;code&gt;blackd&lt;/code&gt; will act as &lt;em&gt;Black&lt;/em&gt; does when passed the &lt;code&gt;--fast&lt;/code&gt; command line flag.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Python-Variant&lt;/code&gt;: if set to &lt;code&gt;pyi&lt;/code&gt;, &lt;code&gt;blackd&lt;/code&gt; will act as &lt;em&gt;Black&lt;/em&gt; does when passed the &lt;code&gt;--pyi&lt;/code&gt; command line flag. Otherwise, its value must correspond to a Python version or a set of comma-separated Python versions, optionally prefixed with &lt;code&gt;py&lt;/code&gt;. For example, to request code that is compatible with Python 3.5 and 3.6, set the header to &lt;code&gt;py3.5,py3.6&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If any of these headers are set to invalid values, &lt;code&gt;blackd&lt;/code&gt; returns a &lt;code&gt;HTTP 400&lt;/code&gt; error response, mentioning the name of the problematic header in the message body.&lt;/p&gt;
&lt;p&gt;Apart from the above, &lt;code&gt;blackd&lt;/code&gt; can produce the following response codes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;HTTP 204&lt;/code&gt;: If the input is already well-formatted. The response body is empty.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTP 200&lt;/code&gt;: If formatting was needed on the input. The response body contains the blackened Python code, and the &lt;code&gt;Content-Type&lt;/code&gt; header is set accordingly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTP 400&lt;/code&gt;: If the input contains a syntax error. Details of the error are returned in the response body.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTP 500&lt;/code&gt;: If there was any kind of error while trying to format the input. The response body contains a textual representation of the error.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Version control integration&lt;/h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https://pre-commit.com/&quot; rel=&quot;nofollow&quot;&gt;pre-commit&lt;/a&gt;. Once you &lt;a href=&quot;https://pre-commit.com/#install&quot; rel=&quot;nofollow&quot;&gt;have it installed&lt;/a&gt;, add this to the &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; in your repository:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-yaml&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-ent&quot;&gt;repos&lt;/span&gt;:
-   &lt;span class=&quot;pl-ent&quot;&gt;repo&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;https://github.com/python/black&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;rev&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;stable&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot;&gt;hooks&lt;/span&gt;:
    - &lt;span class=&quot;pl-ent&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;black&lt;/span&gt;
      &lt;span class=&quot;pl-ent&quot;&gt;language_version&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;python3.6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pre-commit install&lt;/code&gt; and you're ready to go.&lt;/p&gt;
&lt;p&gt;Avoid using &lt;code&gt;args&lt;/code&gt; in the hook. Instead, store necessary configuration in &lt;code&gt;pyproject.toml&lt;/code&gt; so that editors and command-line usage of Black all behave consistently for your project. See &lt;em&gt;Black&lt;/em&gt;'s own &lt;code&gt;pyproject.toml&lt;/code&gt; for an example.&lt;/p&gt;
&lt;p&gt;If you're already using Python 3.7, switch the &lt;code&gt;language_version&lt;/code&gt; accordingly. Finally, &lt;code&gt;stable&lt;/code&gt; is a tag that is pinned to the latest release on PyPI. If you'd rather run on master, this is also an option.&lt;/p&gt;
&lt;h2&gt;Ignoring unmodified files&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; remembers files it has already formatted, unless the &lt;code&gt;--diff&lt;/code&gt; flag is used or code is passed via standard input. This information is stored per-user. The exact location of the file depends on the &lt;em&gt;Black&lt;/em&gt; version and the system on which &lt;em&gt;Black&lt;/em&gt; is run. The file is non-portable. The standard location on common operating systems is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Windows: &lt;code&gt;C:\\Users\&amp;lt;username&amp;gt;\AppData\Local\black\black\Cache\&amp;lt;version&amp;gt;\cache.&amp;lt;line-length&amp;gt;.&amp;lt;file-mode&amp;gt;.pickle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;macOS: &lt;code&gt;/Users/&amp;lt;username&amp;gt;/Library/Caches/black/&amp;lt;version&amp;gt;/cache.&amp;lt;line-length&amp;gt;.&amp;lt;file-mode&amp;gt;.pickle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;/home/&amp;lt;username&amp;gt;/.cache/black/&amp;lt;version&amp;gt;/cache.&amp;lt;line-length&amp;gt;.&amp;lt;file-mode&amp;gt;.pickle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;file-mode&lt;/code&gt; is an int flag that determines whether the file was formatted as 3.6+ only, as .pyi, and whether string normalization was omitted.&lt;/p&gt;
&lt;h2&gt;Used by&lt;/h2&gt;
&lt;p&gt;The following notable open-source projects trust &lt;em&gt;Black&lt;/em&gt; with enforcing a consistent code style: pytest, tox, Pyramid, Django Channels, Hypothesis, attrs, SQLAlchemy, Poetry, PyPA applications (Warehouse, Pipenv, virtualenv).&lt;/p&gt;
&lt;p&gt;Are we missing anyone? Let us know.&lt;/p&gt;
&lt;h2&gt;Testimonials&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Dusty Phillips&lt;/strong&gt;, &lt;a href=&quot;https://smile.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Daps&amp;amp;field-keywords=dusty+phillips&quot; rel=&quot;nofollow&quot;&gt;writer&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; is opinionated so you don't have to be.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hynek Schlawack&lt;/strong&gt;, &lt;a href=&quot;https://www.attrs.org/&quot; rel=&quot;nofollow&quot;&gt;creator of &lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;, core developer of Twisted and CPython:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An auto-formatter that doesn't suck is all I want for Xmas!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Carl Meyer&lt;/strong&gt;, &lt;a href=&quot;https://www.djangoproject.com/&quot; rel=&quot;nofollow&quot;&gt;Django&lt;/a&gt; core developer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At least the name is good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Kenneth Reitz&lt;/strong&gt;, creator of &lt;a href=&quot;http://python-requests.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.pipenv.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;pipenv&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This vastly improves the formatting of our code. Thanks a ton!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Show your style&lt;/h2&gt;
&lt;p&gt;Use the badge in your project's README.md:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-gfm&quot;&gt;
&lt;pre&gt;
[![&lt;span class=&quot;pl-e&quot;&gt;Code style: black&lt;/span&gt;](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the badge in README.rst:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;.. image:: https://img.shields.io/badge/code%20style-black-000000.svg
    :target: https://github.com/python/black
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Looks like this: &lt;a href=&quot;https://github.com/python/black&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/28a51fe3a2c05048d8ca8ecd039d6b1619037326/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667&quot; alt=&quot;Code style: black&quot; data-canonical-src=&quot;https://img.shields.io/badge/code%20style-black-000000.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;h2&gt;Contributing to &lt;em&gt;Black&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;In terms of inspiration, &lt;em&gt;Black&lt;/em&gt; is about as configurable as &lt;em&gt;gofmt&lt;/em&gt;. This is deliberate.&lt;/p&gt;
&lt;p&gt;Bug reports and fixes are always welcome! However, before you suggest a new feature or configuration knob, ask yourself why you want it. If it enables better integration with some workflow, fixes an inconsistency, speeds things up, and so on - go for it! On the other hand, if your answer is &quot;because I don't like a particular formatting&quot; then you're not ready to embrace &lt;em&gt;Black&lt;/em&gt; yet. Such changes are unlikely to get accepted. You can still try but prepare to be disappointed.&lt;/p&gt;
&lt;p&gt;More details can be found in &lt;a href=&quot;https://github.com/python/black/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Change Log&lt;/h2&gt;
&lt;h3&gt;19.5b0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;black -c&lt;/code&gt; as a way to format code passed from the command line (#761)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;--safe now works with Python 2 code (#840)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed grammar selection for Python 2-specific code (#765)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed feature detection for trailing commas in function definitions and call sites (#763)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; can now format async generators (#593)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; no longer crashes on Windows machines with more than 61 cores (#838)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; no longer crashes on standalone comments prepended with a backslash (#767)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; no longer crashes on &lt;code&gt;from&lt;/code&gt; ... &lt;code&gt;import&lt;/code&gt; blocks with comments (#829)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;removed unnecessary parentheses around &lt;code&gt;yield&lt;/code&gt; expressions (#834)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added parentheses around long tuples in unpacking assignments (#832)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed bug that led &lt;em&gt;Black&lt;/em&gt; format some code with a line length target of 1 (#762)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;19.3b0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;new option &lt;code&gt;--target-version&lt;/code&gt; to control which Python versions &lt;em&gt;Black&lt;/em&gt;-formatted code should target (#618)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;deprecated &lt;code&gt;--py36&lt;/code&gt; (use &lt;code&gt;--target-version=py36&lt;/code&gt; instead) (#724)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; no longer normalizes numeric literals to include &lt;code&gt;_&lt;/code&gt; separators (#696)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;long &lt;code&gt;del&lt;/code&gt; statements are now split into multiple lines (#698)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type comments are no longer mangled in function signatures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;improved performance of formatting deeply nested data structures (#509)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; now properly formats multiple files in parallel on Windows (#632)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; now creates cache files atomically which allows it to be used in parallel pipelines (like &lt;code&gt;xargs -P8&lt;/code&gt;) (#673)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; now correctly indents comments in files that were previously formatted with tabs (#262)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;blackd&lt;/code&gt; now supports CORS (#622)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.9b0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;numeric literals are now formatted by &lt;em&gt;Black&lt;/em&gt; (#452, #461, #464, #469):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;numeric literals are normalized to include &lt;code&gt;_&lt;/code&gt; separators on Python 3.6+ code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--skip-numeric-underscore-normalization&lt;/code&gt; to disable the above behavior and leave numeric underscores as they were in the input&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;code with &lt;code&gt;_&lt;/code&gt; in numeric literals is recognized as Python 3.6+&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;most letters in numeric literals are lowercased (e.g., in &lt;code&gt;1e10&lt;/code&gt;, &lt;code&gt;0x01&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hexadecimal digits are always uppercased (e.g. &lt;code&gt;0xBADC0DE&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;code&gt;blackd&lt;/code&gt;, see &lt;a href=&quot;https://github.com/python/black#blackd&quot;&gt;its documentation&lt;/a&gt; for more info (#349)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;adjacent string literals are now correctly split into multiple lines (#463)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;trailing comma is now added to single imports that don't fit on a line (#250)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cache is now populated when &lt;code&gt;--check&lt;/code&gt; is successful for a file which speeds up consecutive checks of properly formatted unmodified files (#448)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;whitespace at the beginning of the file is now removed (#399)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed mangling &lt;a href=&quot;http://mpastell.com/pweave/&quot; rel=&quot;nofollow&quot;&gt;pweave&lt;/a&gt; and &lt;a href=&quot;https://pythonhosted.org/spyder/&quot; rel=&quot;nofollow&quot;&gt;Spyder IDE&lt;/a&gt; special comments (#532)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unstable formatting when unpacking big tuples (#267)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed parsing of &lt;code&gt;__future__&lt;/code&gt; imports with renames (#389)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed scope of &lt;code&gt;# fmt: off&lt;/code&gt; when directly preceding &lt;code&gt;yield&lt;/code&gt; and other nodes (#385)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed formatting of lambda expressions with default arguments (#468)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed &lt;code&gt;async for&lt;/code&gt; statements: &lt;em&gt;Black&lt;/em&gt; no longer breaks them into separate lines (#372)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;note: the Vim plugin stopped registering &lt;code&gt;,=&lt;/code&gt; as a default chord as it turned out to be a bad idea (#415)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.6b4&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;hotfix: don't freeze when multiple comments directly precede &lt;code&gt;# fmt: off&lt;/code&gt; (#371)&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.6b3&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;typing stub files (&lt;code&gt;.pyi&lt;/code&gt;) now have blank lines added after constants (#340)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;# fmt: off&lt;/code&gt; and &lt;code&gt;# fmt: on&lt;/code&gt; are now much more dependable:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;they now work also within bracket pairs (#329)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;they now correctly work across function/class boundaries (#335)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;they now work when an indentation block starts with empty lines or misaligned comments (#334)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;made Click not fail on invalid environments; note that Click is right but the likelihood we'll need to access non-ASCII file paths when dealing with Python source code is low (#277)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed improper formatting of f-strings with quotes inside interpolated expressions (#322)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unnecessary slowdown when long list literals where found in a file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unnecessary slowdown on AST nodes with very many siblings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed cannibalizing backslashes during string normalization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed a crash due to symbolic links pointing outside of the project directory (#338)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.6b2&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--config&lt;/code&gt; (#65)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;code&gt;-h&lt;/code&gt; equivalent to &lt;code&gt;--help&lt;/code&gt; (#316)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed improper unmodified file caching when &lt;code&gt;-S&lt;/code&gt; was used&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed extra space in string unpacking (#305)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed formatting of empty triple quoted strings (#313)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unnecessary slowdown in comment placement calculation on lines without comments&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.6b1&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;hotfix: don't output human-facing information on stdout (#299)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hotfix: don't output cake emoji on non-zero return code (#300)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.6b0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--include&lt;/code&gt; and &lt;code&gt;--exclude&lt;/code&gt; (#270)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--skip-string-normalization&lt;/code&gt; (#118)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--verbose&lt;/code&gt; (#283)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the header output in &lt;code&gt;--diff&lt;/code&gt; now actually conforms to the unified diff spec&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed long trivial assignments being wrapped in unnecessary parentheses (#273)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unnecessary parentheses when a line contained multiline strings (#232)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed stdin handling not working correctly if an old version of Click was used (#276)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; now preserves line endings when formatting a file in place (#258)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.5b1&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--pyi&lt;/code&gt; (#249)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--py36&lt;/code&gt; (#249)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python grammar pickle caches are stored with the formatting caches, making &lt;em&gt;Black&lt;/em&gt; work in environments where site-packages is not user-writable (#192)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; now enforces a PEP 257 empty line after a class-level docstring (and/or fields) and the first method&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed invalid code produced when standalone comments were present in a trailer that was omitted from line splitting on a large expression (#237)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed optional parentheses being removed within &lt;code&gt;# fmt: off&lt;/code&gt; sections (#224)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed invalid code produced when stars in very long imports were incorrectly wrapped in optional parentheses (#234)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unstable formatting when inline comments were moved around in a trailer that was omitted from line splitting on a large expression (#238)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed extra empty line between a class declaration and the first method if no class docstring or fields are present (#219)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed extra empty line between a function signature and an inner function or inner class (#196)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.5b0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;call chains are now formatted according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Fluent_interface&quot; rel=&quot;nofollow&quot;&gt;fluent interfaces&lt;/a&gt; style (#67)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data structure literals (tuples, lists, dictionaries, and sets) are now also always exploded like imports when they don't fit in a single line (#152)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;slices are now formatted according to PEP 8 (#178)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;parentheses are now also managed automatically on the right-hand side of assignments and return statements (#140)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;math operators now use their respective priorities for delimiting multiline expressions (#148)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;optional parentheses are now omitted on expressions that start or end with a bracket and only contain a single operator (#177)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;empty parentheses in a class definition are now removed (#145, #180)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;string prefixes are now standardized to lowercase and &lt;code&gt;u&lt;/code&gt; is removed on Python 3.6+ only code and Python 2.7+ code with the &lt;code&gt;unicode_literals&lt;/code&gt; future import (#188, #198, #199)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;typing stub files (&lt;code&gt;.pyi&lt;/code&gt;) are now formatted in a style that is consistent with PEP 484 (#207, #210)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;progress when reformatting many files is now reported incrementally&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed trailers (content with brackets) being unnecessarily exploded into their own lines after a dedented closing bracket (#119)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed an invalid trailing comma sometimes left in imports (#185)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed non-deterministic formatting when multiple pairs of removable parentheses were used (#183)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed multiline strings being unnecessarily wrapped in optional parentheses in long assignments (#215)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed not splitting long from-imports with only a single name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed Python 3.6+ file discovery by also looking at function calls with unpacking. This fixed non-deterministic formatting if trailing commas where used both in function signatures with stars and function calls with stars but the former would be reformatted to a single line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed crash on dealing with optional parentheses (#193)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed &quot;is&quot;, &quot;is not&quot;, &quot;in&quot;, and &quot;not in&quot; not considered operators for splitting purposes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed crash when dead symlinks where encountered&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.4a4&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;don't populate the cache on &lt;code&gt;--check&lt;/code&gt; (#175)&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.4a3&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added a &quot;cache&quot;; files already reformatted that haven't changed on disk won't be reformatted again (#109)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--check&lt;/code&gt; and &lt;code&gt;--diff&lt;/code&gt; are no longer mutually exclusive (#149)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;generalized star expression handling, including double stars; this fixes multiplication making expressions &quot;unsafe&quot; for trailing commas (#132)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; no longer enforces putting empty lines behind control flow statements (#90)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; now splits imports like &quot;Mode 3 + trailing comma&quot; of isort (#127)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed comment indentation when a standalone comment closes a block (#16, #32)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed standalone comments receiving extra empty lines if immediately preceding a class, def, or decorator (#56, #154)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed &lt;code&gt;--diff&lt;/code&gt; not showing entire path (#130)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed parsing of complex expressions after star and double stars in function calls (#2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed invalid splitting on comma in lambda arguments (#133)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed missing splits of ternary expressions (#141)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.4a2&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;fixed parsing of unaligned standalone comments (#99, #112)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed placement of dictionary unpacking inside dictionary literals (#111)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vim plugin now works on Windows, too&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unstable formatting when encountering unnecessarily escaped quotes in a string (#120)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.4a1&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--quiet&lt;/code&gt; (#78)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added automatic parentheses management (#4)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added &lt;a href=&quot;https://pre-commit.com&quot; rel=&quot;nofollow&quot;&gt;pre-commit&lt;/a&gt; integration (#103, #104)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed reporting on &lt;code&gt;--check&lt;/code&gt; with multiple files (#101, #102)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed removing backslash escapes from raw strings (#100, #105)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.4a0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--diff&lt;/code&gt; (#87)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add line breaks before all delimiters, except in cases like commas, to better comply with PEP 8 (#73)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;standardize string literals to use double quotes (almost) everywhere (#75)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed handling of standalone comments within nested bracketed expressions; &lt;em&gt;Black&lt;/em&gt; will no longer produce super long lines or put all standalone comments at the end of the expression (#22)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed 18.3a4 regression: don't crash and burn on empty lines with trailing whitespace (#80)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed 18.3a4 regression: &lt;code&gt;# yapf: disable&lt;/code&gt; usage as trailing comment would cause &lt;em&gt;Black&lt;/em&gt; to not emit the rest of the file (#95)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when CTRL+C is pressed while formatting many files, &lt;em&gt;Black&lt;/em&gt; no longer freaks out with a flurry of asyncio-related exceptions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;only allow up to two empty lines on module level and only single empty lines within functions (#74)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.3a4&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;code&gt;# fmt: off&lt;/code&gt; and &lt;code&gt;# fmt: on&lt;/code&gt; are implemented (#5)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;automatic detection of deprecated Python 2 forms of print statements and exec statements in the formatted file (#49)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;use proper spaces for complex expressions in default values of typed function arguments (#60)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;only return exit code 1 when --check is used (#50)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;don't remove single trailing commas from square bracket indexing (#59)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;don't omit whitespace if the previous factor leaf wasn't a math operator (#55)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;omit extra space in kwarg unpacking if it's the first argument (#46)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;omit extra space in &lt;a href=&quot;http://www.sphinx-doc.org/en/stable/ext/autodoc.html#directive-autoattribute&quot; rel=&quot;nofollow&quot;&gt;Sphinx auto-attribute comments&lt;/a&gt; (#68)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.3a3&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;don't remove single empty lines outside of bracketed expressions (#19)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;added ability to pipe formatting from stdin to stdin (#25)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;restored ability to format code with legacy usage of &lt;code&gt;async&lt;/code&gt; as a name (#20, #42)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;even better handling of numpy-style array indexing (#33, again)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.3a2&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;changed positioning of binary operators to occur at beginning of lines instead of at the end, following &lt;a href=&quot;https://github.com/python/peps/commit/c59c4376ad233a62ca4b3a6060c81368bd21e85b&quot;&gt;a recent change to PEP 8&lt;/a&gt; (#21)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ignore empty bracket pairs while splitting. This avoids very weirdly looking formattings (#34, #35)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;remove a trailing comma if there is a single argument to a call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if top level functions were separated by a comment, don't put four empty lines after the upper function&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unstable formatting of newlines with imports&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed unintentional folding of post scriptum standalone comments into last statement if it was a simple statement (#18, #28)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed missing space in numpy-style array indexing (#33)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed spurious space after star-based unary expressions (#31)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.3a1&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;added &lt;code&gt;--check&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;only put trailing commas in function signatures and calls if it's safe to do so. If the file is Python 3.6+ it's always safe, otherwise only safe if there are no &lt;code&gt;*args&lt;/code&gt; or &lt;code&gt;**kwargs&lt;/code&gt; used in the signature or call. (#8)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed invalid spacing of dots in relative imports (#6, #13)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed invalid splitting after comma on unpacked variables in for-loops (#23)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed spurious space in parenthesized set expressions (#7)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed spurious space after opening parentheses and in default arguments (#14, #17)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed spurious space after unary operators when the operand was a complex expression (#15)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;18.3a0&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;first published version, Happy 🍰 Day 2018!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;alpha quality&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;date-versioned (see: &lt;a href=&quot;https://calver.org/&quot; rel=&quot;nofollow&quot;&gt;https://calver.org/&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Authors&lt;/h2&gt;
&lt;p&gt;Glued together by &lt;a href=&quot;mailto:lukasz@langa.pl&quot;&gt;Łukasz Langa&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Maintained with &lt;a href=&quot;mailto:carolcode@willingconsulting.com&quot;&gt;Carol Willing&lt;/a&gt;, &lt;a href=&quot;mailto:carl@oddbird.net&quot;&gt;Carl Meyer&lt;/a&gt;, &lt;a href=&quot;mailto:jelle.zijlstra@gmail.com&quot;&gt;Jelle Zijlstra&lt;/a&gt;, &lt;a href=&quot;mailto:mail@autophagy.io&quot;&gt;Mika Naylor&lt;/a&gt;, and &lt;a href=&quot;mailto:zsol.zsol@gmail.com&quot;&gt;Zsolt Dollenstein&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Multiple contributions by:&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 17 May 2019 14:16:55 +0000</pubDate>
<dc:creator>collinmanderson</dc:creator>
<og:image>https://repository-images.githubusercontent.com/125266328/48aef880-6cce-11e9-9e3c-3ca0dd3ac138</og:image>
<og:type>object</og:type>
<og:title>python/black</og:title>
<og:url>https://github.com/python/black</og:url>
<og:description>The uncompromising Python code formatter. Contribute to python/black development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/python/black</dc:identifier>
</item>
</channel>
</rss>