<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Google’s Chrome Becomes Web ‘Gatekeeper’ and Rivals Complain</title>
<link>https://www.bloomberg.com/news/articles/2019-05-28/google-s-chrome-becomes-web-gatekeeper-and-rivals-complain</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-05-28/google-s-chrome-becomes-web-gatekeeper-and-rivals-complain</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-05-28/google-s-chrome-becomes-web-gatekeeper-and-rivals-complain&quot;&gt;https://www.bloomberg.com/news/articles/2019-05-28/google-s-chrome-becomes-web-gatekeeper-and-rivals-complain&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=20037562&quot;&gt;https://news.ycombinator.com/item?id=20037562&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 281&lt;/p&gt;
&lt;p&gt;# Comments: 209&lt;/p&gt;
</description>
<pubDate>Wed, 29 May 2019 07:21:42 +0000</pubDate>
<dc:creator>naktinis</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=164165a0-822b-11e9-aa17-8734f6368ad8&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wNS0yOC9nb29nbGUtcy1jaHJvbWUtYmVjb21lcy13ZWItZ2F0ZWtlZXBlci1hbmQtcml2YWxzLWNvbXBsYWlu</dc:identifier>
</item>
<item>
<title>Removing duplicate lines from files keeping the original order with awk</title>
<link>https://iridakos.com/how-to/2019/05/16/remove-duplicate-lines-preserving-order-linux.html</link>
<guid isPermaLink="true" >https://iridakos.com/how-to/2019/05/16/remove-duplicate-lines-preserving-order-linux.html</guid>
<description>&lt;p&gt;Suppose you have a text file and you need to remove all of its duplicate lines.&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;To remove the duplicate lines &lt;strong&gt;preserving their order in the file&lt;/strong&gt; use:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;awk &lt;span class=&quot;s1&quot;&gt;'!visited[$0]++'&lt;/span&gt; your_file &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; deduplicated_file
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;
&lt;p&gt;The script keeps an associative array with &lt;em&gt;indices&lt;/em&gt; equal to the unique lines of the file and &lt;em&gt;values&lt;/em&gt; equal to their occurrences. For each line of the file, if the line occurrences are zero then it increases them by one and &lt;strong&gt;prints the line&lt;/strong&gt;, otherwise it just increases the occurrences &lt;strong&gt;without printing the line&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I was not familiar with &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; and I wanted to understand how is this accomplished with such a short script (&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;ward). I did my research and here is what is going on:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the awk “script” &lt;code class=&quot;highlighter-rouge&quot;&gt;!visited[$0]++&lt;/code&gt; is executed for &lt;strong&gt;each line&lt;/strong&gt; of the input file&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;visited[]&lt;/code&gt; is a variable of type &lt;a href=&quot;http://kirste.userpage.fu-berlin.de/chemnet/use/info/gawk/gawk_12.html&quot;&gt;associative array&lt;/a&gt; (a.k.a. &lt;a href=&quot;https://en.wikipedia.org/wiki/Associative_array&quot;&gt;Map&lt;/a&gt;). We don’t have to initialize it, &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; will do this for us the first time we access it.&lt;/li&gt;
&lt;li&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; variable holds the contents of the line currently being processed&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;visited[$0]&lt;/code&gt; accesses the value stored in the map with key equal to &lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; (the line being processed), a.k.a. the occurrences (which we set below)&lt;/li&gt;
&lt;li&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; negates the occurrences value:
&lt;/li&gt;
&lt;li&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt; operation increases the variable’s value (&lt;code class=&quot;highlighter-rouge&quot;&gt;visited[$0]&lt;/code&gt;) by one.
&lt;ul&gt;&lt;li&gt;If the value is empty, &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; converts it to &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; (number) automatically and then it gets increased.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; the operation is executed after we access the variable’s value.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Summing up, the whole expression evaluates to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;true&lt;/strong&gt; if the occurrences are zero/empty string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;false&lt;/strong&gt; if the occurrences are greater than zero&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;&lt;/strong&gt; statements consist of a &lt;a href=&quot;http://kirste.userpage.fu-berlin.de/chemnet/use/info/gawk/gawk_9.html&quot;&gt;&lt;strong&gt;pattern-expression&lt;/strong&gt; and an &lt;strong&gt;associated action&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;language-awk highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;If the pattern succeeds then the associated action is being executed&lt;/strong&gt;. If we don’t provide an action, &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; by default &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt;s the input.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;An omitted action is equivalent to &lt;code class=&quot;highlighter-rouge&quot;&gt;{ print $0 }&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Our script consists of one &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; statement with an expression, omitting the action. So this:&lt;/p&gt;
&lt;div class=&quot;language-awk highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deduplicated_file&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;div class=&quot;language-awk highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deduplicated_file&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For every line of the file, if the expression succeeds the line is printed to the output. Otherwise, the action is not executed, nothing is printed.&lt;/p&gt;
&lt;h2 id=&quot;why-not-use-the-uniq-command&quot;&gt;Why not use the &lt;code class=&quot;highlighter-rouge&quot;&gt;uniq&lt;/code&gt; command?&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;uniq&lt;/code&gt; commands removes only the &lt;strong&gt;adjacent duplicate lines&lt;/strong&gt;. Demonstration:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;test.txt
A
A
A
B
B
B
A
A
C
C
C
B
B
A
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;uniq &amp;lt; test.txt
A
B
A
C
B
A
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;other-approaches&quot;&gt;Other approaches&lt;/h2&gt;
&lt;h3&gt;Using the &lt;code&gt;sort&lt;/code&gt; command&lt;/h3&gt;
&lt;p&gt;We can also use the following &lt;a href=&quot;http://man7.org/linux/man-pages/man1/sort.1.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt;&lt;/a&gt; command to remove the duplicate lines but &lt;strong&gt;the line order is not preserved&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;sort &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; your_file &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; sorted_deduplicated_file
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Using &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;cut&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The previous approach would produce a de-duplicated file whose lines would be sorted based on the contents. &lt;a href=&quot;https://stackoverflow.com/a/20639730/2292448&quot;&gt;Piping a bunch of commands&lt;/a&gt; we can overcome this issue:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; your_file | sort &lt;span class=&quot;nt&quot;&gt;-uk2&lt;/span&gt; | sort &lt;span class=&quot;nt&quot;&gt;-nk1&lt;/span&gt; | cut &lt;span class=&quot;nt&quot;&gt;-f2-&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&quot;how-it-works-1&quot;&gt;How it works&lt;/h4&gt;
&lt;p&gt;Suppose we have the following file:&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;abc
ghi
abc
def
xyz
def
ghi
klm
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat -n test.txt&lt;/code&gt;&lt;/strong&gt; prepends the order number in each line.&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;1      abc
2       ghi
3       abc
4       def
5       xyz
6       def
7       ghi
8       klm
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sort -uk2&lt;/code&gt;&lt;/strong&gt; sorts the lines based on the second column (&lt;code class=&quot;highlighter-rouge&quot;&gt;k2&lt;/code&gt; option) and keeps only the first occurrence of the lines with the same second column value (&lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt; option)&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;1      abc
4       def
2       ghi
8       klm
5       xyz
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sort -nk1&lt;/code&gt;&lt;/strong&gt; sorts the lines based on their first column (&lt;code class=&quot;highlighter-rouge&quot;&gt;k1&lt;/code&gt; option) treating the column as a number (&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; option)&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;1      abc
2       ghi
4       def
5       xyz
8       klm
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Finally, &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cut -f2-&lt;/code&gt;&lt;/strong&gt; prints each line starting from the second column until its end (&lt;code class=&quot;highlighter-rouge&quot;&gt;-f2-&lt;/code&gt; option: &lt;em&gt;note the &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; suffix which instructs to include the rest of the line&lt;/em&gt;)&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;abc
ghi
def
xyz
klm
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;That’s all. Cat photo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://iridakos.com/assets/images/posts/remove-duplicates/duplicate-cat.jpg&quot; alt=&quot;duplicate cat&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;alert alert-light&quot; readability=&quot;8.55&quot;&gt;
&lt;p&gt;Comments and feedback&lt;/p&gt;
For feedback, comments, typos etc. please use this &lt;a class=&quot;alert-link&quot; href=&quot;https://github.com/iridakos/iridakos-posts/issues/3&quot;&gt;issue&lt;/a&gt;.
&lt;hr/&gt;&lt;strong&gt;Thanks for visiting!&lt;/strong&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 29 May 2019 06:37:02 +0000</pubDate>
<dc:creator>laz_arus</dc:creator>
<og:title>How to remove duplicate lines from files keeping the original order</og:title>
<og:description>How to remove duplicate lines of a file in Linux without sorting or changing their order (awk one-liner explained).</og:description>
<og:url>https://iridakos.com/how-to/2019/05/16/remove-duplicate-lines-preserving-order-linux.html</og:url>
<og:image>https://iridakos.com/assets/images/posts/remove-duplicates/post.png</og:image>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://iridakos.com/how-to/2019/05/16/remove-duplicate-lines-preserving-order-linux.html</dc:identifier>
</item>
<item>
<title>Wireguard-docs: Setup, usage, configuration, and a full example</title>
<link>https://github.com/pirate/wireguard-docs</link>
<guid isPermaLink="true" >https://github.com/pirate/wireguard-docs</guid>
<description>&lt;div class=&quot;Box-body&quot;&gt;
&lt;article class=&quot;markdown-body entry-content p-5&quot; itemprop=&quot;text&quot;&gt;&lt;div align=&quot;center&quot;&gt;

&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/53211720ce61375a2a277b6be6074d46d63bbba6/68747470733a2f2f692e696d6775722e636f6d2f786550743371702e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/53211720ce61375a2a277b6be6074d46d63bbba6/68747470733a2f2f692e696d6775722e636f6d2f786550743371702e706e67&quot; data-canonical-src=&quot;https://i.imgur.com/xePt3qp.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;API reference guide for Wireguard including Setup, Configuration, and Usage, with examples.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;All credit goes to the WireGuard project, &lt;a href=&quot;https://www.zx2c4.com/&quot; rel=&quot;nofollow&quot;&gt;zx2c4&lt;/a&gt;, &lt;a href=&quot;https://www.edgesecurity.com/&quot; rel=&quot;nofollow&quot;&gt;Edge Security&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/WireGuard/WireGuard/graphs/contributors&quot;&gt;open source contributors&lt;/a&gt; for the original software,&lt;br/&gt;this is my solo unofficial attempt at providing more comprehensive documentation, API references, and examples.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Source for these docs, example code, and issue tracker: &lt;a href=&quot;https://github.com/pirate/wireguard-docs&quot;&gt;https://github.com/pirate/wireguard-docs&lt;/a&gt;     Nicer HTML page version: &lt;a href=&quot;https://docs.sweeting.me/s/wireguard&quot; rel=&quot;nofollow&quot;&gt;https://docs.sweeting.me/s/wireguard&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;&lt;a href=&quot;https://www.wireguard.com/&quot; rel=&quot;nofollow&quot;&gt;WireGuard&lt;/a&gt; is a BETA/WIP open-source VPN solution written in C by &lt;a href=&quot;https://www.jasondonenfeld.com&quot; rel=&quot;nofollow&quot;&gt;Jason Donenfeld&lt;/a&gt; and &lt;a href=&quot;https://github.com/WireGuard/WireGuard/graphs/contributors&quot;&gt;others&lt;/a&gt;, aiming to fix many of the problems that have plagued other modern server-to-server VPN offerings like IPSec/IKEv2, OpenVPN, or L2TP. It shares some similarities with other modern VPN offerings like &lt;a href=&quot;https://www.tinc-vpn.org/&quot; rel=&quot;nofollow&quot;&gt;Tinc&lt;/a&gt; and &lt;a href=&quot;https://github.com/meshbird/meshbird&quot;&gt;MeshBird&lt;/a&gt;, namely good cipher suites and minimal config.&lt;/p&gt;
&lt;p&gt;This is my attempt at writing &quot;The Missing Wireguard Documentation&quot; to make up for the somewhat sparse offical docs on an otherwise great piece of software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Official Links&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WireGuard Goals&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;strong, modern security by default&lt;/li&gt;
&lt;li&gt;minimal config and key management&lt;/li&gt;
&lt;li&gt;fast, both low-latency and high-bandwidth&lt;/li&gt;
&lt;li&gt;simple internals and small protocol surface area&lt;/li&gt;
&lt;li&gt;simple CLI and seamless integration with system networking&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/pirate/wireguard-docs&quot;&gt;https://github.com/pirate/wireguard-docs&lt;/a&gt; for example code and documentation source.&lt;/p&gt;

&lt;p&gt;Over the last 8+ years I've tried a wide range of VPN solutions. Somewhat out of necessity, since the city I was living in was behind the Great Wall of China. Everything from old-school PPTP to crazy round-robin GoAgent AppEngine proxy setups were common back in the early 2010's to break through the GFW, these days it's mostly OpenVPN, StealthVPN, IPSec/IKEv2 and others. From the recommendation of a few people in the &lt;a href=&quot;https://recurse.com&quot; rel=&quot;nofollow&quot;&gt;RC&lt;/a&gt; Zulip community, I decided to try WireGuard and was surprised to find it checked almost all the boxes.&lt;/p&gt;
&lt;h2&gt;My Personal Requirements for a VPN Solution&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;minimal config, low config surface area and few exposed tunables&lt;/li&gt;
&lt;li&gt;minimal key management overhead, 1 or 2 preshared keys or certs is ok, but ideally not both&lt;/li&gt;
&lt;li&gt;ability to easily create a LAN like 10.0.0.0/24 between all my servers, every peer can connect to every peer,&lt;/li&gt;
&lt;li&gt;ability to bust through NATs with a signalling server, routing nat-to-nat instead of through a relay (webrtc style)&lt;/li&gt;
&lt;li&gt;fallback to relay server when nat-to-nat busting is unavailable or unreliable&lt;/li&gt;
&lt;li&gt;ability to route to a fixed list of ips/hosts with 1 keypair per host (not needed, but nice to have: ability to route arbitrary local traffic or &lt;em&gt;all&lt;/em&gt; internet traffic to a given host)&lt;/li&gt;
&lt;li&gt;robust automatic reconnects after reboots / network downtime / NAT connection table drops&lt;/li&gt;
&lt;li&gt;fast (lowest possible latency and line-rate bandwidth)&lt;/li&gt;
&lt;li&gt;encrypted, and secure by default (not needed, nice to have: short copy-pastable key pairs)&lt;/li&gt;
&lt;li&gt;ideally support for any type of Level 2 and control traffic, e.g. ARP/DHCP/ICMP (or ideally raw ethernet frames), not just TCP/HTTP&lt;/li&gt;
&lt;li&gt;ability to join the VPN from Ubuntu, FreeBSD, iOS, macOS (Windows/Android not needed but would be nice&lt;/li&gt;
&lt;li&gt;not a requirement, but ideally it would support running in docker with a single container, config file, and preshared key on each server, but with a full network interface exposed to the host system (maybe with tun/tap on the host passing traffic to the container, but ideally just a single container + config file without outside dependencies)&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;List of Possible VPN Solutions&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;PPTP: ancient, inflexible, insecure, doens't solve all the requirements&lt;/li&gt;
&lt;li&gt;L2TP: meh&lt;/li&gt;
&lt;li&gt;SOCKS: proxy tunnel, not a VPN, not great for this use case&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jawj/IKEv2-setup&quot;&gt;IPSec (IKEv2)&lt;/a&gt;/strongSwan: lots of brittle config that's different for each OS, NAT busting setup is very manual and involves updating the central server and starting all the others in the correct order, not great at reconnecting after network downtime, had to be manually restarted often&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tinc-vpn.org/&quot; rel=&quot;nofollow&quot;&gt;TINC&lt;/a&gt;: haven't tried it yet, but it doesn't work on iOS, worst case senario I could live with that if it's the only option&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://openvpn.net/vpn-server-resources/site-to-site-routing-explained-in-detail/&quot; rel=&quot;nofollow&quot;&gt;OpenVPN&lt;/a&gt;: I don't like it from past experience but could be convinced if it's the only option&lt;/li&gt;
&lt;li&gt;StealthVPN: haven't tried it&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/meshbird/meshbird&quot;&gt;MeshBird&lt;/a&gt;: &quot;Cloud native&quot; VPN/networking layer&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/trailofbits/algo&quot;&gt;Algo&lt;/a&gt;: haven't tried it yet, should I?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/StreisandEffect/streisand&quot;&gt;Striesand&lt;/a&gt;: haven't tried it yet, whats the best config to try?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.softether.org/&quot; rel=&quot;nofollow&quot;&gt;SoftEther&lt;/a&gt;: haven't tried it yet, should I?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wireguard.com/&quot; rel=&quot;nofollow&quot;&gt;WireGuard&lt;/a&gt;: the subject of this post&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zerotier.com&quot; rel=&quot;nofollow&quot;&gt;ZeroTier&lt;/a&gt;: haven't tried it yet, sould I?&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;
&lt;hr/&gt;&lt;h2&gt;Glossary&lt;/h2&gt;
&lt;h3&gt;Peer/Node/Device&lt;/h3&gt;
&lt;p&gt;A host that connects to the VPN and has registers a VPN subnet address like 10.0.0.3 for itself. It can also optionally route traffic for more than its own address(es) by specifing subnet ranges in comma-separated CIDR notation.&lt;/p&gt;
&lt;h3&gt;Bounce Server&lt;/h3&gt;
&lt;p&gt;A publicly reachable peer/node that serves as a fallback to relay traffic for other VPN peers behind NATs.&lt;/p&gt;
&lt;h3&gt;Subnet&lt;/h3&gt;
&lt;p&gt;A group of IPs separate from the public internet, e.g. 10.0.0.1-255 or 192.168.1.1/24. Generally behind a NAT provided by a router, e.g. in office internet LAN or a home WiFi network.&lt;/p&gt;
&lt;h3&gt;CIDR Notation&lt;/h3&gt;
&lt;p&gt;A way of defining a subnet and its size with a &quot;mask&quot;, a smaller mask = more address bits usable by the subnet &amp;amp; more IPs in the range. Most common ones:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;10.0.0.1/32 (a single IP address, 10.0.0.1) netmask = 255.255.255.255&lt;/li&gt;
&lt;li&gt;10.0.0.1/24 (255 ips from 10.0.0.1-255) netmask = 255.255.255.0&lt;/li&gt;
&lt;li&gt;10.0.0.1/16 (65,536 ips from 10.0.0.0 - 10.0.255.255) netmask = 255.255.0.0&lt;/li&gt;
&lt;li&gt;10.0.0.1/8 (16,777,216 ips from 10.0.0.0 - 10.255.255.255) netmask = 255.0.0.0&lt;/li&gt;
&lt;li&gt;0.0.0.1/0 (4,294,967,296 ips from 0.0.0.0 - 255.255.255.255) netmask = 0.0.0.0&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&quot; rel=&quot;nofollow&quot;&gt;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;NAT&lt;/h3&gt;
&lt;p&gt;A subnet with private IPs provided by a router standing in front of them doing Network Address Translation, individual nodes are not publicly accessible from the internet, instead the router keeps track of outgoing connections and forwards responses to the correct internal ip (e.g. standard office networks, home wifi networks, free public wifi networks, etc)&lt;/p&gt;
&lt;h3&gt;Public Endpoint&lt;/h3&gt;
&lt;p&gt;The publicly accessible address:port for a node, e.g. &lt;code&gt;123.124.125.126:1234&lt;/code&gt; or &lt;code&gt;some.domain.tld:1234&lt;/code&gt; (must be accessible via the public internet, generally can't be a private ip like &lt;code&gt;10.0.0.1&lt;/code&gt; or &lt;code&gt;192.168.1.1&lt;/code&gt; unless it's directly accessible using that address by other peers on the same subnet).&lt;/p&gt;
&lt;h3&gt;Private key&lt;/h3&gt;
&lt;p&gt;A wireguard private key for a single node, generated with: &lt;code&gt;wg genkey &amp;gt; example.key&lt;/code&gt; (never leaves the node it's generated on)&lt;/p&gt;
&lt;h3&gt;Public key&lt;/h3&gt;
&lt;p&gt;A wireguard public key for a single node, generated with: &lt;code&gt;wg pubkey &amp;lt; example.key &amp;gt; example.key.pub&lt;/code&gt; (shared with other peers)&lt;/p&gt;
&lt;h3&gt;DNS&lt;/h3&gt;
&lt;p&gt;Domain Name Server, used to resolve hostnames to IPs for VPN clients, instead of allowing DNS requests to leak outside the VPN and reveal traffic. Leaks are testable with &lt;a href=&quot;http://dnsleak.com&quot; rel=&quot;nofollow&quot;&gt;http://dnsleak.com&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Example Strings&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;example-vpn.dev&lt;/code&gt;, &lt;code&gt;public-server1&lt;/code&gt;, &lt;code&gt;public-server2&lt;/code&gt;, &lt;code&gt;home-server&lt;/code&gt;, &lt;code&gt;laptop&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;These are demo host and domain names used in the example config. Replace them with your own names when doing your actual setup.&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Usage&lt;/h2&gt;
&lt;h3&gt;Quickstart&lt;/h3&gt;
&lt;p&gt;Overview of the general process:&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;&lt;li&gt;Install &lt;code&gt;apt install wireguard&lt;/code&gt; or &lt;code&gt;pkg/brew install wireguard-tools&lt;/code&gt; on each node&lt;/li&gt;
&lt;li&gt;Generate public and private keys locally on each node &lt;code&gt;wg genkey&lt;/code&gt;+&lt;code&gt;wg pubkey&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;wg0.conf&lt;/code&gt; wireguard config file on the main relay server
&lt;ul&gt;&lt;li&gt;&lt;code&gt;[Interface]&lt;/code&gt; Make sure to specify a CIDR range for the entire VPN subnet when defining the address the server accepts routes for &lt;code&gt;Address = 10.0.0.1/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Peer]&lt;/code&gt; Create a peer section for every client joining the VPN, using their corresponding remote public keys&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Crete a &lt;code&gt;wg0.conf&lt;/code&gt; on each client node
&lt;ul&gt;&lt;li&gt;&lt;code&gt;[Interface]&lt;/code&gt; Make sure to specify only a single IP for client peers that don't relay traffic &lt;code&gt;Address = 10.0.0.3/32&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Peer]&lt;/code&gt; Create a peer section for each public peer not behind a NAT, make sure to specify a CIDR range for the entire VPN subnet when defining the remote peer acting as the bounce server &lt;code&gt;AllowedIPs = 10.0.0.1/24&lt;/code&gt;. Make sure to specify individual IPs for remote peers that don't relay traffic and only act as simple clients &lt;code&gt;AllowedIPs = 10.0.0.3/32&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Start wireguard on the main relay server with &lt;code&gt;wg-quick up /full/path/to/wg0.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start wireguard on all the client peers with &lt;code&gt;wg-quick up /full/path/to/wg0.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Traffic is routed from peer to peer using most optimal route over the WireGuard interface, e.g. &lt;code&gt;ping 10.0.0.3&lt;/code&gt; checks for local direct route first, then checks for route via public internet, then finally tries to route by bouncing through the public relay server.&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Setup&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; install on Ubuntu&lt;/span&gt;
sudo add-apt-repository ppa:wireguard/wireguard
apt install wireguard

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; install on macOS&lt;/span&gt;
brew install wireguard-tools

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; install on FreeBSD&lt;/span&gt;
pkg install wireguard

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; install on iOS/Andoid using Apple App Store/Google Play Store&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; install on other systems using https://www.wireguard.com/install/#installation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;# to enable kernel relaying/forwarding ability on bounce servers
echo &quot;net.ipv4.ip_forward = 1&quot; &amp;gt;&amp;gt; /etc/sysctl.conf
echo &quot;net.ipv4.conf.all.proxy_arp&quot; &amp;gt;&amp;gt; /etc/sysctl.conf
sudo sysctl -p /etc/sysctl.conf

# to add iptables forwarding rules on bounce servers
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i wg0 -o wg0 -m conntrack --ctstate NEW -j ACCEPT
iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o eth0 -j MASQUERADE
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Config Creation&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nano wg0.conf  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; can be placed anywhere, must be referred to using absolute path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Key Generation&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; generate private key&lt;/span&gt;
wg genkey &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; example.key

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; generate public key&lt;/span&gt;
wg pubkey &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; example.key &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; example.key.pub
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Start / Stop&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
wg-quick up /full/path/to/wg0.conf
wg-quick down /full/path/to/wg0.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; start/stop VPN network interface&lt;/span&gt;
ip link &lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; wg0 up
ip link &lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; wg0 down

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; register/unregister VPN network interface&lt;/span&gt;
ip link add dev wg0 &lt;span class=&quot;pl-c1&quot;&gt;type&lt;/span&gt; wireguard
ip link delete dev wg0

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; register/unregister local VPN address&lt;/span&gt;
ip address add dev wg0 10.0.0.3/32
ip address delete dev wg0 10.0.0.3/32

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; register/unregister VPN route&lt;/span&gt;
ip route add 10.0.0.3/32 dev wg0
ip route delete 10.0.0.3/32 dev wg0
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Inspect&lt;/h3&gt;
&lt;h4&gt;Interfaces&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show system LAN and WAN network interfaces&lt;/span&gt;
ifconfig
ip address show

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show system VPN network interfaces&lt;/span&gt;
ifconfig wg0
ip link show wg0

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show wireguard VPN interfaces&lt;/span&gt;
wg show all
wg show wg0
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Addresses&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show public ip address&lt;/span&gt;
ifconfig eth0
ip address show eth0
dig -4 +short myip.opendns.com @resolver1.opendns.com

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show VPN ip address&lt;/span&gt;
ip address show wg0
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Routes&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show wireguard routing table and peer connections&lt;/span&gt;
wg show
wg show wg0 allowed-ips

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show system routing table&lt;/span&gt;
ip route show table main
ip route show table &lt;span class=&quot;pl-k&quot;&gt;local&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; show system route to specific address&lt;/span&gt;
ip route get 10.0.0.3
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;h4&gt;Ping Speed&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check that main relay server is accesible directly via public internet&lt;/span&gt;
ping public-server1.example-vpn.dev

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check that the main relay server is available via VPN&lt;/span&gt;
ping 10.0.0.1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check that public peers are available via VPN&lt;/span&gt;
ping 10.0.0.2

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check that remote NAT-ed peers are available via VPN&lt;/span&gt;
ping 10.0.0.3

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check that NAT-ed peers in your local lan are available via VPN&lt;/span&gt;
ping 10.0.0.4
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Bandwidth&lt;/h4&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check bandwidth over public internet to relay server&lt;/span&gt;
iperf -s &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on public relay server&lt;/span&gt;
iperf -c public-server1.example-vpn.dev &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on local client&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check bandwidth over VPN to relay server&lt;/span&gt;
iperf -s &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on public relay server&lt;/span&gt;
iperf -c 10.0.0.1 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on local client&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check bandwidth over VPN to remote public peer&lt;/span&gt;
iperf -s &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on remote public peer&lt;/span&gt;
iperf -c 10.0.0.2 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on local client&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check bandwidth over VPN to remote NAT-ed peer&lt;/span&gt;
iperf -s &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on remote NAT-ed peer&lt;/span&gt;
iperf -c 10.0.0.3 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on local client&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; check bandwidth over VPN to local NAT-ed peer (on same LAN)&lt;/span&gt;
iperf -s &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on local NAT-ed peer&lt;/span&gt;
iperf -c 10.0.0.4 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; on local client&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;DNS&lt;/h4&gt;
&lt;p&gt;Check for DNS leaks using &lt;a href=&quot;http://dnsleak.com&quot; rel=&quot;nofollow&quot;&gt;http://dnsleak.com&lt;/a&gt;, or by checking the resolver on a lookup:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dig example.com A
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h2&gt;Config Reference&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Jump to definition:&lt;/strong&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#Interface&quot;&gt;&lt;code&gt;[Inteface]&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#-Name&quot;&gt;&lt;code&gt;# Name = node1.example.tld&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#Address&quot;&gt;&lt;code&gt;Address = 10.0.0.3/32&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#ListenPort&quot;&gt;&lt;code&gt;ListenPort = 51820&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#PrivateKey&quot;&gt;&lt;code&gt;PrivateKey = localPrivateKeyAbcAbcAbc=&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#DNS&quot;&gt;&lt;code&gt;DNS = 1.1.1.1,8.8.8.8&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#Peer-&quot;&gt;&lt;code&gt;[Peer]&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#-Name1&quot;&gt;&lt;code&gt;# Name = node2-node.example.tld&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#AllowedIPs&quot;&gt;&lt;code&gt;AllowedIPs = 10.0.0.1/24&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#ListenPort&quot;&gt;&lt;code&gt;Endpoint = node1.example.tld:51820&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#PublicKey&quot;&gt;&lt;code&gt;PublicKey = remotePublicKeyAbcAbcAbc=&lt;/code&gt;&lt;/a&gt; ¶ &lt;a href=&quot;https://github.com/pirate/wireguard-docs#PersistentKeepalive&quot;&gt;&lt;code&gt;PersistentKeepalive = 25&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[Interface]&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Defines the VPN settings for the local node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Node is a client that only routes traffic for itself and only exposes one IP&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = phone.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.5/32
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for phone.example-vpn.dev&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;Node is a public bounce server that can relay traffic to other peers and exposes route for entire VPN subnet&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;code&gt;# Name&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is just a standard comment in INI syntax used to help keep track of which config section belongs to which node, it's completely ignored by WireGuard and has no effect on VPN behavior.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;Address&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Defines what address range the local node should route traffic for. Depending on whether the node is a simple client joining the VPN subnet, or a bounce server that's relaying traffic between multiple clients, this can be set to a single IP of the node itself (specificed with CIDR notation), e.g. 10.0.0.3/32), or a range of IPv4/IPv6 subnets that the node can route traffic for.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Node is a client that only routes traffic for itself&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;Address = 10.0.0.3/32&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Node is a public bounce server that can relay traffic to other peers&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When the node is acting as the public bounce server, it should set this to be the entire subnet that it can route traffic, not just a single IP for itself.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Address = 10.0.0.1/24&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can also specify multiple subnets or IPv6 subnets like so:&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;Address = 10.0.0.1/24,fd42:42:42::1/64&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;ListenPort&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;When the node is acting as a public bounce server, it should hardcode a port to listen for incoming VPN connections from the public internet. Clients not acting as relays should not set this value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using default WireGuard port &lt;code&gt;ListenPort = 51820&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Using custom WireGuard port &lt;code&gt;ListenPort = 7000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;&lt;code&gt;PrivateKey&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is the private key for the local node, never shared with other servers. All nodes must have a private key set, regardless of whether they are public bounce servers relaying traffic, or simple clients joining the VPN.&lt;/p&gt;
&lt;p&gt;This key can be generated with &lt;code&gt;wg genkey &amp;gt; example.key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PrivateKey = somePrivateKeyAbcdAbcdAbcdAbcd=&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The DNS server(s) to announce to VPN clients via DHCP, most clients will use this server for DNS requests over the VPN, but clients can also override this value locally on their nodes&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The value can be left unconfigured to use system default DNS servers&lt;/li&gt;
&lt;li&gt;A single DNS server can be provided &lt;code&gt;DNS = 1.1.1.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;or multiple DNS servers can be provided &lt;code&gt;DNS = 1.1.1.1,8.8.8.8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;code&gt;[Peer]&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Defines the VPN settings for a remote peer capable of routing traffic for one or more addresses (itself and/or other peers). Peers can be either a public bounce server that relays traffic to other peers, a directly accessible client via lan/internet that is not behind a NAT and only routes traffic for itself.&lt;/p&gt;
&lt;p&gt;All clients must be defined as peers on the public bounce server, however on the simple clients that only route traffic for themselves, only the public relay and other directly accessible nodes need to be defined as peeers. Nodes that are behind separate NATs should not be defined as peers outside of the public server config, as no specific direct route is available between separate NATs. Instead, nodes behind NATs should only define the public relay servers and other public clients as their peers, and should specify &lt;code&gt;AllowedIPs = 10.0.0.1/24&lt;/code&gt; on the public server that accept routes and bounce traffic to the remote NAT-ed peers.&lt;/p&gt;
&lt;p&gt;In summary, all nodes must be defined on the main bounce server. On client servers, only peers that are directly accessible from a node should be defined as peers of that node, any peers that must be relayed by a bounce sherver should be left out and will be handled by the relay server's catchall route.&lt;/p&gt;
&lt;p&gt;In the configuration outlined in the docs below, a single server &lt;code&gt;public-server1&lt;/code&gt; acts as the relay bounce server for a mix of publicly accessible and NAT-ed clients, and peers are configured on each node accordingly:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;in &lt;code&gt;public-server1&lt;/code&gt; &lt;code&gt;wg0.conf&lt;/code&gt; (bounce server)&lt;/strong&gt; &lt;code&gt;[peer]&lt;/code&gt; list: &lt;code&gt;public-server2&lt;/code&gt;, &lt;code&gt;home-server&lt;/code&gt;, &lt;code&gt;laptop&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;in &lt;code&gt;public-server2&lt;/code&gt; &lt;code&gt;wg0.conf&lt;/code&gt; (simple public client)&lt;/strong&gt; &lt;code&gt;[peer]&lt;/code&gt; list: &lt;code&gt;public-server1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;in &lt;code&gt;home-server&lt;/code&gt; &lt;code&gt;wg0.conf&lt;/code&gt; (simple client behind nat)&lt;/strong&gt; &lt;code&gt;[peer]&lt;/code&gt; list: &lt;code&gt;public-server1&lt;/code&gt;, &lt;code&gt;public-server2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;in &lt;code&gt;laptop&lt;/code&gt; &lt;code&gt;wg0.conf&lt;/code&gt; (simple client behind nat)&lt;/strong&gt; &lt;code&gt;[peer]&lt;/code&gt; list: &lt;code&gt;public-server1&lt;/code&gt;, &lt;code&gt;public-server2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;in &lt;code&gt;phone&lt;/code&gt; &lt;code&gt;wg0.conf&lt;/code&gt; (simple client behind nat)&lt;/strong&gt; &lt;code&gt;[peer]&lt;/code&gt; list: &lt;code&gt;public-server1&lt;/code&gt;, &lt;code&gt;public-server2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Peer is a simple public client that only routes traffic for itself&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server2.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server2.example-vpn.dev:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server2.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.2/32
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Peer is a simple client behind a NAT that only routes traffic for itself&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = home-server.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = home-server.example-vpn.dev:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for home-server.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.3/32
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Peer is a public bounce server that can relay traffic to other peers&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server1.example-vpn.tld:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; routes traffic to itself and entire subnet of peers as bounce server&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;PersistentKeepalive&lt;/span&gt; = 25
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;code&gt;# Name&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is just a standard comment in INI syntax used to help keep track of which config section belongs to which node, it's completely ignored by WireGuard and has no effect on VPN behavior.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;Endpoint&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Defines the publicly accessible address for a remote peer. This should be left out for peers behind a NAT or peers that don't have a stable publicly accessible IP:PORT pair. Typically, this only needs to be defined on the main bounce server, but it can also be defined on other public nodes with stable IPs like &lt;code&gt;public-server2&lt;/code&gt; in the example config below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Endpoint is an IP address &lt;code&gt;Endpoint = 123.124.125.126:51820&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Endpoint is a hostname/FQDN &lt;code&gt;Endpoint = public-server1.example-vpn.tld:51820&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;&lt;code&gt;AllowedIPs&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This defines the IP ranges that a peer will route traffic for. Usually this is a single address (the VPN address of the peer itself), but for bounce servers this will be a range of the IPs or subnets that the relay server is capable of routing traffic for. Using comma-separated IPv4 or IPv6 CIDR notation, a single address can be defined as routable, or multiple ranges of IPs all the way up to &lt;code&gt;0.0.0.0/0&lt;/code&gt; to route all internet and VPN traffic through that peer.&lt;/p&gt;
&lt;p&gt;When deciding how to route a packet, the system chooses the most specific route first, and falls back to broader routes. So for a packet destined to &lt;code&gt;10.0.0.3&lt;/code&gt;, the system would first look for a peer advertising &lt;code&gt;10.0.0.3/32&lt;/code&gt; specifically, and would fall back to a peer advertising &lt;code&gt;10.0.0.1/24&lt;/code&gt; or a larger range like &lt;code&gt;0.0.0.0/0&lt;/code&gt; as a last resort.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;peer is a simple client that only accepts traffic to/from itself &lt;code&gt;AllowedIPs = 10.0.0.3/32&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;peer is a relay server that can bounce VPN traffic to all other peers &lt;code&gt;AllowedIPs = 10.0.0.1/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;peer is a relay server that bounces all internet &amp;amp; VPN traffic (like a proxy) &lt;code&gt;AllowedIPs = 0.0.0.0/0,::/0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;peer is a relay server that routes to itself and only one other peer &lt;code&gt;AllowedIPs = 10.0.0.3/32,10.0.0.4/32&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;peer is a relay server that routes to itself and all nodes on its local LAN &lt;code&gt;AllowedIPs = 10.0.0.3/32,192.168.1.1/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;&lt;code&gt;PublicKey&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is the public key for the remote node, sharable with all peers. All nodes must have a public key set, regardless of whether they are public bounce servers relaying traffic, or simple clients joining the VPN.&lt;/p&gt;
&lt;p&gt;This key can be generated with &lt;code&gt;wg pubkey &amp;lt; example.key &amp;gt; example.key.pub&lt;/code&gt;. (see above for how to generate the private key &lt;code&gt;example.key&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PublicKey = somePrivateKeyAbcdAbcdAbcdAbcd=&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;PersistentKeepalive&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;If the connection is going from a NAT-ed peer to a public peer, the node behind the NAT must regularly send an outgoing ping in order to keep the bidirectional connection alive in the NAT router's connection table.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;local public node to remote public node This value should be left undefined as persistent pings are not needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;local public node to remote NAT-ed node This value should be left undefined as it's the client's responsibility to keep the connection alive because the server cannot reopen a dead connection to the client if it times out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;local NAT-ed node to remote public node &lt;code&gt;PersistentKeepalive = 25&lt;/code&gt; this will send a ping to every 25 seconds keeping the connection open in the local NAT router's connection table.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;
&lt;p&gt;The complete example config for the setup below can be found here: &lt;a href=&quot;https://github.com/pirate/wireguard-docs/tree/master/full-example&quot;&gt;https://github.com/pirate/wireguard-docs/tree/master/full-example&lt;/a&gt; (WARNING: do not use it on your devices without chaning the public/private keys!).&lt;/p&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;h3&gt;Network Topology&lt;/h3&gt;
&lt;p&gt;These 5 devices are used in our example setup to explain how WireGuard supports bridging across a variety of network conditions, they're all under an example domain &lt;code&gt;example-vpn.dev&lt;/code&gt;, with the following short hostnames:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;public-server1&lt;/code&gt; (not behind a NAT, acts as the main VPN bounce server)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public-server2&lt;/code&gt; (not behind a NAT, joins as a peer without bouncing traffic)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home-server&lt;/code&gt; (behind a NAT, joins as a peer without bouncing traffic)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;laptop&lt;/code&gt; (behind NAT, sometimes shared w/ home-server/phone, sometimes roaming)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;phone&lt;/code&gt; (behind NAT, sometimes shared w/ home-server/laptop, sometimes roaming)&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Explanation&lt;/h3&gt;
&lt;p&gt;This VPN config simulates setting up a small VPN subnet 10.0.0.1/24 shared by 5 nodes. Two of the nodes (public-server1 and public-server2) are VPS instances living in a cloud somewhere, with public IPs accessible to the internet. home-server is a stationary node that lives behind a NAT with a dynamic IP, but it doesn't change frequently. Phone and laptop are both roaming nodes, that can either be at home in the same LAN as home-server, or out-and-about using public wifi or cell service to connect to the VPN.&lt;/p&gt;
&lt;p&gt;Whenever possible, nodes should connect directly to eachother, depending on whether nodes are directly accessible or NATs are between them, traffic will route accordinly:&lt;/p&gt;
&lt;h3&gt;How Public Relays Work&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;public-server1&lt;/code&gt; acts as an intermediate relay server between any VPN clients behind NATs, it will forward any 10.0.0.1/24 traffic it receives to the correct peer at the system level (WireGuard doesn't care how this happens, it's handled by the kernel &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; and the iptables routing rules).&lt;/p&gt;
&lt;p&gt;Each client only needs to define the publicly accessible servers/peers in it's config, any traffic bound to other peers behind NATs will go to the catchall 10.0.0.1/24 for the server and will be forwarded accordingly once it hits the main server.&lt;/p&gt;
&lt;p&gt;In summary: only direct connections between clients should be configured, any connections that need to be bounced should not be defined as peers, as they should head to the bounce server first and be routed from there back down the vpn to the correct client.&lt;/p&gt;
&lt;h3&gt;How WireGuard Routes Packets&lt;/h3&gt;
&lt;p&gt;More complex topologies are definitely achievable, but these are the basic routing methods:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Direct node-to-node&lt;/strong&gt; In the best case, the nodes are on the same LAN or are both publicly accessible, and traffic will route over encrypted UDP packets sent directly between the nodes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node behind local NAT to public node&lt;/strong&gt; When 1 of the 2 parties is behind a remote NAT (e.g. when laptop behind a NAT connects to &lt;code&gt;public-server2&lt;/code&gt;), the connection will be opened from NAT -&amp;gt; public client, then traffic will route directly between them in both directions as long as the connection is kept alive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node behind local NAT to node behind remote NAT (via relay)&lt;/strong&gt; In the worst case when both parties are behind remote NATs, both will open a connection to &lt;code&gt;public-server1&lt;/code&gt;, and traffic will forward through the intermediary bounce server as long as the connections are kept alive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node behind local NAT to node behind remote NAT (via NAT-busting)&lt;/strong&gt; I'm not sure if Wireguard supports this method yet, but it's definitely possible in theory, see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API&quot; rel=&quot;nofollow&quot;&gt;WebRTC&lt;/a&gt;, &lt;a href=&quot;https://www.ntop.org/products/n2n/&quot; rel=&quot;nofollow&quot;&gt;N2N&lt;/a&gt;, &lt;a href=&quot;https://samy.pl/pwnat/&quot; rel=&quot;nofollow&quot;&gt;Pwnat&lt;/a&gt;. A readily available signaling server like&lt;code&gt;public-server1&lt;/code&gt; should make connection establishment and handoff relatively easy, but ICMP packet trickery can also be used. Please let me know if WireGuard does this via &lt;a href=&quot;https://github.com/pirate/wireguard-docs/issues&quot;&gt;Github Issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Chosing the proper routing method is handled automatically by WireGuard as long as at least one server is acting as a public relay with &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; enabled, and clients have &lt;code&gt;AllowIPs = 10.0.0.1/24&lt;/code&gt; set in the relay server &lt;code&gt;[peer]&lt;/code&gt; (to take traffic for the whole subnet).&lt;/p&gt;
&lt;p&gt;More specific (also usually more direct) routes provided by other peers will take precedence when available, otherwise traffic will fall back to the least specific route and use the &lt;code&gt;10.0.0.1/24&lt;/code&gt; catchall to forward traffic to the bounce server, where it will in turn be routed by the relay server's system routing table back down the VPN to the specific peer thats accepting routes for that traffic.&lt;/p&gt;
&lt;p&gt;You can figure out which routing method WireGuard is using for a given address by measuring the ping times to figure out the unique length of each hop, and by inspecting the output of:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
wg show wg0
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Full Example Code&lt;/h2&gt;
&lt;p&gt;To run this full example, simply copy the &lt;code&gt;full wg0.conf config file for node&lt;/code&gt; section from each node onto each server, enable IP forwarding on the public relay, and then start WireGuard on all the machines.&lt;/p&gt;
&lt;p&gt;For more detailed instructions, see the &lt;a href=&quot;https://github.com/pirate/wireguard-docs#Quickstart&quot;&gt;Quickstart&lt;/a&gt; guide and API reference above. You can also download the complete example setup here: &lt;a href=&quot;https://github.com/pirate/wireguard-docs/tree/master/full-example&quot;&gt;https://github.com/pirate/wireguard-docs/tree/master/full-example&lt;/a&gt; (WARNING: do not use it on your devices without chaning the public/private keys!).&lt;/p&gt;
&lt;h2&gt;Node Config&lt;/h2&gt;
&lt;h3&gt;public-server1.example-vpn.tld&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;public endpoint: &lt;code&gt;public-server1.example-vpn.tld:51820&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;own vpn ip address: &lt;code&gt;10.0.0.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can accept traffic for ips: &lt;code&gt;10.0.0.1/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;priv key: &lt;code&gt;&amp;lt;private key for public-server1.example-vpn.tld&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pub key: &lt;code&gt;&amp;lt;public key for public-server1.example-vpn.tld&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup required:
&lt;ol&gt;&lt;li&gt;install wireguard&lt;/li&gt;
&lt;li&gt;generate public/private keypair&lt;/li&gt;
&lt;li&gt;create wg0.conf (see below)&lt;/li&gt;
&lt;li&gt;enable kernel ip &amp;amp; arp forwarding, add iptables forwarding rules&lt;/li&gt;
&lt;li&gt;start wireguard&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;config as remote peer:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server1.example-vpn.tld:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; routes traffic to itself and entire subnet of peers as bounce server&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;PersistentKeepalive&lt;/span&gt; = 25
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;config as local interface:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;peers: public-server2, home-server, laptop, phone&lt;/li&gt;
&lt;li&gt;full &lt;code&gt;wg0.conf&lt;/code&gt; config file for node:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server2.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server2.example-vpn.dev:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server2.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.2/32

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = home-server.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = home-server.example-vpn.dev:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for home-server.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.3/32

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = laptop.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for laptop.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.4/32

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; phone.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for phone.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.5/32
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;public-server2.example-vpn.dev&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;public endpoint: &lt;code&gt;public-server2.example-vpn.dev:51820&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;own vpn ip address: &lt;code&gt;10.0.0.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can accept traffic for ips: &lt;code&gt;10.0.0.2/32&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;priv key: &lt;code&gt;&amp;lt;private key for public-server2.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pub key: &lt;code&gt;&amp;lt;public key for public-server2.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup required:
&lt;ol&gt;&lt;li&gt;install wireguard&lt;/li&gt;
&lt;li&gt;generate public/private keypair&lt;/li&gt;
&lt;li&gt;create wg0.conf (see below)&lt;/li&gt;
&lt;li&gt;confirm main public relay server is directly accessible&lt;/li&gt;
&lt;li&gt;start wireguard&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;config as local interface:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server2.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.2/32
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for public-server2.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;config as peer:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server2.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server2.example-vpn.dev:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server2.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.2/32
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;peers: public-server1&lt;/li&gt;
&lt;li&gt;full &lt;code&gt;wg0.conf&lt;/code&gt; config file for node:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server2.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.2/32
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for public-server2.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server1.example-vpn.tld:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; routes traffic to itself and entire subnet of peers as bounce server&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;PersistentKeepalive&lt;/span&gt; = 25
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;home-server.example-vpn.dev&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;public endpoint: (none, behind NAT)&lt;/li&gt;
&lt;li&gt;own vpn ip address: &lt;code&gt;10.0.0.3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can accept traffic for ips: &lt;code&gt;10.0.0.3/32&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;priv key: &lt;code&gt;&amp;lt;private key for home-server.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pub key: &lt;code&gt;&amp;lt;public key for home-server.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup required:
&lt;ol&gt;&lt;li&gt;install wireguard&lt;/li&gt;
&lt;li&gt;generate public/private keypair&lt;/li&gt;
&lt;li&gt;create wg0.conf (see below)&lt;/li&gt;
&lt;li&gt;confirm main public relay server is directly accessible&lt;/li&gt;
&lt;li&gt;start wireguard&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;config as local interface:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = home-server.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.3/32
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for home-server.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;config as peer:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = home-server.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = home-server.example-vpn.dev:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for home-server.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.3/32
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;peers: public-server1&lt;/li&gt;
&lt;li&gt;full &lt;code&gt;wg0.conf&lt;/code&gt; config file for node:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = home-server.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.3/32
&lt;span class=&quot;pl-k&quot;&gt;ListenPort&lt;/span&gt; = 51820
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for home-server.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server1.example-vpn.tld:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; routes traffic to itself and entire subnet of peers as bounce server&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;PersistentKeepalive&lt;/span&gt; = 25
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;laptop.example-vpn.dev&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;public endpoint: (none, behind NAT)&lt;/li&gt;
&lt;li&gt;own vpn ip address: &lt;code&gt;10.0.0.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can accept traffic for ips: &lt;code&gt;10.0.0.4/32&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;priv key: &lt;code&gt;&amp;lt;private key for laptop.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pub key: &lt;code&gt;&amp;lt;public key for laptop.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup required:
&lt;ol&gt;&lt;li&gt;install wireguard&lt;/li&gt;
&lt;li&gt;generate public/private keypair&lt;/li&gt;
&lt;li&gt;create wg0.conf (see below)&lt;/li&gt;
&lt;li&gt;confirm main public relay server is directly accessible&lt;/li&gt;
&lt;li&gt;start wireguard&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;config as local interface:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = laptop.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.4/32
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for laptop.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;config as peer:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = laptop.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for laptop.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.4/32
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;peers: public-server1&lt;/li&gt;
&lt;li&gt;full &lt;code&gt;wg0.conf&lt;/code&gt; config file for node:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = laptop.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.4/32
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for laptop.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server1.example-vpn.tld:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; routes traffic to itself and entire subnet of peers as bounce server&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;PersistentKeepalive&lt;/span&gt; = 25
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;phone.example-vpn.dev&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;public endpoint: (none, behind NAT)&lt;/li&gt;
&lt;li&gt;own vpn ip address: &lt;code&gt;10.0.0.5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;can accept traffic for ips: &lt;code&gt;10.0.0.5/32&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;priv key: &lt;code&gt;&amp;lt;private key for phone.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pub key: &lt;code&gt;&amp;lt;public key for phone.example-vpn.dev&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup required:
&lt;ol&gt;&lt;li&gt;install wireguard&lt;/li&gt;
&lt;li&gt;generate public/private keypair&lt;/li&gt;
&lt;li&gt;create wg0.conf (see below)&lt;/li&gt;
&lt;li&gt;confirm main public relay server is directly accessible&lt;/li&gt;
&lt;li&gt;start wireguard&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;config as local interface:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = phone.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.5/32
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for phone.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;config as peer:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; phone.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for phone.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.5/32
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;peers: public-server1&lt;/li&gt;
&lt;li&gt;full &lt;code&gt;wg0.conf&lt;/code&gt; config file for node:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-ini&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;[Interface]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = phone.example-vpn.dev&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Address&lt;/span&gt; = 10.0.0.5/32
&lt;span class=&quot;pl-k&quot;&gt;PrivateKey&lt;/span&gt; = &amp;lt;private key for phone.example-vpn.dev&amp;gt;
&lt;span class=&quot;pl-k&quot;&gt;DNS&lt;/span&gt; = 1.1.1.1

&lt;span class=&quot;pl-en&quot;&gt;[Peer]&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Name = public-server1.example-vpn.tld&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;Endpoint&lt;/span&gt; = public-server1.example-vpn.tld:51820
&lt;span class=&quot;pl-k&quot;&gt;PublicKey&lt;/span&gt; = &amp;lt;public key for public-server1.example-vpn.tld&amp;gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; routes traffic to itself and entire subnet of peers as bounce server&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;AllowedIPs&lt;/span&gt; = 10.0.0.1/24
&lt;span class=&quot;pl-k&quot;&gt;PersistentKeepalive&lt;/span&gt; = 25
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;hr/&gt;&lt;p&gt;Suggest changes: &lt;a href=&quot;https://github.com/pirate/wireguard-docs/issues&quot;&gt;https://github.com/pirate/wireguard-docs/issues&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 29 May 2019 01:51:40 +0000</pubDate>
<dc:creator>axiomdata316</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/511499?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>pirate/wireguard-docs</og:title>
<og:url>https://github.com/pirate/wireguard-docs</og:url>
<og:description>The Missing WireGuard Documentation: Setup, Usage, Configuration, and a full example for server-to-server VPN with roaming clients &amp; public peers. - pirate/wireguard-docs</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/pirate/wireguard-docs</dc:identifier>
</item>
<item>
<title>Zdog – Pseudo-3D JavaScript engine for Canvas and SVG</title>
<link>https://zzz.dog/</link>
<guid isPermaLink="true" >https://zzz.dog/</guid>
<description>&lt;p&gt;Zdog is a 3D JavaScript engine for &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; and SVG. With Zdog, you can design and render simple 3D models on the Web. Zdog is a &lt;em&gt;pseudo&lt;/em&gt;-3D engine. Its geometries exist in 3D space, but are rendered as flat shapes. This makes Zdog special.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Zdog is small.&lt;/strong&gt; 2,100 lines of code for the entire library. 28KB un-minified.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zdog is round.&lt;/strong&gt; All circular shapes are rendered as proper circles with rounded edges. No polygonal jaggies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zdog is friendly.&lt;/strong&gt; Modeling is done with a straight-forward declarative API.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Zdog was designed to bring the simplicity of vector illustration into 3D. Drawing circles and squares is easy and fun. Zdog just adds another dimension.&lt;/p&gt;



&lt;p&gt;Link directly to Zdog JS on &lt;a href=&quot;https://unpkg.com/&quot;&gt;unpkg&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://unpkg.com/zdog@1/dist/zdog.dist.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;ul&gt;&lt;li&gt;Install with npm: &lt;code&gt;npm install zdog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install with Bower: &lt;code&gt;bower install zdog --save&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create 3D models with Zdog by adding shapes. See &lt;a href=&quot;https://zzz.dog/getting-started&quot;&gt;Getting started&lt;/a&gt; for a walk-through of this demo.&lt;/p&gt;
&lt;div class=&quot;example&quot; readability=&quot;15.245283018868&quot;&gt;
&lt;div class=&quot;example__code&quot; readability=&quot;25&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; isSpinning = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;

&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;demo_var&quot;&gt;illo&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;zdog_class&quot;&gt;Zdog.Illustration&lt;/span&gt;({
  &lt;span class=&quot;attr&quot;&gt;element&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;'.zdog-canvas'&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;dragRotate&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,
  
  onDragStart: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;() &lt;/span&gt;{
    isSpinning = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;
  },
});


&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;zdog_class&quot;&gt;Zdog.Ellipse&lt;/span&gt;({
  &lt;span class=&quot;attr&quot;&gt;addTo&lt;/span&gt;: &lt;span class=&quot;demo_var&quot;&gt;illo&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;diameter&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;translate&lt;/span&gt;: { &lt;span class=&quot;attr&quot;&gt;z&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt; },
  &lt;span class=&quot;attr&quot;&gt;stroke&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;'#636'&lt;/span&gt;,
});


&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;zdog_class&quot;&gt;Zdog.Rect&lt;/span&gt;({
  &lt;span class=&quot;attr&quot;&gt;addTo&lt;/span&gt;: &lt;span class=&quot;demo_var&quot;&gt;illo&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;translate&lt;/span&gt;: { &lt;span class=&quot;attr&quot;&gt;z&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;-40&lt;/span&gt; },
  &lt;span class=&quot;attr&quot;&gt;stroke&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;'#E62'&lt;/span&gt;,
  &lt;span class=&quot;attr&quot;&gt;fill&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,
});

&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;animate&lt;/span&gt;() &lt;/span&gt;{
  &lt;span class=&quot;demo_var&quot;&gt;illo&lt;/span&gt;.rotate.y += isSpinning ? &lt;span class=&quot;number&quot;&gt;0.03&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;
  &lt;span class=&quot;demo_var&quot;&gt;illo&lt;/span&gt;.updateRenderGraph();
  requestAnimationFrame( animate );
}
animate();&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Hi! &lt;a href=&quot;https://desandro.com&quot;&gt;Dave here&lt;/a&gt;. I wanted to make a video game. I needed a 3D engine, but most engines were too powerful and complex for me. I made Zdog so I could design and display simple 3D models without a lot of overhead.&lt;/p&gt;
&lt;p&gt;Zdog is directly inspired by &lt;a href=&quot;https://en.wikipedia.org/wiki/Petz&quot;&gt;Dogz&lt;/a&gt;, a virtual pet game by P.F. Magic released in 1995. It used flat 2D circle sprites to render the Dogz’ models, but in a 3D scene. &lt;a href=&quot;https://www.youtube.com/watch?v=6lKSn_cHw5k&quot;&gt;See Dogz playthrough video here.&lt;/a&gt; Dogz were fully animated in real time, running, flopping, scratching (on Windows 3.1!). It was remarkable.&lt;/p&gt;
&lt;p&gt;Zdog uses the same principal. It renders all shapes using 2D drawing API in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;. Spheres are actually dots. Toruses are actually circles . Capsules are actually thick lines. It’s a simple, but effective trick. The underlying 3D math comes from &lt;a href=&quot;https://www.khanacademy.org/computing/computer-programming/programming-games-visualizations/programming-3d-shapes/a/rotating-3d-shapes&quot;&gt;Rotating 3D Shapes&lt;/a&gt; by &lt;a href=&quot;https://petercollingridge.appspot.com/3D-tutorial/rotating-objects&quot;&gt;Peter Collingridge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Zdog is pronounced “Zee-dog” in American parlance or “Zed-dog” in British.&lt;/p&gt;

&lt;p&gt;Zdog v1 is a beta-release, of sorts. This is my first time creating a 3D engine, so I probably got some stuff wrong. Expect lots of changes for v2. Provide input and select new features on the &lt;a href=&quot;https://github.com/metafizzy/zdog/issues&quot;&gt;Zdog issue tracker on GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 29 May 2019 01:47:53 +0000</pubDate>
<dc:creator>tomek_zemla</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://zzz.dog/</dc:identifier>
</item>
<item>
<title>Police in Canada Are Tracking People’s ‘Negative’ Behavior in a ‘Risk’ Database</title>
<link>https://www.vice.com/en_us/article/kzdp5v/police-in-canada-are-tracking-peoples-negative-behavior-in-a-risk-database</link>
<guid isPermaLink="true" >https://www.vice.com/en_us/article/kzdp5v/police-in-canada-are-tracking-peoples-negative-behavior-in-a-risk-database</guid>
<description>&lt;p&gt;Police, social services, and health workers in Canada are using shared databases to track the behaviour of vulnerable people—including minors and people experiencing homelessness—with little oversight and often without consent.&lt;/p&gt;
&lt;p&gt;Documents obtained by Motherboard from Ontario’s Ministry of Community Safety and Correctional Services (MCSCS) through an access to information request show that at least two provinces—Ontario and Saskatchewan—maintain a “Risk-driven Tracking Database” that is used to amass highly sensitive information about people’s lives. Information in the database includes whether a person uses drugs, has been the victim of an assault, or lives in a “negative neighborhood.”&lt;/p&gt;

&lt;p&gt;The Risk-driven Tracking Database (RTD) is part of a collaborative approach to policing called &lt;a href=&quot;https://news.vice.com/en_ca/article/7xqmny/heres-who-stands-to-gain-from-a-radical-policing-approach-in-canada&quot; target=&quot;_blank&quot;&gt;the Hub model&lt;/a&gt; that partners cops, school staff, social workers, health care workers, and the provincial government.&lt;/p&gt;
&lt;p&gt;Information about people believed to be “at risk” of becoming criminals or victims of harm is shared between civilian agencies and police and is added to the database when a person is being evaluated for a rapid intervention intended to lower their risk levels. Interventions can range from a door knock and a chat to forced hospitalization or arrest.&lt;/p&gt;
&lt;p&gt;Data from the RTD is analyzed to identify trends—for example, a spike in drug use in a particular area—with the goal of producing planning data to deploy resources effectively, and create “community profiles” that could accelerate interventions under the Hub model, according to &lt;a href=&quot;https://www.publicsafety.gc.ca/cnt/rsrcs/pblctns/2015-plcy-mdps/index-en.aspx&quot; target=&quot;_blank&quot;&gt;a 2015 Public Safety Canada report&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;article__blockquote&quot;&gt;&lt;strong&gt;Read More:&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;https://motherboard.vice.com/en_us/article/kb73an/the-rcmp-surveilled-thousands-of-innocent-canadians-for-a-decade&quot; target=&quot;_blank&quot;&gt;The RCMP Surveilled Thousands of Innocent Canadians for a Decade&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sasbo.com/wp-content/uploads/2014/11/Saskatoon-Hub-1.pdf&quot; target=&quot;_blank&quot;&gt;Saskatchewan&lt;/a&gt; and &lt;a href=&quot;http://lanarkkids.ca/wp-content/uploads/2018/04/LCST-2016-2017-Report-final.pdf&quot; target=&quot;_blank&quot;&gt;Ontario&lt;/a&gt; officials say data in the RTD (sometimes called the “Hub database” in Saskatchewan) is “de-identified” by removing details such as people’s names and birthdates, though experts Motherboard spoke to said that scrubbing data so it may never be used to identify an individual is difficult if not impossible.&lt;/p&gt;
&lt;p&gt;A Motherboard investigation—which involved combing through MCSCS, police, and city documents—found that in 2017, children aged 12 to 17 were the most prevalent age group added to the database in several Ontario regions, and that some interventions were performed without consent. In some cases, children as young as six years old have been subject to intervention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does people’s information get added to the database?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Hub model seeks to connect police with community members in order to evaluate potentially at-risk people for interventions.&lt;/p&gt;
&lt;p&gt;For example, a police officer may be called to respond to someone’s disruptive but non-criminal behaviour time and again. Under the Hub model, the officer can bring the person’s situation to the Hub—which may include staff from child welfare, addictions, or housing assistance agencies—and ask if other agencies can intervene.&lt;/p&gt;
&lt;p&gt;During the ensuing evaluation, information about the person is shared between the participants and &lt;a href=&quot;https://www.usask.ca/cfbsjs/research/pdf/research_reports/MeasuringChange.pdf&quot; target=&quot;_blank&quot;&gt;entered&lt;/a&gt; into the RTD. The person’s identity can be known to local law enforcement, social workers, and health workers, but when their information is added to the RTD, details that might identify the person are not supposed to be included. If agencies collectively decide the person is at an “acutely elevated” level of risk, an intervention is deployed. Interventions can occur without consent if Hub practitioners feel a person is at a high risk of harm.&lt;/p&gt;
&lt;p&gt;More than &lt;a href=&quot;https://www.csc-scc.gc.ca/research/rr-17-02-eng.shtml&quot; target=&quot;_blank&quot;&gt;100 Hubs&lt;/a&gt; are now operating in cities and towns across Canada and the US, with 37 in Ontario (where Hubs are usually called Situation Tables) contributing to the Risk-driven Tracking Database as of April 2018, according to MCSCS documents. In total, 55 are expected to be contributing by the end of this year.&lt;/p&gt;
&lt;p class=&quot;article__pull-quote&quot;&gt;“We can knock on someone’s door and say, ‘We’re so worried about you, can we come in and chat?’”&lt;/p&gt;

&lt;p&gt;At least two provinces, Ontario and Saskatchewan, maintain their own versions of the RTD, but Motherboard was unable to confirm if the database is being used in other provinces.&lt;/p&gt;
&lt;p&gt;Dr. Chad Nilson, an academic researcher with the University of Saskatchewan and the &lt;a href=&quot;https://www.usask.ca/cfbsjs/documents/CollaborateBarrieEvaluationBriefJanuary2017.pdf&quot; target=&quot;_blank&quot;&gt;lead developer&lt;/a&gt; of the RTD, did not respond to questions about the database. His &lt;a href=&quot;https://webcache.googleusercontent.com/search?q=cache:rAxMLzLZU_wJ:https://www.albertacrimeprevention.com/2017-accpa-crime-prevention-conference/+&amp;amp;cd=1&amp;amp;hl=en&amp;amp;ct=clnk&amp;amp;gl=ca&amp;amp;client=firefox-b-d&quot; target=&quot;_blank&quot;&gt;professional bio&lt;/a&gt; says the RTD is in use “across Canada.”&lt;/p&gt;
&lt;p&gt;Lisa Longworth, an Ontario Provincial Police (OPP) program analyst who trains police in the Hub model, told Motherboard that the interventions are a “tool” for police that allows them to take action in situations where they previously would have been powerless to intervene.&lt;/p&gt;
&lt;p&gt;“We can knock on someone’s door and say, ‘We’re so worried about you, can we come in and chat?’” Longworth told Motherboard in a phone call.&lt;/p&gt;
&lt;p&gt;Reviews of Situation Tables in two Ontario cities commissioned by police and community partners show that some interventions have ended in forced hospitalization or arrest. A survey of people’s experiences of Hub intervention in Barrie, for example, found that one intervention ended with the individual &lt;a href=&quot;https://www.usask.ca/cfbsjs/documents/CollaborateBarrieEvaluationBriefJanuary2017.pdf&quot; target=&quot;_blank&quot;&gt;going to jail&lt;/a&gt;. An assessment of the Situation Table in Waterloo noted an instance of a person being subject to &lt;a href=&quot;https://www.usask.ca/cfbsjs/research/pdf/research_reports/ConnectivityWREvaluationReport.pdf#ConnectivityWREvaluationReport&quot; target=&quot;_blank&quot;&gt;involuntary hospitalization&lt;/a&gt; following an intervention.&lt;/p&gt;
&lt;p&gt;According to MCSCS documents, in 2017 more than 300 RTD-related discussions for kids between the ages of 12 and 17 took place, and 30 for kids aged six to 11. Ontario’s annual RTD report for 2017 notes that kids aged 12 to 17 are the “most vulnerable” age group in the database, and the most prevalent in the RTD in several regions.&lt;/p&gt;
&lt;div class=&quot;article__media&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1551288653786-Screen-Shot-2019-02-26-at-113014-AM.png?resize=320:*&quot; alt=&quot;Risk factors in the RTD&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1551288653786-Screen-Shot-2019-02-26-at-113014-AM.png&quot;/&gt;&lt;p&gt;Screengrab: ONTARIO’S RISK-DRIVEN TRACKING DATABASE 2017 ANNUAL REPORT/MCSCS&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“It does happen with children that young,” said Longworth, noting that police have had to come up with ideas for “creative interventions for six-year-old[s].”&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;In response to questions about the high number of minors being evaluated by Situation Table, MCSCS provided a statement by email, saying, “Situation Tables are locally driven and there is no requirement for communities to report to the ministry” about their activities.&lt;/p&gt;

&lt;p&gt;Longworth said that Situation Tables “aren’t formalized” and are “not perfect,” a characterization she says reflects the haphazard way in which the model was rolled out in the province.&lt;/p&gt;
&lt;p&gt;“Situation Tables spread in Ontario really quickly,” said Longworth. “[MCSCS] has been playing catch-up.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What’s in the database?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hub interventions require cops, educators, doctors, and social workers to share extremely sensitive information about vulnerable people—and add it to the provincial database—in a process fraught with potential for privacy violations.&lt;/p&gt;
&lt;p&gt;Data in the RTD may include a person’s age group, sex, location, and more than 100 “risk factors” used to describe individual circumstances. Standardized risk factors allow for national comparisons, according to &lt;a href=&quot;http://www.cskacanada.ca/images/pdf/Final-National-Dialogue-Proceedings-June-2017.pdf&quot; target=&quot;_blank&quot;&gt;provincial authorities&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;According to MCSCS documents, the most common risk factors ascribed to people in the database in 2017 were mental health (including &lt;a href=&quot;http://ingersollnplc.ca/wp-content/uploads/2015/10/Oxford-Situation-Table-6-MONTH-REPORT-3-1.pdf&quot; target=&quot;_blank&quot;&gt;“suspected” mental health issues&lt;/a&gt;), criminal involvement, drug use, and “antisocial/negative behaviour,” defined as “obnoxious [or] disruptive” behaviour.&lt;/p&gt;
&lt;p&gt;Asked about Situation Tables’ use of sometimes-vague risk factors to justify intervention, MCSCS reiterated that individuals deemed to be at high risk of harm exhibit “multiple risk factors” and require a collaborative approach to intervention.&lt;/p&gt;
&lt;p class=&quot;article__pull-quote&quot;&gt;“There are concerns about this kind of surveillance that go beyond privacy, [affecting] people’s basic rights to liberty and security of the person&quot;&lt;/p&gt;

&lt;p&gt;Because some of the information-sharing process before intervention is done verbally, Ontario’s Information and Privacy Commissioner (IPC) developed additional guidelines for Hubs intended to ensure people’s privacy rights are respected—getting individuals’ consent to share information whenever possible, for example, and acting in a way that “more positively than negatively” affects them.&lt;/p&gt;
&lt;p&gt;But in Ontario, police, health care professionals, and social workers participating in the Hub model are under no obligation to follow IPC’s guidelines, though they are still beholden to provincial privacy laws.&lt;/p&gt;
&lt;p&gt;“Communities are not required to apply the best practices included in the [IPC] guidance document,” stated an MCSCS briefing from an internal meeting held in June 2018.&lt;/p&gt;
&lt;p&gt;However, Brian Beamish, Ontario’s IPC commissioner, told Motherboard in an email that “Situation Tables that deviate from the IPC’s guidance risk breaching [individuals’] privacy.”&lt;/p&gt;
&lt;p&gt;When asked about the briefing by Motherboard, MCSCS did not comment, but a spokesperson said in an email that the ministry “strongly encourages” Situation Table participants to follow the IPC guidelines.&lt;/p&gt;
&lt;p&gt;Brenda McPhail, director of the Privacy, Technology, and Surveillance Project for the &lt;a href=&quot;https://ccla.org/&quot; target=&quot;_blank&quot;&gt;Canadian Civil Liberties Association&lt;/a&gt; (CCLA), told Motherboard that MCSCS saying Situation Tables are not required to follow IPC information-sharing guidelines is “shocking.”&lt;/p&gt;

&lt;p&gt;“There are concerns about this kind of surveillance that go beyond privacy, [affecting] people’s basic rights to liberty and security of the person,” McPhail told me in a phone call, and suggested that authorities may need to re-examine the use of the Hub model.&lt;/p&gt;
&lt;p&gt;In 2014, Saskatchewan’s IPC &lt;a href=&quot;https://oipc.sk.ca/assets/foip-investigation-105-2014.pdf&quot; target=&quot;_blank&quot;&gt;completed an investigation&lt;/a&gt; into potential privacy violations related to Hubs in that province. It found “deficiencies” in the model’s privacy protections, noting that some Hub databases contained personally identifiable information.&lt;/p&gt;
&lt;p&gt;The report also found that people targeted by Hubs were not informed of how to file privacy complaints, and that Hub agencies had scoured Facebook posts as a source of information regarding a person’s risk levels on at least two occasions.&lt;/p&gt;
&lt;p&gt;The Saskatchewan IPC &lt;a href=&quot;https://motherboard.vice.com/en_us/article/mg7w4x/canada-hub-and-cor-policing-privacy-police&quot; target=&quot;_blank&quot;&gt;told Motherboard in 2017&lt;/a&gt; that corrective measures had been taken, such as destroying personally identifiable data and ensuring that Hubs no longer use Facebook data to assess individuals’ risk levels, and that the IPC was satisfied with these steps.&lt;/p&gt;
&lt;p&gt;One Ontario social worker, who participates in a Situation Table and spoke to Motherboard on condition of anonymity because they were not authorized to speak to the media, expressed worry about the high number of minors being evaluated for intervention, and having their information added to the RTD, because of “how often [interventions] are done without consent.”&lt;/p&gt;

&lt;p&gt;While the worker has seen some individuals benefit from Situation Table interventions (“usually homeless people with severe addictions”), they believe that consent is vital.&lt;/p&gt;
&lt;p&gt;“Without consent, intervention won’t be successful,” the worker said, noting that “around 50 percent” of the Situation Table interventions they’ve been involved in were undertaken without the person’s consent, and that many non-consensual interventions involved people with addictions.&lt;/p&gt;
&lt;p&gt;Though authorities claim that the data is “de-identified,” the 100-plus risk factors used in the RTD may nonetheless describe a person’s life in intimate detail, noting if they drink alcohol, have trouble finding stable housing, skip school, are unemployed, or associate with “negative peers.”&lt;/p&gt;
&lt;div class=&quot;article__media&quot; readability=&quot;7&quot;&gt;&lt;img src=&quot;https://video-images.vice.com/_uncategorized/1551288807943-Screen-Shot-2019-02-26-at-112913-AM.png?resize=320:*&quot; alt=&quot;Risk factors in the RTD&quot; class=&quot;col-12-xs&quot; data-src=&quot;https://video-images.vice.com/_uncategorized/1551288807943-Screen-Shot-2019-02-26-at-112913-AM.png&quot;/&gt;&lt;p&gt;Screengrab: ONTARIO’S RISK-DRIVEN TRACKING DATABASE 2017 ANNUAL REPORT/MCSCS&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The database also includes 51 options for “protective factors”—such as if a person has a loving family, or a positive relationship with law enforcement—that are used to counterbalance risk factors.&lt;/p&gt;
&lt;p&gt;Tamir Israel, a lawyer with the &lt;a href=&quot;https://cippic.ca/en&quot; target=&quot;_blank&quot;&gt;Canadian Internet Policy and Public Interest Clinic&lt;/a&gt; (CIPPIC), told Motherboard that depending on how authorities use the database, there may be a risk that vulnerable people could be identified from the data held in the RTD.&lt;/p&gt;
&lt;p&gt;Even without individuals’ names and addresses in the database, if authorities keep a lot of detailed information about risk factors, there’s a “chance that someone who grabs the database without authorization [could] cross reference the profiles in the database with other information sources (i.e., the news) in order to re-identify people,” Israel said in an email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Predictive policing concerns&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Particularly concerning for privacy advocates is the possibility that the RTD is being used for the purposes of predictive policing—a controversial strategy that employs data analysis to identify hot spots for crime.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://www.publicsafety.gc.ca/cnt/rsrcs/pblctns/2015-plcy-mdps/index-en.aspx&quot; target=&quot;_blank&quot;&gt;report produced by Public Safety Canada&lt;/a&gt; in 2015 notes that data gathered during Hub discussions can be used to help “identify and plan predictive risk patterns at local, regional, and provincial levels.” The information in the RTD can help to accelerate interventions in some communities, the report states.&lt;/p&gt;
&lt;p&gt;“Situation Tables are a form of predictive policing, and are being used to feed databases that may facilitate other kinds of predictive policing,” McPhail told Motherboard.&lt;/p&gt;
&lt;p&gt;According to Israel, there is a risk that if authorities don’t refine the data in the RTD over time to determine if a specific risk factor actually leads to increased crime or harm, flawed predictions could influence policing decisions.&lt;/p&gt;
&lt;p&gt;Israel said that if there are “geographical indicators” in the RTD, they could allow people’s risk factors to be tied to areas that could then be classified as high or low crime, “with an eye to more efficiently allocating police resources.” If the underlying data is faulty, Israel said it could lead to a “higher and more suspicious police presence in neighbourhoods that are predominantly populated by visible minorities.”&lt;/p&gt;
&lt;p class=&quot;article__blockquote&quot;&gt;&lt;strong&gt;Read More:&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;https://motherboard.vice.com/en_us/article/xwbag4/academics-confirm-major-predictive-policing-algorithm-is-fundamentally-flawed&quot; target=&quot;_blank&quot;&gt;Academics Confirm Major Predictive Policing Algorithm is Fundamentally Flawed&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s unclear what algorithm, if any, Canadian authorities use to analyse the RTD, but automated tools come with risks as well. Experts have pointed out that the algorithm underpinning PredPol, one of the most widely used &lt;a href=&quot;https://motherboard.vice.com/en_us/article/d3m7jq/dozens-of-cities-have-secretly-experimented-with-predictive-policing-software&quot; target=&quot;_blank&quot;&gt;predictive policing&lt;/a&gt; technologies, is &lt;a href=&quot;https://motherboard.vice.com/en_us/article/xwbag4/academics-confirm-major-predictive-policing-algorithm-is-fundamentally-flawed&quot; target=&quot;_blank&quot;&gt;fundamentally flawed&lt;/a&gt; in a way that can contribute to over-policing, particularly for marginalized communities.&lt;/p&gt;
&lt;p&gt;The RTD has already inspired at least one predictive policing initiative, the Saskatoon Police Predictive Analytics Lab (&lt;a href=&quot;http://publications.gc.ca/collections/collection_2016/grc-rcmp/JS62-126-78-2-eng.pdf&quot; target=&quot;_blank&quot;&gt;SPPAL&lt;/a&gt;), considered to be Canada’s most advanced &lt;a href=&quot;https://globalnews.ca/news/2455063/saskatoon-police-lead-the-country-with-predictive-analytics-lab/&quot; target=&quot;_blank&quot;&gt;predictive policing&lt;/a&gt; program. &lt;a href=&quot;http://results4america.org/wp-content/uploads/2017/07/LandscapeCS_Canada_4.pdf&quot; target=&quot;_blank&quot;&gt;One report states&lt;/a&gt; that the SPPAL “expands on the Hub model’s risk tracking system.”&lt;/p&gt;
&lt;p&gt;Academic research has explored how the Hub model represents an “extension of police control” in society. A research paper published last month by Carrie B. Sanders, a criminologist at Wilfrid Laurier University, &lt;a href=&quot;https://www.tandfonline.com/doi/full/10.1080/10439463.2018.1427744?scroll=top&amp;amp;needAccess=true&quot; target=&quot;_blank&quot;&gt;concluded&lt;/a&gt; that the Hub model is deeply influenced by “traditional policing practices” and that without sufficient oversight, Hubs “can evade democratic accountability.”&lt;/p&gt;
&lt;p&gt;Police services that send data to the RTD must sign an agreement with MCSCS that bars them from speaking with the media about the database without the Ministry’s written consent, according to a copy of a 2016 agreement obtained by Motherboard.&lt;/p&gt;
&lt;p&gt;McPhail said that without increased transparency, Hubs will continue to present risks to the privacy rights of the vulnerable people whose data they compile in the RTD.&lt;/p&gt;

&lt;p&gt;“We can’t have processes that are based on using exceptions to privacy law, with no transparency or accountability as to how [Hubs] are interpreting those exceptions,” she said. “Privacy is a human right. It can’t be eroded just to make someone’s job easier.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Get six of our favorite Motherboard stories every day&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;http://motherboard.club/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;by signing up for our newsletter&lt;/em&gt;&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 29 May 2019 01:07:02 +0000</pubDate>
<dc:creator>Jerry2</dc:creator>
<og:type>article</og:type>
<og:title>Police in Canada Are Tracking People’s ‘Negative’ Behavior In a ‘Risk’ Database</og:title>
<og:image>https://video-images.vice.com/articles/5c76c78ef3691800072f3249/lede/1551290658202-19570423.jpeg?crop=1xw:0.84375xh;center,center&amp;resize=1200:*</og:image>
<og:url>https://www.vice.com/en_us/article/kzdp5v/police-in-canada-are-tracking-peoples-negative-behavior-in-a-risk-database</og:url>
<og:description>The database includes detailed, but “de-identified,” information about people’s lives culled from conversations between police, social services, health workers, and more.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.vice.com/en_us/article/kzdp5v/police-in-canada-are-tracking-peoples-negative-behavior-in-a-risk-database</dc:identifier>
</item>
<item>
<title>Advertising as a source of dissatisfaction: cross-national evidence</title>
<link>https://voxeu.org/article/advertising-major-source-human-dissatisfaction</link>
<guid isPermaLink="true" >https://voxeu.org/article/advertising-major-source-human-dissatisfaction</guid>
<description>&lt;p&gt;Advertising as a major source of human dissatisfaction: Cross-national evidence on one million Europeans&lt;/p&gt;&lt;div readability=&quot;362&quot;&gt;
&lt;p&gt;Advertising is ubiquitous. In recent decades, the volume of advertising has been growing dramatically. Therefore, it is natural to ask if this harms our wellbeing.&lt;/p&gt;
&lt;p&gt;We do not perfectly understand the link between advertising and individual wellbeing. It is reasonable to assume that it might operate through two broad channels that have opposing effects:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Positive: advertising informs&lt;/strong&gt;. It may promote human welfare by allowing people to make better choices about products. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Negative: advertising stimulates desires that are not feasible&lt;/strong&gt;. This creates dissatisfaction. Hence, advertising might reduce welfare by unduly raising consumption aspirations. &lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;At the national level, we do not know which of the two effects is dominant. Many national variables influence wellbeing, in particular the generosity of the welfare state and variables such as unemployment (DiTella et al. 2001, DiTella et al. 2003, and Radcliff 2013). But recent research on subjective wellbeing, described in sources such as Easterlin (2003), Oswald (1997), Layard (2005) and Clark (2018), has paid little attention to the role of advertising, and so there are no cross-country econometric studies of the effect of advertising using representative samples of adults. &lt;/p&gt;
&lt;h2&gt;Keeping up with the Joneses&lt;/h2&gt;
&lt;p&gt;In this context, is a reasonable hypothesis that advertising has a negative effect on wellbeing. Easterlin (1974) found early evidence suggesting that society does not become happier as it grows richer. He suggested that one mechanism might be that individuals compare themselves with their neighbours. Easterlin’s thesis, in part, assumes that we desire conspicuous consumption (Veblen 1899, 1904). &lt;/p&gt;
&lt;p&gt;If individuals have ‘relativistic’ preferences, so that they look at others before deciding how satisfied they feel, then when they consume more goods, they fail to become happier because they see others also consuming more. The pleasure of my new car is taken away if Ms Jones, in the parking spot next to mine, has also just bought one. More recent evidence on ‘comparison effects’ has been reviewed by Clark (2018). Mujcic and Oswald (2018) also find longitudinal evidence of negative wellbeing consequences based on envy. &lt;/p&gt;
&lt;p&gt;Since Veblen, many researchers have worried about negative effects on wellbeing of advertising. In some cases they have found small-scale evidence (examples include Richins 1995, Easterlin and Crimmins 1991, Bagwell and Bernheim 1996, Sirgy et al. 1998, Dittmar et al. 2014, Frey et al. 2007, and Harris et al. 2009). Research has focused on the likely detrimental effects upon children (Andreyeva et al. 2011, Borzekowski and Robinson 2001, Buijzen and Valkenburg 2003a, Opree et al. 2013, and Buijzen and Valkenburg 2003b), although the most recent work, by Opree et al. (2016), produced inconclusive results. &lt;/p&gt;
&lt;h2&gt;Evidence of a negative effect&lt;/h2&gt;
&lt;p&gt;We have found evidence of negative links between national advertising and national wellbeing (Michel et al. 2019). Using longitudinal information on countries, from pooled cross-sectional surveys, we find that rises and falls in advertising are followed, a few years later, by falls and rises in national life-satisfaction, giving an inverse connection between advertising levels and the later wellbeing levels of nations.&lt;/p&gt;
&lt;p&gt;We took a sample of slightly over 900,000 randomly sampled European citizens in 27 countries, surveyed annually from 1980 to 2011. Respondents reported their level of life satisfaction and many other aspects of themselves and their lives. We also recorded total advertising expenditure levels.&lt;/p&gt;
&lt;p&gt;Figure 1 illustrates the study’s key idea. It divides the data into tertiles and then plots the (uncorrected) relationship between the change in advertising and the change in life satisfaction. The three vertical bars separate the data into countries that had particularly large increases in advertising expenditure, moderate increases, and small increases. Figure 1 shows that the greater the rise in advertising within a nation, the smaller the later improvement in life satisfaction.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1&lt;/strong&gt; The inverse longitudinal relationship between changes in advertising and changes in the life satisfaction of countries, 1980 to 2011&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://voxeu.org/sites/default/files/image/FromMay2014/proto27mayfig1.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;em&gt;Notes&lt;/em&gt;: Based on a sample of approximately 1 million individuals. Based on shorter period if data not available for that country. Bottom Tertile consists of Czech Republic, Germany after 1989, Estonia, Finland, Lithuania, Hungary, Latvia, Poland, Romania, Slovakia. Mean change 2.93. Middle Tertile consists of Bulgaria, Western Germany (before 1989), Denmark, UK, Sweden, Slovenia, Netherlands, Turkey, Spain. Mean Change: 2.15. Top tertile consists of Austria, Belgium, France, Greece, Croatia, Ireland, Italy, Norway, Portugal. Mean change 1.46.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Advertising does not have a spurious association with life satisfaction that is attributable merely to the business cycle. Using standard regression analysis, we were able to show that the negative effect of advertisement on life satisfaction is not due to the correlation of both variables with the GDP. This negative effect is robust to the inclusion of other variables like country and year fixed effects, unemployment, and individual socioeconomic characteristics that are typically included in any happiness equation. &lt;/p&gt;
&lt;p&gt;The effect implies that a hypothetical doubling of advertising expenditure would result in a 3% drop in life satisfaction. That is approximately one half the absolute size of the marriage effect on life satisfaction, or approximately one quarter of the absolute size of the effect of being unemployed.&lt;/p&gt;
&lt;p&gt;These results are consistent with concerns that were first more than a century ago, and regularly since (Veblen 1904 and Robinson 1933, for example). They are consistent with Easterlin (1974, 2003) and Layard (1980). They may also be consistent with ideas about the negative consequences of materialism (Sirgy et al. 2012, Burroughs and Rindfleisch 2002, Speck and Roy 2008, and Snyder and Debono 1985). &lt;/p&gt;
&lt;p&gt;Although there is evidence of an inverse longitudinal relationship between national advertising and national dissatisfaction, we still need to uncover the causal mechanism. But this demands investigation, because the size of the estimated effect here is both substantial and statistically well-determined. &lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;Andreyeva T, I R Kelly, R Inas, and J L Harris (2011), &quot;Exposure to food advertising on television: Associations with children’s fast food and soft drink consumption and obesity&quot;, &lt;em&gt;Economics and Human Biology&lt;/em&gt; 9: 221-313.&lt;/p&gt;
&lt;p&gt;Bagwell L S and B D Bernheim (1996), &quot;Veblen effects in a theory of conspicuous consumption&quot;, &lt;em&gt;American Economic Review&lt;/em&gt; 86: 349-373.&lt;/p&gt;
&lt;p&gt;Borzekowski D L G and T N Robinson (2001), &quot;The 30-second effect: An experiment revealing the impact of television commercials on food preferences of pre-schoolers&quot;, &lt;em&gt;Journal of the American Dietetic Association&lt;/em&gt; 101: 42–46.&lt;/p&gt;
&lt;p&gt;Buijzen M and P M Valkenburg PM (2003a), &quot;The unintended effects of television advertising: A parent-child survey&quot;, &lt;em&gt;Communication Research&lt;/em&gt; 30: 483–503.&lt;/p&gt;
&lt;p&gt;Buizjen M and P M Valkenburg PM (2003b), &quot;The effects of television advertising on materialism, parent-child conflict, and unhappiness: A review of research&quot;, &lt;em&gt;Journal of Applied Developmental Psychology&lt;/em&gt; 24: 437-456.&lt;/p&gt;
&lt;p&gt;Burroughs J E and A Rindfleisch (2002), &quot;Materialism and well-being: A conflicting values perspective&quot;, &lt;em&gt;Journal of Consumer Research&lt;/em&gt; 29: 348-370.&lt;/p&gt;
&lt;p&gt;Clark A E (2018), &quot;Four decades of the economics of happiness: Where next?&quot;, &lt;em&gt;Review of Income and Wealth&lt;/em&gt; 64: 245-269.&lt;/p&gt;
&lt;p&gt;Di Tella R, R J MacCulloch, and A J Oswald (2001), &quot;Preferences over inflation and unemployment: Evidence from surveys of happiness&quot;, &lt;em&gt;American Economic Review&lt;/em&gt; 91: 335-341.&lt;/p&gt;
&lt;p&gt;Di Tella R, R J MacCulloch, and A J Oswald (2003), &quot;The macroeconomics of happiness&quot;, &lt;em&gt;Review of Economics and Statistics&lt;/em&gt; 85: 809-827.&lt;/p&gt;
&lt;p&gt;Dittmar H, R Bond, M Hurst M, and T Kassar (2014), &quot;The relationship between materialism and personal well-being: A meta-analysis&quot;, &lt;em&gt;Journal of Personality and Social Psychology&lt;/em&gt; 107: 879-924.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Easterlin R A (1974), Does economic growth improve the human lot? Some empirical evidence, in: P A David and M W Reder (eds.), Nations and households in economic growth: Essays in honor of Moses Abramowitz&lt;/em&gt;. Academic Press: 89-125.&lt;/p&gt;
&lt;p&gt;Easterlin R A (2003), &quot;Explaining happiness&quot;, &lt;em&gt;Proceedings of the National Academy of Sciences of the USA&lt;/em&gt; 100: 11176-11183.&lt;/p&gt;
&lt;p&gt;Easterlin R A and Crimmins E M (1991), &quot;Private materialism, personal self-fulfillment, family life, and public interest&quot;, &lt;em&gt;Public Opinion Quarterly&lt;/em&gt; 55: 499-533.&lt;/p&gt;
&lt;p&gt;Frey B, C Denesch, and A Stutzer (2007), &quot;Does watching TV makes us happy?&quot;, &lt;em&gt;Journal of Economic Psychology&lt;/em&gt; 28: 283–313.&lt;/p&gt;
&lt;p&gt;Harris J L, J A Bargh, and K D Brownell (2009), &quot;Priming effects of television food advertising on eating behaviour&quot;, &lt;em&gt;Health Psychology&lt;/em&gt; 28: 404–413.&lt;/p&gt;
&lt;p&gt;Layard R (2005), &lt;em&gt;Happiness: Lessons from a new science,&lt;/em&gt; Penguin.&lt;/p&gt;
&lt;p&gt;Michel C, M Sovinsky, E Proto, A J Oswald (forthcoming), &quot;Advertising as a Major Source of Human Dissatisfaction: Cross-National Evidence on One Million Europeans&quot;, to be published in 2019 in a volume in honor of Richard Easterlin.&lt;/p&gt;
&lt;p&gt;Opree S J, M Buizjen and E A van Reijmersdal (2016), &quot;The impact of advertising on children’s psychological wellbeing and life satisfaction&quot;, &lt;em&gt;European Journal of Marketing&lt;/em&gt; 50: 1975-1992.&lt;/p&gt;
&lt;p&gt;Oswald A J (1997), &quot;Happiness and economic performance&quot;, &lt;em&gt;Economic Journal&lt;/em&gt; 107: 1815-1831.&lt;/p&gt;
&lt;p&gt;Radcliff B (2013), &lt;em&gt;The political economy of human happiness: How voters’ choices determine the quality of life,&lt;/em&gt; Cambridge University Press.&lt;/p&gt;
&lt;p&gt;Robinson J (1933), &lt;em&gt;Economics of imperfect competition&lt;/em&gt;, Macmillan.&lt;/p&gt;
&lt;p&gt;Sirgy M J, D J Lee, R Kosenko, H L Meadow, D Rahtz, M Cicic, G Xi Jin, D Yarsuvat, D L Blenkhorn, and N Wright (1998), Does television viewership play a role in the perception of quality of life? Journal of Advertising 27: 125-142.&lt;/p&gt;
&lt;p&gt;Sirgy J M, E Gurel-Atay, D Webb, M Cicic, M Husic, A Ekici, A Herrmann, I Hegazy, D-J Lee, and J S Johar (2012), &quot;Linking advertising, materialism, and life satisfaction&quot;, Social Indicators Research 107: 79-101.&lt;/p&gt;
&lt;p&gt;Snyder M and K G Debono (1985), &quot;Appeals to image and claims about quality – Understanding the psychology of advertising&quot;, Journal of Personality and Social Psychology 49: 586-597.&lt;/p&gt;
&lt;p&gt;Speck S K, A Roy (2008), &quot;The interrelationships between television viewing, values and perceived well-being: A global perspective&quot;, Journal of International Business Studies 39: 1197-1219.&lt;/p&gt;
&lt;p&gt;Veblen T (1899), The Theory of the Leisure Class, Macmillan.&lt;/p&gt;
&lt;p&gt;Veblen T (1904), The Theory of Business Enterprise, Charles Scribner’s Sons.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Tue, 28 May 2019 20:26:43 +0000</pubDate>
<dc:creator>howard941</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://voxeu.org/article/advertising-major-source-human-dissatisfaction</dc:identifier>
</item>
<item>
<title>Show HN: Endoflife.date – Site with EOL dates of everything</title>
<link>https://endoflife.date/</link>
<guid isPermaLink="true" >https://endoflife.date/</guid>
<description>&lt;p&gt;This site maintains quick links for checking End Of Life dates for various tools and technologies.&lt;/p&gt;
&lt;h2 id=&quot;suggestion&quot;&gt;Suggestion&lt;/h2&gt;
&lt;p&gt;The reason this site exists is because this information is very often hidden away. If you’re releasing something on a regular basis:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;List only supported releases.&lt;/li&gt;
&lt;li&gt;Give EoL dates/policy if possible.&lt;/li&gt;
&lt;li&gt;Hide unsupported releases behind a few extra clicks.&lt;/li&gt;
&lt;li&gt;Mention security/active release difference if needed.&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcome &lt;a href=&quot;https://github.com/captn3m0/endoflife.date&quot;&gt;at GitHub&lt;/a&gt;. See the &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTRIBUTING.md&lt;/code&gt; file for more details.&lt;/p&gt;
</description>
<pubDate>Tue, 28 May 2019 19:55:11 +0000</pubDate>
<dc:creator>captn3m0</dc:creator>
<og:title>Home</og:title>
<og:description>Check End of Life of php, python, ubuntu, alpine, laravel, debian etc at one place. Verify whether your application needs an update, or if you need to upgrade your device.</og:description>
<og:url>https://endoflife.date/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://endoflife.date/</dc:identifier>
</item>
<item>
<title>Scene report from the Chernobyl Zone</title>
<link>https://moxie.org/stories/chernobyl-scene-report/</link>
<guid isPermaLink="true" >https://moxie.org/stories/chernobyl-scene-report/</guid>
<description>&lt;p&gt;Surreptitiously crossing the Uzh river at 2am, with the full moon starting to set low on the horizon, the first thing that strikes you about the Chernobyl Exclusion Zone is the sound of it. Just two hours outside of Kiev, all the sounds of civilization disappear, and only our radiation dosimeters are left ticking softly with the wind.&lt;/p&gt;&lt;p&gt;But moving into the zone on the other side of the river, it's not silence we're met with. Even in the darkness, it's immediately clear that the forest has retaken the Chernobyl Zone, and the forest is &lt;em&gt;alive&lt;/em&gt;. It's a reverberating symphony of birds, frogs, crickets, cicadas — even wolves howling in the distance. Navigating hesitantly through those first few kilometers, we moved as silently and nimbly as we could, in quiet awe to the sounds of life and the expanse of the moonlit trees around us.&lt;/p&gt;
&lt;p&gt;And then, with the shock of a sound that doesn't belong, &quot;&lt;em&gt;&lt;strong&gt;WHAM-&lt;/strong&gt;&lt;/em&gt;&quot; a 6-liter bottle of water fell off the back of Geoff's bicycle, exploding when it hit the ground.&lt;/p&gt;
&lt;p&gt;The three of us had decided to try to explore the zone by bicycle. Even after 30 years and an intensive 10-year remediation effort, it's a contaminated landscape. It's dangerous to consume anything from within the zone, since it could contain Strontium-90, which your body can mistake for calcium and absorb into your bones, eventually causing bone cancer. That meant we would have to carry in all the food and water we'd need for the duration of our trip. Hiking with food isn't so bad, but water?&lt;/p&gt;
&lt;p&gt;We considered a number of options. Could we just carry it? No, we'd need at least 5 gallons each, which would mean 180lbs for the three of us. There was no way we'd make it 80 kilometers with that. Maybe a hand truck, or a wagon? Eventually we settled on bicycles, figuring that even if the terrain didn't always allow us to ride, we'd at least be able to push them with the water strapped to them.&lt;/p&gt;
&lt;p&gt;10 minutes in, we were down 6 liters. We spent some time re-securing everything, all of us keen to avoid a situation where we'd have to make a choice between dehydration and drinking radioactive water.&lt;/p&gt;
&lt;p&gt;Our immediate destination was the city of Pripyat. When the V.I. Lenin Nuclear Power Station was built, the closest major town was Chernobyl (14km away), which is how people came to refer to the plant. But a new city of 50,000 called Pripyat was built simultaneously with the plant to both house workers and serve as a utopian model for future Soviet development. This ghost city was our first destination.&lt;/p&gt;
&lt;p&gt;We didn't know exactly what to expect for the trip, or if it would work at all. We had Google Maps satellite imagery, a rough idea of where the military checkpoints were, and a $5 compass. In the end, the easiest thing to do was just follow the old power lines.&lt;/p&gt;
&lt;p&gt;It was 40km from the edge of the zone to Pripyat, and we wanted to be there before 7am, which is when we surmised that security would become more of an issue. We spent the night tiptoing around razor wire, coasting silently through sleeping checkpoints, and riding frantically through the dark from some surprisingly alert and vigilant guard dogs.&lt;/p&gt;
&lt;p&gt;But mostly, we just gasped at the beauty and wonder of our surroundings. Watching an enormous buck with towering antlers cross through the twilight in front of us, it felt more like we were in some remote part of Alaska, but superimposed onto the rusting hammers and sickles of forgotten Soviet infrastructure.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bxyb79uhdRh/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-10.616071428571&quot;&gt;

&lt;/blockquote&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BxyekrXh8Gm/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-10.616071428571&quot;&gt;

&lt;/blockquote&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BxyeVDKheEP/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-10.616071428571&quot;&gt;

&lt;/blockquote&gt;
&lt;p&gt;It was a much longer and much harder ride than we expected. The sun came up at 4am, and we rode on through the early hours, pushing to reach Pripyat on time. Once or twice we considered ducking off in little abandoned villages we'd come across in order to wait out the day, but the radiation levels were always too high in the structures we found. So we kept riding, passing old rail yards, forgotten communist monuments, and rusting machinery. When we eventually found ourselves in the city, the lack of transition was surreal. As we were riding through the forest, willing ourselves to keep a steady pace after an all-night journey, we suddenly became aware that there were already 7-story apartment buildings looming up all around us, just behind the first few rows of trees. Block after block after block of giant imponderable buildings, all standing silently within the surrounding woods.&lt;/p&gt;
&lt;p&gt;Exhausted, we picked an apartment building at random and went in. Our initial thought was to camp on the roof, but the radiation on the roof's surface was over 50 μSv/hr, so we moved to apartment #23 instead. The radiation there was only 0.08 μSv/hr (actually lower than our apartment in California). The former occupants must have had their windows closed when the explosion occurred. We collapsed and slept for most of the day.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/BxzxyBche1R/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-10.616071428571&quot;&gt;

&lt;/blockquote&gt;
&lt;p&gt;When reactor No 4 exploded, there was a lot of initial confusion about the magnitude of the accident. For a number of reasons, it was a full 36 hours before authorities realized that four days in Pripyat would result in a lethal dose for its occupants, and finally ordered the evacuation. Residents were given 2 hours to pack whatever they could carry and get on a bus. Most were under the impression that they would be returning within 3 or 4 days, but they were never allowed back.&lt;/p&gt;
&lt;p&gt;Looking at the newspapers and books scattered about apartment #23, the packed suitcases sitting where they were left, the clothes pins still sitting on the same clothes lines where they must have been 33 years ago, you can feel the abruptness of the city's end. This wasn't a ghost town that slowly petered out over decades until there was nobody left, it was a densely constructed city of 50 thousand where everyone left at the exact same moment, and nobody ever came back.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bxzze2eBHTm/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-10.616071428571&quot;&gt;

&lt;/blockquote&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bx0DvrrBAAn/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-8.3393665158371&quot;&gt;

&lt;/blockquote&gt;
&lt;p&gt;Our time in Pripyat was vivid. We'd have to hide and move cautiously during the day, but at night! The night was ours. We wandered around the rooftops, through the squares of the city, and into as many buildings as we could — each one more stunning than the one before.&lt;/p&gt;
&lt;p&gt;We found the stadium, which underscores the vibe of the entire place: where the crumbling empty stands should look out onto the pitch, there is only forest. Standing in the bleachers, listening to the Pripyat municipal overture of resounding bird song, the only thing we could do was stare out at the trees and wonder &quot;how long until New York looks like this?&quot;&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bx0-GIuBWf6/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-10.616071428571&quot;&gt;

&lt;/blockquote&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bx07ZKRBIit/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-5.8378378378378&quot;&gt;

&lt;/blockquote&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bx1AQJ7BzZN/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-12.16&quot;&gt;

&lt;/blockquote&gt;
&lt;p&gt;Over six hundred thousand people were directly involved in dealing with the aftermath of the Chernobyl explosion. The early days were filled with incredible sacrifice. Immediately after the accident, one of the first priorities was to put out the burning nuclear material that was sending a radioactive steam cloud billowing into the sky. Without a way to approach the reactor directly, they flew helicopter sorties over it with crews inside who &lt;em&gt;threw bags of sand out the doors&lt;/em&gt; and into the crater, slowly filling it. When the sand started to melt, they did the same thing with lead. Some pilots flew up to 33 sorties into the steam cloud, and &lt;em&gt;six hundred helicopter pilots were killed&lt;/em&gt; by the radiation.&lt;/p&gt;
&lt;p&gt;When that material then started to smolder downwards out through the floor of the chamber, it threatened to come into contact with a large amount of water that had pooled there as a result of early firefighter attempts to put it out with hoses. This would have ignited a second reaction that would have been the equivalent of a 5 megaton explosion. It would have leveled Kiev and Minsk, and would have ejected the nuclear material from the other 3 Chernobyl reactors with a force that would have rendered much of Europe uninhabitable for hundreds of years. With only days to stop it, Alexei Ananenko, Valeri Bezpalov, and Boris Baranov went into the ruins of the plant, knowingly facing almost certain death from that level of radiation exposure, to release valves that would drain 5 million gallons of water.&lt;/p&gt;
&lt;p&gt;When the same radioactive magma threatened to melt through the concrete pad below that and into the groundwater for 50 million people, miners dug a 150 meter tunnel 12ft under ground &lt;em&gt;by hand&lt;/em&gt; to stop it.&lt;/p&gt;
&lt;p&gt;When the firefighters from the first night, before they understood that this was not just a fire, showed up at the hospital sick and suffering from radiation burns, the medical staff there knew that they must have been severely contaminated, but they stayed and treated them anyway, potentially exposing themselves to the same fate.&lt;/p&gt;
&lt;p&gt;Every interview I've seen or account that I've read from those involved, most of whom died within weeks or have suffered life-long health problems, has a common theme of no regrets; the sentiment almost universally &quot;It had to be done. Who would I expect to do it instead of me?&quot; &lt;img src=&quot;https://moxie.org/stories/chernobyl-scene-report/theobject.jpg&quot; alt=&quot;The Object&quot; class=&quot;center&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;The New Safe Confinment, also known as 'The Object'. This cost $1.8 billion to construct, $60 million a year to maintain, and is rated for 100 years. The financial costs of the accident appear to be never ending.&lt;/p&gt;
&lt;p&gt;There's so much in Pripyat that by the time we had to leave, we had probably explored less than 1% of the city. We went out on the same road that the residents did 33 years ago. Riding across the zone under the full moon, we'd stop sometimes and stare out at the woods and fields around us, all alone in the middle of that huge seeming expanse. The experience is full of tensions. It is so beautiful and so peaceful that it really feels like paradise, but it's a paradise that you can't enjoy. You have to be careful about where you sit, what you eat, how you eat it, what you touch; which is — ironically — why it exists. The reason it's so beautiful and so peaceful is precisely because we can't consume it. Like, perhaps, all real paradises everywhere.&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/Bx2YGEeh5Fe/&quot; data-instgrm-version=&quot;12&quot; readability=&quot;-6.9105058365759&quot;&gt;

&lt;/blockquote&gt;
&lt;p&gt;When we finally left the zone and made it back to Kiev, I was largely struck by how normal everything is there — there's almost no sign that the apocalypse is only 2hrs away. No physical signs at all, in fact. Around town there are statues of former princes, religious monuments, a memorial to the veterans of the Afghanistan war. On the bills of the currency, the faces of 10th century princes, politicians, poets, and writers.&lt;/p&gt;
&lt;p&gt;What of the helicopter pilots who killed themselves to put out the most toxic fire in history? What about the people who knowingly sacrificed themselves to stop a reaction that would have destroyed most of Europe? Who were the miners that dug the tunnel through radioactive ground to save the water supply for 50 million people? They have no public monuments, we do not know their faces, their names are not etched onto the buildings that are still standing because of them.&lt;/p&gt;
&lt;p&gt;I don't know all of their names, but I'm thinking of them here, in this place, amongst the living.&lt;/p&gt;
</description>
<pubDate>Tue, 28 May 2019 16:45:34 +0000</pubDate>
<dc:creator>BCM43</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://moxie.org/stories/chernobyl-scene-report/</dc:identifier>
</item>
<item>
<title>Simple Dockerfile examples are often broken by default</title>
<link>https://pythonspeed.com/articles/dockerizing-python-is-hard/</link>
<guid isPermaLink="true" >https://pythonspeed.com/articles/dockerizing-python-is-hard/</guid>
<description>&lt;p&gt;When it’s time to package up your Python application into a Docker image, the natural thing to do is search the web for some examples. And a quick search will provide you with plenty of simple, easy examples.&lt;/p&gt;
&lt;p&gt;Unfortunately, these simple, easy examples are often broken in a variety of ways, some obvious, some less so. To demonstrate just some of the ways they’re broken, I’m going to:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Start with an example &lt;code&gt;Dockerfile&lt;/code&gt; that comes up fairly high on some Google searches.&lt;/li&gt;
&lt;li&gt;Show how it’s broken.&lt;/li&gt;
&lt;li&gt;Give some suggestions on how to make it less broken.&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Outside the specific topic under discussion, the Dockerfiles in this article are not examples of best practices, since the added complexity would obscure the main point of the article.&lt;/p&gt;
&lt;p&gt;Want a best-practices Dockerfile and build system? Check out my &lt;a href=&quot;https://pythonspeed.com/products/pythoncontainer/&quot;&gt;Production-Ready Python Containers&lt;/a&gt; product.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Broken by default&lt;/h2&gt;
&lt;p&gt;Consider the following &lt;code&gt;Dockerfile&lt;/code&gt;, which I found by searching for Python Dockerization examples. I’ve made some minor changes to disguise its origin, but otherwise it is the same:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;c&quot;&gt;# DO NOT USE THIS DOCKERFILE AS AN EXAMPLE, IT IS BROKEN&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; python:3&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; yourscript.py /&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;flask

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [ &quot;python&quot;, &quot;./yourscript.py&quot; ]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Some of the problems with this Dockerfile&lt;/h2&gt;
&lt;p&gt;How many different problems can you spot in this image?&lt;/p&gt;
&lt;h3&gt;Problem #1: Non-reproducible builds re Python version&lt;/h3&gt;
&lt;p&gt;The first thing to notice is that this &lt;code&gt;Dockerfile&lt;/code&gt; is based off of the &lt;code&gt;python:3&lt;/code&gt; image. At the time of writing this will install Python 3.7, but at some point it will switch to installing Python 3.8.&lt;/p&gt;
&lt;p&gt;At that point rebuilding the image will switch to a different version of Python, which might break the software: a minor change in your code can lead to a deploy that breaks production.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Use &lt;code&gt;python:3.7.3-stretch&lt;/code&gt; as the base image, to pin the version and OS. Or, &lt;code&gt;python:3.7-stretch&lt;/code&gt; if you’re feeling less worried about point releases. See my article for &lt;a href=&quot;https://pythonspeed.com/articles/base-image-python-docker-images/&quot;&gt;choosing a base image for Python&lt;/a&gt; for more details on image variants.&lt;/p&gt;
&lt;h3&gt;Problem #2: Non-reproducible builds re dependencies.&lt;/h3&gt;
&lt;p&gt;Similarly, &lt;code&gt;flask&lt;/code&gt; is installed with no versioning, so each time the image is rebuilt potentially a new version of &lt;code&gt;flask&lt;/code&gt; (or one of its dependencies, or one of its dependencies’ dependencies) will change. If they’re compatible, great, but there’s no guarantee that is the case.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Create &lt;code&gt;requirements.txt&lt;/code&gt; with transitively-pinned versions of all dependencies, e.g. &lt;a href=&quot;https://hynek.me/articles/python-app-deps-2018/&quot;&gt;by using &lt;code&gt;pip-tools&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Problem #3: Changes to source code invalidate the build cache&lt;/h3&gt;
&lt;p&gt;If you want fast builds, you want to rely on Docker’s layer caching. But by copying in the file before running &lt;code&gt;pip install&lt;/code&gt;, all later layers are invalidated—this image will be rebuilt from scratch every time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Copy in files only when they’re first needed.&lt;/p&gt;
&lt;h3&gt;Problem #4: Running as root, which is insecure&lt;/h3&gt;
&lt;p&gt;By default Docker containers run as root, &lt;a href=&quot;http://canihaznonprivilegedcontainers.info/&quot;&gt;which is a security risk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; It’s much better to run as a non-root user, and do so in the image itself so that you don’t listen on ports&amp;lt;1024 or do other operations that require a subset of root’s permissions.&lt;/p&gt;
&lt;h2&gt;A somewhat better image&lt;/h2&gt;
&lt;p&gt;Here’s a somewhat better—though still not ideal—Dockerfile that addresses the issues above:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; python:3.7.3-stretch&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; requirements.txt /tmp/&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; /tmp/requirements.txt

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;useradd &lt;span class=&quot;nt&quot;&gt;--create-home&lt;/span&gt; appuser
&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /home/appuser&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; appuser&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; yourscript.py .&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [ &quot;python&quot;, &quot;./yourscript.py&quot; ]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Even if the resulting image was something you’d want to run in production—and it almost certainly isn’t!—the image is still insufficient on its own.&lt;/p&gt;
&lt;p&gt;For example, you also need to regularly update &lt;code&gt;requirements.txt&lt;/code&gt; in a controlled manner, in order to get security updates and bug fixes, and you’ll need to &lt;a href=&quot;https://pythonspeed.com/articles/docker-cache-insecure-images/&quot;&gt;regularly rebuild your images without caching to get security updates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And there are many more improvements you could make to get this closer to a &lt;a href=&quot;https://pythonspeed.com/products/pythoncontainer/&quot;&gt;production-ready Python container&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Be careful what you learn from&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;A broken Docker image can lead to production outages, and building best-practices images is a lot harder than it seems.&lt;/strong&gt; So don’t just copy the first example you find on the web: do your research, and spend some time reading about best practices.&lt;/p&gt;
&lt;p&gt;As a starting point, I recommend the &lt;a href=&quot;https://docs.docker.com/develop/develop-images/dockerfile_best-practices/&quot;&gt;official Dockerfile&lt;/a&gt; best practices documentation, &lt;a href=&quot;https://hynek.me/articles/&quot;&gt;Hynek’s articles&lt;/a&gt;, and of course the various articles on this site about &lt;a href=&quot;https://pythonspeed.com/articles/#docker&quot;&gt;Docker packaging for Python&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 28 May 2019 16:33:59 +0000</pubDate>
<dc:creator>itamarst</dc:creator>
<og:title>Broken by default: why you should avoid most Dockerfile examples</og:title>
<og:description>When it’s time to package up your Python application into a Docker image, the natural thing to do is search the web for some examples. And a quick search will provide you with plenty of simple, easy examples. Unfortunately, these simple, easy examples are often broken in a variety of ways, some obvious, some less so. To demonstrate just some of the ways they’re broken, I’m going to: Start with an example Dockerfile that comes up fairly high on some Google searches. Show how it’s broken. Give some suggestions on how to make it less broken. Note: Outside the specific topic under discussion, the Dockerfiles in this article are not examples of best practices, since the added complexity would obscure the main point of the article. Want a best-practices Dockerfile and build system? Check out my Production-Ready Python Containers product.</og:description>
<og:url>https://pythonspeed.com/articles/dockerizing-python-is-hard/</og:url>
<og:image>https://pythonspeed.com/assets/titles/dockerizing-python-is-hard.png</og:image>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://pythonspeed.com/articles/dockerizing-python-is-hard/</dc:identifier>
</item>
<item>
<title>Blackbird SR-71 Flight Manual (2010)</title>
<link>https://www.sr-71.org/blackbird/manual/</link>
<guid isPermaLink="true" >https://www.sr-71.org/blackbird/manual/</guid>
<description>&lt;h2 class=&quot;center&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;For the first time, the SR-71 Flight Manual is available online. The manual was declassified several years ago and has now been made free to the public. When a document becomes declassified, it also becomes public domain. No copyright is asserted for the content that is presented on this web site from the SR-71 Flight Manual. However, I do ask that you cite SR-71 Online as your source if you plan to use this content. I hold distribution rights on this particular presentation since this reproduction is my work in general, and a lot of work was put into this production. If you plan to mirror this site, please be sure to ask for permission at my &lt;a href=&quot;https://www.sr-71.org/contact/&quot;&gt;contact page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;center&quot;&gt;How To Use This Resource&lt;/h2&gt;
&lt;p&gt;This resource is to educate the public about the operation of the SR-71 reconnaissance aircraft. All sections of the manual have been included in the web-based reproduction. This section of the site is best viewed at 1280 x 1024 resolution. A resolution of 1024 x 768 is recommended and a minimum resolution of 800 x 600 is required.&lt;/p&gt;
&lt;p&gt;The Table of Contents below is as how it appears in the actual flight manual, but has been presented in web form for easy access to the manual's content. The manual may be read continuously by clicking on the 'Next' or 'Back' links found on each page.&lt;/p&gt;
&lt;h2 class=&quot;center&quot;&gt;Missing Pages Report&lt;/h2&gt;
&lt;p&gt;All pages from any known current declassified editions are posted on this web site. A few pages are still missing from the manual that this was scanned from. Be sure to check back for updates and new additions. This manual is ISSUE E, CHANGE 2 and is 1052 pages.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;1-28A, 1-28B, 1-174, 1-175: Lost or missing&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;4-150 through 4-160: Still classified&lt;/p&gt;
</description>
<pubDate>Tue, 28 May 2019 16:30:25 +0000</pubDate>
<dc:creator>hazzamanic</dc:creator>
<dc:format>application/xhtml+xml</dc:format>
<dc:identifier>https://www.sr-71.org/blackbird/manual/</dc:identifier>
</item>
</channel>
</rss>