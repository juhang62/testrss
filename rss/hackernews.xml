<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>My dog was killed on a walk with a walker ordered through Wag</title>
<link>https://www.facebook.com/nick.moore.7140/posts/3600186133211</link>
<guid isPermaLink="true" >https://www.facebook.com/nick.moore.7140/posts/3600186133211</guid>
<description>&lt;p&gt;Friends,&lt;br/&gt;First I want to say that Sara and I have spent a lot of time thinking about whether or not we wanted to share what I’m about to share. Ultimately we’ve decided that if what happened to us happened to one of you instead, we would want to know, so that we could make more informed decisions in the future. This post is not intended as retribution. As many of you know, and many of you don’t, on December 10 our precious dog Winnie passed away. Winnie was hit and killed while on a walk with a walker that we ordered through Wag—a dog walking service that allows you to “order” a dog walker similar to the way you order an Uber. We used a Wag walker on days that neither Sara nor I could come home from work to let Winnie out. We made a lot of great relationships through our use of Wag and it allowed our sweet Winnie to be cared for while we maintained busy lifestyles. Every walker fell in love with Winnie. However, since the incident, Wag has been cold, unhelpful, and we believe less than truthful to us.&lt;/p&gt;
&lt;p&gt;On the day Winnie was killed, we ordered a walker like usual. Each walker’s profile shows their name, as well as a small paragraph about that particular walker. The walker that was with Winnie when she was killed had a different name in her bio paragraph than was shown on her profile—which makes me wonder if Wag is monitoring whether or not the people walking your dog are who they say they are. Sara asked the walker what her name was, but the walker did not provide an answer. This was concerning, but she was already with Winnie. When Sara did not receive the confirmation that Winnie’s walk was over (as you typically receive) Sara became even more concerned. Sara texted the walker, but did not receive an answer. When Sara called the walker, the walker answered and assured Sara that Winnie was home safe. Five minutes later Sara received a call from a Wag representative saying that Winnie was not home safe, but had been hit and did not survive.&lt;/p&gt;
&lt;p&gt;The representative told us that Wag was opening an investigation. To this day we do not know a single answer as to who was involved, what happened, where it happened, or why it happened. Wag has not provided us any information, and the walker has not contacted us.&lt;/p&gt;
&lt;p&gt;The representative also told us that Wag would take care of all of the expenses, such as Winnie’s cremation. However, when we submitted our receipts, we received in response a settlement and non-disclosure agreement. If we wanted to be compensated we had to agree not to tell anyone what happened, we could not leave any negative reviews, we could not make posts on social media, we could not hold Wag or the walker responsible, and only then would Wag reimburse us for Winnie’s cremation. When we responded that we would not sign the agreement, we were told that the agreement would remain available in case we changed our minds. The next day, we received an email stating that the agreement was now “null and void.”&lt;/p&gt;
&lt;p&gt;We wanted to share our experience with Wag because we know that if this had happened to someone we knew, we would think twice about using their services, and would probably rely on people we know personally instead. Sara and I will welcoming a new puppy from the same breeder in February—Rory. We will not be using Wag.&lt;/p&gt;
</description>
<pubDate>Fri, 18 Jan 2019 02:29:52 +0000</pubDate>
<dc:creator>griffinmb</dc:creator>
<og:title>Nick Moore</og:title>
<og:description>Friends, First I want to say that Sara and I have spent a lot of time thinking about whether or not we wanted to share what I’m about to share. Ultimately we’ve decided that if what happened to us...</og:description>
<og:image>https://scontent.fphx1-2.fna.fbcdn.net/v/t15.5256-10/49694947_3600187213238_8339153538940665856_n.jpg?_nc_cat=101&amp;_nc_ht=scontent.fphx1-2.fna&amp;oh=867477ebd36e47b4822e961fef9e6214&amp;oe=5CCE18C1</og:image>
<og:url>https://www.facebook.com/nick.moore.7140/posts/3600186133211</og:url>
<og:type>video</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.facebook.com/nick.moore.7140/posts/3600186133211?_fb_noscript=1</dc:identifier>
</item>
<item>
<title>Sequel Pro – Open source macOS native MySQL GUI client</title>
<link>https://www.sequelpro.com/</link>
<guid isPermaLink="true" >https://www.sequelpro.com/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.sequelpro.com/&quot;&gt;https://www.sequelpro.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18936509&quot;&gt;https://news.ycombinator.com/item?id=18936509&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 318&lt;/p&gt;
&lt;p&gt;# Comments: 147&lt;/p&gt;
</description>
<pubDate>Fri, 18 Jan 2019 02:16:55 +0000</pubDate>
<dc:creator>atrudeau</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sequelpro.com/</dc:identifier>
</item>
<item>
<title>A Fifth of China’s Homes Are Empty (2018)</title>
<link>https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments&quot;&gt;https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18935888&quot;&gt;https://news.ycombinator.com/item?id=18935888&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 267&lt;/p&gt;
&lt;p&gt;# Comments: 166&lt;/p&gt;
</description>
<pubDate>Fri, 18 Jan 2019 00:09:28 +0000</pubDate>
<dc:creator>paulpauper</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=5124cc50-1b3a-11e9-86cd-75b46bda693f&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOC0xMS0wOC9hLWZpZnRoLW9mLWNoaW5hLXMtaG9tZXMtYXJlLWVtcHR5LXRoYXQtcy01MC1taWxsaW9uLWFwYXJ0bWVudHM=</dc:identifier>
</item>
<item>
<title>Let’s talk about open-source sustainability</title>
<link>https://github.blog/2019-01-17-lets-talk-about-open-source-sustainability</link>
<guid isPermaLink="true" >https://github.blog/2019-01-17-lets-talk-about-open-source-sustainability</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;Do you contribute to open source software (OSS)? If you’re interested in sharing your perspective,&lt;/span&gt;&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please consider filling out the form at the bottom of this post.&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Hello, my name is Devon! I just joined GitHub as the open source product manager. I’m here to support maintainers in cultivating vital, productive communities.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is my dream job. I’m a developer with a passion for governance and economics, and I joined GitHub with the specific mission of supporting OSS. I also spend a lot of time thinking about how cities work. That might seem like an irrelevant nerdy fact, but cities and OSS share deep parallels. My favorite urban economist Alain Bertaud said, “Close proximity, which is so essential to the creativity of cities, requires special rules, shared investments, and common services.” It’s simply not enough to bring people into the same space—whether it’s virtual or physical—and expect everything to go smoothly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As the OSS community has grown in scale and importance, the way we think about working together has to evolve, too. What works in a village or a town needs to evolve to serve a metropolis. Open source has grown from a small, academic sharing network to a giant, global web of dependencies. It now forms the backbone of the internet and technology in general. Just like any growing city, we have to coordinate the knowledge, infrastructure, and tools for the good of the whole community.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OSS is an essential and special part of software development. OSS has also been the heart of GitHub since the beginning. However, there is so much more we could do to support the people behind it. I have many ideas, but first I want to hear from you.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OSS makes world-class tools available to everyone. It feels so routine now, but this is such a special part of software. Every &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;include&lt;/code&gt; statement is the contribution of a team of experts who, together, have devoted immense energy to the problem so that each developer importing their work doesn’t have to. OSS is an extraordinary version of “standing on the shoulders of giants”.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OSS maintainers and contributors build tools for the rest of us, yet they don’t have all the tools, support, and environment they need to succeed. For example:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Lack of communication resources:&lt;/strong&gt; &lt;span&gt;As projects grow, communicating with users becomes increasingly challenging. Many OSS teams find themselves building project and community management tools from scratch, sapping energy from the core project.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Work overload:&lt;/strong&gt; &lt;span&gt;Teams often find themselves exhausted when their user base grows faster than their bandwidth. Solving a big problem for many people is satisfying, but it gets more difficult over time and creates long-term sustainability issues. In many cases, the author never planned to be responsible for a critical piece of digital infrastructure. They were trying to solve their own problem, and it turned out to also be useful to many others.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Abuse:&lt;/strong&gt; &lt;span&gt;No one deserves abuse. OSS contributors are often on the receiving end of harassment, demands, and general disrespect, even as they volunteer their time to the community.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inadequate resources:&lt;/strong&gt; &lt;span&gt;OSS is everywhere, but it still faces a lack of resources. Developers and companies benefit from a vibrant OSS ecosystem, but individually they lack proportionate incentive to contribute time and money to creating and maintaining projects. This dramatically limits the value of OSS despite its enormous potential.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sparse analytics:&lt;/strong&gt; &lt;span&gt;Beyond download statistics, maintainers have limited visibility into how their software is used. They have a pulse on the day-to-day needs of the community through hands-on interaction with contributors and users, but the tools to do this could be better, and there are only a few tools that give a larger view of what’s going on.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Asymmetric recognition: &lt;span&gt;Many types of contributions go into an OSS project beyond code. Unfortunately, hard work, including project maintenance, can go unnoticed and unrecognized when it isn’t legible to the project’s users.&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Insufficient mentorship:&lt;/strong&gt; &lt;span&gt;OSS can be a challenging environment to find mentorship and learn best practices around building and running a project, and newcomers far outnumber experienced folks.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inadequate governance:&lt;/strong&gt; &lt;span&gt;As a project evolves, the framework by which the team makes, delegates, and communicates decisions must also evolve. Communities are not always well-equipped to guide that evolution.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;… and I’m sure there are more, which is why I want to hear from you!&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I want you to be part of the conversation and our roadmap. These challenges are nuanced, and they are unique to each project and community, so it’s crucial that we have an open dialogue as we focus on helping you address them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you’re an open source contributor or maintainer, please join the conversation by filling out the contact form below! I can’t wait to talk to you.&lt;/span&gt;&lt;/p&gt;


</description>
<pubDate>Thu, 17 Jan 2019 23:27:07 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:type>article</og:type>
<og:title>Let's talk about open source sustainability - The GitHub Blog</og:title>
<og:description>Do you contribute to open source software (OSS)? If you’re interested in sharing your perspective, please consider filling out the form at the bottom of this post. Hello, my name is Devon! I just joined</og:description>
<og:url>https://github.blog/2019-01-17-lets-talk-about-open-source-sustainability/</og:url>
<og:image>https://github.blog/wp-content/uploads/2019/01/Community-Updated-2X.png?resize=1024,611</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.blog/2019-01-17-lets-talk-about-open-source-sustainability/</dc:identifier>
</item>
<item>
<title>Dbeaver – Multi-platform database tool</title>
<link>https://dbeaver.io/</link>
<guid isPermaLink="true" >https://dbeaver.io/</guid>
<description>&lt;h2 class=&quot;featured-subtitle&quot;&gt;Universal Database Tool&lt;/h2&gt;
&lt;p&gt;Free multi-platform database tool for developers, SQL programmers, database administrators and analysts. Supports all popular databases: MySQL, PostgreSQL, MariaDB, SQLite, Oracle, DB2, SQL Server, Sybase, MS Access, Teradata, Firebird, Derby, etc.&lt;/p&gt;

</description>
<pubDate>Thu, 17 Jan 2019 22:08:35 +0000</pubDate>
<dc:creator>vbv</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dbeaver.io/</dc:identifier>
</item>
<item>
<title>Federal HTTPS domains that&amp;#039;ll expire soon because of US government shutdown</title>
<link>https://techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;We like to think of ourselves as nerds here at TechCrunch, which is why we’re bringing you this.&lt;/p&gt;
&lt;p&gt;During the government shutdown, security experts &lt;a href=&quot;https://news.netcraft.com/archives/2019/01/16/manufacturing-gov-and-white-house-security-suffer-under-u-s-shutdown.html&quot;&gt;noticed several federal websites&lt;/a&gt; were throwing back browser errors because the TLS certificate, which lights up your browser with “HTTPS” or flashes a padlock, had expired on many domains. And because so many federal workers have been sent home on unpaid leave — or worse, working without pay but trying to fill in for most of their furloughed department — expired certificates aren’t getting renewed. Renewing certificates doesn’t take much time or effort — sometimes just a click of a mouse. But some do cost money, and during a government shutdown, there isn’t any.&lt;/p&gt;
&lt;p&gt;Depending on the security level, most websites will kick back browser errors. Some won’t let you in at all until the expired certificate is renewed.&lt;/p&gt;
&lt;p&gt;We got thinking: How many of the major departments and agencies are at risk? We looked at the &lt;a href=&quot;https://18f.gsa.gov/2014/12/18/a-complete-list-of-gov-domains/&quot;&gt;list of government domains&lt;/a&gt; (not including subdomains) from 18F, the government’s digital services unit, which updated the list just before the shutdown. Then we filtered out all the state domains, leaving just the domains of all federal agencies and the executive branch. We put all of those domains through &lt;a href=&quot;https://github.com/Matty9191/ssl-cert-check&quot;&gt;a bash script&lt;/a&gt; that pulls information from the TLS certificate of each domain and returns its expiry value. Running that for a few hours in another bash script, we returned with a few thousand results.&lt;/p&gt;
&lt;p&gt;In other words, we poked every certificate to see if it had expired — and, if not, when it would stop working.&lt;/p&gt;
&lt;p&gt;Why does it matter? Above all else, it’s an inconvenience. Depending on how long this shutdown lasts, it won’t take long before some of the big federal sites might start throwing errors and locking users out. That could also affect third-party sites and apps that rely on those federal sites for data, such as through a developer API.&lt;/p&gt;
&lt;p&gt;Security, however, is less of a factor, despite &lt;a href=&quot;https://www.cnet.com/news/shutdown-government-sites-with-lapsed-security-certificates-pose-risk/&quot;&gt;claims&lt;/a&gt; to the contrary. &lt;a href=&quot;https://twitter.com/konklone?lang=en&quot;&gt;Eric Mill&lt;/a&gt;, a security expert who &lt;a href=&quot;https://twitter.com/konklone/status/1072562039908913154&quot;&gt;recently left 18F&lt;/a&gt;, the government’s digital agency, said that fears over expired certificates have been overblown.&lt;/p&gt;
&lt;p&gt;“The security risk to users is actually very low, since trusting a recently expired cert doesn’t in and of itself allow traffic to be intercepted,” he said &lt;a href=&quot;https://twitter.com/konklone/status/1084195941815590913?s=21&quot;&gt;in a recent tweet&lt;/a&gt;. Mill &lt;a href=&quot;https://twitter.com/konklone/status/1084196598689812481&quot;&gt;also noted&lt;/a&gt; that there’s little automation across the agencies, leading to certificates expiring and eventual downtime — especially when sites and departments are understaffed, especially given that each federal agency and department is responsible for their own website.&lt;/p&gt;
&lt;p&gt;There’s a silver lining. Any website that’s hosted on &lt;a href=&quot;https://cloud.gov/&quot;&gt;cloud.gov&lt;/a&gt;, &lt;a href=&quot;https://search.gov/&quot;&gt;search.gov&lt;/a&gt; or &lt;a href=&quot;https://federalist.18f.gov/&quot;&gt;federalist.18f.gov&lt;/a&gt; won’t go down as they rely on Let’s Encrypt certificates that automatically renew every three months.&lt;/p&gt;
&lt;p&gt;We’ve compiled the following list of domains that have and will expire during the period of the shutdown, from December 22 onwards — while removing dead links and defunct domains that no longer load. Some domains redirect to other domains that might have a certificate that expires next year, but the first domain will still fail on its expiry date.&lt;/p&gt;
&lt;p&gt;Remember, if you see a domain that’s working past its expiry, check the certificate and it’s likely been renewed. If you see any errors, feel free to &lt;a href=&quot;mailto:zack.whittaker@techcrunch.com?Subject=TC:Government%20Shutdown%20Domains&quot;&gt;drop me an email&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In all, we’ve counted five expired federal domains already, 13 domains will expire by the end of the month and another 58 domains will expire by the end of February.&lt;/p&gt;
&lt;h3&gt;Expired:&lt;/h3&gt;
&lt;h3&gt;Expiring in January:&lt;/h3&gt;
&lt;h3&gt;Federal domains that will expire by mid-February&lt;/h3&gt;
&lt;h3&gt;Federal domains that will expire by the end of February&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;All information was accurate as of January 17. Edited at 3:30pm ET by deleting citizenscience.gov and everykidinapark.gov as these are known to be domains with auto-renewing certificates.&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 17 Jan 2019 19:50:10 +0000</pubDate>
<dc:creator>jmsflknr</dc:creator>
<og:title>These are all the federal HTTPS websites that’ll expire soon because of the US government shutdown</og:title>
<og:description>We like to think of ourselves as nerds here at TechCrunch, which is why we’re bringing you this. During the government shutdown, security experts noticed several federal websites were throwing back browser errors because the TLS certificate, which lights up your browser with “HTTPS” or flashe…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/https-government1.jpg?w=600</og:image>
<og:url>http://social.techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</dc:identifier>
</item>
<item>
<title>Rust 1.32 released</title>
<link>https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html</guid>
<description>&lt;p&gt;Jan. 17, 2019 · The Rust Release Team&lt;/p&gt;&lt;div readability=&quot;235.63356164384&quot;&gt;
&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.32.0. Rust is a programming language that is empowering everyone to build reliable and efficient software.&lt;/p&gt;
&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.32.0 is as easy as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rustup update stable
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you don't have it already, you can &lt;a href=&quot;https://www.rust-lang.org/install.html&quot;&gt;get &lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes for 1.32.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;As a small side note, &lt;code&gt;rustup&lt;/code&gt; has seen some new releases lately! To update &lt;code&gt;rustup&lt;/code&gt; itself, run &lt;code&gt;rustup self update&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;What's in 1.32.0 stable&lt;/h2&gt;
&lt;p&gt;Rust 1.32.0 has a few quality of life improvements, switches the default allocator, and makes additional functions &lt;code&gt;const&lt;/code&gt;. Read on for a few highlights, or see the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes&lt;/a&gt; for additional information.&lt;/p&gt;
&lt;h4&gt;The &lt;code&gt;dbg&lt;/code&gt; macro&lt;/h4&gt;
&lt;p&gt;First up, a quality of life improvement. Are you a &quot;print debugger&quot;? If you are, and you've wanted to print out some value while working on some code, you have to do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;let x = 5;

println!(&quot;{:?}&quot;, x);

// or maybe even this
println!(&quot;{:#?}&quot;, x);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This isn't the &lt;em&gt;largest&lt;/em&gt; speed bump, but it is a lot of stuff to simply show the value of &lt;code&gt;x&lt;/code&gt;. Additionally, there's no context here. If you have several of these &lt;code&gt;println!&lt;/code&gt;s, it can be hard to tell which is which, unless you add your own context to each invocation, requiring even more work.&lt;/p&gt;
&lt;p&gt;In Rust 1.32.0, &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56395/&quot;&gt;we've added a new macro, &lt;code&gt;dbg!&lt;/code&gt;&lt;/a&gt;, for this purpose:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn main() {
    let x = 5;
    
    dbg!(x);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you run this program, you'll see:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;[src/main.rs:4] x = 5
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You get the file and line number of where this was invoked, as well as the name and value. Additionally, &lt;code&gt;println!&lt;/code&gt; prints to the standard output, so you really should be using &lt;code&gt;eprintln!&lt;/code&gt; to print to standard error. &lt;code&gt;dbg!&lt;/code&gt; does the right thing and goes to &lt;code&gt;stderr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It even works in more complex circumstances. Consider this factorial example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn factorial(n: u32) -&amp;gt; u32 {
    if n &amp;lt;= 1 {
        n
    } else {
        n * factorial(n - 1)
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we wanted to debug this, we might write it like this with &lt;code&gt;eprintln!&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn factorial(n: u32) -&amp;gt; u32 {
    eprintln!(&quot;n: {}&quot;, n);

    if n &amp;lt;= 1 {
        eprintln!(&quot;n &amp;lt;= 1&quot;);

        n
    } else {
        let n = n * factorial(n - 1);

        eprintln!(&quot;n: {}&quot;, n);

        n
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We want to log &lt;code&gt;n&lt;/code&gt; on each iteration, as well as have some kind of context for each of the branches. We see this output for &lt;code&gt;factorial(4)&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;n: 4
n: 3
n: 2
n: 1
n &amp;lt;= 1
n: 2
n: 6
n: 24
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is servicable, but not particularly great. Maybe we could work on how we print out the context to make it more clear, but now we're not debugging our code, we're figuring out how to make our debugging code better.&lt;/p&gt;
&lt;p&gt;Consider this version using &lt;code&gt;dbg!&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn factorial(n: u32) -&amp;gt; u32 {
    if dbg!(n &amp;lt;= 1) {
        dbg!(1)
    } else {
        dbg!(n * factorial(n - 1))
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We simply wrap each of the various expressions we want to print with the macro. We get this output instead:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;[src/main.rs:3] n &amp;lt;= 1 = false
[src/main.rs:3] n &amp;lt;= 1 = false
[src/main.rs:3] n &amp;lt;= 1 = false
[src/main.rs:3] n &amp;lt;= 1 = true
[src/main.rs:4] 1 = 1
[src/main.rs:5] n * factorial(n - 1) = 2
[src/main.rs:5] n * factorial(n - 1) = 6
[src/main.rs:5] n * factorial(n - 1) = 24
[src/main.rs:11] factorial(4) = 24
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Because the &lt;code&gt;dbg!&lt;/code&gt; macro returns the value of what it's debugging, instead of &lt;code&gt;eprintln!&lt;/code&gt; which returns &lt;code&gt;()&lt;/code&gt;, we need to make &lt;em&gt;no&lt;/em&gt; changes to the structure of our code. Additionally, we have &lt;em&gt;vastly&lt;/em&gt; more useful output.&lt;/p&gt;
&lt;p&gt;That's a lot to say about a little macro, but we hope it improves your debugging experience! We are contining to work on support for &lt;code&gt;gdb&lt;/code&gt; and friends as well, of course.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;jemalloc&lt;/code&gt; is removed by default&lt;/h4&gt;
&lt;p&gt;Long, long ago, Rust had a large, Erlang-like runtime. We chose to use &lt;a href=&quot;http://jemalloc.net/&quot;&gt;jemalloc&lt;/a&gt; instead of the system allocator, because it often improved performance over the default system one. Over time, we shed more and more of this runtime, and eventually almost all of it was removed, but jemalloc was not. We didn't have a way to choose a custom allocator, and so we couldn't really remove it without causing a regression for people who do need jemalloc.&lt;/p&gt;
&lt;p&gt;Also, saying that &lt;code&gt;jemalloc&lt;/code&gt; was always the default is a bit UNIX-centric, as it was only the default on &lt;em&gt;some&lt;/em&gt; platforms. Notably, the MSVC target on Windows has shipped the system allocator for a long time.&lt;/p&gt;
&lt;p&gt;Finally, while jemalloc &lt;em&gt;usually&lt;/em&gt; has great performance, that's not always the case. Additionally, it adds about 300kb to every Rust binary. We've also had a host of &lt;a href=&quot;https://github.com/rust-lang/rust/issues/36963#issuecomment-252029017&quot;&gt;other issues&lt;/a&gt; with jemalloc in the past. It has also felt a little strange that a systems language does not default to the system's allocator.&lt;/p&gt;
&lt;p&gt;For all of these reasons, once &lt;a href=&quot;https://blog.rust-lang.org/2018/08/02/Rust-1.28.html#whats-in-1.28.0-stable&quot;&gt;Rust 1.28 shipped a way to choose a global allocator&lt;/a&gt;, we started making plans to switch the default to the system allocator, and allow you to use &lt;code&gt;jemalloc&lt;/code&gt; via a crate. In Rust 1.32, we've finally finished this work, and by default, you will get the system allocator for your programs.&lt;/p&gt;
&lt;p&gt;If you'd like to continue to use jemalloc, use &lt;a href=&quot;https://crates.io/crates/jemallocator&quot;&gt;the jemallocator crate&lt;/a&gt;. In your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-toml&quot;&gt;jemallocator = &quot;0.1.8&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And in your crate root:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;#[global_allocator]
static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's it! If you don't need jemalloc, it's not forced upon you, and if you do need it, it's a few lines of code away.&lt;/p&gt;
&lt;h4&gt;Final module improvements&lt;/h4&gt;
&lt;p&gt;In the past two releases, we announced several improvements to the module system. We have one last tweak landing in 1.32.0 and the 2018 edition. Nicknamed &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56759#issuecomment-450051210&quot;&gt;&quot;uniform paths&quot;&lt;/a&gt;, it permits previously invalid import path statements to be resolved exactly the same way as non-import paths. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;enum Color { Red, Green, Blue }

use Color::*;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code did &lt;em&gt;not&lt;/em&gt; previously compile, as &lt;code&gt;use&lt;/code&gt; statements had to start with &lt;code&gt;super&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, or &lt;code&gt;crate&lt;/code&gt;. Now that the compiler supports uniform paths, this code will work, and do what you probably expect: import the variants of the &lt;code&gt;Color&lt;/code&gt; enum defined above the &lt;code&gt;use&lt;/code&gt; statement.&lt;/p&gt;
&lt;p&gt;With this change in place, we've completed our efforts at revising the module system. We hope you've been enjoying the simplified system so far!&lt;/p&gt;
&lt;h4&gt;Macro improvements&lt;/h4&gt;
&lt;p&gt;A few improvements to macros have landed in Rust 1.32.0. First, &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56072/&quot;&gt;a new &lt;code&gt;literal&lt;/code&gt; matcher&lt;/a&gt; was added:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;macro_rules! m {
    ($lt:literal) =&amp;gt; {};
}

fn main() {
    m!(&quot;some string literal&quot;);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;literal&lt;/code&gt; matches against literals of any type; string literals, numeric literals, &lt;code&gt;char&lt;/code&gt; literals.&lt;/p&gt;
&lt;p&gt;In the 2018 edition, &lt;code&gt;macro_rules&lt;/code&gt; macros can also use &lt;code&gt;?&lt;/code&gt;, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;macro_rules! bar {
    ($(a)?) =&amp;gt; {}
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; will match zero or one repetitions of the pattern, similar to the already-existing &lt;code&gt;*&lt;/code&gt; for &quot;zero or more&quot; and &lt;code&gt;+&lt;/code&gt; for &quot;one or more.&quot;&lt;/p&gt;
&lt;h3&gt;Library stabilizations&lt;/h3&gt;
&lt;p&gt;We talked above about the &lt;code&gt;dbg!&lt;/code&gt; macro, which is a big library addition. Beyond that, 19 functions were made &lt;code&gt;const fn&lt;/code&gt;s, and all integral numeric primitives now provide conversion functions to and from byte-arrays with specified endianness. These six functions are named &lt;code&gt;to_&amp;lt;endian&amp;gt;_bytes&lt;/code&gt; and &lt;code&gt;from_&amp;lt;endian&amp;gt;_bytes&lt;/code&gt;, where &lt;code&gt;&amp;lt;endian&amp;gt;&lt;/code&gt; is one of:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;ne&lt;/code&gt; - native endianness&lt;/li&gt;
&lt;li&gt;&lt;code&gt;le&lt;/code&gt; - little endian&lt;/li&gt;
&lt;li&gt;&lt;code&gt;be&lt;/code&gt; - big endian&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Cargo features&lt;/h3&gt;
&lt;p&gt;Cargo gained &lt;a href=&quot;https://github.com/rust-lang/cargo/pull/6218/&quot;&gt;&lt;code&gt;cargo c&lt;/code&gt; as an alias for &lt;code&gt;cargo check&lt;/code&gt;&lt;/a&gt;, and now &lt;a href=&quot;https://github.com/rust-lang/cargo/pull/6242/&quot;&gt;allows usernames in registry URLs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2&gt;Contributors to 1.32.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.32.0. We couldn't have done it without all of you. &lt;a href=&quot;https://thanks.rust-lang.org/rust/1.32.0&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 17 Jan 2019 19:47:19 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>Announcing Rust 1.32.0 | Rust Blog</og:title>
<og:description>Empowering everyone to build reliable and efficient software.</og:description>
<og:image>http://new-rust-www.herokuapp.com/static/images/rust-social-wide.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html</dc:identifier>
</item>
<item>
<title>Google is buying Fossil’s smartwatch tech for $40M</title>
<link>https://techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</guid>
<description>&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Rumors about a Pixel Watch have abounded for years. Such a device would certainly make sense as Google attempts to prove the viability of its struggling wearable operating system, Wear OS. Seems the company is finally getting serious about the prospect. Today Fossil announced plans to sell its smartwatch IP to the software giant for $40 million.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Sounds like Google will be getting a nice head start here as well. The deal pertains to “a smartwatch technology currently under development” and involves the transfer of a number of Fossil employees to team Google.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;“Wearables, built for wellness, simplicity, personalization and helpfulness, have the opportunity to improve lives by bringing users the information and insights they need quickly, at a glance,” Wear OS VP Stacey Burr said in a statement. “The addition of Fossil Group’s technology and team to Google demonstrates our commitment to the wearables industry by enabling a diverse portfolio of smartwatches and supporting the ever-evolving needs of the vitality-seeking, on-the-go consumer.”&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;speakable-summary&quot;&gt;Like the Pixel before it, a &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/google&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;google&quot;&gt;Google&lt;/a&gt;-created smartwatch could ultimately serve as a proving group for the company’s open operating system. Wearables in general have struggled recently, and Wear OS is certainly not an exception. A &lt;a href=&quot;https://techcrunch.com/2018/08/29/googles-wear-os-is-getting-a-new-look/&quot;&gt;rebrand and redesign&lt;/a&gt; haven’t done much to shake loose the cobwebs. In fact, Fossil has remained a &lt;a href=&quot;https://techcrunch.com/2018/08/08/fossil-announces-new-update-android-wear-watches-with-hr-tracking-gps/&quot;&gt;rare constant&lt;/a&gt;, developing reasonably priced, fitness-focused products sporting the software.&lt;/p&gt;
&lt;p&gt;The smartwatch category continues to be dominated by Apple’s offerings, and top competitors Fitbit and Samsung have opted to go different routes, supporting the Pebble-based Fitbit OS and Tizen, respectively. All of this has left Google struggling to differentiate itself and its partners’ offerings. Fossil’s team certainly has the know how to build solid watch hardware, so this could prove a solid match.&lt;/p&gt;
&lt;p&gt;Fossil is quick to note, of course, that it’s still got a team of 200 working on R&amp;amp;D, and while the company is no doubt losing some quality employees, it’s still committed to wearable tech.&lt;/p&gt;
&lt;p&gt;“Fossil Group has experienced significant success in its wearables business by focusing on product design and development informed by our strong understanding of consumers’ needs and style preferences,” Fossil EVP Greg McKelvey said in a statement. “We’ve built and advanced a technology that has the potential to improve upon our existing platform of smartwatches. Together with Google, our innovation partner, we’ll continue to unlock growth in wearables.”&lt;/p&gt;
&lt;p&gt;From the outside, at least, this looks to be a similar (albeit much smaller scale) deal to the one &lt;a href=&quot;https://techcrunch.com/2018/01/29/google-htc/&quot;&gt;Google struck with HTC&lt;/a&gt; to help bolster its smartphone offerings.&lt;/p&gt;
</description>
<pubDate>Thu, 17 Jan 2019 18:36:09 +0000</pubDate>
<dc:creator>toufiqbarhamov</dc:creator>
<og:title>Google is buying Fossil’s smartwatch tech for $40 million</og:title>
<og:description>Rumors about a Pixel Watch have abounded for years. Such a device would certainly make sense as Google attempts to prove the viability of its struggling wearable operating system, Wear OS. Seems the company is finally getting serious about the prospect. Today Fossil announced plans to sell its smar…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/fossil-watches.png?w=556</og:image>
<og:url>http://social.techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</dc:identifier>
</item>
<item>
<title>Going old school: how I replaced Facebook with email</title>
<link>https://blog.chaddickerson.com/2019/01/09/replacing-facebook/</link>
<guid isPermaLink="true" >https://blog.chaddickerson.com/2019/01/09/replacing-facebook/</guid>
<description>&lt;p&gt;In November 2017, I deactivated my account on Facebook. I didn’t leave Facebook for moral reasons back then but more because it was starting to feel like a waste of time and valuable brain cycles that I wanted to focus elsewhere. (I realize some people can’t leave Facebook completely for work or other personal reasons.) There were aspects of Facebook that I thought I would miss — the relative ease of use, keeping up with what is going on in lots of people’s lives, etc — so I decided to work out a new way of communicating that was completely Facebook-free after using Facebook heavily for many years. I haven’t missed it at all. This post is about what I did and what I learned.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My history with Facebook and why I left&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I had been on Facebook for a very long time (11 years) and had accumulated hundreds of “friends” on the platform. In the early days, it was fun and I enjoyed keeping up with people. But I kept noticing a great paradox in my life: I felt like I didn’t have enough time for the people I cared about (including myself) yet I found myself scrolling through Facebook for hours each week peering into the lives of hundreds of people, some of whom I honestly didn’t know very well and never knew very well. My brain got unwittingly wrapped up in their dramas, their political arguments, their triumphs and tragedies. I saw children fighting with their parents in the comments, political battles, people working out places to meet up — activities usually reserved for the private sphere. When I really thought about it, observing all of this seemed like a really odd way to spend significant time and energy. There are many people out there who I like and would love to get to know better but it doesn’t mean I have to keep up with all of them at that level of granularity.&lt;/p&gt;
&lt;p&gt;The Facebook “privacy” model is also maddening and can be surprisingly dehumanizing. I remember once commenting on an old high school friend’s post to gently point out a factual error on a topic of which I had first-hand knowledge (note to self: &lt;em&gt;never&lt;/em&gt; worth it on social media) and got attacked by someone I didn’t know for being a “fancy New York CEO.” I had developed a thick skin at that point (um, from being a CEO) so that specific incident didn’t bother me so much — but I it reinforced something I had been thinking: “This environment is incredibly WEIRD. It’s supposed to be about human connection yet so much of what occurs is dehumanizing. Why do we &lt;em&gt;do this&lt;/em&gt; to ourselves? This whole thing is very unhealthy.” So I decided to step away. (I stayed on Twitter because I find it fun, I learn a lot from smart people, following doesn’t have to be reciprocal, and there is zero pretense of intimacy, but that’s another story.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keeping up with close friends and family post-Facebook: a simple email list&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;People in my life didn’t have much to say about me leaving Facebook but I did get a few&lt;br/&gt;plaintive emails. &lt;em&gt;How will we keep up with you? How will we see photos of your child?&lt;/em&gt; The implication was that without Facebook, all would be lost and we would lose contact forever. I’m exaggerating a little but I was legitimately surprised at the sense of finality that some people seemed to feel, as if there would be no other possibilities for us to connect to each other once I left. &lt;img data-attachment-id=&quot;1717&quot; data-permalink=&quot;https://blog.chaddickerson.com/2019/01/09/replacing-facebook/email_shiny_icon/&quot; data-orig-file=&quot;https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=231&amp;amp;h=231&quot; data-orig-size=&quot;512,512&quot; data-comments-opened=&quot;0&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;email_shiny_icon&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=231&amp;amp;h=231?w=300&quot; data-large-file=&quot;https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=231&amp;amp;h=231?w=512&quot; class=&quot; wp-image-1717 alignright&quot; src=&quot;https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=231&amp;amp;h=231&quot; alt=&quot;email_shiny_icon&quot; width=&quot;231&quot; height=&quot;231&quot; srcset=&quot;https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=231&amp;amp;h=231 231w, https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=462&amp;amp;h=462 462w, https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=150&amp;amp;h=150 150w, https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png?w=300&amp;amp;h=300 300w&quot; sizes=&quot;(max-width: 231px) 100vw, 231px&quot;/&gt;Sure, Facebook might be the most &lt;em&gt;convenient&lt;/em&gt; way to connect but I never thought of convenience as the hallmark of good relationships. That said, there were people I did want to stay in touch with so I came up with a plan: start a very small mailing list via &lt;a href=&quot;https://mailchimp.com/help/about-the-forever-free-plan/&quot;&gt;Mailchimp’s Forever Free plan&lt;/a&gt; to stay in touch with very close friends and my family.  I’ve sent three emails this year and it’s been a great overall experience. Here’s what I learned:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lesson 1: Quite a few of the people who mattered most to me were not on Facebook.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My mailing list had to start somewhere. To assemble it, I looked at three things: 1) my list of Facebook friends, 2) my personal address book, and 3) the past couple of years people I emailed (by looking at my Sent folder). I have been obsessive about keeping contact info over the past 20+ years so my address book has about 3000 entries in it. As I looked at all of these sources, I ran across names of people who I had had meaningful relationships at some point in my life but had never been on Facebook. One example was one of my aunts who is in her 80s who lives in Durham, NC who would bring me homemade sausage biscuits at my dorm when I went to Duke (as a native Southerner, there is literally nothing more comforting than biscuits from a family member). Using Facebook had given me a false sense that “everyone is there” but she wasn’t. I didn’t realize until I asked around in the family that she had an iPad and was a regular email user. There were more like her than I thought. Some of the entries I had in my address book were outdated but I emailed some of those people with the address I had and heard back nearly every time. I had to track down a couple of people through mutual friends. All of this took more time than clicking “yes” on a friend request on Facebook but the effort was its own reward as it led me to very deliberately reconnect with people along the way. Put simply, using Facebook skews your contact towards other people who use Facebook and that can leave a lot of people you really care about out of your life.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lesson 2: Email is more intimate and leads to better conversations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On Facebook, I think most people realize that their posts can be seen by many people so a lot of thought goes into what they post. We’ve gotten so used to it that it seems unremarkable but there’s definitely a performative aspect when you are constantly communicating in front of all of your friends at the same time (seriously, isn’t this a weird way to communicate when you think about it?) Also, you never &lt;em&gt;really&lt;/em&gt; know who is going to read what you write given the wacky permissions on Facebook (see my “fancy New York CEO” anecdote above). There is very little performative aspect to writing an email to a known list of people since you’re not (consciously or subconsciously) fishing for “likes” or other comments.  My email list is broadcast-only but any replies go directly to me. The replies I get are much more personal and informal than what I used to see on Facebook. There are no unwanted ads shoving themselves into the conversation. It’s more like old-school letter-writing: intimate, no outside observers, letting your guard down. I don’t sit there and think about what other people might think about what I’m writing — just the person who emailed me. To me, this is closer to what true friendship is like.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lesson 3: You control the narrative completely in email which provides a much better opportunity for story-telling.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Social media platforms have algorithms that control what you see and the order in which you see it. As I put my emails together, I didn’t realize just how much control I had given up on Facebook until I experienced the absolute control of a personal email. Facebook pushes the cognitive overhead of piecing together the specifics of your friends’ lives by parsing a constant stream of posts, news, and ads. There is no beginning, middle, and end with Facebook. If as Shakespeare wrote all the world’s a stage and we are the players in the story, Facebook is a play where the actors are constantly interrupted by the blare of news headlines or the urgency of advertising messages. Every word and pixel in the content of my email is controlled by me (with the minor exception of a few items in the Mailchimp footer, but no big deal). No ads, no news headlines. It’s hard to read things out of context because the email itself &lt;em&gt;is&lt;/em&gt; the context.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lesson 4: With email, I’m completely free to switch platforms and have lots of choices&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mailchimp is a great platform and a company I trust but if something changed, it would be very little hassle to migrate my list to another platform and company. Email has been around a long time and exporting and importing a list are very easy. I never need to export the content I put into the system because it’s in my email inbox.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lesson 5: Occasionally, I didn’t know what people were talking about in social situations&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’m occasionally in group conversations at parties and gatherings where people are talking knowingly about some experience most people in the group saw on Facebook already. I can usually figure things out by listening or asking questions. It’s also more fun &lt;em&gt;not to know&lt;/em&gt; sometimes so you can, you know, talk about it in person like people used to do.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lesson 6: It’s somewhat complicated to do it this way, but ultimately worth it&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The overall setup and technical aspects are definitely more involved. I don’t assume that anyone wants email from me so I initially sent out an email to people with a link inviting them to the list. Following that link led to a double opt-in process that was difficult for some less tech-savvy people so I had to do some tech support along the way. (Some people either didn’t get the invite email or didn’t want to get my emails, and that’s cool, too!) I’m very comfortable with tech issues but I hadn’t done a lot of hands-on email work in a long time so I had to learn how to use the various features of Mailchimp, which is “easy” but still work. I had to have some sort of design and that required some work, but Mailchimp has reasonable templates you can use to start (besides, great design isn’t that important in this context). Writing the emails takes a lot of work in an absolute sense but pales in comparison to the time I was wasting on Facebook. I’m not subject to aggressive “growth hacking” from Mailchimp to send out my email and I completely forget about it for months at a time (as opposed to Facebook, which was always trying to burrow into my lizard brain to try to make me think about it).&lt;/p&gt;
&lt;p&gt;It may not be for everyone but I’m really happy with this new setup. If you have any questions about it, feel &lt;a href=&quot;https://twitter.com/chaddickerson/status/1083004337041952769&quot;&gt;free to ask in this thread on Twitter&lt;/a&gt; and I’ll do my best to answer.&lt;/p&gt;


</description>
<pubDate>Thu, 17 Jan 2019 18:22:46 +0000</pubDate>
<dc:creator>bellinom</dc:creator>
<og:type>article</og:type>
<og:title>Going old school: how I replaced Facebook with email</og:title>
<og:url>https://blog.chaddickerson.com/2019/01/09/replacing-facebook/</og:url>
<og:description>In November 2017, I deactivated my account on Facebook. I didn’t leave Facebook for moral reasons back then but more because it was starting to feel like a waste of time and valuable brain cy…</og:description>
<og:image>https://jchaddickerson.files.wordpress.com/2019/01/email_shiny_icon.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.chaddickerson.com/2019/01/09/replacing-facebook/</dc:identifier>
</item>
<item>
<title>Count the people around you by monitoring wifi signals</title>
<link>https://github.com/schollz/howmanypeoplearearound</link>
<guid isPermaLink="true" >https://github.com/schollz/howmanypeoplearearound</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Count the number of people around you 👨‍👨‍👦 by monitoring wifi signals 📡.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;howmanypeoplearearound&lt;/em&gt; calculates the number of people in the vicinity using the approximate number of smartphones as a proxy (since &lt;a href=&quot;https://twitter.com/conradhackett/status/701798230619590656&quot; rel=&quot;nofollow&quot;&gt;~70% of people have smartphones nowadays&lt;/a&gt;). A cellphone is determined to be in proximity to the computer based on sniffing WiFi probe requests. Possible uses of &lt;em&gt;howmanypeoplearearound&lt;/em&gt; include: monitoring foot traffic in your house with Raspberry Pis, seeing if your roommates are home, etc.&lt;/p&gt;
&lt;p&gt;Tested on Linux (Raspbian and Ubuntu) and Mac OS X.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;It may be illegal&lt;/strong&gt; to monitor networks for MAC addresses, especially on networks that &lt;em&gt;you do not own&lt;/em&gt;. Please check your country's laws (for US &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/18/2511&quot; rel=&quot;nofollow&quot;&gt;Section 18 U.S. Code § 2511&lt;/a&gt;) - &lt;a href=&quot;https://github.com/schollz/howmanypeoplearearound/issues/4&quot;&gt;discussion&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;For a video walkthrough on how to install, checkout &lt;a href=&quot;https://youtu.be/dLzouUfJyMM?t=3m2s&quot; rel=&quot;nofollow&quot;&gt;PNPtutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;Python 2.7 or preferably Python 3 must be installed on your machine with the &lt;code&gt;pip&lt;/code&gt; command also available.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  python -V
  pip -V
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;WiFi adapter that supports monitor mode&lt;/h3&gt;
&lt;p&gt;There are a number of possible USB WiFi adapters that support monitor mode. Here's a list that are popular:&lt;/p&gt;
&lt;p&gt;Namely you want to find a USB adapter with one of the following chipsets: Atheros AR9271, Ralink RT3070, Ralink RT3572, or Ralink RT5572.&lt;/p&gt;
&lt;h3&gt;Mac OS X&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;  brew install wireshark
  brew cask install wireshark-chmodbpf
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Linux &lt;a href=&quot;https://www.wireshark.org/docs/man-pages/tshark.html&quot; rel=&quot;nofollow&quot;&gt;tshark&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;sudo apt-get install tshark
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then update it so it can be run as non-root:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo dpkg-reconfigure wireshark-common     (select YES)
sudo usermod -a -G wireshark ${USER:-root}
newgrp wireshark
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;pip install howmanypeoplearearound
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Run&lt;/h2&gt;
&lt;h3&gt;Quickstart&lt;/h3&gt;
&lt;p&gt;To run, simply type in&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound
Using wlan1 adapter and scanning &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; 60 seconds...
[&lt;span class=&quot;pl-k&quot;&gt;==================================================&lt;/span&gt;] 100%        0s left
There are about 3 people around.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will be prompted for the WiFi adapter to use for scanning. Make sure to use an adapter that supports &quot;monitor&quot; mode.&lt;/p&gt;
&lt;h3&gt;Docker alternative&lt;/h3&gt;
&lt;p&gt;If Docker is installed locally and you want to take &lt;em&gt;howmanypeoplearearound&lt;/em&gt; out for a quick spin, you can try the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Copy Dockerfile from this repo in your current working directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker build -t howmanypeoplearearound .&lt;/code&gt; # that . at the end is important&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -it --net=host --name howmanypeoplearearound howmanypeoplearearound&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;NOTE: This Docker alternative is known to work on Ubuntu but &lt;em&gt;not&lt;/em&gt; on Mac OS X. Feedback on other platforms would be appreciated.&lt;/p&gt;
&lt;h3&gt;Options&lt;/h3&gt;
&lt;p&gt;You can modify the scan time, designate the adapter, or modify the output using some command-line options.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound --help

Options:
  -a, --adapter TEXT   adapter to use
  -z, --analyze TEXT   analyze file
  -s, --scantime TEXT  &lt;span class=&quot;pl-k&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; seconds to scan
  -o, --out TEXT       output cellphone data to file
  -v, --verbose        verbose mode
  --number             just print the number
  -j, --jsonprint      print JSON of cellphone data
  -n, --nearby         only quantify signals that are nearby (rssi &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; -70)
  --nocorrection       &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; not apply correction
  --loop               loop forever
  --sort               sort cellphone data by distance (rssi)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Print JSON&lt;/h3&gt;
&lt;p&gt;You can generate an JSON-formatted output to see what kind of phones are around:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound -o test.json -a wlan1
[&lt;span class=&quot;pl-k&quot;&gt;==================================================&lt;/span&gt;] 100%         0s left
There are about 4 people around.
$ cat test.json &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; python3 -m json.tool
[
  {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;rssi&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: -86.0,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mac&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;90:e7:c4:xx:xx:xx&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;company&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTC Corporation&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  },
  {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;rssi&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: -84.0,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mac&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;80:e6:50:xx:xx:xx&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;company&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Apple, Inc.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  },
  {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;rssi&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: -49.0,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mac&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ac:37:43:xx:xx:xx&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;company&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTC Corporation&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A higher rssi means closer (one of these phones is mine, and the other two are my roommates' who were upstairs).&lt;/p&gt;
&lt;h3&gt;Run forever&lt;/h3&gt;
&lt;p&gt;You can add &lt;code&gt;--loop&lt;/code&gt; to make this run forever and append new lines an output file, &lt;code&gt;test.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound -o test.json -a wlan1 --loop
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Visualize&lt;/h3&gt;
&lt;p&gt;You can visualize the output from a looped command via a browser using:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound --analyze test.json 
Wrote index.html
Open browser to http://localhost:8001
Type Ctl+C to &lt;span class=&quot;pl-c1&quot;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then just open up &lt;code&gt;index.html&lt;/code&gt; in a browser and you should see plots. The first plot shows the number of people over time. Here you can see that people start arriving at work place around 8-9am (when work starts!).&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://cloud.githubusercontent.com/assets/6550035/26174159/b478b764-3b0b-11e7-9600-2aa215b789d0.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/6550035/26174159/b478b764-3b0b-11e7-9600-2aa215b789d0.png&quot; alt=&quot;newplot&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The second plot shows the RSSI values for the mac addresses seen. You can double-click on one of them in particular to highlight that trajectory, as I have done here for my phone (you can see when I leave from and when I arrive to work!):&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://cloud.githubusercontent.com/assets/6550035/26174160/b4911ae8-3b0b-11e7-93b2-92c3efaa01aa.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/6550035/26174160/b4911ae8-3b0b-11e7-93b2-92c3efaa01aa.png&quot; alt=&quot;newplot 1&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;howmanypeoplearearound&lt;/em&gt; counts up the number of probe requests coming from cellphones in a given amount of time. The probe requests can be &quot;sniffed&quot; from a monitor-mode enabled WiFi adapter using &lt;code&gt;tshark&lt;/code&gt;. An acccurate count does depend on everyone having cellphone and also scanning long enough (1 - 10 minutes) to capture the packet when a phone pings the WiFi network (which happens every 1 to 10 minutes unless the phone is off or WiFi is disabled).&lt;/p&gt;
&lt;p&gt;This is a simplification of another program I wrote, &lt;a href=&quot;https://github.com/schollz/find-lf&quot;&gt;find-lf&lt;/a&gt; which uses a similar idea with a cluster of Raspberry Pis to geolocate positions of cellphones within the vicinity.&lt;/p&gt;

&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 17 Jan 2019 17:01:46 +0000</pubDate>
<dc:creator>captn3m0</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/6550035?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>schollz/howmanypeoplearearound</og:title>
<og:url>https://github.com/schollz/howmanypeoplearearound</og:url>
<og:description>Count the number of people around you :family_man_man_boy: by monitoring wifi signals :satellite: - schollz/howmanypeoplearearound</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/schollz/howmanypeoplearearound</dc:identifier>
</item>
</channel>
</rss>