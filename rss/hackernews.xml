<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Openwifi: Linux mac80211 compatible full-stack 802.11/Wi-Fi design based on SDR</title>
<link>https://github.com/open-sdr/openwifi</link>
<guid isPermaLink="true" >https://github.com/open-sdr/openwifi</guid>
<description>&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/open-sdr/openwifi/blob/master/openwifi-arch.jpg&quot;&gt;&lt;img src=&quot;https://github.com/open-sdr/openwifi/raw/master/openwifi-arch.jpg&quot; width=&quot;900&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;openwifi:&lt;/strong&gt; Linux mac80211 compatible full-stack IEEE802.11/Wi-Fi design based on SDR (Software Defined Radio).&lt;/p&gt;
&lt;p&gt;This repository includes Linux driver and software. &lt;a href=&quot;https://github.com/open-sdr/openwifi-hw&quot;&gt;openwifi-hw&lt;/a&gt; repository has the FPGA design. [&lt;a href=&quot;https://github.com/open-sdr/openwifi/tree/master/doc&quot;&gt;Project document&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;https://github.com/open-sdr/openwifi#Videos&quot;&gt;Videos&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Papers&quot;&gt;Papers&lt;/a&gt;] [openwifi &lt;a href=&quot;https://lists.ugent.be/wws/subscribe/openwifi&quot; rel=&quot;nofollow&quot;&gt;maillist&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Cite-openwifi-project&quot;&gt;Cite openwifi project&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Openwifi code has dual licenses. AGPLv3 is the opensource license. For non-opensource license, please contact &lt;a href=&quot;mailto:Filip.Louagie@UGent.be&quot;&gt;Filip.Louagie@UGent.be&lt;/a&gt;. Openwifi project also leverages some 3rd party modules. It is user's duty to check and follow licenses of those modules according to the purpose/usage. You can find &lt;a href=&quot;https://github.com/analogdevicesinc/hdl/blob/master/LICENSE&quot;&gt;an example explanation from Analog Devices&lt;/a&gt; for this compound license conditions. &lt;a href=&quot;https://github.com/open-sdr/openwifi/blob/master/CONTRIBUTING.md&quot;&gt;[How to contribute]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;802.11a/g&lt;/li&gt;
&lt;li&gt;802.11n MCS 0~7 (Only PHY rx for now. Full system support of 802.11n will come soon)&lt;/li&gt;
&lt;li&gt;20MHz bandwidth; 70 MHz to 6 GHz frequency range&lt;/li&gt;
&lt;li&gt;Mode tested: Ad-hoc; Station; AP, Monitor&lt;/li&gt;
&lt;li&gt;DCF (CSMA/CA) low MAC layer in FPGA (10us SIFS is achieved)&lt;/li&gt;
&lt;li&gt;Configurable channel access priority parameters:
&lt;ul&gt;&lt;li&gt;duration of RTS/CTS, CTS-to-self&lt;/li&gt;
&lt;li&gt;SIFS/DIFS/xIFS/slot-time/CW/etc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Time slicing based on MAC address&lt;/li&gt;
&lt;li&gt;Easy to change bandwidth and frequency:
&lt;ul&gt;&lt;li&gt;2MHz for 802.11ah in sub-GHz&lt;/li&gt;
&lt;li&gt;10MHz for 802.11p/vehicle in 5.9GHz&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;On roadmap: &lt;strong&gt;802.11ax&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Performance (AP: openwifi at channel 44, client: TL-WDN4200 N900 USB Dongle):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AP --&amp;gt; client: 30.6Mbps(TCP), 38.8Mbps(UDP)&lt;/li&gt;
&lt;li&gt;client --&amp;gt; AP: 17.0Mbps(TCP), 21.5Mbps(UDP)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Supported SDR platforms:&lt;/strong&gt; (Check &lt;a href=&quot;https://github.com/open-sdr/openwifi#Porting-guide&quot;&gt;Porting guide&lt;/a&gt; for your new board if it isn't in the list)&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;board_name&lt;/th&gt;
&lt;th&gt;board combination&lt;/th&gt;
&lt;th&gt;status&lt;/th&gt;
&lt;th&gt;SD card img&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;4.3349753694581&quot;&gt;&lt;tr readability=&quot;1.71875&quot;&gt;&lt;td&gt;zc706_fmcs2&lt;/td&gt;
&lt;td&gt;Xilinx ZC706 dev board + FMCOMMS2/3/4&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://users.ugent.be/~xjiao/openwifi-1.1.0-taiyuan-3-32bit.img.xz&quot; rel=&quot;nofollow&quot;&gt;32bit img&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.6785714285714&quot;&gt;&lt;td&gt;zed_fmcs2&lt;/td&gt;
&lt;td&gt;Xilinx zed board + FMCOMMS2/3/4&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://users.ugent.be/~xjiao/openwifi-1.1.0-taiyuan-3-32bit.img.xz&quot; rel=&quot;nofollow&quot;&gt;32bit img&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;adrv9364z7020&lt;/td&gt;
&lt;td&gt;ADRV9364Z7020 SOM&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://users.ugent.be/~xjiao/openwifi-1.1.0-taiyuan-3-32bit.img.xz&quot; rel=&quot;nofollow&quot;&gt;32bit img&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;adrv9361z7035&lt;/td&gt;
&lt;td&gt;ADRV9361Z7035 SOM&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://users.ugent.be/~xjiao/openwifi-1.1.0-taiyuan-3-32bit.img.xz&quot; rel=&quot;nofollow&quot;&gt;32bit img&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.71875&quot;&gt;&lt;td&gt;zc702_fmcs2&lt;/td&gt;
&lt;td&gt;Xilinx ZC702 dev board + FMCOMMS2/3/4&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://users.ugent.be/~xjiao/openwifi-1.1.0-taiyuan-3-32bit.img.xz&quot; rel=&quot;nofollow&quot;&gt;32bit img&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.7272727272727&quot;&gt;&lt;td&gt;zcu102_fmcs2&lt;/td&gt;
&lt;td&gt;Xilinx ZCU102 dev board + FMCOMMS2/3/4&lt;/td&gt;
&lt;td&gt;Done&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://users.ugent.be/~xjiao/openwifi-1.1.0-taiyuan-3-64bit.img.xz&quot; rel=&quot;nofollow&quot;&gt;64bit img&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;zcu102_9371&lt;/td&gt;
&lt;td&gt;Xilinx ZCU102 dev board + ADRV9371&lt;/td&gt;
&lt;td&gt;Future&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;ul&gt;&lt;li&gt;board_name is used to identify FPGA design in openwifi-hw/boards/&lt;/li&gt;
&lt;li&gt;Don't have any boards? Or you like JTAG boot instead of SD card? Check our test bed &lt;a href=&quot;https://doc.ilabt.imec.be/ilabt/wilab/tutorials/openwifi.html&quot; rel=&quot;nofollow&quot;&gt;w-iLab.t&lt;/a&gt; tutorial.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;[&lt;a href=&quot;https://github.com/open-sdr/openwifi#Quick-start&quot;&gt;Quick start&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Basic-operations&quot;&gt;Basic operations&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Update-FPGA&quot;&gt;Update FPGA&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Update-Driver&quot;&gt;Update Driver&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Update-sdrctl&quot;&gt;Update sdrctl&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Easy-Access-and-etc&quot;&gt;Easy Access and etc&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;https://github.com/open-sdr/openwifi#Build-openwifi-Linux-img-from-scratch&quot;&gt;Build openwifi Linux img from scratch&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Special-note-for-11b&quot;&gt;Special note for 11b&lt;/a&gt;] [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Porting-guide&quot;&gt;Porting guide&lt;/a&gt;]&lt;/p&gt;
&lt;h2&gt;Quick start&lt;/h2&gt;
&lt;ul readability=&quot;12&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Burn openwifi board specific img file (from the table) into a SD card (&quot;Open With Disk Image Writer&quot;. Or &quot;dd&quot; command after unzip). The SD card has two partitions: BOOT and rootfs. You need to config the &lt;strong&gt;correct files in the BOOT partition&lt;/strong&gt; according to the &lt;strong&gt;board you have&lt;/strong&gt; by operation on your computer:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Copy files in &lt;strong&gt;openwifi/board_name&lt;/strong&gt; to the base directory of BOOT partiton.&lt;/li&gt;
&lt;li&gt;Copy &lt;strong&gt;openwifi/zynqmp-common/Image&lt;/strong&gt; (zcu102 board) or &lt;strong&gt;openwifi/zynq-common/uImage&lt;/strong&gt; (other boards) to the base directory of BOOT partiton&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Connect two antennas to RXA/TXA ports. Config the board to SD card boot mode (check the board manual). Insert the SD card to the board. Power on.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Login to the board from your PC (PC Ethernet should have IP 192.168.10.1) with password &lt;strong&gt;openwifi&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ssh root@192.168.10.122
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;On board, run openwifi AP and the on board webserver&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;~/openwifi/fosdem.sh
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;After you see the &quot;openwifi&quot; SSID on your device (Phone/Laptop/etc), connect it. Browser to 192.168.13.1 on your deivce, you should see the webpage hosted by the webserver on board.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Note 1: If your device doesn't support 5GHz (ch44), please change the &lt;strong&gt;hostapd-openwifi.conf&lt;/strong&gt; on board and re-run fosdem.sh.&lt;/li&gt;
&lt;li&gt;Note 2: After ~2 hours, the Viterbi decoder will halt (Xilinx Evaluation License). Just power cycle the board if it happens. (If output of &quot;./sdrctl dev sdr0 get reg rx 20&quot; is always the same, it means the decoder halts)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;To give the Wi-Fii client internet access, configure routing/NAT &lt;strong&gt;on the PC&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo sysctl -w net.ipv4.ip_forward=1
sudo iptables -t nat -A POSTROUTING -o ethY -j MASQUERADE
sudo ip route add 192.168.13.0/24 via 192.168.10.122 dev ethX
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ethX&lt;/strong&gt; is the PC NIC name connecting the board. &lt;strong&gt;ethY&lt;/strong&gt; is the PC NIC name connecting internet.&lt;/p&gt;
&lt;p&gt;If you want, uncommenting &quot;net.ipv4.ip_forward=1&quot; in /etc/sysctl.conf to make IP forwarding persistent on PC.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Basic operations&lt;/h2&gt;
&lt;p&gt;The board actually is an Linux/Ubuntu computer which is running &lt;strong&gt;hostapd&lt;/strong&gt; to offer Wi-Fi AP functionality over the Wi-Fi Network Interface (NIC). The NIC is implemented by openwifi-hw FPGA design. We use the term &lt;strong&gt;&quot;On board&quot;&lt;/strong&gt; to indicate that the commands should be executed after ssh login to the board. &lt;strong&gt;&quot;On PC&quot;&lt;/strong&gt; means the commands should run on PC.&lt;/p&gt;
&lt;h2&gt;Update FPGA&lt;/h2&gt;
&lt;p&gt;Since the pre-built SD card image might not have the latest bug-fixes/updates, it is recommended to udpate the fpga bitstream on board.&lt;/p&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li&gt;Install Vivado/SDK 2018.3 (If you don't need to generate new FPGA bitstream, WebPack version without license is enough)&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;Setup environment variables (use absolute path):
&lt;pre&gt;
&lt;code&gt;export XILINX_DIR=your_Xilinx_directory
export OPENWIFI_DIR=your_openwifi_directory
export BOARD_NAME=your_board_name
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;Get the latest FPGA bitstream from openwifi-hw, generate BOOT.BIN and transfer it on board via ssh channel:
&lt;pre&gt;
&lt;code&gt;$OPENWIFI_DIR/user_space/get_fpga.sh $OPENWIFI_DIR

For Zynq 7000:
$OPENWIFI_DIR/user_space/boot_bin_gen.sh $OPENWIFI_DIR $XILINX_DIR $BOARD_NAME

For Zynq MPSoC (like zcu102 board):
$OPENWIFI_DIR/user_space/boot_bin_gen_zynqmp.sh $OPENWIFI_DIR $XILINX_DIR $BOARD_NAME

scp $OPENWIFI_DIR/kernel_boot/boards/$BOARD_NAME/output_boot_bin/BOOT.BIN root@192.168.10.122:
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;On board: Put the BOOT.BIN into the BOOT partition.
&lt;pre&gt;
&lt;code&gt;mount /dev/mmcblk0p1 /mnt
cp ~/BOOT.BIN /mnt
umount /mnt
&lt;/code&gt;
&lt;/pre&gt;
&lt;strong&gt;Power cycle&lt;/strong&gt; the board to load new FPGA bitstream.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Update Driver&lt;/h2&gt;
&lt;p&gt;Since the pre-built SD card image might not have the latest bug-fixes/updates, it is recommended to udpate the driver on board.&lt;/p&gt;
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;3&quot;&gt;Prepare Analog Devices Linux kernel source code (only need to run once):
&lt;pre&gt;
&lt;code&gt;$OPENWIFI_DIR/user_space/prepare_kernel.sh $OPENWIFI_DIR $XILINX_DIR ARCH_BIT
(For Zynq 7000, ARCH_BIT should be 32, for Zynq MPSoC, ARCH_BIT should be 64)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;Compile the latest openwifi driver
&lt;pre&gt;
&lt;code&gt;$OPENWIFI_DIR/driver/make_all.sh $OPENWIFI_DIR $XILINX_DIR ARCH_BIT
(For Zynq 7000, ARCH_BIT should be 32, for Zynq MPSoC, ARCH_BIT should be 64)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;Copy the driver files to the board via ssh channel
&lt;pre&gt;
&lt;code&gt;scp `find $OPENWIFI_DIR/driver/ -name \*.ko` root@192.168.10.122:openwifi/
&lt;/code&gt;
&lt;/pre&gt;
Now you can use &lt;strong&gt;wgd.sh&lt;/strong&gt; on board to load the new openwifi driver.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Update sdrctl&lt;/h2&gt;
&lt;h2&gt;Easy Access and etc&lt;/h2&gt;
&lt;ul readability=&quot;0.49049429657795&quot;&gt;&lt;li readability=&quot;3.8921832884097&quot;&gt;FPGA and driver on board update scripts
&lt;ul&gt;&lt;li&gt;Setup &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/ftp-server.html&quot; rel=&quot;nofollow&quot;&gt;ftp server&lt;/a&gt; on PC, allow anonymous and change ftp root directory to $OPENWIFI_DIR.&lt;/li&gt;
&lt;li&gt;On board:&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;./sdcard_boot_update.sh $BOARD_NAME
(Above command downloads uImage, BOOT.BIN and devicetree.dtb, then copy them into boot partition. Remember to power cycle)
./wgd.sh remote
(Above command downloads driver files, and brings up sdr0)
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Access the board disk/rootfs like a disk:
&lt;ul&gt;&lt;li&gt;On PC: &quot;File manager --&amp;gt; Connect to Server...&quot;, input: sftp://root@192.168.10.122/root&lt;/li&gt;
&lt;li&gt;Input password &quot;openwifi&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Build openwifi Linux img from scratch&lt;/h2&gt;
&lt;ul readability=&quot;15.872406639004&quot;&gt;&lt;li readability=&quot;-0.46341463414634&quot;&gt;
&lt;p&gt;Download &lt;a href=&quot;http://swdownloads.analog.com/cse/2019_R1-2020_02_04.img.xz&quot; rel=&quot;nofollow&quot;&gt;2019_R1-2020_02_04.img.xz&lt;/a&gt; from &lt;a href=&quot;https://wiki.analog.com/resources/tools-software/linux-software/zynq_images&quot; rel=&quot;nofollow&quot;&gt;Analog Devices Wiki&lt;/a&gt;. Burn it to a SD card.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Insert the SD card to your Linux PC. Find out the mount point (that has two sub directories BOOT and rootfs), and setup environment variables (use absolute path):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;export SDCARD_DIR=sdcard_mount_point
export XILINX_DIR=your_Xilinx_directory
export OPENWIFI_DIR=your_openwifi_directory
export BOARD_NAME=your_board_name
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Run script to update SD card:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$OPENWIFI_DIR/user_space/update_sdcard.sh $OPENWIFI_DIR $XILINX_DIR $BOARD_NAME $SDCARD_DIR
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Config your board to SD card boot mode (check the board manual). Insert the SD card to the board. Power on.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Login to the board from your PC (PC Ethernet should have IP 192.168.10.1) with one time password &lt;strong&gt;analog&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ssh root@192.168.10.122
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;9&quot;&gt;
&lt;p&gt;Setup routing/NAT &lt;strong&gt;on the PC&lt;/strong&gt; for your board -- this internet connection is &lt;strong&gt;important&lt;/strong&gt; for post installation/config.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo sysctl -w net.ipv4.ip_forward=1
sudo iptables -t nat -A POSTROUTING -o ethY -j MASQUERADE
sudo ip route add 192.168.13.0/24 via 192.168.10.122 dev ethX
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ethX&lt;/strong&gt; is the PC NIC name connecting the board. &lt;strong&gt;ethY&lt;/strong&gt; is the PC NIC name connecting internet.&lt;/p&gt;
&lt;p&gt;If you want, uncommenting &quot;net.ipv4.ip_forward=1&quot; in /etc/sysctl.conf to make IP forwarding persistent on PC.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Run &lt;strong&gt;one time&lt;/strong&gt; script on board to complete post installation/config (After this, password becomes &lt;strong&gt;openwifi&lt;/strong&gt;)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd ~/openwifi &amp;amp;&amp;amp; ./post_config.sh
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.85135135135135&quot;&gt;
&lt;p&gt;Now you can start from &lt;a href=&quot;https://github.com/open-sdr/openwifi#Quick-start&quot;&gt;Quick start&lt;/a&gt; (Skip the image download and burn step)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Special note for 11b&lt;/h2&gt;
&lt;p&gt;Openwifi only applies OFDM as its modulation scheme and as a result, it is not backward compatible with 802.11b clients or modes of operation. This is usually the case during beacon transmission, connection establishment, and robust communication.&lt;/p&gt;
&lt;p&gt;As a solution to this problem, openwifi can be fully controlled only if communicating with APs/clients instantiated using hostapd/wpa_supplicant userspace programs respectively.&lt;/p&gt;
&lt;p&gt;For hostapd program, 802.11b rates can be suppressed using configuration commands (i.e. supported_rates, basic_rates) and an example configuration file is provided (i.e. hostapd-openwifi.conf). One small caveat to this one comes from fullMAC Wi-Fi cards as they must implement the &lt;em&gt;NL80211_TXRATE_LEGACY&lt;/em&gt; NetLink handler at the device driver level.&lt;/p&gt;
&lt;p&gt;On the other hand, the wpa_supplicant program on the client side (commercial Wi-Fi dongle/board) cannot suppress 802.11b rates out of the box in 2.4GHz band, so there will be an issue when connecting openwifi (OFDM only). A patched wpa_supplicant should be used at the client side.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo apt-get install libssl1.0-dev
$OPENWIFI_DIR/user_space/build_wpa_supplicant_wo11b.sh $OPENWIFI_DIR
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Porting guide&lt;/h2&gt;
&lt;p&gt;This section explains the porting work by showing the differences between openwifi and Analog Devices reference design. openwifi is based on f61d9707 (2019 r1) of &lt;a href=&quot;https://github.com/analogdevicesinc/hdl&quot;&gt;HDL Reference Designs&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Open the fmcomms2 + zc706 reference design at hdl/projects/fmcomms2/zc706 (Please read Analog Devices help)&lt;/li&gt;
&lt;li&gt;Open the openwifi design zc706_fmcs2 at openwifi-hw/boards/zc706_fmcs2 (Please read openwifi-hw repository)&lt;/li&gt;
&lt;li&gt;&quot;Open Block Design&quot;, you will see the differences between openwifi and the reference design. Both in &quot;diagram&quot; and in &quot;Address Editor&quot;.&lt;/li&gt;
&lt;li&gt;The address/interrupts of FPGA blocks hooked to the ARM bus should be put/aligned to the devicetree file openwifi/kernel_boot/boards/zc706_fmcs2/devicetree.dts. Linux will parse the devicetree.dtb when booting to know information of attached deivce (FPGA blocks in our case).&lt;/li&gt;
&lt;li&gt;We use dtc command to get devicetree.dts converted from devicetree.dtb in &lt;a href=&quot;https://wiki.analog.com/resources/tools-software/linux-software/zynq_images&quot; rel=&quot;nofollow&quot;&gt;Analog Devices Linux image&lt;/a&gt;, then do modification according to what we have added/modified to the reference design.&lt;/li&gt;
&lt;li&gt;Please learn the script in [&lt;a href=&quot;https://github.com/open-sdr/openwifi#Build-openwifi-Linux-img-from-scratch&quot;&gt;Build openwifi Linux img from scratch&lt;/a&gt;] to understand how we generate devicetree.dtb, BOOT.BIN and Linux kernel uImage and put them together to build the full SD card image.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Videos&lt;/h2&gt;
&lt;p&gt;Demo [&lt;a href=&quot;https://youtu.be/NpjEaszd5u4&quot; rel=&quot;nofollow&quot;&gt;youtube&lt;/a&gt;], [&lt;a href=&quot;https://www.zhihu.com/zvideo/1280659393378041856&quot; rel=&quot;nofollow&quot;&gt;link for CHN user&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;FOSDEM2020 [&lt;a href=&quot;https://youtu.be/Mq48cGthk7M&quot; rel=&quot;nofollow&quot;&gt;youtube&lt;/a&gt;], [&lt;a href=&quot;https://www.zhihu.com/zvideo/1280673506397425664&quot; rel=&quot;nofollow&quot;&gt;link for CHN user&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Low latency for gaming and introduction [&lt;a href=&quot;https://youtu.be/Notn9X482LI&quot; rel=&quot;nofollow&quot;&gt;youtube&lt;/a&gt;], [&lt;a href=&quot;https://www.zhihu.com/zvideo/1273823153371385856&quot; rel=&quot;nofollow&quot;&gt;link for CHN user&lt;/a&gt;]&lt;/p&gt;
&lt;h2&gt;Papers&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://biblio.ugent.be/publication/8663043/file/8663044.pdf&quot; rel=&quot;nofollow&quot;&gt;openwifi: a free and open-source IEEE802.11 SDR implementation on SoC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Openwifi was born in &lt;a href=&quot;https://www.orca-project.eu/&quot; rel=&quot;nofollow&quot;&gt;ORCA project&lt;/a&gt; (EU's Horizon2020 programme under agreement number 732174).&lt;/p&gt;
&lt;h2&gt;Cite openwifi project&lt;/h2&gt;
&lt;p&gt;Any use of openwifi project which results in a publication should include a citation via (bibtex example):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@electronic{openwifigithub,
            author = {Xianjun, Jiao and Wei, Liu and Michael, Mehari},
            title = {open-source IEEE802.11/Wi-Fi baseband chip/FPGA design},
            url = {https://github.com/open-sdr/openwifi},
            year = {2019},
}
&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 25 Aug 2020 17:45:19 +0000</pubDate>
<dc:creator>homarp</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/57527287?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>open-sdr/openwifi</og:title>
<og:url>https://github.com/open-sdr/openwifi</og:url>
<og:description>open-source IEEE802.11/Wi-Fi baseband chip/FPGA design - open-sdr/openwifi</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/open-sdr/openwifi</dc:identifier>
</item>
<item>
<title>Africa declared free of wild polio</title>
<link>https://www.bbc.com/news/world-africa-53887947</link>
<guid isPermaLink="true" >https://www.bbc.com/news/world-africa-53887947</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Boy being vaccinated against polio&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/9048/production/_90763963_gettyimages-72537955.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;AFP&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Polio can only be prevented through immunisation
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Africa has been declared free from wild polio by the independent body, the Africa Regional Certification Commission.&lt;/p&gt;&lt;p&gt;Polio usually affects children under five, sometimes leading to irreversible paralysis. Death can occur when breathing muscles are affected.&lt;/p&gt;&lt;p&gt;Twenty-five years ago thousands of children in Africa were paralysed by the virus.&lt;/p&gt;&lt;p&gt;The disease is now only found in Afghanistan and Pakistan.&lt;/p&gt;&lt;p&gt;There is no cure but the polio vaccine protects children for life.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world/africa/live&quot; class=&quot;story-body__link&quot;&gt;Africa Live: Updates on this and other stories&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Nigeria is the last African country to be declared free from wild polio, having accounted for more than half of all global cases less than a decade ago.&lt;/p&gt;&lt;div class=&quot;idt2&quot;&gt;&lt;div data-idt-uuid=&quot;e348acf8-587f-494a-8fba-4369f05bf7d2&quot;&gt;&lt;div data-graphicuuid=&quot;e348acf8-587f-494a-8fba-4369f05bf7d2&quot; dir=&quot;ltr&quot; class=&quot;VegaGraphic__GraphicContainer-hdlj7c-0 eygjsY&quot;&gt;&lt;h2 class=&quot;components__EditorialTitle-s4q8aoa-4 bCwWpe&quot;&gt;Wild polio cases in Nigeria&lt;/h2&gt;&lt;p class=&quot;components__EditorialSubtitle-s4q8aoa-5 YjuiG&quot;&gt;2000-2020&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;The vaccination campaign in Nigeria involved a huge effort to reach remote and dangerous places under threat from militant violence and some health workers were killed in the process.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What is polio and has it now been eradicated in Africa?&lt;/h2&gt;&lt;p&gt;Polio is a virus which spreads from person to person, usually through contaminated water. It can lead to paralysis by attacking the nervous system.&lt;/p&gt;&lt;p&gt;Two out of three strains of wild polio virus have been eradicated worldwide. On Tuesday, Africa  has been declared free of the last remaining strain of wild poliovirus. &lt;/p&gt;&lt;p&gt;More than 95% of Africa's population has now been immunised. This was one of the conditions that the Africa Regional Certification Commission set before declaring the continent free from wild polio. &lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;Now only the vaccine-derived polio virus remains in Africa with 177 cases being identified this year.&lt;/p&gt;&lt;p&gt;This is a rare form of the virus that mutates from the oral polio vaccine and can then spread to under-immunised communities. &lt;/p&gt;&lt;p&gt;The World Health Organization (WHO) has identified a number of these cases in Nigeria, the Democratic Republic of the Congo, Central African Republic and Angola.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/health-17045202&quot; class=&quot;story-body__link&quot;&gt;The history of polio&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How did Africa eliminate wild polio?&lt;/h2&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    A polio vaccine was developed in 1952
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Without a cure a vaccine developed in 1952 by Dr Jonas Salk gave hope that children could be protected from the disease. In 1961, Albert Sabin pioneered the oral polio vaccine which has been used in most national immunisation programmes around the world. &lt;/p&gt;&lt;p&gt;In 1996 poliovirus paralysed more than 75,000 children across the continent - every country was affected. &lt;/p&gt;&lt;p&gt;That year Nelson Mandela launched the &quot;Kick Polio Out of Africa&quot; programme, mobilising millions of health workers who went village-to-village to hand-deliver vaccines. &lt;/p&gt;&lt;p&gt;It was backed by a coalition of groups including Rotary International which had spearheaded the polio vaccination drive from the 1980s.&lt;/p&gt;&lt;p&gt;Since 1996 billions of oral polio vaccines have been provided, averting an estimated 1.8 million cases of wild poliovirus.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-48186856&quot; class=&quot;story-body__link&quot;&gt;What are vaccines and how do they work?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What have the challenges been?&lt;/h2&gt;&lt;p&gt;The last communities at risk of polio live in some of the most complicated places to deliver immunisation campaigns. &lt;/p&gt;&lt;p&gt;Nigeria is the last country in Africa to have reported a case of wild polio - in Borno state in Nigeria's remote north-east, and the epicentre of the Boko Haram insurrection, in 2016. &lt;/p&gt;&lt;p&gt;At the time it was a frustrating set-back as the country had made huge progress and had gone two years without any cases being identified. &lt;/p&gt;&lt;p&gt;Outside Nigeria, the last place to have seen a case of polio was in the Puntland region of Somalia in 2014.&lt;/p&gt;&lt;p&gt;Conflict with the Islamist militant group Boko Haram has made parts of Nigeria particularly difficult to reach, Borno state in particular.&lt;/p&gt;&lt;p&gt;More than two million people have been displaced by the fighting. Frontline workers, 95% of whom were women, managed to navigate areas of conflict like Lake Chad by boat and deliver vaccines to remote communities. &lt;/p&gt;&lt;p&gt;Widespread rumours and misinformation about the vaccine have also slowed down immunisation efforts. &lt;/p&gt;&lt;p&gt;In 2003, Kano and a number of other northern states suspended immunisations following reports by Muslim religious leaders that the vaccine was contaminated with an anti-fertility agent as part of an American plot to make Muslim women infertile. Laboratory tests by Nigerian scientists dismissed the accusations.&lt;/p&gt;&lt;p&gt;Vaccine campaigns resumed the following year, but the rumours persisted. In 2013 nine female polio vaccinators were killed in two shootings thought to be carried out by Boko Haram at health centres in Kano. &lt;/p&gt;&lt;p&gt;It has taken decades to achieve eradication and overcome suspicion around the vaccine. &lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How polio survivors made a difference&lt;/h2&gt;&lt;p&gt;Winning the trust of communities has been key. &lt;/p&gt;&lt;p&gt;Misbahu Lawan Didi, president of the Nigerian Polio Survivors Association, says that the role of survivors has been crucial in persuading people to accept the campaign. &lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Misbahu Lawan Didi has worked hard to persuade sceptical parents to allow their children to have the vaccine
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&quot;Many rejected the polio vaccine, but they see how much we struggle to reach them, sometimes crawling large distances, to speak to them. We ask them: 'Don't you think it is important for you to protect you child not to be like us?'&quot;&lt;/p&gt;&lt;p&gt;From polio survivors, to traditional and religious leaders, school teachers, parents, volunteers and health workers, a huge coalition developed to defeat polio. Working together they travelled to remote communities to immunise children. &lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-africa-50266547&quot; class=&quot;story-body__link&quot;&gt;'I opposed vaccinations until my son caught polio'&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How serious is polio?&lt;/h2&gt;&lt;p&gt;Polio, or poliomyelitis, mainly affects children aged under five. &lt;/p&gt;&lt;p&gt;Initial symptoms include fever, fatigue, headache, vomiting, stiffness of the neck and pains in the limbs. It also invades the nervous system and can cause total paralysis in a matter of hours.  &lt;/p&gt;&lt;p&gt;One in 200 infections leads to irreversible paralysis. Among those paralysed, 5% to 10% of people die when their breathing muscles become immobilised.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Could wild polio return?&lt;/h2&gt;&lt;p&gt;Polio can be easily imported into a country that is polio free and from there it can spread rapidly among under-immunised populations. &lt;/p&gt;&lt;p&gt;This happened in Angola, which despite decades of civil war, defeated polio in 2001. &lt;/p&gt;&lt;p&gt;The country remained free from polio for four years until 2005 when a number of cases were thought to have been brought in from outside the country.&lt;/p&gt;&lt;p&gt;The WHO says that it is important countries remain vigilant and avoid complacency until there is global eradication. &lt;/p&gt;&lt;p&gt;If they let down their defence by failing to vaccinate, then wild polio could once again begin to spread quickly. &lt;/p&gt;&lt;p&gt;For all types of polio to be eliminated, including vaccine-derived polio, vaccination efforts will need to continue alongside surveillance, to protect children from being paralysed by the disease in the future. &lt;/p&gt;
            </description>
<pubDate>Tue, 25 Aug 2020 17:15:49 +0000</pubDate>
<dc:creator>riffraff</dc:creator>
<og:title>Africa declared free of polio</og:title>
<og:type>article</og:type>
<og:description>Nigeria is now rid of wild polio having had more than half of global cases less than 10 years ago.</og:description>
<og:url>https://www.bbc.com/news/world-africa-53887947</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/9048/production/_90763963_gettyimages-72537955.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/world-africa-53887947</dc:identifier>
</item>
<item>
<title>Optimal Peanut Butter and Banana Sandwiches</title>
<link>https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/</link>
<guid isPermaLink="true" >https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/</guid>
<description>&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;68.184504267892&quot;&gt;&lt;p&gt;I was personally useless for most of the Spring of 2020. There was a period of time, though, after the peak in coronavirus cases here in NYC and before the onslaught of police violence here in NYC that I managed to scrounge up the motivation to do something other than drink and maniacally refresh my Twitter feed. I set out to work on something completely meaningless. It was almost therapeutic to work on a project with no value of any kind (&lt;em&gt;insert PhD joke here&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;A side effect of having spent 10 years with limited income in college and grad school, 6 of those here in expensive ass NYC, is that I eat of lot of cheap sandwiches, even though I now have a nice Tech™ job. While my sandwich consumption was quite formidable pre-covid, sheltering in place cemented this staple in my diet. I am particularly fond of peanut butter and banana sandwiches, having been introduced to them as a child by my maternal grandfather who ate them regularly.&lt;/p&gt;
&lt;p&gt;I start a peanut butter and banana sandwich by spreading peanut butter on two slices of bread. I then slice circular slices of the banana, starting at the end of the banana, and place each slice on one of the pieces of bread until I have a single layer of banana slices. Every time I do this, the former condensed matter physicist in me starts to twitch his eye. You see, I have this urge, this desire, this &lt;em&gt;need&lt;/em&gt; to maximize the &lt;a href=&quot;https://en.wikipedia.org/wiki/Atomic_packing_factor&quot;&gt;packing fraction&lt;/a&gt; of the banana slices. That is, I want to maximize the coverage of the banana slices on the bread. Just as bowl-form food is perfect because you get every ingredient in every bite, each bite of my sandwich should yield the same golden ratio of bread, peanut butter, and banana.&lt;/p&gt;
&lt;p&gt;If you were a machine learning model (or my wife), then you would tell me to just cut long rectangular strips along the long axis of the banana, but I’m not a sociopath. If life were simple, then the banana slices would be perfect circles of equal diameter, and we could coast along looking up optimal configurations on &lt;a href=&quot;http://packomania.com/&quot;&gt;packomania&lt;/a&gt;. But alas, life is not simple. We’re in the middle of a global pandemic, and banana slices are elliptical with varying size.&lt;/p&gt;
&lt;p&gt;So, how do we make optimal peanut butter and banana sandwiches? It’s really quite simple. You take a picture of your banana and bread, pass the image through a deep learning model to locate said items, do some nonlinear curve fitting to the banana, transform to polar coordinates and “slice” the banana along the fitted curve, turn those slices into elliptical polygons, and feed the polygons and bread “box” into a 2D nesting algorithm.&lt;/p&gt;
&lt;p&gt;You may have noticed that I supposedly started this project in the Spring, and it’s now August. Like most idiot engineers, I had no idea how complicated this stupid project was going to be, but time’s meaningless in quarantine, so here we are. And here you are! Because I made a pip installable python package &lt;a href=&quot;https://github.com/EthanRosenthal/nannernest&quot;&gt;nannernest&lt;/a&gt; if you want to optimize your own sandwiches, and I’m going to spend the rest of this post describing how this whole godforsaken thing works.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;30.676240208877&quot;&gt;
&lt;h2 id=&quot;sandwich-segmentation&quot;&gt;Sandwich Segmentation&lt;/h2&gt;
&lt;p&gt;I know that deep learning has been properly commoditized when the easiest part of this project was identifying every pixel that belongs to a banana or slice of bread in an image. Seriously, this step was super easy. I used a pretrained Mask-RCNN torchvision &lt;a href=&quot;https://pytorch.org/docs/stable/torchvision/models.html#torchvision.models.detection.maskrcnn_resnet50_fpn&quot;&gt;model&lt;/a&gt; with a Resnet backbone. The model was pretrained on the COCO &lt;a href=&quot;https://cocodataset.org/&quot;&gt;dataset&lt;/a&gt;, and thankfully the dataset has “banana” as segmentation category, along with “sandwich” and “cake” which were close enough categories for suitable detection of most slices of bread.&lt;/p&gt;
&lt;p&gt;Passing an image through the model outputs a bunch of detected objects, where each detected object has an associated &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;score&lt;/code&gt;, &lt;code&gt;bounding box&lt;/code&gt;, and &lt;code&gt;mask&lt;/code&gt;, where the mask identifies the pixels that correspond to the object with a weight at each pixel corresponding to the model’s confidence in that pixel’s label.&lt;/p&gt;
&lt;p&gt;Because there could be multiple bananas and slices of bread in the image, I pick out the banana and slice of bread with the highest score. Below, you can see the model is clearly able to identify the banana and bread, with the mask overlaid in a semi-transparent, radioactive green.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;13&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InlineBackend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure_format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;retina&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nannernest&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;_RC_PARAMS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;figure.figsize&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;axes.labelsize&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;axes.titlesize&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;axes.spines.right&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;axes.spines.top&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;font.size&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lines.linewidth&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lines.markersize&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;legend.fontsize&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_RC_PARAMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;segmentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;pre_sandwich.jpg&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_4_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;30.79427279578&quot;&gt;

&lt;p&gt;Now that we have identified the banana in the image, we need to virtually “slice” it. This is where we are first introduced to the universal pain of computer vision:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;By eye, I can see exactly what I want to do; by code, it’s so damn difficult.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I could ask you to draw lines on the banana identifying where you would slice it, and you could easily draw well-spaced, somewhat parallel slices. It’s not so easy to do this with code. However, I would also argue that this is the fun part of the problem. There are many ways to solve this, and it feels creative, as opposed to using a pre-trained deep learning model. On the other hand, “creatively” solving these problems likely leads to more brittle solutions compared to deep learning models trained on millions of examples. There’s a tradeoff here.&lt;/p&gt;
&lt;p&gt;I tried a bunch of analytical solutions based on ellipses, but nothing seemed to work quite right. I ended up landing on a somewhat simpler solution that may not be robust to straight bananas, but who cares – this is a silly project anyway. Using the wonderful &lt;a href=&quot;https://scikit-image.org/&quot;&gt;scikit-image&lt;/a&gt; library, I first calculate the &lt;a href=&quot;https://scikit-image.org/docs/dev/auto_examples/edges/plot_skeleton.html&quot;&gt;skeleton&lt;/a&gt; of the banana segmentation mask. This reduces the mask to a one pixel wide representation which effectively creates a curve that runs along the long axis of the banana.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slicing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_7_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;9.8461538461538&quot;&gt;
&lt;p&gt;I then fit a circle to the banana skeleton using a nice scipy-based least squares optimization I found &lt;a href=&quot;https://scipy-cookbook.readthedocs.io/items/Least_Squares_Circle.html#Using-scipy.optimize.leastsq&quot;&gt;here&lt;/a&gt;. I actually originally tried to fit this with PyTorch and totally failed, likely due to the fact that this is actually a nonlinear optimization problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_9_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;32.816082802548&quot;&gt;
&lt;h2 id=&quot;rad-coordinate-transformations&quot;&gt;Rad Coordinate Transformations&lt;/h2&gt;
&lt;p&gt;With the circle fit to the banana, the goal is to now draw radial lines out from the center of the circle to the banana and have each radial line correspond to the slice of a knife. Again, while it’s easy to visualize this, it’s much harder in practice. For example, we need to start slicing at one end of the banana, but how do we find an end of the banana? Also, there are two ends, and we have to differentiate between them. Contrary to the behavior of &lt;a href=&quot;https://www.thekitchn.com/why-you-should-peel-your-banana-like-a-monkey-206322&quot;&gt;monkeys&lt;/a&gt;, I start slicing my bananas at the stem end, and that’s what we’re going to do here.&lt;/p&gt;
&lt;p&gt;Crucially, because we now have this circle and want to cut radial slices, we must transform from cartesian to polar coordinates and orient ourselves both radially and angularly with respect to the banana. As a start for orienting ourselves angularly, we calculate the &lt;em&gt;centroid&lt;/em&gt; of the banana mask, which corresponds to the center of mass of the banana mask if the banana mask were a 2D object. The centroid is shown below as a red dot.&lt;/p&gt;
&lt;p&gt;We now draw a radial line originating from the banana circle and passing through the centroid, shown as the dashed white line below. We will consider that line to mark our &lt;em&gt;reference&lt;/em&gt; angle which orients us to the center of the banana.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;15.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;26&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xc&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reference_angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arctan2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reference_angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reference_angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;linestyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_11_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Using &lt;code&gt;scikit-image&lt;/code&gt;, we calculate the segmentation &lt;code&gt;mask&lt;/code&gt; intensity along this radial line using the &lt;code&gt;profile_line&lt;/code&gt; function. Because our line is passing at an angle along discrete &lt;code&gt;mask&lt;/code&gt; pixels (aka matrix entries), we take an average of neighboring points along the radial line cut using the &lt;code&gt;linewidth&lt;/code&gt; arguments. As you can see, the banana mask pops out a little over 100 points from the banana circle center.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;skimage&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measure&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;profile_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Distance from banana circle center&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mask Intensity&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_14_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;17&quot;&gt;
&lt;p&gt;This profile line is what allows us to orient ourselves radially. You can clearly see where the banana starts and ends, in the radial direction. As always, just seeing it is not good enough. We need code to define the start and end of the banana in this direction. The &lt;code&gt;mask&lt;/code&gt; tends to be monotonically increasing and then monotonically decreasing along the start and end, respectively. Using this information, there are a couple ways that we could define the start and the end. If the steepest parts of the profile line occur at the start and end, then the start and end would correspond to the maximum and minimum derivatives, respectively. I’m a little nervous about noise in the &lt;code&gt;mask&lt;/code&gt; signal when the model confidence is low, so I first digitize (or threshold) the profile line by setting it to 0 (1) if it’s less than (greater than) 0.5.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;digitized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;raw profile&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digitized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;digitized&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Distance from banana circle center&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mask Intensity&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_16_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;We now search for the points where the signal flips in terms of the maxmimum and minimum derivatives of the digitized signal. This can be done with some quick &lt;code&gt;numpy&lt;/code&gt;. It’s still a dangerous (quote: “dangerous”, it’s a banana) operation which could amplify noise. One option in the future would be to smooth the profile line prior to taking the derivative.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digitized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;16&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;27&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;k--&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;k--&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;start &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;va&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; end&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;va&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Distance from banana circle center&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mask Intensity&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_19_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;19&quot;&gt;
&lt;h2 id=&quot;phi-space&quot;&gt;$\phi$-Space&lt;/h2&gt;
&lt;p&gt;We are now able to orient ourselves angularly with respect to the center of the banana and radially in terms of the start and end of the banana along the radial line. The last step is the find the &lt;em&gt;angular&lt;/em&gt; start and end of the banana, where the angular start will correspond to the angle pointing to the stem of the banana. To that end, we start by creating an array of angles which span from the reference centroid angle &lt;em&gt;minus&lt;/em&gt; 135$^{\circ}$ to the reference angle &lt;em&gt;plus&lt;/em&gt; 135$^{\circ}$. Analogous to numpy’s &lt;code&gt;linspace&lt;/code&gt;, we’ll call this array $\phi$-space.&lt;/p&gt;
&lt;p&gt;For each angle in $\phi$-space, we’ll calculate a profile line like we did above. Below, we create a $\phi$-space of 201 points and draw each of these profile lines on the original image. You can see that they clearly cover the banana with some healthy room on either angular side.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;phi_space&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slicing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_phi_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_points&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;201&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;profiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slicing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assemble_profiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;phi_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;15&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;25&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_skeleton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_centroid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phi&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phi_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;banana_circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radial_end_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;linestyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_22_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;We can also stack all of the profile lines on each other such that we have a matrix where the rows are angles, the columns denote radial distance, and the values are the &lt;code&gt;mask&lt;/code&gt; intensities along these lines. A false-color plot of this matrix below shows the banana. The long axis of the banana roughly runs along the $\phi$-space direction. The small bit of banana at the top corresponds to the banana stem. The $\phi$-space angles are with respect to the horizontal axis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;im&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Radius&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;phi$-space (degrees)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phi_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_yticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_yticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phi_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colorbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.93&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_24_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;21&quot;&gt;
&lt;h2 id=&quot;slicing-from-stem-to-seed&quot;&gt;Slicing from Stem to Seed&lt;/h2&gt;
&lt;p&gt;Finally, with this odd matrix above that represents this polar world warped onto a cartesian plot, we can identify both the banana stem and the opposite end of the banana which houses its seed. I find the two ends of the banana using a similar method to earlier for finding the radial start and end of the banana. I then find the average mask intensity in a region around either end of the banana and assume that the stem has a smaller average intensity. Finally, I virtually “chop off” the stem using the knowledge that the seed side of the banana should have similar average intensity to the stem side sans stem.&lt;/p&gt;
&lt;p&gt;With this work done, I’ve now identified the angular position of the stem and seed of the banana, along with the radial start and end of the banana at any angle. I slice the banana by chopping it up into evenly spaced angles and drawing a rectangular slice at each angle spacing. I leave as a free parameter the total number of slices which implicitly determines the banana slice thickness. By default, I slice 23 slices and throw out the first and last slice (nobody wants those).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_26_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;18&quot;&gt;
&lt;h2 id=&quot;ellipsoidal-assumptions&quot;&gt;Ellipsoidal Assumptions&lt;/h2&gt;
&lt;p&gt;We now have to make two assumptions about the banana slices. Firstly, we know that the banana slices will be smaller than the ones shown above because the peel has finite thickness. Secondly, bananas are not perfectly circular, and the slices will come out as ellipses. Based on a couple poor measurements with a tape measure (I don’t have calipers), I assume that the actual banana slices are 20% smaller than the image above with the banana peel. I also take the slices in the image above to represent the major axis of the banana slice ellipse, and assume that the minor axis is 85% the size of the major axis.&lt;/p&gt;
&lt;p&gt;With these assumptions in place, slice 1 shown above looks like&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;major_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minor_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;major_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_28_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;34.888818297332&quot;&gt;
&lt;p&gt;Prior to the final step of this ridiculously long pipeline, we have to convert the ellipsoidal slices into &lt;em&gt;polygons&lt;/em&gt;. Technically, the plot above is a discrete set of points and could be considered a polygon. To make the problem tractable, though, we reduce the ellipse to a small set of points. When I first started working on this problem, I did not know if I was going to be severely limited in how many points I could allot for each slice polygon. I’m also somewhat neurotic (a mild understatement) and worried about the fact that the polygon will necessarily not be the exact same size as the ellipse.&lt;/p&gt;
&lt;p&gt;To solve this, I wanted to figure out the polygon that &lt;em&gt;circumscribes&lt;/em&gt; the ellipse. I was surprised to not find any code for this, so I ended up trying to solve it analytically. The resulting algebra was pretty gnarly, so there’s now a function in &lt;code&gt;nannernest&lt;/code&gt; that runs &lt;a href=&quot;https://www.sympy.org/en/index.html&quot;&gt;sympy&lt;/a&gt; and calculates the scaling factors for the major and minor axes based on the number of points in the ellipse polygon.&lt;/p&gt;
&lt;p&gt;Below, I draw the ellipse and the circumscribed polygon for a polygon of 12 points. While (by definition) the circumscribed polygon is bigger than the ellipse, the difference is quite small. I probably could have just chopped the original ellipse into 12 points without much loss in accuracy. In practice, I’ve been using 30 points which only makes the difference even smaller. Also, FWIW, I think that my algebra only works if there are polygon points directly along the x and y axes, so there you go. If anybody has a closed form solution to this, I’d love to see it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;14&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;23&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slice_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;major_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slice_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minor_axis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slice_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice_x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slice_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;num_points&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;major_scaler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minor_scaler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nesting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calc_elliptical_polygon_scalers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_points&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;poly&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nesting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ellipse_to_polygon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;major_scaler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minor_scaler&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;poly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;o--&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_30_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;59.150236045543&quot;&gt;
&lt;h2 id=&quot;bread-box&quot;&gt;Bread Box&lt;/h2&gt;
&lt;p&gt;This part was pretty quick. I needed to define the bread as a “box” within which to nest my banana slices. Originally, I just used the &lt;code&gt;bounding box&lt;/code&gt; from the segmentation algorithm. However, the &lt;code&gt;bounding box&lt;/code&gt; just defines the maximum boundary of the bread. On a whim, I tried rotating an image by 30$^{\circ}$ (sorry, I performed “data augmentation”), and I found that the bounding box did not rotate with the bread. Thankfully, I had the segmentation &lt;code&gt;mask&lt;/code&gt;, and I grabbed a &lt;a href=&quot;https://chadrick-kwag.net/python-implementation-of-rotating-caliper-algorithm/&quot;&gt;rotating calipers&lt;/a&gt; python implementation to find the minimum area bounding box that contains the &lt;code&gt;mask&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;slices-in-a-nest&quot;&gt;Slices in a Nest&lt;/h2&gt;
&lt;p&gt;By the time I finally got to the point of having polygonal, ellipsoidal banana slices extracted from an image and a nice bread box, I thought I would be home free. Surely, there is a simple algorithm that I can plug the polygons and box into to maximize coverage? It turns out that this type of problem commonly called “nesting” or “packing” is extremely hard. Like, NP-hard. Surprisingly, this is a popular research areas because there are a whole bunch of applications. Close packing polygons is analogous to trying to use the most material when cutting a sheet of metal with a CNC machine or cutting out clothing patterns from fabric. I even saw that an application of nesting ellipses involves injecting dye into the brain for imaging. The dye spreads out as an ellipse, and one wants maximum coverage with the fewest number of injections.&lt;/p&gt;
&lt;p&gt;I originally set out to find an analytical solution to packing ellipses in a box, but this does not seem to really exist. As time went on, I settled for &lt;em&gt;any&lt;/em&gt; decent solution to nesting polygons in a box. The popular solutions tend to involve placing polygons one at a time in the box. Each polygon touches the previous polygon. One often starts at a corner of the box, and fills it up row by row. This sounds simple, but you have to build up a bunch of code to touch two polygons without them overlapping. The polygons can also be rotated, placed in whatever order you want, etc… The combinatorial search space is massive, so people often employ the following optimizations&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Find a quick method to determine all of the possible points at which two polygons can touch. This is done via the &lt;a href=&quot;https://www.sciencedirect.com/science/article/abs/pii/S0377221706001639&quot;&gt;No-fit polygon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cache the results of 1.&lt;/li&gt;
&lt;li&gt;Choose the order of your polygons in a smart way, like biggest first.&lt;/li&gt;
&lt;li&gt;Define an overall objective and then employ a black box optimizer to search the space more efficiently. The space involves things like order of polygon placement and the angle of the polygon when it’s placed.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;For months, I waffled back and forth between searching GitHub for implementations and trying to code up my own. One night I would spend 3 hours failing to compile C dependencies, while the next night I would read academic papers and hack away. In the end, I got about halfway to a solution before stumbling upon &lt;a href=&quot;https://github.com/markfink/nest2D&quot;&gt;nest2D&lt;/a&gt; which provides python bindings for a C++ &lt;a href=&quot;https://github.com/tamasmeszaros/libnest2d/tree/master&quot;&gt;library&lt;/a&gt;. Figuring out this library’s C dependencies wasn’t &lt;a href=&quot;https://github.com/markfink/nest2D/pull/2&quot;&gt;too bad&lt;/a&gt;. The only output of the library is an SVG file with a fixed rectangular shape containing images of the nested polygons, so I have to parse the SVG afterwards, scale the polygons back to their original image, then translate and rotate them to overlay with the original bread box. Nevertheless, this all ended up being easier than finishing my own library.&lt;/p&gt;
&lt;p&gt;Thankfully, the nesting library is quite fast, so I start with 2 banana slices and keep running the nesting algorithm with more and more slices until no more can be added.&lt;/p&gt;
&lt;p&gt;And in the end, we finally get the banana slices nested in the bread box.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bread_box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nesting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;jupyter-cell code&quot;&gt;
&lt;div class=&quot;jupyter-input&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nannernest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bread_box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bread_box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img src=&quot;https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/./index_33_0.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;jupyter-cell markdown&quot; readability=&quot;16.342857142857&quot;&gt;
&lt;h2 id=&quot;nannernest&quot;&gt;nannernest&lt;/h2&gt;
&lt;p&gt;As mentioned at the beginning, I built a package called &lt;a href=&quot;https://github.com/EthanRosenthal/nannernest&quot;&gt;nannernest&lt;/a&gt; for you to make your own optimal peanut butter and banana sandwiches. Once you get the package installed, you can generate your own optimal sandwiches on the command line with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-commandline&quot; data-lang=&quot;commandline&quot;&gt;$ nannernest pic_of_my_bread_and_banana.jpg
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A couple random reflections on building this package:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It’s difficult to transition between different “reference frames” when doing computer vision. Images are matrices, and their x-direction when plotted corresponds to columns, which are the second index of the matrix. Conversely, we often deal with points or sets of points where the first index coresponds to the x direction. This gets confusing. I often had to convert between cartesian and polar coordinates and place an object in the larger image. Keeping track of your coordinate systems and scaling factors can be difficult, and it’s probably worth doing this in a smart way. I didn’t really do that.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://typer.tiangolo.com/&quot;&gt;Typer&lt;/a&gt; is pretty great for building command line applications.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://python-poetry.org/&quot;&gt;poetry&lt;/a&gt; makes package development less painful.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;dataclasses&lt;/a&gt; are a good reason to upgrade to Python 3.7.&lt;/li&gt;
&lt;li&gt;There are many, many improvements that could be made. The package is not robust and fails in weird ways. Slices often end up off the corner of the bread due to me using a bounding box to define the bread rather than the actual outline of the bread. I shudder to think of the adversarial attacks that this poor package will receive (think hot dog/not hot dog…).&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;an-optimal-peanut-butter-and-banana-sandwich&quot;&gt;An Optimal Peanut Butter and Banana Sandwich&lt;/h2&gt;
&lt;p&gt;Lately, my preference is&lt;/p&gt;
&lt;p&gt;Best of luck with your sandwich making. I wish you optimal coverage.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ethanrosenthal.com/images/optimal-peanut-butter-and-banana/pre_made_small.jpg&quot;/&gt;&lt;img src=&quot;https://www.ethanrosenthal.com/images/optimal-peanut-butter-and-banana/pre_made_viz_small.jpg&quot;/&gt;&lt;img src=&quot;https://www.ethanrosenthal.com/images/optimal-peanut-butter-and-banana/made_small.jpg&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 25 Aug 2020 16:10:01 +0000</pubDate>
<dc:creator>ethanahte</dc:creator>
<og:title>Optimal Peanut Butter and Banana Sandwiches | Ethan Rosenthal</og:title>
<og:type>website</og:type>
<og:url>https://www.ethanrosenthal.com</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ethanrosenthal.com/2020/08/25/optimal-peanut-butter-and-banana-sandwiches/</dc:identifier>
</item>
<item>
<title>Global Mass Surveillance – The Fourteen Eyes</title>
<link>https://www.privacytools.io/providers/#ukusa</link>
<guid isPermaLink="true" >https://www.privacytools.io/providers/#ukusa</guid>
<description>&lt;nav id=&quot;breadcrumb&quot; aria-label=&quot;breadcrumb&quot;&gt;&lt;ol class=&quot;breadcrumb&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/BreadcrumbList&quot;&gt;&lt;li class=&quot;breadcrumb-item&quot;&gt;&lt;a href=&quot;https://www.privacytools.io/&quot;&gt;&lt;span&gt;Home&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;breadcrumb-item active&quot; aria-current=&quot;page&quot; itemprop=&quot;itemListElement&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/ListItem&quot;&gt;&lt;span itemprop=&quot;name&quot;&gt;Providers&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/nav&gt;&lt;div class=&quot;jumbotron p-5&quot; readability=&quot;8&quot;&gt;

&lt;p class=&quot;lead&quot;&gt;There's a ton of people providing services online. Discover which ones you should avoid and our recommendations for a variety of services.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Click on whatever service you need to view our recommendations.&lt;/p&gt;


&lt;img src=&quot;https://www.privacytools.io/assets/img/svg/layout/ukusa.svg&quot; width=&quot;260&quot; height=&quot;115&quot; class=&quot;img-fluid float-right ml-2&quot; alt=&quot;UKUSA Agreement&quot;/&gt;&lt;p&gt;The UKUSA Agreement is an agreement between the United Kingdom, United States, Australia, Canada, and New Zealand to cooperatively collect, analyze, and share intelligence. Members of this group, known as the &lt;a href=&quot;https://www.giswatch.org/en/communications-surveillance/unmasking-five-eyes-global-surveillance-practices&quot;&gt;Five Eyes&lt;/a&gt;, focus on gathering and analyzing intelligence from different parts of the world. While Five Eyes countries have agreed to &lt;a href=&quot;https://www.pbs.org/newshour/world/an-exclusive-club-the-five-countries-that-dont-spy-on-each-other&quot;&gt;not spy on each other&lt;/a&gt; as adversaries, leaks by Snowden have revealed that some Five Eyes members monitor each other's citizens and &lt;a href=&quot;https://www.theguardian.com/uk/2013/jun/21/gchq-cables-secret-world-communications-nsa&quot;&gt;share intelligence&lt;/a&gt; to &lt;a href=&quot;https://www.theguardian.com/politics/2013/jun/10/nsa-offers-intelligence-british-counterparts-blunkett&quot;&gt;avoid breaking domestic laws&lt;/a&gt; that prohibit them from spying on their own citizens. The Five Eyes alliance also cooperates with groups of third-party countries to share intelligence (forming the Nine Eyes and Fourteen Eyes); however, Five Eyes and third-party countries can and do spy on each other.&lt;/p&gt;
&lt;div class=&quot;row mb-3&quot;&gt;
&lt;div class=&quot;col-xl-4 col-lg-6 col-md-12 mb-4&quot;&gt;
&lt;div class=&quot;card card-danger&quot;&gt;

&lt;div class=&quot;card-body&quot;&gt;
&lt;ol class=&quot;card-ol&quot;&gt;&lt;li&gt;Australia

&lt;/li&gt;
&lt;li&gt;Canada

&lt;/li&gt;
&lt;li&gt;New Zealand

&lt;/li&gt;
&lt;li&gt;United Kingdom

&lt;/li&gt;
&lt;li&gt;United States of America

&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;col-xl-4 col-lg-6 col-md-12 mb-4&quot;&gt;
&lt;div class=&quot;card card-warning&quot;&gt;

&lt;div class=&quot;card-body&quot;&gt;
&lt;ol class=&quot;card-ol&quot;&gt;&lt;li&gt;Denmark

&lt;/li&gt;
&lt;li&gt;France

&lt;/li&gt;
&lt;li&gt;Netherlands

&lt;/li&gt;
&lt;li&gt;Norway

&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;col-xl-4 col-lg-6 col-md-12 mb-4&quot;&gt;
&lt;div class=&quot;card card-secondary&quot;&gt;

&lt;div class=&quot;card-body&quot;&gt;
&lt;ol class=&quot;card-ol&quot;&gt;&lt;li&gt;Belgium

&lt;/li&gt;
&lt;li&gt;Germany

&lt;/li&gt;
&lt;li&gt;Italy

&lt;/li&gt;
&lt;li&gt;Spain

&lt;/li&gt;
&lt;li&gt;Sweden

&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Who is required to hand over the encryption keys to authorities?&lt;/h3&gt;
&lt;p&gt;Mandatory &lt;a href=&quot;https://en.wikipedia.org/wiki/Key_disclosure_law&quot;&gt;key disclosure laws&lt;/a&gt; require individuals to turn over encryption keys to law enforcement conducting a criminal investigation. How these laws are implemented (who may be legally compelled to assist) vary from nation to nation, but a warrant is generally required. Defenses against key disclosure laws include steganography and encrypting data in a way that provides plausible deniability.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Steganography&quot;&gt;Steganography&lt;/a&gt; involves hiding sensitive information (which may be encrypted) inside of ordinary data (for example, encrypting an image file and then hiding it in an audio file). With plausible deniability, data is encrypted in a way that prevents an adversary from being able to prove that the information they are after exists (for example, one password may decrypt benign data and another password, used on the same file, could decrypt sensitive data).&lt;/p&gt;

&lt;p&gt;* (people who know how to access a system may be ordered to share their knowledge, &lt;strong&gt;however, this doesn't apply to the suspect itself or family members.&lt;/strong&gt;)&lt;/p&gt;
&lt;h3&gt;Related Information&lt;/h3&gt;
&lt;h3 id=&quot;usa&quot; class=&quot;anchor&quot;&gt;Why is it not recommended to choose a US-based service?&lt;/h3&gt;
&lt;img src=&quot;https://www.privacytools.io/assets/img/svg/layout/great_seal_of_the_united_states_obverse.svg&quot; width=&quot;200&quot; height=&quot;200&quot; class=&quot;img-fluid float-right ml-3&quot; alt=&quot;USA&quot;/&gt;&lt;p&gt;Services based in the United States are not recommended because of the country's surveillance programs and use of &lt;a href=&quot;https://www.eff.org/issues/national-security-letters/faq&quot;&gt;National Security Letters&lt;/a&gt; (NSLs) with accompanying gag orders, which forbid the recipient from talking about the request. This combination allows the government to &lt;a href=&quot;https://www.schneier.com/blog/archives/2013/08/more_on_the_nsa.html&quot;&gt;secretly force&lt;/a&gt; companies to grant complete access to customer data and transform the service into a tool of mass surveillance.&lt;/p&gt;
&lt;p&gt;An example of this is &lt;a href=&quot;https://en.wikipedia.org/wiki/Lavabit#Suspension_and_gag_order&quot;&gt;Lavabit&lt;/a&gt; – a secure email service created by Ladar Levison. The FBI &lt;a href=&quot;https://www.vice.com/en_us/article/nzz888/lavabit-founder-ladar-levison-discusses-his-federal-battle-for-privacy&quot;&gt;requested&lt;/a&gt; Snowden's records after finding out that he used the service. Since Lavabit did not keep logs and email content was stored encrypted, the FBI served a subpoena (with a gag order) for the service's SSL keys. Having the SSL keys would allow them to access communications (both metadata and unencrypted content) in real time for all of Lavabit's customers, not just Snowden's.&lt;/p&gt;
&lt;p&gt;Ultimately, Levison turned over the SSL keys and &lt;a href=&quot;https://www.theguardian.com/commentisfree/2014/may/20/why-did-lavabit-shut-down-snowden-email&quot;&gt;shut down&lt;/a&gt; the service at the same time. The US government then &lt;a href=&quot;https://www.cnbc.com/id/100962389&quot;&gt;threatened Levison with arrest&lt;/a&gt;, saying that shutting down the service was a violation of the court order.&lt;/p&gt;
&lt;h3&gt;Related Information&lt;/h3&gt;

&lt;img src=&quot;https://www.privacytools.io/assets/img/svg/layout/warrant_canary_example.svg&quot; width=&quot;450px&quot; class=&quot;img-fluid float-right ml-3&quot; alt=&quot;Warrant Canary Example&quot;/&gt;&lt;p&gt;A warrant canary is a posted document stating that an organization has not received any secret subpoenas during a specific period of time. If this document fails to be updated during the specified time then the user is to assume that the service has received such a subpoena and should stop using the service.&lt;/p&gt;
&lt;h4&gt;Warrant Canary Examples:&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://proxy.sh/canary&quot;&gt;https://proxy.sh/canary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ivpn.net/resources/canary.txt&quot;&gt;https://www.ivpn.net/resources/canary.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bolehvpn.net/canary.txt&quot;&gt;https://www.bolehvpn.net/canary.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ipredator.se/static/downloads/canary.txt&quot;&gt;https://www.ipredator.se/static/downloads/canary.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Related Warrant Canary Information&lt;/h4&gt;
&lt;footer readability=&quot;0.76724137931034&quot;&gt;&lt;footer readability=&quot;5.3706896551724&quot;&gt;&lt;h3 id=&quot;participate&quot;&gt;Spread the word and help your friends&lt;/h3&gt;

&lt;h3&gt;Copy URL and Description&lt;/h3&gt;
&lt;p&gt;&lt;input type=&quot;text&quot; value=&quot;PrivacyTools - Encryption and tools to protect against global mass surveillance - https://www.privacytools.io&quot; class=&quot;form-control input-lg onclick-select&quot;/&gt;&lt;span class=&quot;help-block&quot;&gt;For easy copy and paste. Share this text snippet.&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;copyright-text&quot; readability=&quot;30.462962962963&quot;&gt;&lt;a href=&quot;https://www.privacytools.io/about/javascript&quot; data-jslicense=&quot;1&quot;&gt;JavaScript Licenses&lt;/a&gt;
&lt;p class=&quot;mt-2&quot;&gt;&lt;strong&gt;No Ads, No Google Analytics, No Affiliates, No Cross-Site Requests.&lt;/strong&gt; &lt;em&gt;PrivacyTools is a socially motivated website that provides information for protecting your data security and privacy. Never trust any company with your privacy, always encrypt.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;text-left&quot;&gt;Tor v3: &lt;strong&gt;privacy2zbidut4m4jyj3ksdqidzkw3uoip2vhvhbvwxbqux5xy5obyd.onion&lt;/strong&gt; (&lt;a href=&quot;https://write.privacytools.io/jonah/tor-on-privacytools-io&quot;&gt;Learn More&lt;/a&gt;)&lt;/p&gt;
&lt;small&gt;&lt;a href=&quot;https://www.privacytools.io/privacy/&quot;&gt;Privacy Statement&lt;/a&gt; | &lt;a href=&quot;https://www.privacytools.io/notices/&quot;&gt;Notices &amp;amp; Disclaimers&lt;/a&gt; | &lt;a href=&quot;https://github.com/privacytools/brand&quot;&gt;Brand Assets &amp;amp; Guidelines&lt;/a&gt; | &lt;a href=&quot;https://status.privacytools.io&quot;&gt;Status Page&lt;/a&gt;&lt;/small&gt;&lt;/div&gt;
&lt;/footer&gt;&lt;/footer&gt;</description>
<pubDate>Tue, 25 Aug 2020 15:20:51 +0000</pubDate>
<dc:creator>latexr</dc:creator>
<og:title>Providers | PrivacyTools</og:title>
<og:type>website</og:type>
<og:url>https://www.privacytools.io/providers/</og:url>
<og:image>https://www.privacytools.io/assets/img/svg/layout/brand/square-transparent.svg</og:image>
<og:description>There's a ton of people providing services online. Discover which ones you should avoid and our recommendations for a variety of services.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.privacytools.io/providers/</dc:identifier>
</item>
<item>
<title>What the interns have wrought, 2020 edition</title>
<link>https://blog.janestreet.com/what-the-interns-have-wrought-2020/</link>
<guid isPermaLink="true" >https://blog.janestreet.com/what-the-interns-have-wrought-2020/</guid>
<description>&lt;p&gt;It’s been an unusual internship season.&lt;/p&gt;
&lt;p&gt;Like many companies, Jane Street is operating in distributed mode, and that goes for the internship as well. That meant doing a bunch of things differently, including rethinking how we got the interns up to speed and assigned them to projects and teams.&lt;/p&gt;
&lt;p&gt;One change we made was to how interns are assigned to projects. In an ordinary year, interns do two separate projects in totally different parts of the tech organization: a single intern might work on an &lt;a href=&quot;https://blog.janestreet.com/what-the-interns-have-wrought-2019/&quot;&gt;LDAP implementation&lt;/a&gt; for the first half of the summer, and on tools for &lt;a href=&quot;https://blog.janestreet.com/what-the-interns-have-wrought-2017/&quot;&gt;caching snapshots from exchange-sourced marketdata&lt;/a&gt; for the second half.&lt;/p&gt;
&lt;p&gt;While we think that kind of diverse experience has its upsides, we didn’t feel like we could do it justice this year, mostly because of time constraints. So this year we assigned each intern to a single team for the whole summer.&lt;/p&gt;
&lt;p&gt;That meant that there were fewer projects per intern, but there are still way too many projects to discuss all of them! So, as usual, I picked a few to go into more detail on:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Henry Nelson’s project to build a &lt;a href=&quot;https://www.wireshark.org/&quot;&gt;Wireshark&lt;/a&gt; plugin for Async-RPC, a common internal messaging format. Along the way, Henry built a general purpose library for building Wireshark plugins in OCaml.&lt;/li&gt;
&lt;li&gt;Yulan Zhang’s project to build an application to automatically shard trading systems to better balance the resources they needed and thereby improve performance.&lt;/li&gt;
&lt;li&gt;Eric Martin’s project to help migrate us off an old-and-deprecated regular expression library, leveraging some fancy testing.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Now let’s talk about each project in a bit more detail.&lt;/p&gt;
&lt;h2 id=&quot;an-async-rpc-dissector-for-wireshark&quot;&gt;An Async-RPC dissector for Wireshark&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.janestreet.com/what-the-interns-have-wrought-2020/wireshark.png&quot;&gt;&lt;img src=&quot;https://blog.janestreet.com/what-the-interns-have-wrought-2020/wireshark.png&quot; alt=&quot;Wireshark screenshot with Async-RPC&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Wireshark is an interactive tool for inspecting and viewing network traffic dumps, and it’s an incredibly useful debugging and analysis tool. One of its lovely features is that it understands over 2,500 network protocols out of the box.&lt;/p&gt;
&lt;p&gt;Of course, that doesn’t mean it understands our internal-only protocols. But that’s OK! Wireshark has a &lt;a href=&quot;https://www.wireshark.org/docs/wsdg_html_chunked/ChapterDissection.html&quot;&gt;plugin interface&lt;/a&gt; for adding support for arbitrary network protocols. Henry’s project this summer was to write a plugin for &lt;a href=&quot;https://ocaml.janestreet.com/ocaml-core/latest/doc/async_rpc_kernel/Async_rpc_kernel/Rpc/index.html&quot;&gt;Async-RPC&lt;/a&gt;, which is an internally developed protocol that we use all over the place.&lt;/p&gt;
&lt;p&gt;In order to support Async-RPC, there are a bunch of different bits and pieces you need to handle. First of all you need to write code that knows how to parse Async-RPC’s core &lt;code class=&quot;highlighter-rouge&quot;&gt;Heartbeat&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Query&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Response&lt;/code&gt; messages. You also need to be able to deal with messages that are broken up over multiple packets, and even do data-dependent packet reassembly. And you need to handle decryption, since we use Kerberos for some of our message flows.&lt;/p&gt;
&lt;p&gt;All of this could be done by just writing more-or-less directly against Wireshark’s standard imperative C API. But that didn’t seem like a great idea, since that API is tricky and hard to reason about. Also, by writing directly against the C API, you end up with a parser that you can’t reasonably test without invoking all of the Wireshark functionality.&lt;/p&gt;
&lt;p&gt;Instead, Henry wrote an interface that lets you write your packet parsing logic in a way that’s abstracted from the concrete details of interacting with Wireshark, and wraps up the potentially multi-stage parsing process in what’s called a monadic interface. The details of monads aren’t important, but the key thing is that we get to use the special &lt;code class=&quot;highlighter-rouge&quot;&gt;let%bind&lt;/code&gt; syntax to mark where we’re giving control back to Wireshark to go grab more information.&lt;/p&gt;
&lt;p&gt;Here’s an example from the Async-RPC dissector of how this API works.&lt;/p&gt;
&lt;div class=&quot;language-ocaml highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;(* Parses a Message.t from lib/async_rpc_kernel/src/protocol.ml *)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_ids&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Let_syntax&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Rpc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subtree&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Wireshark_tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Heartbeat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_ids&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_ids&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subtree&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_response&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_ids&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subtree&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Wireshark_tree.add_item&lt;/code&gt; call has the effect of both adding a message type UI element to the Wireshark GUI and returning the message type so that it can be matched on to determine how to proceed with parsing. &lt;code class=&quot;highlighter-rouge&quot;&gt;fields.message_type&lt;/code&gt; is a special field type that contains the brains for parsing and displaying the protocol message type.&lt;/p&gt;
&lt;p&gt;Packet reassembly is super easy to use. You call &lt;code class=&quot;highlighter-rouge&quot;&gt;Parse.reassemble_packets_until&lt;/code&gt; to tell Wireshark how many bytes of data you are expecting should be remaining in this logical message.&lt;/p&gt;
&lt;div class=&quot;language-ocaml highlighter-rouge&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_priv_encrypted_bigstring&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_length_header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Let_syntax&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_length_header&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reassemble_packets_until&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_out&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of_length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nn&quot;&gt;Decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypt_krb_priv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of_or_error&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the data is truncated because the packet has been split, the library will handle reassembling packets from that connection until that much data is available for you and then it will call back into your parsing code as if the data were there all along.&lt;/p&gt;
&lt;p&gt;This code also supports seamlessly decrypting and displaying Kerberized RPC packet dumps. The plugin will connect to our internal authorization database and fetch the necessary data for decryption, provided the user in question has the right permissions.&lt;/p&gt;
&lt;p&gt;We’re excited about this project both because it gives us an immediate practical tool in the form of Async-RPC support for Wireshark, but also because it gives us a powerful library that makes it simple and easy to build new dissectors for new protocols!&lt;/p&gt;
&lt;h2 id=&quot;better-sharding-through-simulated-annealing&quot;&gt;Better sharding through simulated annealing&lt;/h2&gt;
&lt;p&gt;A lot our trading systems are structured in a pretty similar way: each instance of the trading system is responsible for some number of products, and each of those products implies a bunch of data that you need to consume in order to price and trade that product.&lt;/p&gt;
&lt;p&gt;ETFs are an easy-to-understand example of this. An ETF (short for Exchange Traded Fund) is essentially a company whose purpose is to hold a basket of shares of other companies. So, if you buy a share of &lt;a href=&quot;https://www.google.com/search?tbm=fin&amp;amp;q=SPY&quot;&gt;SPY&lt;/a&gt;, you’re effectively buying a small slice of every company in the S&amp;amp;P 500 index.&lt;/p&gt;
&lt;p&gt;In order to price an ETF, you want access to the marketdata of the constituents of that ETF; so, in the case of SPY, you’d want to have access to the price of the 500 constituents of the S&amp;amp;P 500 index.&lt;/p&gt;
&lt;p&gt;But, each constituent that you want data for demands some resources from the instance consuming it, and therein lies an optimization problem. How do you decide how to spread out ETFs across a collection of instances in such a way as to avoid over-taxing any individual instance? It’s not as easy as it might seem, because the right choice depends not just on the total amount of data you need, but which stocks you need data for, since it’s more efficient to put two ETFs that share many of the same constituents on the same instance.&lt;/p&gt;
&lt;p&gt;Our baseline approach to this had been pretty primitive. We used a bunch of embarrassingly manual heuristics and effectively did the sharding by hand. That’s bad for a few reasons: it takes a bunch of time, the by-hand sharding is likely not optimal, and that sharding is not going to get updated as the world changes. How busy you should expect a given security to be changes over time, and the composition of ETFs changes over time as well. If you don’t update your splits from time to time, you’re going to end up leaving performance wins on the ground. And doing the whole thing manually doesn’t incentivize you to do it often.&lt;/p&gt;
&lt;p&gt;Yulan ended up working with both the trading desk that was running this process, as well as the research group, which pointed her at some cleaner cost functions to optimize, as well as encouraging her to try out &lt;a href=&quot;https://en.wikipedia.org/wiki/Simulated_annealing&quot;&gt;simulated annealing&lt;/a&gt; in addition to the greedy algorithm she started with.&lt;/p&gt;
&lt;p&gt;And the results look really promising! We now have a solver that you can tell what ETFs to shard and some related metadata, and a few minutes later it spits out a sharding that can be used to drive the configuration of the trading systems. The results look maybe 10%-20% more efficient than the previous by-hand sharding, and, even better, this saves the desk a bunch of frustrating manual work.&lt;/p&gt;
&lt;h2 id=&quot;replacing-re2-with-re&quot;&gt;Replacing Re2 with Re&lt;/h2&gt;
&lt;p&gt;An important part of managing technical debt is &lt;a href=&quot;https://lethain.com/migrations/&quot;&gt;migrations&lt;/a&gt;, i.e., organized projects for removing deprecated code and patterns. Eric Martin’s project was part of just such a migration, in particular, migrating from one regular expression library, &lt;a href=&quot;https://github.com/google/re2&quot;&gt;Google’s Re2 library&lt;/a&gt;, to another one, a pure OCaml library called &lt;a href=&quot;https://github.com/ocaml/ocaml-re&quot;&gt;Re&lt;/a&gt;. (As an amusing side-note, our wrapper of Re2 was also an intern project, many years ago!)&lt;/p&gt;
&lt;p&gt;We’ve wanted to get rid of &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; for a while, but it’s tricky. Replacing it is painful in part because the semantics of &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; regular expressions don’t quite line up with the semantics of regular expressions in &lt;code class=&quot;highlighter-rouge&quot;&gt;Re&lt;/code&gt;. Eric’s project was to create a new library, &lt;code class=&quot;highlighter-rouge&quot;&gt;Re_replace_re2&lt;/code&gt;, which is meant to be a drop-in replacement for our &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; wrappers, which we could automatically smash into place across the tree.&lt;/p&gt;
&lt;p&gt;How hard could it be? Well, the answer, it turns out, is pretty hard. The first task was to get a parser which could be used to produce an an abstract syntax tree (AST) representing the structure of the regular expression.&lt;/p&gt;
&lt;p&gt;Instead of writing a parser in OCaml, Eric’s instead hooked into the existing &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; parser, and used that to produce an OCaml data structure representing the AST. This has a few advantages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It’s easier than reverse engineering &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; to write a parser from scratch.&lt;/li&gt;
&lt;li&gt;Even though it doesn’t entirely drop our dependency on &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt;, it does reduce the amount of code we depend on.&lt;/li&gt;
&lt;li&gt;Down the line, we hope to use it to mechanically convert &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt;-style patterns to patterns that &lt;code class=&quot;highlighter-rouge&quot;&gt;Re&lt;/code&gt; already knows how to parse, letting us further reduce our reliance on Re2.&lt;/li&gt;
&lt;li&gt;Finally, assuming we do eventually need to write a pure OCaml parser, having a nice wrapped-up version of the C++ parser makes testing it easier.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;But parsing isn’t the only job that needs to be done. Once you have the AST to represent the &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; regexp, you still need some way to encode it in &lt;code class=&quot;highlighter-rouge&quot;&gt;Re&lt;/code&gt;. And that’s tricky, because, despite them both being “regular expression” engines, they don’t quite implement classical regular expressions; they always have a few, often ill-specified, extensions up their sleeve, which makes the translation a bit more fraught.&lt;/p&gt;
&lt;p&gt;So a big part of the story of getting this library right was testing! Eric deployed &lt;a href=&quot;https://opensource.janestreet.com/base_quickcheck/&quot;&gt;Quickcheck&lt;/a&gt; for doing some &lt;a href=&quot;https://en.wikipedia.org/wiki/Bisimulation&quot;&gt;bisimulation&lt;/a&gt;-style testing to check that &lt;code class=&quot;highlighter-rouge&quot;&gt;Re_replaces_re2&lt;/code&gt; behaves the same way as &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; proper. (Quickcheck is a neat idiom for building probability distributions for generating examples for tests, and bisimulation is a technique where you essentially run two implementations of the same program together and check the results against each other.)&lt;/p&gt;
&lt;p&gt;Eric also used a seemingly magical tool called &lt;a href=&quot;https://lcamtuf.coredump.cx/afl/&quot;&gt;AFL&lt;/a&gt;, which is a fuzzer that is shockingly good at generating test cases to exercise specially instrumented programs. He used this specifically for finding bugs in his C++ parsing code.&lt;/p&gt;
&lt;p&gt;Anyway, the end result of all this good work is that we have a version of &lt;code class=&quot;highlighter-rouge&quot;&gt;Re_replace_re2&lt;/code&gt; that’s nearly ready to be used, at least to remove a large fraction of the uses of &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt;. There are still some semantic gaps (some of which depend on fixes to &lt;code class=&quot;highlighter-rouge&quot;&gt;Re&lt;/code&gt; itself that Eric &lt;a href=&quot;https://github.com/ocaml/ocaml-re/pull/179&quot;&gt;submitted upstream&lt;/a&gt;!), which means it’s not quite ready to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;Re2&lt;/code&gt; everywhere. All of which goes to show, migrations are hard work.&lt;/p&gt;

&lt;p&gt;I hope this gives you a feel for the kind of work interns get to do at Jane Street. We aim to give interns projects that both teach them interesting things, and also have real impact on the organization. I think we did pretty well on that this summer.&lt;/p&gt;
&lt;p&gt;If this sounds like fun to you, you should &lt;a href=&quot;https://www.janestreet.com/join-jane-street/apply/&quot;&gt;apply&lt;/a&gt;. And &lt;a href=&quot;https://blog.janestreet.com/applying-to-jane-street/&quot;&gt;this&lt;/a&gt; is a good place to start if you want to learn more about the interview process.&lt;/p&gt;
&lt;p&gt;(Links to &lt;a href=&quot;https://www.reddit.com/r/programming/comments/igdkjr/wireshark_dissectors_in_ocaml_simulated_annealing/&quot;&gt;Reddit&lt;/a&gt; and &lt;a href=&quot;https://news.ycombinator.com/item?id=24271898&quot;&gt;HN&lt;/a&gt;, if you want to comment on the post.)&lt;/p&gt;
</description>
<pubDate>Tue, 25 Aug 2020 14:50:24 +0000</pubDate>
<dc:creator>yminsky</dc:creator>
<og:type>article</og:type>
<og:title>What the interns have wrought, 2020 edition</og:title>
<og:description>It’s been an unusual internship season.</og:description>
<og:url>https://blog.janestreet.com/what-the-interns-have-wrought-2020/</og:url>
<og:image>https://blog.janestreet.com/what-the-interns-have-wrought-2020/./distributed-wrought.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.janestreet.com/what-the-interns-have-wrought-2020/</dc:identifier>
</item>
<item>
<title>Firefox 80</title>
<link>https://www.mozilla.org/en-US/firefox/80.0/releasenotes/</link>
<guid isPermaLink="true" >https://www.mozilla.org/en-US/firefox/80.0/releasenotes/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/80.0/releasenotes/&quot;&gt;https://www.mozilla.org/en-US/firefox/80.0/releasenotes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=24271493&quot;&gt;https://news.ycombinator.com/item?id=24271493&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 380&lt;/p&gt;
&lt;p&gt;# Comments: 268&lt;/p&gt;
</description>
<pubDate>Tue, 25 Aug 2020 14:10:51 +0000</pubDate>
<dc:creator>amake</dc:creator>
<og:type>website</og:type>
<og:url>https://www.mozilla.org/en-US/firefox/80.0/releasenotes/</og:url>
<og:image>https://www.mozilla.org/media/protocol/img/logos/firefox/browser/og.4ad05d4125a5.png</og:image>
<og:title>Firefox  80.0, See All New Features, Updates and Fixes</og:title>
<og:description></og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.mozilla.org/en-US/firefox/80.0/releasenotes/</dc:identifier>
</item>
<item>
<title>Kindle collects a surprisingly large amount of data</title>
<link>https://nullsweep.com/kindle-collects-a-surprisingly-large-amount-of-data/</link>
<guid isPermaLink="true" >https://nullsweep.com/kindle-collects-a-surprisingly-large-amount-of-data/</guid>
<description>&lt;p&gt;As an avid reader, I've owned several generations of Kindle devices, from the original to the Paperwhite, and loved each of them.&lt;/p&gt;&lt;p&gt;However, I have also kept a watchful eye on the abuse potential of the new format. Because Amazon technically owns the content you view, they may revoke it at any time. There have been cases of Amazon &lt;a href=&quot;https://io9.gizmodo.com/amazon-secretly-removes-1984-from-the-kindle-5317703&quot;&gt;removing specific books&lt;/a&gt; from customer accounts (and kindles). Considerably worse, there are also cases of Amazon revoking user accounts and &lt;a href=&quot;https://www.bekkelund.net/2012/10/22/outlawed-by-amazon-drm/&quot;&gt;removing all access to purchased books&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kindle services leverage reading data to offer some nice features that traditional books can't offer: maintaining bookmarks and notes between devices, keeping all devices synced with the last read page, and more. It also shows ads and recommendations for next books to read on the kindle.&lt;/p&gt;
&lt;p&gt;I was curious to know if the Kindle was only sending the data required for these services, or if other data about me was being sent.&lt;/p&gt;
&lt;h2 id=&quot;turns-out-kindle-collects-a-ton-of-data&quot;&gt;Turns out, Kindle Collects a Ton of Data&lt;/h2&gt;
&lt;p&gt;The Kindle sends device information, usage metadata, and details about every interaction with the device (or app) while it's being used. All of this is linked directly to the reader account.&lt;/p&gt;
&lt;p&gt;Opening the app, reading a book, flipping through a few pages, then closing the book sends over 100 requests to Amazon servers.&lt;/p&gt;
&lt;img src=&quot;https://nullsweep.com/content/images/2020/08/kindle_data_flows.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot;/&gt;Kindle data requests
&lt;h3 id=&quot;the-invasive-behavioral-information&quot;&gt;The Invasive Behavioral Information&lt;/h3&gt;
&lt;p&gt;Essentially, the Kindle tracks every tap and interaction someone makes while reading.&lt;/p&gt;
&lt;p&gt;Every page that is read sends the following information:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Time a page was opened (when you turn to a new page, a timestamp is generated)&lt;/li&gt;
&lt;li&gt;The first character on the page (This might be something like character 7705 in the book, which is the exact location)&lt;/li&gt;
&lt;li&gt;The last character on the page&lt;/li&gt;
&lt;li&gt;If the page is images or text&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here's a sample record that is sent with every page read:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-json&quot;&gt;{
    &quot;created_timestamp&quot;: 1597743233808,
    &quot;payload&quot;: {
        &quot;context&quot;: &quot;Reading&quot;,
        &quot;continuous_scroll_state&quot;: &quot;disabled&quot;,
        &quot;end_position&quot;: 4708,
        &quot;is_scrolled_over_span&quot;: false,
        &quot;span_type&quot;: &quot;Text&quot;,
        &quot;start_position&quot;: 4193
    },
    &quot;schema_name&quot;: &quot;kindle_positions_consumed_v2&quot;,
    &quot;schema_version&quot;: 0,
    &quot;sent_timestamp&quot;: 1597743233855,
    &quot;sequence_number&quot;: 26
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Every reading session will also generate a summary of how many pages were read in different modes:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-json&quot;&gt;{
    &quot;created_timestamp&quot;: 1597743255324,
    &quot;payload&quot;: {
        &quot;action_type&quot;: &quot;PageTurn&quot;,
        &quot;book_length&quot;: 2003478,
        &quot;context&quot;: &quot;Reading&quot;,
        &quot;count&quot;: 10,
        &quot;navigation_end_location&quot;: 7884,
        &quot;navigation_mode&quot;: &quot;Horizontal&quot;,
        &quot;navigation_start_location&quot;: 3599
    },
    &quot;schema_name&quot;: &quot;reader_in_book_navigation_v2&quot;,
    &quot;schema_version&quot;: 0,
    &quot;sent_timestamp&quot;: 1597743265854,
    &quot;sequence_number&quot;: 36
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Similar data sets are sent for opening the app, whether it is in the background when opened, when a book is opened or closed, and when settings like font size are changed. Highlighting or tapping any word will send the requests with the text to Bing Translate and Wikipedia, as well as back to Amazon.&lt;/p&gt;
&lt;p&gt;None of these requests appear to be used for customer features like last read location. Instead, the highlights, last read location, and other information is sent a second time, to a different endpoint, on a periodic basis, with much less granular information.&lt;/p&gt;
&lt;p&gt;Each request also isn't sent as soon as it's generated. A number of these records are created and stored locally, then uploaded (note the sequence_number field). Even if a person is offline while reading, this data is stored and sent when reconnected.&lt;/p&gt;
&lt;h3 id=&quot;device-information&quot;&gt;Device Information&lt;/h3&gt;
&lt;p&gt;The Kindle also includes a few more bits of personal information I would rather it didn't:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Country of residence&lt;/li&gt;
&lt;li&gt;Attempt to get the IP address on the local network (a 10. address, which was incorrect for me)&lt;/li&gt;
&lt;li&gt;device information and version (screen sizes, make and model (iphone vs. Android vs. Kindle), software version&lt;/li&gt;
&lt;li&gt;Good Reads account details&lt;/li&gt;
&lt;li&gt;Device orientation (portrait vs. landscape)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Some of this is likely to help Amazon understand how users use the app, so they can improve it for those use cases. The local IP is the only item on here that bothers me, though I couldn't find any other local network information that would be problematic.&lt;/p&gt;
&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;The Kindle is far from the most invasive privacy app I have seen, but it records a lot of behavioral reading information I don't like. I've been trying to get away from the the Kindle ecosystem for the past year or so, and now use &lt;a href=&quot;https://apps.apple.com/us/app/marvin-3/id1086482858&quot;&gt;Marvin&lt;/a&gt; for reading on my iPhone. I no longer use the Kindle device, though I dearly miss e-Ink.&lt;/p&gt;
&lt;p&gt;Unfortunately, in order to use a non-Kindle application, I have to buy DRM-Free books. It isn't always easy to find them, though the Kobo bookstore and small niche providers often offer them, and some can even be found on Amazon.&lt;/p&gt;
</description>
<pubDate>Tue, 25 Aug 2020 13:14:25 +0000</pubDate>
<dc:creator>BCharlie</dc:creator>
<og:type>article</og:type>
<og:title>Kindle Collects a Surprisingly Large Amount of Data</og:title>
<og:description>Reading a book on a Kindle sends Amazon a lot of data about reading habits. How fast pages are turned, font sizes and views, and device details.</og:description>
<og:url>https://nullsweep.com/kindle-collects-a-surprisingly-large-amount-of-data/</og:url>
<og:image>https://images.unsplash.com/photo-1456953180671-730de08edaa7?ixlib=rb-1.2.1&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;cs=tinysrgb&amp;w=2000&amp;fit=max&amp;ixid=eyJhcHBfaWQiOjExNzczfQ</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nullsweep.com/kindle-collects-a-surprisingly-large-amount-of-data/</dc:identifier>
</item>
<item>
<title>Apple ordered to not block Epic’s Unreal Engine, Fortnite to stay off App Store</title>
<link>https://techcrunch.com/2020/08/24/apple-ordered-to-not-block-epic-games-unreal-engine-but-fortnite-to-stay-off-app-store/</link>
<guid isPermaLink="true" >https://techcrunch.com/2020/08/24/apple-ordered-to-not-block-epic-games-unreal-engine-but-fortnite-to-stay-off-app-store/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;A district court denied &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/epic-games-2&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;epic-games-2&quot;&gt;Epic Games’&lt;/a&gt; motion to temporarily restore the Fortnite game to the iOS App Store, but also ordered &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/apple&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;apple&quot;&gt;Apple&lt;/a&gt; to not block the gaming giant’s ability to provide and distribute Unreal Engine on the iPhone-maker’s ecosystem in a mixed-ruling delivered Monday evening.&lt;/p&gt;
&lt;p&gt;U.S. District Court Judge Yvonne Gonzalez Rogers said Apple can’t retaliate against Epic Games by blocking the gaming firm’s developer accounts or restrict developers on Apple platforms from accessing the widely used Unreal Engine tools.&lt;/p&gt;
&lt;p&gt;“The record shows potential significant damage to both the Unreal Engine platform itself, and to the gaming industry generally, including on both third-party developers and gamers,” she said, adding that even as Epic Games violated App Store’s guidelines, it did not breach any contracts related to Unreal Engine and developer tools.&lt;/p&gt;

&lt;p&gt;“Apple has chosen to act severely, and by doing so, has impacted non-parties, and a third-party developer ecosystem,” said Rogers.&lt;/p&gt;
&lt;p&gt;But the ruling was not a complete win for Epic Games, which had also requested the sleeper hit title Fortnite to be restored on the iOS App Store. Rogers said the game will remain off the App Store unless Epic Games attempted to bring it back in accordance with App Store guidelines.&lt;/p&gt;
&lt;p&gt;The Monday ruling caps — for now — the high-stakes public battle between giants Apple and Epic Games over the fundamental rules of iPhone’s App Store. Epic broke Apple’s and Google’s app stores guidelines earlier this month when it provided Fortnite users on iOS and Android the ability to pay it directly.&lt;/p&gt;
&lt;p&gt;Apple and Google require developers on their platforms to use their respective payment processing systems and comply to paying a commission — which for games, is 30% of the transaction amount.&lt;/p&gt;
&lt;p&gt;Epic’s move prompted Apple to remove Fortnite, perhaps the best selling mobile game to date, &lt;a href=&quot;https://techcrunch.com/2020/08/13/fortnite-app-store-removed-apple/&quot;&gt;from its App Store&lt;/a&gt;. Anticipating what Apple will do, minutes after Fortnite was pulled from the App Store, Epic Games &lt;a href=&quot;https://techcrunch.com/2020/08/13/epic-games-launches-a-campaign-and-lawsuit-against-apples-app-store/&quot;&gt;filed a lawsuit against Apple&lt;/a&gt; and kickstarted one of the weirdest — or boldest (depending on who you ask) — marketing campaigns.&lt;/p&gt;
&lt;p&gt;The following day, Apple informed Epic Games that, based on its breaches of the App Store guidelines and the developer program license agreement, it would be revoking all developer tools, which would preclude updates for other programs, including the Unreal Engine, by August 28. Epic Games later &lt;a href=&quot;https://techcrunch.com/2020/08/17/epic-games-apple-injunction/&quot;&gt;filed a motion for an injunction against Apple&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unreal Engine is a widely popular suite of creation tools for gaming developers. In recent years, its offerings have become so compelling that it has been used in commercial movies and TV shows, such as Disney+’s “&lt;a href=&quot;https://techcrunch.com/2020/02/20/how-the-mandalorian-and-ilm-invisibly-reinvented-film-and-tv-production/&quot;&gt;The Mandalorian&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;Epic Games claimed last week that developers were already leaving Unreal Engine as uncertainty loomed over its future on the Apple ecosystem. Kevin Gammill, Microsoft’s general manager of Gaming Developer Experiences, declared his support for Epic in an additional filing appended to Epic’s request for a restraining order over the weekend.&lt;/p&gt;
&lt;p&gt;Phil Spencer, the head of Xbox, also &lt;a href=&quot;https://twitter.com/XboxP3/status/1297577235939856385&quot;&gt;tweeted&lt;/a&gt;: “[…] We filed a statement in support of Epic’s request to keep access to the Apple SDK for its Unreal Engine. Ensuring that Epic has access to the latest Apple technology is the right thing for gamer developers &amp;amp; gamers.”&lt;/p&gt;
&lt;p&gt;It’s worth pointing out that Microsoft and Apple are &lt;a href=&quot;https://techcrunch.com/2020/08/09/apple-goes-to-war-with-the-gaming-industry/&quot;&gt;locked in a side battle of their own&lt;/a&gt;.&lt;/p&gt;


</description>
<pubDate>Tue, 25 Aug 2020 07:12:34 +0000</pubDate>
<dc:creator>jmsflknr</dc:creator>
<og:title>Apple ordered to not block Epic Games’ Unreal Engine, but Fortnite to stay off App Store – TechCrunch</og:title>
<og:description>A district court denied Epic Games’ motion to temporarily restore the Fortnite game to the iOS App Store, but also ordered Apple to not block the gaming giant’s ability to provide and distribute Unreal Engine on the iPhone-maker’s ecosystem in a mixed-ruling delivered Monday eveni…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2020/08/epic-fortnite-GettyImages-1149627286.jpg?w=600</og:image>
<og:url>https://social.techcrunch.com/2020/08/24/apple-ordered-to-not-block-epic-games-unreal-engine-but-fortnite-to-stay-off-app-store/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2020/08/24/apple-ordered-to-not-block-epic-games-unreal-engine-but-fortnite-to-stay-off-app-store/</dc:identifier>
</item>
<item>
<title>How to Write in Plain English</title>
<link>http://www.plainenglish.co.uk/how-to-write-in-plain-english.html</link>
<guid isPermaLink="true" >http://www.plainenglish.co.uk/how-to-write-in-plain-english.html</guid>
<description>&lt;h3&gt;Copyright&lt;/h3&gt;
&lt;p&gt;Plain English Campaign owns the copyright to this guide. You are welcome to print out any of our guides or save them to disk for your own use. You may not photocopy any guide or pass on electronic copies without our permission.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Contents&lt;/h3&gt;
&lt;p&gt;This guide begins with an introduction called, ‘So what's plain English?’&lt;/p&gt;
&lt;p&gt;The guide then looks at the main ways to make writing clearer.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Keep your sentences short&lt;/li&gt;
&lt;li&gt;Prefer active verbs&lt;/li&gt;
&lt;li&gt;Use 'you' and 'we'&lt;/li&gt;
&lt;li&gt;Use words that are appropriate for the reader&lt;/li&gt;
&lt;li&gt;Don't be afraid to give instructions&lt;/li&gt;
&lt;li&gt;Avoid nominalisations&lt;/li&gt;
&lt;li&gt;Use lists where appropriate&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The guide then looks at the difficult subject of apologising, and deals with some of the myths that can get in the way of clear communication.&lt;/p&gt;
&lt;p&gt;The guide finishes with a summary and a list of words to avoid.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;So what's plain English?&lt;/h3&gt;
&lt;p&gt;First let's say what plain English isn't and destroy some of the myths about it.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's not 'cat sat on the mat’ or 'Janet and John' writing. Almost anything - from leaflets and letters to legal documents - can be written in plain English without being patronising or oversimplified.&lt;/li&gt;
&lt;li&gt;It doesn't mean reducing the length of your message or changing its meaning. Most of the UK's biggest insurance companies produce policies that explain everything fully in plain English.&lt;/li&gt;
&lt;li&gt;It's not about banning new words, killing off long words or promoting completely perfect grammar. Nor is it about letting grammar slip.&lt;/li&gt;
&lt;li&gt;It is not an amateur's method of communication. Most forward-looking senior managers always write in plain English.&lt;/li&gt;
&lt;li&gt;And finally, it is not as easy as we would like to think.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sadly, thanks to the bureaucrats of public service industries, local councils, banks, building societies, insurance companies and government departments, we have learnt to accept an official style of writing that is inefficient and often unfriendly.&lt;/p&gt;
&lt;p&gt;But in the last few years, many of these offenders have started to put things right, either rewriting their documents clearly or training their staff in the art of plain English, or both.&lt;/p&gt;
&lt;p&gt;The main advantages of plain English are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it is faster to write;&lt;/li&gt;
&lt;li&gt;it is faster to read; and&lt;/li&gt;
&lt;li&gt;you get your message across more often, more easily and in a friendlier way.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you spend more than an hour a day writing, you are to an extent a professional writer. So it's vital that you get it right.&lt;/p&gt;
&lt;p&gt;So what is plain English? It is a message, written with the reader in mind and with the right tone of voice, that is clear and concise.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Keep your sentences short&lt;/h3&gt;
&lt;p&gt;Most experts would agree that clear writing should have an average sentence length of 15 to 20 words.&lt;/p&gt;
&lt;p&gt;This does not mean making every sentence the same length. Be punchy. Vary your writing by mixing short sentences (like the last one) with longer ones (like this one). Follow the basic principle of sticking to one main idea in a sentence, plus perhaps one other related point. You should soon be able to keep to the average sentence length - used by top journalists and authors - quite easily.&lt;/p&gt;
&lt;p&gt;However, at first you may still find yourself writing the odd long sentence, especially when trying to explain a complicated point. But most long sentences can be broken up in some way.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Prefer active verbs&lt;/h3&gt;
&lt;p&gt;Do you want your letters to sound active or passive - crisp and professional or stuffy and bureaucratic?&lt;/p&gt;
&lt;p&gt;To explain the difference between active and passive verbs, we need to look briefly at how a sentence fits together. There are three main parts to almost every sentence:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a &lt;strong&gt;subject&lt;/strong&gt; (the person, group or thing doing the action);&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;verb&lt;/strong&gt; (the action itself); and&lt;/li&gt;
&lt;li&gt;an &lt;strong&gt;object&lt;/strong&gt; (the person, group or thing that the action is done to).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To give an example, in the sentence 'Peter watched the television':&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the &lt;strong&gt;subject&lt;/strong&gt; is Peter (he is doing the watching);&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;verb&lt;/strong&gt; is watched; and&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;object&lt;/strong&gt; is the television (it is being watched).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Of course, there will usually be lots of other words as well. For example: 'Peter, the boy from number 13, watched the television every Friday night'. But the subject, verb and object are still there.&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;Peter (&lt;strong&gt;subject&lt;/strong&gt;) watched (&lt;strong&gt;verb&lt;/strong&gt;) the television (&lt;strong&gt;object&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;'Watched' is an active verb here. The sentence says who is doing the watching before it says what is being watched.&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;With a passive sentence, the &lt;strong&gt;object&lt;/strong&gt; becomes the &lt;strong&gt;subject&lt;/strong&gt; and the &lt;strong&gt;subject&lt;/strong&gt; becomes the &lt;strong&gt;object&lt;/strong&gt;. The television (&lt;strong&gt;subject&lt;/strong&gt;) was watched (&lt;strong&gt;verb&lt;/strong&gt;) by Peter (&lt;strong&gt;object&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Watched is a passive verb here.&lt;/p&gt;
&lt;p&gt;You can see that by making the sentence passive, we have had to introduce the words 'was' and 'by', and the sentence becomes more clumsy.&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;Remember that the subject is not always a person and the object is not always a thing! 'The tree crushed Peter' is active but 'Peter was crushed by the tree' is passive.&lt;/p&gt;
&lt;p&gt;Here are some more examples of how to turn a passive verb into an active verb.&lt;/p&gt;
&lt;p&gt;This matter will be considered by us shortly. (Passive)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;We will consider this matter shortly. (Active)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The riot was stopped by the police. (Passive)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The police stopped the riot. (Active)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The mine had to be closed by the authority. (Passive)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The authority had to close the mine. (Active)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Passive verbs cause several problems.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;They can be confusing.&lt;/li&gt;
&lt;li&gt;They often make writing more long-winded.&lt;/li&gt;
&lt;li&gt;They make writing less lively.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Good uses of passives&lt;/h3&gt;
&lt;p&gt;There are times of course when it might be appropriate to use a passive.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;To make something less hostile - 'this bill has not been paid' (passive) is softer than 'you have not paid this bill' (active).&lt;/li&gt;
&lt;li&gt;To avoid taking the blame - 'a mistake was made' (passive) rather than 'we made a mistake' (active).&lt;/li&gt;
&lt;li&gt;When you don't know who or what the doer is - 'the England team has been picked'.&lt;/li&gt;
&lt;li&gt;If it simply sounds better.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;But aim to make about 80 to 90% of your verbs active.&lt;/p&gt;
&lt;p&gt;This difference between active and passive verbs is not easy to grasp. Some people never really get it. So if you are confused, read this section again.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Use 'you' and 'we'&lt;/h3&gt;
&lt;p&gt;Try to call the reader 'you', even if the reader is only one of many people you are talking about generally. If this feels wrong at first, remember that you wouldn't use words like 'the applicant' and 'the supplier' if you were speaking to somebody sitting across a desk from you.&lt;/p&gt;
&lt;p&gt;Here are some examples of this.&lt;/p&gt;
&lt;p&gt;Applicants must send us...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;You must send us...&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We always tell customers before we...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;We will tell you before we...&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Advice is available from...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;You can get advice from&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Similarly, always call your organisation 'we'. And there is nothing wrong with using 'we' and 'I' in the same letter.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Use words that are appropriate for the reader&lt;/h3&gt;
&lt;p&gt;When you are talking to your reader, say exactly what you mean, using the simplest words that fit. This does not necessarily mean only using simple words - just words that the reader will understand.&lt;/p&gt;
&lt;p&gt;At the end of this guide there is a list of a few of the words that we suggest you avoid. But for most words you will have to decide yourself whether they are suitable.&lt;/p&gt;
&lt;p&gt;Jargon is a type of language that is only understood by a particular group of people. You can use jargon when writing to people who will understand the terms and phrases. It can be a useful form of shorthand. But try to avoid using specialist jargon on the general public.&lt;/p&gt;
&lt;p&gt;So in general, keep to everyday English whenever possible. And again, imagine talking to your reader across a table.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Don't be afraid to give instructions&lt;/h3&gt;
&lt;p&gt;Sit!&lt;/p&gt;
&lt;p&gt;Brush your teeth.&lt;/p&gt;
&lt;p&gt;Please send it to me.&lt;/p&gt;
&lt;p&gt;These are all commands - officially called imperatives. They are the fastest and most direct way of giving someone instructions.&lt;/p&gt;
&lt;p&gt;However, if we asked a hardened bureaucrat to write these expressions, we would end up with something like the following.&lt;/p&gt;
&lt;p&gt;Dogs are advised that they should sit down.&lt;/p&gt;
&lt;p&gt;Your teeth should be brushed.&lt;/p&gt;
&lt;p&gt;I should be grateful if you would send it to me.&lt;/p&gt;
&lt;p&gt;There always seems to be a fear of commands. The most common fault is putting 'customers should do this' or 'you should do this' instead of just 'do this'. Perhaps people worry that commands sound too harsh. But you can often solve this by putting the word 'please' in front. However, if something must be done, it is best not to say ‘please’ as it gives the reader the option to refuse the request.&lt;/p&gt;
&lt;p&gt;Here are some examples of long-winded phrases and shorter versions that use commands.&lt;/p&gt;
&lt;p&gt;You should just think of it as a complete statement.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Just think of it as a complete statement.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Writers should aim to be punchy.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Be punchy.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;They should be split where suitable&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Split them where suitable.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The last example is probably the worst because it uses a passive verb - 'should be split'. Unfortunately this is very common in instructions. For example:&lt;/p&gt;
&lt;p&gt;The packet should be removed from the box. The contents should then be placed in the oven.&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Remove the packet from the box. Then place the contents in the oven.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;hr /&gt;&lt;h3&gt;Avoid nominalisations&lt;/h3&gt;
&lt;p&gt;A nominalisation is a type of abstract noun. (Is that plain English?) In other words, it is the name of something that isn't a physical object, such as a process, technique or emotion.&lt;/p&gt;
&lt;p&gt;Nominalisations are formed from verbs.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;table cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Verb&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Nominalisation&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;completion&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;introduce&lt;/td&gt;
&lt;td&gt;introduction&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;provide&lt;/td&gt;
&lt;td&gt;provision&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;failure&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;arrange&lt;/td&gt;
&lt;td&gt;arrangement&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;investigate&lt;/td&gt;
&lt;td&gt;investigation&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;So what's wrong with them?&lt;/h3&gt;
&lt;p&gt;The problem is that often they are used instead of the verbs they come from. And because they are merely the names of things, they sound as if nothing is actually happening in the sentence. Like passive verbs, too many of them make writing very dull and heavy-going.&lt;/p&gt;
&lt;p&gt;Here are some examples.&lt;/p&gt;
&lt;p&gt;We had a discussion about the matter.&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;We discussed the matter.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;There will be a stoppage of trains by drivers.&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Drivers will stop the trains.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;The implementation of the method has been done by a team.&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;A team has implemented the method.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;hr /&gt;&lt;h3&gt;Use lists where appropriate&lt;/h3&gt;
&lt;p&gt;Lists are excellent for splitting information up.&lt;/p&gt;
&lt;p&gt;There are two main types of list.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A list that is a continuous sentence with several listed points picked out at the beginning, middle or end.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;A list of separate points with an introductory statement (like this list).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In the list above, each point is a complete sentence so they each start with a capital letter and end with a full stop.&lt;/p&gt;
&lt;p&gt;With a list that is part of a continuous sentence, put semicolons (;) after each point and start each with a lower-case letter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you can prove that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;you were somewhere else at the time;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;you were not related to Mary; and&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;you are over 21;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;you should be all right&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the next to last point has 'and' after the semicolon. If you only had to prove one of the three points instead of all of them, this word would be 'or'.&lt;/p&gt;
&lt;p&gt;Make sure each point follows logically and grammatically from the introduction. For example, if you took out 'you' from the second and third points it would still flow as a normal sentence but not as a list. The introductory line and the third point would then read, 'If you can prove that are over 21', which obviously does not make sense.&lt;/p&gt;
&lt;p&gt;For a list of short points, it is better to set it out in one of the following ways.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kevin needed to take the following.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;A penknife&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Some string&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A pad of paper&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A pen&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Kevin needed to take:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;a penknife&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;some string&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;a pad of paper; and&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;a pen.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You should use bullet points in lists. These are better than numbers or letters as they draw your attention to each point without giving you extra information to take in.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Apologising&lt;/h3&gt;
&lt;p&gt;If you are replying to a tricky letter or a complaint, or are dealing with a difficult problem, put yourself in the reader's shoes. Be professional, not emotional. You may have to give a firm, unwelcome answer, but be as helpful and polite as possible. If you are going to apologise, do so early. If the problem is your fault, say so. Apologise completely and concisely, sympathetically and sincerely. And whether it is your fault or not, try to emphasise what you can do for the other person.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Myths&lt;/h3&gt;
&lt;p&gt;We're not trying to be trendy here by breaking grammatical rules. We're just going to destroy some of the grammatical myths.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can start a sentence with &lt;strong&gt;and, but, because, so&lt;/strong&gt; or &lt;strong&gt;however&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You can split infinitives. So you can say &lt;strong&gt;to boldly go&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You can end a sentence with a preposition. In fact, it is something &lt;strong&gt;we should stand up for&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;And &lt;strong&gt;you&lt;/strong&gt; can use the same &lt;strong&gt;word&lt;/strong&gt; twice in a sentence if &lt;strong&gt;you&lt;/strong&gt; can't find a better &lt;strong&gt;word&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Of course, this does not mean you should break these so-called rules all the time - just when they make a sentence flow better.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Summary&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Stop and think&lt;/strong&gt; before you start writing. Make a note of the points you want to make in a logical order.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prefer short words&lt;/strong&gt;. Long words will not impress your customers or help your writing style.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use everyday English&lt;/strong&gt; whenever possible. Avoid jargon and legalistic words, and always explain any technical terms you have to use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep your sentence length down&lt;/strong&gt; to an average of 15 to 20 words. Try to stick to one main idea in a sentence.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use active verbs as much as possible&lt;/strong&gt;. Say ‘we will do it’ rather than ‘it will be done by us’.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be concise&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Imagine you are talking to your reader&lt;/strong&gt;. Write sincerely, personally, in a style that is suitable and with the right tone of voice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;And always check that your writing is clear, helpful, human and polite&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;hr /&gt;&lt;h3&gt;Words to avoid&lt;/h3&gt;
&lt;p&gt;Try to use the alternatives we suggest in brackets.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;additional (extra)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;advise (tell)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;applicant (you)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commence (start)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;complete (fill in)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;comply with (keep to)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;consequently (so)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ensure (make sure)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;forward (send)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;in accordance with (under, keeping to)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;in excess of (more than)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;in respect of (for)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;in the event of (if)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;on receipt (when we/you get)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;on request (if you ask)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;particulars (details)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;per annum (a year)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;persons (people)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;prior to (before)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;purchase (buy)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;regarding (about)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;should you wish (if you want)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;terminate (end)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;whilst (while)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are just a few suggestions. We have a much more comprehensive A-Z available.&lt;/p&gt;
&lt;hr /&gt;&lt;h3&gt;Training from Plain English Campaign&lt;/h3&gt;
&lt;p&gt;We offer training courses to teach you how to write your documents in plain English. We run the following types of course.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Open courses, held at various hotels throughout the country.&lt;/li&gt;
&lt;li&gt;In-house courses, where we come to your organisation and train your staff. This means we can tailor our training to your organisation's work.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can also follow our Plain English Diploma Course. This is a 12-month course, leading to a qualification in plain English.&lt;/p&gt;
&lt;p&gt;We now offer two courses teaching English grammar. Our Grammarcheck Course is designed to teach delegates the fundamentals of grammar, punctuation, sentence construction and spelling which are so essential for clear communication. We also occasionally hold an Advanced Grammar Course, which goes into more detail on the grammar of standard English.&lt;/p&gt;
&lt;p&gt;You may also be interested in The Plain English Course - our pack of materials to help you train your own staff.&lt;/p&gt;
&lt;p&gt;For more details on any of the courses, please go to our &lt;a href=&quot;http://www.plainenglish.co.uk/services/training.html&quot; target=&quot;_self&quot; title=&quot;Training&quot;&gt;training page&lt;/a&gt;. If you have any specific questions about training courses, please call our training administrator, Terri Schabel, on 01663 744409 or email us at &lt;a href=&quot;mailto:info@plainenglish.co.uk&quot;&gt;info@plainenglish.co.uk&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;</description>
<pubDate>Tue, 25 Aug 2020 05:35:43 +0000</pubDate>
<dc:creator>zackhsi</dc:creator>
<dc:language>en-gb</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.plainenglish.co.uk/how-to-write-in-plain-english.html</dc:identifier>
</item>
<item>
<title>2,000-year-old redwoods survive wildfire at California&amp;#039;s oldest state park</title>
<link>https://www.nbcnews.com/news/us-news/2-000-year-old-redwoods-survive-wildfire-california-s-oldest-n1237949</link>
<guid isPermaLink="true" >https://www.nbcnews.com/news/us-news/2-000-year-old-redwoods-survive-wildfire-california-s-oldest-n1237949</guid>
<description>&lt;p class=&quot;endmarkEnabled&quot;&gt;BOULDER CREEK, Calif. — When a &lt;a href=&quot;https://www.nbcnews.com/news/california-wildfires&quot; target=&quot;_blank&quot;&gt;massive wildfire&lt;/a&gt; swept through California’s oldest state park last week it was feared many trees in a grove of old-growth redwoods, some of them 2,000 years old and among the tallest living things on Earth, may finally have succumbed.&lt;/p&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;But an Associated Press reporter and photographer hiked the renowned Redwood Trail at Big Basin Redwoods State Park on Monday and confirmed most of the ancient redwoods had withstood the blaze. Among the survivors is one dubbed Mother of the Forest.&lt;/p&gt;


&lt;p class=&quot;endmarkEnabled&quot;&gt;“That is such good news, I can’t tell you how much that gives me peace of mind,” said Laura McLendon, conservation director for the Sempervirens Fund, an environmental group dedicated to the protection of redwoods and their habitats.&lt;/p&gt;
&lt;section class=&quot;inlineVideo___3Rd2d contentBody___1zFVF mv8&quot;&gt;&lt;div class=&quot;background___zbjAK&quot;&gt;
&lt;div class=&quot;player___3fr8s&quot;&gt;
&lt;div class=&quot;videoPlayer videoPlayer___2h7vD adNotPlaying___xzHl5&quot; data-test=&quot;video-player&quot;&gt;
&lt;div class=&quot;videoSlate relative&quot;&gt;
&lt;div class=&quot;vilynx_enabled&quot; data-vilynx-id=&quot;https://www.nbcnews.com/nightly-news/video/california-wildfires-total-over-one-million-acres-90518085757&quot; data-vilynx-audiopolicycta=&quot;true&quot;&gt;&lt;img src=&quot;https://media14.s-nbcnews.com/j/MSNBC/Components/Video/202008/nn_spa_western_wildfires_raging_200823_1920x1080.focal-760x428.jpg&quot;/&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;info___Z7ow1 pt4 pl4 pr8 pt5-m pl6-m pr9-m&quot;&gt;

&lt;span class=&quot;infoText___-6qz1 f2 ttu mt3&quot;&gt;&lt;span&gt;Aug. 23, 2020&lt;/span&gt;&lt;span&gt;02:05&lt;/span&gt;&lt;/span&gt;

&lt;/div&gt;
&lt;/section&gt;&lt;p class=&quot;endmarkEnabled&quot;&gt;Redwood forests are meant to burn, she said, so reports earlier this week that the state park was “gone” were misleading.&lt;/p&gt;
&lt;div class=&quot;newsletter-signup__container&quot; readability=&quot;6.6127167630058&quot;&gt;
&lt;p&gt;Let our news meet your inbox. The news and stories that matters, delivered weekday mornings.&lt;/p&gt;

&lt;/div&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;The historic park headquarters is gone, as are many small buildings and campground infrastructure that went up in flames as fire swept through the park about 45 miles south of San Francisco.&lt;/p&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;“But the forest is not gone,” McLendon said. “It will regrow. Every old growth redwood I’ve ever seen, in Big Basin and other parks, has fire scars on them. They’ve been through multiple fires, possibly worse than this.”&lt;/p&gt;

&lt;span class=&quot;caption__container&quot;&gt;Fire burns in the hollow of an old-growth redwood tree in Big Basin Redwoods State Park, Calif., on Aug. 24, 2020.&lt;/span&gt;&lt;span class=&quot;caption__source&quot;&gt;Marcio Jose Sanchez / AP&lt;/span&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;When forest fires, windstorms and lightning hit redwood trees, those that don’t topple can resprout. Mother of the Forest, for example, used to be 329 feet tall, the tallest tree in the park. After the top broke off in a storm, a new trunk sprouted where the old growth had been.&lt;/p&gt;

&lt;p class=&quot;endmarkEnabled&quot;&gt;Trees that fall feed the forest floor and become nurse trees from which new redwoods grow. Forest critters, from banana slugs to insects, thrive under logs.&lt;/p&gt;
&lt;section class=&quot;related related--single dn-print&quot; data-test=&quot;related&quot;&gt;&lt;h3 class=&quot;related__title&quot;&gt;Related&lt;/h3&gt;

&lt;/section&gt;&lt;p class=&quot;endmarkEnabled&quot;&gt;On Monday, Steller’s jays searched for insects around the park’s partially burned outdoor amphitheater and woodpeckers could be heard hammering on trees. Occasionally a thundering crash echoed through the valley as large branches or burning trees fell.&lt;/p&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;When Big Basin opened in 1902 it marked the genesis of redwood conservation. The park now receives about 250,000 visitors a year from around the world, and millions have walked the Redwood Trail.&lt;/p&gt;

&lt;p class=&quot;endmarkEnabled&quot;&gt;The park only recently reopened after &lt;a href=&quot;https://www.nbcnews.com/health/coronavirus&quot; target=&quot;_blank&quot;&gt;COVID-19-related&lt;/a&gt; closures and now is closed &lt;a href=&quot;https://www.nbcnews.com/business/business-news/pandemic-heatwave-wildfires-california-s-wine-country-crippled-disasters-n1237700&quot; target=&quot;_blank&quot;&gt;because of the fire&lt;/a&gt;. The road in is blocked by several large trees that fell across it, some waist-high, some still on fire.&lt;/p&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;While there is a great deal of work to be done rebuilding campgrounds, clearing trails and managing damaged madrones, oaks and firs, Big Basin will recover, McLendon said.&lt;/p&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;“The forest, in some ways, is resetting,” she said.&lt;/p&gt;
&lt;p class=&quot;endmarkEnabled&quot;&gt;State Parks District Superintendent Chris Spohrer said he was pleased to know the redwoods had survived. He said an assessment team had only been able to check buildings so far, and that he hopes they can inspect the trees in the coming days.&lt;/p&gt;

&lt;p class=&quot;endmarkEnabled&quot;&gt;“The reason those trees are so old is because they are really resilient,” he said.&lt;/p&gt;
</description>
<pubDate>Tue, 25 Aug 2020 04:19:26 +0000</pubDate>
<dc:creator>apsec112</dc:creator>
<og:url>https://www.nbcnews.com/news/us-news/2-000-year-old-redwoods-survive-wildfire-california-s-oldest-n1237949</og:url>
<og:title>2,000-year-old redwoods survive wildfire at California park</og:title>
<og:description>Though feared destroyed, most of the ancient trees at Big Basin Redwoods State Park withstood the blaze.</og:description>
<og:image>https://media2.s-nbcnews.com/j/newscms/2020_35/3407155/200824-big-basin-redwood-fire-ac-956p_c1d4208021b6298472864d5be24b0736.nbcnews-fp-1200-630.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nbcnews.com/news/us-news/2-000-year-old-redwoods-survive-wildfire-california-s-oldest-n1237949</dc:identifier>
</item>
</channel>
</rss>