<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Introducing the next generation of Mac</title>
<link>https://www.apple.com/newsroom/2020/11/introducing-the-next-generation-of-mac/</link>
<guid isPermaLink="true" >https://www.apple.com/newsroom/2020/11/introducing-the-next-generation-of-mac/</guid>
<description>&lt;p&gt;Mac mini also features an advanced thermal design to sustain its breakthrough performance while staying cool and quiet, support for up to two displays including Apple’s Pro Display XDR in full 6K resolution, and Wi-Fi 6 for faster wireless performance and the Secure Enclave in M1 for best-in-class security. &lt;/p&gt;
&lt;p&gt;With M1 and Big Sur, Mac mini represents a massive shift in what an ultrasmall desktop can do. Far more versatile and far more capable than ever, Mac mini is now available for just $699, $100 less than the previous-generation quad-core model. &lt;/p&gt;
&lt;h2 class=&quot;pagebody-header&quot;&gt;&lt;strong&gt;macOS Big Sur&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;All new Macs come with Big Sur, the latest version of the world’s most advanced desktop operating system. Big Sur introduces a beautiful redesign that is entirely new yet instantly familiar, and powerful updates to apps including Safari, Messages, and Maps. Big Sur is engineered, down to its core, to take full advantage of all the capability and power of M1, delivering a massive boost in performance, astonishing battery life, and even stronger security protections. With M1, things users do every day feel noticeably faster and smoother. Just like iPhone and iPad, the Mac now instantly wakes from sleep. Browsing with Safari — which is already the world’s fastest browser — is now up to 1.5x speedier at running JavaScript and nearly 2x more responsive.&lt;sup&gt;6&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;With Big Sur and M1, Mac users can run a greater range of apps than ever before. All of Apple’s Mac software is now Universal and runs natively for M1 systems. Existing Mac apps that have not been updated to Universal will run seamlessly with Apple’s Rosetta 2 technology. And iPhone and iPad apps can now run directly on the Mac. Additionally, the foundations of Big Sur are optimized to unlock the power of M1, including developer technologies from Metal for graphics to Core ML for machine learning.&lt;/p&gt;
</description>
<pubDate>Tue, 10 Nov 2020 18:47:19 +0000</pubDate>
<dc:creator>redm</dc:creator>
<og:type>article</og:type>
<og:title>Introducing the next generation of Mac</og:title>
<og:description>A new MacBook Air, 13-inch MacBook Pro, and Mac mini powered by M1, the first in a family of chips designed by Apple specifically for the Mac.</og:description>
<og:url>https://www.apple.com/newsroom/2020/11/introducing-the-next-generation-of-mac/</og:url>
<og:image>https://www.apple.com/newsroom/images/product/mac/standard/Apple_next-generation-mac-MacBookAir-MacBookPro-Mac-mini_11102020.jpg.og.jpg?202011101852</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.apple.com/newsroom/2020/11/introducing-the-next-generation-of-mac/</dc:identifier>
</item>
<item>
<title>Apple unveils M1, its first system-on-a-chip for portable Mac computers</title>
<link>https://9to5mac.com/2020/11/10/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers/</link>
<guid isPermaLink="true" >https://9to5mac.com/2020/11/10/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers/</guid>
<description>&lt;p&gt;Apple is unveiling its first Apple Silicon Macs today at its event that marks the beginning of the end of Intel inside Apple notebooks and desktops. The first in a family of Apple Silicon chips based on ARM is called the Apple M1 chip.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-678068&quot;/&gt;&lt;ins class=&quot;adsbygoogle author_ad&quot; data-ad-host=&quot;ca-host-pub-5506057612223327&quot; data-ad-client=&quot;ca-pub-1678704618506332&quot; data-ad-format=&quot;auto&quot;/&gt; &lt;/p&gt;
&lt;h2&gt;What to know about M1&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;M1 is an 8-core, 5 nanometer processor with unified memory architecture&lt;/li&gt;
&lt;li&gt;This affords faster performance on Mac computers using M1 versus separate CPU, GPU, RAM, and other components&lt;/li&gt;
&lt;li&gt;M1 also touts better power efficiency with higher performance during usage with 3x performance per watt&lt;/li&gt;
&lt;li&gt;Apple’s SoC will also be able to run iPhone and iPad apps on the Mac for the first time, including HBO MAX and Among Us&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;From the keynote&lt;/h2&gt;

&lt;h2&gt;First M1 Macs&lt;/h2&gt;
&lt;p&gt;MacBook Air will be the first Apple notebook to switch from Intel to the new ARM-based Apple Silicon M1 chip. Learn more here: &lt;a href=&quot;https://9to5mac.com/2020/11/10/new-macbook-air-apple-silicon/&quot;&gt;Apple unveils all-new MacBook Air powered by Apple Silicon M1 chip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mac mini will be the first Apple desktop to switch from Intel to the new ARM-based Apple Silicon M1 chip. Learn more here: &lt;a href=&quot;https://9to5mac.com/2020/11/10/apple-announces-new-mac-mini-featuring-apple-m1-chip/&quot;&gt;Apple announces new Mac mini featuring Apple M1 chip, cheaper $699 price&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MacBook Pro 13-inch will be the first pro notebook to switch from Intel to the new ARM-based Apple Silicon M1 chip. Learn more here: &lt;a href=&quot;https://9to5mac.com/2020/11/10/apple-announces-13-inch-macbook-pro-with-faster-performance-thanks-to-m1-chip/&quot;&gt;Apple announces 13-inch MacBook Pro with faster performance thanks to M1 chip&lt;/a&gt;&lt;/p&gt;

&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; class=&quot;wp-block-embed__wrapper&quot;&gt;&lt;iframe class=&quot;youtube-player&quot; width=&quot;1000&quot; height=&quot;563&quot; src=&quot;https://www.youtube.com/embed/h1hFieNZrws?version=3&amp;amp;rel=0&amp;amp;fs=1&amp;amp;autohide=2&amp;amp;showsearch=0&amp;amp;showinfo=1&amp;amp;iv_load_policy=1&amp;amp;wmode=transparent&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/div&gt;
&lt;div class=&quot;press-release&quot;&gt;

&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;1&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;2&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;3&quot;&gt;
&lt;p data-reader-unique-id=&quot;4&quot;&gt;&lt;span data-reader-unique-id=&quot;5&quot;&gt;PRESS RELEASE&lt;/span&gt; &lt;span data-reader-unique-id=&quot;6&quot;&gt;November 10, 2020&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;22&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;23&quot;&gt;
&lt;p data-reader-unique-id=&quot;24&quot;&gt;With industry-leading performance, powerful features, and incredible efficiency, M1 is Apple’s first chip designed specifically for the Mac&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;26&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_new-m1-chip-graphic_11102020_big&quot; data-reader-unique-id=&quot;27&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;28&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_new-m1-chip-graphic_11102020_big.jpg.large.jpg&quot; alt=&quot;A glowing black square imprinted with the Apple logo and “M1.” &quot; data-reader-unique-id=&quot;32&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;33&quot;&gt;
&lt;p data-reader-unique-id=&quot;34&quot;&gt;M1 is Apple’s first chip designed specifically for the Mac and the most powerful chip it has ever created.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;36&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;37&quot;&gt;
&lt;p data-reader-unique-id=&quot;38&quot;&gt;Cupertino, California — Apple today announced M1, the most powerful chip it has ever created and the first chip designed specifically for the Mac. M1 is optimized for Mac systems in which small size and power efficiency are critically important. As a system on a chip (SoC), M1 combines numerous powerful technologies into a single chip, and features a unified memory architecture for dramatically improved performance and efficiency. M1 is the first personal computer chip built using cutting-edge 5-nanometer process technology and is packed with an astounding 16 billion transistors, the most Apple has ever put into a chip. It features the world’s fastest CPU core in low-power silicon, the world’s best CPU performance per watt, the world’s fastest integrated graphics in a personal computer, and breakthrough machine learning performance with the Apple Neural Engine. As a result, M1 delivers up to 3.5x faster CPU performance, up to 6x faster GPU performance, and up to 15x faster machine learning, all while enabling battery life up to 2x longer than previous-generation Macs. With its profound increase in performance and efficiency, M1 delivers the biggest leap ever for the Mac.&lt;sup data-reader-unique-id=&quot;40&quot;&gt;1&lt;/sup&gt;&lt;/p&gt;
&lt;p data-reader-unique-id=&quot;41&quot;&gt;“There has never been a chip like M1, our breakthrough SoC for the Mac. It builds on more than a decade of designing industry-leading chips for iPhone, iPad, and Apple Watch, and ushers in a whole new era for the Mac,” said Johny Srouji, Apple’s senior vice president of Hardware Technologies. “When it comes to low-power silicon, M1 has the world’s fastest CPU core, the world’s fastest integrated graphics in a personal computer, and the amazing machine learning performance of the Apple Neural Engine. With its unique combination of remarkable performance, powerful features, and incredible efficiency, M1 is by far the best chip we’ve ever created.”&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;44&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_new-m1-chip_11102020_big&quot; data-reader-unique-id=&quot;45&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;46&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_new-m1-chip_11102020_big.jpg.large.jpg&quot; alt=&quot;A top view of M1 reveals the system on a chip’s intricate circuitry.&quot; data-reader-unique-id=&quot;50&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;51&quot;&gt;
&lt;p data-reader-unique-id=&quot;52&quot;&gt;M1 is the first personal computer chip built using cutting-edge 5-nanometer process technology and is packed with an astounding 16 billion transistors.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;54&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;55&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;56&quot;&gt;First System on a Chip for the Mac&lt;/h2&gt;
&lt;p data-reader-unique-id=&quot;57&quot;&gt;Macs and PCs have traditionally used multiple chips for the CPU, I/O, security, and more. Now with M1, these technologies are combined into a single SoC, delivering a whole new level of integration for greater performance and power efficiency. M1 also features a unified memory architecture that brings together high-bandwidth, low-latency memory into a single pool within a custom package. This allows all of the technologies in the SoC to access the same data without copying it between multiple pools of memory, further improving performance and efficiency.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;59&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_m1-chip-cpu-power-chart_11102020_big&quot; data-reader-unique-id=&quot;60&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;61&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_m1-chip-cpu-power-chart_11102020_big.jpg.large.jpg&quot; alt=&quot;A chart compares the improved CPU performance per watt of M1 versus the latest PC laptop chip.&quot; data-reader-unique-id=&quot;65&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;69&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;70&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;71&quot;&gt;&lt;strong data-reader-unique-id=&quot;72&quot;&gt;The World’s Best CPU Performance per Watt&lt;/strong&gt;&lt;/h2&gt;
&lt;p data-reader-unique-id=&quot;73&quot;&gt;M1 features an 8-core CPU consisting of four high-performance cores and four high-efficiency cores. Each of the high-performance cores provides industry-leading performance for single-threaded tasks, while running as efficiently as possible. They are the world’s fastest CPU cores in low-power silicon, allowing photographers to edit high-resolution photos with lightning speed and developers to build apps nearly 3x faster than before. And all four can be used together for a huge boost in multithreaded performance. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;75&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_m1-chip-8-core-cpu-chart_11102020_big&quot; data-reader-unique-id=&quot;76&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;77&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_m1-chip-8-core-cpu-chart_11102020_big.jpg.large.jpg&quot; alt=&quot;A graphic details key benefits of the 8-core CPU in M1.&quot; data-reader-unique-id=&quot;81&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;85&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;86&quot;&gt;
&lt;p data-reader-unique-id=&quot;87&quot;&gt;The four high-efficiency cores deliver outstanding performance at a tenth of the power. By themselves, these four cores deliver similar performance as the current-generation, dual-core MacBook Air at much lower power. They are the most efficient way to run lightweight, everyday tasks like checking email or browsing the web, and preserve battery life like never before. And all eight cores can work together to provide incredible compute power for the most demanding tasks and deliver the world’s best CPU performance per watt.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;89&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_m1-chip-macbookair-pixelmatorpro-screen_11102020_big&quot; data-reader-unique-id=&quot;90&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;91&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_m1-chip-macbookair-pixelmatorpro-screen_11102020_big.jpg.large.jpg&quot; alt=&quot;A photo editing screen in Photoshop is displayed on MacBook Air.&quot; data-reader-unique-id=&quot;95&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;96&quot;&gt;
&lt;p data-reader-unique-id=&quot;97&quot;&gt;M1 includes an 8-core CPU delivering incredible compute power and the world’s best performance per watt.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;99&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;100&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;101&quot;&gt;The World’s Fastest Integrated Graphics&lt;/h2&gt;
&lt;p data-reader-unique-id=&quot;102&quot;&gt;M1 includes Apple’s most advanced GPU. It benefits from years of analysis of Mac applications, including everyday apps and challenging pro workloads. With industry-leading performance and incredible efficiency, the GPU in M1 is in a class by itself. Featuring up to eight powerful cores capable of running nearly 25,000 threads simultaneously, the GPU can handle extremely demanding tasks with ease, from smooth playback of multiple 4K video streams to rendering complex 3D scenes. With 2.6 teraflops of throughput, M1 has the world’s fastest integrated graphics in a personal computer.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;104&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_m1-chip-mac-mini-LG-Display-gaming-screen_11102020_big&quot; data-reader-unique-id=&quot;105&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;106&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_m1-chip-mac-mini-LG-Display-gaming-screen_11102020_big.jpg.large.jpg&quot; alt=&quot;The video game “Little Orpheus,” running on Mac mini, is displayed on a monitor, with a wireless keyboard and mouse and Xbox controller nearby.&quot; data-reader-unique-id=&quot;110&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;111&quot;&gt;
&lt;p data-reader-unique-id=&quot;112&quot;&gt;The GPU in M1 is the most advanced Apple has ever created and the world’s fastest integrated graphics in a personal computer.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;114&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;115&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;116&quot;&gt;Blazing-Fast, On-Device Machine Learning&lt;/h2&gt;
&lt;p data-reader-unique-id=&quot;117&quot;&gt;The M1 chip brings the Apple Neural Engine to the Mac, greatly accelerating machine learning (ML) tasks. Featuring Apple’s most advanced 16-core architecture capable of 11 trillion operations per second, the Neural Engine in M1 enables up to 15x faster machine learning performance. In fact, the entire M1 chip is designed to excel at machine learning, with ML accelerators in the CPU and a powerful GPU, so tasks like video analysis, voice recognition, and image processing will have a level of performance never seen before on the Mac.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;119&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_m1-chip-macbookpro-dj-pro-screen_11102020_big&quot; data-reader-unique-id=&quot;120&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;121&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_m1-chip-macbookpro-dj-pro-screen_11102020_big.jpg.large.jpg&quot; alt=&quot;The djay Pro app is displayed on MacBook Pro.&quot; data-reader-unique-id=&quot;125&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;126&quot;&gt;
&lt;p data-reader-unique-id=&quot;127&quot;&gt;Developers leveraging machine learning can take full advantage of the blazing-fast performance of the Apple Neural Engine in M1.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;129&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;130&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;131&quot;&gt;More Innovative Technologies Packed into M1&lt;/h2&gt;
&lt;p data-reader-unique-id=&quot;132&quot;&gt;The M1 chip is packed with a number of powerful custom technologies, including:&lt;/p&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;133&quot;&gt;
&lt;ul data-reader-unique-id=&quot;134&quot;&gt;&lt;li data-reader-unique-id=&quot;135&quot;&gt;Apple’s latest image signal processor (ISP) for higher quality video with better noise reduction, greater dynamic range, and improved auto white balance.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;136&quot;&gt;
&lt;ul data-reader-unique-id=&quot;137&quot;&gt;&lt;li data-reader-unique-id=&quot;138&quot;&gt;The latest Secure Enclave for best-in-class security.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;139&quot;&gt;
&lt;ul data-reader-unique-id=&quot;140&quot;&gt;&lt;li data-reader-unique-id=&quot;141&quot;&gt;A high-performance storage controller with AES encryption hardware for faster and more secure SSD performance.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;142&quot;&gt;
&lt;ul data-reader-unique-id=&quot;143&quot;&gt;&lt;li data-reader-unique-id=&quot;144&quot;&gt;Low-power, highly efficient media encode and decode engines for great performance and extended battery life.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;145&quot;&gt;
&lt;ul data-reader-unique-id=&quot;146&quot;&gt;&lt;li data-reader-unique-id=&quot;147&quot;&gt;An Apple-designed Thunderbolt controller with support for USB 4, transfer speeds up to 40Gbps, and compatibility with more peripherals than ever.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; role=&quot;group&quot; aria-label=&quot;gallery&quot; data-component-list=&quot;SlideFadeGallery&quot; data-reader-unique-id=&quot;148&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;149&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;158&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;159&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; role=&quot;tabpanel&quot; aria-labelledby=&quot;gallery-dotnav-ea762cb9a943f6f742405db2f97a1655&quot; data-gallery-item=&quot;&quot; data-reader-unique-id=&quot;160&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;162&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;163&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_m1-chip-macbookair-facetime-screen_11102020_big.jpg.large.jpg&quot; alt=&quot;A FaceTime call is displayed on MacBook Pro.&quot; data-reader-unique-id=&quot;167&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;168&quot;&gt;
&lt;p data-reader-unique-id=&quot;169&quot;&gt;The Apple-designed ISP in M1 makes video calls on the Mac sharper and more vivid.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;175&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;176&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;177&quot;&gt;&lt;strong data-reader-unique-id=&quot;178&quot;&gt;macOS Big Sur Optimized for M1&lt;/strong&gt;&lt;/h2&gt;
&lt;p data-reader-unique-id=&quot;179&quot;&gt;macOS Big Sur is engineered, down to its core, to take full advantage of all the capability and power of M1, delivering a massive boost in performance, astonishing battery life, and even stronger security protections. With M1, things users do every day feel noticeably faster and smoother. Just like iPhone and iPad, the Mac now instantly wakes from sleep. Browsing with Safari — which is already the world’s fastest browser — is now up to 1.5x speedier at running JavaScript and nearly 2x more responsive.&lt;sup data-reader-unique-id=&quot;180&quot;&gt;2&lt;/sup&gt;&lt;/p&gt;
&lt;p data-reader-unique-id=&quot;181&quot;&gt;With Big Sur and M1, Mac users can run a greater range of apps than ever before. All of Apple’s Mac software is now Universal and runs natively on M1 systems. Existing Mac apps that have not been updated to Universal will run seamlessly with Apple’s Rosetta 2 technology. And iPhone and iPad apps can now run directly on the Mac. Additionally, the foundations of Big Sur are optimized to unlock the power of M1, including developer technologies from Metal for graphics to Core ML for machine learning.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;183&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;Apple_new-mac-mini-prodisplay-bigsur-screen_11102020_big_carousel&quot; data-reader-unique-id=&quot;184&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;185&quot;&gt;&lt;img title=&quot;Apple unveils M1, its first system-on-a-chip for Mac computers&quot; class=&quot;extendsBeyondTextColumn&quot; src=&quot;https://www.apple.com/newsroom/images/product/mac/standard/Apple_new-mac-mini-prodisplay-bigsur-screen_11102020_big_carousel.jpg.large.jpg&quot; alt=&quot;Multiple apps run on Mac mini and are displayed on Pro Display XDR.&quot; data-reader-unique-id=&quot;189&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;190&quot;&gt;
&lt;p data-reader-unique-id=&quot;191&quot;&gt;Mac users now have access to a greater range of apps than ever before.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;193&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;194&quot;&gt;
&lt;h2 data-reader-unique-id=&quot;195&quot;&gt;Start of a Two-Year Transition for the Mac&lt;/h2&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;196&quot;&gt;M1 powers the new &lt;a href=&quot;https://www.apple.com/newsroom/2020/11/introducing-the-next-generation-of-mac/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; data-reader-unique-id=&quot;197&quot;&gt;MacBook Air, 13-inch MacBook Pro, and Mac mini&lt;/a&gt;. They join the rest of the Mac product line to form the strongest Mac lineup ever. This is the beginning of a transition to a new family of chips designed specifically for the Mac. The transition to Apple silicon will take about two years to complete, and these three systems are an amazing first step.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-analytics-activitymap-region-id=&quot;sharesheet-footer&quot; data-reader-unique-id=&quot;198&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;199&quot;&gt;
&lt;p data-reader-unique-id=&quot;200&quot;&gt;Share article&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;212&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;213&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;214&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;216&quot;&gt;
&lt;p data-reader-unique-id=&quot;217&quot;&gt;Images of Apple M1 Chip&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;aside data-reader-unique-id=&quot;220&quot;&gt;&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;221&quot;&gt;
&lt;p data-reader-unique-id=&quot;222&quot;&gt;Apple revolutionized personal technology with the introduction of the Macintosh in 1984. Today, Apple leads the world in innovation with iPhone, iPad, Mac, Apple Watch, and Apple TV. Apple’s five software platforms — iOS, iPadOS, macOS, watchOS, and tvOS — provide seamless experiences across all Apple devices and empower people with breakthrough services including the App Store, Apple Music, Apple Pay, and iCloud. Apple’s more than 100,000 employees are dedicated to making the best products on earth, and to leaving the world better than we found it.&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;224&quot;&gt;
&lt;div data-carousel-extra=&quot;{&amp;quot;blog_id&amp;quot;:6,&amp;quot;permalink&amp;quot;:&amp;quot;https:\/\/9to5mac.com\/2020\/11\/10\/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers\/&amp;quot;}&quot; data-reader-unique-id=&quot;225&quot;&gt;
&lt;ol data-reader-unique-id=&quot;226&quot;&gt;&lt;li&gt;
&lt;ol data-reader-unique-id=&quot;227&quot;&gt;&lt;li data-reader-unique-id=&quot;228&quot;&gt;&lt;strong data-reader-unique-id=&quot;229&quot;&gt;“World’s fastest CPU core in low-power silicon”:&lt;/strong&gt; Testing conducted by Apple in October 2020 using preproduction 13-inch MacBook Pro systems with Apple M1 chip and 16GB of RAM measuring peak single thread performance of workloads taken from select industry standard benchmarks, commercial applications, and open source applications. Comparison made against the highest-performing CPUs for notebooks, commercially available at the time of testing. Performance tests are conducted using specific computer systems and reflect the approximate performance of MacBook Pro. &lt;strong data-reader-unique-id=&quot;230&quot;&gt;“World’s best CPU performance per watt”:&lt;/strong&gt; Testing conducted by Apple in October 2020 using preproduction 13-inch MacBook Pro systems with Apple M1 chip and 16GB of RAM. Performance per watt refers to the ratio of peak CPU performance to average power consumed using select industry standard benchmarks. Comparison made against high-performing CPUs for notebooks and desktops, commercially available at the time of testing. Performance tests are conducted using specific computer systems and reflect the approximate performance of MacBook Pro. &lt;strong data-reader-unique-id=&quot;231&quot;&gt;“World’s fastest integrated graphics in a personal computer”&lt;/strong&gt;: Testing conducted by Apple in October 2020 using preproduction 13-inch MacBook Pro systems with Apple M1 chip and 16GB of RAM using select industry standard benchmarks. Comparison made against the highest-performing integrated GPUs for notebooks and desktops, commercially available at the time of testing. Integrated GPU is defined as a GPU located on a monolithic silicon die along with a CPU and memory controller, behind a unified memory subsystem. Performance tests are conducted using specific computer systems and reflect the approximate performance of MacBook Pro.&lt;/li&gt;
&lt;li data-reader-unique-id=&quot;232&quot;&gt;&lt;strong data-reader-unique-id=&quot;233&quot;&gt;“World’s fastest browser”:&lt;/strong&gt; Testing conducted by Apple in August and October 2020 using JetStream 2, MotionMark 1.1, and Speedometer 2.0 performance benchmarks on browsers that completed the test. Tested with prerelease Safari 14 and latest stable versions of Chrome, Firefox, and (Windows) Microsoft Edge at the time of testing, on Intel Core i5-based 13-inch MacBook Pro systems with prerelease macOS Big Sur and Windows 10 Home running in Boot Camp; 12.9-inch iPad Pro (4th generation) units with prerelease iPadOS 14 and Intel Core i7-based Microsoft Surface Pro 7 systems with Windows 10 Pro; and iPhone 11 Pro Max with prerelease iOS 14 and Samsung Galaxy S20 Ultra with Android 10. Devices tested with a WPA2 Wi-Fi network connection. Performance will vary based on usage, system configuration, network connection, and other factors. &lt;strong data-reader-unique-id=&quot;234&quot;&gt;“Up to 1.5x speedier at running JavaScript and nearly 2x more responsive”:&lt;/strong&gt; Testing conducted by Apple in September and October 2020 using JetStream 2 and Speedometer 2.0 performance benchmarks. Tested on preproduction MacBook Air and Mac mini systems with Apple M1 chip and 8-core GPU, as well as production 1.2GHz quad-core Intel Core i7-based 13-inch MacBook Air systems and 3.6GHz quad-core Intel Core i3-based Mac mini systems, all configured with 16GB RAM, 2TB SSD, and prerelease macOS Big Sur. Tested with prerelease Safari 14.0.1 and WPA2 Wi-Fi network connection. Performance will vary based on system configuration, network configuration, network connection, and other factors.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ad-disclaimer-container&quot;&gt;
&lt;p class=&quot;disclaimer-affiliate&quot;&gt;&lt;em&gt;FTC: We use income earning auto affiliate links.&lt;/em&gt; &lt;a href=&quot;https://9to5mac.com/about/#affiliate&quot;&gt;More.&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;https://bit.ly/38quZAd&quot;&gt;&lt;img src=&quot;https://9to5mac.com/wp-content/uploads/sites/6/2020/11/cmmx-banner-750x150@2x.png?w=1000&quot; alt=&quot;&quot; class=&quot;wp-image-677946&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;hr/&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/c/9to5mac?sub_confirmation=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Check out 9to5Mac on YouTube for more Apple news:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;fluid-width-video-wrapper&quot;&gt;&lt;iframe title=&quot;Recent Videos&quot; src=&quot;https://www.youtube.com/embed/pYbAWuDjYu0?playlist=zwzfUKq8VcM,i77T1MWztNE,nJ7ETJWjv6c,VRg8C5CQWdc,cDW3NoE4APU,gn2YjV6EVyo,RjM9e0mpG_g,HmJPeqst-cQ,rOUImrl1FN8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; width=&quot;1000&quot; height=&quot;563&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 10 Nov 2020 18:13:39 +0000</pubDate>
<dc:creator>runesoerensen</dc:creator>
<og:type>article</og:type>
<og:title>Apple unveils M1, its first system-on-a-chip for Mac computers - 9to5Mac</og:title>
<og:description>Apple is unveiling its first Apple Silicon Macs today at its event that marks the beginning of the end of Intel inside Apple notebooks and desktops. The first in a family of Apple Silicon chips based on ARM is called the Apple M1 chip. What to know about M1 M1 is an 8-core, 5 nanometer […]</og:description>
<og:url>https://9to5mac.com/2020/11/10/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://9to5mac.com/2020/11/10/apple-unveils-m1-its-first-system-on-a-chip-for-portable-mac-computers/</dc:identifier>
</item>
<item>
<title>The Lonely Work of Moderating Hacker News (2019)</title>
<link>https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news</link>
<guid isPermaLink="true" >https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news</guid>
<description>&lt;p&gt;One reader, with the username solipsism, &lt;a class=&quot;external-link&quot; data-event-click=&quot;{&amp;quot;element&amp;quot;:&amp;quot;ExternalLink&amp;quot;,&amp;quot;outgoingURL&amp;quot;:&amp;quot;https://news.ycombinator.com/item?id=19836914&amp;quot;}&quot; href=&quot;https://news.ycombinator.com/item?id=19836914&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;objected to Gackle’s claims&lt;/a&gt; about what was and wasn’t interesting. “Most would agree there’s a point at which moderation goes too far,” solipsism wrote. “I can’t tell if you’re making an appeal as a person, or making a decree as a moderator. I read the article, and it’s absolutely full of metaphysics. . . . These metaphysical topics interest me, and apparently they interested the writer, even if they don’t interest you.”&lt;/p&gt;
&lt;p&gt;Gackle conceded that his dismissal was unfair. He removed the reference to metaphysics from his comment. “The point is simply that the article deserves a better discussion,” he wrote, with breezy, cheerful weariness. “I’m making an appeal as a moderator person.”&lt;/p&gt;
&lt;p class=&quot;has-dropcap has-dropcap__lead-standard-heading&quot;&gt;Bell and Gackle didn’t set out to become forum moderators. At Stanford, Gackle wrote a master’s thesis on Pyotr Vyazemsky and Nikolay Karamzin, two nineteenth-century Russian poets; Bell studied network engineering, at the Southern Alberta Institute of Technology, after a stint performing in punk, hardcore, and metalcore bands. When they met, in the Lisp user group, they both were working as coders and unfulfilled by their office jobs. Gackle later told me that he sees frustration at work as part of the DNA of Hacker News. “The instinct that there simply has to be a better way to build systems, and the yearning to connect with it,” he said. “If you can’t do that at your job, and few can, then you can at least dream and read and argue about it on the Internet. Hacker News is the inverse image of many people’s jobs, overlaid on top of each other—an escape valve for frustrated idealists.”&lt;/p&gt;
&lt;p&gt;Bell had discovered Lisp while staving off boredom in a college computer-science course (he read technical documentation to pass the time); Gackle learned about it as a child, in &lt;em&gt;Byte&lt;/em&gt; magazine. “When I program in other languages, even ones I know well,” he said, “I feel like I’ve flown to Jupiter. Gravity is so strong that every step is a struggle. In Lisp, you can dance.” In the user group, they found they had overlapping intellectual interests and complementary programming skills. Gackle worked at what he calls “a sort of product factory” where he built “little Potemkin products that would mostly get killed.” He had come to feel that he was helping to build software for users who didn’t need it; what they needed, he believed, was a customizable spreadsheet that improved on Microsoft Excel. (“Excel was these users’ Garden of Eden, where they could make their own spreadsheets and play with them in endless bliss, but they were cast out of Eden because their problems were too complex,” he told me.) In 2008, he and Bell formed a startup, Skysheet, with the mission of building a Web-based spreadsheet. A few months later, they were accepted into Y Combinator, which they’d learned about through Graham’s essays. They moved to Silicon Valley at the height of the recession.&lt;/p&gt;
&lt;p&gt;Skysheet’s Y Combinator “class” of sixteen companies included Heyzap, a mobile-ad network that was acquired in 2015, for forty-five million dollars, and a struggling travel startup that would go on to become Airbnb. At the end of the program, the other founders in the group voted Skysheet the third most likely to succeed. But, after Y Combinator, Bell and Gackle found it difficult to fund-raise. It was the spring of 2009, and the market was bottoming out. “We learned that fund-raising means presenting yourself as impressive, desirable, and just about to be huge, even if the person you’re talking to is so mistaken as not to invest,” Gackle recalled. (Hearing this, I thought of the rhetorical style so widely deployed on Hacker News.) “Perhaps it’s partly the Canadianness, but this does not come naturally to either Scott or me.” Eventually, they raised a hundred and eighty thousand dollars and moved back to Canada to build the software. Some of the technical challenges were more complex than they’d anticipated; there was no existing literature to guide them. As delays mounted, Gackle had panic attacks nightly.&lt;/p&gt;
&lt;p&gt;By 2012, Skysheet had yet to launch a public product and had run out of money. Bell made the painful decision to leave the company, taking a job with a software consultancy. Gackle forged ahead. “My feeling was I would rather fail at this than succeed at anything else,” he told me. Later that year, Graham reached out with an invitation to work on Hacker News, which, at that point, had nearly two million users. “I said no, because I knew it would mean no longer being able to think about spreadsheet software all day,” Gackle said.&lt;/p&gt;
&lt;p&gt;That August, Gackle went for a hike in the Rockies. He slipped and fell on a mountainside, tumbling downhill, bouncing off the rocks. Somehow, he rolled to a stop against a boulder. Shaken, he hiked home. “It jolted me deeply, and after that I admitted to myself that I also was out of money and needed a job,” Gackle recalled. He reached out to Graham: “I told him yes, but with a feeling of unfinished business about this technical problem, which I still carry.” He became a behind-the-scenes moderator of Hacker News. A couple of years later, he hired Bell. In a way, they were perfectly prepared. Having briefly lived the dream and failed, they would now immerse themselves in a culture in which winning—an argument, a market—is a top priority.&lt;/p&gt;
&lt;p&gt;Gackle and Bell are the only Y Combinator employees working on the site. In addition to moderating it, they maintain its technical infrastructure. (When I mentioned, at a party, that I was writing about Hacker News, an entrepreneur blurted, “It’s the fastest Web site I use!”) They post in comment threads, defending commenters who encounter combative or aggressive behavior and content that’s been downvoted, flagged, or misunderstood; they sometimes spend hours a day e-mailing with individual users, helping them use Hacker News more conscientiously and effectively. (“Present this not primarily as a moral appeal . . . but as an intellectual one,” Gackle wrote, over e-mail, to a user who was soliciting help for a man who had recently been exonerated after eleven years in prison for a crime he did not commit. “You should frame it as a puzzle or an engineering problem. That will engage the community’s curiosity, which is your only hope for getting a real discussion going.”)&lt;/p&gt;

&lt;p&gt;“The only way to learn it is to get it wrong, and, when you get it wrong, you get flamed,” Gackle said, in the conference room. “And you get flamed so hard that it’s like being stung by a swarm of bees. It’s sort of like operant conditioning. If you put yourself in that position, where you’re getting stung on a daily basis, you’re soon going to start learning what makes the bees less likely. . . .” he paused. “Or, actually, I like bees. I would say ‘wasps’—what makes the wasps less likely to bite you.”&lt;/p&gt;
&lt;p&gt;“The other way to learn is to let someone else get stung first,” Bell said, quietly.&lt;/p&gt;
&lt;p class=&quot;has-dropcap has-dropcap__lead-standard-heading&quot;&gt;In December, 2016—about a month after Donald Trump’s election—&lt;a class=&quot;external-link&quot; data-event-click=&quot;{&amp;quot;element&amp;quot;:&amp;quot;ExternalLink&amp;quot;,&amp;quot;outgoingURL&amp;quot;:&amp;quot;https://www.washingtonpost.com/news/worldviews/wp/2016/11/30/researchers-may-have-found-many-of-chinas-30-million-missing-girls/?utm_term=.6a8ddb01a670&amp;quot;}&quot; href=&quot;https://www.washingtonpost.com/news/worldviews/wp/2016/11/30/researchers-may-have-found-many-of-chinas-30-million-missing-girls/?utm_term=.6a8ddb01a670&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;an article&lt;/a&gt; from the Washington &lt;em&gt;Post&lt;/em&gt; hit Hacker News’ front page. The article covered a study of China’s “one child” policy, conducted by researchers at the University of Kansas and Shaanxi Normal University, that claimed that female children who were long believed to have been aborted or killed in infancy were simply not registered with the government at birth. The ensuing conversation rapidly devolved into arguments over whether or not institutional barriers exist; whether it was acceptable for users to correct the grammar of commenters whose first language was not English; whether sublimated testosterone was responsible for jihad and sexual assaults in Germany; the merits of Jill Stein; and voter fraud.&lt;/p&gt;
&lt;p&gt;“Every single time poll restrictions have been proposed, it’s been for racist causes,” one user wrote, in response to a commenter with the username rokosbasilisk, who was advocating for a voter-identification system. “You yourself may not be a hooded member of the KKK, but you are pushing for the same things, and that’s all that matters.”&lt;/p&gt;
&lt;p&gt;“so india wanted to voter id to prevent black people from voting?” rokosbasilisk responded. “seriously the race stuff just doesnt matter if we follow the indian model.”&lt;/p&gt;
&lt;p&gt;“I have more faith in black people than you i guess, and think they are perfectly capable of getting an id,” a third user wrote.&lt;/p&gt;
&lt;p&gt;“This has taken us into sociopolitical hell,” Bell posted, “and Hacker News isn’t that kind of site.” He “detached” some of the more inflammatory conversations from the main thread, hiding them from view.&lt;/p&gt;
&lt;p&gt;That discussion, and also several others that emerged in the weeks after the election, prompted Gackle and Bell to experiment with and idea they called Political Detox Week. For seven days, political stories and threads would be considered off-topic and flagged by the moderators. The experiment was met with both relief and derision. “Political discourse is antithetical to rational, intelligent discussion,” one user wrote, in a comment that was upvoted to the top of the thread about the detox week. “Technological topics are always interesting to me . . . I love that there’s this corner of the Internet where I can participate in a reasoned, interesting technical community. Please don’t ruin it with politics, especially the polarizing American variant.”&lt;/p&gt;
&lt;p&gt;Down the page, another user expressed disdain for the experiment. “The idea that we can carve out a space that exists outside of politics and ideology is delusional,” the user wrote. “Squelching political discussion won’t cause us all to transcend ideology, it’ll just make it impossible to discuss or critique a dominant ideology whenever one shows up in someone’s unstated assumptions.”&lt;/p&gt;

&lt;p&gt;“Of course it’s delusional,” Gackle replied. “And still we have to moderate this site.” Three days later, he &lt;a class=&quot;external-link&quot; data-event-click=&quot;{&amp;quot;element&amp;quot;:&amp;quot;ExternalLink&amp;quot;,&amp;quot;outgoingURL&amp;quot;:&amp;quot;https://news.ycombinator.com/item?id=13131251&amp;quot;}&quot; href=&quot;https://news.ycombinator.com/item?id=13131251&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;announced&lt;/a&gt; that Political Detox Week would be coming to an end. They’d learned, among other things, that “it’s impossible to define ‘politics’ with any consensus because that question is itself highly political.”&lt;/p&gt;
&lt;p&gt;The most ideologically motivated or extreme posts and comments on Hacker News—an interview piece from Quillette titled “Understanding Victimhood Culture”; a link to a video of &lt;a href=&quot;https://www.newyorker.com/tech/annals-of-technology/how-silicon-valleys-workplace-culture-produced-james-damores-google-memo&quot;&gt;James Damore&lt;/a&gt; and &lt;a href=&quot;https://www.newyorker.com/magazine/2018/03/05/jordan-petersons-gospel-of-masculinity&quot;&gt;Jordan Peterson&lt;/a&gt; in conversation; one user telling another that all Jewish people should &lt;a class=&quot;external-link&quot; data-event-click=&quot;{&amp;quot;element&amp;quot;:&amp;quot;ExternalLink&amp;quot;,&amp;quot;outgoingURL&amp;quot;:&amp;quot;https://news.ycombinator.com/item?id=13056816&amp;quot;}&quot; href=&quot;https://news.ycombinator.com/item?id=13056816&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;relocate&lt;/a&gt; to Israel—tend to get flagged by the community or the site’s anti-abuse systems, many of which Bell and Gackle have written themselves. (Flagged posts are removed from view, though they remain searchable by URL; flagged comments are rendered in pale gray text, and only visible to logged-in users who have chosen to see “dead” comments.) Still, as an occasional reader, I have noticed certain trends. When stories that focus on structural barriers faced by women in the workplace, or on diversity in tech, or on race or masculinity—stories, admittedly, that are more intriguing to me, a person interested in the humanities, than stories on technical topics—hit the front page, users often flag them, presumably for being off topic, so fast that hardly any comments accrue. When I shared these impressions with Gackle and Bell, they looked distressed. I asked if these were problems that they felt they could, or should, be controlling or trying to change on the site.&lt;/p&gt;
&lt;p&gt;“From our perspective, the big surprise is how little control we actually have. We have to play our cards very carefully and very wisely, or even that control will sort of evaporate,” Gackle said. “There’s often a strong wish to solve these contentious problems by changing the software, and, to the extent that we’ve tried things like that, we haven’t found it to work. What does seem to work better is personal interaction, over and over and over again, with individual users. That, case by case by case, seems to move the needle. But it’s very slow.”&lt;/p&gt;
&lt;p&gt;“If we’re trying to change something deep, the ingredient is time,” Bell said. “Patience allows us to be ambitious—to imagine people being more kind to each other, for example. It sounds kind of crazy.”&lt;/p&gt;
&lt;p&gt;For Gackle and Bell, moderating Hacker News has presented an opportunity for self-work. Together, they have read up on nonviolent communication, sociology, and psychotherapy. (Bell found Carl Rogers’s “&lt;a class=&quot;external-link&quot; data-event-click=&quot;{&amp;quot;element&amp;quot;:&amp;quot;ExternalLink&amp;quot;,&amp;quot;outgoingURL&amp;quot;:&amp;quot;https://www.amazon.com/Becoming-Person-Therapists-View-Psychotherapy/dp/039575531X&amp;quot;}&quot; href=&quot;https://www.amazon.com/Becoming-Person-Therapists-View-Psychotherapy/dp/039575531X&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;On Becoming a Person&lt;/a&gt;”—a 1961 book about personal growth that became a bible of the humanistic-psychology movement—particularly valuable.) Gackle is drawn to healing workshops; Bell, to Indian philosophy. They seem, at times, to be applying old, humanist techniques to a culture obsessed with the future.&lt;/p&gt;
</description>
<pubDate>Tue, 10 Nov 2020 17:22:01 +0000</pubDate>
<dc:creator>bluu00</dc:creator>
<og:description>Can a human touch make Silicon Valley’s biggest discussion forum a more thoughtful place?</og:description>
<og:image>https://media.newyorker.com/photos/5d4af40ebc1c63000983cdbe/16:9/w_1280,c_limit/Wiener-HackerNews.jpg</og:image>
<og:title>The Lonely Work of Moderating Hacker News</og:title>
<og:type>article</og:type>
<og:url>https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news</og:url>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news</dc:identifier>
</item>
<item>
<title>My experience as a poll worker in Pennsylvania</title>
<link>https://portal.drewdevault.com/2020/11/10/2020-Election-worker.gmi</link>
<guid isPermaLink="true" >https://portal.drewdevault.com/2020/11/10/2020-Election-worker.gmi</guid>
<description>&lt;p&gt;In 2019, I was on the election board as a machine inspector for the primary election, the first election when the new voting machines were in use. And it's a good thing that I was — the opportunity to learn how the machines work, and to refine the voting process during a less contentious election, was valuable.&lt;/p&gt;
&lt;p&gt;Once 2020 rolled around, it became clear that this election was important, and was likely to be the subject of attempted subversion. I reached out to let the board of elections know that I was prepared to help out with this election as well, and reprised my role: machine inspector, division 18/19, PA. The machine inspector for 18/5 didn't show up, so I ended up doing their work as well until relief arrived partway through the day.&lt;/p&gt;
&lt;p&gt;Officially, the only role of the machine inspector is to open the polls at the beginning of the day, keep the machines sanitized throughout, and close the polls at the end of the day. However, any qualified board member is also permitted to do most of the tasks required of the election board, so I helped out where I could throughout the remainder of my (15 and a half hour!) workday. We were issued basic surgical masks (I wore two) and face shields, and more than enough sanitizer to wipe the machines, pens, and working areas down with.&lt;/p&gt;
&lt;p&gt;At 6 AM, we arrived to set up for the 7 AM opening. I gathered my materials from the official Box of Election Things (it has a name, but I forgot it), and got to work. Each division had two voting machines. I removed the covers (checking and writing down the seal numbers), plugged them in, and removed the seal protecting the bin on the back — where, among other things, the blank paper ballots are stored. These were handed off to the other officials, and I opened up the administrative controls box. In here is a flash drive which stores (one copy of) the election results for this machine, a power and mode switching button, and another numbered seal. This other seal is used as a tamper-evident seal for the admin box itself, once I'm done with the initial setup. This box, and the area where the filled-in paper ballots are collected, are also locked with a barrel key that came with the election materials.&lt;/p&gt;
&lt;p&gt;Opening the poll machines involves turning on the machine, verifying some information matches our expectations (like the division number and the fact that no votes are already recorded), and entering the &quot;election code&quot;. I won't repeat it here, but it's not a particularly secure password. It is made much more secure, however, by the fact that entering it is always accompanied with a physical measure in the admin box, which is kept locked and sealed. After these steps, the machines are ready to accept votes.&lt;/p&gt;
&lt;p&gt;For those readers who do not live in PA, the typical voting experience is as follows: when the voter arrives at the polling place, they're asked which ward and division they're voting in. The voter is handed an index card to write their name and ward/division on while they wait. Socially distant lines are formed for each division, and two voters per division are allowed into the building at a time. There were a total of four divisions voting at my location, each with four election board workers; two poll watchers; a small number of city workers; and up to two voters per division, averaging about 25-35 people in the room at peak times.&lt;/p&gt;
&lt;p&gt;The voter approaches their table, and gives their name and party affiliation. The party affiliation is used as a signal that something fishy might be going on if the ratio of R to D is very different from the votes recorded. There are three people at the table: one looking up registrations A-M, another for N-Z, and a third recording all of the voters in order. The voter is assigned a number (assigned ordinally from the first voter of the day), which is written on their card, in the third worker's book, and in the registration book. Voters who are voting in our division for the first time are required to show proof of address, and some voters have special circumstances which are specified in the registration book. If all is well, they'll be asked to sign the registration book, are issued a blank paper ballot, and are sent to the next open machine for that division.&lt;/p&gt;
&lt;p&gt;The paper ballot has a notch on one side indicating the orientation it is to be placed into the voting machine in, via a slot on the right-hand side. The slot leads to a conveyor belt which pulls it into the machine underneath a transparent pane, and out of view. The touch screen asks the voter to select a language (English or Spanish), then presents them with their choices. There are choices for changing the font size or contrast, and voters who have a greater degree of visual impairment can use the &quot;ADA device&quot;. I've never had to set this up so I'm not sure how it works.&lt;/p&gt;
&lt;p&gt;Under specific circumstances, the voter may be accompanied into the booth. I am allowed to enter the voting booth if a voter asks, to help with any confusion with the machine. Additionally, one member of the public can be allowed to assist the voter ONLY if they and the voter fill out a form to consent to assistance, usually in the case of disability. I make an effort to avoid seeing the selections the voter makes, and I'm not allowed to offer any advice on what to vote for.&lt;/p&gt;
&lt;p&gt;Once the voter makes their choices, they tap the &quot;Vote&quot; button, and their choices are printed onto their ballot. The ballot slides back out, under the transparent pane, for them to inspect for errors. They have an opportunity to reject it and ask to vote again. Otherwise, the vote is pulled back into the machine and stored in the hopper, under lock, key, and tamper-evident seal in the back. The printed ballot includes bar codes which can be quickly scanned to read the vote, and also has the selections printed out in plain English.&lt;/p&gt;
&lt;p&gt;After this, the voter is done, they get their sticker and go home. Outside of the typical case, there are primarily two other kinds of voters: those surrendering their mail-in ballot, and those voting provisionally. Voters who surrender their mail-in ballot to the election officials are allowed to vote on the machine; we give them a sharpie to censor their ballot with (if they already filled it in), and a form to fill out with some basic information about the voter, then staple them together and store them for later. After this, they may vote normally.&lt;/p&gt;
&lt;p&gt;The provisional ballots are used for anyone whose registration status is uncertain, for example voters who are required to provide proof of address, but who cannot do so. We are not allowed to refuse any voters for any reason, and provisional ballots are the last measure for anyone we don't know how to deal with. The voter is given a form to fill out with their registration and other details in the presence of the judge of elections for our division, and then the judge and another worker signs it. The voter is given a special paper ballot and a secrecy envelope, then brought to a private area to write in their votes and seal them in the secrecy envelope. When they're done, they return the envelope to the election board, we enclose it in the first envelope, and then add a sticker with a unique serial number on it. The same serial number is printed on a card which is given to the voter, which they can use to track the status of their provisional ballot on a website or via the phone, to make sure it's accepted and recorded.&lt;/p&gt;
&lt;p&gt;During the day, I helped out with a little bit of everything, here and there. Mainly I took care of unusual voters, those surrendering mail-in ballots or voting provisionally, to (1) make sure the rest of the election board was free to keep the voters moving, and (2) to stave off the boredom which comes with my official responsibilities being separated by 13 hours of doing nothing. There was one voter who insisted that we were going to throw away her provisional ballot, while another board worker and I patiently explained how the serial numbers worked, how she could use them to make sure her vote was counted, and that none of us wanted to go to jail over her vote.&lt;/p&gt;
&lt;p&gt;The other event came when a discrepancy developed between the number of votes recorded by the machine and the number of voters tallied in the books: one vote was recorded in the books that was not recorded by the machines. We ultimately concluded that someone had just walked out of the polling place after they were handed their ballot, never casting their vote on the machine. Other possibilities which we ultimately ruled out were election board error, or that the voter voted in the wrong division after receiving their ballot. The redundant records — the index card, the registration book, the list of voters — helped to narrow down the possible causes. In the end, there was nothing we could do about it.&lt;/p&gt;
&lt;p&gt;The polls close at 8 PM. In 2019, we had almost all of the votes at the end of the day, and had to keep the polls open longer — anyone who is in line at 8 PM is entitled to vote. This year, unexpectedly, we received hardly any voters in the last few hours of the day. At exactly 8 PM, I started closing down the machines, and this is when things began to go wrong.&lt;/p&gt;
&lt;p&gt;First: I will explicitly clarify that none of the problems I'm about to describe ever had the slightest risk of causing votes to be miscounted or lost.&lt;/p&gt;
&lt;p&gt;At the end of the day, the machines print out eight receipts with tallies of the vote. Each copy is signed by the election board, then one is sent to city hall, one is kept by the judge of elections for at least a year, another two are given to representatives from each party, another is taped to the front door of the polling place for public inspection, and so on. However, my machines stopped before printing all of the receipts: one after 7, and one after just 5. The kicker: the only receipt which includes the full list of write-in votes is the last one, and that's the one which goes to city hall to provide (one of many) redundant sources for the vote.&lt;/p&gt;
&lt;p&gt;The machine malfunction was unexpected and required improvisation, which is something I really did not want to do. I first called up the machine hotline (one of several numbers provided to the election board to deal with issues that arose on the day), and I was connected to an expert. They told me to reboot the machine and hit &quot;print receipt&quot; as many times as I needed to get the appropriate number of receipts. After I got off the phone with them, however, I discovered that this approach would not print off the write-in votes. When I tried to call back to enquire further, I got a busy tone. I expect similar problems were happening across the state; it affected both of my machines and another one in the room.&lt;/p&gt;
&lt;p&gt;I was probably better equipped to address this than most divisions, as a computer expert by trade, but I was still skeeved out about doing anything to the machines which wasn't written down in my book. I was more skeeved out about the possibility of not counting write-in votes, however, so I decided to very carefully start pressing buttons. I guessed correctly at how to summon the administrative menu (something we had access to but were never trained on how to use), and poked around until I found some receipt printing tool that could prepare various kinds of reports. The specific report we needed to deliver to city hall was not available, but there were two reports which, together, contained the same information as the desired report. I printed this out on both machines, stapled them together, then included with them a signed note describing the undocumented process I used to obtain them. Then I went to the third machine in our room (for another division) which had the same malfunction, and repeated the process. The hardest part during this process was making sure none of the other well-meaning poll workers touched the machines — no, you there, DO NOT touch my machines, god dammit, you are not helping, fuck off! As soon as I found a button labelled &quot;erase media&quot;, I did not want anyone else anywhere near these machines.&lt;/p&gt;
&lt;p&gt;Ultimately, the votes are extremely secure regardless of this incident. The paper votes have two levels of redundancy, the plain-English votes and the barcode, and are stored in a locked and sealed hopper. The votes are digitally tallied on the USB stick in the machine, and again on each of the receipts. These records all also have to line up with the two books. All of these redundant sources of truth are handed to several different people, of different affiliations, and brought to different places. It would be very difficult to make an important error at any step, let alone to commit voting fraud. Regardless, every discrepancy and divergence from procedure was meticulously recorded to make it as easy as possible for city hall to make sense of the records.&lt;/p&gt;
&lt;p&gt;The rest of the process is straightforward, and much less stressful. The seal on the admin box is checked, removed, and recorded, and the machine is powered off. The flash drive is removed and placed into bag A, along with the signed receipts from the machine and a few other records. The ballot hopper bins are removed, secured with a numbered seal, and placed into bag B, along with the provisional ballots, surrendered mail-in ballots, and some other records. A pair of police officers arrives after the polls close to collect these, and they take them to city hall (having the police handle these skeeves me out, too, but again — the system is so redundant and secured that any funny business on their part would be discovered). The poll official's handbook didn't cover this, but I also took the opportunity (both this year and last) to record the officer's badge numbers.&lt;/p&gt;
&lt;p&gt;Actually, the police officers were the subject of another sketchy incident. The same officers arrived earlier in the day, while the polls were open, to drop off some materials. There are strict laws regulating police and poll workers while the polls are open. Police are not allowed within 100 feet of the polling location, unless they're actively voting or there on official business at the request of the election board. Additionally, anyone working at the polls in an official capacity is not allowed to wear any clothing with political messaging.&lt;/p&gt;
&lt;p&gt;One of the officers who showed up earlier in the day was wearing a hoodie with the American flag on it, and the US armed forces oath of enlistment printed in place of the white stripes. As they were leaving, I pulled the officer aside and asked him to remove the hoodie before making his next stop, politely explaining the law. Another poll worker affirmed my instruction as legitimate. Later, after the polls closed, the same officer returned to pick up the ballots (with the same hoodie on, but now that the polls were closed it didn't matter). Apparently, when I was photographing the badges of the officers as a matter of record, he believed that I was planning to file a complaint. I didn't catch on, but another poll worker tipped me off.&lt;/p&gt;
&lt;p&gt;On my way out of the polling location after everything was closed up, I passed the officers and stopped to clarify that I was just recording the badge number as a matter of course, and that there weren't any hard feelings over the hoodie — just trying to do my job. He was with 5 or 6 other officers at the time, and he started to puff up and make a scene. I didn't feel comfortable with the situation, so I just left, and with that, my long election day came to an end.&lt;/p&gt;
&lt;p&gt;Overall, the election day experience was decent enough. The voters were mostly polite and gracious, and the community was lovely — lunch, snacks, and bottled waters for poll workers throughout the day were donated by local businesses. I made $250 for my efforts, which probably won't show up for several months. If you have any ideas for who I should donate it to, let me know — usually my default is the EFF, but there are bigger problems right now.&lt;/p&gt;
&lt;p&gt;EDIT: After answering a few questions about this post, I think it would be helpful to share this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://files7.philadelphiavotes.com/election-workers/Primary_2020_Election_Board_Training_Guide.pdf&quot;&gt;Guide for Election Board Officials in Philadelphia County (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;div aria-label=&quot;An ASCII art rocket&quot; readability=&quot;7&quot;&gt;
&lt;pre aria-hidden=&quot;true&quot; alt=&quot;An ASCII art rocket&quot;&gt;
   \ \_____
###[==_____&amp;gt;
   /_/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;“My experience as a poll worker in Pennsylvania” was published on November 10, 2020.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://portal.drewdevault.com/&quot;&gt;Back to the home page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The content for this site is CC-BY-SA. The code for this site is MIT.&lt;/p&gt;
</description>
<pubDate>Tue, 10 Nov 2020 17:12:20 +0000</pubDate>
<dc:creator>catacombs</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://portal.drewdevault.com/2020/11/10/2020-Election-worker.gmi</dc:identifier>
</item>
<item>
<title>Eleven Years of Go</title>
<link>https://blog.golang.org/11years</link>
<guid isPermaLink="true" >https://blog.golang.org/11years</guid>
<description>&lt;p class=&quot;author&quot;&gt;Russ Cox, for the Go team&lt;br/&gt;10 November 2020&lt;/p&gt;
&lt;h4 id=&quot;TOC_1.&quot;/&gt;
&lt;p&gt;Today we celebrate the eleventh birthday of the Go open source release. The parties we had for &lt;a href=&quot;https://blog.golang.org/10years&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go turning 10&lt;/a&gt; seem like a distant memory. It’s been a tough year, but we’ve kept Go development moving forward and accumulated quite a few highlights.&lt;/p&gt;
&lt;p&gt;In November, we launched &lt;a href=&quot;https://blog.golang.org/go.dev&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;go.dev and pkg.go.dev&lt;/a&gt; shortly after Go’s 10th birthday.&lt;/p&gt;
&lt;p&gt;In February, the &lt;a href=&quot;https://blog.golang.org/go1.14&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go 1.14 release&lt;/a&gt; delivered the first officially “production-ready” implementation of Go modules, along with many performance improvements, including &lt;a href=&quot;https://golang.org/design/34481-opencoded-defers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;faster defers&lt;/a&gt; and &lt;a href=&quot;https://golang.org/design/24543/conservative-inner-frame&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;non-cooperative goroutine preemption&lt;/a&gt; to reduce scheduling and garbage collection latency.&lt;/p&gt;
&lt;p&gt;In early March, we launched a &lt;a href=&quot;https://blog.golang.org/protobuf-apiv2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;new API for protocol buffers&lt;/a&gt;, &lt;a href=&quot;https://pkg.go.dev/google.golang.org/protobuf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;google.golang.org/protobuf&lt;/a&gt;, with much-improved support for protocol buffer reflection and custom messages.&lt;/p&gt;
&lt;img src=&quot;https://blog.golang.org/11years/gophermask.jpg&quot; height=&quot;450&quot; width=&quot;300&quot; align=&quot;right&quot;/&gt;&lt;p&gt;When the pandemic hit, we decided to pause any public announcements or launches in the spring, recognizing that everyone’s attention rightly belonged elsewhere. But we kept working, and one of our team members joined the Apple/Google collaboration on &lt;a href=&quot;https://www.google.com/covid19/exposurenotifications/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;privacy-preserving exposure notifications&lt;/a&gt; to support contact tracing efforts all over the world. In May, that group launched the &lt;a href=&quot;https://github.com/google/exposure-notifications-server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;reference backend server&lt;/a&gt;, written in Go.&lt;/p&gt;
&lt;p&gt;We continued to improve &lt;a href=&quot;https://www.youtube.com/watch?v=EFJfdWzBHwE&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gopls&lt;/a&gt;, which enables advanced &lt;a href=&quot;https://github.com/golang/tools/blob/master/gopls/doc/user.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go-aware support&lt;/a&gt; in many editors. In June, the &lt;a href=&quot;https://blog.golang.org/vscode-go&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;VSCode Go extension officially joined the Go project&lt;/a&gt; and is now maintained by the same developers who work on gopls.&lt;/p&gt;
&lt;p&gt;Also in June, thanks to your feedback, we open-sourced &lt;a href=&quot;https://blog.golang.org/pkgsite&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;the code behind pkg.go.dev&lt;/a&gt; as part of the Go project as well.&lt;/p&gt;
&lt;p&gt;Later in June, we &lt;a href=&quot;https://blog.golang.org/generics-next-step&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;released the latest design draft for generics&lt;/a&gt;, along with a prototype tool and &lt;a href=&quot;https://go2goplay.golang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;generics playground&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In July, we published and discussed three new design drafts for future changes: &lt;a href=&quot;https://golang.org/design/draft-gobuild&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;new &lt;code&gt;//go:build&lt;/code&gt; lines for file selection&lt;/a&gt;, &lt;a href=&quot;https://golang.org/design/draft-iofs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;file system interfaces&lt;/a&gt;, and &lt;a href=&quot;https://golang.org/design/draft-embed&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;build-time file embedding&lt;/a&gt;. (We’ll see all of those in 2021, as noted below.)&lt;/p&gt;
&lt;p&gt;In August, the &lt;a href=&quot;https://blog.golang.org/go1.15&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go 1.15 release&lt;/a&gt; delivered mainly optimizations and bug fixes rather than new features. The most significant was the start of a rewrite of the linker, making it run 20% faster and use 30% less memory on average for large builds.&lt;/p&gt;
&lt;p&gt;Last month, we ran our &lt;a href=&quot;https://blog.golang.org/survey2020&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;annual Go user survey&lt;/a&gt;. We will post results on the blog once we’ve analyzed them.&lt;/p&gt;
&lt;p&gt;The Go community has adapted to “virtual-first” along with everyone else, and we saw many virtual meetups and over a dozen virtual Go conferences this year. Last week, the Go team hosted &lt;a href=&quot;https://opensourcelive.withgoogle.com/events/go&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go day at Google Open Source Live&lt;/a&gt; (videos at the link).&lt;/p&gt;
&lt;h4 id=&quot;TOC_2.&quot;&gt;Going Forward&lt;/h4&gt;
&lt;p&gt;We’re also incredibly excited about what’s in store for Go’s 12th year. Most immediately, this week Go team members will be presenting eight events at &lt;a href=&quot;https://www.gophercon.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GopherCon 2020&lt;/a&gt;. Mark your calendars!&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“Typing [Generic] Go”, a talk by Robert Griesemer,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/233094&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 11, 10:00 AM (US Eastern)&lt;/a&gt;; &lt;a href=&quot;https://www.gophercon.com/agenda/session/417935&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Q&amp;amp;A at 10:30 AM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“What to Expect When You’re NOT Expecting”, a live taping of the Go time podcast with a panel of expert debuggers, including Hana Kim,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/2334490&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 11 12:00 PM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“Evolving the Go Memory Manager's RAM and CPU Efficiency”, a talk by Michael Knyszek,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/233086&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 11 1:00 PM&lt;/a&gt;; &lt;a href=&quot;https://www.gophercon.com/agenda/session/417940&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Q&amp;amp;A at 1:50 PM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“Implementing Faster Defers”, a talk by Dan Scales,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/233397&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 11 5:10 PM&lt;/a&gt;; &lt;a href=&quot;https://www.gophercon.com/agenda/session/417941&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Q&amp;amp;A at 5:40 PM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“Go Team - Ask Me Anything”, a live Q&amp;amp;A with Julie Qiu, Rebecca Stambler, Russ Cox, Sameer Ajmani, and Van Riper,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/420539&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 12 3:00 PM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“Pardon the Interruption: Loop Preemption in Go 1.14”, a talk by Austin Clements,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/233441&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 12 4:45 PM&lt;/a&gt;; &lt;a href=&quot;https://www.gophercon.com/agenda/session/417943&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Q&amp;amp;A at 5:15 PM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“Working with Errors”, a talk by Jonathan Amsterdam,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/233432&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 13 1:00 PM&lt;/a&gt;; &lt;a href=&quot;https://www.gophercon.com/agenda/session/417945&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Q&amp;amp;A at 1:50 PM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;“Crossing the Chasm for Go: Two Million Users and Growing”, a talk by Carmen Andoh,&lt;br/&gt;&lt;a href=&quot;https://www.gophercon.com/agenda/session/233426&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nov 13 5:55 PM&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;TOC_3.&quot;&gt;Go Releases&lt;/h4&gt;
&lt;p&gt;In February, the Go 1.16 release will include the new &lt;a href=&quot;https://tip.golang.org/pkg/io/fs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;file system interfaces&lt;/a&gt; and &lt;a href=&quot;https://tip.golang.org/pkg/embed/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;build-time file embedding&lt;/a&gt;. It will complete the linker rewrite, bringing additional performance improvements. And it will include support for the new Apple Silicon (&lt;code&gt;GOARCH=arm64&lt;/code&gt;) Macs.&lt;/p&gt;
&lt;p&gt;In August, the Go 1.17 release will no doubt bring more features and improvements, although it’s far enough out that the exact details remain up in the air. It will include a new register-based calling convention for x86-64 (without breaking existing assembly!), which will make programs faster across the board. (Other architectures will follow in later releases.) One nice feature that will definitely be included is the &lt;a href=&quot;https://golang.org/design/draft-gobuild&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;new &lt;code&gt;//go:build&lt;/code&gt; lines&lt;/a&gt;, which are far less error-prone than the &lt;a href=&quot;https://golang.org/cmd/go/#hdr-Build_constraints&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;current &lt;code&gt;//&lt;/code&gt; &lt;code&gt;+build&lt;/code&gt; lines&lt;/a&gt;. Another highly anticipated feature we hope will be ready for beta testing next year is &lt;a href=&quot;https://golang.org/design/draft-fuzzing&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;support for fuzzing in the &lt;code&gt;go test&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;TOC_4.&quot;&gt;Go Modules&lt;/h4&gt;
&lt;p&gt;Over the next year, we will continue to work on developing support for Go modules and integrating them well into the entire Go ecosystem. Go 1.16 will include our smoothest Go modules experience yet. One preliminary result from our recent survey is that 96% of users have now adopted Go modules (up from 90% a year ago).&lt;/p&gt;
&lt;p&gt;We will also finally wind down support for GOPATH-based development: any programs using dependencies other than the standard library will need a &lt;code&gt;go.mod&lt;/code&gt;. (If you haven’t switched to modules yet, see the &lt;a href=&quot;https://golang.org/wiki/GOPATH&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GOPATH wiki page&lt;/a&gt; for details about this final step in the journey from GOPATH to modules.)&lt;/p&gt;
&lt;p&gt;From the start, the &lt;a href=&quot;https://research.swtch.com/vgo-intro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;goal for Go modules&lt;/a&gt; has been “to add the concept of package versions to the working vocabulary of both Go developers and our tools,” to enable deep support for modules and versions throughout the Go ecosystem. The &lt;a href=&quot;https://blog.golang.org/modules2019&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go module mirror, checksum database, and index&lt;/a&gt; were made possible by this ecosystem-wide understanding of what a package version is. Over the next year, we will see rich module support added to more tools and systems. For example, we plan to investigate new tooling to help module authors publish new versions (&lt;code&gt;go release&lt;/code&gt;) as well as to help module consumers update their code to migrate away from deprecated APIs (a new &lt;code&gt;go fix&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;As a larger example, &lt;a href=&quot;https://github.com/golang/tools/blob/master/gopls/README.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;we created gopls&lt;/a&gt; to reduce many tools used by editors for Go support, none of which supported modules, down to a single one that did. Over the next year, we’ll be ready to make the VSCode Go extension use &lt;code&gt;gopls&lt;/code&gt; by default, for an excellent module experience out of the box, and we’ll release gopls 1.0. Of course, one of the best things about gopls is that it is editor-neutral: any editor that understands the &lt;a href=&quot;https://langserver.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;language server protocol&lt;/a&gt; can use it.&lt;/p&gt;
&lt;p&gt;Another important use of version information is tracking whether any package in a build has a known vulnerability. Over the next year, we plan to develop a database of known vulnerabilities as well as tools to check your programs against that database.&lt;/p&gt;
&lt;p&gt;The Go package discovery site &lt;a href=&quot;https://pkg.go.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pkg.go.dev&lt;/a&gt; is another example of a version-aware system enabled by Go modules. We’ve been focused on getting the core functionality and user experience right, including a &lt;a href=&quot;https://blog.golang.org/pkgsite-redesign&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;redesign launching today&lt;/a&gt;. Over the next year, we will be unifying godoc.org into pkg.go.dev. We will also be expanding the version timeline for each package, showing important changes in each version, known vulnerabilities, and more, following the overall goal of surfacing what you need to make &lt;a href=&quot;https://research.swtch.com/deps&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;informed decisions about adding dependencies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We’re excited to see this journey from GOPATH to Go modules nearing completion and all the excellent dependency-aware tools that Go modules are enabling.&lt;/p&gt;
&lt;h4 id=&quot;TOC_5.&quot;&gt;Generics&lt;/h4&gt;
&lt;p&gt;The next feature on everyone’s minds is of course generics. As we mentioned above, we published the &lt;a href=&quot;https://blog.golang.org/generics-next-step&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;latest design draft for generics&lt;/a&gt; back in June. Since then, we’ve continued to refine rough edges and have turned our attention to the details of implementing a production-ready version. We will be working on that throughout 2021, with a goal of having something for people to try out by the end of the year, perhaps a part of the Go 1.18 betas.&lt;/p&gt;
&lt;h4 id=&quot;TOC_6.&quot;&gt;Thank You!&lt;/h4&gt;
&lt;p&gt;Go is far more than just us on the Go team at Google. We are indebted to the contributors who work with us with the Go releases and tools. Beyond that, Go only succeeds because of all of you who work in and contribute to Go’s thriving ecosystem. It has been a difficult year in the world outside Go. More than ever, we appreciate you taking the time to join us and help make Go such a success. Thank you. We hope you are all staying safe and wish you all the best.&lt;/p&gt;
</description>
<pubDate>Tue, 10 Nov 2020 16:52:13 +0000</pubDate>
<dc:creator>mfrw</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.golang.org/11years</dc:identifier>
</item>
<item>
<title>The Gods on Hacker News</title>
<link>https://www.riknieu.com/the-gods-on-hackernews/</link>
<guid isPermaLink="true" >https://www.riknieu.com/the-gods-on-hackernews/</guid>
<description>&lt;p&gt;(Photo by &lt;a href=&quot;https://unsplash.com/@tank_ghisletti?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Francisco Ghisletti&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/greek-gods?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;(This post is mostly fun and tongue-in-cheek, please contain your indignation.)&lt;/p&gt;
&lt;p&gt;Every so often I encounter a comment on HackerNews that involuntarily makes my jaw drop, head shake and eyes water. It's usually concerning what some on HackerNews consider a 'worthwhile' amount of money you can earn as an solopreneur or maker VS being an employee.&lt;/p&gt;
&lt;p&gt;Obviously, it's probably a small minority of the silent masses who scroll through HN daily who have these views, but comments like the following, or a variant of it comes up so often I can't help but feel that a decent part of the community is &lt;em&gt;ridiculously&lt;/em&gt; out of touch with the rest of humanity.&lt;/p&gt;
&lt;p&gt;Behold.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;2.6744186046512&quot;&gt;
&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;😂 &lt;a href=&quot;https://t.co/mg1UFHxp08&quot;&gt;https://t.co/mg1UFHxp08&lt;/a&gt;&lt;/p&gt;
— Pete from No CS Degree (@petecodes) &lt;a href=&quot;https://twitter.com/petecodes/status/1326144308706209798?ref_src=twsrc%5Etfw&quot;&gt;November 10, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;$1000 per month from a side project is considered meh. 😳 🙃&lt;/p&gt;
&lt;p&gt;And here's another from the same day,&lt;/p&gt;
&lt;img src=&quot;https://www.riknieu.com/content/images/2020/11/soundslikealot.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;And from the same user a few scrolls later,&lt;/p&gt;
&lt;img src=&quot;https://www.riknieu.com/content/images/2020/11/FANG.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;My god. Look, the commenter had the self awareness to bring up regional cost of living and that not everyone can work at the FAMANGs of the world, but really? Getting $3.7 million dollars for just 7 years of work is, like, a bad deal?&lt;/p&gt;
&lt;p&gt;To consider making $500K pa as a doable, realistic salary to be taken into account when deciding between starting a company or just seeking a job... Like us millennials say, &quot;I can't. Even.&quot;&lt;/p&gt;
&lt;p&gt;That annual salary far outstrips what I can reasonably expect to earn in a decade, and I'm a developer working for a fintech startup with a good couple of years under my belt. For most people in the world, $500K pa is a &lt;em&gt;&lt;strong&gt;preposterous&lt;/strong&gt;&lt;/em&gt; amount of money.&lt;/p&gt;
&lt;p&gt;I'm too lazy to go dig up more examples, but I'm sure you'll find some more gems like these if you go digging around on past threads.&lt;/p&gt;
&lt;p&gt;This kind of poo-pooing of what most - and I'm talking 90% of the US population, never mind the rest of the world! - would consider rather large amounts of money is incredibly mind-blowing and makes my head spin.&lt;/p&gt;
&lt;p&gt;Now I'm sure that in commenters like the above's worlds, that kind of money is indeed average and peanuts, but I wanted to write this article for myself and the rest of us to just try and deal.&lt;/p&gt;
&lt;p&gt;I'm trying to make sense of the fact that I'm on this forum, interacting with people everyday, talking about current events and issues, that make more money per year than I can even imagine. In a way we're peers, but more realistically they're like the gods of Olympus who occasionally slum it with the rest of us.&lt;/p&gt;
&lt;p&gt;So if you're like me, and you consider even a $1000 as lot of money, let's look at this as average mortals should.&lt;/p&gt;
&lt;h2 id=&quot;1-1000pm-is-a-flippen-lot&quot;&gt;1) $1000pm is a flippen lot&lt;/h2&gt;
&lt;p&gt;Let's go with the $1000 pm example, because figures like $3.6 million is, to be frank, in the realms of La-La land for me and almost everyone I know personally.&lt;/p&gt;
&lt;p&gt;And let's - for the sake of simplicity - assume that you can take home 60% of that revenue as net earnings. And that the project doesn't take up more free time with maintenance and support issues than you can handle on your own. That's $600 per month. Extra. From a thing on the side.&lt;/p&gt;
&lt;p&gt;I realise that I live in one of those cheap, unappealing parts of the world, but that kinda money would easily cover me and my family's rent every month, and then some. Do you realise how much of a mental weight that can take off a persons shoulders? To know rent is covered over and above your day-job earnings?&lt;/p&gt;
&lt;p&gt;Away with your $1000-is-not-worth-it malarky!&lt;/p&gt;
&lt;h2 id=&quot;2-making-money-with-your-own-products-is-hard-&quot;&gt;2) Making money with your own products is HARD.&lt;/h2&gt;
&lt;p&gt;Take a look at &lt;a href=&quot;https://www.indiehackers.com/post/holy-heck-this-is-hard-8ebe864174&quot;&gt;this post&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/mccrmx&quot;&gt;Chris McCormick&lt;/a&gt;, titled &quot;&lt;a href=&quot;https://www.indiehackers.com/post/holy-heck-this-is-hard-8ebe864174&quot;&gt;Holy heck this is hard&lt;/a&gt;&quot;.&lt;/p&gt;
&lt;p&gt;When he last checked, 12 solo founders out of 17207 made more than $10K MRR. Only 54 products made more than $2000pm. I don't think I need to express that in ratios for you to see the probability of making a profitable project.&lt;/p&gt;
&lt;p&gt;Starting a product and &lt;em&gt;actually earning money from it&lt;/em&gt; is hard. Insanely hard. Hell, if you manage to make even $100pm from a side project you've got my respect. You've got me beat by a lot!&lt;/p&gt;
&lt;p&gt;When I see makers on IndieHackers or Twitter celebrate $100 in sales I get genuinely excited for them. It's really an incredible feat. Bravo to them, I wish them luck and more success in the future.&lt;/p&gt;
&lt;h2 id=&quot;that-1000-per-month-can-grow&quot;&gt;That $1000 per month can grow&lt;/h2&gt;
&lt;p&gt;Another thing to consider is that earning a $1000 pm means your project is basically validated and ready to explode. With work, you could probably scale it to much higher multiples.&lt;/p&gt;
&lt;p&gt;Sure, the money it makes is negligible to the higher beings in Silicon Valley, but for us regular plebs that's a &lt;em&gt;strong&lt;/em&gt; signal that your project potentially has legs. It might even be a project you could sell for $3.7 million dollars in 7 years time, if you put the work in and get a little lucky.&lt;/p&gt;
&lt;h2 id=&quot;ya-but-rik-cost-of-living&quot;&gt;Ya, but Rik, cost of living&lt;/h2&gt;
&lt;p&gt;Sure, things cost more in the States. And more so in SanFran. But I can't just up and go live in the States. Nor pretty much anywhere else in the First World. A heck of a lot of the people frequenting HN, TW and IH on a daily basis could probably not either.&lt;/p&gt;
&lt;p&gt;So for people like us, it's inspiring to read about some rando making a $1000 pm, on their own, independently. It gives us hope that some dude in Alabama could start a thing and sell it for more money than we could expect to earn in a lifetime as a salaried employee. Because maybe that means we could too.&lt;/p&gt;
&lt;p&gt;Because they used the same tools we have access too(except for Stripe 😝). They had access to the same markets we could reach.&lt;/p&gt;
&lt;p&gt;And they make the kinds of money with those tools that could buy people like us freedom. Freedom from being chained to a job, freedom from financial stress, and possibly even the freedom to move our families to better places in the world. Places that others just get born in.&lt;/p&gt;
&lt;p&gt;So when you see smarmy comments on HackerNews new putting down the success of others, take a step back and realise, it's not meant for you. It's not personal.&lt;/p&gt;
&lt;p&gt;These are merely the musings of a few lucky, privileged gods, reflecting on the toils of the mortals.&lt;/p&gt;
&lt;p&gt;Thanks for reading. If you have any comments or suggestions, follow and contact me on Twitter &lt;a href=&quot;https://twitter.com/riknieu&quot;&gt;@RikNieu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to read more of my rants, sign up below and I'll mail you when I post new stuff. 👇&lt;/p&gt;
</description>
<pubDate>Tue, 10 Nov 2020 16:34:59 +0000</pubDate>
<dc:creator>ivm</dc:creator>
<og:type>article</og:type>
<og:title>The Gods on HackerNews</og:title>
<og:description>Every so often I encounter a comment on HackerNews that involuntarily makes my jaw drop, head shake and eyes water. It's usually concerning what some on HackerNews consider a 'worthwhile' amount of money you can earn as an entrepreneur VS being an employee.</og:description>
<og:url>https://www.riknieu.com/the-gods-on-hackernews/</og:url>
<og:image>https://www.riknieu.com/content/images/2020/11/francisco-ghisletti-Wf2tCunxqQU-unsplash.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.riknieu.com/the-gods-on-hackernews/</dc:identifier>
</item>
<item>
<title>Origins of the youtube-dl project</title>
<link>https://rg3.name/202011071352.html</link>
<guid isPermaLink="true" >https://rg3.name/202011071352.html</guid>
<description>&lt;h3&gt;&lt;a href=&quot;https://rg3.name/202011071352.html&quot;&gt;Origins of the youtube-dl project&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;blogpostmeta&quot;&gt;Posted on &lt;time&gt;2020-11-07T13:52Z&lt;/time&gt;. Updated on &lt;time&gt;2020-11-10T16:28Z&lt;/time&gt;.&lt;/p&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;10.454332552693&quot;&gt;
&lt;p&gt;As you may know, as of the time this text is being written &lt;a href=&quot;https://github.com/ytdl-org/youtube-dl&quot;&gt;youtube-dl’s repository at GitHub&lt;/a&gt; is blocked due to a &lt;a href=&quot;https://github.com/github/dmca/blob/master/2020/10/2020-10-23-RIAA.md&quot;&gt;DMCA takedown letter&lt;/a&gt; received by GitHub on behalf of the RIAA. While I cannot comment on the current maintainers' plans or ongoing discussions, in light of the claims made in that letter I thought it would be valuable to put in writing the first years of youtube-dl as the project creator and initial maintainer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;12.703341483293&quot;&gt;
&lt;h4 id=&quot;_copper_thieves&quot;&gt;Copper thieves&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;14.872572815534&quot;&gt;
&lt;p&gt;All good stories need at least a villain so I have arbitrarily chosen copper thieves as the villains of the story that set in motion what youtube-dl is today. Back in 2006 I was living in a town 5 to 10 kilometers away from &lt;a href=&quot;https://en.wikipedia.org/wiki/Avil%C3%A9s&quot;&gt;Avilés&lt;/a&gt;, which is itself a small city or town in northern Spain. While people in Avilés enjoyed some nice infrastructures and services, including cable and ADSL Internet access, the area I lived in lacked those advantages. I was too far away from the telephone exchange to enjoy ADSL and copper thieves had been stealing copper wires along the way to it for years, causing telephone service outages from time to time and making the telephone company replace those wires with weaker and thinner wires, knowing they would likely be stolen again. This had been going on for several years at that point.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;10.403100775194&quot;&gt;
&lt;p&gt;This meant my only choice for home Internet access so far had been a dial-up connection and a &lt;a href=&quot;https://en.wikipedia.org/wiki/Modem#Standardized_56k_(V.90/V.92)&quot;&gt;56k V.90 modem&lt;/a&gt;. In fact, connection quality was so poor I had to limit the modem to 33.6 kbps mode so the connection would be at least stable. Actual download speeds rarely surpassed 4 KB/sec. &lt;a href=&quot;https://en.wikipedia.org/wiki/YouTube&quot;&gt;YouTube&lt;/a&gt; was gaining popularity then to the point it was purchased by Google at the end of that year.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;20.844059405941&quot;&gt;
&lt;h4 id=&quot;_up_all_night_to_get_some_bits&quot;&gt;Up all night to get some bits&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;16&quot;&gt;
&lt;p&gt;Watching any YouTube video on the kind of connection I described above was certainly painful, as you can imagine. Any video that was moderately big would take ages to download. For example, a short 10 MB video would take, if you do the math, 40 minutes to download, making streaming impossible. A longer and higher-quality video would take several hours and render the connection unusable for other purposes while you waited for it to be available, not to mention the possibility of the connection being interrupted and having to start the download process again. Now imagine liking a specific video a lot after watching it and wanting to watch it a second or third time. Going through that process again was almost an act of masochism.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;This situation made me interested in the possibility of downloading the videos I was trying to watch: if the video was interesting, having a copy meant I could watch it several times easily. Also, if the downloader was any good, maybe the download process could be resumed if the connection was interrupted, as it frequently was.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;16.606936416185&quot;&gt;
&lt;p&gt;At the time, there were other solutions to download videos from YouTube, including a quite popular &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/&quot;&gt;Greasemonkey&lt;/a&gt; script. By pure chance, none of the few I tested were working when I did, so I decided to explore the possibility of creating my own tool. And that is, more or less, how youtube-dl was born. I made it a command-line program so it would be easy to use for me and wrote it in Python because it was easy thanks to its extensive standard library, with the nice side effect that it would be platform independent.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;32.666837519221&quot;&gt;
&lt;h4 id=&quot;_an_ethereal_start&quot;&gt;An Ethereal start&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;The initial version of the program only worked for YouTube videos. It had almost no internal design whatsoever because it was not needed. It did what it had to do as a simple script that proceeded straight to the point. Line count was merely 223, with only 143 being actual lines of code, 44 for comments and 36 of them blank. The name was chosen out of pure convenience: youtube-dl was an obvious name, hard to forget, and it could be intuitively typed as “Y-O-U-TAB” in my terminal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;16.681818181818&quot;&gt;
&lt;p&gt;Having been using Linux for several years at that point, I decided to publish the program under a free software license (MIT for those first versions) just in case someone could find it useful. Back then, GitHub did not exist and we had to “make do” with &lt;a href=&quot;https://en.wikipedia.org/wiki/SourceForge&quot;&gt;SourceForge&lt;/a&gt;, which had a bit of a tedious form that you needed to fill to create a new project. So, instead of going to SourceForge, I quickly published it under &lt;a href=&quot;https://web.archive.org/web/20060812055952/http://www.arrakis.es/~rggi3/youtube-dl/&quot;&gt;the web space that my Internet provider gave me&lt;/a&gt;. While not usual today, it was common for ISPs to give you an email address and some web space you could upload stuff to using FTP. That way, you could have your own personal website on the net. The first ever version made public was 2006.08.08, although I probably had been using the program for a few weeks at that point.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;14.822601839685&quot;&gt;
&lt;p&gt;To create the program, I studied what the web browser was doing when watching a YouTube video using Firefox. If I recall correctly, Firefox didn’t yet have the development tools it has today to analyze network activity. Connections were mostly HTTP and &lt;a href=&quot;https://en.wikipedia.org/wiki/Wireshark&quot;&gt;Wireshark&lt;/a&gt;, known as “Ethereal” up to that year, proved invaluable to inspect the network traffic coming in and out of my box when loading a YouTube video. I wrote youtube-dl with the specific goal of doing the same things the web browser was doing to retrieve the video. It even sent out a User-Agent string that was verbatim copied from Firefox for Linux, as a way to make sure the site would send the program the same version of video web pages that were used to study what the web browser was doing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;14.5625&quot;&gt;
&lt;p&gt;In addition, YouTube used &lt;a href=&quot;https://en.wikipedia.org/wiki/Adobe_Flash&quot;&gt;Adobe Flash&lt;/a&gt; back then for the player. Videos were served as Flash Video files (FLV), and this all meant a proprietary plugin was required to watch them on the browser (many will remember the dreaded &lt;code&gt;libflashplayer.so&lt;/code&gt; library), which would have made any browser development tools useless. This proprietary plugin was a constant source of security advisories and problems. I used a Firefox extension called &lt;a href=&quot;https://en.wikipedia.org/wiki/Flashblock&quot;&gt;Flashblock&lt;/a&gt; that prevented the plugin from being loaded by default and replaced embedded content using the plugin, in web pages, with placeholder elements containing a clickable icon so content would be loaded only on demand and the plugin library was not used unless requested by the user.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;Flashblock had two nice side effects apart from making the browsing experience more secure. On the one hand, it removed a lot of noisy and obnoxious ads from many web pages, which could also be a source of security problems when served by third parties. On the other hand, it eased analyzing how videos were being downloaded by the video player. I would wait until the video page had finished downloading completely and then start logging traffic with Wireshark just before clicking on the embedded video player placeholder icon, allowing it to load. This way, the only traffic to analyze was related to the plugin downloading the video player application and the application itself downloading the video.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;9.2687651331719&quot;&gt;
&lt;p&gt;It’s also worth noting the Flash Player plugin back then &lt;a href=&quot;https://www.nirsoft.net/articles/copy_flash_flv_temp_file.html&quot;&gt;was already downloading a copy of those videos to your hard drive&lt;/a&gt; (they were stored in &lt;code&gt;/tmp&lt;/code&gt; under Linux) and many users relied on that functionality to keep a copy of them without using additional tools. youtube-dl was simply more convenient because it could retrieve the video title and name the file more appropriately in an automated way, for example.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;15.109665427509&quot;&gt;
&lt;h4 id=&quot;_ahh_fresh_meat&quot;&gt;Ahh, fresh meat!&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;10.572972972973&quot;&gt;
&lt;p&gt;The Flash Player plugin was eventually &lt;a href=&quot;https://www.omgubuntu.co.uk/2010/09/saving-flash-videos-in-linux-tmp-no-longer-works&quot;&gt;modified so videos wouldn’t be so easily available to grab&lt;/a&gt;. One of the first measures was to &lt;a href=&quot;https://en.wikipedia.org/wiki/Unlink_(Unix)&quot;&gt;unlink&lt;/a&gt; the video file after creating it, so the i-node would still exist and be available to the process using it (until it was closed) while keeping the file invisible from the file system point of view. It was still possible to grab the file by using the &lt;code&gt;/proc&lt;/code&gt; file system to examine file descriptors used by the browser process, but with every one of those small steps youtube-dl turned to be more and more convenient.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;15.636884306987&quot;&gt;
&lt;p&gt;As many free and open source enthusiasts back then, I used &lt;a href=&quot;https://en.wikipedia.org/wiki/Freecode&quot;&gt;Freshmeat&lt;/a&gt; to subscribe to new releases of projects I was interested in. When I created youtube-dl, I also created a project entry for it in that website so users could easily get notifications of new releases and a change log listing new features, fixes and improvements. Freshmeat could also be browsed to find new and interesting projects and its front page contained the latest updates, which usually amounted to only a few dozens a day. It’s only my guess that’s the way &lt;a href=&quot;https://en.wikipedia.org/wiki/Joe_Barr&quot;&gt;Joe Barr&lt;/a&gt; (rest in peace), an editor for &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux.com&quot;&gt;linux.com&lt;/a&gt;, found out about the program and decided to write &lt;a href=&quot;https://www.linux.com/news/cli-magic-enhance-your-youtube-viewing-pleasure/&quot;&gt;an article about it&lt;/a&gt; back in 2006. Linux.com was a bit different then and I think it was one of the frequently-visited sites for Linux enthusiasts together with other classics like &lt;a href=&quot;https://en.wikipedia.org/wiki/Slashdot&quot;&gt;Slashdot&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/LWN.net&quot;&gt;Linux Weekly News&lt;/a&gt;. At least, it was for me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;From that point on, youtube-dl’s popularity started to grow and I started getting some emails from time to time to thank me for creating and maintaining the program.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;26.51226993865&quot;&gt;
&lt;h4 id=&quot;_measuring_buckets_of_bits&quot;&gt;Measuring buckets of bits&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;17&quot;&gt;
&lt;p&gt;Fast forward to the year 2008. youtube-dl’s popularity had kept growing slowly and users frequently asked me to create similar programs to download from more sites, a request I had conceded a few times. It was at that point that I decided to rewrite the program from scratch and make it support multiple video sites natively. I had some simple ideas that would separate the program internals into several pieces. To simplify the most important parts: one would be the file downloader, common for every website, and another one would be the information extractors: objects (classes) that would contain code specific to a video site. When given a URL or pseudo-URL, the information extractors would be queried to know which one could handle that type of URL and then requested to extract information about that video or list of videos, with the primary goal of obtaining the video URL or a list of video URLs with available formats, together with some other metadata like the video titles, for example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;17.208211143695&quot;&gt;
&lt;p&gt;I also took the chance to switch version control systems and change where the project would be hosted. At that moment, Git was winning the distributed version control systems war for open source projects, but Mercurial also had a lot of users and, having tested both, I decided I liked it a bit more than Git. I started using it for youtube-dl and moved the project to &lt;a href=&quot;https://en.wikipedia.org/wiki/Bitbucket&quot;&gt;Bitbucket&lt;/a&gt;, which was the natural choice. Back then, Bitbucket could only host Mercurial repositories, while GitHub only hosted Git repositories. Both were launched in 2008 and were a breath of fresh air compared to SourceForge. The combination of compartmentalized per-user project namespaces (i.e. the name of your project did not have to be globally unique but unique for your projects) with distributed source control systems meant you could publish your personal projects in a matter of minutes to any of the two sites. In any case, migrating the project history to Git and moving the project to GitHub was still &lt;a href=&quot;https://rg3.name/201011061013.html&quot;&gt;a couple of years away in the future&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;When rewriting the project I should have taken the chance to rename it, no doubt, but I didn’t want to confuse existing users and kept the name in an effort to preserve the little popularity the program had.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;17.785394932936&quot;&gt;
&lt;p&gt;The technological context at home also switched a bit that year. Mobile data plans started to gain traction and, at the end of that year, I got myself a &lt;a href=&quot;https://rg3.name/200811161430.html&quot;&gt;3G modem&lt;/a&gt; and data plan that, for the first time, allowed me to browse the web at decent speeds. In any case, that didn’t make me stop using youtube-dl. I was paying 45 euros a month but the monthly data cap was limited to 5GB. Connection speed was finally great but, doing the math, I could only use an average of around 150MB a day, which meant I had to be selective when using the network and avoid big downloads if possible. youtube-dl helped a lot to prevent me from downloading large video files multiple times.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;26.752606635071&quot;&gt;
&lt;h4 id=&quot;_episode_a_new_home&quot;&gt;Episode: a new home&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Some time later, at the end of 2009, I moved and finally started living with my girlfriend (now my wife and the mother of my two children) in Avilés. For the first time, I started accessing the Internet using the type of connection and service that had been the standard for many of my friends and family for many years. I remember it was a 100/10 Mbps (down/up) cable connection with no monthly cap. That change definitely marked a turning point in how often I used youtube-dl and how much attention I paid to the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;14.240890688259&quot;&gt;
&lt;p&gt;Not much later, I finally moved it to Git and GitHub, when the market had spoken and both tools were the way to go. YouTube also started experimenting with HTML5 video, even if it wouldn’t &lt;a href=&quot;https://www.theverge.com/2015/1/27/7926001/youtube-drops-flash-for-html5-video-default&quot;&gt;become the default option&lt;/a&gt; until around 2015. In 2011 I had been working a full-time job as a software engineer for several years and, in general, I was not eager to get home to code a bit more tuning youtube-dl or implementing the most popular feature request I was probably not going to use personally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;15.682008368201&quot;&gt;
&lt;p&gt;In the second half of 2011 I was in the middle of another important personal software project and decided to step down as the youtube-dl maintainer, knowing I hadn’t been up to the task for several months. &lt;a href=&quot;https://phihag.de/&quot;&gt;Philipp Hagemeister&lt;/a&gt; had proved to be a great coder and had some pending pull requests in GitHub with several fixes many people were interested in. I gave him commit access to my youtube-dl repo and that’s mostly the end of the story on my side. The project’s Git master branch log shows I had a continuous stream of commits until March 2011, when they jump to August 2011 to merge a fix by Philipp. Since then, a single clerical commit in 2013 to change &lt;em&gt;rg3.github.com&lt;/em&gt; to &lt;em&gt;rg3.github.io&lt;/em&gt; in the source code, which was needed when GitHub moved user pages from &lt;em&gt;USERNAME.github.com&lt;/em&gt; to &lt;em&gt;USERNAME.github.io&lt;/em&gt; in order to, if I recall correctly, avoid security problems with malicious user web pages being served from their own official github.com domain.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;12.488343558282&quot;&gt;
&lt;p&gt;While I was basically not involved as a developer of youtube-dl, for years the official project page kept sitting under my username at &lt;code&gt;&lt;a href=&quot;https://github.com/rg3/youtube-dl&quot; class=&quot;bare&quot;&gt;https://github.com/rg3/youtube-dl&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://rg3.github.io/youtube-dl/&quot; class=&quot;bare&quot;&gt;https://rg3.github.io/youtube-dl/&lt;/a&gt;&lt;/code&gt;. I only had to show up when Philipp or other maintainers asked me to give commit access to additional developers, like &lt;a href=&quot;https://filippo.io/&quot;&gt;Filippo Valsorda&lt;/a&gt; at the time or &lt;a href=&quot;https://github.com/dstftw&quot;&gt;Sergey&lt;/a&gt;, one of the current maintainers. Unfortunately, in 2019 we had a small troll problem in the project issue tracker and only project owners were allowed to block users. This made us finally move the project to a GitHub organization where everyone with commit access was invited (although not everyone joined). The GitHub organization has allowed project maintainers to act more freely without me having to step in for clerical tasks every now and then.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;12.667613636364&quot;&gt;
&lt;p&gt;I want to &lt;a href=&quot;https://rg3.name/201408141628.html&quot;&gt;reiterate&lt;/a&gt; my most sincere thanks to the different project maintainers along these years, who greatly improved the code, were able to create an actual community of contributors around it and who made the project immensely more popular than it was when I stepped down almost 10 years ago, serving the needs of thousands of people along the way.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot; readability=&quot;31.241197183099&quot;&gt;
&lt;h4 id=&quot;_offline_and_free&quot;&gt;Offline and free&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;9.469696969697&quot;&gt;
&lt;p&gt;I’d like to remark one more time that the purpose of youtube-dl as a tool has barely changed along its 14 years of existence. Before and after the RIAA’s DMCA letter was received, many people have explained how they use youtube-dl with &lt;a href=&quot;https://freedom.press/news/riaa-github-youtube-dl-journalist-tool/&quot;&gt;different&lt;/a&gt; &lt;a href=&quot;https://twitter.com/xor/status/1319744343549317128&quot;&gt;goals&lt;/a&gt; in mind.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;24&quot;&gt;
&lt;p&gt;For me, it has always been about offline access to videos that are already available to the general public online. In a world of mobile networks and always-on Internet connections, you may wonder if that’s really needed. It must be, I guess, if Netflix, Amazon, Disney or HBO have all implemented similar functionality in their extremely popular streaming applications. For long road trips, or trips abroad specially with kids, or underground or on an airplane, or in a place with poor connectivity or metered connections, having offline access to that review, report, podcast, lecture, piece of news or work of art is incredibly convenient.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;13.942228335626&quot;&gt;
&lt;p&gt;An additional side-effect of youtube-dl is online access when the default online interface is not up to the task. The old proprietary Flash plugin was not available for every platform and architecture, depending on what your choice was. Nowadays, web browsers can play video but may sometimes not take advantage of efficient available GPU decoding, wasting large amounts of battery power along the way. youtube-dl can be combined with a native video player to make playing some videos possible and/or efficient. For example, &lt;a href=&quot;https://github.com/mpv-player/mpv&quot;&gt;mpv&lt;/a&gt; includes native youtube-dl support. You only need to feed it a supported video site URL and it will use youtube-dl to access the video stream and play it without storing anything in your hard drive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;The default online interface may also lack accessibility features, may make content navigation hard for some people or lack color blind filters that, again, may be available from a native video player application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot; readability=&quot;17.895348837209&quot;&gt;
&lt;p&gt;Last, but not least, tools like youtube-dl allow people to access online videos using only free software. I know there are not many free, libre and open source software purists out there. I don’t even consider myself one, by a long shot. Proprietary software is ever present in our modern lives and served to us every day in the form of vast amounts of Javascript code for our web browser to run, with many different and varied purposes and not always in the best interest of users. &lt;a href=&quot;https://en.wikipedia.org/wiki/General_Data_Protection_Regulation&quot;&gt;GDPR&lt;/a&gt;, with all its flaws and problems, is a testament to that. Accessing online videos using youtube-dl may give you a peace of mind incognito mode, uBlock Origin or Privacy Badger can only barely grasp.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Tue, 10 Nov 2020 16:33:35 +0000</pubDate>
<dc:creator>rg3</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://rg3.name/202011071352.html</dc:identifier>
</item>
<item>
<title>.NET 5.0</title>
<link>https://devblogs.microsoft.com/dotnet/announcing-net-5-0/</link>
<guid isPermaLink="true" >https://devblogs.microsoft.com/dotnet/announcing-net-5-0/</guid>
<description>&lt;div class=&quot;row justify-content-center&quot;&gt;
&lt;div class=&quot;col-md-4&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://secure.gravatar.com/avatar/37f91ebe219df737566a4dc7cdd53b68?s=58&amp;amp;d=mm&amp;amp;r=g&quot; width=&quot;58&quot; height=&quot;58&quot; alt=&quot;Avatar&quot; class=&quot;avatar avatar-58 wp-user-avatar wp-user-avatar-58 photo avatar-default&quot;/&gt;&lt;p&gt;Richard&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;entry-meta entry-meta-layout&quot;&gt;
&lt;p&gt;November 10th, 2020&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;We’re excited to release .NET 5.0 today and for you to start using it. It’s a major release — including &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/c-9-0-on-the-record/&quot;&gt;C# 9&lt;/a&gt; and F# 5 — with a broad set of new features and compelling improvements. It’s already in active use by teams at Microsoft and other companies, in production and for performance testing. Those teams are showing us great results that demonstrate performance gains and/or opportunities to reduce hosting costs for their web applications. We’ve been running &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-2/#closing&quot;&gt;our own website on 5.0 starting with Preview 1&lt;/a&gt;. From what we’ve seen and heard so far, .NET 5.0 delivers significant value without much effort to upgrade. It’s a great choice for your next app, and a straightforward upgrade from earlier .NET Core versions. We hope you enjoy using it, on your desktop, laptop, and cloud instances.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/aspnet/announcing-asp-net-core-in-net-5/&quot;&gt;ASP.NET Core&lt;/a&gt;, &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-the-release-of-ef-core-5-0/&quot;&gt;EF Core&lt;/a&gt;, &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/c-9-0-on-the-record/&quot;&gt;C# 9&lt;/a&gt;, and &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-f-5/&quot;&gt;F# 5&lt;/a&gt; are also being released today. &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/net-5-0-launches-at-net-conf-november-10-12/&quot;&gt;.NET Conf 2020&lt;/a&gt; — our &lt;a href=&quot;https://www.dotnetconf.net/?utm_campaign=savedate&amp;amp;utm_source=dotnet&amp;amp;utm_medium=blog&quot;&gt;free and virtual conference&lt;/a&gt; — is being held today so you can learn about all of the new releases.&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/5.0&quot;&gt;download .NET 5.0&lt;/a&gt;, for Windows, macOS, and Linux, for x86, x64, Arm32, Arm64.&lt;/p&gt;
&lt;p&gt;For Visual Studio users, you need &lt;a href=&quot;https://visualstudio.microsoft.com&quot;&gt;Visual Studio 16.8&lt;/a&gt; or later to use .NET 5.0 on Windows and the latest version of &lt;a href=&quot;https://visualstudio.microsoft.com/vs/mac/&quot;&gt;Visual Studio for Mac)&lt;/a&gt; on macOS. The &lt;a href=&quot;https://code.visualstudio.com/docs/languages/dotnet&quot;&gt;C# extension&lt;/a&gt; for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; already supports .NET 5.0 and C# 9.&lt;/p&gt;
&lt;p&gt;.NET 5.0 is the first release in our .NET unification journey. We built .NET 5.0 to enable a much larger group of developers to migrate their .NET Framework code and apps to .NET 5.0. We’ve also done much of the early work in 5.0 so that Xamarin developers can use the unified .NET platform when we release .NET 6.0. There is more on .NET unification, later in the post.&lt;/p&gt;
&lt;p&gt;Now is a good time to call out the incredible collaboration with everyone contributing to the .NET project. This release marks the fifth major .NET version as an open source project. There is now a large mix of individuals and small and large companies (including the &lt;a href=&quot;https://dotnetfoundation.org/member/corporate-sponsors&quot;&gt;.NET Foundation corporate sponsors&lt;/a&gt;) working together as a large community on various aspects of .NET in the &lt;a href=&quot;https://github.com/dotnet/&quot;&gt;dotnet org on GitHub&lt;/a&gt;. The improvements in .NET 5.0 are the result of many people, their effort, smart ideas, and their care and love for the platform, all above and beyond Microsoft’s stewardship of the project. From the core team working on .NET every day, we extend a &lt;a href=&quot;https://dotnetthanks.azurewebsites.net/&quot;&gt;very large “thank you”&lt;/a&gt; to everyone that contributed to .NET 5.0 (and previous releases)!&lt;/p&gt;
&lt;p&gt;We &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/introducing-net-5/&quot;&gt;introduced .NET 5.0&lt;/a&gt; way back in May 2019, and even set the November 2020 release date at that time. From that post: “we will ship .NET Core 3.0 this September, .NET 5 in November 2020, and then we intend to ship a major version of .NET once a year, every November”. You’d think that “November 2020” was a cheque that could not be cashed given all the challenges this year, however, .NET 5.0 has been released on time. Thanks to everyone on the team that made that happen! I know it has not been easy. Looking forward, you should expect .NET 6.0 in November 2021. We intend to release new .NET versions every November.&lt;/p&gt;
&lt;p&gt;The rest of the blog is dedicated to highlighting and detailing most of the improvements in .NET 5.0. There is also an update on our .NET unification vision.&lt;/p&gt;
&lt;h2 id=&quot;net-5-0-highlights&quot;&gt;.NET 5.0 Highlights&lt;/h2&gt;
&lt;p&gt;There are many &lt;a href=&quot;https://github.com/dotnet/runtime/issues/37269&quot;&gt;important improvements in .NET 5.0&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;.NET 5.0 is already battle-tested&lt;/strong&gt; by being hosted for months at &lt;a href=&quot;https://dot.net/&quot;&gt;dot.net&lt;/a&gt; and &lt;a href=&quot;https://www.bing.com&quot;&gt;Bing.com&lt;/a&gt; (&lt;a href=&quot;https://www.bing.com/version&quot;&gt;version&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance is greatly improved&lt;/strong&gt; across many components and is described in detail at &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5/&quot;&gt;Performance Improvements in .NET 5.0&lt;/a&gt;, &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/Arm64-performance-in-net-5/&quot;&gt;Arm64 Performance in .NET 5.0&lt;/a&gt;, and &lt;a href=&quot;https://devblogs.microsoft.com/aspnet/grpc-performance-improvements-in-net-5/&quot;&gt;gRPC&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C# 9 and F# 5 offer new language improvements&lt;/strong&gt; such as top-level programs and records for C# 9, while F# 5 offers interactive programming and a performance boost for functional programming on .NET.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.NET libraries have enhanced performance&lt;/strong&gt; for Json serialization, &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/regex-performance-improvements-in-net-5/&quot;&gt;regular expressions&lt;/a&gt;, and HTTP (&lt;a href=&quot;https://github.com/dotnet/corefx/pull/41640&quot;&gt;HTTP 1.1&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/runtime/pull/35694&quot;&gt;HTTP/2&lt;/a&gt;). They are also are now completely annotated for nullability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P95 latency has dropped&lt;/strong&gt; due to refinements in the &lt;a href=&quot;https://github.com/dotnet/coreclr/pull/27578&quot;&gt;GC&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/runtime/pull/32250&quot;&gt;tiered compilation&lt;/a&gt;, and &lt;a href=&quot;https://github.com/dotnet/runtime/issues/37534&quot;&gt;other areas&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application deployment options are better&lt;/strong&gt;, with ClickOnce client app publishing, &lt;a href=&quot;https://github.com/dotnet/runtime/issues/36590&quot;&gt;single-file apps&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/issues/1814#issuecomment-625294750&quot;&gt;reduced container image size&lt;/a&gt;, and the addition of Server Core container images.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Platform scope expanded&lt;/strong&gt; with &lt;a href=&quot;https://github.com/dotnet/runtime/issues/36699&quot;&gt;Windows Arm64&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/runtime/issues/38367&quot;&gt;WebAssembly&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I’ve written many samples for the .NET 5.0 preview posts. You might want to take a look at &lt;a href=&quot;https://gist.github.com/richlander/50c34a8714eb3436e5d9d4d5d420776e&quot;&gt;.NET 5.0 Examples&lt;/a&gt; to learn more about new C# 9 and libraries features.&lt;/p&gt;
&lt;h2 id=&quot;platform-and-microsoft-support&quot;&gt;Platform and Microsoft Support&lt;/h2&gt;
&lt;p&gt;.NET 5.0 has a nearly identical &lt;a href=&quot;https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0-supported-os.md&quot;&gt;platform support matrix&lt;/a&gt; as &lt;a href=&quot;https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1-supported-os.md&quot;&gt;.NET Core 3.1&lt;/a&gt;, for Windows, macOS, and Linux. If you are using .NET Core 3.1 on a supported operating system, you should be able to adopt .NET 5.0 on that same operating system version for the most part. The most significant addition for .NET 5.0 is Windows Arm64.&lt;/p&gt;
&lt;p&gt;.NET 5.0 is a &lt;a href=&quot;https://github.com/dotnet/core/blob/master/microsoft-support.md#current-releases&quot;&gt;current release&lt;/a&gt;. That means that it will be supported for three months after .NET 6.0 is released. As a result, we expect to support .NET 5.0 through the middle of February 2022. .NET 6.0 will be an LTS release and will be supported for three years, just like .NET Core 3.1.&lt;/p&gt;
&lt;h2 id=&quot;unified-platform-vision&quot;&gt;Unified platform vision&lt;/h2&gt;
&lt;p&gt;Last year, we shared a &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/introducing-net-5/&quot;&gt;vision of a unified .NET stack and ecosystem&lt;/a&gt;. The value to you is that you will be able to use a single set of APIs, languages, and tools to target a broad set of application types, including mobile, cloud, desktop, and IoT. You might realize that you can already target a broad set of platforms with .NET today, however, the tools and APIs are not always the same across Web and Mobile, for example, or released at the same time.&lt;/p&gt;
&lt;p&gt;As part of .NET 5.0 and 6.0, we are unifying .NET into a single product experience, while enabling you to pick just the parts of the .NET platform that you want to use. If you want to target Mobile and not WebAssembly, you don’t need to download the WebAssembly tools, and vice versa. Same with ASP.NET Core and WPF. You’ll also have a much easier way to acquire all the .NET tools and build and runtime packs that you need from the command line. We’re enabling a package manager experience (including using existing package managers) for .NET platform components. That will be great for many scenarios. Quick construction of a development environment and CI/CD will probably be the biggest beneficiaries.&lt;/p&gt;
&lt;p&gt;We had intended to deliver the entirety of the unification vision with .NET 5.0, but in the wake of the global pandemic, we had to adapt to the changing needs of our customers. We’ve been working with teams from companies from around the world that have needed help to speed up their adoption of cloud technologies. They, too, have had adapt to the changing needs of their customers. As a result, we are delivering the vision across two releases.&lt;/p&gt;
&lt;p&gt;The first step towards this vision was &lt;a href=&quot;https://github.com/dotnet/announcements/issues/119&quot;&gt;consolidating .NET repos&lt;/a&gt;, including a large subset of Mono. Having one repo for the runtime and libraries for .NET is a precondition to delivering the same product everywhere. It also helps with making broad changes that affect runtime and libraries, where there were previously repo boundaries. Some people were worried that a large repo would be harder to manage. That hasn’t proven to be the case.&lt;/p&gt;
&lt;p&gt;In the .NET 5.0 release, Blazor is best example of taking advantage of repo consolidation and .NET unification. The runtime and libraries for &lt;a href=&quot;https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-preview-7/#blazor-webassembly-apps-now-target-net-5&quot;&gt;Blazor WebAssembly&lt;/a&gt; are now built from the consolidated &lt;a href=&quot;https://github.com/dotnet/runtime&quot;&gt;dotnet/runtime&lt;/a&gt; repo. That means Blazor WebAssembly and Blazor on the server use the exact same code for &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;, for example. That wasn’t the case for Blazor prior to .NET 5.0. The approach we took for Blazor WebAssembly is very similar to what we’ll do with Xamarin in .NET 6.0.&lt;/p&gt;
&lt;p&gt;The .NET Framework remains a supported Microsoft product and will continue to be supported with each new version of Windows. We announced last year that we had &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/&quot;&gt;stopped adding new features to .NET Framework&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/announcements/issues/130&quot;&gt;finished adding .NET Framework APIs to .NET Core&lt;/a&gt;. That means that now is a great time to consider moving your .NET Framework apps to .NET Core. For .NET Framework client developers, Windows Forms and WPF are supported with .NET 5.0. We’ve heard from many developers that porting from .NET Framework is straightforward. For .NET Framework server developers, you need to adopt ASP.NET Core to use .NET 5.0. For Web Forms developers, we believe that &lt;a href=&quot;https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-preview-7/&quot;&gt;Blazor&lt;/a&gt; provides a similar developer experience with an efficient and much more modern implementation. WCF server and Workflow users can look to &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/supporting-the-community-with-wf-and-wcf-oss-projects/&quot;&gt;community projects that are supporting those frameworks&lt;/a&gt;. The &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/porting/&quot;&gt;porting from .NET Framework to .NET Core&lt;/a&gt; doc is a good place to start. That all said, keeping your app on .NET Framework is a fine approach if you are happy with your experience.&lt;/p&gt;
&lt;p&gt;The Windows team is working on &lt;a href=&quot;https://github.com/microsoft/ProjectReunion&quot;&gt;Project Reunion&lt;/a&gt; as the next step forward for UWP and related technologies. We’ve been collaborating with the Reunion team to ensure that .NET 5.0 and later versions will work well with WinUI and WebView2. The Project Reunion repo is the best place to stay up to date with progress.&lt;/p&gt;
&lt;p&gt;Let’s switch to looking at what’s new in the 5.0 release.&lt;/p&gt;
&lt;h2 id=&quot;languages&quot;&gt;Languages&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/c-9-0-on-the-record/&quot;&gt;C# 9&lt;/a&gt; and &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-f-5/&quot;&gt;F# 5&lt;/a&gt; are part of the .NET 5.0 release and included in the .NET 5.0 SDK. Visual Basic is also included in the 5.0 SDK. It does not include language changes, but has improvements to support the Visual Basic Application Framework on .NET Core.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/&quot;&gt;C# Source Generators&lt;/a&gt; are an important new C# compiler feature. They are not technically part of C# 9 since it doesn’t have any language syntax. See &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/new-c-source-generator-samples/&quot;&gt;New C# Source Generator Samples&lt;/a&gt; to help you get started using this new feature. We expect to make more use of &lt;a href=&quot;https://github.com/dotnet/runtime/issues/43545&quot;&gt;source generators within the .NET product&lt;/a&gt; in .NET 6.0 and beyond.&lt;/p&gt;
&lt;p&gt;As a way to try out the new release ourselves, a few of us decided to update the &lt;a href=&quot;https://github.com/dotnet/iot/&quot;&gt;dotnet/iot&lt;/a&gt; repo to use new C# 9 syntax and target .NET 5.0. It uses top-level programs, records, patterns, and switch expressions. It has also been updated to take advantage of the complete set of nullable annotations in .NET libraries. We also updated the &lt;a href=&quot;https://docs.microsoft.com/dotnet/iot/&quot;&gt;.NET IoT docs&lt;/a&gt;. We’ll take a look at few examples from that repo to explore C# 9.&lt;/p&gt;
&lt;h3 id=&quot;top-level-programs&quot;&gt;Top-level programs&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/dotnet/iot/blob/master/samples/led-blink/Program.cs&quot;&gt;led-blink&lt;/a&gt; program is a nice compact top-level program example.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;using System;
using System.Device.Gpio;
using System.Threading;

var pin = 18;
var lightTime = 1000;
var dimTime = 200;

Console.WriteLine($&quot;Let's blink an LED!&quot;);
using GpioController controller = new ();
controller.OpenPin(pin, PinMode.Output);
Console.WriteLine($&quot;GPIO pin enabled for use: {pin}&quot;);

// turn LED on and off
while (true)
{
    Console.WriteLine($&quot;Light for {lightTime}ms&quot;);
    controller.Write(pin, PinValue.High);
    Thread.Sleep(lightTime);

    Console.WriteLine($&quot;Dim for {dimTime}ms&quot;);
    controller.Write(pin, PinValue.Low);
    Thread.Sleep(dimTime);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can also see the use of target-typed &lt;code&gt;new&lt;/code&gt;, with the assignment to the &lt;code&gt;controller&lt;/code&gt; variable. The &lt;code&gt;GpioController&lt;/code&gt; type is only defined on the left-hand side of the assignment. The type is inferred on the right-hand side. This new syntax is an alternative to &lt;code&gt;var&lt;/code&gt;, which has the type only showing on the right-hand side of the assignment and is inferred on the left-hand side with the &lt;code&gt;var&lt;/code&gt; keyword.&lt;/p&gt;
&lt;p&gt;Top-level programs can also grow in complexity, by defining methods and taking advantage of types defined in the same or other files. The &lt;a href=&quot;https://github.com/dotnet/iot/blob/master/src/devices/CharacterLcd/samples/Program.cs&quot;&gt;CharacterLcd&lt;/a&gt; sample demonstrates some of those capabilities.&lt;/p&gt;
&lt;h3 id=&quot;logical-and-property-patterns&quot;&gt;Logical and property patterns&lt;/h3&gt;
&lt;p&gt;C# 9 includes support for new patterns. You can see an example of a logical pattern in the &lt;a href=&quot;https://github.com/dotnet/iot/blob/54469318f33124e3455bf974e6a75167dfb831e6/src/devices/Ccs811/samples/Program.cs#L109&quot;&gt;following code&lt;/a&gt; from the &lt;a href=&quot;https://github.com/dotnet/iot/blob/master/src/devices/Ccs811/README.md&quot;&gt;CCS811 Gas sensor&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;var threshChoice = Console.ReadKey();
Console.WriteLine();
if (threshChoice.KeyChar is 'Y' or 'y')
{
   TestThresholdAndInterrupt(ccs811);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Another new pattern is property patterns. You can see several properties checks in my &lt;a href=&quot;https://gist.github.com/richlander/c911b8e3a0aefcefee9e01ee338a5fdd#file-program-cs-L83&quot;&gt;Mycroft information access 6.0&lt;/a&gt; sample. The &lt;a href=&quot;https://github.com/dotnet/iot/blob/0b7733e5580ad55fc80e76e0587740d95c5ea0c2/src/devices/Pn532/Pn532.cs#L813&quot;&gt;following code&lt;/a&gt; is taken from the &lt;a href=&quot;https://github.com/dotnet/iot/blob/master/src/devices/Pn532/README.md&quot;&gt;PN532 RFID and NFC reader&lt;/a&gt; sample.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;if (pollingType is not { Length: &amp;lt;=15 })
{
      return null;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code tests if &lt;code&gt;pollingType&lt;/code&gt; (which is typed as &lt;code&gt;byte[]?&lt;/code&gt;) is null or contains &amp;gt;15 bytes. Those are the two error conditions to test before return &lt;code&gt;null&lt;/code&gt;. This test could also have been written as &lt;code class=&quot;prettyprint&quot;&gt;pollingType is null or { Length: &amp;gt; 15 }&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I want to show you two more patterns. The first is a &lt;a href=&quot;https://github.com/dotnet/iot/blob/0b7733e5580ad55fc80e76e0587740d95c5ea0c2/src/devices/Mcp25xxx/Register/MessageReceive/RxBxDn.cs#L65-L66&quot;&gt;logical pattern&lt;/a&gt; in &lt;a href=&quot;https://github.com/dotnet/iot/tree/master/src/devices/Mcp25xxx&quot;&gt;Mcp25xxx CAN bus&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
public static byte GetRxBufferNumber(Address address) =&amp;gt; address switch
{
    &amp;gt;= Address.RxB0D0 and &amp;lt;= Address.RxB0D7 =&amp;gt; 0,
    &amp;gt;= Address.RxB1D0 and &amp;lt;= Address.RxB1D7 =&amp;gt; 1,
    _ =&amp;gt; throw new ArgumentException(nameof(address), $&quot;Invalid address value {address}.&quot;),
};
&lt;/pre&gt;
&lt;p&gt;The second is a &lt;a href=&quot;https://github.com/dotnet/iot/blob/0b7733e5580ad55fc80e76e0587740d95c5ea0c2/src/devices/Buzzer/samples/MelodyPlayer.cs#L83&quot;&gt;logical pattern&lt;/a&gt; in &lt;a href=&quot;https://github.com/dotnet/iot/tree/master/src/devices/Buzzer&quot;&gt;Piezo Buzzer Controller&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
if (element is not NoteElement noteElement)
{
    // In case it's a pause element we have only just wait desired time.
    Thread.Sleep(durationInMilliseconds);
}
else
{
    // In case it's a note element we play it.
    var frequency = GetFrequency(noteElement.Note, noteElement.Octave);
    _buzzer.PlayTone(frequency, (int)(durationInMilliseconds * 0.7));
    Thread.Sleep((int)(durationInMilliseconds * 0.3));
}
&lt;/pre&gt;
&lt;h2 id=&quot;records&quot;&gt;Records&lt;/h2&gt;
&lt;p&gt;C# 9 includes a new type of class called a record. It has a number of benefits compared to regular classes, half of which relate to more terse syntax. The &lt;a href=&quot;https://github.com/dotnet/iot/blob/a0231d4397de913f328829cead587ca6ef355e27/src/devices/Bh1745/Bh1745.cs#L17&quot;&gt;following record&lt;/a&gt; is taken from the &lt;a href=&quot;https://github.com/dotnet/iot/tree/master/src/devices/Bh1745&quot;&gt;Bh1745 RGB Sensor&lt;/a&gt; binding.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;public record ChannelCompensationMultipliers(double Red, double Green, double Blue, double Clear);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It is then used &lt;a href=&quot;https://github.com/dotnet/iot/blob/a0231d4397de913f328829cead587ca6ef355e27/src/devices/Bh1745/Bh1745.cs#L46&quot;&gt;a little later in the same file&lt;/a&gt;, with familiar syntax:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;ChannelCompensationMultipliers = new (2.2, 1.0, 1.8, 10.0);
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;nullability-annotation-improvements&quot;&gt;Nullability annotation improvements&lt;/h3&gt;
&lt;p&gt;The .NET libraries are now completely annotated for &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/embracing-nullable-reference-types/&quot;&gt;nullability&lt;/a&gt;. That means if you &lt;a href=&quot;https://docs.microsoft.com/dotnet/csharp/nullable-references&quot;&gt;enable nullability&lt;/a&gt;, you’ll get more type information from the platform to direct your use of the feature. At present, the &lt;a href=&quot;https://docs.microsoft.com/dotnet/&quot;&gt;.NET docs&lt;/a&gt; have not been fully annotated. For example, &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.string.isnullorempty?view=net-5.0&quot;&gt;&lt;code&gt;String.IsNullOrEmpty(string)&lt;/code&gt;&lt;/a&gt; should be annotated to take a &lt;code&gt;string?&lt;/code&gt;, while &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.string.split?view=net-5.0#System_String_Split_System_Char___&quot;&gt;String.Split(Char[])&lt;/a&gt; has an annotation of &lt;code&gt;char[]?&lt;/code&gt;. We hope that will get fixed soon. Complete information is available at &lt;a href=&quot;https://source.dot.net/#System.Private.CoreLib/String.cs,492&quot;&gt;source.dot.net&lt;/a&gt; and via F12 metadata lookups in Visual Studio.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.nuget.org/packages/System.Device.Gpio&quot;&gt;System.Device.Gpio&lt;/a&gt; and &lt;a href=&quot;https://www.nuget.org/packages/Iot.Device.Bindings&quot;&gt;Iot.Device.Bindings&lt;/a&gt; packages (version 1.1.0 for both) have also been annotated as part of this release, using the updated .NET 5.0 annotations. Those libraries are both multi-targeted, however, we use the 5.0 view to produce annotations for all targets.&lt;/p&gt;
&lt;p&gt;Note: Existing .NET Core 3.1 code might generate new diagnostics (if you have nullability enabled) when you retarget it to .NET 5.0, since there are new annotations.&lt;/p&gt;
&lt;p&gt;We’ve also added new annotation types. It’s common for large classes to instantiate object members in helper methods called from a constructor. The C# compiler can’t follow the flow of calls to the object assignment. It will think that the member is null when exiting the constructor and will warn with &lt;code&gt;CS8618&lt;/code&gt;. The &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.diagnostics.codeanalysis.membernotnullattribute&quot;&gt;MemberNotNull&lt;/a&gt; attribute resolves this problem. You apply the attribute to the helper method. The compiler will then see that you set this value and realize that the method is called from a constructor. &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.diagnostics.codeanalysis.membernotnullwhenattribute&quot;&gt;MemberNotNullWhen&lt;/a&gt; is similar.&lt;/p&gt;
&lt;p&gt;You can see an example of &lt;code&gt;MemberNotNull&lt;/code&gt; in the &lt;a href=&quot;https://github.com/dotnet/iot/tree/master/src/devices/Bmxx80&quot;&gt;BMxx80 temperature sensors&lt;/a&gt; with the &lt;a href=&quot;https://github.com/dotnet/iot/blob/54469318f33124e3455bf974e6a75167dfb831e6/src/devices/Bmxx80/Bmxx80Base.cs#L311-L313&quot;&gt;following code&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;[MemberNotNull(nameof(_calibrationData))]
private void ReadCalibrationData()
{
   switch (this)
   {
         case Bme280 _:
            _calibrationData = new Bme280CalibrationData();
            _controlRegister = (byte)Bmx280Register.CTRL_MEAS;
            break;
         case Bmp280 _:
            _calibrationData = new Bmp280CalibrationData();
            _controlRegister = (byte)Bmx280Register.CTRL_MEAS;
            break;
         case Bme680 _:
            _calibrationData = new Bme680CalibrationData();
            _controlRegister = (byte)Bme680Register.CTRL_MEAS;
            break;
         default:
            throw new Exception(&quot;Bmxx80 device not correctly configured. Could not find calibraton data.&quot;);
   }

   _calibrationData.ReadFromDevice(this);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/dotnet/iot/blob/54469318f33124e3455bf974e6a75167dfb831e6/src/devices/Bmxx80/Bmxx80Base.cs#L311-L313&quot;&gt;actual code&lt;/a&gt; uses conditional compilation. That’s because the project is multi-targeted, and this attribute is only supported with .NET 5.0+ . The use of the attribute enables skipping runtime checks (in the constructor) that would otherwise be needed to satisfy nullability requirements, as &lt;a href=&quot;https://github.com/dotnet/iot/blob/54469318f33124e3455bf974e6a75167dfb831e6/src/devices/Bmxx80/Bmxx80Base.cs#L90-L95&quot;&gt;is the case for earlier .NET versions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We’ve improved the Windows Forms designer, changed the way that target frameworks work for .NET 5.0 and beyond, changed the way that WinRT is supported, and made other improvements.&lt;/p&gt;
&lt;h3 id=&quot;windows-forms-designer&quot;&gt;Windows Forms designer&lt;/h3&gt;
&lt;p&gt;The Windows Forms designer (for .NET Core 3.1 and .NET 5.0) has been updated in Visual Studio 16.8, and now supports all Windows Forms controls. It also supports the &lt;a href=&quot;https://www.telerik.com/products/winforms.aspx&quot;&gt;Telerik UI for WinForms controls&lt;/a&gt;. The designer includes all the designer functionality you would expect, including: drag-and-drop, selection, move and resize, cut/copy/paste/delete of controls, integration with the Properties Window, events generation and more. Data binding and support for a broader set of third party controls is coming soon.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/winforms-designer.png&quot; alt=&quot;Windows Form Designer&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Learn more in the &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/windows-forms-designer-for-net-core-released/&quot;&gt;Windows Forms Designer for .NET Core Released&lt;/a&gt; post.&lt;/p&gt;
&lt;h3 id=&quot;net-5-0-target-framework&quot;&gt;.NET 5.0 Target Framework&lt;/h3&gt;
&lt;p&gt;We have changed the approach we use for &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/the-future-of-net-standard/&quot;&gt;target frameworks with .NET 5.0&lt;/a&gt;. The following project file demonstrate the new .NET 5.0 target framework.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&amp;gt;

  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;OutputType&amp;gt;Exe&amp;lt;/OutputType&amp;gt;
    &amp;lt;TargetFramework&amp;gt;net5.0&amp;lt;/TargetFramework&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;

&amp;lt;/Project&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The new &lt;code&gt;net5.0&lt;/code&gt; form is more compact and intuitive than the &lt;code&gt;netcoreapp3.1&lt;/code&gt; style we’ve used until this point. In addition, we are extending the target framework to describe operating system dependencies. This change is motivated by our vision to enable targeting iOS and Android with Xamarin in .NET 6.0.&lt;/p&gt;
&lt;p&gt;Windows desktop APIs (including Windows Forms, WPF, and WinRT) will only be available when targeting &lt;code&gt;net5.0-windows&lt;/code&gt;. You can specify an operating system version, like &lt;code&gt;net5.0-windows7&lt;/code&gt; or &lt;code&gt;net5.0-windows10.0.17763.0&lt;/code&gt; ( for &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_10_version_history&quot;&gt;Windows October 2018 Update&lt;/a&gt;). You need to target a Windows 10 version if you want to use &lt;a href=&quot;https://github.com/dotnet/runtime/issues/35318&quot;&gt;WinRT APIs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cross-platform scenarios can be a bit more challenging, when using the new &lt;code&gt;net5.0-windows&lt;/code&gt; TFM. &lt;a href=&quot;https://www.nuget.org/packages/System.Device.Gpio&quot;&gt;System.Device.Gpio&lt;/a&gt; demonstrates &lt;a href=&quot;https://github.com/dotnet/iot/blob/54469318f33124e3455bf974e6a75167dfb831e6/src/System.Device.Gpio/System.Device.Gpio.csproj#L4&quot;&gt;a pattern for managing the Windows target-framework&lt;/a&gt; if you want to avoid building for Windows or avoid pulling Windows runtime packages on Linux, for example.&lt;/p&gt;
&lt;p&gt;Summary of changes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;net5.0&lt;/code&gt; is the new Target Framework Moniker (TFM) for .NET 5.0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;net5.0&lt;/code&gt; combines and replaces &lt;code&gt;netcoreapp&lt;/code&gt; and &lt;code&gt;netstandard&lt;/code&gt; TFMs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;net5.0&lt;/code&gt; supports &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/porting/third-party-deps#net-framework-compatibility-mode&quot;&gt;.NET Framework compatibility mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;net5.0-windows&lt;/code&gt; will be used to expose Windows-specific functionality, including Windows Forms, WPF and WinRT APIs.&lt;/li&gt;
&lt;li&gt;.NET 6.0 will use the same approach, with &lt;code&gt;net6.0&lt;/code&gt;, and will add &lt;code&gt;net6.0-ios&lt;/code&gt; and &lt;code&gt;net6.0-android&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The OS-specific TFMs can include &lt;a href=&quot;https://github.com/dotnet/designs/blob/master/accepted/2020/minimum-os-version/minimum-os-version.md&quot;&gt;OS version numbers&lt;/a&gt;, like &lt;code&gt;net6.0-ios14&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Portable APIs, like ASP.NET Core will be usable with &lt;code&gt;net5.0&lt;/code&gt;. The same will be true of Xamarin forms with &lt;code&gt;net6.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The templates in Visual Studio 16.8 still target .NET Core 3.1, for console, WPF and Windows Forms apps. The ASP.NET templates have been updated to support .NET 5.0. We will update the templates in Visual Studio 16.9 for the remaining templates.&lt;/p&gt;
&lt;h3 id=&quot;winrt-interop-breaking-change&quot;&gt;WinRT Interop (Breaking Change)&lt;/h3&gt;
&lt;p&gt;On the topic of targeting Windows APIs, we have moved to a &lt;a href=&quot;https://github.com/dotnet/runtime/issues/35318&quot;&gt;new model for supporting WinRT APIs as part of .NET 5.0&lt;/a&gt;. This includes calling APIs (in either direction; CLR &amp;lt;==&amp;gt; WinRT), marshaling of data between the two type systems, and unification of types that are intended to be treated the same across the type system or &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_binary_interface&quot;&gt;ABI&lt;/a&gt; boundary (i.e. “projected types”; &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1&quot;&gt;&lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/uwp/api/windows.foundation.collections.iiterable-1&quot;&gt;&lt;code&gt;IIterable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; are examples).&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/dotnet/runtime/issues/37672&quot;&gt;existing WinRT interop system has been removed&lt;/a&gt; from the .NET runtime as part of .NET 5.0. This is a breaking change. That means that apps and libraries using WinRT with .NET Core 3.x will need to be rebuilt and will not run on .NET 5.0 as-is. Libraries that use WinRT APIs will need to multi-target to manage this difference between .NET Core 3.1 and .NET 5.0.&lt;/p&gt;
&lt;p&gt;Going forward, we will rely on the new &lt;a href=&quot;https://blogs.windows.com/windowsdeveloper/2020/11/10/announcing-c-winrt-version-1-0-with-the-net-5-ga-release/&quot;&gt;CsWinRT tool&lt;/a&gt; provided by the WinRT team in Windows. It generates C#-based WinRT interop assemblies, which can be delivered via NuGet. That’s exactly what the Windows team is doing, for the WinRT APIs in Windows. The tool can be used by anyone that wants to use WinRT (on Windows) as an interop system, to expose native APIs to .NET or .NET APIs to native code.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/microsoft/CsWinRT&quot;&gt;CsWinRT tool&lt;/a&gt; is logically similar to tlbimp and tlbexp, although much better. The tlb tools relied on a lot of COM interop plumbing in the .NET runtime. The CsWinRT tool only relies on public .NET APIs. That said, the &lt;a href=&quot;https://docs.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-9.0/function-pointers&quot;&gt;function pointers&lt;/a&gt; feature in C# 9 — and partially implemented in the .NET 5.0 runtime — was in part inspired by the needs of the CsWinRT tool.&lt;/p&gt;
&lt;p&gt;There are several benefits to this new WinRT interop model:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It can be developed and improved separate from the .NET runtime.&lt;/li&gt;
&lt;li&gt;It is symmetrical with the tool-based interop systems provided for other OSes, like iOS and Android.&lt;/li&gt;
&lt;li&gt;The tool can take advantage of other .NET features (AOT, C# features, IL linking), which was not an option for the previous system.&lt;/li&gt;
&lt;li&gt;Simplifies the &lt;a href=&quot;https://github.com/dotnet/runtime/pull/36715&quot;&gt;.NET runtime codebase&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You don’t need to add NuGet references to use WinRT APIs. Targeting a Windows 10 TFM — just discussed in the .NET 5.0 TFM section earlier — is enough. If you target .NET Core 3.1 or earlier, you need to reference WinRT packages. You can see this pattern in the &lt;a href=&quot;https://github.com/dotnet/iot/blob/17d497e71147431e12784fcd15e6aaea37a409a3/src/System.Device.Gpio/System.Device.Gpio.csproj#L24-L40&quot;&gt;System.Device.Gpio project&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;native-exports&quot;&gt;Native exports&lt;/h3&gt;
&lt;p&gt;We’ve had requests to enable exports for native binaries that calls into .NET code for a long time. The building block for the scenario is &lt;a href=&quot;https://github.com/dotnet/runtime/blob/3247a54a4263dc2a492b740223b6f062672f70d7/src/installer/corehost/cli/coreclr_delegates.h#L22&quot;&gt;hosting API support&lt;/a&gt; for &lt;a href=&quot;https://github.com/dotnet/runtime/blob/master/src/libraries/System.Private.CoreLib/src/System/Runtime/InteropServices/UnmanagedCallersOnlyAttribute.cs&quot;&gt;UnmanagedCallersOnlyAttribute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This feature is a building-block for creating higher level experiences. &lt;a href=&quot;https://github.com/AaronRobinsonMSFT&quot;&gt;Aaron Robinson&lt;/a&gt;, on our team, has been working on a &lt;a href=&quot;https://github.com/AaronRobinsonMSFT/DNNE&quot;&gt;.NET Native Exports&lt;/a&gt; project that provides a more complete experience for publishing .NET components as native libraries. We’re looking for feedback on this capability to help decide if the approach should be included in the product.&lt;/p&gt;
&lt;p&gt;The .NET Native exports project enables you to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Expose custom native exports.&lt;/li&gt;
&lt;li&gt;Doesn’t require a higher-level interop technology like COM.&lt;/li&gt;
&lt;li&gt;Works cross-platform.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are existing projects that enable similar scenarios, such as:&lt;/p&gt;
&lt;p&gt;Over the years, we’ve seen a variety of hosting models for .NET in native applications. &lt;a href=&quot;https://github.com/rseanhall&quot;&gt;@rseanhall&lt;/a&gt; proposed and implemented &lt;a href=&quot;https://github.com/dotnet/runtime/issues/35465&quot;&gt;a novel new model for doing that&lt;/a&gt;, which takes advantage of all the built-in application functionality offered by the .NET application hosting layer (specifically loading dependencies), while enabling a custom entrypoint to be called from native code. That’s perfect for a lot of scenarios, and that one can imagine becoming popular with developers that host .NET components from native applications. That didn’t exist before. Thanks for the contribution, &lt;a href=&quot;https://github.com/rseanhall&quot;&gt;@rseanhall&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Two primary PRs:&lt;/p&gt;
&lt;h3 id=&quot;event-pipe&quot;&gt;Event pipe&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/#tracing&quot;&gt;Event pipe&lt;/a&gt; is a new subsystem and API that we added in &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/&quot;&gt;.NET Core 2.2&lt;/a&gt; to make it possible to perform &lt;a href=&quot;https://github.com/dotnet/runtime/blob/master/docs/project/linux-performance-tracing.md&quot;&gt;performance and other diagnostic investigations&lt;/a&gt; on any operating system. In .NET 5.0, the event pipe has been extended to enable profilers to write event pipe events. This scenario is critical for instrumenting profilers that previously relied on ETW (on Windows) to monitor application behavior and performance.&lt;/p&gt;
&lt;p&gt;Assembly load information is now available via event pipe. This improvement is the start of making similar diagnostics functionality available as is part of .NET Framework, such as the &lt;a href=&quot;https://docs.microsoft.com/dotnet/framework/tools/fuslogvw-exe-assembly-binding-log-viewer&quot;&gt;Fusion Log Viewer&lt;/a&gt;. You can now use &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/diagnostics/dotnet-trace&quot;&gt;dotnet-trace&lt;/a&gt; to collect this information, using the following command:&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
dotnet-trace collect --providers Microsoft-Windows-DotNETRuntime:4:4 -- ./MyApp –my-arg 1
&lt;/pre&gt;
&lt;p&gt;The workflow is described in the &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/diagnostics/dotnet-trace&quot;&gt;dotnet-trace docs&lt;/a&gt;. You can see assembly loading information for a simple test app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/trace-assemblies-loads.png&quot; alt=&quot;Trace assemblies -- loads&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;microsoft-extensions-logging&quot;&gt;&lt;code&gt;Microsoft.Extensions.Logging&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;We’ve made improvements to the console log provider in the &lt;code&gt;Microsoft.Extensions.Logging&lt;/code&gt; library. You can now implement a &lt;a href=&quot;https://github.com/dotnet/runtime/issues/34742&quot;&gt;custom &lt;code&gt;ConsoleFormatter&lt;/code&gt;&lt;/a&gt; to exercise complete control over formatting and colorization of the console output. The formatter APIs allow for rich formatting by implementing a subset of the &lt;code&gt;VT-100&lt;/code&gt; (supported by most modern terminals) escape sequences. The console logger can parse out escape sequences on unsupported terminals allowing you to author a single formatter for all terminals.&lt;/p&gt;
&lt;p&gt;In addition to support for custom formatters, we’ve also added a built-in JSON formatter that emits structured JSON logs to the console.&lt;/p&gt;
&lt;h3 id=&quot;dump-debugging&quot;&gt;Dump debugging&lt;/h3&gt;
&lt;p&gt;Debugging managed code requires knowledge of managed objects and constructs. The Data Access Component (DAC) is a subset of the runtime execution engine that has knowledge of these constructs and can access these managed objects without a runtime. .NET Core process dumps collected on Linux can now be analyzed on Windows using WinDBG or &lt;code&gt;dotnet dump analyze&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We’ve also added support for capturing ELF dumps from .NET processes running on macOS. Since ELF is not the native executable (native debuggers like &lt;code&gt;lldb&lt;/code&gt; will not work with these dumps) file format on macOS, we have made this an opt-in feature. To enable support for dump collection on macOS, set the environment variable &lt;code&gt;COMPlus_DbgEnableElfDumpOnMacOS=1&lt;/code&gt;. The resulting dumps can be analyzed using &lt;code&gt;dotnet dump analyze&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;printing-environment-information&quot;&gt;Printing environment information&lt;/h3&gt;
&lt;p&gt;As .NET has extended support for new operating systems and chip architectures, people sometimes want a way to print environment information. We created a simple .NET tool that does this, called &lt;a href=&quot;https://www.nuget.org/packages/dotnet-runtimeinfo/&quot;&gt;dotnet-runtimeinfo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can install and run the tool with the following commands.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;dotnet tool install -f dotnet-runtimeinfo
dotnet-runtimeinfo
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The tool produces output in the following form for your environment.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;
**.NET information
Version: 5.0.0
FrameworkDescription: .NET 5.0.0
Libraries version: 5.0.0
Libraries hash: cf258a14b70ad9069470a108f13765e0e5988f51

**Environment information
OSDescription: Linux 5.8.6-1-MANJARO-ARM #1 SMP Thu Sep 3 22:01:08 CEST 2020
OSVersion: Unix 5.8.6.1
OSArchitecture: Arm64
ProcessorCount: 6

**CGroup info**
cfs_quota_us: -1
memory.limit_in_bytes: 9223372036854771712
memory.usage_in_bytes: 2740666368&lt;code class=&quot;console&quot;&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;runtime-and-libraries&quot;&gt;Runtime and Libraries&lt;/h2&gt;
&lt;p&gt;There were many improvements across the runtime and libraries.&lt;/p&gt;
&lt;h3 id=&quot;code-quality-improvements-in-ryujit&quot;&gt;Code quality improvements in RyuJIT&lt;/h3&gt;
&lt;p&gt;There were a lot of improvements to the JIT this release, many of which I shared in previous .NET 5.0 preview posts. In this post, I’m elevating the changes that came from the community.&lt;/p&gt;
&lt;h2 id=&quot;garbage-collector&quot;&gt;Garbage Collector&lt;/h2&gt;
&lt;p&gt;The following improvements were made in the GC.&lt;/p&gt;
&lt;p&gt;The GC now exposes detailed information of the most recent collection, via the &lt;a href=&quot;https://github.com/dotnet/runtime/blob/6a8fd0bec119d4cb36ad40a5d2242ed7f781dd60/src/coreclr/src/System.Private.CoreLib/src/System/GC.cs#L59-L75&quot;&gt;GC.GetGCMemoryInfo&lt;/a&gt; method. The &lt;a href=&quot;https://github.com/dotnet/runtime/blob/6072e4d3a7a2a1493f514cdf4be75a3d56580e84/src/libraries/System.Private.CoreLib/src/System/GCMemoryInfo.cs#L97&quot;&gt;GCMemoryInfo&lt;/a&gt; struct provides information about machine memory, heap memory and the most recent collection, or most recent collection of the kind of GC you specify – ephemeral, full blocking or background GC.&lt;/p&gt;
&lt;p&gt;The most likely use cases for using this new API are for logging/monitoring or to indicate to a loader balancer that a machine should be taken out of rotation to request a full GC. It could also be used to avoid container hard-limits by reducing the size of caches.&lt;/p&gt;
&lt;p&gt;Another, small but impactful change, was made to &lt;a href=&quot;https://github.com/dotnet/runtime/pull/37894&quot;&gt;defer the expensive &lt;code&gt;reset memory&lt;/code&gt; operation to low-memory situations&lt;/a&gt;. We expect these changes in policy to lower the GC latency (and GC CPU usage in general).&lt;/p&gt;
&lt;h3 id=&quot;windows-arm64&quot;&gt;Windows Arm64&lt;/h3&gt;
&lt;p&gt;.NET apps can now run natively on Windows Arm64. This follows the support we added for Linux Arm64 (support for glibc and musl) with .NET Core 3.0. With .NET 5.0, you can develop and run apps on Windows Arm64 devices, such as &lt;a href=&quot;https://www.microsoft.com/en-us/p/surface-pro-x/8VDNRP2M6HHC&quot;&gt;Surface Pro X&lt;/a&gt;. You can already run .NET Core and .NET Framework apps on Windows Arm64, but via x86 emulation. It’s workable, but native Arm64 execution has much better performance.&lt;/p&gt;
&lt;p&gt;MSI installers for Arm64 were one of the final changes this release. You can see the .NET 5.0 SDK installer in the following image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2608468/95817629-d326c480-0cd6-11eb-991e-92ed0c84ad52.png&quot; alt=&quot;.NET 5.0 SDK Arm64 Installer&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The .NET 5.0 SDK does not currently contain the Windows Desktop components — Windows Forms and WPF — on Windows Arm64. This change was initially shared in the &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-8/#windows-Arm64&quot;&gt;.NET 5.0 Preview 8 post&lt;/a&gt;. We are hoping to add the Windows desktop pack for Windows Arm64 in a 5.0 servicing update. We don’t currently have a date to share. Until then, the SDK, console and ASP.NET Core applications are supported on Windows Arm64, but not Windows Desktop components.&lt;/p&gt;
&lt;h3 id=&quot;arm64-performance&quot;&gt;Arm64 Performance&lt;/h3&gt;
&lt;p&gt;We’ve been investing significantly in improving Arm64 performance, for over a year. We’re committed to making Arm64 a high-performance platform with .NET. These improvements apply equally to Windows and Linux. Platform portability and consistency have always been compelling characteristics of .NET. This includes offering great performance wherever you use .NET. With .NET Core 3.x, Arm64 has functionality parity with x64 but is missing some key performance features and investments. We’ve resolved that in .NET 5.0, as described in &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/arm64-performance-in-net-5/&quot;&gt;Arm64 Performance in .NET 5.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The improvements:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Tune JIT optimizations for Arm64 (&lt;a href=&quot;https://github.com/dotnet/runtime/pull/35675&quot;&gt;example&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enable and take advantage of Arm64 hardware intrinsics (&lt;a href=&quot;https://github.com/dotnet/runtime/pull/34486&quot;&gt;example&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Adjust performance-critical algorithms in libraries for Arm64 (&lt;a href=&quot;https://github.com/dotnet/runtime/issues/34198&quot;&gt;example&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/dotnet/runtime/issues/35853&quot;&gt;Improving Arm64 Performance in .NET 5.0&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/hardware-intrinsics-in-net-core/&quot;&gt;Hardware intrinsics&lt;/a&gt; are a &lt;a href=&quot;https://github.com/dotnet/designs/blob/master/accepted/2018/platform-intrinsics.md&quot;&gt;low-level performance feature&lt;/a&gt; we added in .NET Core 3.0. At the time, we added support for x86-64 instructions and chips. As part of .NET 5.0, we are extending the feature to support Arm64. Just creating the intrinsics doesn’t help performance. They need to be used in performance-critical code. We’ve taken advantage of &lt;a href=&quot;https://github.com/dotnet/runtime/issues/33308&quot;&gt;Arm64 intrinsics extensively in .NET libraries&lt;/a&gt; in .NET 5.0. You can also do this in your own code, although you need to be familiar with CPU instructions to do so.&lt;/p&gt;
&lt;p&gt;I’ll explain how hardware intrinsics work with an analogy. For the most part, developers rely on types and APIs built into .NET, like &lt;code&gt;string.Split&lt;/code&gt; or &lt;code&gt;HttpClient&lt;/code&gt;. Those APIs often take advantage of native operating system APIs, via the &lt;a href=&quot;https://docs.microsoft.com/dotnet/standard/native-interop/pinvoke&quot;&gt;P/Invoke&lt;/a&gt; feature. P/Invoke enables high-performance native interop and is used extensively in the .NET libraries for that purpose. You can use this same feature yourself to call native APIs. Hardware intrinsics are similar, except instead of calling operating system APIs, they enable you to directly use CPU instructions in your code. It’s roughly equivalent to a .NET version of &lt;a href=&quot;https://en.wikipedia.org/wiki/Intrinsic_function&quot;&gt;C++ intrinsics&lt;/a&gt;. Hardware intrinsics are best thought of as a CPU hardware-acceleration feature. They provide very tangible benefits and are now a key part of the performance substrate of the .NET libraries, and responsible for many of the benefits you can read about in the &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5/#intrinsics&quot;&gt;.NET 5.0 performance&lt;/a&gt; post. In terms of comparison to C++, when .NET intrinsics are AOT-compiled into Ready-To-Run files, the intrinsics have no runtime performance penalty.&lt;/p&gt;
&lt;p&gt;Note: The Visual C++ compiler has an analogous &lt;a href=&quot;https://docs.microsoft.com/cpp/intrinsics/compiler-intrinsics&quot;&gt;intrinsics feature&lt;/a&gt;. You can directly compare C++ to .NET hardware intrinsics, as you can see if you search for &lt;code&gt;_mm_i32gather_epi32&lt;/code&gt; at &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.runtime.intrinsics.x86.avx2&quot;&gt;System.Runtime.Intrinsics.X86.Avx2&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/cpp/intrinsics/x64-amd64-intrinsics-list&quot;&gt;x64 (amd64) intrinsics list&lt;/a&gt;, and &lt;a href=&quot;https://software.intel.com/sites/landingpage/IntrinsicsGuide/#text=_mm_i32gather_epi32&quot;&gt;Intel Intrinsics guide&lt;/a&gt;. You will see a lot of similarity.&lt;/p&gt;
&lt;p&gt;We’re making our first big investments in Arm64 performance in 5.0, and we’ll continue this effort in subsequent releases. We work directly with engineers from &lt;a href=&quot;https://en.wikipedia.org/wiki/Arm_Holdings&quot;&gt;Arm Holdings&lt;/a&gt; to prioritize product improvements and to design algorithms that best take advantage of the &lt;a href=&quot;https://en.wikipedia.org/wiki/ARM_architecture#ARMv8-A&quot;&gt;Armv8 ISA&lt;/a&gt;. Some of these improvements will accrue value to Arm32, however, we are not applying unique effort to Arm32. If you use a Raspberry Pi, you’ll enjoy these improvements if you install the new Arm64 version of Raspberry Pi OS.&lt;/p&gt;
&lt;p&gt;We expect that Apple will announce new Apple Silicon-based Mac computers any day now. We already have early builds of &lt;a href=&quot;https://github.com/dotnet/runtime/issues/43313&quot;&gt;.NET 6.0 for Apple Silicon&lt;/a&gt; and have been working with Apple engineers to help optimize .NET for that platform. We’ve also had some &lt;a href=&quot;https://github.com/dotnet/runtime/pull/43343&quot;&gt;early community engagement on Apple Silicon&lt;/a&gt; (Credit &lt;a href=&quot;https://github.com/snickler&quot;&gt;@snickler&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&quot;p95-latency&quot;&gt;P95+ Latency&lt;/h3&gt;
&lt;p&gt;We see an increasing number of large internet-facing sites and services being hosted on .NET. While there is a lot of legitimate focus on the &lt;a href=&quot;https://twitter.com/ben_a_adams/status/1260792649625280513&quot;&gt;requests per second (RPS) metric&lt;/a&gt;, we find that no big site owners ask us about that or require millions of RPS. We hear a lot about latency, however, specifically about improving &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/internet-analyzer/internet-analyzer-scorecard&quot;&gt;P95 or P99 latency&lt;/a&gt;. Often, the number of machines or cores that are provisioned for (and biggest cost driver of) a site are chosen based on achieving a specific P95 metric, as opposed to say P50. We think of latency as being the true “money metric”.&lt;/p&gt;
&lt;p&gt;Our friends at Stack Overflow do a great job of sharing data on their service. One of their engineers, Nick Craver, recently shared &lt;a href=&quot;https://twitter.com/Nick_Craver/status/1205289893674573829&quot;&gt;improvements they saw to latency&lt;/a&gt;, as a &lt;a href=&quot;https://twitter.com/Nick_Craver/status/1245027023371853825&quot;&gt;result of moving to .NET Core&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;The median page render time for questions dropped from about 21 ms (we were up a bit lately due to GC) to ~15ms.&lt;/p&gt;
&lt;p&gt;The 95th percentile dropped from ~40ms to ~30ms (same measurement). 99th dropped from ~60ms to ~45ms.&lt;/p&gt;
&lt;p&gt;Not too shabby, given we haven’t optimized anything at all yet. &lt;a href=&quot;https://t.co/MMHjI9wkuL&quot;&gt;pic.twitter.com/MMHjI9wkuL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Nick Craver (@Nick_Craver) &lt;a href=&quot;https://twitter.com/Nick_Craver/status/1245027999034023936?ref_src=twsrc%5Etfw&quot;&gt;March 31, 2020&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pinned objects have been a long-term challenge for GC performance, specifically because they accelerate (or cause) memory fragmentation. We’ve added a &lt;a href=&quot;https://github.com/dotnet/runtime/pull/32283&quot;&gt;new GC heap for pinned objects&lt;/a&gt;. The &lt;a href=&quot;https://github.com/dotnet/runtime/blob/master/docs/design/features/PinnedHeap.md&quot;&gt;pinned object heap&lt;/a&gt; is based on the assumption that there are very few pinned objects in a process but that their presence causes disproportionate performance challenges. It makes sense to move pinned objects — particularly those created by .NET libraries as an implementation detail — to a unique area, leaving the generational GC heaps with few or no pinned objects, and with substantially higher performance as a result.&lt;/p&gt;
&lt;p&gt;More recently, we’ve been attacking long-standing challenges in the GC. &lt;a href=&quot;https://github.com/dotnet/runtime/pull/32795&quot;&gt;dotnet/runtime #2795&lt;/a&gt; applies a new approach to GC statics scanning that avoids lock contention when it is determining liveness of GC heap objects. &lt;a href=&quot;https://github.com/dotnet/coreclr/pull/25986&quot;&gt;dotnet/runtime #25986&lt;/a&gt; uses a new algorithm for balancing GC work across cores during the mark phase of garbage collection, which should increase the throughput of garbage collection with large heaps, which in turn reduces latency.&lt;/p&gt;
&lt;h3 id=&quot;improving-tiered-compilation-performance&quot;&gt;Improving tiered compilation performance&lt;/h3&gt;
&lt;p&gt;We’ve been working on improving &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/tiered-compilation-preview-in-net-core-2-1/&quot;&gt;tiered compilation&lt;/a&gt; for multiple releases. We continue to see it as a critical performance feature, for both startup and steady-state performance. We’ve made two big improvements to tiered compilation this release.&lt;/p&gt;
&lt;p&gt;The primary mechanism underlying tiered compilation is call counting. Once a method is called n times, the runtime asks the JIT to recompile the method at higher quality. From our earliest performance analyses, we knew that the call-counting mechanism was too slow, but didn’t see a straightforward way to resolve that. As part of .NET 5.0, we’ve &lt;a href=&quot;https://github.com/dotnet/runtime/pull/32250&quot;&gt;improved the call counting mechanism&lt;/a&gt; used by tiered JIT compilation to smooth out performance during startup. In past releases, we’ve seen reports of unpredictable performance during the first 10-15s of process lifetime (mostly for web servers). That should now be resolved.&lt;/p&gt;
&lt;p&gt;Another performance challenge we found was using tiered compilation for methods with loops. The fundamental problem is that you can have a cold method (only called once or a few times; $lt; n) with a loop that iterates many times. We call this pathological scenario “cold method; hot loop”. It is easy to imagine this happening with the &lt;code&gt;Main&lt;/code&gt; method of an application. As a result, we disabled tiered compilation for methods with loops by default. Instead, we enabled applications to opt into using tiered compilation with loops. PowerShell is an application that chose to do this, after seeing high single-digit performance improvements in some scenarios.&lt;/p&gt;
&lt;p&gt;To address methods with loops better, we implemented &lt;a href=&quot;https://github.com/dotnet/runtime/pull/32969&quot;&gt;on-stack replacement (OSR)&lt;/a&gt;. This is similar to a feature that the Java Virtual Machines has, of the same name. &lt;a href=&quot;https://github.com/dotnet/runtime/blob/master/docs/design/features/OnStackReplacement.md&quot;&gt;OSR&lt;/a&gt; enables code executed by a currently running method to be re-compiled in the middle of method execution, while those methods are active “on-stack”. This feature is currently experimental and opt-in, and on x64 only.&lt;/p&gt;
&lt;p&gt;To use OSR, multiple features must be enabled. The &lt;a href=&quot;https://github.com/PowerShell/PowerShell/blob/6a37eb9313077f726c4bca7902466a1f5a6a3f44/src/powershell-win-core/powershell-win-core.csproj#L10&quot;&gt;PowerShell project file&lt;/a&gt; is a good starting point. You will notice that tiered compilation and all quick-jit features are enabled. In addition, you need to set the &lt;code&gt;COMPlus_TC_OnStackReplacement&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, you can set the following two environment variables, assuming all other settings have their default values:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;COMPlus_TC_QuickJitForLoops=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMPlus_TC_OnStackReplacement=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We do not intend to enable OSR by default in .NET 5.0 and have not yet decided if we will support it in production.&lt;/p&gt;
&lt;h3 id=&quot;support-for-icu-on-windows&quot;&gt;Support for ICU on Windows&lt;/h3&gt;
&lt;p&gt;We use the &lt;a href=&quot;http://site.icu-project.org/&quot;&gt;ICU&lt;/a&gt; library for Unicode and globalization support, previously only on Linux and macOS. We are now using &lt;a href=&quot;https://docs.microsoft.com/windows/win32/intl/international-components-for-unicode--icu-&quot;&gt;this same library on Windows 10&lt;/a&gt;. &lt;a href=&quot;https://github.com/dotnet/runtime/pull/34645&quot;&gt;This change&lt;/a&gt; makes the behavior of globalization APIs such as culture-specific string comparison consistent between Windows 10, macOS, and Linux. We also use ICU with Blazor WebAssembly.&lt;/p&gt;
&lt;h2 id=&quot;expanding-system-directoryservices-protocols-to-linux-and-macos&quot;&gt;Expanding System.DirectoryServices.Protocols to Linux and macOS&lt;/h2&gt;
&lt;p&gt;We’ve been adding cross-platform support for &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.directoryservices.protocols&quot;&gt;System.DirectoryServices.Protocols&lt;/a&gt;. This includes &lt;a href=&quot;https://github.com/dotnet/runtime/pull/35380&quot;&gt;support for Linux&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/runtime/pull/36669&quot;&gt;support for macOS&lt;/a&gt;. Windows support was pre-existing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.directoryservices.protocols&quot;&gt;System.DirectoryServices.Protocols&lt;/a&gt; is a lower-level API than &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.directoryservices&quot;&gt;System.DirectoryServices&lt;/a&gt;, and enables (or can be used to enable) more scenarios. System.DirectoryServices includes Windows-only concepts/implementations, so it was not an obvious choice to make cross-platform. Both API-sets enable controlling and interacting with a directory service server, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol&quot;&gt;LDAP&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Active_Directory&quot;&gt;Active Directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;system-text-json&quot;&gt;System.Text.Json&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;System.Text.Json&lt;/code&gt; has been &lt;a href=&quot;https://github.com/dotnet/runtime/issues/41313&quot;&gt;significantly improved in .NET 5.0&lt;/a&gt; to improve performance, reliability, and to make it easier for people to adopt that are familiar with &lt;a href=&quot;https://www.nuget.org/packages/Newtonsoft.Json/&quot;&gt;Newtonsoft.Json&lt;/a&gt;. It also includes &lt;a href=&quot;https://github.com/dotnet/runtime/issues/38539&quot;&gt;support for deserializing JSON objects to records&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are looking at using &lt;code&gt;System.Text.Json&lt;/code&gt; as an alternative to &lt;code&gt;Newtonsoft.Json&lt;/code&gt;, you should check out the &lt;a href=&quot;https://docs.microsoft.com/dotnet/standard/serialization/system-text-json-migrate-from-newtonsoft-how-to&quot;&gt;migration guide&lt;/a&gt;. The guide clarifies the relationship between these two APIs. &lt;code&gt;System.Text.Json&lt;/code&gt; is intended to cover many of the same scenarios as &lt;code&gt;Newtonsoft.Json&lt;/code&gt;, but it’s not intended to be a drop-in replacement for or achieve feature parity with the popular JSON library. We try to maintain a balance between performance and usability, and bias to performance in our design choices.&lt;/p&gt;
&lt;h3 id=&quot;httpclient-extension-methods&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt; extension methods&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dotnet/runtime/issues/32937&quot;&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; extension methods&lt;/a&gt; are now exposed on &lt;a href=&quot;https://docs.microsoft.com/dotnet/api/system.net.http.httpclient?view=net-5.0&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; and greatly simplify using these two APIs together. These extension methods remove complexity and take care of a variety of scenarios for you, including handling the content stream and validating the content media type. Steve Gordon does a great job of explaining the benefits in &lt;a href=&quot;https://www.stevejgordon.co.uk/sending-and-receiving-json-using-httpclient-with-system-net-http-json&quot;&gt;Sending and receiving JSON using HttpClient with System.Net.Http.Json&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following example deserializes weather forecast JSON data into a &lt;code&gt;Forecast&lt;/code&gt; record, using the new&lt;/p&gt;

&lt;p&gt;This code is compact! It is relying on top-level programs and records from C# 9 and the new &lt;code&gt;GetFromJsonAsync&amp;lt;T&amp;gt;()&lt;/code&gt; extension method. The use of &lt;code&gt;foreach&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; in such close proximity might be make you wonder if we’re going to &lt;a href=&quot;https://github.com/dotnet/runtime/issues/1570&quot;&gt;add support for streaming JSON objects&lt;/a&gt;. I really hope so.&lt;/p&gt;
&lt;p&gt;You can try this on your own machine. The following .NET SDK commands will create a weather forecast service using the WebAPI template. It will expose the service at the following URL by default: &lt;code&gt;https://localhost:5001/WeatherForecast&lt;/code&gt;. This is the same URL used in the sample.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;rich@thundera ~ % dotnet new webapi -o webapi
rich@thundera ~ % cd webapi 
rich@thundera webapi % dotnet run
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Make sure you’ve run &lt;code&gt;dotnet dev-certs https --trust&lt;/code&gt; first or the handshake between client and server won’t work. If you’re having trouble, see &lt;a href=&quot;https://docs.microsoft.com/aspnet/core/security/enforcing-ssl?view=aspnetcore-5.0&amp;amp;tabs=visual-studio#trust-the-aspnet-core-https-development-certificate-on-windows-and-macos&quot;&gt;Trust the ASP.NET Core HTTPS development certificate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can then run the previous sample.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;rich@thundera ~ % git clone https://gist.github.com/3b41d7496f2d8533b2d88896bd31e764.git weather-forecast
rich@thundera ~ % cd weather-forecast
rich@thundera weather-forecast % dotnet run
9/9/2020 12:09:19 PM; 24C; Chilly
9/10/2020 12:09:19 PM; 54C; Mild
9/11/2020 12:09:19 PM; -2C; Hot
9/12/2020 12:09:19 PM; 24C; Cool
9/13/2020 12:09:19 PM; 45C; Balmy
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;improved-support-for-immutable-types&quot;&gt;Improved support for immutable types&lt;/h3&gt;
&lt;p&gt;There are multiple patterns for defining immutable types. Records are just the newest one. &lt;code&gt;JsonSerializer&lt;/code&gt; now has support for immutable types.&lt;/p&gt;
&lt;p&gt;In this example, you’ll see the serialization with an immutable struct.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;csharp&quot;&gt;using System;
using System.Text.Json;
using System.Text.Json.Serialization;

var json = &quot;{&quot;date&quot;:&quot;2020-09-06T11:31:01.923395-07:00&quot;,&quot;temperatureC&quot;:-1,&quot;temperatureF&quot;:31,&quot;summary&quot;:&quot;Scorching&quot;} &quot;;           
var options = new JsonSerializerOptions()
{
    PropertyNameCaseInsensitive = true,
    IncludeFields = true,
    PropertyNamingPolicy = JsonNamingPolicy.CamelCase
};
var forecast = JsonSerializer.Deserialize&amp;lt;Forecast&amp;gt;(json, options);

Console.WriteLine(forecast.Date);
Console.WriteLine(forecast.TemperatureC);
Console.WriteLine(forecast.TemperatureF);
Console.WriteLine(forecast.Summary);

var roundTrippedJson = JsonSerializer.Serialize&amp;lt;Forecast&amp;gt;(forecast, options);

Console.WriteLine(roundTrippedJson);

public struct Forecast{
    public DateTime Date {get;}
    public int TemperatureC {get;}
    public int TemperatureF {get;}
    public string Summary {get;}
    [JsonConstructor]
    public Forecast(DateTime date, int temperatureC, int temperatureF, string summary) =&amp;gt; (Date, TemperatureC, TemperatureF, Summary) = (date, temperatureC, temperatureF, summary);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note: The &lt;code&gt;JsonConstructor&lt;/code&gt; attribute is required to specify the constructor to use with structs. With classes, if there is only a single constructor, then the attribute is not required. Same with records.&lt;/p&gt;
&lt;p&gt;It produces the following output:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;rich@thundera jsonserializerimmutabletypes % dotnet run
9/6/2020 11:31:01 AM
-1
31
Scorching
{&quot;date&quot;:&quot;2020-09-06T11:31:01.923395-07:00&quot;,&quot;temperatureC&quot;:-1,&quot;temperatureF&quot;:31,&quot;summary&quot;:&quot;Scorching&quot;}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;support-for-records&quot;&gt;Support for records&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/issues/38539&quot;&gt;support for records&lt;/a&gt; is almost the same as what I just showed you for immutable types. The difference I want to show here is deserializing a JSON object to a record that exposes a parameterized constructor and an optional init property.&lt;/p&gt;
&lt;p&gt;Here’s the program, including the record definition:&lt;/p&gt;

&lt;p&gt;It produces the following output:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;rich@thundera jsonserializerrecords % dotnet run
{&quot;Date&quot;:&quot;2020-09-12T18:24:47.053821-07:00&quot;,&quot;TemperatureC&quot;:40,&quot;Summary&quot;:&quot;Hot!&quot;}
Forecast { Date = 9/12/2020 6:24:47 PM, TemperatureC = 40, Summary = Hot! }
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;improved-dictionarykv-support&quot;&gt;Improved &lt;code&gt;Dictionary&amp;lt;K,V&amp;gt;&lt;/code&gt; support&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; now &lt;a href=&quot;https://github.com/dotnet/runtime/issues/30618&quot;&gt;supports dictionaries with non-string keys&lt;/a&gt;. You can see what this looks like in the following sample. With .NET Core 3.0, this code compiles but throws a &lt;code&gt;NotSupportedException&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It produces the following output.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;rich@thundera jsondictionarykeys % dotnet run
{&quot;0&quot;:&quot;zero&quot;,&quot;1&quot;:&quot;one&quot;,&quot;2&quot;:&quot;two&quot;,&quot;3&quot;:&quot;three&quot;,&quot;5&quot;:&quot;five&quot;,&quot;8&quot;:&quot;eight&quot;,&quot;13&quot;:&quot;thirteen&quot;,&quot;21&quot;:&quot;twenty one&quot;,&quot;34&quot;:&quot;thirty four&quot;,&quot;55&quot;:&quot;fifty five&quot;}
fifty five
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;support-for-fields&quot;&gt;Support for fields&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; now &lt;a href=&quot;https://github.com/dotnet/runtime/issues/876&quot;&gt;supports fields&lt;/a&gt;. This change was contributed by &lt;a href=&quot;https://github.com/YohDeadfall&quot;&gt;@YohDeadfall&lt;/a&gt;. Thanks!&lt;/p&gt;
&lt;p&gt;You can see what this looks like in the following sample. With .NET Core 3.0, &lt;code&gt;JsonSerializer&lt;/code&gt; fails to serialize or deserialize with types that use fields. This is a problem for existing types that have fields and cannot be changed. With this change, that’s no longer an issue.&lt;/p&gt;

&lt;p&gt;Produces the following output:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;rich@thundera jsonserializerfields % dotnet run
9/6/2020 11:31:01 AM
-1
31
Scorching
{&quot;date&quot;:&quot;2020-09-06T11:31:01.923395-07:00&quot;,&quot;temperatureC&quot;:-1,&quot;temperatureF&quot;:31,&quot;summary&quot;:&quot;Scorching&quot;}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;preserving-references-in-json-object-graphs&quot;&gt;Preserving references in JSON object graphs&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; has added &lt;a href=&quot;https://github.com/dotnet/runtime/issues/30820&quot;&gt;support for preserving (circular) references&lt;/a&gt; within JSON object graphs. It does this by storing IDs that can be reconstituted when a JSON string is deserialized back to objects.&lt;/p&gt;

&lt;h3 id=&quot;performance&quot;&gt;Performance&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; performance is significantly improved in .NET 5.0. Stephen Toub covered some &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5/#json&quot;&gt;&lt;code&gt;JsonSerializer&lt;/code&gt; improvements&lt;/a&gt; in his &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-5&quot;&gt;Performance Improvements in .NET 5&lt;/a&gt; post. I also covered &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-5-0-rc-1/#performance&quot;&gt;Json Performance&lt;/a&gt; in more detailed in the &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-5-0-rc-1/&quot;&gt;.NET 5.0 RC1&lt;/a&gt; post.&lt;/p&gt;
&lt;h2 id=&quot;application-deployment&quot;&gt;Application deployment&lt;/h2&gt;
&lt;p&gt;After writing or updating an application, you need to &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/deploying/&quot;&gt;deploy it&lt;/a&gt; for your users to benefit. This might be to a web server, a cloud service, or client machine, and might be the result of a CI/CD flow using a service like &lt;a href=&quot;https://docs.microsoft.com/azure/devops/pipelines/ecosystems/dotnet-core&quot;&gt;Azure DevOps&lt;/a&gt; or &lt;a href=&quot;https://github.com/actions/setup-dotnet&quot;&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We strive to provide first-class deployment capabilities that naturally align with the application types. For .NET 5.0, we focused on improving single file applications, reducing container size for docker multi-stage builds, and providing better support for deploying ClickOnce applications with .NET Core.&lt;/p&gt;
&lt;h3 id=&quot;containers&quot;&gt;Containers&lt;/h3&gt;
&lt;p&gt;We consider containers to be the most important cloud trend and have been investing significantly in this modality. We’re investing in containers in multiple ways, at multiple levels of the .NET software stack. The first is our investment in fundamentals, which is increasingly influenced by the container scenario and by developers who deploy containerized apps.&lt;/p&gt;
&lt;p&gt;We’re making it easier to work with container orchestrators. We’ve added &lt;a href=&quot;https://github.com/dotnet/runtime/issues/31372&quot;&gt;OpenTelemetry support&lt;/a&gt; so that you can &lt;a href=&quot;https://opentelemetry.io/&quot;&gt;capture distributed traces and metrics from your application&lt;/a&gt;. &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/introducing-dotnet-monitor/&quot;&gt;dotnet-monitor&lt;/a&gt; is a new tool that is intended as the primary way to access diagnostic information from a .NET process. In particular, we have started building a &lt;a href=&quot;https://hub.docker.com/_/microsoft-dotnet-nightly-monitor/&quot;&gt;container variant of dotnet-monitor&lt;/a&gt; that you can use as an &lt;a href=&quot;https://medium.com/bb-tutorials-and-thoughts/kubernetes-learn-sidecar-container-pattern-6d8c21f873d&quot;&gt;application sidecar&lt;/a&gt;. Last, we are building &lt;a href=&quot;https://github.com/dotnet/tye&quot;&gt;dotnet/tye&lt;/a&gt; as way to improve microservices developer productivity, both for development and deploying to a Kubernetes environment.&lt;/p&gt;
&lt;p&gt;The .NET runtime now has &lt;a href=&quot;https://github.com/dotnet/runtime/pull/34334&quot;&gt;support for cgroup v2&lt;/a&gt;, which we expect will become an important container-related API beyond 2020. Docker currently uses cgroup v1 (which is already supported by .NET). In comparison, cgroup v2 is simpler, more efficient, and more secure than cgroup v1. You can learn more about &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/using-net-and-docker-together-dockercon-2019-update/&quot;&gt;cgroup and Docker resource limits&lt;/a&gt; from our 2019 Docker update. Linux distros and containers runtimes are in the &lt;a href=&quot;https://medium.com/nttlabs/cgroup-v2-596d035be4d7&quot;&gt;process of adding support for cgroup v2&lt;/a&gt;. .NET 5.0 will work correctly in cgroup v2 environments once they become more common. Credit to &lt;a href=&quot;https://github.com/omajid&quot;&gt;Omair Majid&lt;/a&gt;, who supports .NET at Red Hat.&lt;/p&gt;
&lt;p&gt;We’re now &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/issues/1852#issuecomment-710649760&quot;&gt;publishing Windows Server Core images&lt;/a&gt;, in addition to Nano Server. We added Server Core because we heard feedback from customers who wanted a .NET image that was fully compatible with Windows Server. If you need that, then this new image is for you. It’s supported for the combination of: Windows Server 2019 Long-Term Servicing Channel (LTSC), .NET 5.0, and x64. We’ve made other changes that &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/we-made-windows-server-core-container-images-40-smaller/&quot;&gt;reduce the size of Windows Server Core images&lt;/a&gt;. Those improvements make a big difference but were made after Windows Server 2019 was released. They will, however, benefit the next Windows Server LTSC release.&lt;/p&gt;
&lt;p&gt;As part of the move to “.NET” as the product name, we’re now publishing .NET Core 2.1, 3.1 and .NET 5.0 images to the &lt;a href=&quot;https://hub.docker.com/_/microsoft-dotnet&quot;&gt;&lt;code&gt;mcr.microsoft.com/dotnet&lt;/code&gt;&lt;/a&gt; family of repos, instead of &lt;a href=&quot;https://hub.docker.com/_/microsoft-dotnet-core&quot;&gt;&lt;code&gt;mcr.microsoft.com/dotnet/core&lt;/code&gt;&lt;/a&gt;. We will continue dual publishing .NET Core 2.1 and 3.1 to the previous location while those versions are supported. .NET 5.0 images will only be published to the new locations. Please update your &lt;code&gt;FROM&lt;/code&gt; statements and scripts accordingly.&lt;/p&gt;
&lt;p&gt;As part of .NET 5.0, we &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/pull/1848&quot;&gt;re-based the SDK image on top of the ASP.NET image&lt;/a&gt; instead of &lt;a href=&quot;https://hub.docker.com/_/buildpack-deps&quot;&gt;buildpack-deps&lt;/a&gt; to dramatically reduces the size of the aggregate images you pull in multi-stage build scenarios.&lt;/p&gt;
&lt;p&gt;This change has the following benefit for multi-stage builds, with a sample &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Multi-stage build costs with &lt;strong&gt;Ubuntu 20.04 Focal&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Pull Image&lt;/th&gt;
&lt;th&gt;Before&lt;/th&gt;
&lt;th&gt;After&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;sdk:5.0-focal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;268 MB&lt;/td&gt;
&lt;td&gt;232 MB&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;aspnet:5.0-focal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;64 MB&lt;/td&gt;
&lt;td&gt;10 KB (manifest only)&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;em&gt;Net download savings&lt;/em&gt;: 100 MB (-30%)&lt;/p&gt;
&lt;p&gt;Multi-stage build costs with &lt;strong&gt;Debian 10 Buster&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Pull Image&lt;/th&gt;
&lt;th&gt;Before&lt;/th&gt;
&lt;th&gt;After&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;sdk:5.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;280 MB&lt;/td&gt;
&lt;td&gt;218 MB&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;aspnet:5.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;84 MB&lt;/td&gt;
&lt;td&gt;4 KB (manifest only)&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;em&gt;Net download savings&lt;/em&gt;: 146 MB (-40%)&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/issues/1814#issuecomment-625294750&quot;&gt;dotnet/dotnet-docker #1814&lt;/a&gt; for more detailed information.&lt;/p&gt;
&lt;p&gt;This change helps multi-stage builds, where the &lt;code&gt;sdk&lt;/code&gt; and the &lt;code&gt;aspnet&lt;/code&gt; or &lt;code&gt;runtime&lt;/code&gt; image you are targeting are the same version (we expect that this is the common case). With this change, the &lt;code&gt;aspnet&lt;/code&gt; pull (for example), will be a no-op, because you will have pulled the &lt;code&gt;aspnet&lt;/code&gt; layers via the initial &lt;code&gt;sdk&lt;/code&gt; pull.&lt;/p&gt;
&lt;p&gt;We made similar changes for &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/pull/1832&quot;&gt;Alpine and Nano Server&lt;/a&gt;. There is no &lt;code&gt;buildpack-deps&lt;/code&gt; image for either Alpine or Nano Server. However, the &lt;code&gt;sdk&lt;/code&gt; images for Alpine and Nano Server were not previously built on top of the ASP.NET image. We fixed that. You will see significant size wins for Alpine and Nano Server as well with 5.0, for multi-stage builds.&lt;/p&gt;
&lt;h3 id=&quot;single-file-applications&quot;&gt;Single file applications&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dotnet/runtime/issues/36590&quot;&gt;Single file applications&lt;/a&gt; are published and deployed as a &lt;a href=&quot;https://github.com/dotnet/designs/blob/main/accepted/2020/single-file/design.md&quot;&gt;single file&lt;/a&gt;. The app and its dependencies are all included within that file. When the app is run, the dependencies are loaded directly from that file into memory (with no performance penalty).&lt;/p&gt;
&lt;p&gt;In .NET 5.0, single file apps are primarily focused on Linux (more on that later). They can be either framework-dependent or self-contained. Framework-dependent single file apps can be very small, by relying on a globally-installed .NET runtime. Self-contained single-file apps are larger (due to carrying the runtime), but do not require installation of the .NET runtime as an installation pre-step and will just work as a result. In general, framework-dependent is good for development and enterprise environments, while self-contained is often a better choice for ISVs.&lt;/p&gt;
&lt;p&gt;We produced a version of single-file apps with .NET Core 3.1. It packages binaries into a single file for deployment and then unpacks those files to a temporary directory to load and execute them. There may be some scenarios where this approach is better, but we expect that the solution we’ve built for 5.0 will be preferred and a welcome improvement.&lt;/p&gt;
&lt;p&gt;We had multiple hurdles to overcome to create a true single-file solution. Key tasks were creating a more sophisticated application bundler and teaching the runtime to load assemblies out of binary resources. We also ran into some hurdles that we could not clear.&lt;/p&gt;
&lt;p&gt;On all platforms, we have a component called “apphost”. This is the file that becomes your executable, for example &lt;code&gt;myapp.exe&lt;/code&gt; on Windows or &lt;code&gt;./myapp&lt;/code&gt; on Unix-based platforms. For single file apps we created a new apphost we call “superhost”. It has the same role as the regular apphost, but also includes a statically-linked copy of the runtime. The superhost is a fundamental design point of our single file approach. This model is the one we use on Linux with .NET 5.0. We were not able to implement this approach on Windows or macOS, due to various operating system constraints. We do not have a superhost on Windows or macOS. On those operating systems, the native runtime binaries (~3 of them) sit beside the single file app (resulting in “not single file”). We’ll revisit this situation in .NET 6.0, however, we expect the problems we ran into to remain challenging.&lt;/p&gt;
&lt;p&gt;You can use the following commands to produce single-file apps.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Framework-dependent single-file app:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;dotnet publish -r linux-x64 --self-contained false /p:PublishSingleFile=true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Self-contained single-file app:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;dotnet publish -r linux-x64 --self-contained true /p:PublishSingleFile=true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can also configure single file publishing with a project file.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;&amp;lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&amp;gt;

  &amp;lt;PropertyGroup&amp;gt;
    &amp;lt;OutputType&amp;gt;Exe&amp;lt;/OutputType&amp;gt;
    &amp;lt;TargetFramework&amp;gt;net5.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;!-- The OS and CPU type you are targeting --&amp;gt;
    &amp;lt;RuntimeIdentifier&amp;gt;linux-x64&amp;lt;/RuntimeIdentifier&amp;gt;
    &amp;lt;!-- Determine self-contained or framework-dependent --&amp;gt;
    &amp;lt;SelfContained&amp;gt;true&amp;lt;/SelfContained&amp;gt;
    &amp;lt;!-- Enable single file --&amp;gt;
    &amp;lt;PublishSingleFile&amp;gt;true&amp;lt;/PublishSingleFile&amp;gt;
  &amp;lt;/PropertyGroup&amp;gt;

&amp;lt;/Project&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can experiment with &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/app-trimming-in-net-5/&quot;&gt;assembly trimming&lt;/a&gt; to reduce the size of your application. It can break apps, by over-trimming, so it is recommended to test your app thoroughly after using this feature. Assembly trimming also removes ahead-of-time-compiled read-to-run native code (for the assemblies that are trimmed), which is there primarily for performance. You will want to test your application for performance after trimming. You can ready-to-run-compile your app after trimmng by using &lt;code&gt;PublishReadyToRun&lt;/code&gt; property (and setting to &lt;code&gt;true&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Apps are OS and architecture-specific. You need to publish for each configuration (Linux x64, Linux Arm64, Windows x64, …).&lt;/li&gt;
&lt;li&gt;Configuration files (like &lt;code&gt;*.runtimeconfig.json&lt;/code&gt;) are included in the single file. You can place an additional config file beside the single file, if needed (possibly for testing).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.pdb&lt;/code&gt; files are not included in the single file by default. You can enable PDB embedding with the &lt;code&gt;&amp;lt;DebugType&amp;gt;embed&amp;lt;/DebugType&amp;gt;&lt;/code&gt; property.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;IncludeNativeLibrariesForSelfExtract&lt;/code&gt; property can be used to &lt;a href=&quot;https://github.com/dotnet/designs/blob/main/accepted/2020/single-file/design.md#optional-settings&quot;&gt;embed native runtime binaries&lt;/a&gt;, on Windows and macOS, however, they have to be unpacked to temporary storage at runtime. This feature is not recommended for genereal use.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;clickonce&quot;&gt;ClickOnce&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/visualstudio/deployment/walkthrough-manually-deploying-a-clickonce-application&quot;&gt;ClickOnce&lt;/a&gt; has been a popular .NET deployment option for many years. It’s now supported for .NET Core 3.1 and .NET 5.0 Windows apps. We knew that many people would want to use ClickOnce for application deployment when we added Windows Forms and WPF support to .NET Core 3.0. In the past year, the .NET and Visual Studio teams worked together to enable ClickOnce publishing, both at the command line and in Visual Studio.&lt;/p&gt;
&lt;p&gt;We had two goals from the start of the project:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Enable a familiar experience for ClickOnce in Visual Studio.&lt;/li&gt;
&lt;li&gt;Enable a modern CI/CD for ClickOnce publishing with command-line flows, with either MSBuild or the Mage tool.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It’s easiest to show you the experience in pictures.&lt;/p&gt;
&lt;p&gt;Let’s start with the Visual Studio experience, which is centered around project publishing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/FolderTargets.png&quot; alt=&quot;Publish target&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The primary deployment model we’re currently supporting is &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/deploying/&quot;&gt;framework dependent apps&lt;/a&gt;. It is easy to take a dependency on the .NET Desktop Runtime (that’s the one that contains WPF and Windows Forms). Your ClickOnce installer will install the .NET runtime on user machines if it is needed. We also intend to support self-contained and single file apps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/Prerequisites.png&quot; alt=&quot;.NET pre-requisites&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You might wonder if you can still be able to take advantage of ClickOnce offline and updating features. Yes, you can.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/Settings.png&quot; alt=&quot;Publish settings&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The big change with &lt;a href=&quot;https://docs.microsoft.com/dotnet/framework/tools/mage-exe-manifest-generation-and-editing-tool&quot;&gt;Mage&lt;/a&gt; is that it is now a .NET tool, distributed on NuGet. That means you don’t need to install anything special on your machine. You just need the .NET 5.0 SDK and then you can install Mage as a .NET tool. You can use it to publish .NET Framework apps as well, however, SHA1 signing and partial trust support have been removed.&lt;/p&gt;
&lt;p&gt;The Mage installation command follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;console&quot;&gt;dotnet tool install -g Microsoft.DotNet.Mage
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After you’ve produced and distributed your ClickOnce installer, your users will see the familiar ClickOnce installation dialogs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/FirstInstallClickoncePrompt.png&quot; alt=&quot;First Install Clickonce Prompt&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Your users will see the update dialog when you make updates available.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2020/11/UpdateAvailable.png&quot; alt=&quot;Update Available&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;closing&quot;&gt;Closing&lt;/h2&gt;
&lt;p&gt;.NET 5.0 is another big release that should improve many aspects of your use with .NET. We have enabled a broad set of improvements, ranging from single file applications, to performance, to Json serialization usability to Arm64 enablement. While today may be your first day with .NET 5.0, we’ve been running .NET 5.0 in production at Microsoft for months. We have confidence that it is ready for you to use, to run your business and power your apps. The new language improvements in C# 9 and F# 5 should make your code more expressive and easier to write. .NET 5.0 is also a great choice for your existing apps. In many cases, you can upgrade without much effort.&lt;/p&gt;
&lt;p&gt;If you’re interested in performance, you may be interested in our progress with the &lt;a href=&quot;https://www.techempower.com/benchmarks/&quot;&gt;TechEmpower benchmarks&lt;/a&gt;. Looking back, you can see that &lt;a href=&quot;https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=ph&amp;amp;test=composite&quot;&gt;.NET Core 3.1 is doing pretty well with round 19&lt;/a&gt;, the latest round. We’re looking forward to seeing &lt;a href=&quot;https://tfb-status.techempower.com/&quot;&gt;.NET 5.0 in the upcoming round 20&lt;/a&gt;. The new ranking will be something to watch out for when round 20 is finalized and published.&lt;/p&gt;
&lt;p&gt;The improvements in .NET 5.0 are the result of efforts by many people, working collaboratively across the world and in many time zones, on GitHub. Thanks to everyone who contributed to this release. And don’t worry, there are lots of opportunities to contribute. The .NET 5.0 release has come to a close, but &lt;a href=&quot;https://github.com/dotnet/core/labels/Theme&quot;&gt;the next release has already started&lt;/a&gt;.&lt;/p&gt;



</description>
<pubDate>Tue, 10 Nov 2020 16:00:00 +0000</pubDate>
<dc:creator>benaadams</dc:creator>
<og:type>article</og:type>
<og:title>Announcing .NET 5.0 | .NET Blog</og:title>
<og:description>We’re excited to release .NET 5.0 today and for you to start using it. It’s a major release — including C# 9 and F# 5 — with a broad set of new features and compelling improvements. It’s already in active use by teams at Microsoft and other companies,</og:description>
<og:url>https://devblogs.microsoft.com/dotnet/announcing-net-5-0/</og:url>
<og:image>https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2019/02/swimlane-cross-platform.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://devblogs.microsoft.com/dotnet/announcing-net-5-0/</dc:identifier>
</item>
<item>
<title>On Apple&amp;#039;s Piss-Poor Documentation</title>
<link>https://www.caseyliss.com/2020/11/10/on-apples-pisspoor-documentation</link>
<guid isPermaLink="true" >https://www.caseyliss.com/2020/11/10/on-apples-pisspoor-documentation</guid>
<description>&lt;p&gt;For the last year or two, I’ve come to realize that the number one thing that makes it harder for me to do &lt;a href=&quot;https://www.caseyliss.com/2020/2/6/peek-a-view&quot;&gt;my job&lt;/a&gt; is documentation. Or, more specifically, the utter dearth of documentation that Apple provides for its platforms.&lt;/p&gt;
&lt;p&gt;As a developer, Apple provides us a series of tools — &lt;a href=&quot;https://en.wikipedia.org/wiki/API&quot;&gt;API&lt;/a&gt;s — that allow us to make apps on iOS, iPadOS, macOS, and tvOS. In many cases, it’s fairly straightforward to figure out how to use these APIs. There’s only so many ways you can use a screwdriver, and similarly, in many cases there’s only one obvious way to use an API.&lt;/p&gt;
&lt;p&gt;However, as users rightly demand more complicated and fancy apps, the APIs often need to get more fancy and complicated as well. Suddenly you look up and, instead of only using screwdrivers and hammers, you’re using power tools and complicated saws, and everything is much more fiddly than it once was.&lt;/p&gt;
&lt;p&gt;With real tools, you’d expect to receive an owner’s manual, which explains how to use the tool you’ve just purchased. A rough analogy exists for APIs, insofar as most platform vendors will provide documentation. This is basically the &quot;owner’s manual&quot; for that API.&lt;/p&gt;
&lt;p&gt;Apple’s documentation has, for years, been pretty bad. Over the last couple years, it has gone from bad → awful → despicable → embarrassing. All too often, I go to research how to do something new, and use an API I’m not familiar with, only to be stymied by those three dreaded words:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No overview available&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This is Apple’s way of saying “Fuck you, figure it out”.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No overview available&lt;/em&gt; is so bad that &lt;a href=&quot;https://nshipster.com&quot;&gt;a popular Apple resource&lt;/a&gt; — itself something that probably shouldn’t have to exist — used it as its namesake for a &lt;a href=&quot;https://nooverviewavailable.com&quot;&gt;a single-serving site&lt;/a&gt; to highlight how bad Apple’s documentation is.&lt;/p&gt;
&lt;p&gt;The march of progress doesn’t help, either. As my friend &lt;a href=&quot;http://swinden.com&quot;&gt;Adam Swinden&lt;/a&gt; &lt;a href=&quot;https://twitter.com/AdamSwinden/status/1326122584669376513&quot;&gt;pointed out to me on Twitter&lt;/a&gt;, as old APIs get deprecated, often times the new ones can’t be bothered to include documentation. Check out the difference between &lt;a href=&quot;https://developer.apple.com/documentation/photokit/phphotolibrary/1620736-requestauthorization&quot;&gt;this API&lt;/a&gt; and &lt;a href=&quot;https://developer.apple.com/documentation/photokit/phphotolibrary/3616053-requestauthorization&quot;&gt;the one that replaces it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No overview available. Fuck you, figure it out&lt;/em&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;A couple years ago, two new &lt;em&gt;phenomenal&lt;/em&gt; APIs were introduced around &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uicollectionview&quot;&gt;&lt;code&gt;UICollectionView&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;For at least a year — maybe two — far and away the best documentation for these new &lt;strong&gt;and important&lt;/strong&gt; features was hidden in the &lt;a href=&quot;https://www.tutorialspoint.com/cprogramming/c_header_files.htm&quot;&gt;header files&lt;/a&gt;. That’s despicable.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;On &lt;a href=&quot;https://www.relay.fm/radar/204&quot;&gt;this week’s&lt;/a&gt; &lt;a href=&quot;https://www.relay.fm/radar/&quot;&gt;Under the Rader&lt;/a&gt;, my pals &lt;a href=&quot;https://marco.org/&quot;&gt;Marco&lt;/a&gt; and &lt;a href=&quot;https://david-smith.org/&quot;&gt;Dave&lt;/a&gt; continued their arc of Marco’s transition into Swift and SwiftUI. In &lt;a href=&quot;https://www.relay.fm/radar/204&quot;&gt;the episode&lt;/a&gt;, both Marco and Dave really eloquently described some of the absolute pain Apple developers go through in trying to understand how to use the tools Apple provides.&lt;/p&gt;
&lt;p&gt;At the bottom of this post is a transcript of their thoughts, which has been lightly edited to make things a little more clear for the written word. &lt;a href=&quot;https://overcast.fm/&quot;&gt;Overcast&lt;/a&gt; timestamp links are provided at speaker transitions, if you’d like to listen to it from the horse’s mouth.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;No matter what, I’ve been banging on this drum for years. I haven’t a clue what the problem is at Apple.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is the documentation team not given the time to react to new APIs? (I’d buy it.)&lt;/li&gt;
&lt;li&gt;Is the documentation not considered a prerequisite for shipping? (I’d &lt;strong&gt;definitely&lt;/strong&gt; buy it.)&lt;/li&gt;
&lt;li&gt;Is the documentation team really bad at their jobs? (I doubt it.)&lt;/li&gt;
&lt;li&gt;Is the documentation team too small? (Likely.)&lt;/li&gt;
&lt;li&gt;Is the documentation team stymied by politics or in-fighting? (Probably.)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Whatever the problem is, it needs to be fixed. This is a problem that has been festering for years, and the pot is finally boiling over.&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Under the Radar Transcript&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://overcast.fm/+FgnZrLGbQ/3:44&quot;&gt;Marco&lt;/a&gt;: Having to learn SwiftUI is, first of all, the learning resources out there are still terrible, because it’s such a young language/framework/method of even thinking about things. It’s so young, and it changes so frequently — similar to the early days of Swift — that a lot of the tutorials, sample code, or Stack Overflow answers that are out there are no longer even correct. Because something has changed since when they were written last year, and now. Or the answer was posted during a beta, and in a later beta even that same year, the name of a class changed, or the way you’re supposed to do something changed. It’s so early, still.&lt;/p&gt;
&lt;p&gt;This is a time when you really feel how much we need better documentation support from Apple. One of the great things […] about PHP 🤣 is that PHP has always had &lt;em&gt;exceptional&lt;/em&gt; documentation on its website.&lt;/p&gt;
&lt;p&gt;On &lt;a href=&quot;https://php.net/&quot;&gt;&lt;code&gt;php.net&lt;/code&gt;&lt;/a&gt;, you an search for any function, and editors would build in hotkeys so, in Textmate, I can hit &lt;code&gt;⌃H&lt;/code&gt; and it pops up a documentation window &lt;em&gt;from &lt;a href=&quot;https://php.net/&quot;&gt;&lt;code&gt;php.net&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; about whatever function name I have my cursor on at that moment. There’s always been great documentation there. On the documentation pages — in almost every function in the language, which is a lot — there are example code snippets on documentation pages. And there’s comments! So even if the example code doesn’t quite there for you, or doesn’t answer a quesion you have, the comments usually do.&lt;/p&gt;
&lt;p&gt;This is something that I really wish Apple’s documentation would have — these little usage examples — because they really can help explain and show, better than just a pure API reference, how to do something. Or what a function is for.&lt;/p&gt;
&lt;p&gt;As we move into the land of SwiftUI, and Combine, and all of these higher-level concepts, a little more complicated things — this is also going to apply similarly once Swift gets its whole &lt;a href=&quot;https://forums.swift.org/t/swift-concurrency-roadmap/41611&quot;&gt;&lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; thing&lt;/a&gt;, presumably in a year or two. It becomes harder to understand a lot of these concepts, because they’re so abstract, and they have really simple-sounding names, and it’s really hard to tell what this does, how to use it, and so we all end up having to go to &lt;a href=&quot;https://stackoverflow.com/&quot;&gt;StackOverflow&lt;/a&gt;, and tutorial blogs, because Apple’s own documentation — [if] it’s even there, and that’s a big [if] — is so bare-bones and minimal, it’s like Jony Ive designed it —&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://overcast.fm/+FgnZrLGbQ/6:30&quot;&gt;Dave&lt;/a&gt;: …it’s a big white room…&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://overcast.fm/+FgnZrLGbQ/6:31&quot;&gt;Marco&lt;/a&gt;: Yeah, it’s a big, white, empty page. And it’s like, “this type is to do this one thing”, and then there’s no other context; no example showing “when would you use this”, “how do you use this”, “do you call this in a certain way, like as a constructor”.&lt;/p&gt;
&lt;p&gt;You can get so much value out of those little tiny snippets on documentation pages, like what PHP does. Like, “here’s a four-line example of how to use this thing”. And I wish for that so much as I’m learning this stuff.&lt;/p&gt;
&lt;p&gt;I’m seeing — and I would imagine this is how beginners see almost all parts of programming — because I am such a beginner at Swift and SwiftUI and at these concepts that SwiftUI is built upon — I’m seeing what it’s like to be a beginner for the first time in a while. I would benefit so much from better documentation, and to have — presumably at Apple — a pretty strong effort to not only write the documentation, but then to update the documentation as the language changes.&lt;/p&gt;
&lt;p&gt;This is the problem when you have these young languages that are greatly in flux, or these young frameworks that are greatly in flux. If you’re relying on tutorial blog posts, and StackOverflow answers, well those go out-of-date pretty fast, as I was saying earlier. It’s nobody’s full-time job at Apple to make sure that all these tutorial blog posts that are out there can be updated when the language changes, so they mostly just aren’t [updated]. Or, some of them are, some of them aren’t, and it’s hard to know what you’re going to land on when you find it.&lt;/p&gt;
&lt;p&gt;Even then, SwiftUI, for as cool as it is, and as much attention as it’s gotten from language nerds over the last year, there is very little out there about it; there is very, very little. There’s even less out there that goes beyond trivial use cases. For instance, if you have to make a tech demo with SwiftUI, and you have to have a button state that changes, and increments a number or whatever, great! There’s a million blog posts out there about that.&lt;/p&gt;
&lt;p&gt;But then, once it’s like, “Okay, how do I tie this into the rest of an app?” That’s a real app, that has actual needs like persistence storage, different screens, and everything. Once you add the complexity of real-world apps, most of these tutorials can’t cover that, or don’t cover that. So, I’ve had such a time, Dave, trying to adopt SwiftUI from these trivial little tutorials that people have, or that Apple has in WWDC sessions, to try to actually build “How do I connect that to my database”? “How do I connect that to my downloader or my sync engine”? There’s been so much of that. And I think I’ve finally got it, but &lt;em&gt;man&lt;/em&gt; is it non-trivial and non-obvious, and there’s so many weird little pitfalls.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;a href=&quot;https://overcast.fm/+FgnZrLGbQ/10:40&quot;&gt;Dave&lt;/a&gt;: I absolutely feel your pain, though. What’s so frustrating to me about this […] there are absolutely a couple of really tremendous SwiftUI resources online. For me, it’s &lt;a href=&quot;https://www.hackingwithswift.com&quot;&gt;Hacking with Swift&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/twostraws&quot;&gt;Paul Hudson&lt;/a&gt;. Like 80% of my SwiftUI knowledge has come from his site, and his videos. […] He has this great process where he’ll make these videos that show you one level beyond the trivial example, where you end up with something that’s like… Trivial+. It’s not a full-blown example, […] there’s still those rough edges that you’re talking about. I definitely continue to run into that. Where I want to do something a little bit more than the obvious case, and then, it’s like you’re jumping off this cliff, and it’s like “good luck”. […]&lt;/p&gt;
&lt;p&gt;I remember back at the beginning of the spring, I remember there were a couple of the educators in the Apple community. People who are typically on the conference circuit, they speak at a lot of the conferences, and they do workshops, and educators like that. And they were saying “You know what? We’re not going to able to travel for all of 2020, it seems. We’re not going to be able to do conferences; we’re not going to be able to do a lot of things. Hey, Apple, There’s a lot of really talented educators in your community who have a lot of spare time. It’d be a great thing if you took advantage of that.”&lt;/p&gt;
&lt;p&gt;It’s kind of sad that now that we’re sort of toward the end of the year, it doesn’t seem like they did. It doesn’t seem like there was any kind of movement on that, to leverage all of these people who are excellent at explaining things, at creating example apps. At doing this work in a way that would help people in your circumstance, in my circumstance. I really feel for the people who are coming at SwiftUI without decades of programming experience. If this was the first app you’re learning, in some ways it’s easy-ish. […] A really basic SwiftUI app is really easier to build, probably, than the most basic UIKit app. But, as soon as you start getting beyond that, it gets so complicated so quickly.&lt;/p&gt;
&lt;p&gt;I also think of how — it’s so difficult with documentation — is how, the people who are best able to make documentation for a new platform are the people who make the platform. Because they can work on the documentation, and have it available at the process of it being released. […] I feel bad for all the Apple tech educators, [when] a new SDK drops, or a new beta releases, and then they’re just like, not-sleeping for three days trying to frantically update all their stuff, and get new stuff covered. They do a great job — and I appreciate it — but this doesn’t have to be frantic.&lt;/p&gt;
&lt;p&gt;This could be, the documentation team at Apple has been working on this &lt;em&gt;in concert with&lt;/em&gt; the people writing the APIs for months. So on day one, here’s a great set of examples, that show code about how to use this.&lt;/p&gt;
&lt;p&gt;You’re exactly right — especially about SwiftUI — the nature of it is that traditional documentation… If you go to the documentation for &lt;a href=&quot;https://developer.apple.com/documentation/swiftui/text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; in SwiftUI, the &lt;a href=&quot;https://developer.apple.com/documentation/swiftui/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt;, the number of different modifiers you can apply to that &lt;code&gt;View&lt;/code&gt; is probably in the hundreds — if not more. But, having just this gigantic list of all the things you could possibly ever do to a &lt;code&gt;Text&lt;/code&gt; isn’t helpful. What you want to see is, “Okay, how do I do text that looks like this?” “What if I want multiline text?” “What if I want multiline text that has only this many lines, and then is aligned in the middle?” Doing that kind of stuff, you need examples. I don’t think the total number of cases that people actually use is that wide. I feel your pain.&lt;/p&gt;
</description>
<pubDate>Tue, 10 Nov 2020 15:01:10 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:title>On Apple's Piss-Poor Documentation</og:title>
<og:url>https://www.caseyliss.com/2020/11/10/on-apples-pisspoor-documentation</og:url>
<og:description>On this week's Under the Radar, Marco and Dave eloquenty discussed Apple's piss-poor documentation.</og:description>
<og:image></og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.caseyliss.com/2020/11/10/on-apples-pisspoor-documentation</dc:identifier>
</item>
<item>
<title>One in five Covid-19 patients develop mental illness within 90 days – study</title>
<link>https://www.reuters.com/article/health-coronavirus-mental-illness-int-idUSKBN27P35N</link>
<guid isPermaLink="true" >https://www.reuters.com/article/health-coronavirus-mental-illness-int-idUSKBN27P35N</guid>
<description>&lt;div class=&quot;ArticleBody-byline-container-3H6dy&quot;&gt;
&lt;p class=&quot;Byline-byline-1sVmo ArticleBody-byline-10B7D&quot;&gt;By &lt;a class=&quot;TextLabel__text-label___3oCVw TextLabel__black-to-orange___23uc0 TextLabel__serif___3lOpX Byline-author-2BSir&quot; href=&quot;https://www.reuters.com/journalists/kate-kelland&quot; target=&quot;_blank&quot;&gt;Kate Kelland&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;ArticleBody-read-time-and-social-2VOIr&quot;&gt;
&lt;p class=&quot;TextLabel__text-label___3oCVw TextLabel__gray___1V4fk TextLabel__small-all-caps-spaced-out___3O9H4 ReadTime-read-time-1s3CG ArticleBody-read-time-29pGN&quot;&gt;3 Min Read&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;LONDON (Reuters) - Many COVID-19 survivors are likely to be at greater risk of developing mental illness, psychiatrists said on Monday, after a large study found 20% of those infected with the coronavirus are diagnosed with a psychiatric disorder within 90 days.&lt;/p&gt;

&lt;p&gt;FILE PHOTO: The ultrastructural morphology exhibited by the 2019 Novel Coronavirus (2019-nCoV), which was identified as the cause of an outbreak of respiratory illness first detected in Wuhan, China, is seen in an illustration released by the Centers for Disease Control and Prevention (CDC) in Atlanta, Georgia, U.S. January 29, 2020. Alissa Eckert, MS; Dan Higgins, MAM/CDC/Handout via REUTERS.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Anxiety, depression and insomnia were most common among recovered COVID-19 patients in the study who developed mental health problems. The researchers from Britain’s Oxford University also found significantly higher risks of dementia, a brain impairment condition.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“People have been worried that COVID-19 survivors will be at greater risk of mental health problems, and our findings ... show this to be likely,” said Paul Harrison, a professor of psychiatry at Oxford.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Doctors and scientists around the world urgently need to investigate the causes and identify new treatments for mental illness after COVID-19, Harrison said.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“(Health) services need to be ready to provide care, especially since our results are likely to be underestimates (of the number of psychiatric patients),” he added.&lt;/p&gt;

&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;The study, published in The Lancet Psychiatry journal, analysed electronic health records of 69 million people in the United States, including more than 62,000 cases of COVID-19. The findings are likely to be the same for those afflicted by COVID-19 worldwide, the researchers said&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;In the three months following testing positive for COVID-19, 1 in 5 survivors were recorded as having a first time diagnosis of anxiety, depression or insomnia. This was about twice as likely as for other groups of patients in the same period, the researchers said.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;The study also found that people with a pre-existing mental illness were 65% more likely to be diagnosed with COVID-19 than those without.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Mental health specialists not directly involved with the study said its findings add to growing evidence that COVID-19 can affect the brain and mind, increasing the risk of a range of psychiatric illnesses.&lt;/p&gt;

&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“This is likely due to a combination of the psychological stressors associated with this particular pandemic and the physical effects of the illness,” said Michael Bloomfield, a consultant psychiatrist at University College London.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Simon Wessely, regius professor of psychiatry at King’s College London, said the finding that those with mental health disorders are also at higher risk of getting COVID-19 echoed similar findings in previous infectious disease outbreaks.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“COVID-19 affects the central nervous system, and so might directly increase subsequent disorders. But this research confirms that is not the whole story, and that this risk is increased by previous ill health,” he said.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;Marjorie Wallace, chief executive of the UK mental health charity SANE, said the study echoed her charity’s experience during the pandemic.&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;“Our helpline is dealing with an increasing number of first-time callers who are being triggered into mental health problems, as well as those who are relapsing because their fear and anxiety have become intolerable,” she said.&lt;/p&gt;
&lt;div readability=&quot;4.8595041322314&quot;&gt;
&lt;div class=&quot;Attribution-attribution-Y5JpY&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Reporting by Kate Kelland; Editing by Bill Berkrot and Angus MacSwan&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Tue, 10 Nov 2020 14:19:03 +0000</pubDate>
<dc:creator>MKais</dc:creator>
<og:title>One in five COVID-19 patients develop mental illness within 90 days - study</og:title>
<og:description>Many COVID-19 survivors are likely to be at greater risk of developing mental illness, psychiatrists said on Monday, after a large study found 20% of those infected with the coronavirus are diagnosed with a psychiatric disorder within 90 days.</og:description>
<og:image>https://static.reuters.com/resources/r/?m=02&amp;d=20201109&amp;t=2&amp;i=1540620061&amp;r=LYNXMPEGA821M&amp;w=800</og:image>
<og:url>https://www.reuters.com/article/health-coronavirus-mental-illness-int-idUSKBN27P35N</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/health-coronavirus-mental-illness-int-idUSKBN27P35N</dc:identifier>
</item>
</channel>
</rss>