<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Show HN: MineSweeper implemented in 100% CSS and HTML – no JavaScript</title>
<link>https://github.com/propjockey/css-sweeper#readme</link>
<guid isPermaLink="true" >https://github.com/propjockey/css-sweeper#readme</guid>
<description>&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/0b118771568227413cd55dbb58e56746ad3c58c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a616d6573307835372532302546302539462539312542442d492532306d616465253230612532307468696e67212d626c756576696f6c65742e7376673f6c6162656c436f6c6f723d323232323232&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/0b118771568227413cd55dbb58e56746ad3c58c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a616d6573307835372532302546302539462539312542442d492532306d616465253230612532307468696e67212d626c756576696f6c65742e7376673f6c6162656c436f6c6f723d323232323232&quot; alt=&quot;James0x57&quot; data-canonical-src=&quot;https://img.shields.io/badge/James0x57%20%F0%9F%91%BD-I%20made%20a%20thing!-blueviolet.svg?labelColor=222222&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;MineSweeper implemented in CSS + HTML using the Space Toggle trick (no JavaScript!)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://propjockey.github.io/css-sweeper/&quot; rel=&quot;nofollow&quot;&gt;PLAY IT HERE!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NOTE: this is &lt;a href=&quot;https://github.com/propjockey/DOMinion-build-demo&quot;&gt;another stress test&lt;/a&gt;, expect lag for the next several years of average computer advancement!&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/ab920ca11fd9026a6566f578a24ae5f7884d3400/68747470733a2f2f70726f706a6f636b65792e6769746875622e696f2f6373732d737765657065722f6373732d737765657065722e676966&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/ab920ca11fd9026a6566f578a24ae5f7884d3400/68747470733a2f2f70726f706a6f636b65792e6769746875622e696f2f6373732d737765657065722f6373732d737765657065722e676966&quot; data-canonical-src=&quot;https://propjockey.github.io/css-sweeper/css-sweeper.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Win Condition&lt;/h2&gt;
&lt;p&gt;Since it's not practical to clear all the spaces when you expose an empty area (without loops or causing cyclic references), the win condition has been reduced to:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Flag all the bombs&lt;/li&gt;
&lt;li&gt;Do not flag non-bombs&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Clear all non-bomb spaces&lt;/del&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This also allows you to win when it comes down to a forced-guess since you can flag without consequence. If you pick right and haven't flagged any non-bombs, you win.&lt;/p&gt;
&lt;h2&gt;Mine Field Generation&lt;/h2&gt;
&lt;p&gt;The fields are only defined by where the bombs are (and that those spaces are not not-bombs).&lt;/p&gt;
&lt;p&gt;The rest of the game, counter, numbers, etc flow from there, so the bombs can be placed anywhere, and in any number.&lt;/p&gt;
&lt;p&gt;This is the (lazy/inefficient) script I ran before hand to generate the 16 included Fields:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot; readability=&quot;28&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;levels&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;genlvl&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; ~~&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; * &lt;span class=&quot;pl-c1&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; ~~&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; * &lt;span class=&quot;pl-c1&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`bomb-&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;-&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;`&lt;/span&gt;
  &lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`--&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;: ; --not-&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;: initial;`&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;levels&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;genlvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;cssoutput&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;levels&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`    #level-&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;padStart&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;:checked ~ #ram {&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;      --level: &quot;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;padStart&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;      &lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-v&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;lvl&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;\n      &quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;pl-s1&quot;&gt;cssoutput&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;out&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;// cssoutput is the only css necessary to create new fields&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;CSS is a programming language thanks to the Space Toggle trick&lt;/h2&gt;
&lt;h3&gt;Basics of Space Toggle:&lt;/h3&gt;
&lt;ul&gt;&lt;li readability=&quot;-1&quot;&gt;if your --css-var holds a space &lt;code&gt;--toggler: ;&lt;/code&gt;, then it can be added to anything (any number of times) without changing the value
&lt;div class=&quot;highlight highlight-source-css&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;--toggler&lt;/span&gt;: ;
  &lt;span class=&quot;pl-c1&quot;&gt;--red-if-toggler&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--toggler&lt;/span&gt;) red;
  &lt;span class=&quot;pl-c1&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--red-if-toggler&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; green); &lt;span class=&quot;pl-c&quot;&gt;/* will be red! */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;if your --css-var holds &lt;code&gt;initial&lt;/code&gt; &lt;code&gt;--toggler: initial;&lt;/code&gt; (or was never defined), then it can be added to anything to force-fallback when referenced
&lt;div class=&quot;highlight highlight-source-css&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;--toggler&lt;/span&gt;: initial;
  &lt;span class=&quot;pl-c1&quot;&gt;--red-if-toggler&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--toggler&lt;/span&gt;) red;
  &lt;span class=&quot;pl-c1&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--red-if-toggler&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; green); &lt;span class=&quot;pl-c&quot;&gt;/* will be green! */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Space Toggles can be combined for AND logic: &lt;code&gt;--red-if-togglersalltrue: var(--tog1) var(--tog2) var(--tog3) red;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Space Toggles can be combined for OR logic: &lt;code&gt;--red-if-anytogglertrue: var(--tog1, var(--tog2, var(--tog3))) red;&lt;/code&gt;&lt;/li&gt;
&lt;li readability=&quot;0.98134863701578&quot;&gt;Checkboxes (and radio buttons) make a great source for space toggles (shout out to &lt;a href=&quot;https://twitter.com/RockStarwind&quot; rel=&quot;nofollow&quot;&gt;@RockStarwind&lt;/a&gt; for that idea)
&lt;div class=&quot;highlight highlight-source-css&quot; readability=&quot;13&quot;&gt;
&lt;pre&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;common-css-var-area&lt;/span&gt; { &lt;span class=&quot;pl-c&quot;&gt;/* default any &quot;not&quot; values to truthy */&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;--not-flagged&lt;/span&gt;: ; }
  &lt;span class=&quot;pl-kos&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;mycheckbox&lt;/span&gt;:&lt;span class=&quot;pl-c1&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;common-css-var-area&lt;/span&gt; { &lt;span class=&quot;pl-c1&quot;&gt;--flagged&lt;/span&gt;: ; &lt;span class=&quot;pl-c1&quot;&gt;--not-flagged&lt;/span&gt;: initial; }
  &lt;span class=&quot;pl-kos&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;anotherbox&lt;/span&gt;:&lt;span class=&quot;pl-c1&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;common-css-var-area&lt;/span&gt; { &lt;span class=&quot;pl-c1&quot;&gt;--open&lt;/span&gt;: ; }
  &lt;span class=&quot;pl-kos&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;common-css-var-area&lt;/span&gt; {
    &lt;span class=&quot;pl-c1&quot;&gt;--yellow-if-flagged-and-open&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--open&lt;/span&gt;) &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--flagged&lt;/span&gt;) yellow;
    &lt;span class=&quot;pl-c1&quot;&gt;--white-if-not-flagged-and-open&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--open&lt;/span&gt;) &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--not-flagged&lt;/span&gt;) white;
    &lt;span class=&quot;pl-c1&quot;&gt;--red-if-flagged&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--flagged&lt;/span&gt;) red;
    &lt;span class=&quot;pl-c1&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--yellow-if-flagged-and-open&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--white-if-not-flagged-and-open&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;--red-if-flagged&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; black)))
  }
  &lt;span class=&quot;pl-c&quot;&gt;/* color will be black if not flagged and not open */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;For reference, here's where Space Toggle has been discussed recently:&lt;/h3&gt;
&lt;h3&gt;Space Toggle has been independently discoverd a handful of times:&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://twitter.com/anatudor&quot; rel=&quot;nofollow&quot;&gt;@anatudor&lt;/a&gt; probably the first to discover it - about 3 years ago!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/James0x57&quot; rel=&quot;nofollow&quot;&gt;@JamesOx57&lt;/a&gt; in April 2020 which kickstarted development of augmented-ui v2 because it allows augs to be equipped without extra class names.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/DavidKPiano&quot; rel=&quot;nofollow&quot;&gt;@DavidKPiano&lt;/a&gt; in June 2020 and instead of just space, he includes an empty comment &lt;code&gt;--pnl: /**/;&lt;/code&gt; and calls it &lt;code&gt;prop-and-lock&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Socials&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/James0x57&quot; rel=&quot;nofollow&quot;&gt;Follow me on Twitter for more web dev insanity!&lt;/a&gt; (and feel free to ask questions!)&lt;/p&gt;
</description>
<pubDate>Wed, 22 Jul 2020 20:03:53 +0000</pubDate>
<dc:creator>James0x57</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/48817145?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>propjockey/css-sweeper</og:title>
<og:url>https://github.com/propjockey/css-sweeper</og:url>
<og:description>MineSweeper implemented in CSS + HTML using the Space Toggle trick (no JavaScript!) - propjockey/css-sweeper</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/propjockey/css-sweeper</dc:identifier>
</item>
<item>
<title>Apple Security Research Device Program</title>
<link>https://developer.apple.com/programs/security-research-device/</link>
<guid isPermaLink="true" >https://developer.apple.com/programs/security-research-device/</guid>
<description>&lt;h2&gt;Applying for the Program&lt;/h2&gt;
&lt;p&gt;To start your application, sign in with the Apple ID associated with your Apple Developer Program membership. If you’re enrolling as an organization, you’ll need to have the authority to accept legal agreements on behalf or your organization and will need to list the names of everyone who will have access to a Security Research Device. Once approved by Apple, each individual will have to acknowledge their responsibilities.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/contact/request/security-research-device/&quot; class=&quot;button button-pill&quot;&gt;Apply now&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 22 Jul 2020 17:09:49 +0000</pubDate>
<dc:creator>dewey</dc:creator>
<og:type>website</og:type>
<og:title>Apple Security Research Device Program - Apple Developer</og:title>
<og:description>The Apple Security Research Device Program is designed to help improve security for all iOS users. It features an iPhone dedicated exclusively to security research, with unique code execution and containment policies.</og:description>
<og:url>https://developer.apple.com/programs/security-research-device/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://developer.apple.com/programs/security-research-device/</dc:identifier>
</item>
<item>
<title>First Ever Image of a Multi-Planet System Around a Sun-Like Star Captured by ESO</title>
<link>https://www.eso.org/public/news/eso2011/?lang</link>
<guid isPermaLink="true" >https://www.eso.org/public/news/eso2011/?lang</guid>
<description>&lt;div&gt;&lt;a href=&quot;https://www.eso.org/public/news/eso2011/kids/&quot; class=&quot;noicon&quot; title=&quot;Kids&quot;&gt;&lt;img src=&quot;https://www.eso.org/public/archives/images/thumbs/ann16087a.jpg&quot; alt=&quot;Kids&quot; class=&quot;nopadding&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3 class=&quot;pr_typeid&quot;&gt;eso2011 — Photo Release&lt;/h3&gt;

&lt;p class=&quot;date&quot;&gt;22 July 2020&lt;/p&gt;

&lt;p class=&quot;text_intro pr_first&quot;&gt;The European Southern Observatory’s Very Large Telescope (ESO’s VLT) has taken the first ever image of a young, Sun-like star accompanied by two giant exoplanets. Images of systems with multiple exoplanets are extremely rare, and — until now — astronomers had never directly observed more than one planet orbiting a star similar to the Sun. The observations can help astronomers understand how planets formed and evolved around our own Sun.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Just a few weeks ago, ESO revealed a planetary system being born in a &lt;a href=&quot;https://www.eso.org/public/news/eso2008/&quot;&gt;new, stunning VLT image&lt;/a&gt;. Now, the same telescope, using the same &lt;a href=&quot;https://www.eso.org/public/teles-instr/paranal-observatory/vlt/vlt-instr/sphere/&quot;&gt;instrument&lt;/a&gt;, has taken the first direct image of a planetary system around a star like our Sun, located about 300 light-years away and known as TYC 8998-760-1.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;“&lt;em&gt;This discovery is a snapshot of an environment that is very similar to our Solar System, but at a much earlier stage of its evolution&lt;/em&gt;,” says Alexander Bohn, a PhD student at Leiden University in the Netherlands, who led the new research published today in &lt;em&gt;The Astrophysical Journal Letters&lt;/em&gt;. &lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;“&lt;em&gt;Even though astronomers have indirectly detected thousands of planets in our galaxy, only a tiny fraction of these exoplanets have been directly imaged&lt;/em&gt;,” says co-author Matthew Kenworthy, Associate Professor at Leiden University, adding that “&lt;em&gt;direct observations are important in the search for environments that can support life.&lt;/em&gt;” The direct imaging of two or more exoplanets around the same star is even more rare; only two such systems have been directly observed so far, both around stars markedly different from our Sun. The new ESO’s &lt;a href=&quot;https://www.eso.org/public/teles-instr/paranal-observatory/vlt/&quot;&gt;VLT&lt;/a&gt; image is the first direct image of more than one exoplanet around a Sun-like star. ESO’s VLT was also the first telescope to directly image an exoplanet, back in 2004, when it captured a &lt;a href=&quot;https://www.eso.org/public/news/eso0428/&quot;&gt;speck of light around a brown dwarf&lt;/a&gt;, a type of ‘failed’ star.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;“&lt;em&gt;Our team has now been able to take the first image of two gas giant companions that are orbiting a young, solar analogue&lt;/em&gt;,” says Maddalena Reggiani, a postdoctoral researcher from KU Leuven, Belgium, who also participated in the study. The two planets can be seen in the new image as two bright points of light distant from their parent star, which is located in the upper left of the frame (click on the image to view the full frame). By taking different images at different times, the team were able to distinguish these planets from the background stars.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The two gas giants orbit their host star at distances of 160 and about 320 times the Earth-Sun distance. This places these planets much further away from their star than Jupiter or Saturn, also two gas giants, are from the Sun; they lie at only 5 and 10 times the Earth-Sun distance, respectively. The team also found the two exoplanets are much heavier than the ones in our Solar System, the inner planet having 14 times Jupiter’s mass and the outer one six times.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Bohn’s team imaged this system during their search for young, giant planets around stars like our Sun but far younger. The star TYC 8998-760-1 is just 17 million years old and located in the Southern constellation of Musca (The Fly). Bohn describes it as a “&lt;em&gt;very young version of our own Sun.&lt;/em&gt;”&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;These images were possible thanks to the high performance of the &lt;a href=&quot;https://www.eso.org/public/teles-instr/paranal-observatory/vlt/vlt-instr/sphere/&quot;&gt;SPHERE&lt;/a&gt; instrument on ESO’s VLT in the Chilean Atacama desert. SPHERE blocks the bright light from the star using a device called &lt;a href=&quot;https://en.wikipedia.org/wiki/Coronagraph&quot;&gt;coronagraph&lt;/a&gt;, allowing the much fainter planets to be seen. While older planets, such as those in our Solar System, are too cool to be found with this technique, young planets are hotter, and so glow brighter in infrared light. By taking several images over the past year, as well as using older data going back to 2017, the research team have confirmed that the two planets are part of the star’s system.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Further observations of this system, including with the future ESO Extremely Large Telescope (ELT), will enable astronomers to test whether these planets formed at their current location distant from the star or migrated from elsewhere. ESO’s ELT will also help probe the interaction between two young planets in the same system. Bohn concludes: “&lt;em&gt;The possibility that future instruments, such as those available on the ELT, will be able to detect even lower-mass planets around this star marks an important milestone in understanding multi-planet systems, with potential implications for the history of our own Solar System&lt;/em&gt;.”&lt;/p&gt;
&lt;h3&gt;More information&lt;/h3&gt;
&lt;p dir=&quot;ltr&quot;&gt;This research was presented in the paper “&lt;a href=&quot;https://iopscience.iop.org/article/10.3847/2041-8213/aba27e&quot;&gt;Two Directly Imaged, Wide-orbit Giant Planets around the Young, Solar Analog TYC 8998-760-1&lt;/a&gt;” to appear in &lt;em&gt;The Astrophysical Journal Letters&lt;/em&gt; (&lt;a id=&quot;LPlnk175412&quot; href=&quot;https://doi.org/10.3847/2041-8213/aba27e&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://doi.org/10.3847/2041-8213/aba27e&lt;/a&gt;).&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The team is composed of Alexander J. Bohn (Leiden Observatory, Leiden University, The Netherlands), Matthew A. Kenworthy (Leiden Observatory), Christian Ginski (Anton Pannekoek Institute for Astronomy, University of Amsterdam, The Netherlands and Leiden Observatory), Steven Rieder (University of Exeter, Physics Department, UK), Eric E. Mamajek (Jet Propulsion Laboratory, California Institute of Technology, USA and Department of Physics &amp;amp; Astronomy, University of Rochester, USA), Tiffany Meshkat (IPAC, California Institute of Technology, USA), Mark J. Pecaut (Rockhurst University, Department of Physics, USA), Maddalena Reggiani (Institute of Astronomy, KU Leuven, Belgium), Jozua de Boer (Leiden Observatory), Christoph U. Keller (Leiden Observatory), Frans Snik (Leiden Observatory) and John Southworth (Keele University, UK).&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;For external comment on the paper, please contact ESO Astronomer Carlo Manara (cmanara@eso.org), who did not participate in the study. &lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;ESO is the foremost intergovernmental astronomy organisation in Europe and the world’s most productive ground-based astronomical observatory by far. It has 16 Member States: Austria, Belgium, the Czech Republic, Denmark, France, Finland, Germany, Ireland, Italy, the Netherlands, Poland, Portugal, Spain, Sweden, Switzerland and the United Kingdom, along with the host state of Chile and with Australia as a Strategic Partner. ESO carries out an ambitious programme focused on the design, construction and operation of powerful ground-based observing facilities enabling astronomers to make important scientific discoveries. ESO also plays a leading role in promoting and organising cooperation in astronomical research. ESO operates three unique world-class observing sites in Chile: La Silla, Paranal and Chajnantor. At Paranal, ESO operates the Very Large Telescope and its world-leading Very Large Telescope Interferometer as well as two survey telescopes, VISTA working in the infrared and the visible-light VLT Survey Telescope. Also at Paranal ESO will host and operate the Cherenkov Telescope Array South, the world’s largest and most sensitive gamma-ray observatory. ESO is also a major partner in two facilities on Chajnantor, APEX and ALMA, the largest astronomical project in existence. And on Cerro Armazones, close to Paranal, ESO is building the 39-metre Extremely Large Telescope, the ELT, which will become “the world’s biggest eye on the sky”. &lt;/p&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;h3&gt;Contacts&lt;/h3&gt;
&lt;p&gt;Alexander Bohn&lt;br/&gt;Leiden Observatory, University of Leiden&lt;br/&gt;Leiden, The Netherlands&lt;br/&gt;Tel: +31 (0)71 527 8150&lt;br/&gt;Email: &lt;a href=&quot;mailto:bohn@strw.leidenuniv.nl&quot;&gt;bohn@strw.leidenuniv.nl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Matthew Kenworthy&lt;br/&gt;Leiden Observatory, University of Leiden&lt;br/&gt;Leiden, The Netherlands&lt;br/&gt;Tel: +31 64 172 0331&lt;br/&gt;Email: &lt;a href=&quot;mailto:kenworthy@strw.leidenuniv.nl&quot;&gt;kenworthy@strw.leidenuniv.nl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Maddalena Reggiani&lt;br/&gt;Institute of Astronomy, KU Leuven&lt;br/&gt;Leuven, Belgium&lt;br/&gt;Tel: +32 16 19 31 99&lt;br/&gt;Email: &lt;a href=&quot;mailto:maddalena.reggiani@kuleuven.be&quot;&gt;maddalena.reggiani@kuleuven.be&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Carlo Manara (astronomer who did not participate in the study; contact for external comment)&lt;br/&gt;European Southern Observatory&lt;br/&gt;Garching bei München, Germany&lt;br/&gt;Tel: +49 (0) 89 3200 6298&lt;br/&gt;Email: &lt;a href=&quot;mailto:cmanara@eso.org&quot;&gt;cmanara@eso.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bárbara Ferreira&lt;br/&gt;ESO Public Information Officer&lt;br/&gt;Garching bei München, Germany&lt;br/&gt;Tel: +49 89 3200 6670&lt;br/&gt;Cell: +49 151 241 664 00&lt;br/&gt;Email: &lt;a href=&quot;mailto:pio@eso.org&quot;&gt;pio@eso.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.eso.org/public/outreach/social/&quot;&gt;Connect with ESO on social media&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 22 Jul 2020 14:44:27 +0000</pubDate>
<dc:creator>rbanffy</dc:creator>
<og:type>website</og:type>
<og:title>First Ever Image of a Multi-Planet System around a Sun-like Star Captured by ESO Telescope</og:title>
<og:image>http://cdn.eso.org/images/screen/eso2011a.jpg</og:image>
<og:url>https://www.eso.org/public/news/eso2011/</og:url>
<og:description>The European Southern Observatory’s Very Large Telescope (ESO’s VLT) has taken the first ever image of a young, Sun-like star accompanied by two giant exoplanets. Images of systems with multiple exoplanets are extremely rare, and — until now — astronomers had never directly observed more than one planet orbiting a star similar to the Sun. The observations can help astronomers understand how planets formed and evolved around our own Sun.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eso.org/public/news/eso2011/?lang</dc:identifier>
</item>
<item>
<title>Fawkes: Image “Cloaking” for Personal Privacy</title>
<link>http://sandlab.cs.uchicago.edu/fawkes/</link>
<guid isPermaLink="true" >http://sandlab.cs.uchicago.edu/fawkes/</guid>
<description>&lt;p&gt;2020 is a watershed year for machine learning. It has seen the true arrival of commodized machine learning, where deep learning models and algorithms are readily available to Internet users. GPUs are cheaper and more readily available than ever, and new training methods like transfer learning have made it possible to train powerful deep learning models using smaller sets of data.&lt;/p&gt;
&lt;p&gt;But accessible machine learning also has its downsides as well. A recent New York Times &lt;a href=&quot;https://www.nytimes.com/2020/01/18/technology/clearview-privacy-facial-recognition.html&quot;&gt;article&lt;/a&gt; by Kashmir Hill profiled &lt;em&gt;&lt;a href=&quot;https://clearview.ai/&quot;&gt;clearview.ai&lt;/a&gt;&lt;/em&gt;, an unregulated facial recognition service that has now downloaded over 3 billion photos of people from the Internet and social media, using them to build facial recognition models for millions of citizens without their knowledge or permission. Clearview.ai demonstrates just how easy it is to build invasive tools for monitoring and tracking using deep learning.&lt;/p&gt;
&lt;p&gt;So how do we protect ourselves against unauthorized third parties building facial recognition models to recognize us wherever we may go? Regulations can and will help restrict usage of machine learning by public companies, but will have negligible impact on private organizations, individuals, or even other nation states with similar goals.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://sandlab.cs.uchicago.edu&quot;&gt;SAND Lab&lt;/a&gt; at University of Chicago has developed &lt;em&gt;&lt;strong&gt;Fawkes&lt;sup&gt;1&lt;/sup&gt;&lt;/strong&gt;&lt;/em&gt;, an algorithm and software tool (running locally on your computer) that gives individuals the ability to limit how their own images can be used to track them. At a high level, Fawkes takes your personal images, and makes tiny, pixel-level changes to them that are invisible to the human eye, in a process we call &lt;em&gt;image cloaking&lt;/em&gt;. You can then use these &quot;cloaked&quot; photos as you normally would, sharing them on social media, sending them to friends, printing them or displaying them on digital devices, the same way you would any other photo. The difference, however, is that if and when someone tries to use these photos to build a facial recognition model, &quot;cloaked&quot; images will teach the model an highly distorted version of what makes you look like you. The cloak effect is not easily detectable, and will not cause errors in model training. However, when someone tries to identify you using an unaltered image of you (e.g. a photo taken in public), and tries to identify you, they will fail.&lt;/p&gt;
&lt;p&gt;Fawkes has been tested extensively and proven effective in a variety of environments, and shows 100% effectiveness against state of the art facial recognition models (Microsoft Azure Face API, Amazon Rekognition, and Face++). We are in the process of adding more material here to explain how and why Fawkes works. For now, please see the link below to our technical paper, which will be presented at the upcoming &lt;a href=&quot;https://www.usenix.org/conference/usenixsecurity20&quot;&gt;USENIX Security Symposium&lt;/a&gt;, to be held on August 12 to 14.&lt;/p&gt;
&lt;p&gt;The Fawkes project is led by two PhD students at SAND Lab, &lt;u&gt;&lt;a href=&quot;https://people.cs.uchicago.edu/~ewillson/&quot;&gt;Emily Wenger&lt;/a&gt;&lt;/u&gt; and &lt;u&gt;&lt;a href=&quot;https://www.shawnshan.com/&quot;&gt;Shawn Shan&lt;/a&gt;&lt;/u&gt;, with important contributions from &lt;u&gt;&lt;a href=&quot;https://jiayunz.github.io/&quot;&gt;Jiayun Zhang&lt;/a&gt;&lt;/u&gt; (SAND Lab visitor and current PhD student at UC San Diego) and &lt;u&gt;&lt;a href=&quot;https://people.cs.uchicago.edu/~huiyingli/&quot;&gt;Huiying Li&lt;/a&gt;&lt;/u&gt;, also a SAND Lab PhD student. The faculty advisors are SAND Lab co-directors and Neubauer Professors &lt;u&gt;&lt;a href=&quot;https://people.cs.uchicago.edu/~ravenben/&quot;&gt;Ben Zhao&lt;/a&gt;&lt;/u&gt; and &lt;u&gt;&lt;a href=&quot;https://people.cs.uchicago.edu/~htzheng/&quot;&gt;Heather Zheng&lt;/a&gt;&lt;/u&gt;.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;The Guy Fawkes mask, a la &lt;a href=&quot;https://en.wikipedia.org/wiki/V_for_Vendetta_%28film%29&quot;&gt;&lt;strong&gt;&lt;em&gt;V for Vendetta&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 22 Jul 2020 14:26:44 +0000</pubDate>
<dc:creator>MindGods</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://sandlab.cs.uchicago.edu/fawkes/</dc:identifier>
</item>
<item>
<title>Slack Files EU Competition Complaint Against Microsoft</title>
<link>https://slackhq.com/slack-files-eu-competition-complaint-against-microsoft</link>
<guid isPermaLink="true" >https://slackhq.com/slack-files-eu-competition-complaint-against-microsoft</guid>
<description>&lt;p&gt;&lt;strong&gt;SAN FRANCISCO, July 22, 2020&lt;/strong&gt;—Slack Technologies, Inc., (NYSE: WORK) today announced it has filed a competition complaint against Microsoft Corporation before the European Commission.&lt;/p&gt;
&lt;p&gt;The complaint details Microsoft’s illegal and anti-competitive practice of abusing its market dominance to extinguish competition in breach of European Union competition law. Microsoft has illegally tied its Teams product into its market-dominant Office productivity suite, force installing it for millions, blocking its removal, and hiding the true cost to enterprise customers.&lt;/p&gt;
&lt;p&gt;“We’re confident that we win on the merits of our product, but we can’t ignore illegal behavior that deprives customers of access to the tools and solutions they want,” said Jonathan Prince, Vice President of Communications and Policy at Slack. “Slack threatens Microsoft’s hold on business email, the cornerstone of Office, which means Slack threatens Microsoft’s lock on enterprise software.”&lt;/p&gt;
&lt;p&gt;“But this is much bigger than Slack versus Microsoft – this is a proxy for two very different philosophies for the future of digital ecosystems, gateways versus gatekeepers,” Prince said. “Slack offers an open, flexible approach that compounds the threat to Microsoft because it is a gateway to innovative, best-in-class technology that competes with the rest of Microsoft’s stack and gives customers the freedom to build solutions that meet their needs. We want to be the 2% of your software budget that makes the other 98% more valuable; they want 100% of your budget every time.”&lt;/p&gt;
&lt;p&gt;“Slack simply wants fair competition and a level playing field. Healthy competition drives innovation and creates the best products and the most choice for customers. Competition and antitrust laws are designed to ensure that dominant companies are not allowed to foreclose competition illegally. We’re asking the EU to be a neutral referee, examine the facts, and enforce the law,” said David Schellhase, General Counsel at Slack. “Microsoft is reverting to past behavior. They created a weak, copycat product and tied it to their dominant Office product, force installing it and blocking its removal, a carbon copy of their illegal behavior during the ‘browser wars.’ Slack is asking the European Commission to take swift action to ensure Microsoft cannot continue to illegally leverage its power from one market to another by bundling or tying products.”&lt;/p&gt;
&lt;p&gt;The European Commission will now review the complaint and decide whether to open a formal investigation into Microsoft’s anti-competitive practices.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;About Slack:&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;Slack has transformed business communication. It’s the leading channel-based messaging platform, used by millions to align their teams, unify their systems, and drive their businesses forward. Only Slack offers a secure, enterprise-grade environment that can scale with the largest companies in the world. It is a new layer of the business technology stack where people can work together more effectively, connect all their other software tools and services, and find the information they need to do their best work. Slack is where work happens.&lt;/p&gt;
&lt;p&gt;– ## –&lt;/p&gt;
&lt;p&gt;Slack and the Slack logo are trademarks of Slack Technologies, Inc. or its subsidiaries in the U.S. and/or other countries. Other names and brands may be claimed as the property of others.&lt;/p&gt;
&lt;div&gt;&lt;strong&gt;CONTACTS:&lt;/strong&gt;
&lt;table width=&quot;742&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td width=&quot;341&quot;&gt;Jesse Hulsing&lt;/td&gt;
&lt;td width=&quot;341&quot;&gt;Jonathan Prince&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td width=&quot;341&quot;&gt;Investor Relations&lt;/td&gt;
&lt;td width=&quot;341&quot;&gt;Communications and Policy&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;341&quot;&gt;ir@slack.com&lt;/td&gt;
&lt;td width=&quot;341&quot;&gt;competition@slack.com&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 22 Jul 2020 13:29:23 +0000</pubDate>
<dc:creator>mattmarcus</dc:creator>
<og:type>article</og:type>
<og:title>Slack Files EU Competition Complaint Against Microsoft - Several People Are Typing</og:title>
<og:description>Slack Technologies, Inc., (NYSE: WORK) today announced it has filed a competition complaint against Microsoft Corporation before the European Commission.</og:description>
<og:url>https://slackhq.com/slack-files-eu-competition-complaint-against-microsoft</og:url>
<og:image>https://slackhq.com/wp-content/uploads/2020/03/SlackLogo_CompanyNews_PrimaryAubergine_Unfurl-1.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://slackhq.com/slack-files-eu-competition-complaint-against-microsoft</dc:identifier>
</item>
<item>
<title>Y Combinator has lost its soul: A YC founder&amp;#039;s perspective</title>
<link>https://twitter.com/AdamNeumannsCoS/status/1285651161723342848</link>
<guid isPermaLink="true" >https://twitter.com/AdamNeumannsCoS/status/1285651161723342848</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/AdamNeumannsCoS/status/1285651161723342848&quot;&gt;https://twitter.com/AdamNeumannsCoS/status/1285651161723342848&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=23916314&quot;&gt;https://news.ycombinator.com/item?id=23916314&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 454&lt;/p&gt;
&lt;p&gt;# Comments: 377&lt;/p&gt;
</description>
<pubDate>Wed, 22 Jul 2020 12:43:25 +0000</pubDate>
<dc:creator>artembugara</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/AdamNeumannsCoS/status/1285651161723342848</dc:identifier>
</item>
<item>
<title>Online classes are not worth cost of full tuition</title>
<link>https://www.thestar.com/opinion/contributors/2020/07/20/online-classes-are-not-worth-cost-of-full-tuition.html</link>
<guid isPermaLink="true" >https://www.thestar.com/opinion/contributors/2020/07/20/online-classes-are-not-worth-cost-of-full-tuition.html</guid>
<description>&lt;p class=&quot;text-block-container&quot;&gt;University life is going to look very different this fall, and as faculty scramble to work social distancing into their “campus culture,” students will be left paying the price for a half-baked education.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;With exceptions for science labs, fine arts studios and a few small tutorials — Ontario’s university courses will run online this fall, either asynchronously through pre-recorded lectures and Powerpoints or through the video conferencing app Zoom. And tuition fees won’t be going down a cent.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;The schools claim that, despite these changes in delivery, they will still provide “exceptional education and engaging experiences” and the calibre of their courses will remain the same. But who are they kidding?&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;When classes suddenly switched online in late March, no one pretended the quality of instruction was the same as in the classroom. Students were told to be patient and understanding as their university and professors adjusted to this “new normal” — but now, months later, nothing has changed and universities must acknowledge students’ losses.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Students do not learn as effectively online &lt;a class=&quot;text-block__link&quot; oncontextmenu=&quot;theStarLinkClick(event, this)&quot; onclick=&quot;theStarLinkClick(event, this)&quot; href=&quot;https://www.cbc.ca/news/canada/toronto/mandatory-online-courses-ontario-high-school-students-terrible-idea-e-learning-1.5072018&quot;&gt;as they do in-person&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Online courses lack class discussions that are key to making courses engaging. Listening to a talking head on a screen may impart some knowledge, but it does nothing more to encourage students to engage with each other and the course content than final exams do.&lt;/p&gt;
&lt;span id=&quot;contentMiddleBreakPoint&quot;/&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Students lose their sense of classroom community in Zoom lectures. Gone are the days of casual study groups and staying after lecture to ask the professor a question; in an online classroom, everything has to be formalized and purposeful, and that makes it harder to reach out to each other.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Of course, this drop in the quality of education doesn’t mean students are going to be failing at an alarming rate next year; most professors will be lenient and curve grades so the majority of students can pass. And this is all fine if a student is going to university for the degree alone, but most students go to university to learn — and most students learn less online.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Tuition fees also pay for more than just classes: they pay for lecture halls so students have somewhere comfortable to learn and for libraries so students can study away from the distractions of home, something that won’t be an option this year.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Obviously, the solution isn’t for classes to be held in-person as young people are more likely to contract the virus and most tenured professors are in high risk groups for becoming seriously ill, making in-person lectures a perfect storm for catastrophic spread.&lt;/p&gt;
&lt;div class=&quot;article-related-inline&quot;&gt;
&lt;div class=&quot;c-related-articles&quot; data-lpos=&quot;article|related-stories&quot;&gt;
&lt;p&gt;
&lt;h2 class=&quot;article-list-heading&quot;&gt;RELATED STORIES&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;c-related-articles-inline__content&quot;&gt;
&lt;div class=&quot;c-mediacard__content&quot;&gt;
&lt;p&gt;&lt;span class=&quot;c-mediacard-labels__label c-mediacard-labels__label--section&quot; data-test-id=&quot;label-section&quot;&gt;GTA&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;c-mediacard__heading mediacard-headline__long&quot;&gt;&lt;span data-test-id=&quot;mediacard-headline&quot;&gt;International students studying online will still qualify for Canadian work permits&lt;/span&gt;&lt;/h3&gt;

&lt;/div&gt;

&lt;div class=&quot;c-mediacard__content&quot;&gt;
&lt;p&gt;&lt;span class=&quot;c-mediacard-labels__label c-mediacard-labels__label--section&quot; data-test-id=&quot;label-section&quot;&gt;GTA&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;c-mediacard__heading mediacard-headline__long&quot;&gt;&lt;span data-test-id=&quot;mediacard-headline&quot;&gt;Range of price tags, virtual French lessons: A look at back-to-school plans at the TDSB&lt;/span&gt;&lt;/h3&gt;

&lt;/div&gt;

&lt;div class=&quot;c-mediacard__content&quot;&gt;
&lt;p&gt;&lt;span class=&quot;c-mediacard-labels__label c-mediacard-labels__label--section&quot; data-test-id=&quot;label-section&quot;&gt;Provincial Politics&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;c-mediacard__heading mediacard-headline__long&quot;&gt;&lt;span data-test-id=&quot;mediacard-headline&quot;&gt;Colleges and universities quietly preparing to take all classes online this fall amid COVID-19&lt;/span&gt;&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;text-block-container&quot;&gt;But universities need to stop pretending online courses will be the same quality as in-person, and they need to stop asking students to pay the full-service price tag.&lt;/p&gt;
&lt;p class=&quot;text-block-container&quot;&gt;For most students, deferring a semester is not an option — they’ve signed leases and know that travel and job prospects are slim — so they are forced to pay fees that in no way reflect the quality of education they’re getting.&lt;/p&gt;
&lt;span id=&quot;contentEndBreakPoint&quot;/&gt;
&lt;p class=&quot;text-block-container&quot;&gt;Ten hours of staring at a laptop screen is not the same as 10 hours in a lecture hall — and students shouldn’t be paying tuition fees like it is.&lt;/p&gt;
&lt;div class=&quot;cta-container&quot; data-lpos=&quot;newsletter|get-the-latest-in-your-inbox&quot; readability=&quot;9.2763157894737&quot;&gt;
&lt;h3 class=&quot;cta-title&quot;&gt;Get the latest in your inbox&lt;/h3&gt;
&lt;p&gt;Never miss the latest news from the Star, including up-to-date coronavirus coverage, with our email newsletters&lt;/p&gt;
&lt;a class=&quot;cta-button&quot; href=&quot;https://www.thestar.com/emails.html?nsrc=article-inline-covid&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Sign Up Now&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;author-endnote-container border-bottom&quot; data-lpos=&quot;article|author|bottom&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Hope Mahood&lt;/strong&gt; is the co-ordinating editor of news and opinions for the Western Gazette.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article-trust-bar&quot; data-lpos=&quot;article|trust-bar&quot;&gt;
&lt;div class=&quot;trust-items&quot;&gt;
&lt;p&gt;&lt;span class=&quot;trust-item-text trust-item-report-error&quot;&gt;Report an error&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span/&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;trust-item-text trust-item-journal-std&quot;&gt;Journalistic Standards&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span/&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;trust-item-text trust-item-about-star&quot;&gt;About &lt;em&gt;The Star&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;conversations&quot; readability=&quot;10.601449275362&quot;&gt;
&lt;p&gt;JOIN THE CONVERSATION&lt;/p&gt;
&lt;div class=&quot;c-pullquote c-pullquote--open&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Q:&lt;/p&gt;
&lt;p class=&quot;c-pullquotetext&quot;&gt;Do you think students should have to pay full price for online classes?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;c-signin c-signin--hide&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;c-register-message&quot;&gt;Anyone can read Conversations, but to contribute, you should be registered Torstar account holder. If you do not yet have a Torstar account, you can create one now (it is free)&lt;/p&gt;
&lt;p class=&quot;c-button c-button--signin&quot;&gt;Sign In&lt;/p&gt;

&lt;p class=&quot;c-button c-button--signin&quot;&gt;Register&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;c-disclaimer&quot; readability=&quot;7.9024390243902&quot;&gt;Conversations are opinions of our readers and are subject to the &lt;a href=&quot;https://www.thestar.com/about/community-guidelines.html&quot;&gt;Code of Conduct&lt;/a&gt;. The Star does not endorse these opinions.&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Wed, 22 Jul 2020 12:28:54 +0000</pubDate>
<dc:creator>varbhat</dc:creator>
<og:title>Online classes are not worth cost of full tuition</og:title>
<og:type>article</og:type>
<og:url>https://www.thestar.com/opinion/contributors/2020/07/20/online-classes-are-not-worth-cost-of-full-tuition.html</og:url>
<og:description>Universities need to stop pretending online courses will be the same quality as in-person, and they need to stop asking students to pay the full-servi...</og:description>
<og:image>https://images.thestar.com/KpzpNx1vbjgt5u01DMFqJgG0TUA=/1086x878/smart/filters:cb(1595250112320)/https://www.thestar.com/content/dam/thestar/opinion/contributors/2020/07/20/online-classes-are-not-worth-cost-of-full-tuition/hope_mahood.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.thestar.com/opinion/contributors/2020/07/20/online-classes-are-not-worth-cost-of-full-tuition.html</dc:identifier>
</item>
<item>
<title>Design Docs at Google</title>
<link>https://www.industrialempathy.com/posts/design-docs-at-google/</link>
<guid isPermaLink="true" >https://www.industrialempathy.com/posts/design-docs-at-google/</guid>
<description>&lt;p&gt;One of the key elements of Google's software engineering culture is the use of defining software designs through design docs. These are relatively informal documents that the primary author or authors of a software system or application create before they embark on the coding project. The design doc documents the high level implementation strategy and key design decisions with emphasis on the trade-offs that were considered during those decisions.&lt;/p&gt;&lt;p&gt;As software engineers our job is not to produce code per se, but rather to solve problems. Unstructured text, like in the form of a design doc, may be the better tool for solving problems early in a project lifecycle, as it may be more concise and easier to comprehend, and communicates the problems and solutions at a higher level than code.&lt;/p&gt;
&lt;p&gt;Besides the original documentation of a software design, design docs fulfill the following functions in the software development lifecycle:&lt;/p&gt;
&lt;ul readability=&quot;3&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Early identification of design issues when making changes is still cheap.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Achieving consensus around a design in the organization.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Ensuring consideration of cross-cutting concerns.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Scaling knowledge of senior engineers into the organization.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Form the basis of an organizational memory around design decisions.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Acts as a summary artifact in the technical portfolio of the software designer(s).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;anatomy-of-a-design-doc&quot;&gt;Anatomy of a design doc &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#anatomy-of-a-design-doc&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Design docs are informal documents and thus don’t follow a strict guideline for their content. Rule #1 is: Write them in whatever form makes the most sense for the particular project.&lt;/p&gt;
&lt;p&gt;Having said that, a certain structure has established itself as really useful.&lt;/p&gt;
&lt;h3 id=&quot;context-and-scope&quot;&gt;Context and scope &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#context-and-scope&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This section gives the reader a very rough overview of the landscape in which the new system is being built and what is actually being built. This isn’t a requirements doc. Keep it succinct! The goal is that readers are brought up to speed but some previous knowledge can be assumed and detailed info can be linked to. This section should be entirely focused on objective background facts.&lt;/p&gt;
&lt;h3 id=&quot;goals-and-non-goals&quot;&gt;Goals and non-goals &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#goals-and-non-goals&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A short list of bullet points of what the goals of the system are, and, sometimes more importantly, what non-goals are. Note, that non-goals aren’t negated goals like “The system shouldn’t crash”, but rather things that could reasonably be goals, but are explicitly chosen not to be goals. A good example would be “ACID compliance”; when designing a database, you’d certainly want to know whether that is a goal or non-goal. And if it is a non-goal you might still select a solution that provides it, if it doesn’t introduce trade-offs that prevent achieving the goals.&lt;/p&gt;
&lt;h3 id=&quot;the-actual-design&quot;&gt;The actual design &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#the-actual-design&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This section should start with an overview and then go into details.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Visualization of how to draw an owl. First picture: two circles labeled &amp;quot;1. Draw some circles&amp;quot;. Second picture: Picture of an own labeled &amp;quot;2. Draw the rest of the fucking owl&amp;quot;&quot; height=&quot;488&quot; src=&quot;https://www.industrialempathy.com/img/remote/ZCBwPv.jpg&quot; width=&quot;600&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; sizes=&quot;(max-width: 608px) 100vw, 608px&quot; srcset=&quot;/img/remote/ZCBwPv-1920w.jpg 1920w, /img/remote/ZCBwPv-1280w.jpg 1280w, /img/remote/ZCBwPv-640w.jpg 640w, /img/remote/ZCBwPv-320w.jpg 320w&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The design doc is &lt;em&gt;the place to write down the trade-offs&lt;/em&gt; you made in designing your software. Focus on those trade-offs to produce a useful document with long-term value. That is, given the context (facts), goals and non-goals (requirements), the design doc is the place to suggest solutions and show why a particular solution best satisfies those goals.&lt;/p&gt;
&lt;p&gt;The point of writing a document over a more formal medium is to provide the flexibility to express the problem set at hand in an appropriate manner. Because of this, there is no explicit guidance for how to actually describe the design.&lt;/p&gt;
&lt;p&gt;Having said that, a few best practices and repeating topics have emerged that make sense for a large percentage of design docs:&lt;/p&gt;
&lt;h4 id=&quot;system-context-diagram&quot;&gt;&lt;strong&gt;System-context-diagram&lt;/strong&gt; &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#system-context-diagram&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In many docs a &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/System_context_diagram&quot;&gt;system-context-diagram&lt;/a&gt;&lt;/em&gt; can be very useful. Such a diagram shows the system as part of the larger technical landscape and allows readers to contextualize the new design given its environment that they are already familiar with.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Block diagram showing how various systems are related to each other. The actual text is just examples and not needed to be seen to understand the example.&quot; height=&quot;333&quot; src=&quot;https://www.industrialempathy.com/img/remote/2mPr0N.png&quot; width=&quot;655&quot; decoding=&quot;async&quot; loading=&quot;lazy&quot; sizes=&quot;(max-width: 608px) 100vw, 608px&quot; srcset=&quot;/img/remote/2mPr0N-1920w.jpg 1920w, /img/remote/2mPr0N-1280w.jpg 1280w, /img/remote/2mPr0N-640w.jpg 640w, /img/remote/2mPr0N-320w.jpg 320w&quot;/&gt;&lt;br/&gt;&lt;em&gt;Example of a system-context-diagram.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;apis&quot;&gt;APIs &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#apis&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If the system under design exposes an API, then sketching out that API is usually a good idea. In most cases, however, one should withstand the temptation to copy-paste formal interface or data definitions into the doc as these are often verbose, contain unnecessary detail and quickly get out of date. Instead focus on the parts that are relevant to the design and its trade-offs.&lt;/p&gt;
&lt;h4 id=&quot;data-storage&quot;&gt;Data storage &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#data-storage&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Systems that store data should likely discuss how and in what rough form this happens. Similar to the advice on APIs, and for the same reasons, copy-pasting complete schema definitions should be avoided. Instead focus on the parts that are relevant to the design and its trade-offs.&lt;/p&gt;
&lt;h4 id=&quot;code-and-pseudo-code&quot;&gt;Code and pseudo-code &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#code-and-pseudo-code&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Design docs should rarely contain code, or pseudo-code except in situations where novel algorithms are described. As appropriate, link to prototypes that show the implementability of the design.&lt;/p&gt;
&lt;h4 id=&quot;degree-of-constraint&quot;&gt;Degree of constraint &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#degree-of-constraint&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;One of the primary factors that would influence the shape of a software design and hence the design doc, is the degree of constraint of the solution space.&lt;/p&gt;
&lt;p&gt;On one end of the extreme is the “greenfield software project”, where all we know are the goals, and the solution can be whatever makes the most sense. Such a document may be wide-ranging, but it also needs to quickly define a set of rules that allow zooming in on a manageable set of solutions.&lt;/p&gt;
&lt;p&gt;On the other end are systems where the possible solutions are very well defined, but it isn’t at all obvious how they could even be combined to achieve the goals. This may be a legacy system that is difficult to change and wasn’t designed to do what you want it to do or a library design that needs to operate within the constraints of the host programming language.&lt;/p&gt;
&lt;p&gt;In this situation you may be able to enumerate all the things you can do relatively easily, but you need to creatively put those things together to achieve the goals. There may be multiple solutions, and none of them are really great, and hence such a document should focus on selecting the best way given all identified trade-offs.&lt;/p&gt;
&lt;h3 id=&quot;alternatives-considered&quot;&gt;Alternatives considered &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#alternatives-considered&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This section lists alternative designs that would have reasonably achieved similar outcomes. The focus should be on the trade-offs that each respective design makes and how those trade-offs led to the decision to select the design that is the primary topic of the document.&lt;/p&gt;
&lt;p&gt;While it is fine to be succinct about solution that ended up not being selected, this section is one of the most important ones as it shows very explicitly why the selected solution is the best given the project goals and how other solutions, that the reader may be wondering about, introduce trade-offs that are less desirable given the goals.&lt;/p&gt;
&lt;h3 id=&quot;cross-cutting-concerns&quot;&gt;Cross-cutting concerns &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#cross-cutting-concerns&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is where your organization can ensure that certain cross-cutting concerns such as security, privacy, and observability are always taken into consideration. These are often relatively short sections that explain how the design impacts the concern and how the concern is addressed. Teams should standardize what these concerns are in their case.&lt;/p&gt;
&lt;p&gt;Due to their importance, Google projects are required to have a dedicated privacy design doc, and there are dedicated reviews for privacy and security. While the reviews are only required to be completed by the time a project launches, it is best practice to engage with privacy and security teams as early as possible to ensure that designs take them into account from the ground up. In case of dedicated docs for these topics, the central design doc can, of course, reference them instead of going into detail.&lt;/p&gt;
&lt;h3 id=&quot;the-length-of-a-design-doc&quot;&gt;The length of a design doc &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#the-length-of-a-design-doc&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Design docs should be sufficiently detailed but short enough to actually be read by busy people. The sweet spot for a larger project seems to be around 10-20ish pages. If you get way beyond that, it might make sense to split up the problem into more manageable sub problems. It should also be noted that it is absolutely possible to write a 1-3 page “mini design doc”. This is especially helpful for incremental improvements or sub tasks in an agile project–you still do all the same steps as for a longer doc, just keep things more terse and focused on a limited problem set.&lt;/p&gt;
&lt;h2 id=&quot;when-not-to-write-a-design-doc.&quot;&gt;When &lt;em&gt;not&lt;/em&gt; to write a design doc. &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#when-not-to-write-a-design-doc.&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Writing design docs is overhead. The decision whether to write a design doc comes down to the core trade-off of deciding whether the benefits in organizational consensus around design, documentation, senior review, etc. outweigh the extra work of creating the doc. At the center of that decision lies whether the solution to the design problem is ambiguous–because of problem complexity or solution complexity, or both. If it is not, then there is little value in going through the process of writing a doc.&lt;/p&gt;
&lt;p&gt;A clear indicator that a doc might not be necessary are design docs that are really &lt;em&gt;implementation manuals&lt;/em&gt;. If a doc basically says “This is how we are going to implement it” without going into trade-offs, alternatives, and explaining decision making (or if the solution is so obvious as to mean there were no trade-offs), then it would probably have been a better idea to write the actual program right away.&lt;/p&gt;
&lt;p&gt;Finally, the overhead of creating and reviewing a design doc may not be compatible with prototyping and rapid iteration. However, most software projects do have a set of &lt;em&gt;actually known problems&lt;/em&gt;. Subscribing to agile methodologies is not an excuse for not taking the time to get solutions to actually known problems right. Additionally, prototyping itself may be part of the design doc creation. “I tried it out and it works” is one of the best arguments for choosing a design.&lt;/p&gt;
&lt;h2 id=&quot;the-design-doc-lifecycle&quot;&gt;The design doc lifecycle &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#the-design-doc-lifecycle&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The steps in the lifecycle of a design document are:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Creation and rapid iteration&lt;/li&gt;
&lt;li&gt;Review (may be in multiple rounds)&lt;/li&gt;
&lt;li&gt;Implementation and iteration&lt;/li&gt;
&lt;li&gt;Maintenance and learning&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;creation-and-rapid-iteration&quot;&gt;Creation and rapid iteration &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#creation-and-rapid-iteration&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You write the doc. Sometimes together with a set of co-authors.&lt;/p&gt;
&lt;p&gt;This phase quickly evolves into a time of rapid iteration where the doc is shared with colleagues who have the most knowledge about the problem space (often belonging to the same team) and through their clarifying questions and suggestions drive the doc to a first relatively stable version.&lt;/p&gt;
&lt;p&gt;While you certainly find engineers and even teams who prefer version control and code review tools for document creation, the vast majority of design docs at Google are created in Google Docs and make heavy use of its collaboration features.&lt;/p&gt;
&lt;h3 id=&quot;review&quot;&gt;Review &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#review&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the review phase a design doc gets shared with a wider audience than the original set of authors and close collaborators. Reviews can add a lot of value, but they are also a dangerous trap of overhead, so treat them wisely.&lt;/p&gt;
&lt;p&gt;A review can take many shapes: The more lightweight version is simply sending out the doc to the (wider) team-list to give folks a chance to take a look. Discussion then primarily happens in comment threads in the document. On the heavy side of reviews, are formal design review meetings in which the author presents the doc (often via a dedicated presentation) to an often very senior engineering audience. Many teams at Google have recurring meetings scheduled for this purpose to which engineers can sign up to for a review. Naturally waiting for such meetings to happen can significantly slow down the development process. Engineers can mitigate this by seeking the most crucial feedback directly and not blocking progress on wider review.&lt;/p&gt;
&lt;p&gt;When Google was a smaller company, it was customary to send designs to a single central mailing list, where senior engineers would review them at their own leisure. This may very well be a great way to handle things for your company. One benefit was that it did establish a relatively uniform software design culture across the company. But as the company scaled to a much larger engineering team, it became infeasible to maintain the centralized approach.&lt;/p&gt;
&lt;p&gt;The primary value that such reviews add is that they form an opportunity for the combined experience of the organization to be incorporated into a design. Most consistently, ensuring that designs take cross-cutting concerns such as observability, security and privacy into account is something that can be ensured in a review stage. The primary value of the review isn’t that issues get discovered per-se, but rather that this happens relatively early in the development lifecycle when it is still relatively cheap to make changes.&lt;/p&gt;
&lt;h3 id=&quot;implementation-and-iteration&quot;&gt;Implementation and iteration &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#implementation-and-iteration&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When things have progressed sufficiently to have confidence that further reviews are unlikely to require major changes to the design, it is time to begin implementation. As plans collide with reality, it is inevitable that shortcomings, unaddressed requirements, or educated guesses that turned out to be wrong surface, and require changing the design. It is strongly recommended to update the design doc in this case. As a rule of thumb: If the designed system hasn’t shipped yet, then definitely update the doc. In practice we humans are bad at updating documents, and for other practical reasons changes are often isolated into new documents. This leads to an eventual state more akin to the US constitution with a bunch of amendments rather than one consistent piece of documentation. Links to such amendments from the original doc can be immensely helpful for the poor future maintenance programmer trying to understand their target system through design doc archaeology.&lt;/p&gt;
&lt;h3 id=&quot;maintenance-and-learning&quot;&gt;Maintenance and learning &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#maintenance-and-learning&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When Google engineers get confronted with a system that they hadn’t previously touched their first question often is “Where is the design doc?”. While design docs, like all documentation, tend to get out of sync with reality over time, they still often present the most accessible entry point to learn about the thinking that guided the creation of the system.&lt;/p&gt;
&lt;p&gt;As the author, do yourself a favor and re-read your own design docs a year or 2 later. What did you get right? What did you get wrong? What would you do to decide differently today? Answering these questions is a great way to advance as an engineer and improve software design skills over time.&lt;/p&gt;
&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/#conclusions&quot; class=&quot;direct-link&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Design docs are a great way to gain clarity and achieve consensus around solving the hardest problems in a software project. They save money, because they avoid going down coding rabbit holes that fail to achieve project goals and could have been avoided using upfront investigation; and they cost money, because creation and review take time. So, choose wisely for your project!&lt;/p&gt;
&lt;p&gt;When considering writing a design doc, think about these points:&lt;/p&gt;
&lt;ul readability=&quot;7.5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Are you unsure about the right software design, and would it make sense to spend upfront time to gain certainty?&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Relatedly, would it help to involve senior engineers, who might not be able to review every code-change, in the design?&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Is the software design ambiguous or even contentious such that achieving organizational consensus around it would be valuable?&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Does my team sometimes forget to consider privacy, security, logging or other cross-cutting concerns in the design?&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Is there a strong need for documents that provide high-level insights into the design of legacy systems in the organization?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you answer yes to 3 or more of these questions, then a design doc is probably a great method to start your next software project.&lt;/p&gt;


&lt;p&gt;Since you've made it this far, &lt;a href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/&quot; onclick=&quot;share(this)&quot;&gt;sharing&lt;/a&gt; this article on your favorite social media network would be highly appreciated 💖! For feedback, please &lt;a href=&quot;https://twitter.com/cramforce&quot;&gt;ping me on Twitter.&lt;/a&gt;&lt;/p&gt;
&lt;aside aria-labelledby=&quot;comments&quot; role=&quot;region&quot; readability=&quot;7.0576441102757&quot;&gt;
&lt;blockquote cite=&quot;https://twitter.com/rakyll/status/1280348541076910083&quot; readability=&quot;6.0718232044199&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/rakyll/status/1280348541076910083&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Jaana Dogan said:&lt;/a&gt; Another great article from @cramforce about design docs. If you are not discussing trade-offs or trying to address ambiguity, you may not need a design doc.&lt;br/&gt;&lt;a href=&quot;https://twitter.com/rakyll/status/1280348541076910083&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Replies&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote cite=&quot;https://twitter.com/rseroter/status/1282744351311847426&quot; readability=&quot;5.9574468085106&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/rseroter/status/1282744351311847426&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Richard Seroter said:&lt;/a&gt; Where @cramforce explains &quot;design docs at Google&quot; by laying out the structure, and when you don't need to write one ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote cite=&quot;https://twitter.com/dinodaizovi/status/1285944027867742208&quot; readability=&quot;2.843137254902&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dinodaizovi/status/1285944027867742208&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Dino A. Dai Zovi said:&lt;/a&gt; How Google does design docs:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote cite=&quot;https://twitter.com/senthil_hi/status/1280379325577965568&quot; readability=&quot;5.2571428571429&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/senthil_hi/status/1280379325577965568&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Senthil said:&lt;/a&gt; A neat pragmatic overview by @cramforce on how to approach design docs for software systems&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote cite=&quot;https://twitter.com/jimperio/status/1285926289832964096&quot; readability=&quot;5.5280898876404&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/jimperio/status/1285926289832964096&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;jimperio said:&lt;/a&gt; Concise and insightful overview of design docs at Google. I'm already filing this to share with the team -- and inspire us to keep improving our own documentation!&lt;/p&gt;
&lt;/blockquote&gt;
 &lt;label for=&quot;addComment&quot;&gt;Clicking the button will open a new window to compose a tweet. Tweets with a URL to this article may show up as comments on this article.&lt;/label&gt;&lt;/aside&gt;&lt;button href=&quot;https://www.industrialempathy.com/posts/design-docs-at-google/&quot; onclick=&quot;clap(this)&quot; title=&quot;Share&quot;&gt;&lt;strong&gt;869&lt;/strong&gt;&lt;/button&gt;&lt;p&gt;Published &lt;time datetime=&quot;2020-07-06&quot;&gt;06 Jul 2020&lt;/time&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 22 Jul 2020 10:12:56 +0000</pubDate>
<dc:creator>thesephist</dc:creator>
<og:title>Design Docs at Google</og:title>
<og:description>One of the key elements of Google's software engineering culture is the use of defining software designs through design docs. These are...</og:description>
<og:image>https://www.industrialempathy.com/img/remote/ZCBwPv.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.industrialempathy.com/posts/design-docs-at-google/</dc:identifier>
</item>
<item>
<title>Experimental blood test detects cancer up to four years before symptoms appear</title>
<link>https://www.scientificamerican.com/article/experimental-blood-test-detects-cancer-up-to-four-years-before-symptoms-appear/</link>
<guid isPermaLink="true" >https://www.scientificamerican.com/article/experimental-blood-test-detects-cancer-up-to-four-years-before-symptoms-appear/</guid>
<description>&lt;div class=&quot;mura-region mura-region-loose&quot;&gt;
&lt;div class=&quot;mura-region-local&quot;&gt;
&lt;p&gt;For years scientists have sought to create the ultimate cancer-screening test—one that can reliably detect a malignancy early, before tumor cells spread and when treatments are more effective. A new method reported today in &lt;em&gt;Nature Communications&lt;/em&gt; brings researchers a step closer to that goal. By using a blood test, the international team was able to &lt;a href=&quot;https://www.nature.com/articles/s41467-020-17316-z&quot; target=&quot;_blank&quot;&gt;diagnose cancer long before symptoms appeared in nearly all the people it tested&lt;/a&gt; who went on to develop cancer.&lt;/p&gt;
&lt;p&gt;“What we showed is: up to four years before these people walk into the hospital, there are already signatures in their blood that show they have cancer,” says &lt;a href=&quot;http://igm.ucsd.edu/faculty/profiles/kun-zhang.shtml&quot; target=&quot;_blank&quot;&gt;Kun Zhang&lt;/a&gt;, a bioengineer at the University of California, San Diego, and a co-author of the study. “That’s never been done before.”&lt;/p&gt;
&lt;p&gt;Past efforts to develop blood tests for cancer typically involved researchers collecting blood samples from people already diagnosed with the disease. They would then see if they could accurately detect malignant cells in those samples, usually by looking at genetic mutations, DNA methylation (chemical alterations to DNA) or specific blood proteins. “The best you can prove is whether your method is as good at detecting cancer as existing methods,” Zhang says. “You can never prove it’s better.”&lt;/p&gt;
&lt;p&gt;In contrast, Zhang and his colleagues began collecting samples from people before they had any signs that they had cancer. In 2007 the researchers began recruiting more than 123,000 healthy individuals in Taizhou, China, to undergo annual health checks—an effort that required building a specialized warehouse to store the more than 1.6 million samples they eventually accrued. Around 1,000 participants developed cancer over the next 10 years.&lt;/p&gt;
&lt;p&gt;Zhang and his colleagues focused on developing a test for five of the most common types of cancer: stomach, esophageal, colorectal, lung and liver malignancies. The test they developed, called PanSeer, detects methylation patterns in which a chemical group is added to DNA to alter genetic activity. Past studies have shown that abnormal methylation can signal various types of cancer, including pancreatic and colon cancer.&lt;/p&gt;
&lt;p&gt;The PanSeer test works by isolating DNA from a blood sample and measuring DNA methylation at 500 locations previously identified as having the greatest chance of signaling the presence of cancer. A machine-learning algorithm compiles the findings into a single score that indicates a person’s likelihood of having the disease. The researchers tested blood samples from 191 participants who eventually developed cancer, paired with the same number of matching healthy individuals. They were able to detect cancer up to four years before symptoms appeared with roughly 90 percent accuracy and a 5 percent false-positive rate.&lt;/p&gt;
&lt;p&gt;The new study “offers several interesting approaches in the quest for a blood-plasma-based cancer-screening test,” says &lt;a href=&quot;https://depts.washington.edu/labweb/Faculty/pritchardColin.htm&quot; target=&quot;_blank&quot;&gt;Colin Pritchard&lt;/a&gt;, a molecular pathologist at the University of Washington School of Medicine, who was not involved in the research. It will be important, though, for another research team to independently validate the findings in a different group of people before the test can be considered for clinical use, he says.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ucl.ac.uk/womens-health/people/professor-usha-menon&quot; target=&quot;_blank&quot;&gt;Usha Menon&lt;/a&gt;, a professor of gynecological cancer at University College London, who also did not participate in the study, observes that Zhang and his colleagues’ method provides a robust, preliminary baseline test—an “essential first step” toward a commercial cancer-screening product. “The authors are not suggesting that they have a test that can be used clinically at this stage,” she says. “They are clear that what they have is a robust preliminary demonstration of early detection of multiple cancer types four years prior to conventional diagnosis.”&lt;/p&gt;
&lt;p&gt;Most likely, such a test would first target high-risk populations, Menon says. And it would require devising a second panel of tests to enable clinicians to determine the specific cancer type and rule out false positives.&lt;/p&gt;
&lt;p&gt;Zhang believes such a feature could be developed with more work, and he agrees that further studies are needed. Given the challenges in repeating an effort of this magnitude&lt;strong&gt;,&lt;/strong&gt; a government-industry partnership, he says, would ideally undertake the follow-up research. An ideal test would target the most common cancers, as Zhang’s study did, as well as the deadliest ones. “There are cancers where early detection can make a really big difference,” he says. Pancreatic cancer, for example, is the next target Zhang and his colleagues are working on.&lt;/p&gt;
&lt;p&gt;If and when cancer blood tests do become available, Pritchard warns, they probably will not be able to detect all cancers before they become symptomatic. “One cancer might have a very long lead time, where another is very short,” he says. “Cancers that grow very quickly might not be detected even if someone is, for example, doing an annual screening.” It’s possible, too, that some types of malignancies may never be detected by blood tests because they do not produce a measurable signal in blood plasma.&lt;/p&gt;
&lt;p&gt;“We are still a ways away from having an accurate blood-based ‘pan-cancer’ screening test. But it is not impossible to achieve,” Pritchard says. “There are several large efforts underway, with some promise for the future.”&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 22 Jul 2020 07:33:34 +0000</pubDate>
<dc:creator>prawn</dc:creator>
<og:type>article</og:type>
<og:title>Experimental Blood Test Detects Cancer up to Four Years before Symptoms Appear</og:title>
<og:description>The assay looks for stomach, esophageal, colorectal, lung and liver malignancies</og:description>
<og:image>https://static.scientificamerican.com/sciam/cache/file/1057319F-84BD-42DE-A37DCC279078F569.jpg</og:image>
<og:url>https://www.scientificamerican.com/article/experimental-blood-test-detects-cancer-up-to-four-years-before-symptoms-appear/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scientificamerican.com/article/experimental-blood-test-detects-cancer-up-to-four-years-before-symptoms-appear/</dc:identifier>
</item>
<item>
<title>Write code that is easy to delete, not easy to extend (2016)</title>
<link>https://programmingisterrible.com/post/139222674273/write-code-that-is-easy-to-delete-not-easy-to</link>
<guid isPermaLink="true" >https://programmingisterrible.com/post/139222674273/write-code-that-is-easy-to-delete-not-easy-to</guid>
<description>&lt;header&gt;

&lt;/header&gt;&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“Every line of code is written without reason, maintained out of weakness, and deleted by chance” &lt;em&gt;Jean-Paul Sartre’s Programming in ANSI C.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Every line of code written comes at a price: maintenance. To avoid paying for a lot of code, we build reusable software. The problem with code re-use is that it gets in the way of changing your mind later on.&lt;/p&gt;
&lt;p&gt;The more consumers of an API you have, the more code you must rewrite to introduce changes. Similarly, the more you rely on an third-party api, the more you suffer when it changes. Managing how the code fits together, or which parts depend on others, is a significant problem in large scale systems, and it gets harder as your project grows older.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;My point today is that, if we wish to count lines of code, we should not regard them as “lines produced” but as “lines spent” &lt;em&gt;EWD 1036&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If we see ‘lines of code’ as ‘lines spent’, then when we delete lines of code, we are lowering the cost of maintenance. Instead of building re-usable software, we should try to build disposable software.&lt;/p&gt;
&lt;p&gt;I don’t need to tell you that deleting code is more fun than writing it.&lt;/p&gt;
&lt;p&gt;To write code that’s easy to delete: repeat yourself to avoid creating dependencies, but don’t repeat yourself to manage them. Layer your code too: build simple-to-use APIs out of simpler-to-implement but clumsy-to-use parts. Split your code: isolate the hard-to-write and the likely-to-change parts from the rest of the code, and each other. Don’t hard code every choice, and maybe allow changing a few at runtime. Don’t try to do all of these things at the same time, and maybe don’t write so much code in the first place.&lt;/p&gt;


&lt;p&gt;The number of lines of code doesn’t tell us much on its own, but the magnitude does 50, 500 5,000, 10,000, 25,000, etc. A million line monolith is going to be more annoying than a ten thousand line one and significantly more time, money, and effort to replace.&lt;/p&gt;
&lt;p&gt;Although the more code you have the harder it is to get rid of, saving one line of code saves absolutely nothing on its own.&lt;/p&gt;
&lt;p&gt;Even so, the easiest code to delete is the code you avoided writing in the first place.&lt;/p&gt;


&lt;p&gt;Building reusable code is something that’s easier to do in hindsight with a couple of examples of use in the code base, than foresight of ones you might want later. On the plus side, you’re probably re-using a lot of code already by just using the file-system, why worry that much? A little redundancy is healthy.&lt;/p&gt;
&lt;p&gt;It’s good to copy-paste code a couple of times, rather than making a library function, just to get a handle on how it will be used. Once you make something a shared API, you make it harder to change.&lt;/p&gt;
&lt;p&gt;The code that calls your function will rely on both the intentional and the unintentional behaviours of the implementation behind it. The programmers using your function will not rely on what you document, but what they observe.&lt;/p&gt;
&lt;p&gt;It’s simpler to delete the code inside a function than it is to delete a function.&lt;/p&gt;


&lt;p&gt;When you’ve copy and pasted something enough times, maybe it’s time to pull it up to a function. This is the “save me from my standard library” stuff: the “open a config file and give me a hash table”, “delete this directory”. This includes functions without any state, or functions with a little bit of global knowledge like environment variables. The stuff that ends up in a file called “util”.&lt;/p&gt;
&lt;p&gt;Aside: Make a &lt;code&gt;util&lt;/code&gt; directory and keep different utilities in different files. A single &lt;code&gt;util&lt;/code&gt; file will always grow until it is too big and yet too hard to split apart. Using a single &lt;code&gt;util&lt;/code&gt; file is unhygienic.&lt;/p&gt;
&lt;p&gt;The less specific the code is to your application or project, the easier they are to re-use and the less likely to change or be deleted. Library code like logging, or third party APIs, file handles, or processes. Other good examples of code you’re not going to delete are lists, hash tables, and other collections. Not because they often have very simple interfaces, but because they don’t grow in scope over time.&lt;/p&gt;
&lt;p&gt;Instead of making code easy-to-delete, we are trying to keep the hard-to-delete parts as far away as possible from the easy-to-delete parts.&lt;/p&gt;


&lt;p&gt;Despite writing libraries to avoid copy pasting, we often end up writing a lot more code through copy paste to use them, but we give it a different name: boilerplate. Boiler plate is a lot like copy-pasting, but you change some of the code in a different place each time, rather than the same bit over and over.&lt;/p&gt;
&lt;p&gt;Like with copy paste, we are duplicating parts of code to avoid introducing dependencies, gain flexibility, and pay for it in verbosity.&lt;/p&gt;
&lt;p&gt;Libraries that require boilerplate are often stuff like network protocols, wire formats, or parsing kits, stuff where it’s hard to interweave policy (what a program should do), and protocol (what a program can do) together without limiting the options. This code is hard to delete: it’s often a requirement for talking to another computer or handling different files, and the last thing we want to do is litter it with business logic.&lt;/p&gt;
&lt;p&gt;This is not an exercise in code reuse: we’re trying keep the parts that change frequently, away from the parts that are relatively static. Minimising the dependencies or responsibilities of library code, even if we have to write boilerplate to use it.&lt;/p&gt;
&lt;p&gt;You are writing more lines of code, but you are writing those lines of code in the easy-to-delete parts.&lt;/p&gt;


&lt;p&gt;Boilerplate works best when libraries are expected to cater to all tastes, but sometimes there is just too much duplication. It’s time to wrap your flexible library with one that has opinions on policy, workflow, and state. Building simple-to-use APIs is about turning your boilerplate into a library.&lt;/p&gt;
&lt;p&gt;This isn’t as uncommon as you might think: One of the most popular and beloved python http clients, &lt;code&gt;requests&lt;/code&gt;, is a successful example of providing a simpler interface, powered by a more verbose-to-use library &lt;code&gt;urllib3&lt;/code&gt; underneath. &lt;code&gt;requests&lt;/code&gt; caters to common workflows when using http, and hides many practical details from the user. Meanwhile, &lt;code&gt;urllib3&lt;/code&gt; does the pipelining, connection management, and does not hide anything from the user.&lt;/p&gt;
&lt;p&gt;It is not so much that we are hiding detail when we wrap one library in another, but we are separating concerns: &lt;code&gt;requests&lt;/code&gt; is about popular http adventures, &lt;code&gt;urllib3&lt;/code&gt; is about giving you the tools to choose your own adventure.&lt;/p&gt;
&lt;p&gt;I’m not advocating you go out and create a &lt;code&gt;/protocol/&lt;/code&gt; and a &lt;code&gt;/policy/&lt;/code&gt; directory, but you do want to try and keep your &lt;code&gt;util&lt;/code&gt; directory free of business logic, and build simpler-to-use libraries on top of simpler-to-implement ones. You don’t have to finish writing one library to start writing another atop.&lt;/p&gt;
&lt;p&gt;It’s often good to wrap third party libraries too, even if they aren’t protocol-esque. You can build a library that suits your code, rather than lock in your choice across the project. Building a pleasant to use API and building an extensible API are often at odds with each other.&lt;/p&gt;
&lt;p&gt;This split of concerns allows us to make some users happy without making things impossible for other users. Layering is easiest when you start with a good API, but writing a good API on top of a bad one is unpleasantly hard. Good APIs are designed with empathy for the programmers who will use it, and layering is realising we can’t please everyone at once.&lt;/p&gt;
&lt;p&gt;Layering is less about writing code we can delete later, but making the hard to delete code pleasant to use (without contaminating it with business logic).&lt;/p&gt;


&lt;p&gt;You’ve copy-pasted, you’ve refactored, you’ve layered, you’ve composed, but the code still has to do something at the end of the day. Sometimes it’s best just to give up and write a substantial amount of trashy code to hold the rest together.&lt;/p&gt;
&lt;p&gt;Business logic is code characterised by a never ending series of edge cases and quick and dirty hacks. This is fine. I am ok with this. Other styles like ‘game code’, or ‘founder code’ are the same thing: cutting corners to save a considerable amount of time.&lt;/p&gt;
&lt;p&gt;The reason? Sometimes it’s easier to delete one big mistake than try to delete 18 smaller interleaved mistakes. A lot of programming is exploratory, and it’s quicker to get it wrong a few times and iterate than think to get it right first time.&lt;/p&gt;
&lt;p&gt;This is especially true of more fun or creative endeavours. If you’re writing your first game: don’t write an engine. Similarly, don’t write a web framework before writing an application. Go and write a mess the first time. Unless you’re psychic you won’t know how to split it up.&lt;/p&gt;
&lt;p&gt;Monorepos are a similar tradeoff: You won’t know how to split up your code in advance, and frankly one large mistake is easier to deploy than 20 tightly coupled ones.&lt;/p&gt;
&lt;p&gt;When you know what code is going to be abandoned soon, deleted, or easily replaced, you can cut a lot more corners. Especially if you make one-off client sites, event web pages. Anything where you have a template and stamp out copies, or where you fill in the gaps left by a framework.&lt;/p&gt;
&lt;p&gt;I’m not suggesting you write the same ball of mud ten times over, perfecting your mistakes. To quote Perlis: “Everything should be built top-down, except the first time”. You should be trying to make new mistakes each time, take new risks, and slowly build up through iteration.&lt;/p&gt;
&lt;p&gt;Becoming a professional software developer is accumulating a back-catalogue of regrets and mistakes. You learn nothing from success. It is not that you know what good code looks like, but the scars of bad code are fresh in your mind.&lt;/p&gt;
&lt;p&gt;Projects either fail or become legacy code eventually anyway. Failure happens more than success. It’s quicker to write ten big balls of mud and see where it gets you than try to polish a single turd.&lt;/p&gt;
&lt;p&gt;It’s easier to delete all of the code than to delete it piecewise.&lt;/p&gt;


&lt;p&gt;Big balls of mud are the easiest to build but the most expensive to maintain. What feels like a simple change ends up touching almost every part of the code base in an ad-hoc fashion. What was easy to delete as a whole is now impossible to delete piecewise.&lt;/p&gt;
&lt;p&gt;In the same we have layered our code to separate responsibilities, from platform specific to domain specific, we need to find a means to tease apart the logic atop.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;[Start] with a list of difficult design decisions or design decisions which are likely to change. Each module is then designed to hide such a decision from the others. &lt;em&gt;D. Parnas&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead of breaking code into parts with common functionality, we break code apart by what it does not share with the rest. We isolate the most frustrating parts to write, maintain, or delete away from each other.&lt;/p&gt;
&lt;p&gt;We are not building modules around being able to re-use them, but being able to change them.&lt;/p&gt;
&lt;p&gt;Unfortunately, some problems are more intertwined and hard to separate than others. Although the single responsibility principle suggests that ‘each module should only handle one hard problem’, it is more important that ‘each hard problem is only handled by one module’&lt;/p&gt;
&lt;p&gt;When a module does two things, it is usually because changing one part requires changing the other. It is often easier to have one awful component with a simple interface, than two components requiring a careful co-ordination between them.&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;I shall not today attempt further to define the kinds of material I understand to be embraced within that shorthand description [”loose coupling”], and perhaps I could never succeed in intelligibly doing so. But I know it when I see it, and the code base involved in this case is not that. &lt;em&gt;SCOTUS Justice Stewart&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A system where you can delete parts without rewriting others is often called loosely coupled, but it’s a lot easier to explain what one looks like rather than how to build it in the first place.&lt;/p&gt;
&lt;p&gt;Even hardcoding a variable &lt;em&gt;once&lt;/em&gt; can be loose coupling, or using a command line flag over a variable. Loose coupling is about being able to change your mind without changing too much code.&lt;/p&gt;
&lt;p&gt;For example, Microsoft Windows has internal and external APIs for this very purpose. The external APIs are tied to the lifecycle of desktop programs, and the internal API is tied to the underlying kernel. Hiding these APIs away gives Microsoft flexibility without breaking too much software in the process.&lt;/p&gt;
&lt;p&gt;HTTP has examples of loose coupling too: Putting a cache in front of your HTTP server. Moving your images to a CDN and just changing the links to them. Neither breaks the browser.&lt;/p&gt;
&lt;p&gt;HTTP’s error codes are another example of loose coupling: common problems across web servers have unique codes. When you get a 400 error, doing it again will get the same result. A 500 may change. As a result, HTTP clients can handle many errors on the programmers behalf.&lt;/p&gt;
&lt;p&gt;How your software handles failure must be taken into account when decomposing it into smaller pieces. Doing so is easier said than done.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;I have decided, reluctantly to use L&lt;sup&gt;a&lt;/sup&gt;T&lt;sub&gt;e&lt;/sub&gt;X. &lt;em&gt;Making reliable distributed systems in the presence of software errors. Armstrong, 2003&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Erlang/OTP is relatively unique in how it chooses to handle failure: supervision trees. Roughly, each process in an Erlang system is started by and watched by a supervisor. When a process encounters a problem, it exits. When a process exits, it is restarted by the supervisor.&lt;/p&gt;
&lt;p&gt;(These supervisors are started by a bootstrap process, and when a supervisor encounters a fault, it is restarted by the bootstrap process)&lt;/p&gt;
&lt;p&gt;The key idea is that it is quicker to fail-fast and restart than it is to handle errors. Error handling like this may seem counter-intuitive, gaining reliability by giving up when errors happen, but turning things off-and-on again has a knack for suppressing transient faults.&lt;/p&gt;
&lt;p&gt;Error handling, and recovery are best done at the outer layers of your code base. This is known as the end-to-end principle. The end-to-end principle argues that it is easier to handle failure at the far ends of a connection than anywhere in the middle. If you have any handling inside, you still have to do the final top level check. If every layer atop must handle errors, so why bother handling them on the inside?&lt;/p&gt;
&lt;p&gt;Error handling is one of the many ways in which a system can be tightly bound together. There are many other examples of tight coupling, but it is a little unfair to single one out as being badly designed. Except for IMAP.&lt;/p&gt;
&lt;p&gt;In IMAP almost every each operation is a snowflake, with unique options and handling. Error handling is painful: errors can come halfway through the result of another operation.&lt;/p&gt;
&lt;p&gt;Instead of UUIDs, IMAP generates unique tokens to identify each message. These can change halfway through the result of an operation too. Many operations are not atomic. It took more than 25 years to get a way to move email from one folder to another that reliably works. There is a special UTF-7 encoding, and a unique base64 encoding too.&lt;/p&gt;
&lt;p&gt;I am not making any of this up.&lt;/p&gt;
&lt;p&gt;By comparison, both file systems and databases make much better examples of remote storage. With a file system, you have a fixed set of operations, but a multitude of objects you can operate on.&lt;/p&gt;
&lt;p&gt;Although SQL may seem like a much broader interface than a filesystem, it follows the same pattern. A number of operations on sets, and a multitude of rows to operate on. Although you can’t always swap out one database for another, it is easier to find something that works with SQL over any homebrew query language.&lt;/p&gt;
&lt;p&gt;Other examples of loose coupling are other systems with middleware, or filters and pipelines. For example, Twitter’s Finagle uses a common API for services, and this allows generic timeout handling, retry mechanisms, and authentication checks to be added effortlessly to client and server code.&lt;/p&gt;
&lt;p&gt;(I’m sure if I didn’t mention the UNIX pipeline here someone would complain at me)&lt;/p&gt;
&lt;p&gt;First we layered our code, but now some of those layers share an interface: a common set of behaviours and operations with a variety of implementations. Good examples of loose coupling are often examples of uniform interfaces.&lt;/p&gt;
&lt;p&gt;A healthy code base doesn’t have to be perfectly modular. The modular bit makes it way more fun to write code, in the same way that Lego bricks are fun because they all fit together. A healthy code base has some verbosity, some redundancy, and just enough distance between the moving parts so you won’t trap your hands inside.&lt;/p&gt;
&lt;p&gt;Code that is loosely coupled isn’t necessarily easy-to-delete, but it is much easier to replace, and much easier to change too.&lt;/p&gt;


&lt;p&gt;Being able to write new code without dealing with old code makes it far easier to experiment with new ideas. It isn’t so much that you should write microservices and not monoliths, but your system should be capable of supporting one or two experiments atop while you work out what you’re doing.&lt;/p&gt;
&lt;p&gt;Feature flags are one way to change your mind later. Although feature flags are seen as ways to experiment with features, they allow you to deploy changes without re-deploying your software.&lt;/p&gt;
&lt;p&gt;Google Chrome is a spectacular example of the benefits they bring. They found that the hardest part of keeping a regular release cycle, was the time it took to merge long lived feature branches in.&lt;/p&gt;
&lt;p&gt;By being able to turn the new code on-and-off without recompiling, larger changes could be broken down into smaller merges without impacting existing code. With new features appearing earlier in the same code base, it made it more obvious when long running feature developement would impact other parts of the code.&lt;/p&gt;
&lt;p&gt;A feature flag isn’t just a command line switch, it’s a way of decoupling feature releases from merging branches, and decoupling feature releases from deploying code. Being able to change your mind at runtime becomes increasingly important when it can take hours, days, or weeks to roll out new software. Ask any SRE: Any system that can wake you up at night is one worth being able to control at runtime.&lt;/p&gt;
&lt;p&gt;It isn’t so much that you’re iterating, but you have a feedback loop. It is not so much you are building modules to re-use, but isolating components for change. Handling change is not just developing new features but getting rid of old ones too. Writing extensible code is hoping that in three months time, you got everything right. Writing code you can delete is working on the opposite assumption.&lt;/p&gt;
&lt;p&gt;The strategies i’ve talked about — layering, isolation, common interfaces, composition — are not about writing good software, but how to build software that can change over time.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;The management question, therefore, is not whether to build a pilot system and throw it away. You will do that. […] Hence plan to throw one away; you will, anyhow. &lt;em&gt;Fred Brooks&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You don’t need to throw it all away but you will need to delete some of it. Good code isn’t about getting it right the first time. Good code is just legacy code that doesn’t get in the way.&lt;/p&gt;
&lt;p&gt;Good code is easy to delete.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Thank you to all of my proof readers for your time, patience, and effort.&lt;/p&gt;

&lt;h2&gt;Layering/Decomposition&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.cs.umd.edu%2Fclass%2Fspring2003%2Fcmsc838p%2FDesign%2Fcriteria.pdf&amp;amp;t=OThjMDY0NjY2MmZiMWQ5MzA1OGU4NjZlMzNlMGY1N2RiMGJmODRlOCxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;On the Criteria To Be Used in Decomposing Systems into Modules&lt;/a&gt;, D.L. Parnas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DaAb7hSCtvGw&amp;amp;t=OGFjODMxM2JmYzE3YzcyYjVkMTIyYzdhY2VkZTRmNGZmZTRmODUzMCxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;How To Design A Good API and Why it Matters&lt;/a&gt;, J. Bloch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww4.in.tum.de%2F%7Eblanchet%2Fapi-design.pdf&amp;amp;t=NzI2MzE0N2ZmYzU0MDQ2NTcwMGY4YTBiMWZmMGM0OTMyYTVkMjkyZCxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;The Little Manual of API Design&lt;/a&gt;, J. Blanchette.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DuqIx4VRIuwM&amp;amp;t=MWZiMmM5OTZkYjEyZTFmY2Y0ZDQ3ZWU5YzcxNzEyMzAwNDQyZTFiZCxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Python for Humans&lt;/a&gt;, K. Reitz.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.rand.org%2Fcontent%2Fdam%2Frand%2Fpubs%2Fnotes%2F2009%2FN3017.pdf&amp;amp;t=MjhmZmYwOTRlZTY2Y2U1NWI1YTZhMDJlMTEwZjUzMjMxN2IzNmZlYyxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;The Design of the MH Mail System&lt;/a&gt;, a Rand technical report.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.vitanuova.com%2Finferno%2Fpapers%2Fstyx.pdf&amp;amp;t=OGYzNDEyNGM0YjA2NGZhNzZjZTRmMGJiYjJkODhhOGIwYzQ1NjJiMSxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;The Styx Architecture for Distributed Systems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fmonkey.org%2F%7Emarius%2Ffunsrv.pdf&amp;amp;t=MWZmN2I0OTkzOTYxNmEzMGEzMzcyYWI2ZGJjZTA3NWFmNTk3YTZmYyxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Your Server as a Function&lt;/a&gt;, M. Eriksen.&lt;/p&gt;

&lt;h2&gt;Feedback loops/Operations lifecycle&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.slideshare.net%2FJolicloud%2Fchrome-release-cycle&amp;amp;t=MmRlYjk5MzZlOGMxZWQzZDMwMjYzOGViOTdkM2E0ZWE0OGU0MTFmZCxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Chrome Release Cycle&lt;/a&gt;, A. Laforge.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.hpl.hp.com%2Ftechreports%2Ftandem%2FTR-85.7.pdf&amp;amp;t=MzcxYzhkOGM4MmE2YWE3ZWJlMWI3MDk3N2Y0YTk2MzgxYWJhOGY1ZSxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Why Do Computers Stop and What Can Be Done About It?&lt;/a&gt;, J. Gray.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fweb.mit.edu%2F2.75%2Fresources%2Frandom%2FHow%2520Complex%2520Systems%2520Fail.pdf&amp;amp;t=ZWE1YWMyOGRkMWRiZWExNDE1OTNlYzJmNTdkZDRlZjhlOGZhNWE2OSxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;How Complex Systems Fail&lt;/a&gt;, R. I. Cook.&lt;/p&gt;

&lt;h2&gt;The technical is social before it is technical.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.systemsguild.com%2Fpdfs%2FDeMarcoNov2011.pdf&amp;amp;t=N2MyZmUyMDg2Njk5Y2E1ZWM5YzhmYzI5ODMxYjQ0ZGM5OWZiZmZjYixtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;All Late Projects Are the Same&lt;/a&gt;, &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.computer.org%2Fcms%2FComputer.org%2FComputingNow%2Fhomepage%2Fmostread%2FMostRead-SW-SoftwareEngineeringAnIdeaWhoseTimeHasCome.pdf&amp;amp;t=ZDlhZDcwOGI5MTc5MGRmYjJiYzYwNzFjZGY1N2EyY2I5MTJkN2U0ZSxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Software Engineering: An Idea Whose Time Has Come and Gone?&lt;/a&gt;, T. DeMarco.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.cs.yale.edu%2Fhomes%2Fperlis-alan%2Fquotes.html&amp;amp;t=NDhlZWY0YTM4OWVkMmJkMzlkOTkzZDkxMGQ4MDVlYzMzN2ZmZmQ5MixtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Epigrams in Programming&lt;/a&gt;, A. Perlis.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.melconway.com%2FHome%2FConways_Law.html&amp;amp;t=YzQ5MzU3MDJmNTZiZmZlYjA3NjQxNDRjMGM3NzU3MTlhMGI1NDUzZixtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;How Do Committees Invent?&lt;/a&gt;, M.E. Conway.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fwww.jofreeman.com%2Fjoreen%2Ftyranny.htm&amp;amp;t=NDA5MTYxYTA5ZDEzMTE1MmJhY2FhZmIwZWZhNTZlYWM2ZWM5YmYyYyxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;The Tyranny of Structurelessness&lt;/a&gt;, J. Freeman&lt;/p&gt;
&lt;h2&gt;Other posts I’ve written about software.&lt;/h2&gt;
&lt;p&gt;(Added 2019-07-22)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://programmingisterrible.com/post/176657481103/repeat-yourself-do-more-than-one-thing-and&quot;&gt;Repeat yourself, do more than one thing, and rewrite everything.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://programmingisterrible.com/post/162346490883/how-do-you-cut-a-monolith-in-half&quot;&gt;How do you cut a monolith in half?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://programmingisterrible.com/post/173883533613/code-to-debug&quot;&gt;Write code that’s easy to delete, and easy to debug too.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Contributed Translations&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fhabr.com%2Fen%2Fcompany%2Fpayonline%2Fblog%2F277629%2F&amp;amp;t=YWU3ZmQwZDEyMjM2M2FlNzUyZTVmZDAwODQwOGNhNjNhYTlmYWRlYSxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;Пишите код, который легко удалять, а не дополнять&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fblog.yongfengzhang.com%2Fcn%2Fblog%2Fwrite-code-that-is-easy-to-delete-not-easy-to%2F&amp;amp;t=ZWNmN2E4MzNkNDdmNWZkMGVjNDdjZWNjYTYyYmM0YjE4OTc3OGU4YyxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;要写易删除，而不是易扩展的代码&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fharfangk.github.io%2F2016%2F10%2F30%2Fwrite-code-that-is-easy-to-delete-not-easy-to-extend-ko.html&amp;amp;t=Njc1NDMyNGMwOWNkNDhmMmFkY2RmMThmNjE5N2FkZmRlOGM4NzM3NyxtMjBlanFUSQ%3D%3D&amp;amp;b=t%3AR8__CyVsuhT2p1wUlpbhjA&amp;amp;p=https%3A%2F%2Fprogrammingisterrible.com%2Fpost%2F139222674273%2Fwrite-code-that-is-easy-to-delete-not-easy-to&amp;amp;m=0&quot;&gt;확장하기 쉬운 코드가 아니라 삭제하기 쉬운 코드를 작성하자&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 22 Jul 2020 06:32:29 +0000</pubDate>
<dc:creator>pcr910303</dc:creator>
<og:title>Write code that is easy to delete, not easy to extend.</og:title>
<og:description>“Every line of code is written without reason, maintained out of weakness, and deleted by chance” Jean-Paul Sartre’s Programming in ANSI C. Every line of code written comes at a price: maintenance. To...</og:description>
<og:url>https://programmingisterrible.com/post/139222674273/write-code-that-is-easy-to-delete-not-easy-to</og:url>
<og:type>article</og:type>
<og:image>https://64.media.tumblr.com/avatar_b063f2c2fd26_512.pnj</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://programmingisterrible.com/post/139222674273/write-code-that-is-easy-to-delete-not-easy-to</dc:identifier>
</item>
</channel>
</rss>