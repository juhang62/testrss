<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Bootstrap 5 will remove jQuery as a dependency</title>
<link>https://github.com/twbs/bootstrap/pull/23586</link>
<guid isPermaLink="true" >https://github.com/twbs/bootstrap/pull/23586</guid>
<description>&lt;p&gt;Boostrap-Vue is quite interested in the jQuery free version of some of the plugins, as we might be able to direclty import some of these modues (or the classes), to replace some of our code.&lt;/p&gt;
&lt;p&gt;We have just finished porting ScrollSpy over to vanilla js (with some helper dom functions we have created).&lt;/p&gt;
&lt;p&gt;If you like, I could see if I can port our vanilla version to this branch as a PR (the main things to change would be the event signatures)&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 21:03:21 +0000</pubDate>
<dc:creator>bdcravens</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/1689750?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>v5 without jQuery by Johann-S · Pull Request #23586 · twbs/bootstrap</og:title>
<og:url>https://github.com/twbs/bootstrap/pull/23586</og:url>
<og:description>Plugins: Util (#23565) Alert (#23596) Button (#23600) Carousel (#23658) Collapse (#23958) Dropdown (#24099) Modal (#23955) Popover (#24014) ScrollSpy (#24879) Tab (#24094) Tooltip (#240...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/twbs/bootstrap/pull/23586</dc:identifier>
</item>
<item>
<title>1991 – a server-side web framework written in Forth</title>
<link>http://www.1-9-9-1.com/</link>
<guid isPermaLink="true" >http://www.1-9-9-1.com/</guid>
<description>&lt;div id=&quot;&quot;&gt;
&lt;p&gt;Getting started in &lt;strong&gt;1991&lt;/strong&gt; is easy.&lt;/p&gt;
&lt;p&gt;All you need to do is include &lt;code&gt;1991.fs&lt;/code&gt; into your Forth source file. Next, you can define your public routes using the &lt;code&gt;/1991&lt;/code&gt; word. Once your routes are all layed out, start the server using &lt;code&gt;1991:&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
\ app.fs
\ Load 1991.
include 1991.fs

\ Define our route handlers.
: handle-/ ( -- addr u )
    \ Any string returned by the handler
    \ will be output to the browser.
    s&quot; Hello, 1991.&quot; ;

\ Set up our routes.
/1991 / handle-/

\ Start the server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;p&gt;You can run the server using &lt;code&gt;gforth app.fs&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Logging In II: Logging In, Deeper&lt;/h2&gt;
&lt;h3&gt;Route Wildcards (Fuzzy Routing / URL Mapping)&lt;/h3&gt;
&lt;p&gt;If you want to specify that some part of a route is a wildcard (accepts any value), then you can wrap some named value in &lt;code&gt;&amp;lt;chevrons&amp;gt;&lt;/code&gt;. &lt;strong&gt;1991&lt;/strong&gt; will accept any URL that matches your wildcard pattern, setting the internal value of whatever you place between the chevrons to whatever is actually requested.&lt;/p&gt;
&lt;p&gt;In the example below, &lt;code&gt;&amp;lt;uid&amp;gt;&lt;/code&gt; specifies that we're willing to accept any (non-empty) value in its place which we'd like to access using the name &lt;code&gt;uid&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
\ wildcards.fs
\ Load 1991.
include 1991.fs

\ Define our route handler.
: handle-wildcard-route ( -- addr u )
    s&quot; contents of the route request: &quot; get-query-string s+ ;

\ Set up our route.
/1991 /users/&amp;lt;uid&amp;gt; handle-wildcard-route

\ We can set up multiple wildcards too (must be slash-separated).
/1991 /users/&amp;lt;uid&amp;gt;/posts/&amp;lt;pid&amp;gt; handle-wildcard-route

\ Start server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;p&gt;All wildcards are treated similar to query string arguments. As such, wildcards can be retrieved using &lt;code&gt;get-query-string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the example above, visiting &lt;code&gt;http://localhost:8080/users/urlysses&lt;/code&gt; will result in the following query string: &lt;code&gt;uid=urlysses&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;File Serving&lt;/h3&gt;
&lt;p&gt;Use a &lt;code&gt;public/&lt;/code&gt; directory to act as a basic fileserver. Whenever a requested URL doesn't resolve through the registered routes, &lt;strong&gt;1991&lt;/strong&gt; will attempt to find the requested route within your specified public directory.&lt;/p&gt;
&lt;pre&gt;
\ public.fs
\ Load 1991.
include 1991.fs

\ Specify the location of our public directory.
\ Anything in the public/ directory within the
\ same dir as this source file will resolve.
\ You can change &quot;public&quot; to anything you want
\ as long as it matches your directory name.
sourcedir s&quot; public&quot; s+ set-public-path

\ We can set mimetypes using the `filetype:` word.
\ In the case below, we want .mp4 files to be served
\ with the content-type video/mp4.
s&quot; video/mp4&quot; filetype: mp4

\ Start the server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;p&gt;In the above example, If we have a file &lt;code&gt;public/my-video.mp4&lt;/code&gt;, then it will be available through &lt;code&gt;http://localhost:8080/my-video.mp4&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Views&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1991&lt;/strong&gt; offers basic templating through views.&lt;/p&gt;
&lt;p&gt;In order to get started, you should specify the &lt;code&gt;views/&lt;/code&gt; path. Notice the trailing slash, which differs from how we define &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once you've specified your views/ directory, you can write views/ files to it. This can be any kind of file, honestly. The benefit offered by views/ is the ability to use basic templating. You can write any valid Forth code within opening (&lt;code&gt;&amp;lt;$&lt;/code&gt; ) and closing ( &lt;code&gt;$&amp;gt;&lt;/code&gt;) tags. Additionally, you can use the &lt;code&gt;import&lt;/code&gt; word to import other views into your view.&lt;/p&gt;
&lt;pre&gt;
\ views.fs
\ Load 1991.
include 1991.fs

\ Specify the location of our views directory.
sourcedir s&quot; views/&quot; s+ set-view-path

\ Define some words we'll use within
\ our view.
: page-title ( -- addr u )
    s&quot; Dynamic page title&quot; ;
: ten-lines ( -- )
    10 0 do
        s&quot; line &quot; i s&amp;gt;d  s+
        s&quot; &amp;lt;br&amp;gt;&quot; s+
        $type
    loop ;

\ Use render-view to output the contents
\ of a file in the views/ directory.
: handle-/
    s&quot; v-index.html&quot; render-view ;

/1991 / handle-/

\ Start the server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;pre&gt;
\ views/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
        &amp;lt;title&amp;gt;&amp;lt;$ page-title $type $&amp;gt;&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;$ ten-lines $&amp;gt;
        &amp;lt;$ s&quot; imported-view.html&quot; import $&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;pre&gt;
\ views/imported-view.html
It's possible to import view files from within other view files. This is from &amp;lt;code&amp;gt;views/imported-view.html&amp;lt;/code&amp;gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div id=&quot;&quot;&gt;
&lt;h2&gt;Why is &lt;code&gt;1991:&lt;/code&gt; post-fix when &lt;code&gt;/1991&lt;/code&gt; is pre-fix?&lt;/h2&gt;
&lt;p&gt;Forth is a (mostly) post-fix notation language. So, for example, you'd write two plus two as &lt;code&gt;2 2 +&lt;/code&gt;. This is the language's natural and immediate notation. Along those lines, &lt;code&gt;1991:&lt;/code&gt; is an immediate word——running it results in immediate action. As such, we use Forth's post-fix notation to set the port and start the server immediately. Alternately, &lt;code&gt;/1991&lt;/code&gt; doesn't exactly have immediate effect per se. All it does is tell &lt;strong&gt;1991&lt;/strong&gt; that any request to &lt;code&gt;/path&lt;/code&gt; should be handled by &lt;code&gt;path-handler&lt;/code&gt;. As such, we opt to write non-immediate code using pre-fix notation.&lt;/p&gt;
&lt;h2&gt;You're using Gforth, which came out in 1992. Also, it's 2017.&lt;/h2&gt;
&lt;p&gt;Okay. But Fredric Jameson establishes that in postmodernism we have experienced a weakening sense of historisity such that what is, what was, and what will be all exist as presents in time. &lt;a href=&quot;https://en.wikipedia.org/wiki/Forth_(programming_language)#History&quot;&gt;1970&lt;/a&gt;, &lt;a href=&quot;https://groups.google.com/forum/#!msg/alt.hypertext/eCTkkOoWTAY/bJGhZyooXzkJ&quot;&gt;1991&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gforth#History&quot;&gt;1992&lt;/a&gt;, and &lt;a href=&quot;http://www.1-9-9-1.com/&quot;&gt;2017&lt;/a&gt; all happen simultaneously. Hence developers working on new projects while still coding in decades-old text editors. They write the future in the past and are made present in so doing.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Tue, 12 Feb 2019 19:40:51 +0000</pubDate>
<dc:creator>ChrisArchitect</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.1-9-9-1.com/</dc:identifier>
</item>
<item>
<title>Two Large Chinese Borrowers Miss Bond Payments, Sources Say</title>
<link>https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments&quot;&gt;https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19145627&quot;&gt;https://news.ycombinator.com/item?id=19145627&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 211&lt;/p&gt;
&lt;p&gt;# Comments: 76&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 17:39:33 +0000</pubDate>
<dc:creator>docker_up</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=7d584080-2f22-11e9-9a0e-7124c6bb3e8c&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wMi0xMS90d28tbGFyZ2UtY2hpbmVzZS1ib3Jyb3dlcnMtYXJlLXNhaWQtdG8tbWlzcy1ib25kLXBheW1lbnRz</dc:identifier>
</item>
<item>
<title>The memory safety problem isn&amp;#039;t bad coders</title>
<link>https://medium.com/@sgrif/no-the-problem-isnt-bad-coders-ed4347810270</link>
<guid isPermaLink="true" >https://medium.com/@sgrif/no-the-problem-isnt-bad-coders-ed4347810270</guid>
<description>&lt;div class=&quot;uiScale uiScale-ui--regular uiScale-caption--regular u-flexCenter u-marginVertical24 u-fontSize15 js-postMetaLockup&quot;&gt;
&lt;div class=&quot;u-flex0&quot;&gt;&lt;a class=&quot;link u-baseColor--link avatar&quot; href=&quot;https://medium.com/@sgrif?source=post_header_lockup&quot; data-action=&quot;show-user-card&quot; data-action-source=&quot;post_header_lockup&quot; data-action-value=&quot;38fe29eb5d42&quot; data-action-type=&quot;hover&quot; data-user-id=&quot;38fe29eb5d42&quot; dir=&quot;auto&quot;&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/fit/c/100/100/1*kHWkccSEI7DBzFtkODv83g.jpeg&quot; class=&quot;avatar-image u-size50x50&quot; alt=&quot;Go to the profile of Sean Griffin&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p name=&quot;1f6f&quot; id=&quot;1f6f&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;A &lt;a href=&quot;https://www.zdnet.com/article/microsoft-70-percent-of-all-security-bugs-are-memory-safety-issues/&quot; data-href=&quot;https://www.zdnet.com/article/microsoft-70-percent-of-all-security-bugs-are-memory-safety-issues/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;recent blog article&lt;/a&gt; discussed the fact that 70% of all security bugs in Microsoft products are due to memory safety vulnerabilities. A lot of the comments I’ve seen on social media boil down to “The problem isn’t the use of a memory unsafe language, but that the programmers who wrote this code are bad.”&lt;/p&gt;
&lt;p name=&quot;61d9&quot; id=&quot;61d9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In this article, I’m going to look at a recent bug that was caught by the Rust compiler, which I think shows that not only is this assertion unreasonable but virtually impossible for reasons I haven’t seen discussed. While the example I’m going to give is about thread safety rather than memory safety, the arguments I’m going to present can be applied to both.&lt;/p&gt;
&lt;p name=&quot;cfdd&quot; id=&quot;cfdd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;First, let’s talk briefly about the actual bug. The code that I was working on had both a thread pool and a database connection pool. In order to do its work, I would need exactly one thread and at least one database connection. Database connections are likely to be the more limited resource, and I wanted to avoid spawning a thread and immediately just having it block waiting for a database connection. So the code would grab a connection from the pool and then spawn off the new thread.&lt;/p&gt;
&lt;p name=&quot;aef9&quot; id=&quot;aef9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The problem is that the database connection would sometimes use a re-entrant mutex when it was acquired from the pool. A re-entrant mutex is a concurrency primitive that ensures you are only using some resource on a single thread. The re-entrant part means that you can ask for a lock multiple times as long as it’s on the same thread. With a normal mutex we would be fine, since you only one lock can exist and it doesn’t matter if we unlock it on a thread other than the one we locked it from. But since a re-entrant mutex remembers which thread it was locked from, we need to keep the resource on the same thread. Fundamentally, we just can’t have a re-entrant mutex be involved and also be able to pull the connection from the pool on a different thread than it is being used.&lt;/p&gt;
&lt;p name=&quot;8c84&quot; id=&quot;8c84&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If the compiler hadn’t caught this for me, all scenarios would have been bad. The best case scenario is that it would have resulted in a test failure. Debugging “attempting to acquire a lock on this mutex hangs indefinitely” would have taken me several hours at least.&lt;/p&gt;
&lt;p name=&quot;4c2a&quot; id=&quot;4c2a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The worst case scenario here would have been that no tests failed. We had a case where we thought we had a resource which is not thread safe and could only be used on one thread, but there is actually another thread which could “acquire” a lock on it at any time. This is the sort of ticking time bomb that might not cause a bug at the time the code is written but leaves a massive hole for some other reasonable looking code to blow up in the future.&lt;/p&gt;
&lt;p name=&quot;1871&quot; id=&quot;1871&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But luckily, that’s not what happened here. The compiler told me that the mutex guard didn’t implement &lt;code class=&quot;markup--code markup--p-code&quot;&gt;Send&lt;/code&gt;, which is Rust’s way of saying “You can’t send this to another thread” at which point the problem became clear to me. At this point you might be thinking that this should have been obvious to me as soon as I started writing this code. I disagree with that assertion. But even if we assume that is true, I’ve left out one important detail which makes it baseless.&lt;/p&gt;
&lt;p name=&quot;222d&quot; id=&quot;222d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When this code was written, there were no re-entrant mutexes anywhere in the code base.&lt;/p&gt;
&lt;p name=&quot;8a80&quot; id=&quot;8a80&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This wasn’t caught when I finished writing the code. It was caught weeks later, when rebasing against the other changes of the codebase. The invariants of the code I was working with had fundamentally changed out from underneath me between when the code was written and when I was planning to merge it.&lt;/p&gt;
&lt;p name=&quot;a298&quot; id=&quot;a298&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Let me be clear, I disagree with the assertion that programmers can be expected to be perfect on its own. But the assertion that we just need better C programmers goes way farther than that. It’s not just a question of whether people can catch problems in code that they write. It’s also expecting people to be capable of re-contextualizing every invariant in any code they interact with (even indirectly). It sets the expectation that none of this changes between the time code is proposed and when it is merged.&lt;/p&gt;
&lt;p name=&quot;edf7&quot; id=&quot;edf7&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;These are not reasonable expectations of a human being. We need languages with guard rails to protect against these kinds of errors. Nobody is arguing that if we just had better drivers on the road we wouldn’t need seatbelts. We should not be making that argument about software developers and programming languages either.&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 16:54:13 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>No, the problem isn’t “bad coders” – Sean Griffin – Medium</og:title>
<og:url>https://medium.com/@sgrif/no-the-problem-isnt-bad-coders-ed4347810270</og:url>
<og:description>A recent blog article discussed the fact that 70% of all security bugs in Microsoft products are due to memory safety vulnerabilities. A…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@sgrif/no-the-problem-isnt-bad-coders-ed4347810270</dc:identifier>
</item>
<item>
<title>Vim Is Saving Me Hours of Work When Writing Books and Courses</title>
<link>https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses</link>
<guid isPermaLink="true" >https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;p class=&quot;post-meta&quot;&gt;Updated on February 12th, 2019 in &lt;a href=&quot;https://nickjanetakis.com/blog/tag/dev-environment-tips-tricks-and-tutorials&quot;&gt;#dev-environment,&lt;/a&gt; &lt;a href=&quot;https://nickjanetakis.com/blog/tag/linux-tips-tricks-and-tutorials&quot;&gt;#linux&lt;/a&gt;&lt;/p&gt;

&lt;img src=&quot;https://nickjanetakis.com/assets/blog/cards/vim-is-saving-me-hours-of-work-when-writing-books-and-courses-83544e804bc0e35c331ac04cea33cd6d8253d38b0927dc8ab54bdb90693bc393.jpg&quot; class=&quot;post-card&quot; width=&quot;750&quot; height=&quot;422&quot; alt=&quot;blog/cards/vim-is-saving-me-hours-of-work-when-writing-books-and-courses.jpg&quot;/&gt;&lt;h2 class=&quot;lead no-letterspacing&quot;&gt;When writing a book or course, you deal with hundreds of thousands of words and Vim helps you manage that in a sane way.&lt;/h2&gt;
&lt;p class=&quot;post-quick-jump&quot;&gt;&lt;strong&gt;Quick Jump:&lt;/strong&gt; &lt;a href=&quot;https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses#what-s-involved-with-creating-a-course&quot;&gt;What's Involved with Creating a Course?&lt;/a&gt; &lt;small&gt;|&lt;/small&gt; &lt;a href=&quot;https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses#dealing-with-file-names&quot;&gt;Dealing with File Names&lt;/a&gt; &lt;small&gt;|&lt;/small&gt; &lt;a href=&quot;https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses#adding-polish-to-screencasts-without-editing&quot;&gt;Adding Polish to Screencasts without Editing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As I get closer to finishing a course I’m working on, I try to think of ways to improve my workflow so that the next course is easier to create.&lt;/p&gt;
&lt;p&gt;That means evaluating everything from audio and video hardware, to code editors and even &lt;a href=&quot;https://nickjanetakis.com/blog/i-tried-linux-as-my-main-dev-environment-but-was-forced-back-to-windows&quot;&gt;operating systems&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This article is focused on organizing and dealing with large amounts of text&lt;/strong&gt;. This could apply to books, courses, notes or anything really.&lt;/p&gt;
&lt;p&gt;After having used terminal Vim + tmux together inside of WSL for the last 2 weeks I’m already more productive than with my previous VSCode set up.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nickjanetakis.com/blog/who-else-wants-to-boost-their-productivity-with-tmux&quot;&gt;tmux&lt;/a&gt; is especially useful for anyone who juggles multiple projects. I’m always switching between freelance dev work, my blog, open source projects, side projects and courses. Being able to hit a tmux hotkey to flip to any given project and have everything be immediately loaded and ready to go is awesome.&lt;/p&gt;
&lt;p&gt;I was doing that before with tmux and VSCode, but opening and moving around VSCode to the right size was always something I had to do manually.&lt;/p&gt;
&lt;p&gt;That might sound trivial, but it’s not. Every time you do it, it puts you into a negative mindset where you think &lt;em&gt;“sigh, now I have to visually organize this again”&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;One of the biggest drawbacks to Windows is how tedious it is to manage window layouts, which is funny given the OS is called Windows. Ever since I tried i3 as a window manager on Linux, I simply can’t go back to anything else.&lt;/p&gt;
&lt;p&gt;So for the last few weeks while writing my course I’ve been looking for ways to replicate as much as i3 as possible within Windows and using terminal Vim inside of WSL along with tmux gets me close for doing anything in a terminal.&lt;/p&gt;
&lt;p&gt;So that’s one of the main reasons why I chose to give Vim a shot. It wasn’t necessarily due to VSCode as an editor being too limiting, although I did eventually find it to be unsuitable after I really thought about improving my course creation workflow.&lt;/p&gt;

&lt;h3 id=&quot;whats-involved-with-creating-a-course&quot;&gt;What’s Involved with Creating a Course?&lt;/h3&gt;
&lt;p&gt;It’s a multi-month investment that is comparable to writing a book, except there’s additional complexity added because you’re not just writing something that people will read.&lt;/p&gt;
&lt;p&gt;For example, with a book, you have a table of contents, chapters and then text that belongs to each chapter. You can write your book in whatever format you prefer and then export it to PDF when you’re done. You only need to worry about what the PDF looks like.&lt;/p&gt;
&lt;p&gt;A course is pretty similar to that. It has a table of contents, sections and lessons. The sections are just a way to group up lessons, and the lessons are text based scripts that you plan to deliver on video.&lt;/p&gt;
&lt;p&gt;For example, the course I’m currently working on now has 24 sections and 158 lessons. Each of these lessons have about 2,000 words. There’s roughly 300,000 words of text and the course isn’t done yet.&lt;/p&gt;
&lt;p&gt;Each one of those lessons will eventually be turned into a video that’s anywhere between 2 and 20 minutes long. It really comes down to how many words were written for that lesson.&lt;/p&gt;
&lt;p&gt;So now let’s talk about some of the problems I deal with to organize this content.&lt;/p&gt;
&lt;p&gt;All of the below problems are in the context of what I was doing before I started using Vim and at the end I will go over how I addressed them with Vim.&lt;/p&gt;

&lt;h3 id=&quot;dealing-with-file-names&quot;&gt;Dealing with File Names&lt;/h3&gt;
&lt;p&gt;My current approach to all of this is to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt; folder for a specific course and inside of that folder I create individual folders for each section and in those section folders I have individual files for each lesson.&lt;/p&gt;
&lt;p&gt;It looks like this:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;├── 001-introduction-and-setup
│   ├── 001-welcome.txt
│   ├── 002-downloading-the-starter-files.txt
│   ├── 003-tooling-setup.txt
├── 002-foobar
│   ├── 004-example.txt
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In other words, I manually order each section and lesson with a number, and the lesson numbers don’t get reset for each section. It goes from 1 all the way until the last lesson.&lt;/p&gt;
&lt;p&gt;Things get even more interesting too because I also have a separate git repo that has numbered folders that match up to a specific lesson. It’s really important that the lesson numbers and the git repo folder numbers line up in the end.&lt;/p&gt;
&lt;p&gt;But, as you can probably see, this approach is terrible for when you need to add a lesson into the middle of the course. Imagine adding a lesson in after number 50 which is now 51. That means you need to manually increment every lesson after 50 by 1 which sucks.&lt;/p&gt;
&lt;p&gt;On that note, it’s nearly impossible to come up with a final table of contents up front for a course because the lessons aren’t possible to predict.&lt;/p&gt;
&lt;p&gt;I need to write the scripts and play with it as I go. I don’t even come up with a lesson’s title until I’m done writing it, and since the duration of the video is important, the number of words in the lesson really dictates when one lesson flows into the next.&lt;/p&gt;
&lt;p&gt;To help combat that problem right now what I typically do is create a single file for each section, write out all of the lesson scripts for that whole section and when I’m really happy with it then I break it up into manually numbered files.&lt;/p&gt;
&lt;p&gt;So that’s how I deal with things now. I number things manually and try to reduce the chances of having to add in lessons later. If I do have to add one in (which happened twice during this course so far), I bite the bullet and rename everything manually.&lt;/p&gt;
&lt;p&gt;Another pain point with this approach is if I want to change a lesson title, I need to go to the file system and change the file name manually. This might seem like a minor thing, but it adds friction to the writing process. It really does.&lt;/p&gt;
&lt;p&gt;Lastly, on a regular basis I’m always making sure that one lesson flows nicely into the next one, so if I’m working on lesson 5, I often open up lesson 4, scroll to the bottom of the file, read what I wrote and then make sure I start lesson 5 in a way that flows naturally. It’s a lot of jumping between files.&lt;/p&gt;
&lt;h4 id=&quot;potentially-solving-some-of-these-problems-with-my-existing-tools&quot;&gt;Potentially Solving Some of These Problems with My Existing Tools&lt;/h4&gt;
&lt;p&gt;I played around with the idea of not numbering them at all while keeping a separate YAML table of contents file around. Then I could write a little Python script to read in that TOC file and programatically number all of the sections and lessons when the course is done.&lt;/p&gt;
&lt;p&gt;I’m sure I could get that to work but now I need to keep a separate table of contents in sync with the actual files. Dealing with the file names themselves is annoying enough and this solution doesn’t address that. It just seems like adding more fuel to the fire.&lt;/p&gt;
&lt;p&gt;Although it is worth mentioning, unlike a book, a course isn’t just a single exported PDF file. I want people to be able to stream the course on my site, which means there needs to be a table of contents created within the course platform’s back-end.&lt;/p&gt;
&lt;p&gt;Ultimately that is what people will be interacting with, not these script files directly, so really these section folders and lesson files on my dev box don’t need to exist. They just need to be numbered so I can associate them to folder numbers in a git repo.&lt;/p&gt;
&lt;h4 id=&quot;ideal-solution-in-a-perfect-world&quot;&gt;Ideal Solution in a Perfect World&lt;/h4&gt;
&lt;p&gt;It would be really nice if I didn’t have to think about the ordering of the sections and lessons beyond what order they appear in the code editor.&lt;/p&gt;
&lt;p&gt;Basically, if I have a list of lessons like this:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Welcome&lt;/li&gt;
&lt;li&gt;Downloading the Starter Files&lt;/li&gt;
&lt;li&gt;Tooling Setup&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I only want to deal with the lesson titles in a human readable way and not deal with numbers. If I wanted to rename a lesson, it only gets renamed in that one spot and if I wanted to move a lesson down, I would only have to move the line down and the lesson numbers would get automatically updated.&lt;/p&gt;
&lt;p&gt;On that note, if I add a new lesson somewhere in between, all of the other lessons below it would get their numbers adjusted. This goes for section numbers too. But keep in mind, the lesson numbers would be indexed across all sections. Each section wouldn’t have its own separate index of lessons.&lt;/p&gt;
&lt;p&gt;I also don’t want to deal with manually having to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;tooling-setup.txt&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Another important thing is lesson isolation. If I click into or expand the Tooling Setup lesson, I only want to see that lesson’s text, but at the same time, maybe sometimes I would want to see the previous or next lesson’s text so I can quickly see how they start and end.&lt;/p&gt;
&lt;p&gt;With that said, it’s not just isolation to help keep me focused. It would be nice to be able to jump to the start, middle or end of the lesson and not have it apply to the entire section or course. Especially when searching for text.&lt;/p&gt;
&lt;p&gt;But on that note, being able to operate on the entire course’s text at times would be super handy. For example, I could search for phrases like “for example” to see how many times I’m saying that, and try to use alternative phrases to make things sound a bit less systematic.&lt;/p&gt;
&lt;p&gt;Truthfully I don’t read these scripts word for word when I deliver the video. They are mainly to help me organize my thoughts, but I do use them as a guide when recording the videos.&lt;/p&gt;
&lt;h4 id=&quot;solving-the-problem-with-vim&quot;&gt;Solving the Problem with Vim&lt;/h4&gt;
&lt;p&gt;I wrote the above ideal solution before I even knew what editor and tools I was going to use. I think this is a great way to discover not only what the problem is, but how you can solve it.&lt;/p&gt;
&lt;p&gt;One of the only technical books I ever read was &lt;a href=&quot;https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Computer_Programs&quot; target=&quot;_blank&quot;&gt;SICP&lt;/a&gt; (Structure and Interpretation of Computer Programs) and in that book they talk about a concept called “wishful thinking”.&lt;/p&gt;
&lt;p&gt;In the context of the book, they talk about designing your software under the assumption that certain libraries or functions will exist before you write them. This lets you focus on designing the API of your application and fill in the details later.&lt;/p&gt;
&lt;p&gt;That’s kind of what I did here, but in a different context.&lt;/p&gt;
&lt;h5 id=&quot;creating-one-massive-300000-word-file&quot;&gt;Creating one massive 300,000 word file:&lt;/h5&gt;
&lt;p&gt;I started to think about the problem in reference to my ideal solution. A big component of my overall problem was dealing with individual file names.&lt;/p&gt;
&lt;p&gt;So why not just eliminate the files in the first place and use 1 large file?&lt;/p&gt;
&lt;p&gt;I didn’t have a giant file to test this on but it only took a few seconds to create one based on the files I already had. I just opened a Bash prompt in WSL and ran &lt;code class=&quot;highlighter-rouge&quot;&gt;cat */*.txt &amp;gt; all.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now I had a 300,000 word markdown file that was roughly 1.5MB in size. I decided to try opening it with my existing VSCode set up and Vim. In both cases I kept plugins enabled and both editors had plugins to deal with markdown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Surprisingly enough VSCode&lt;/strong&gt; opened this file pretty quickly. It only took about 3 seconds and even typing into the file felt just as fast as a smaller file.&lt;/p&gt;
&lt;p&gt;However, just having the file open without doing anything used 50% of my overall CPU on an i5 3.2ghz quad core and jumped to 65% when typing.&lt;/p&gt;
&lt;p&gt;That’s not really going to cut it. This is a file I’m going to have open every day for months. It can’t overtake my entire computer. By the way, it also used 800MB of RAM but honestly I don’t mind that too much since I have 16GB of RAM.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So then I opened the same file in Vim&lt;/strong&gt;. Vim took about the same amount of time to open, but it used less than 10MB of RAM, 0% CPU when open and jumped to 3-4% CPU load when typing in the middle of the document.&lt;/p&gt;
&lt;p&gt;It felt just as fast to type into as it did with a smaller file. It even handled typing ** to start bold text with markdown and it was instant, even while it was bolding 300,000 words.&lt;/p&gt;
&lt;p&gt;That was a much better result than I could have asked for, especially since Vim is directly running inside of WSL which is known to be pretty slow. I imagine it would have been even faster on a native Linux system.&lt;/p&gt;
&lt;h5 id=&quot;setting-up-a-realistic-worst-case-scenario&quot;&gt;Setting up a realistic worst case scenario:&lt;/h5&gt;
&lt;p&gt;What if I had a 900,000 word file? There’s really no way I would end up with more than 500,000 words in a course but I figured it would be a good idea to see what happens.&lt;/p&gt;
&lt;p&gt;900,000 words took 10 seconds to open with Vim, but once I was in everything felt just as good as the 300,000 word file. There was about a half second delay going in and out of insert mode, but that was the only difference. RAM and CPU usage was roughly the same.&lt;/p&gt;
&lt;p&gt;In case you’re curious, VSCode performed about the same as it did with 300k words too. In this case, VSCode actually opened up the file quite a bit faster than Vim, but then again, this is 100% due to Vim running in WSL, while VSCode was running in Windows directly.&lt;/p&gt;
&lt;h5 id=&quot;navigating-around-sections-and-lessons-in-a-single-big-file&quot;&gt;Navigating around sections and lessons in a single big file:&lt;/h5&gt;
&lt;p&gt;There’s no point comparing VSCode anymore since I’m not going to be using it, so this will be focused specifically on Vim.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/plasticboy/vim-markdown&quot; target=&quot;_blank&quot;&gt;vim-markdown&lt;/a&gt; plugin is absolutely fantastic and really makes all of this doable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I’m someone who typically doesn’t like code folding, but code folding turned out to be the best thing ever&lt;/strong&gt; for this approach and the vim-markdown plugin has first class support for dealing with folding based on markdown headers.&lt;/p&gt;
&lt;p&gt;That means I can open the file with all folds closed, and then jump to the lesson I want to work on and unfold it within seconds. It works out beautifully.&lt;/p&gt;
&lt;p&gt;This plugin also supports jumping between headers using &lt;code class=&quot;highlighter-rouge&quot;&gt;[[&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;]]&lt;/code&gt;, so I can easily jump to previous and next lessons.&lt;/p&gt;
&lt;p&gt;Vim is also aware of how code folds work, so you can perform searches and manipulate text for only the folds that are open. This gives me everything I wanted from my ideal solution because if I want to act on the whole file, I can just hit a hotkey to unfold everything.&lt;/p&gt;
&lt;p&gt;Plus on top of all of that, there’s &lt;a href=&quot;https://github.com/junegunn/fzf.vim&quot; target=&quot;_blank&quot;&gt;fzf.vim&lt;/a&gt; which lets you fuzzy search lines in the buffer (among other things). It’s a superb choice for finding phrases. Seriously, &lt;a href=&quot;https://github.com/junegunn&quot;&gt;junegunn&lt;/a&gt; is an amazing author of developer productivity tools. He made FZF and a few other tools.&lt;/p&gt;
&lt;p&gt;Epic.&lt;/p&gt;
&lt;h5 id=&quot;numbering-sections-and-lessons&quot;&gt;Numbering sections and lessons:&lt;/h5&gt;
&lt;p&gt;The vim-markdown plugin also happens to have a handy command called &lt;code class=&quot;highlighter-rouge&quot;&gt;:Toc&lt;/code&gt; which will create an entire table of contents based on your headers. This TOC is generated in a separate buffer, and you can even click on the headers to jump to the area in the real markdown file.&lt;/p&gt;
&lt;p&gt;This behavior is pretty much exactly what I want. I don’t need to know the lesson numbers all the time. It’s only when I want to know the count, or want to tie a lesson number back into a git folder number outside of Vim.&lt;/p&gt;
&lt;p&gt;Currently the plugin doesn’t support numbering the headers in the TOC output, so I &lt;a href=&quot;https://github.com/plasticboy/vim-markdown/issues/413&quot; target=&quot;_blank&quot;&gt;opened an issue on GitHub&lt;/a&gt;, but this problem is solvable for now, it’s just a little less integrated.&lt;/p&gt;
&lt;p&gt;For example, all of my sections use &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; and all of my lessons use &lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt; so all it takes is a little Bash magic to parse the file. For example, you could grep through the file and pull out lines that start with &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; and now you have a list of all sections, etc..&lt;/p&gt;
&lt;p&gt;I haven’t come up with a perfect script yet but I’m 100% sure it’s possible and that’s all I care about for now. Who knows, by the time I finish my current course maybe the author of vim-markdown will build this into his plugin.&lt;/p&gt;
&lt;h5 id=&quot;improving-scroll-speed-in-large-files&quot;&gt;Improving scroll speed in large files:&lt;/h5&gt;
&lt;p&gt;In WSL I noticed with relative line numbers that scrolling around even small files with 100 lines was very slow. We’re talking multiple seconds of lag between scrolling and seeing the cursor move.&lt;/p&gt;
&lt;p&gt;It turns out relative line numbers were mostly to blame but I didn’t want to lose them. After applying both of the settings below, scrolling became fast again, even in a 900,000 word file. It was funny seeing a file with over 100,000 lines.&lt;/p&gt;
&lt;div class=&quot;language-vim highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; lazyredraw
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; regexpengine&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h5 id=&quot;speeding-up-code-folding&quot;&gt;Speeding up code folding:&lt;/h5&gt;
&lt;p&gt;By default code folding inside of the 300,000 word file was unbearably slow. Even just having the file open made it pretty much unusable but after a little bit of research I found a plugin that worked perfectly.&lt;/p&gt;
&lt;p&gt;Adding the &lt;a href=&quot;https://github.com/Konfekt/FastFold&quot;&gt;FastFold&lt;/a&gt; plugin to my vimrc instantly fixed the problem. It went from unusable to awesome. It basically changes when folds are updated.&lt;/p&gt;

&lt;h3 id=&quot;adding-polish-to-screencasts-without-editing&quot;&gt;Adding Polish to Screencasts without Editing&lt;/h3&gt;
&lt;p&gt;When it comes to creating courses on technical topics such as programming you find yourself spending a lot of time recording your code editor.&lt;/p&gt;
&lt;p&gt;This is where you’ll be looking at, writing and explaining code on video.&lt;/p&gt;
&lt;p&gt;When recording I often use a very large font size and a noticeable cursor so it’s easier to follow what I’m talking about but one thing I started to do recently was add in special effects to emphasis text after I record the video.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://nickjanetakis.com/assets/blog/post-production-highlight-text-e2ce658d64b02568810f4e27fc4bd0421a2d620ae9e220bc40aeb0af04a6cdb6.jpg&quot; data-action=&quot;zoom&quot; width=&quot;1920&quot; height=&quot;1080&quot; alt=&quot;blog/post-production-highlight-text.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;For example, after I record the video, during the editing phase I would often dim most of the screen and highlight a specific area of the code just to make it even more clear on what we’re talking about.&lt;/p&gt;
&lt;p&gt;I’ve gotten a lot of people say they really liked this effect, and a number of people have said my &lt;a href=&quot;https://diveintodocker.com/?utm_source=nj&amp;amp;utm_medium=website&amp;amp;utm_campaign=/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses&quot;&gt;Dive into Docker course&lt;/a&gt; was the highest production quality course they’ve ever taken.&lt;/p&gt;
&lt;p&gt;However, this production quality comes at a price. It takes a long time to go through hours of video and manually highlight the areas I want.&lt;/p&gt;
&lt;p&gt;It just so happens Vim has a plugin called &lt;a href=&quot;https://github.com/junegunn/limelight.vim&quot; target=&quot;_blank&quot;&gt;limelight.vim&lt;/a&gt; that lets you do this in real time. It is written by the same author who made FZF.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/fa4e9321be0b4a565ae84a66bae36e97545c101b/68747470733a2f2f7261772e6769746875622e636f6d2f6a756e6567756e6e2f692f6d61737465722f6c696d656c696768742e676966&quot; alt=&quot;Limelight&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It automatically highlights the area where your cursor is, and you can tweak things like the dimmed color and opacity so you can make it look great with any color theme.&lt;/p&gt;
&lt;p&gt;This means I can turn on limelight and not have to manually add dims and highlights to the screen in post production editing. This alone saves hours. At the moment VSCode has nothing like this, but I imagine it could be made. I know there’s an Emacs port of it.&lt;/p&gt;
&lt;p&gt;I’m going to give that a shot when I’m ready to record my upcoming course.&lt;/p&gt;
&lt;p&gt;In the end, I’m really happy to have given Vim a second chance. I wrote it off a long time ago but now it’s chalking up to be one of the most important tools in my tool chain to write code and create courses. Expect more Vim posts to come in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What Vim tips do you have for writing? Let me know below.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;Like you, I'm super protective of my inbox, so don't worry about getting spammed. You can expect a few emails per month (at most), and you can 1-click unsubscribe at any time. &lt;a href=&quot;https://nickjanetakis.com/newsletter&quot;&gt;See what else you'll get&lt;/a&gt; too.&lt;/p&gt;</description>
<pubDate>Tue, 12 Feb 2019 14:48:22 +0000</pubDate>
<dc:creator>nickjj</dc:creator>
<og:type>article</og:type>
<og:title>Vim Is Saving Me Hours of Work When Writing Books &amp; Courses</og:title>
<og:description>When writing a book or course, you deal with hundreds of thousands of words and Vim helps you manage that in a sane way.</og:description>
<og:url>https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses</og:url>
<og:image>https://nickjanetakis.com/assets/blog/cards/vim-is-saving-me-hours-of-work-when-writing-books-and-courses-83544e804bc0e35c331ac04cea33cd6d8253d38b0927dc8ab54bdb90693bc393.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nickjanetakis.com/blog/vim-is-saving-me-hours-of-work-when-writing-books-and-courses</dc:identifier>
</item>
<item>
<title>CERN day 1: rebuilding the first web browser</title>
<link>https://remysharp.com/2019/02/12/cern-day-1</link>
<guid isPermaLink="true" >https://remysharp.com/2019/02/12/cern-day-1</guid>
<description>&lt;p&gt;This marks the beginning of a week long adventure in Geneva Switzerland at CERN, to work on a hack project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://remysharp.com/images/cern-2019/badge.jpg&quot; alt=&quot;my badge&quot; width=&quot;680&quot; height=&quot;451&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The project is to rebuilding the very first web browser, aptly called WorldWideWeb (though shortly thereafter being renamed to Nexus, since…the whole world wide web thing being a bigger deal). This browser was written by Sir Tim Berners-Lee in 1990 and the project marks the 30th anniversary of the web.&lt;/p&gt;
&lt;p&gt;This event also reunites most of the team that made up the 2013 hack project to recreate the Line Mode Browser. On being asked if I was interested in returning, I jumped at the chance. It's CERN. There's some proper smarties rolling around here. Maybe some of that will rub off on me!&lt;/p&gt;
&lt;p&gt;The project is a quasi historical restoration mixed with simulation as we bring the original browser to the public via modern technology, specifically and ironically, via today's browsers.&lt;/p&gt;
&lt;h2&gt;Day 1&lt;/h2&gt;
&lt;p&gt;The first day is always a lot of finding our feet. Trying to articulate (to ourselves) what the scope of the problem is, what we need to achieve and what we &lt;em&gt;want&lt;/em&gt; to achieve.&lt;/p&gt;
&lt;p&gt;This time around is made a little trickier (or interesting?) as there's more mixed overlap in arrivals of team members. It'll only be a single day on Wednesday that we'll be at full capacity, but compared to 2013's efforts, we have a full week to pull the job off rather than 3 days.&lt;/p&gt;
&lt;h2&gt;The WorldWideWeb&lt;/h2&gt;
&lt;p&gt;The aim of the morning is to grasp exactly &lt;em&gt;what&lt;/em&gt; this browser did, how it did it, and what it looked like.&lt;/p&gt;
&lt;p&gt;We've sourced &lt;a href=&quot;https://www.youtube.com/watch?v=3c3Rt6QbHDw&quot;&gt;videos&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=XAF0xdIiI20&amp;amp;feature=youtu.be&quot;&gt;emulators&lt;/a&gt; and most importantly, and impressively, a &lt;a href=&quot;https://en.m.wikipedia.org/wiki/NeXTcube&quot;&gt;NeXTcube&lt;/a&gt; machine straight from the museum has been delivered to our (war room?…I want to say war room, but there's not much fighting going on…) room.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://remysharp.com/images/cern-2019/nextcube.jpg&quot; alt=&quot;NeXTcube&quot; width=&quot;680&quot; height=&quot;510&quot;/&gt;&lt;/p&gt;
&lt;p&gt;One of the main challenges we faced (and still face at time of writing) is that we want the WorldWideWeb to run on the NeXTcube - and oddly this machine has a number of browsers, but none of them are the WorldWideWeb :-\&lt;/p&gt;
&lt;p&gt;Somehow we'll deliver the WorldWideWeb.app directly to the machine…if only we could work out how to network the machine…&lt;/p&gt;
&lt;h2&gt;Simulation&lt;/h2&gt;
&lt;p&gt;My role in the team is code. Firstly the server side aspect to the simulation. Then once that's solved, any interaction in the browser where we'll simulate the NeXTcube desktop and opening windows to the WorldWideWeb.&lt;/p&gt;
&lt;p&gt;The server part is relatively small and involves:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Proxying requests to collect HTML and return it the client&lt;/li&gt;
&lt;li&gt;Blocking all internal .cern.ch sites with a handful of whitelisted exceptions&lt;/li&gt;
&lt;li&gt;In the returned HTML, strip out any unsupported tags (like &lt;code&gt;IMG&lt;/code&gt; which appeared later in &lt;a href=&quot;https://en.m.wikipedia.org/wiki/Mosaic_(web_browser&quot;&gt;Mosaic&lt;/a&gt; - TIL: was named because it would fit together pieces like HTTP, FTP, Gopher and NNTP).&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This part was partially lifted from the original &lt;a href=&quot;https://github.com/cern-hackdays/lmb&quot;&gt;Line Mode Browser source&lt;/a&gt; and cleaned up for the 5½ years worth of new knowledge I had :)&lt;/p&gt;
&lt;p&gt;Then on with some traditional fondue with our team and some rest when tomorrow we might try to make some of the &lt;abbr title=&quot;user interface&quot;&gt;UI&lt;/abbr&gt; come together.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://remysharp.com/images/cern-2019/fondue.jpg&quot; alt=&quot;Fondue&quot; width=&quot;680&quot; height=&quot;510&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;metadata&quot;&gt;Posted 12-Feb 2019 under personal.&lt;/p&gt;
&lt;footer class=&quot;follow update&quot;&gt;&lt;div id=&quot;subscribe-form&quot; data-ck-version=&quot;6&quot; class=&quot;row ck_form_container ck_inline&quot; readability=&quot;9.0037313432836&quot;&gt;
&lt;div class=&quot;c2 s1&quot; readability=&quot;12.638888888889&quot;&gt;
&lt;h4 id=&quot;want-more&quot; class=&quot;ck_form_title&quot;&gt;Want more?&lt;/h4&gt;
&lt;p&gt;Posts, web development learnings &amp;amp; insights, exclusive workshop and training discounts and more, direct to your inbox.&lt;/p&gt;
&lt;p&gt;&lt;small class=&quot;ck_guarantee&quot;&gt;I won't send you any spam, and you can unsubscribe at any time. &lt;a href=&quot;https://convertkit.com/?utm_campaign=poweredby&quot; class=&quot;ck_powered_by&quot;&gt;Powered by ConvertKit&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/footer&gt;</description>
<pubDate>Tue, 12 Feb 2019 12:54:53 +0000</pubDate>
<dc:creator>D_Guidi</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://remysharp.com/2019/02/12/cern-day-1</dc:identifier>
</item>
<item>
<title>A tiny Swiss company thinks it can help stop climate change</title>
<link>https://www.nytimes.com/2019/02/12/magazine/climeworks-business-climate-change.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2019/02/12/magazine/climeworks-business-climate-change.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;strong class=&quot;css-8qgvsz ebyp5n10&quot;&gt;&lt;span class=&quot;css-ggqk20 ethc9we0&quot;&gt;J&lt;/span&gt;&lt;/strong&gt;ust over a century ago in Ludwigshafen, Germany, a scientist named Carl Bosch assembled a team of engineers to exploit a new technique in chemistry. A year earlier, another German chemist, Fritz Haber, hit upon a process to pull nitrogen (N) from the air and combine it with hydrogen (H) to produce tiny amounts of ammonia (NH₃). But Haber’s process was delicate, requiring the maintenance of high temperatures and high pressure. Bosch wanted to figure out how to adapt Haber’s discovery for commercial purposes — as we would say today, to “scale it up.” Anyone looking at the state of manufacturing in Europe around 1910, Bosch observed, could see that the task was daunting: The technology simply didn’t exist.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Over the next decade, however, Bosch and his team overcame a multitude of technological and metallurgical challenges. He chronicled them in his 1932 acceptance speech for the Nobel Prize for Chemistry — an honor he won because the Haber-Bosch process, as it came to be known, changed the world. His breakthrough made possible the production of ammonia on an industrial scale, providing the world with cheap and abundant fertilizer. The scientist and historian Vaclav Smil called Haber-Bosch “the most important technical invention of the 20th century.” Bosch had effectively removed the historical bounds on crop yields, so much so that he was widely credited with making “bread from air.” By some estimates, Bosch’s work made possible the lives of more than two billion human beings over the last 100 years.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;What the Haber-Bosch method had going for it, from the very start, was a ready market. Fertilizer was already in high demand, but it came primarily from limited natural reserves in far-flung locales — bird droppings scraped from remote islands near Peru, for instance, or mineral stores of nitrogen dug out of the Chilean desert. Because synthetic ammonia competed with existing products, it was able to follow a timeworn pattern of innovation. In much the same way that LEDs have supplanted fluorescent and incandescent bulbs (which in turn had displaced kerosene lamps and wax candles), a novel product or process often replaces something already in demand. If it is better or cheaper — and especially if it is better &lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;and&lt;/em&gt; cheaper — it usually wins in the marketplace. Haber-Bosch did exactly that.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;It may now be that another gas — carbon dioxide (CO₂) — can be removed from the air for commercial purposes, and that its removal could have a profound effect on the future of humanity. But it’s almost certainly too soon to say for sure. One sunny morning last October, several engineers from a Swiss firm called Climeworks ambled onto the roof of a power-generating waste-incineration plant in Hinwil, a village about 30 minutes outside Zurich. The technicians had in front of them 12 large devices, stacked in two rows of six, that resembled oversize front-loading clothes dryers. These were “direct air capture” machines, which soon would begin collecting carbon dioxide from air drawn in through their central ducts. Once trapped, the CO₂ would then be siphoned into large tanks and trucked to a local Coca-Cola bottler, where it would become the fizz in a soft drink.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2017/04/18/magazine/is-it-ok-to-engineer-the-environment-to-fight-climate-change.html?module=inline&quot; title=&quot;&quot;&gt;[Is It O.K. to Tinker With the Environment to Fight Climate Change?]&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The machines themselves require a significant amount of energy. They depend on electric fans to pull air into the ducts and over a special material, known as a sorbent, laced with granules that chemically bind with CO₂; periodic blasts of heat then release the captured gas from the sorbent, with customized software managing the whole catch-and-release cycle. Climeworks had installed the machines on the roof of the power plant to tap into the plant’s low-carbon electricity and the heat from its incineration system. A few dozen yards away from the new installation sat an older stack of Climeworks machines, 18 in total, that had been whirring on the same rooftop for more than a year. So far, these machines had captured about 1,000 metric tons (or about 1,100 short tons) of carbon dioxide from the air and fed it, by pipeline, to an enormous greenhouse nearby, where it was plumping up tomatoes, eggplants and mâche. During a tour of the greenhouse, Paul Ruser, the manager, suggested I taste the results. “Here, try one,” he said, handing me a crisp, ripe cucumber he plucked from a nearby vine. It was the finest direct-air-capture cucumber I’d ever had.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Climeworks’s rooftop plant represents something new in the world: the first direct-air-capture venture in history seeking to sell CO₂ by the ton. When the company’s founders, Christoph Gebald and Jan Wurzbacher, began openly discussing their plans to build a business several years ago, they faced a deluge of skepticism. “I would say nine out of 10 people reacted critically,” Gebald told me. “The first thing they said was: ‘This will never work technically.’ And finally in 2017 we convinced them it works technically, since we built the big plant in Hinwil. But once we convinced them that it works technically, they would say, ‘Well, it will never work economically.’ ”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;For the moment, skeptics of Climeworks’s business plan are correct: The company is not turning a profit. To build and install the 18 units at Hinwil, hand-assembled in a second-floor workshop in Zurich, cost between $3 million and $4 million, which is the primary reason it costs the firm between $500 and $600 to remove a metric ton of CO₂ from the air. Even as the company has attracted about $50 million in private investments and grants, it faces the same daunting task that confronted Carl Bosch a century ago: How much can it bring costs down? And how fast can it scale up?&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Gebald and Wurzbacher believe the way to gain a commercial foothold is to sell their expensive CO₂ to agriculture or beverage companies. Not only do these companies require CO₂ anyway, some also seem willing to pay a premium for a vital ingredient they can use to help market their products as eco-friendly.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Still, greenhouses and soda bubbles together represent a small global market — perhaps six million metric tons of CO₂ annually. And Gebald and Wurzbacher did not get into carbon capture to grow mâche or put bubbles in Fanta. They believe that over the next seven years they can bring expenses down to a level that would enable them to sell CO₂ into more lucrative markets. Air-captured CO₂ can be combined with hydrogen and then fashioned into any kind of fossil-fuel substitute you want. Instead of making bread from air, you can make fuels from air. Already, Climeworks and another company, Carbon Engineering, which is based in British Columbia, have moved aggressively on this idea; the Canadians have even lined up investors (including Bill Gates) to produce synthetic fuel at large industrial plants from air-captured CO₂.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The ultimate goal for air capture, however, isn’t to turn it into a product — at least not in the traditional sense. What Gebald and Wurzbacher really want to do is to pull vast amounts of CO₂ out of the atmosphere and bury it, forever, deep underground, and sell that service as an offset. Climeworks’s captured CO₂ has already been injected deep into rock formations beneath Iceland; by the end of the year, the firm intends to deploy 50 units near Reykjavik to expand the operation. But at that point the company will be moving into uncharted economic territory — purveyors of a service that seems desperately needed to help slow climate change but does not, at present, replace anything on the consumer or industrial landscape. To complicate matters, a ton of buried CO₂ is not something that human beings or governments have shown much demand for. And so companies like Climeworks face a quandary: How do you sell something that never existed before, something that may never be cheap, into a market that is not yet real?&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;

&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;strong class=&quot;css-8qgvsz ebyp5n10&quot;&gt;Even the most&lt;/strong&gt; enthusiastic believers in direct air capture stop short of describing it as a miracle technology. It’s more frequently described as an old idea — “scrubbers” that remove CO₂ have been used in submarines since at least the 1950s — that is being radically upgraded for a variety of new applications. It’s arguably the case, in fact, that when it comes to reducing our carbon emissions, direct air capture will be seen as an option that’s too expensive and too modest in impact. “The only way that direct air capture becomes meaningful is if we do all the other things we need to do promptly,” Hal Harvey, a California energy analyst who studies climate-friendly technologies and policies, told me recently. Harvey and others make the case that the biggest, fastest and cheapest gains in addressing atmospheric carbon will come from switching our power grid to renewable energy or low-carbon electricity; from transitioning to electric vehicles and imposing stricter mileage regulations on gas-powered cars and trucks; and from requiring more energy-efficient buildings and appliances. In short, the best way to start making progress toward a decarbonized world is not to rev up millions of air capture machines right now. It’s to stop putting CO₂ in the atmosphere in the first place.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The future of carbon mitigation, however, is on a countdown timer, as atmospheric CO₂ concentrations have continued to rise. If the nations of the world were to continue on the current track, it would be impossible to meet the objectives of the 2016 Paris Agreement, which set a goal limiting warming to 2 degrees Celsius or, ideally, 1.5 degrees. And it would usher in a world of misery and economic hardship. Already, temperatures in some regions have climbed more than 1 degree Celsius, as a report by the Intergovernmental Panel on Climate Change noted last October. These temperature increases have led to an increase in droughts, heat waves, floods and biodiversity losses and make the chaos of 2 or 3 degrees’ additional warming seem inconceivable. A further problem is that maintaining today’s emissions path for too long runs the risk of doing irreparable damage to the earth’s ecosystems — causing harm that no amount of technological innovation can make right. “There is no reverse gear for natural systems,” Harvey says. “If they go, they go. If we defrost the tundra, it’s game over.” The same might be said for the Greenland and West Antarctic ice sheets, or our coral reefs. Such resources have an asymmetry in their natural architectures: They can take thousands or millions of years to form, but could reach conditions of catastrophic decline in just a few decades.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;At the moment, global CO₂ emissions are about 37 billion metric tons per year, and we’re on track to raise temperatures by 3 degrees Celsius by 2100. To have a shot at maintaining a climate suitable for humans, the world’s nations most likely have to reduce CO₂ emissions drastically from the current level — to perhaps 15 billion or 20 billion metric tons per year by 2030; then, through some kind of unprecedented political and industrial effort, we need to bring carbon emissions to zero by around 2050. In this context, Climeworks’s effort to collect 1,000 metric tons of CO₂ on a rooftop near Zurich might seem like bailing out the ocean one bucket at a time. Conceptually, however, it’s important. Last year’s I.P.C.C. report noted that it may be impossible to limit warming to 1.5 degrees by 2100 through only a rapid switch to clean energy, electric cars and the like. To preserve a livable environment we may also need to extract CO₂ from the atmosphere. As Wurzbacher put it, “if you take all these numbers from the I.P.C.C., you end up with something like eight to 10 billion tons — gigatons — of CO₂ that need to be removed from the air every year, if we are serious about 1.5 or 2 degrees.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;There happens to be a name for things that can do this kind of extraction work: negative-emissions technologies, or NETs. Some NETs, like trees and plants, predate us and probably don’t deserve the label. Through photosynthesis, our forests take extraordinary amounts of carbon dioxide from the atmosphere, and if we were to magnify efforts to reforest clear-cut areas — or plant new groves, a process known as afforestation — we could absorb billions more metric tons of carbon in future years. What’s more, we could grow crops specifically to absorb CO₂ and then burn them for power generation, with the intention of capturing the power-plant emissions and pumping them underground, a process known as bioenergy with carbon capture and storage, or BECCS. Other negative-emissions technologies include manipulating farmland soil or coastal wetlands so they will trap more atmospheric carbon and grinding up mineral formations so they will absorb CO₂ more readily, a process known as “enhanced weathering.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Negative emissions can be thought of as a form of time travel. Ever since the Industrial Revolution, human societies have produced an excess of CO₂, by taking carbon stores from deep inside the earth — in the form of coal, oil and gas — and from stores aboveground (mostly wood), then putting it into the atmosphere by burning it. It has become imperative to reverse the process — that is, take CO₂ out of the air and either restore it deep inside the earth or contain it within new surface ecosystems. This is certainly easier to prescribe than achieve. “All of negative emission is hard — even afforestation or reforestation,” Sally Benson, a professor of energy-resources engineering at Stanford, explains. “It’s not about saying, ‘I want to plant a tree.’ It’s about saying, ‘We want to plant a billion trees.’ ” Nevertheless, such practices offer a glimmer of hope for meeting future emissions targets. “We have to come to grips with the fact that we waited too long and that we took some options off the table,” Michael Oppenheimer, a Princeton scientist who studies climate and policy, told me. As a result, NETs no longer seem to be just interesting ideas; they look like necessities. And as it happens, the Climeworks machines on the rooftop do the work each year of about 36,000 trees.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Last fall, the National Academies of Sciences, Engineering and Medicine published a lengthy study on carbon removal. Stephen Pacala, a Princeton professor who led the authors, pointed out to me that negative-emissions technologies have various strengths and drawbacks, and that a “portfolio” approach — pursue them all, then see which are the best — may be the shrewdest bet. If costs for direct air capture can be reduced, Pacala says he sees great promise, especially if the machines can offset emissions from economic sectors that for technological reasons will transition to zero carbon much more slowly than others. Commercial aviation, for instance, won’t be converted to running on solar power anytime soon. Jennifer Wilcox, a chemical-engineering professor at Worcester Polytechnic Institute, in Massachusetts, told me that air capture could likewise help counter the impact of several vital industries. “There are process emissions that come from producing iron and steel, cement and glass,” she says, “and any time you make these materials, there’s a chemical reaction that emits CO₂.” Direct air capture could even lessen the impacts of the Haber-Bosch processes for making fertilizer; by some estimates, that industry now accounts for 3 percent of all CO₂ emissions.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Pacala equates the challenges confronting Climeworks and Carbon Engineering to what the wind- and solar-power industries faced in the 1970s and ’80s, when their products were expensive compared with fossil fuels. Those industries couldn’t rely on demand from the private sector alone. But some policymakers perceived tremendous environmental and public benefits if they could surmount that hurdle. Government investments in research, along with state and federal tax credits, helped the young industries expand. “Wind and solar are now the cheapest forms of energy in the right locations,” Pacala says. “The return on those investments, if you calculated it, would blow the doors off anything in your portfolio. It’s like investing in early Apple. So it’s a spectacular story of success. And direct air capture is precisely the same kind of problem, in which the only barrier is that it’s too costly.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/interactive/2018/08/01/magazine/climate-change-losing-earth.html?module=inline&quot; title=&quot;&quot;&gt;[Thirty years ago, we had a chance to save the planet. Read about the decade we almost stopped climate change.]&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;strong class=&quot;css-8qgvsz ebyp5n10&quot;&gt;Most of Climeworks’s&lt;/strong&gt; 60 employees work in a big industrial space in downtown Zurich, on two floors of a low-slung building that the company sublets from a German aerospace firm. Manufacturing operations are on the ground floor; the research labs are upstairs, along with a small suite of shared offices, a hallway kitchen and a hangout area. The place has the stark, casual feel of a tech start-up, with one exception: The walls are lined with oversize photos of pivotal moments in Climeworks’s young history — its ungainly early prototypes; the opening of the first Hinwil plant that collected CO₂ for the greenhouse.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“It’s a little bit by accident that we are based in Switzerland,” Wurzbacher told me. He and Gebald both grew up in Germany and met as undergraduates at E.C.H., the Swiss Federal Institute of Technology, in Zurich. “We met on Day 1, on the 20th of October of 2003,” Gebald recalled. “And on Day 1 we decided that we’d have a company.” Their aspiration was to be entrepreneurs, not to start a carbon-capture firm, but both men were drawn to research on renewable energy and reducing emissions. After they completed their master’s projects, they decided to create a direct-air-capture prototype and go into business. Both took the title of company director. Helped by a number of small grants, Climeworks was incorporated in 2009.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The two men were not alone in trying to chip away at decades of carbon emissions. An American start-up, Global Thermostat, now finishing its first commercial plant in Alabama, began working on air-capture machines in 2010. And almost from the start, Gebald and Wurzbacher found themselves in a friendly competition with David Keith, the Harvard engineering professor who had just started Carbon Engineering in British Columbia. Keith’s company settled on a different air-capture technology — employing a higher-heat process, and a liquid solution to capture CO₂ — to brew synthetic fuels. Climeworks’s big advantage is that it can make smaller plants early, Keith told me: “I am crazy jealous. It’s because they’re using a modular design, and we’re not.” On the other hand, Keith said he believes his firm is closer to building a big plant that could capture carbon at a more reasonable cost and produce substantial amounts of fuel. “I don’t see a path for them to match this.” Gebald told me he thinks his and Keith’s companies will each succeed with differing approaches. For now, what all the founders have in common is a belief that the cost of capturing a ton of carbon will soon drop sharply.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div data-testid=&quot;photoviewer-wrapper&quot; class=&quot;css-79elbk ehw59r11&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r111&quot;&gt;
&lt;div class=&quot;css-1xdhyk6 erfvjey0&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Image&lt;/span&gt;&lt;img alt=&quot;&quot; class=&quot;css-1m50asq&quot; src=&quot;https://static01.nyt.com/images/2019/02/17/magazine/17mag-climeworks-image2/17mag-climeworks-image2-articleLarge-v2.png?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot; srcset=&quot;https://static01.nyt.com/images/2019/02/17/magazine/17mag-climeworks-image2/17mag-climeworks-image2-articleLarge-v2.png?quality=90&amp;amp;auto=webp 600w,https://static01.nyt.com/images/2019/02/17/magazine/17mag-climeworks-image2/17mag-climeworks-image2-jumbo-v2.png?quality=90&amp;amp;auto=webp 1024w,https://static01.nyt.com/images/2019/02/17/magazine/17mag-climeworks-image2/17mag-climeworks-image2-superJumbo-v2.png?quality=90&amp;amp;auto=webp 2048w&quot; sizes=&quot;((min-width: 600px) and (max-width: 1004px)) 84vw, (min-width: 1005px) 60vw, 100vw&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2019/02/17/magazine/17mag-climeworks-image2/17mag-climeworks-image2-articleLarge-v2.png?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;css-i48y28 e13ogyst0&quot;&gt;The greenhouse in Hinwil where Climeworks uses carbon dioxide pulled from the air to grow fruits and vegetables.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-nt1l96 e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;Luca Locatelli for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Their view is not always shared by outside observers. M.I.T.’s Howard Herzog, for instance, an engineer who has spent years looking at the potential for these machines, told me that he thinks the costs will remain between $600 and $1,000 per metric ton. Some of Herzog’s reasons for skepticism are highly technical and relate to the physics of separating gases. Some are more easily grasped. He points out that because direct-air-capture machines have to move tremendous amounts of air through a filter or solution to glean a ton of CO₂ — the gas, for all its global impact, makes up only about 0.04 percent of our atmosphere — the process necessitates large expenditures for energy and big equipment. What he has likewise observed, in analyzing similar industries that separate gases, suggests that translating spreadsheet projections for capturing CO₂ into real-world applications will reveal hidden costs. “I think there has been a lot of hype about this, and it’s not going to revolutionize anything,” he told me, adding that he thinks other negative-emissions technologies will prove cheaper. “At best it’s going to be a bit player.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Last year, when David Keith and his associates at Carbon Engineering published figures projecting that their carbon-capture technology could bring costs as low as $94 a metric ton, Herzog was not convinced. Keith nevertheless made the case to me that two new investors in Carbon Engineering — Chevron Technology Ventures and a subsidiary of Occidental Petroleum — scrutinized his company’s numbers to an exhaustive degree and agreed the economics of the venture were solid enough to merit putting up substantial amounts in a $60 million investment round. Both Climeworks founders told me they agreed with Keith’s cost estimates, and saw a similar downward curve for their own technology.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Climeworks’s current goal is to remove 1 percent of the world’s annual CO₂ emissions by the mid 2020s. Yet meeting such a benchmark, if it’s even possible, would require bringing the cost of direct air capture down by nearly an order of magnitude while maintaining and expanding their roster of clients substantially. At the moment, Wurzbacher and Gebald have planned for several generations of Climeworks machines, with each new model promising declining prices. “Basically, we have a road map — $600, down to $400, down to $300 and $200 a ton,” Wurzbacher said. “This is over the next five years. Down to $200 we know quite well what we’re doing.” And beyond $200, Wurzbacher suggested, things get murkier. To move below that price would depend on “new developments” in technology or manufacturing.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Both founders told me they expect to reap enormous cost reductions from expanding production — activities that involve buying materials more cheaply in bulk and assembling units on automated factory lines instead of building them by hand, as is the case now. Design advances could wring out other costs. “Maintenance is very expensive,” Wurzbacher said. “Right now, if we exchange the filters in the collectors, we have to rent a crane, and that’s a lot of man-hours. In the next-generation units, we have improved that a lot, so relatively small design changes could cut the costs of maintenance by a factor of three.” Climeworks also intends to derive savings from improvements to crucial materials, like the sorbent that catches the CO₂. At the moment, the company’s technology requires that the temperature inside the units be raised periodically to about 100 degrees Celsius to release CO₂ from the sorbent so it can be drawn off and stored. If the process can be done at a lower temperature, the units will use less energy, and the life of the materials should be extended, further driving down costs.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The company’s ambitions for mass production may still seem extreme. To actually capture 1 percent of the world’s carbon emissions by 2025 would, by Gebald’s calculations, require that Climeworks build 250,000 carbon-capture plants like the ones on the roof at Hinwil. That adds up to about 4.5 million carbon collectors. For a company that has only built 100 collectors (and has 14 small plants around Europe), it’s a staggering number. The Climeworks founders therefore try to think of their product as the automotive industry might — a piece of mass-produced technology and metal, not the carbon they hope to sequester. “What we’re doing is gas separation,” Wurzbacher said, “and that’s traditionally a process-industry business, like oil and gas. But we don’t really see ourselves there.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The founders note that Toyota makes more than 10 million cars annually. “Every CO₂ collector has about the same weight and dimensions of a car — roughly two tons, and roughly 2 meters by 2 meters by 2 meters,” Gebald said. “And all the methods used to produce the CO₂ collectors could be well automated. So we have the automotive industry as a model for how to produce things in large quantities for low cost.” The two men have already sought advice from Audi. They are also aware that the automotive industry perfected its methods over the course of 100 years. Climeworks, if it plans to have even a modest impact, doesn’t have nearly as much time.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;strong class=&quot;css-8qgvsz ebyp5n10&quot;&gt;In 1954,&lt;/strong&gt; the economist Paul Samuelson put forward a theory that made a distinction between “private-consumption goods” — bread, cars, houses and the like — and commodities that existed apart from the usual laws of supply and demand. Modern global markets are obviously quite successful at pricing private goods we need and want. But the other type of commodity Samuelson was describing is something now known as a “public good,” which benefits everyone but is not bought, sold or consumed the same way. Definitions of a public good can vary, but the oft-used examples are lighthouses, national defenses and clean air.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Direct air capture can no doubt create private goods, like soft-drink carbonation or fuels. What makes its value so difficult to estimate is that in burying CO₂ for a better atmosphere — and, almost certainly, a better future — its purveyors would also create a public good. “The challenge with just collecting and burying CO₂ is that there isn’t a market yet,” Julio Friedmann, a former United States Energy Department official who now works at Columbia University, told me. “What it’s really about is offering an environmental service for a fee.” And what that means, in short, is that direct air capture’s success would be limited to the size of the market for private goods — soda fizz, greenhouse gas — unless governments decided to intervene and help fund the equivalent of several million (or more) lighthouses.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;An intervention could take a variety of forms. It could be large grants for research to find better sorbent materials, for instance, which would be similar to government investments that long ago helped nurture the solar- and wind-power industries. But help could also come by expanding regulations that already exist. A new and obscure United States tax provision, known as 45Q and signed last year by President Trump, offers a tax credit of up to $50 a ton for companies that bury CO₂ in geologic formations. The credit can benefit oil and gas firms that pump CO₂ underground during drilling work, as well as power plants that capture emissions directly from their smokestacks. Yet it could be used by Climeworks too, should it open plants in the United States — but only if it manages to remove and bury 100,000 tons of CO₂ per year.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Governments can make carbon more expensive too. The Climeworks founders told me they don’t believe their company will succeed on what they call “climate impact” scales unless the world puts significant prices on emissions, in the form of a carbon tax or carbon fee. “Our goal is to make it possible to capture CO₂ from the air for below $100 per ton,” Wurzbacher says. “No one owns a crystal ball, but we think — and we’re quite confident — that by something like 2030 we’ll have a global average price on carbon in the range of $100 to $150 a ton.” There is optimism in this thinking, he admitted; at the moment, only a few European countries have made progress in assessing a high price on carbon, and in the United States, carbon taxes have been repudiated recently at the polls, most recently in Washington State. Still, if such prices became a reality, they could benefit the carbon extraction market in a variety of ways. A company that sells a product or uses a process that creates high emissions — an airline, for instance, or a steel maker — could be required to pay carbon-removal companies $100 per metric ton or more to offset their CO₂ output. Or a government might use carbon-tax proceeds to directly pay businesses to collect and bury CO₂. In the absence of any meaningful government action, perhaps a crusading billionaire could put all the money in his estate toward capturing CO₂ and stashing it in the earth.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;If carbon came to be properly priced, a global ledger would need to be kept by regulators so that air-capture machines could suck in and bury an amount equivalent to the CO₂ that emitters produce. Because CO₂ emissions mix quickly into the atmosphere, location would be mostly irrelevant, except for the need to situate plants near clean energy sources and suitable areas for sequestering the gas underground. A direct-air-capture plant in Iceland, in other words, could take in the same quantity of emissions produced by a Boeing 787 in Australia and thus negate its environmental impact. What’s more, there might not be limitations on the burial process. “It doesn’t cost too much to pump CO₂ underground,” Stanford’s Sally Benson says. Companies already sequester about 34 million metric tons of CO₂ in the ground every year, at a number of sites around the world, usually to enhance the oil-drilling process. “The costs range from $2 to $15 per ton. So the bigger cost in all of this is the cost of carbon capture.” Benson told me that various studies suggest that the earth’s capacity for CO₂ sequestration could be in the range of 25 trillion metric tons; burying, say, five billion metric tons of CO₂ a year is therefore within the realm of possibility.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div data-testid=&quot;photoviewer-wrapper&quot; class=&quot;css-79elbk ehw59r11&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r111&quot;&gt;

&lt;span class=&quot;css-i48y28 e13ogyst0&quot;&gt;A pilot project at a Swiss university that uses Climeworks equipment to make methane out of airborne CO₂.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-nt1l96 e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;Luca Locatelli for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In an imaginary, zero-carbon future, the revenue prospects for air-capture companies would probably be enormous. “If we get to $100 to $150 a ton,” Wurzbacher told me, “then the market is almost infinite.” It would be so large, he said, that even if his company went through an exponential expansion, he doubted it could serve all the potential clients. At such low prices, companies could potentially fold carbon offsets into their pricing — or be compelled to do so — leading to an explosion in the market. “Christoph and me, we are always saying, we think that if this develops in a direction we think it does, we are not founding a company — we’re really founding a new industry,” Wurzbacher said. He points to the work in Iceland — a collaborative effort, funded partly by the European Union — as the first step toward that industry. At the moment, a single Climeworks collector on a Reykjavik geothermal field takes in air and collects CO₂; after the gas is flushed from the machine’s filter, it is mixed with water, essentially forming hot seltzer. Then the liquid is injected into a basalt rock formation deep underground. Over the course of about two years, the CO₂ mineralizes, locking away the gas forever.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;At Climeworks’s offices in Zurich, I asked Valentin Gutknecht, who was at the time the company’s business-development manager, if he could bury in Iceland my emissions from my plane flight from the United States to Zurich. He had a written agreement he could print out and give me, but it wouldn’t be cheap, he warned. The price was running about $600 a metric ton, meaning my flight would cost about an extra $700. But I was hardly the first person to ask him. The weekend before, Gutknecht told me, he received 900 unsolicited inquiries by email. Many were from potential customers who wanted to know how soon Climeworks could bury their CO₂ emissions, or how much a machine might cost them. I had the sense I was getting a glimpse of what’s to come: A community of people — not large enough to make a difference, but nonetheless motivated — seemed ready to pay a premium to reverse their CO₂ emissions.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Later, Wurzbacher told me he wants to offer a “one click” consumer service, perhaps in a year or two, which would expand what they’re doing in Iceland to individual customers and businesses. A Climeworks app could be installed on my smartphone, he explained. It could then be activated by my handset’s location services. “You fly over here to Europe,” he explained, “and the app tells you that you have just burned 1.7 tons of CO₂. Do you want to remove that? Well, Climeworks can remove it for you. Click here. We’ll charge your credit card. And then you’ll get a stone made from CO₂ for every ton you sequester.” He sat back and sighed. “That would be my dream,” he said.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;strong class=&quot;css-8qgvsz ebyp5n10&quot;&gt;Paradoxical though&lt;/strong&gt; it may seem, it’s probable that synthetic fuels offer a more practical path to creating a viable business for direct air capture. The vast and constant market demand for fuel is why Carbon Engineering has staked its future on synthetics. The world currently burns about 100 million barrels of oil a day. David Keith told me he thinks that by 2050 the demand for transportation fuels will almost certainly be modified by the transition to electric vehicles. “So let’s say you’d have to supply something like 50 million barrels a day in 2050 of fuels,” he said. “That’s still a monster market.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Steve Oldham, Carbon Engineering’s chief executive, added that direct-air-capture synthetics have an advantage over traditional fossil fuels: They won’t have to spend a dime on exploration. “If you were a brand-new company looking to make fuel, the cost of finding and then extracting fossil fuel is going to be really substantial,” he says. “Whereas our plants, you can build it right in the middle of California, wherever you have air and water.” He told me that the company’s first large-scale facility should be up and running by 2022, and will turn out at least 500 barrels a day of fuel feedstock — the raw material sent to refineries.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Climeworks perceives a large market for fuels, too. In a town near Zurich called Rapperswil-Jona, the firm has installed a collector in a small plant, run by the local technical university, to produce methane. In a room about the size of a shipping container, the Climeworks machine takes in CO₂ through an air duct and sends it through a maze of pipes to combine it with hydrogen, which is derived from water using solar power. When I visited, the plant was a few weeks away from being operational, but the methane coming out of the works could replace gasoline in the engine of just about any car, bus or truck outfitted to run on natural gas. At a larger plant in Italy, Climeworks recently joined a consortium of European countries to produce synthetic methane that will be used by a local trucking fleet. With different tweaks and refinements, the process could be adapted for diesel, gasoline, jet fuel — or it could be piped directly to local neighborhoods as fuel for home furnaces.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;From an economic standpoint, synthetic fuels could allow producers to plug into a huge existing infrastructure — refineries, gas stations, cars, planes, trucks, homes, ships — and replace a product already in demand with something arguably better. But the new fuels are not necessarily &lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;cheaper.&lt;/em&gt; Carbon Engineering aspires to deliver its product at an ultimate retail price of about $1 per liter, or $3.75 per gallon. What would make the product competitive are regulations in California that now require fuel sellers to produce fuels of lower “carbon intensity.” To date this has meant blending gas and diesel with biofuels like ethanol, but it could soon mean carbon-capture synthetics too.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In an expanding market, synthetic fuels could have curious effects. Since they’re made from airborne CO₂ and hydrogen and could be manufactured just about anywhere, they could rearrange the geopolitical order — tempering the power of a handful of countries that now control natural-gas and oil markets. The methane project in Rapperswil-Jona is especially suited for that country’s needs, Markus Friedl, a thermodynamics professor overseeing the project, told me, because Switzerland imports almost all of its natural gas, and its ability to generate energy from renewable sources is limited during the colder months. Carbon-capture-derived fuels, if they become cheap enough, could be a form of energy storage — made in summer, with solar or wind power, and used in winter — that carries a lower cost (and longer life) than batteries.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;From an environmental standpoint, air-capture fuels are not a utopian solution. Such fuels are carbon neutral, not carbon negative. They can’t take CO₂ from our industrial past and put it back into the earth. If all the cars, trucks and planes of the year 2050 run on renewable fuels instead of fossil fuels, their CO₂ emissions would need to be removed from the air, recycled into the same product they originally burned through, and the cycle would need to repeat, ad infinitum, lest emissions increase. Even so, these fuels could present an enormous improvement. Transportation — currently the most significant source of emissions by sector in the United States — could cease to be a net emitter of CO₂. Just as crucial, the technology of direct air capture could scale up to become better and cheaper.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;A huge expansion would also involve huge complications. “You start to get into really big challenges when you get to these big, large scales,” Glen Peters, a research director at the Cicero Center for International Climate Research in Oslo, told me. “If you can do one carbon-capture facility, where Carbon Engineering or Climeworks can build a big plant, great. You need to do that 5,000 times. And to capture a million tons of CO₂ with direct air capture, you need a small power plant just to run that facility. So if you’re going to build one direct-air-capture facility every day for the next 30 years to get to some of these scenarios, then in addition, we have to build a new mini power plant every day as well.” It’s also the case that you have to address two extraordinary problems at the same time, Peters added. “To reach 1.5 degrees, we need to halve emissions every decade,” he said. That would mean persuading entire nations, like China and the United States, to switch from burning coal to using renewables at precisely the same time that we make immense investments in negative-emission technologies. And Peters pointed out that this would need to be done even as governments choose among competing priorities: health care, education and so on.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“The idea of bringing direct air capture up to 10 billion tons by the middle or later part of the century is such a herculean task it would require an industrial scale-up the likes of which the world has never seen,” Princeton’s Stephen Pacala told me. And yet Pacala wasn’t pessimistic about making a start. He seemed to think it was necessary for the federal government to begin with significant research and investments in the technology — to see how far and fast it could move forward, so that it’s ready as soon as possible. At Climeworks, Gebald and Wurzbacher spoke in similar terms, asserting that the conversations around climate challenges are moving beyond the choice between clean energy or carbon removal. Both will be necessary.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Gebald and Wurzbacher seem less assured about the future of global policy than on the mechanics of scaling up. Some of that, they made clear, was related to their outlook as engineers, to what they’ve gathered from observing companies like Audi and Apple. If the last century has proved anything, it’s that society is not always intent on acting quickly, at least in the political realm, to clean up our environment. But we’ve proved very good at building technology in mass quantities and making products and devices better and cheaper — especially when there’s money to be made. For now, Gebald and Wurzbacher seemed to regard the climate challenge in mathematical terms. How many gigatons needed to be removed? How much would it cost per ton? How many Climeworks machines were required? Even if the figures were enormous, even if they appeared impossible, to see the future their way was to redefine the problem, to move away from the narrative of loss, to forget the multiplying stories of dying reefs and threatened coastlines — and to begin to imagine other possibilities.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 12 Feb 2019 11:00:29 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:url>https://www.nytimes.com/2019/02/12/magazine/climeworks-business-climate-change.html</og:url>
<og:type>article</og:type>
<og:title>The Tiny Swiss Company That Thinks It Can Help Stop Climate Change</og:title>
<og:image>https://static01.nyt.com/images/2019/02/17/magazine/17mag-climeworks-image1/17mag-climeworks-image1-facebookJumbo.jpg</og:image>
<og:description>Two European entrepreneurs want to remove carbon from the air at prices cheap enough to matter.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2019/02/12/magazine/climeworks-business-climate-change.html</dc:identifier>
</item>
<item>
<title>Show HN: Open source balloon simulation with Three.js</title>
<link>https://alexanderperrin.com.au/triangles/ballooning/</link>
<guid isPermaLink="true" >https://alexanderperrin.com.au/triangles/ballooning/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://alexanderperrin.com.au/triangles/ballooning/&quot;&gt;https://alexanderperrin.com.au/triangles/ballooning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19141119&quot;&gt;https://news.ycombinator.com/item?id=19141119&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 283&lt;/p&gt;
&lt;p&gt;# Comments: 49&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 04:47:12 +0000</pubDate>
<dc:creator>alexanderperrin</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://alexanderperrin.com.au/triangles/ballooning/</dc:identifier>
</item>
<item>
<title>Android Phones Can Be Hacked Remotely by Viewing Malicious PNG Image</title>
<link>https://source.android.com/security/bulletin/2019-02-01.html</link>
<guid isPermaLink="true" >https://source.android.com/security/bulletin/2019-02-01.html</guid>
<description>&lt;p&gt;&lt;em&gt;Published February 4, 2019&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The Android Security Bulletin contains details of security vulnerabilities affecting Android devices. Security patch levels of 2019-02-05 or later address all of these issues. To learn how to check a device's security patch level, see &lt;a href=&quot;https://support.google.com/pixelphone/answer/4457705&quot; class=&quot;external&quot;&gt;Check and update your Android version&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Android partners are notified of all issues at least a month before publication. Source code patches for these issues have been released to the Android Open Source Project (AOSP) repository and linked from this bulletin. This bulletin also includes links to patches outside of AOSP.&lt;/p&gt;
&lt;p&gt;The most severe of these issues is a critical security vulnerability in Framework that could allow a remote attacker using a specially crafted PNG file to execute arbitrary code within the context of a privileged process. The &lt;a href=&quot;https://source.android.com/security/overview/updates-resources.html#severity&quot;&gt;severity assessment&lt;/a&gt; is based on the effect that exploiting the vulnerability would possibly have on an affected device, assuming the platform and service mitigations are turned off for development purposes or if successfully bypassed.&lt;/p&gt;
&lt;p&gt;We have had no reports of active customer exploitation or abuse of these newly reported issues. Refer to the &lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#mitigations&quot;&gt;Android and Google Play Protect mitigations&lt;/a&gt; section for details on the &lt;a href=&quot;https://source.android.com/security/enhancements/&quot;&gt;Android security platform protections&lt;/a&gt; and Google Play Protect, which improve the security of the Android platform.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Information on the latest over-the-air update (OTA) and firmware images for Google devices is available in the &lt;a href=&quot;https://source.android.com/security/bulletin/pixel/2019-02-01&quot;&gt;February 2019 Pixel Update Bulletin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;mitigations&quot;&gt;Android and Google service mitigations&lt;/h2&gt;
&lt;p&gt;This is a summary of the mitigations provided by the &lt;a href=&quot;https://source.android.com/security/enhancements/&quot;&gt;Android security platform&lt;/a&gt; and service protections such as &lt;a href=&quot;https://www.android.com/play-protect&quot; class=&quot;external&quot;&gt;Google Play Protect&lt;/a&gt;. These capabilities reduce the likelihood that security vulnerabilities could be successfully exploited on Android.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Exploitation for many issues on Android is made more difficult by enhancements in newer versions of the Android platform. We encourage all users to update to the latest version of Android where possible.&lt;/li&gt;
&lt;li&gt;The Android security team actively monitors for abuse through &lt;a href=&quot;https://www.android.com/play-protect&quot; class=&quot;external&quot;&gt;Google Play Protect&lt;/a&gt; and warns users about &lt;a href=&quot;https://source.android.com/security/reports/Google_Android_Security_PHA_classifications.pdf&quot;&gt;Potentially Harmful Applications&lt;/a&gt;. Google Play Protect is enabled by default on devices with &lt;a href=&quot;http://www.android.com/gms&quot; class=&quot;external&quot;&gt;Google Mobile Services&lt;/a&gt;, and is especially important for users who install apps from outside of Google Play.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;2019-02-01-details&quot;&gt;2019-02-01 security patch level vulnerability details&lt;/h2&gt;
&lt;p&gt;In the sections below, we provide details for each of the security vulnerabilities that apply to the 2019-02-01 patch level. Vulnerabilities are grouped under the component they affect. There is a description of the issue and a table with the CVE, associated references, &lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#type&quot;&gt;type of vulnerability&lt;/a&gt;, &lt;a href=&quot;https://source.android.com/security/overview/updates-resources.html#severity&quot;&gt;severity&lt;/a&gt;, and updated AOSP versions (where applicable). When available, we link the public change that addressed the issue to the bug ID, such as the AOSP change list. When multiple changes relate to a single bug, additional references are linked to numbers following the bug ID.&lt;/p&gt;
&lt;h3 id=&quot;framework&quot;&gt;Framework&lt;/h3&gt;
&lt;p&gt;The most severe vulnerability in this section could enable a remote attacker using a specially crafted PNG file to execute arbitrary code within the context of a privileged process.&lt;/p&gt;
&lt;table readability=&quot;2.9431818181818&quot;&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Updated AOSP versions&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1986&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/external/skia/+/15c377e6230b060d54c43247a0a261ff7c73553b&quot; class=&quot;external&quot;&gt;A-117838472&lt;/a&gt; [&lt;a href=&quot;https://android.googlesource.com/platform/external/skia/+/8157d73fb620bc463eb26e974fe92d3259e7545a&quot;&gt;2&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.8493150684932&quot;&gt;&lt;td&gt;CVE-2019-1987&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/external/skia/+/15c377e6230b060d54c43247a0a261ff7c73553b&quot; class=&quot;external&quot;&gt;A-118143775&lt;/a&gt; [&lt;a href=&quot;https://android.googlesource.com/platform/external/skia/+/654579dbab7cf3a566636bcc7d6617d5ac938f38&quot;&gt;2&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1988&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/external/skia/+/0056606ac49688dcf3c08a51ca98fd94d9bf1897&quot; class=&quot;external&quot;&gt;A-118372692&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;library&quot;&gt;Library&lt;/h3&gt;
&lt;p&gt;The most severe vulnerability in this section could enable a remote attacker using a specially crafted file to execute arbitrary code within the context of an unprivileged process.&lt;/p&gt;
&lt;table readability=&quot;13.824451410658&quot;&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Updated AOSP versions&lt;/th&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.8939393939394&quot;&gt;&lt;td&gt;CVE-2017-17760&lt;/td&gt;
&lt;td&gt;A-78029030&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.8923076923077&quot;&gt;&lt;td&gt;CVE-2018-5268&lt;/td&gt;
&lt;td&gt;A-78029634&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.8923076923077&quot;&gt;&lt;td&gt;CVE-2018-5269&lt;/td&gt;
&lt;td&gt;A-78029727&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.8985507246377&quot;&gt;&lt;td&gt;CVE-2017-18009&lt;/td&gt;
&lt;td&gt;A-78026242&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;Moderate&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;system&quot;&gt;System&lt;/h3&gt;
&lt;p&gt;The most severe vulnerability in this section could enable a remote attacker using a specially crafted transmission to execute arbitrary code within the context of a privileged process.&lt;/p&gt;
&lt;table readability=&quot;11.527777777778&quot;&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Updated AOSP versions&lt;/th&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.8840579710145&quot;&gt;&lt;td&gt;CVE-2019-1991&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/system/bt/+/2d21e75aa8c1e0c4adf178a1330f9f5c573ca045&quot; class=&quot;external&quot;&gt;A-110166268&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.8840579710145&quot;&gt;&lt;td&gt;CVE-2019-1992&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/system/bt/+/c365ae6444b86c3ddd19197fd2c787581ebb31df&quot; class=&quot;external&quot;&gt;A-116222069&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1993&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/frameworks/base/+/b5dee1bafd5648fd9210b4cba5e23b0665f9add5&quot; class=&quot;external&quot;&gt;A-119819889&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1994&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/packages/apps/Settings/+/bd363f4925206b6256bb60d70b998f0d54efe7cc&quot; class=&quot;external&quot;&gt;A-117770924&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.8507462686567&quot;&gt;&lt;td&gt;CVE-2019-1995&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/packages/apps/Email/+/b541ef378df154f30cd1d18408354eff6004b9ef&quot; class=&quot;external&quot;&gt;A-32589229&lt;/a&gt; [&lt;a href=&quot;https://android.googlesource.com/platform/packages/apps/UnifiedEmail/+/5a0b253c8797bf1c0b8dca73128e60cd1f823a6d&quot;&gt;2&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1996&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/system/bt/+/525bdbd6e1295ed8a081d2ae87105c64d6f1ac4f&quot; class=&quot;external&quot;&gt;A-111451066&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5.796875&quot;&gt;&lt;td&gt;CVE-2019-1997&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/external/wpa_supplicant_8/+/d87989c5020e346322f2f9037e2ef58f41e4969a&quot; class=&quot;external&quot;&gt;A-117508900&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;7.0, 7.1.1, 7.1.2, 8.0, 8.1, 9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1998&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://android.googlesource.com/platform/external/nos/host/android/+/877a6e05bb08353a4f806ad4d3c9cf6f1c3fb097&quot; class=&quot;external&quot;&gt;A-116055338&lt;/a&gt; [&lt;a href=&quot;https://android.googlesource.com/platform/system/security/+/f8feed620bd607427ded702cce91bb0eb749bc6a&quot;&gt;2&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;DoS&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h2 id=&quot;2019-02-05-details&quot;&gt;2019-02-05 security patch level vulnerability details&lt;/h2&gt;
&lt;p&gt;In the sections below, we provide details for each of the security vulnerabilities that apply to the 2019-02-05 patch level. Vulnerabilities are grouped under the component they affect and include details such as the CVE, associated references, &lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#type&quot;&gt;type of vulnerability&lt;/a&gt;, &lt;a href=&quot;https://source.android.com/security/overview/updates-resources.html#severity&quot;&gt;severity&lt;/a&gt;, component (where applicable), and updated AOSP versions (where applicable). When available, we link the public change that addressed the issue to the bug ID, such as the AOSP change list. When multiple changes relate to a single bug, additional references are linked to numbers following the bug ID.&lt;/p&gt;
&lt;h3 id=&quot;kernel-components&quot;&gt;Kernel components&lt;/h3&gt;
&lt;p&gt;The most severe vulnerability in this section could enable a local malicious application to execute arbitrary code within the context of a privileged process.&lt;/p&gt;
&lt;table readability=&quot;0.92682926829268&quot;&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.5454545454545&quot;&gt;&lt;td&gt;CVE-2018-10879&lt;/td&gt;
&lt;td&gt;A-116406063&lt;br/&gt;&lt;a href=&quot;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=513f86d73855ce556ea9522b6bfd79f87356dc3a&quot; class=&quot;external&quot;&gt;Upstream kernel&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;ext4 filesystem&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-1999&lt;/td&gt;
&lt;td&gt;A-120025196&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Binder driver&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-2000&lt;/td&gt;
&lt;td&gt;A-120025789&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Binder driver&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2019-2001&lt;/td&gt;
&lt;td&gt;A-117422211&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;iomem&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;nvidia-components&quot;&gt;NVIDIA components&lt;/h3&gt;
&lt;p&gt;The most severe vulnerability in this section could enable a remote attacker using a specially crafted file to execute arbitrary code within the context of a privileged process.&lt;/p&gt;
&lt;table&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-6271&lt;/td&gt;
&lt;td&gt;A-80198474&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;libnvomx&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-6267&lt;/td&gt;
&lt;td&gt;A-70857947&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;libnvomx&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-6268&lt;/td&gt;
&lt;td&gt;A-80433161&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;libnvomx&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2016-6684&lt;/td&gt;
&lt;td&gt;A-117423758&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;kernel log&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;qualcomm-components&quot;&gt;Qualcomm components&lt;/h3&gt;
&lt;p&gt;These vulnerabilities affect Qualcomm components and are described in further detail in the appropriate Qualcomm security bulletin or security alert. The severity assessment of these issues is provided directly by Qualcomm.&lt;/p&gt;
&lt;table readability=&quot;0.80120481927711&quot;&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11262&lt;/td&gt;
&lt;td&gt;A-76424945&lt;br/&gt;&lt;a href=&quot;https://source.codeaurora.org/quic/la/abl/tianocore/edk2/commit/?id=29ab5eb75bc9ed01466ab1a98e932e59fe27ad42&quot;&gt;QC-CR#2221192&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;bootloader&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11280&lt;/td&gt;
&lt;td&gt;A-109741776&lt;br/&gt;&lt;a href=&quot;https://source.codeaurora.org/quic/la/kernel/msm-4.9/commit/?id=bd3627dae5f1a34e0284cfe167f61273ecc2f386&quot;&gt;QC-CR#2185061&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Modem&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.5483870967742&quot;&gt;&lt;td&gt;CVE-2018-11275&lt;/td&gt;
&lt;td&gt;A-74409078&lt;br/&gt;&lt;a href=&quot;https://source.codeaurora.org/quic/la/abl/tianocore/edk2/commit/?id=648fdd3ddcc01161abbf7a21fcd11eda13cc5226&quot;&gt;QC-CR#2221256&lt;/a&gt; [&lt;a href=&quot;https://source.codeaurora.org/quic/la/abl/tianocore/edk2/commit/?id=bf0261ab128f28763258c620bc95ca379a286b59&quot;&gt;2&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Bootloader&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-13900&lt;/td&gt;
&lt;td&gt;A-119052051&lt;br/&gt;&lt;a href=&quot;https://source.codeaurora.org/quic/la/kernel/msm-4.9/commit/?id=c8ca0610474488ddff578a8338818fe69e7d4a14&quot;&gt;QC-CR#2287499&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Modem&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-13905&lt;/td&gt;
&lt;td&gt;A-119052050&lt;br/&gt;&lt;a href=&quot;https://source.codeaurora.org/quic/la/kernel/msm-4.9/commit/?id=d87585164cef055f8b220f77c58cf7159e176e29&quot;&gt;QC-CR#2225202&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Graphics&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h3 id=&quot;qualcomm-closed-source-components&quot;&gt;Qualcomm closed-source components&lt;/h3&gt;
&lt;p&gt;These vulnerabilities affect Qualcomm components and are described in further detail in the appropriate Qualcomm security bulletin or security alert. The severity assessment of these issues is provided directly by Qualcomm.&lt;/p&gt;
&lt;table&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;21%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;14%&quot;/&gt;&lt;col width=&quot;30%&quot;/&gt;&lt;tr&gt;&lt;th&gt;CVE&lt;/th&gt;
&lt;th&gt;References&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Severity&lt;/th&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11289&lt;/td&gt;
&lt;td&gt;A-109678453&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11820&lt;/td&gt;
&lt;td&gt;A-111089815&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11938&lt;/td&gt;
&lt;td&gt;A-112279482&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11945&lt;/td&gt;
&lt;td&gt;A-112278875&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;Critical&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11268&lt;/td&gt;
&lt;td&gt;A-109678259&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11845&lt;/td&gt;
&lt;td&gt;A-111088838&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11864&lt;/td&gt;
&lt;td&gt;A-111092944&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11921&lt;/td&gt;
&lt;td&gt;A-112278972&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11931&lt;/td&gt;
&lt;td&gt;A-112279521&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11932&lt;/td&gt;
&lt;td&gt;A-112279426&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11935&lt;/td&gt;
&lt;td&gt;A-112279483&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-11948&lt;/td&gt;
&lt;td&gt;A-112279144&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-5839&lt;/td&gt;
&lt;td&gt;A-112279544&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CVE-2018-13904&lt;/td&gt;
&lt;td&gt;A-119050566&lt;a href=&quot;https://source.android.com/security/bulletin/2019-02-01.html#asterisk&quot;&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;High&lt;/td&gt;
&lt;td&gt;Closed-source component&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;h2 id=&quot;common-questions-and-answers&quot;&gt;Common questions and answers&lt;/h2&gt;
&lt;p&gt;This section answers common questions that may occur after reading this bulletin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. How do I determine if my device is updated to address these issues?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To learn how to check a device's security patch level, see &lt;a href=&quot;https://support.google.com/pixelphone/answer/4457705#pixel_phones&amp;amp;nexus_devices&quot; class=&quot;external&quot;&gt;Check and update your Android version&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Security patch levels of 2019-02-01 or later address all issues associated with the 2019-02-01 security patch level.&lt;/li&gt;
&lt;li&gt;Security patch levels of 2019-02-05 or later address all issues associated with the 2019-02-05 security patch level and all previous patch levels.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Device manufacturers that include these updates should set the patch string level to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;[ro.build.version.security_patch]:[2019-02-01]&lt;/li&gt;
&lt;li&gt;[ro.build.version.security_patch]:[2019-02-05]&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;2. Why does this bulletin have two security patch levels?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This bulletin has two security patch levels so that Android partners have the flexibility to fix a subset of vulnerabilities that are similar across all Android devices more quickly. Android partners are encouraged to fix all issues in this bulletin and use the latest security patch level.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Devices that use the 2019-02-01 security patch level must include all issues associated with that security patch level, as well as fixes for all issues reported in previous security bulletins.&lt;/li&gt;
&lt;li&gt;Devices that use the security patch level of 2019-02-05 or newer must include all applicable patches in this (and previous) security bulletins.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Partners are encouraged to bundle the fixes for all issues they are addressing in a single update.&lt;/p&gt;
&lt;p id=&quot;type&quot;&gt;&lt;strong&gt;3. What do the entries in the &lt;em&gt;Type&lt;/em&gt; column mean?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Entries in the &lt;em&gt;Type&lt;/em&gt; column of the vulnerability details table reference the classification of the security vulnerability.&lt;/p&gt;
&lt;table readability=&quot;1&quot;&gt;&lt;col width=&quot;25%&quot;/&gt;&lt;col width=&quot;75%&quot;/&gt;&lt;tr&gt;&lt;th&gt;Abbreviation&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RCE&lt;/td&gt;
&lt;td&gt;Remote code execution&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;EoP&lt;/td&gt;
&lt;td&gt;Elevation of privilege&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;Information disclosure&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DoS&lt;/td&gt;
&lt;td&gt;Denial of service&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;Classification not available&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;4. What do the entries in the &lt;em&gt;References&lt;/em&gt; column mean?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Entries under the &lt;em&gt;References&lt;/em&gt; column of the vulnerability details table may contain a prefix identifying the organization to which the reference value belongs.&lt;/p&gt;
&lt;table readability=&quot;3&quot;&gt;&lt;col width=&quot;25%&quot;/&gt;&lt;col width=&quot;75%&quot;/&gt;&lt;tr&gt;&lt;th&gt;Prefix&lt;/th&gt;
&lt;th&gt;Reference&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;A-&lt;/td&gt;
&lt;td&gt;Android bug ID&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;QC-&lt;/td&gt;
&lt;td&gt;Qualcomm reference number&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;M-&lt;/td&gt;
&lt;td&gt;MediaTek reference number&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;N-&lt;/td&gt;
&lt;td&gt;NVIDIA reference number&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;B-&lt;/td&gt;
&lt;td&gt;Broadcom reference number&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p id=&quot;asterisk&quot;&gt;&lt;strong&gt;5. What does a * next to the Android bug ID in the &lt;em&gt;References&lt;/em&gt; column mean?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Issues that are not publicly available have a * next to the Android bug ID in the &lt;em&gt;References&lt;/em&gt; column. The update for that issue is generally contained in the latest binary drivers for Pixel devices available from the &lt;a href=&quot;https://developers.google.com/android/drivers&quot; class=&quot;external&quot;&gt;Google Developer site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. Why are security vulnerabilities split between this bulletin and device&amp;amp;hairsp;/&amp;amp;hairsp;partner security bulletins, such as the Pixel bulletin?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Security vulnerabilities that are documented in this security bulletin are required to declare the latest security patch level on Android devices. Additional security vulnerabilities that are documented in the device&amp;amp;hairsp;/&amp;amp;hairsp;partner security bulletins are not required for declaring a security patch level. Android device and chipset manufacturers are encouraged to document the presence of other fixes on their devices through their own security websites, such as the &lt;a href=&quot;https://security.samsungmobile.com/securityUpdate.smsb&quot; class=&quot;external&quot;&gt;Samsung&lt;/a&gt;, &lt;a href=&quot;https://lgsecurity.lge.com/security_updates.html&quot; class=&quot;external&quot;&gt;LGE&lt;/a&gt;, or &lt;a href=&quot;https://source.android.com/security/bulletin/pixel/&quot; class=&quot;external&quot;&gt;Pixel&lt;/a&gt; security bulletins.&lt;/p&gt;
&lt;h2 id=&quot;versions&quot;&gt;Versions&lt;/h2&gt;
&lt;table&gt;&lt;col width=&quot;25%&quot;/&gt;&lt;col width=&quot;25%&quot;/&gt;&lt;col width=&quot;50%&quot;/&gt;&lt;tr&gt;&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;February 4, 2019&lt;/td&gt;
&lt;td&gt;Bulletin published&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</description>
<pubDate>Tue, 12 Feb 2019 01:58:00 +0000</pubDate>
<dc:creator>air7</dc:creator>
<og:title>Android Security Bulletin — February 2019  |  Android Open Source Project</og:title>
<og:url>https://source.android.com/security/bulletin/2019-02-01</og:url>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://source.android.com/security/bulletin/2019-02-01.html</dc:identifier>
</item>
<item>
<title>Reddit confirms $300M Series D led by China’s Tencent at $3B value</title>
<link>https://techcrunch.com/2019/02/11/reddit-300-million/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/02/11/reddit-300-million/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;Last week &lt;a href=&quot;https://techcrunch.com/2019/02/05/raiseit/&quot;&gt;TechCrunch reported that Reddit was raising&lt;/a&gt; $150 million from Chinese tech giant Tencent and up to $150 million more in a Series D that would value the company at $2.7 billion pre-money or $3 billion post-money. After no-commenting on our scoop, today &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/reddit&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;reddit&quot;&gt;Reddit&lt;/a&gt; confirmed it has raised $300 million at $3 billion post-money, with $150 million from Tencent.&lt;/p&gt;
&lt;p&gt;The deal makes for an odd pairing between one of the architects of China’s Great Firewall of censorship and one of America’s most lawless free-speech forums. Some Redditors are already &lt;a href=&quot;https://www.bbc.com/news/business-47194096&quot;&gt;protesting the funding&lt;/a&gt; by trying to post content that would rile Chinese’s internet watchdogs, like imagery from Tiananmen Square and Winnie the Pooh memes mocking Chinese President Xi Jinping’s appearance.&lt;/p&gt;

&lt;p&gt;The round brings the Conde Nast-majority owned Reddit to $550 million in total funding. Beyond Tencent, the rest of the round came from previous investors potentially including Andreessen Horowitz, Sequoia and Fidelity. Apparently frustrated that we had disrupted its PR plan, Reddit today handed confirmation of the round to CNBC, which re-reported our scoop without citation. While CNBC reported in June 2018 that Reddit would top $100 million in revenue, a reliable source tells us Reddit only brought in $85 million in 2018 revenue.&lt;/p&gt;
&lt;p&gt;Reddit’s CEO Steve Huffman has had his own problems with attribution after the exec was caught editing users’ comments to mislead viewers into thinking they were insulting their Subreddit’s moderators. Huffman managed to get off with just an apology and vow not to do it again, though he seemed to laugh off and excuse the abuse of power by saying “I spent my formative years as a young troll on the Internet.”&lt;/p&gt;

&lt;p&gt;Reddit will have to compete for ad dollars with the Google-Facebook duopoly despite having less information about its users, who are often anonymous. Reddit sees 330 million users per month across its Subreddit forums for discussing everything from news and entertainment to niche types of pornography, conspiracy theories and other highly brand-unsafe content. Meanwhile, users may be concerned that Reddit’s policy views could be tightened as it cosies up to Tencent.&lt;/p&gt;
&lt;p&gt;Reddit has struggled with staff departures and user revolts over the years as it tries to balance freedom of expression with civility. The hope is the cash could help it pay for experienced leaders and more moderation staff to maintain that balance. But without proper oversight, the cash could simply scale up Reddit and its problems along with it.&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 00:55:29 +0000</pubDate>
<dc:creator>theBashShell</dc:creator>
<og:title>Reddit confirms $300M Series D led by China’s Tencent at $3B value</og:title>
<og:description>Last week TechCrunch reported that Reddit was raising $150 million from Chinese tech giant Tencent and up to $150 million more in a Series D that would value the company at $2.7 billion pre-money or $3 billion post-money. After no-commenting on our scoop, today Reddit confirmed it has raised $300 m…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2016/07/reddit-paid1.png?w=711</og:image>
<og:url>http://social.techcrunch.com/2019/02/11/reddit-300-million/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/02/11/reddit-300-million/</dc:identifier>
</item>
</channel>
</rss>