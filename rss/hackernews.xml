<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The world needs more search engines</title>
<link>https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html</link>
<guid isPermaLink="true" >https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html</guid>
<description>&lt;p&gt;There are only very few truly independent search engines in the world. Google, Bing, Yandex, and Baidu are the best known ones. Most other players only white label results from those four and are dependent on them and their business model. Or they are so localized and small that they do not offer a credible alternative. Nevertheless, we at Cliqz are also trying to build one: over the last five years, with around 100 people, we have built our own search engine &lt;a href=&quot;https://beta.cliqz.com#channel=blog&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;beta.cliqz.com&lt;/a&gt; from scratch. It’s completely independent, it does not use anyone’s technology nor anyone’s business model. It’s built end-to-end from collecting, crawling, and analyzing data up to actually showing results all this with privacy by design. We’re quite proud of it. And each day until this Christmas, we will explain one core piece.&lt;/p&gt;
&lt;p&gt;But we would want to kick this blog off with a more fundamental question: Why? Why would a team be motivated to build another search engine? Why would &lt;a href=&quot;https://www.burda.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;Hubert Burda Media&lt;/a&gt; finance this over several years (they continued to back us especially in times when things got tough)? Why did we choose to invest our time and careers into an effort that seems so overwhelmingly big and impossible?&lt;/p&gt;
&lt;p&gt;Because Google with its 93% search market share is a monopoly. It’s true, there are also other monopolies in the world. Some are tamed by regulation, others quite damaging. One could rightfully counter that Google has a good product. They even offer it for free. Compared to other monopolies, it’s much harder to see where they do harm. Google can hardly be blamed for overcharging. But the price we actually pay is very high. Higher than money: Because Google is a monopoly on information. They do not control the information of the world, of course, but control the access to it.&lt;/p&gt;
&lt;a href=&quot;https://www.0x65.dev/static/img/posts/world-needs-cliqz/google-market-share.svg&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;&lt;img alt=&quot;Figure 1: Google has a whooping 93% search market share worldwide&quot; loading=&quot;lazy&quot; src=&quot;https://www.0x65.dev/static/img/posts/world-needs-cliqz/google-market-share.svg&quot;/&gt;&lt;/a&gt;Figure 1: Google has a whooping 93% search market share worldwide&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;h5&gt;Google’s monopoly on information: when quantitative becomes qualitative&lt;/h5&gt;
&lt;p&gt;With 93% of the search market, Google’s algorithms decide what becomes truth. Can you think of a TV channel with a 93% audience? Would you find it acceptable if there were only one TV channel? Sounds preposterous, right? Not even &lt;em&gt;Pravda&lt;/em&gt; had such a captive audience. That’s what Google really is. Of course, they will claim that they are only a platform. They will defend themselves, that they do not produce the news, that they don’t create or edit the content. This is technically right. But it is as much factually wrong. If a platform is the only platform, you do not have to make the news, pointing to ones and not others is enough to have a profound effect on public opinion and alter the world. Whether this influence is intentional or accidental is irrelevant, it is just dangerous. There is a moment when quantitative becomes qualitative, and that happened a long time ago with Google.&lt;/p&gt;
&lt;h5&gt;The illusory truth effect&lt;/h5&gt;
&lt;p&gt;This has been even worsened and amplified since Google extracts answers (“facts”) from websites – it’s their attempt to keep traffic and money in Google. It clearly works. Now less than half of searches lead to a click to another website. More than a half of searches end on Google&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fn2&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;: We have reached the tipping point where people start and end their information request in Google. Users might believe everything they see there is true. But Google extracts these answers from any website, good and bad ones. Google is not Wikipedia, there is no community governance. There are not multiple arguments. There are no checks and balances. This wouldn’t be a problem if Google wouldn’t be so big. Here, the one answer Google choses, becomes the fact for 93% of searches. And when you repeat something often enough, however false - it becomes the truth.&lt;/p&gt;
&lt;a href=&quot;https://www.0x65.dev/static/img/posts/world-needs-cliqz/theft-fact-google.png&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;&lt;img alt=&quot;Figure 2: Is theft justifiable? Book chapters have been written about this. But Google has one prominent four-line answer. This wouldn’t be a problem, if Google wouldn’t be so big. With their information monopoly, their answer becomes the truth.&quot; loading=&quot;lazy&quot; src=&quot;https://www.0x65.dev/static/img/posts/world-needs-cliqz/theft-fact-google.png&quot;/&gt;&lt;/a&gt;Figure 2: Is theft justifiable? Book chapters have been written about this. But Google has one prominent four-line answer. This wouldn’t be a problem, if Google wouldn’t be so big. With their information monopoly, their answer becomes the truth.
&lt;h5&gt;We opened the door for censorship&lt;/h5&gt;
&lt;p&gt;The single point of information access is very vulnerable against attacks as well. A total dominance of the market opens the door for censorship: It’s very hard, likely impossible to censor all web publishers. Diversity keeps a democracy strong. There will always be this one editor who does not adhere to pressure, who will publish an honest opinion, a different viewpoint, who will make room for a whistleblower. In contrast, it is very easy to censor one centralized instance. As we have seen: If Google wants to do business in China, they will adhere to the required standards. And there is no one else who will not adhere.&lt;/p&gt;
&lt;h5&gt;Google is Cambridge Analytica on steroids&lt;/h5&gt;
&lt;p&gt;Our data profiles make us highly attackable. Google knows everything about us. In a recent &lt;a href=&quot;https://whotracks.me&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;study&lt;/a&gt; we showed that Google monitors 82% of all web-traffic. But these precise data profiles are vulnerable to misuse. The data is aggregated to profiles which can not only be used to create tailor-made advertising campaigns. They can also be used to absorb the maximum willingness to pay from every customer. And they produce the perfect medium for precision propaganda. In the best case this will just lead to us buying something we don’t need or buying something that we could get cheaper somewhere else. In the worst case they will use our fears, our secret desires to influence our political decisions. Whether Google in this game is evil or not is not the question here. It is about protecting one of our most valuable assets – information – from being owned or controlled by a monopoly.&lt;/p&gt;
&lt;p&gt;You think Cambridge Analytica was a problem? Google is Cambridge Analytica on steroids: The manipulation potential of search engines is much higher, since users expect objective results from a search engine. Where in fact it cannot be checked whether the algorithm is actually objective (and we could have an even longer discussion that algorithms can never be objective), whether it is a personalized result (filter bubble) or whether it is used to influence us negatively. This wouldn’t be a problem if there would be many alternatives and if Google wouldn’t be so big. But due to Google’s dominant market share, even the smallest shifts in search results, even a small shift in the autosuggest, will influence our behavior.&lt;/p&gt;
&lt;h5&gt;There are truly no alternative viewpoints when it comes to search&lt;/h5&gt;
&lt;p&gt;But: People could still turn to the other 7% competition for different search results, couldn’t they? Well, what appears to be a diversity of small search engines with diverse algorithms, is really not the case. In the Western world nearly no competitor has built an own, independent search index. Probably for cost and technical reasons. Most of them use Bing (e.g., DuckDuckGo, Yahoo, Qwant, or Ecosia) to deliver their search results or even worse, Google (e.g., Startpage or ask.com). It fools us into the false perspective that there is choice. In fact, we only have the choice between one big player and another player. In the TV world, this would be the equivalent of 100 different channels, but they all show Fox News 24 hours a day and just replace the logo. This clearly cannot be good.&lt;/p&gt;
&lt;h5&gt;Google buys influence way beyond their own platform and protects their monopoly&lt;/h5&gt;
&lt;p&gt;Google’s influence is much bigger than “just search”, they control and set the standards for most of the web: Google alone controls 37% of the digital ad revenue. Google, Facebook and Amazon together capture just under 70% (!) of all digital ad dollars spent&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fn3&quot; id=&quot;fnref3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;. This buys you a lot of influence, way beyond their own already dominant positions. Through money they will push their values, their way of how the web should be, and their business interest to the complete ecosystem. In 2018 Google paid 26.7 billion USD to their partners. That is: they spent every fourth dollar they earn to keep their dominant position and influence. Some examples? Mozilla: more than 90% of the revenue comes from search partnerships&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fn4&quot; id=&quot;fnref4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;. Apple: estimates say they get up to $10 billion from Google (per year!)&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fn5&quot; id=&quot;fnref5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt;. And don’t get me even started on deals with hardware manufacturers and Android (where Google has officially been fined a massive fee for misbehaving and foreclosing the market). Do you really think these partners – who often completely depend on Google’s money – will work or innovate against Google, challenge their way how they treat privacy, their business model? It’s hard to bite the hand that feeds you. We know, we recently became a collateral damage in this game.&lt;/p&gt;
&lt;h5&gt;Google’s information monopoly is un-acceptable for any democracy&lt;/h5&gt;
&lt;p&gt;There are many reasons to like Google. They have great employees and they started with a big vision. But no matter how much you like them, no matter how good their products are, no matter how much you believe they have good intentions on their mind – it clearly cannot be good for our democracy and for our society if Google becomes the only filter for the digital world. Paraphrasing Monty Python: “What has Google ever done for us?”. They have done an awful lot for society, for the web and probably saved it a few times a long time ago. But it is time to also see them as the empire they have become. And empires must fall.&lt;/p&gt;
&lt;p&gt;There is a reason, why in many democracies, media is carefully regulated. There is a reason why different media companies are often not allowed to merge. There is a reason why we don’t sell all radio and TV broadcasting licenses simply to one single highest bidder. Common sense dictates to ensure plurality of information. Do we really want a world, where we get our most important questions answered by only one algorithm, by what Google’s engineers decide to prioritize?&lt;/p&gt;
&lt;p&gt;If you do not see why someone with a 93% information monopoly constitutes a risk to democracy and freedom, then you should not be reading blog posts on the Web but maybe some history books instead.&lt;/p&gt;
&lt;h5&gt;Cliqz, Search, and You&lt;/h5&gt;
&lt;p&gt;Search is surely not the only problem digitalization has created. It is also not the only problem that should be addressed. It is however the problem we chose to tackle at Cliqz. We have chosen to build the technology and not just white labeling an existing solution. We have chosen privacy over convenience. All at a large cost - perhaps one that is even a threat to our company. We are willing to pay that cost, because search is the problem that needs to be solved. And search is the problem we chose to tackle.&lt;/p&gt;
&lt;p&gt;But we cannot solve it without you: your every query will make Cliqz a better search. Don’t settle with convenience over a more diverse web infrastructure. Don’t settle with an information monopoly, just because it is there. Give us feedback and engage into the discussion. Don’t accept the status-quo.&lt;/p&gt;

&lt;h5&gt;Footnotes and references&lt;/h5&gt;
&lt;hr class=&quot;footnotes-sep&quot;/&gt;&lt;section class=&quot;footnotes&quot;&gt;&lt;ol class=&quot;footnotes-list&quot; readability=&quot;-11.211358313817&quot;&gt;&lt;li class=&quot;footnote-item&quot; id=&quot;fn1&quot; readability=&quot;-19.486899563319&quot;&gt;
&lt;p&gt;I actually doubt that the worldwide market share is that big and the number correct. The source for this is &lt;a href=&quot;https://gs.statcounter.com/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;https://gs.statcounter.com/&lt;/a&gt; and I would suspect it is not (correctly) measuring China. Otherwise Baidu on a worldwide scale should have a larger total market share. Nevertheless, this does not change the core message as long as we focus on the Western sphere: Google has a 90+% market share in most of the world, in Europe it is close to 100%. &lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fnref1&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;footnote-item&quot; id=&quot;fn2&quot; readability=&quot;-21.013698630137&quot;&gt;
&lt;p&gt;Less than Half of Google Searches Now Result in a Click - &lt;a href=&quot;https://sparktoro.com/blog/less-than-half-of-google-searches-now-result-in-a-click/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;[source]&lt;/a&gt; &lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fnref2&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;footnote-item&quot; id=&quot;fn3&quot; readability=&quot;-0.20491803278689&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://marketingland.com/almost-70-of-digital-ad-spending-going-to-google-facebook-amazon-says-analyst-firm-262565&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;https://marketingland.com/almost-70-of-digital-ad-spending-going-to-google-facebook-amazon-says-analyst-firm-262565&lt;/a&gt; &lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fnref3&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;footnote-item&quot; id=&quot;fn4&quot; readability=&quot;-0.27659574468085&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://assets.mozilla.net/annualreport/2018/mozilla-fdn-2018-short-form-final-0926.pdf&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;https://assets.mozilla.net/annualreport/2018/mozilla-fdn-2018-short-form-final-0926.pdf&lt;/a&gt; &lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fnref4&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;footnote-item&quot; id=&quot;fn5&quot; readability=&quot;-0.24271844660194&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnbc.com/2019/02/12/goldman-sachs-apple-dependent-on-google-for-services-revenue.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; pattern=&quot;/^https?:\/\//&quot;&gt;https://www.cnbc.com/2019/02/12/goldman-sachs-apple-dependent-on-google-for-services-revenue.htm&lt;/a&gt; &lt;a href=&quot;https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html#fnref5&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/section&gt;&lt;p class=&quot;share-text&quot;&gt;Share this article&lt;/p&gt;
&lt;hr class=&quot;share-hr&quot;/&gt;
</description>
<pubDate>Sun, 01 Dec 2019 16:41:58 +0000</pubDate>
<dc:creator>kkm</dc:creator>
<og:type>website</og:type>
<og:url>https://0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html</og:url>
<og:title>The world needs Cliqz. The world needs more search engines.</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.0x65.dev/blog/2019-12-01/the-world-needs-cliqz-the-world-needs-more-search-engines.html</dc:identifier>
</item>
<item>
<title>Unbundling AWS</title>
<link>https://www.tclauson.com/2019/09/11/Unbundling-AWS.html</link>
<guid isPermaLink="true" >https://www.tclauson.com/2019/09/11/Unbundling-AWS.html</guid>
<description>&lt;p&gt;Over the past year, I have spent a lot of time digging into cloud infrastructure and technical tools as a space for investing. One of the emergent behaviors of technology trends is the accelerating advantage of being a winner, played out with network effects or scale effects (or both!). Since its mid-2000’s launch, AWS has obviously become a juggernaut, growing so quickly and throwing off so much cash that even Amazon can’t put it to work fast enough (!). Getting a new software product to market has never been as cheap or fast as it is today, despite the fact that the surface area of in-depth knowledge required to build high-performing software has never been higher.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/c34b7cd15f9b3a99e9e9b11cbe7cf29766a8db33/9395c/assets/img/aws_rev.svg&quot; alt=&quot;AWS Revenue&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Leveraging lessons from building Amazon’s existing infrastructure, AWS has amassed &lt;a href=&quot;https://www.parkmycloud.com/blog/aws-vs-azure-vs-google-cloud-market-share/&quot;&gt;almost 50% market share&lt;/a&gt; of public cloud spending. It started out offering a small handful of services (S3, SQS, and EC2), but now has &lt;a href=&quot;https://en.wikipedia.org/wiki/Timeline_of_Amazon_Web_Services&quot;&gt;170 discrete services&lt;/a&gt; spanning 23 categories (and these are only the public ones!) As an early stage investor, I’m hard-pressed to name any tectonic shifts that have had as much impact on startup formation. The availability of open source tooling and the ease of access to infrastructure on AWS and other IaaS providers, and infrastructure turning into software, which means it’s programmable and, increasingly, thinly-sliced.&lt;/p&gt;
&lt;p&gt;Recently, when I opened the AWS Console, I had a moment of &lt;em&gt;deja vu&lt;/em&gt; that called back to a 2010 post by Andrew Parker, then of Spark Capital, that focused on the &lt;a href=&quot;https://thegongshow.tumblr.com/post/345941486/the-spawn-of-craigslist-like-most-vcs-that-focus&quot;&gt;startup opportunities of unbundling Craigslist&lt;/a&gt;. And it shifted a long-simmering feeling into focus for me: &lt;strong&gt;I am really excited about startups that are unbundling AWS.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/2e2cb7c690d374dbcd1f6c293810fd4d96c73786/01792/assets/img/aws_cl_sidebyside.png&quot; alt=&quot;AWS Console and Craigslist homepage side-by-side&quot;/&gt;&lt;/p&gt;
&lt;p&gt;AWS’s growth has started slowing a bit, perhaps due to saturation, perhaps due to competition. Or perhaps it is because [my theory] as they continue to expand into platform-type services, some of their offerings shift from being best-in-class to being very reliable and with a ‘just-ok-but-well-integrated’ user experience. This is a great way to make money, but it also leaves certain of the ‘categories’ on the homepage open to outmaneuvering by a best-in-class experience.&lt;/p&gt;
&lt;p&gt;I need to map out something like the awesome graphics that the Spark folks produced for Craigslist, but for now, I have been exploring my intuition about where and why there will be pieces of AWS that will be subject to unbundling. Here are a few that have come to mind already:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Frameworks and deployment tools that make application software agnostic to the underlying infrastructure provider. Things like the &lt;a href=&quot;https://www.tclauson.com/2019/09/11/serverless.com&quot;&gt;Serverless framework&lt;/a&gt;, containers + orchestration, or IAC tools like &lt;a href=&quot;https://www.saltstack.com/&quot;&gt;Saltstack&lt;/a&gt;, &lt;a href=&quot;https://www.hashicorp.com/products/terraform&quot;&gt;Terraform&lt;/a&gt;&lt;a href=&quot;https://www.tclauson.com/2019/09/11/Unbundling-AWS.html&quot;&gt;,&lt;/a&gt; &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;, etc&lt;/li&gt;
&lt;li&gt;The overlapping areas of logging, APM, and monitoring. This is a hot area right now, with IPO’s like &lt;a href=&quot;https://www.dynatrace.com/&quot;&gt;Dynatrace&lt;/a&gt; or &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;Datadog&lt;/a&gt;, or acquisitions like &lt;a href=&quot;https://www.signalfx.com/&quot;&gt;SignalFX&lt;/a&gt;. Related: &lt;a href=&quot;https://www.linuxjournal.com/content/cloudwatch-devil-i-must-use-it&quot;&gt;Cloudwatch is terrible&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Data science workflows – this is my subjective, anecdotal experience, but most data scientists I know have a preference for Google Cloud for a lot of their work, and &lt;a href=&quot;https://cloud.google.com/tpu/&quot;&gt;custom hardware like TPUs&lt;/a&gt; likely play a role here&lt;/li&gt;
&lt;li&gt;Authentication and identity – &lt;a href=&quot;https://auth0.com/&quot;&gt;Auth0&lt;/a&gt;, &lt;a href=&quot;https://www.loginradius.com/&quot;&gt;LoginRadius&lt;/a&gt;, &lt;a href=&quot;https://www.okta.com/&quot;&gt;Okta&lt;/a&gt;, etc … where it may make sense to have a third-party handle&lt;/li&gt;
&lt;li&gt;Paradigms that lead to different stack choices – I’m a big proponent of the &lt;a href=&quot;https://jamstack.org/&quot;&gt;JAMstack&lt;/a&gt;, and it’s a prime example of a paradigm where AWS may not be a natural choice for parts of this architecture. I believe that we will continue to see this and other new architectural paradigms evolve&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are obvious differences between Craigslist and AWS. The most important is that Craigslist (and each of the category spawn) is a marketplace, and so has the powerful advantage of network effects. Another distinction is that AWS has relative cost advantages over its unbundlers when it comes to the fundamental components of infrastructure (compute, bandwidth, storage, etc.), and I can’t see a parallel to Craigslist. So it’s not a perfect analogy, but the premise of unbundling certain categories still holds.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;But what if Amazon launches a competing product?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is one of those classical questions for any startup. In general, I don’t get too worried about $BIGCO being the reason that a startup dies. In my experience, it’s pretty far down the list of &lt;a href=&quot;http://www.paulgraham.com/startupmistakes.html&quot;&gt;things that actually kill startups&lt;/a&gt;. That said, particular to developer-facing startups, there might be some reason for concern. AWS’s relationship with open source is … &lt;a href=&quot;https://stratechery.com/2019/aws-mongodb-and-the-economic-realities-of-open-source/&quot;&gt;complicated&lt;/a&gt;. Notably, Mongo and Redis have both had to maneuver to combat AWS. The thing to note here is that in both of those situations, it’s a problem that those companies have had to face as they &lt;em&gt;monetize&lt;/em&gt;, and was not a barrier to adoption. Put another way: we should all be so lucky to be at a scale and level of popularity where this becomes a problem. It’s hard for me to see a lot of cases where AWS will be competing with companies before they reach scale.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;Back to the future&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thinly-sliced? Purpose-built, best-in-class tools? Sound familiar?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… elaborate computing tasks are typically composed from loosely coupled small parts, often software tools taken off the shelf.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;a href=&quot;https://danluu.com/mcilroy-unix/&quot;&gt;UNIX philosophy&lt;/a&gt; strikes back! The history of software development has a lot of patterns in it, and this trend toward tools and component parts that do one thing well is one of my favorite. If every part of our infrastructure is available in ever-smaller pieces, on-demand, then the long narrative arc of this philosophy ought to continue to win out.&lt;/p&gt;
&lt;p&gt;There are already billion-dollar companies that focus on relatively narrow niches within the AWS offering space–and I believe there will be many, many more. &lt;strong&gt;If you’re building something that carves out a piece of AWS, I want to talk to you&lt;/strong&gt;.&lt;/p&gt;
</description>
<pubDate>Sun, 01 Dec 2019 13:47:01 +0000</pubDate>
<dc:creator>taylorwc</dc:creator>
<og:title>Unbundling AWS</og:title>
<og:description>Over the past year, I have spent a lot of time digging into cloud infrastructure and technical tools as a space for investing. One of the emergent behaviors of technology trends is the accelerating advantage of being a winner, played out with network effects or scale effects (or both!). Since its mid-2000’s launch, AWS has obviously become a juggernaut, growing so quickly and throwing off so much cash that even Amazon can’t put it to work fast enough (!). Getting a new software product to market has never been as cheap or fast as it is today, despite the fact that the surface area of in-depth knowledge required to build high-performing software has never been higher.</og:description>
<og:url>https://tclauson.com/2019/09/11/Unbundling-AWS.html</og:url>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tclauson.com/2019/09/11/Unbundling-AWS.html</dc:identifier>
</item>
<item>
<title>Advent of Code 2019</title>
<link>https://adventofcode.com/2019</link>
<guid isPermaLink="true" >https://adventofcode.com/2019</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;Advent of Code 2019&lt;/title&gt;&lt;link href=&quot;//fonts.googleapis.com/css?family=Source+Code+Pro:300&amp;amp;subset=latin,latin-ext&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/style.css?22&quot;/&gt;&lt;link rel=&quot;stylesheet alternate&quot; type=&quot;text/css&quot; href=&quot;/static/highcontrast.css?0&quot; title=&quot;High Contrast&quot;/&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.png&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;20.076923076923&quot;&gt;
&lt;header&gt;

&lt;/header&gt;
&lt;pre class=&quot;calendar calendar-beckon&quot;&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day25&quot;&gt;      &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;              &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;         &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-day&quot;&gt;25&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day24&quot;&gt;                     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;       &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                  &lt;span class=&quot;calendar-day&quot;&gt;24&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day23&quot;&gt;                &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                                  &lt;span class=&quot;calendar-day&quot;&gt;23&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day22&quot;&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;             &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                            &lt;span class=&quot;calendar-day&quot;&gt;22&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day21&quot;&gt;                     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                             &lt;span class=&quot;calendar-day&quot;&gt;21&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day20&quot;&gt;       &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                          &lt;span class=&quot;calendar-day&quot;&gt;20&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day19&quot;&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;       &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                             &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;    &lt;span class=&quot;calendar-day&quot;&gt;19&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day18&quot;&gt;                                                   &lt;span class=&quot;calendar-day&quot;&gt;18&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day17&quot;&gt;    &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                    &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;              &lt;span class=&quot;calendar-day&quot;&gt;17&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day16&quot;&gt;   &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;           &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;      &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;           &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                &lt;span class=&quot;calendar-day&quot;&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day15&quot;&gt;               &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                         &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;   &lt;span class=&quot;calendar-day&quot;&gt;15&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day14&quot;&gt;                          &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                        &lt;span class=&quot;calendar-day&quot;&gt;14&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day13&quot;&gt;     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                      &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                      &lt;span class=&quot;calendar-day&quot;&gt;13&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day12&quot;&gt;''''...                              &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;    &lt;span class=&quot;calendar-day&quot;&gt;12&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day11&quot;&gt;       ''.    &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                                    &lt;span class=&quot;calendar-day&quot;&gt;11&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day10&quot;&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt; '.             &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                         &lt;span class=&quot;calendar-day&quot;&gt;10&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day9&quot;&gt; &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;         '.  &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                                   &lt;span class=&quot;calendar-day&quot;&gt; 9&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day8&quot;&gt;            '.   &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;            &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                    &lt;span class=&quot;calendar-day&quot;&gt; 8&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day7&quot;&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;    :      &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                              &lt;span class=&quot;calendar-day&quot;&gt; 7&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day6&quot;&gt;&lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;            :       &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;      &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;   &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;      &lt;span class=&quot;calendar-day&quot;&gt; 6&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day5&quot;&gt;     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;       :           &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                         &lt;span class=&quot;calendar-day&quot;&gt; 5&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day4&quot;&gt;            .'     &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;                      &lt;span class=&quot;calendar-day&quot;&gt; 4&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day3&quot;&gt; &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;         .'                                      &lt;span class=&quot;calendar-day&quot;&gt; 3&lt;/span&gt;&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;calendar-day2&quot;&gt;          .'                              &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-day&quot;&gt; 2&lt;/span&gt;&lt;span id=&quot;calendar-countdown&quot;/&gt;&lt;/span&gt;
&lt;a aria-label=&quot;Day 1&quot; href=&quot;https://adventofcode.com/2019/day/1&quot; class=&quot;calendar-day1&quot;&gt;       ..'                                &lt;span class=&quot;calendar-s&quot;&gt;.&lt;/span&gt;        &lt;span class=&quot;calendar-day&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;calendar-mark-complete&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;calendar-mark-verycomplete&quot;&gt;*&lt;/span&gt;&lt;/a&gt;
&lt;/pre&gt;
&lt;/body&gt;</description>
<pubDate>Sun, 01 Dec 2019 09:56:52 +0000</pubDate>
<dc:creator>scottdw</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://adventofcode.com/2019</dc:identifier>
</item>
<item>
<title>HTTPie – A user-friendly CLI HTTP client</title>
<link>https://github.com/jakubroztocil/httpie</link>
<guid isPermaLink="true" >https://github.com/jakubroztocil/httpie</guid>
<description>&lt;div class=&quot;Box-header d-flex flex-items-center flex-justify-between px-2&quot;&gt;
&lt;h3 class=&quot;Box-title pr-3&quot;&gt;README.rst&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;Box-body&quot;&gt;
&lt;article class=&quot;markdown-body entry-content p-5&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;HTTPie (pronounced &lt;em&gt;aitch-tee-tee-pie&lt;/em&gt;) is a command line HTTP client. Its goal is to make CLI interaction with web services as human-friendly as possible. It provides a simple &lt;code&gt;http&lt;/code&gt; command that allows for sending arbitrary HTTP requests using a simple and natural syntax, and displays colorized output. HTTPie can be used for testing, debugging, and generally interacting with HTTP servers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pypi.python.org/pypi/httpie&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Latest version released on PyPi&quot; src=&quot;https://camo.githubusercontent.com/ed3fee02cbb3ac1b3a106d67affe2861eb73056b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6874747069652e7376673f7374796c653d666c61742d737175617265266c6162656c3d6c6174657374253230737461626c6525323076657273696f6e&quot; data-canonical-src=&quot;https://img.shields.io/pypi/v/httpie.svg?style=flat-square&amp;amp;label=latest%20stable%20version&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jakubroztocil/httpie/actions&quot;&gt;&lt;img alt=&quot;Build status of the master branch on Mac/Linux/Windows&quot; src=&quot;https://github.com/jakubroztocil/httpie/workflows/Build/badge.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/jakubroztocil/httpie&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Test coverage&quot; src=&quot;https://camo.githubusercontent.com/b1017b5c8ba887555c91ee0b89e62cad7071e3bb/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6a616b7562726f7a746f63696c2f6874747069653f7374796c653d666c61742d737175617265&quot; data-canonical-src=&quot;https://img.shields.io/codecov/c/github/jakubroztocil/httpie?style=flat-square&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://pepy.tech/project/httpie&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Download count&quot; src=&quot;https://camo.githubusercontent.com/2be4d4cac5c3cdbd455d4b4168f5245c110244a8/68747470733a2f2f706570792e746563682f62616467652f687474706965&quot; data-canonical-src=&quot;https://pepy.tech/badge/httpie&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/jkbrzt/httpie&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Chat on Gitter&quot; src=&quot;https://camo.githubusercontent.com/3a117c9bc486c6bfe6f4556bccbd9875d26051cf/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6a6b62727a742f6874747069652e7376673f7374796c653d666c61742d737175617265&quot; data-canonical-src=&quot;https://img.shields.io/gitter/room/jkbrzt/httpie.svg?style=flat-square&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.gif&quot;&gt;&lt;img alt=&quot;HTTPie in action&quot; src=&quot;https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Expressive and intuitive syntax&lt;/li&gt;
&lt;li&gt;Formatted and colorized terminal output&lt;/li&gt;
&lt;li&gt;Built-in JSON support&lt;/li&gt;
&lt;li&gt;Forms and file uploads&lt;/li&gt;
&lt;li&gt;HTTPS, proxies, and authentication&lt;/li&gt;
&lt;li&gt;Arbitrary request data&lt;/li&gt;
&lt;li&gt;Custom headers&lt;/li&gt;
&lt;li&gt;Persistent sessions&lt;/li&gt;
&lt;li&gt;Wget-like downloads&lt;/li&gt;
&lt;li&gt;Linux, macOS and Windows support&lt;/li&gt;
&lt;li&gt;Plugins&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Test coverage&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.png&quot;&gt;&lt;img alt=&quot;HTTPie compared to cURL&quot; src=&quot;https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id4&quot;&gt;2.1   macOS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On macOS, HTTPie can be installed via &lt;a href=&quot;https://brew.sh/&quot; rel=&quot;nofollow&quot;&gt;Homebrew&lt;/a&gt; (recommended):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ brew install httpie
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A MacPorts &lt;em&gt;port&lt;/em&gt; is also available:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ port install httpie
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id5&quot;&gt;2.2   Linux&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Most Linux distributions provide a package that can be installed using the system package manager, for example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Debian, Ubuntu, etc.&lt;/span&gt;
$ apt-get install httpie
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Fedora&lt;/span&gt;
$ dnf install httpie
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; CentOS, RHEL, ...&lt;/span&gt;
$ yum install httpie
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Arch Linux&lt;/span&gt;
$ pacman -S httpie
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id6&quot;&gt;2.3   Windows, etc.&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A universal installation method (that works on Windows, Mac OS X, Linux, …, and always provides the latest version) is to use &lt;a href=&quot;https://pip.pypa.io/en/stable/installing/&quot; rel=&quot;nofollow&quot;&gt;pip&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Make sure we have an up-to-date version of pip and setuptools:&lt;/span&gt;
$ pip install --upgrade pip setuptools

$ pip install --upgrade httpie
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(If &lt;code&gt;pip&lt;/code&gt; installation fails for some reason, you can try &lt;code&gt;easy_install httpie&lt;/code&gt; as a fallback.)&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id7&quot;&gt;2.4   Python version&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting with version 2.0.0 (currently under development) Python 3.6+ is required.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id8&quot;&gt;2.5   Unstable version&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can also install the latest unreleased development version directly from the &lt;code&gt;master&lt;/code&gt; branch on GitHub. It is a work-in-progress of a future stable release so the experience might be not as smooth.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie/actions&quot;&gt;&lt;img alt=&quot;Build status of the master branch on Mac/Linux/Windows&quot; src=&quot;https://github.com/jakubroztocil/httpie/workflows/Build/badge.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On macOS you can install it with Homebrew:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ brew install httpie --HEAD
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otherwise with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ pip install --upgrade https://github.com/jakubroztocil/httpie/archive/master.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify that now we have the &lt;a href=&quot;https://github.com/jakubroztocil/httpie/blob/0af6ae1be444588bbc4747124e073423151178a0/httpie/__init__.py#L5&quot;&gt;current development version identifier&lt;/a&gt; with the &lt;code&gt;-dev&lt;/code&gt; suffix, for example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --version
1.0.0-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hello World:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http httpie.org
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Synopsis:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http [flags] [METHOD] URL [ITEM [ITEM]]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;code&gt;http --help&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id10&quot;&gt;3.1   Examples&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Custom &lt;a href=&quot;https://github.com/jakubroztocil/httpie#http-method&quot;&gt;HTTP method&lt;/a&gt;, &lt;a href=&quot;https://github.com/jakubroztocil/httpie#http-headers&quot;&gt;HTTP headers&lt;/a&gt; and &lt;a href=&quot;https://github.com/jakubroztocil/httpie#json&quot;&gt;JSON&lt;/a&gt; data:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http PUT example.org X-API-Token:123 name=John
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Submitting &lt;a href=&quot;https://github.com/jakubroztocil/httpie#forms&quot;&gt;forms&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -f POST example.org hello=World
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the request that is being sent using one of the &lt;a href=&quot;https://github.com/jakubroztocil/httpie#output-options&quot;&gt;output options&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -v example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;a href=&quot;https://developer.github.com/v3/issues/comments/#create-a-comment&quot;&gt;Github API&lt;/a&gt; to post a comment on an &lt;a href=&quot;https://github.com/jakubroztocil/httpie/issues/83&quot;&gt;issue&lt;/a&gt; with &lt;a href=&quot;https://github.com/jakubroztocil/httpie#authentication&quot;&gt;authentication&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -a USERNAME POST https://api.github.com/repos/jakubroztocil/httpie/issues/83/comments body=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;HTTPie is awesome! :heart:&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upload a file using &lt;a href=&quot;https://github.com/jakubroztocil/httpie#redirected-input&quot;&gt;redirected input&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; file.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download a file and save it via &lt;a href=&quot;https://github.com/jakubroztocil/httpie#redirected-output&quot;&gt;redirected output&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org/file &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; file
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download a file &lt;code&gt;wget&lt;/code&gt; style:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --download example.org/file
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use named &lt;a href=&quot;https://github.com/jakubroztocil/httpie#sessions&quot;&gt;sessions&lt;/a&gt; to make certain aspects or the communication persistent between requests to the same host:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --session=logged-in -a username:password httpbin.org/get API-Key:123

$ http --session=logged-in httpbin.org/headers
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set a custom &lt;code&gt;Host&lt;/code&gt; header to work around missing DNS records:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http localhost:8000 Host:example.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The name of the HTTP method comes right before the URL argument:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http DELETE example.org/todos/7
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which looks similar to the actual &lt;code&gt;Request-Line&lt;/code&gt; that is sent:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;DELETE&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /todos/7 HTTP/1.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;METHOD&lt;/code&gt; argument is omitted from the command, HTTPie defaults to either &lt;code&gt;GET&lt;/code&gt; (with no request data) or &lt;code&gt;POST&lt;/code&gt; (with request data).&lt;/p&gt;


&lt;p&gt;The only information HTTPie needs to perform a request is a URL. The default scheme is, somewhat unsurprisingly, &lt;code&gt;http://&lt;/code&gt;, and can be omitted from the argument – &lt;code&gt;http example.org&lt;/code&gt; works just fine.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id13&quot;&gt;5.1   Querystring parameters&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you find yourself manually constructing URLs with querystring parameters on the terminal, you may appreciate the &lt;code&gt;param==value&lt;/code&gt; syntax for appending URL parameters. With that, you don't have to worry about escaping the &lt;code&gt;&amp;amp;&lt;/code&gt; separators for your shell. Also, special characters in parameter values, will also automatically escaped (HTTPie otherwise expects the URL to be already escaped). To search for &lt;code&gt;HTTPie logo&lt;/code&gt; on Google Images you could use this command:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http www.google.com search==&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;HTTPie logo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; tbm==isch
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /?search=HTTPie+logo&amp;amp;tbm=isch HTTP/1.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id14&quot;&gt;5.2   URL shortcuts for &lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Additionally, curl-like shorthand for localhost is supported. This means that, for example &lt;code&gt;:3000&lt;/code&gt; would expand to &lt;code&gt;http://localhost:3000&lt;/code&gt; If the port is omitted, then port 80 is assumed.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http :/foo
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /foo HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; localhost&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http :3000/bar
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /bar HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; localhost:3000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; / HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; localhost&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id15&quot;&gt;5.3   Other default schemes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When HTTPie is invoked as &lt;code&gt;https&lt;/code&gt; then the default scheme is &lt;code&gt;https://&lt;/code&gt; (&lt;code&gt;$ https example.org&lt;/code&gt; will make a request to &lt;code&gt;https://example.org&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can also use the &lt;code&gt;--default-scheme &amp;lt;URL_SCHEME&amp;gt;&lt;/code&gt; option to create shortcuts for other protocols than HTTP (possibly supported via plugins). Example for the &lt;a href=&quot;https://github.com/httpie/httpie-unixsocket&quot;&gt;httpie-unixsocket&lt;/a&gt; plugin:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Before&lt;/span&gt;
$ http http+unix://%2Fvar%2Frun%2Fdocker.sock/info
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Create an alias&lt;/span&gt;
$ &lt;span class=&quot;pl-c1&quot;&gt;alias&lt;/span&gt; http-unix=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;http --default-scheme=&quot;http+unix&quot;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Now the scheme can be omitted&lt;/span&gt;
$ http-unix %2Fvar%2Frun%2Fdocker.sock/info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are a few different &lt;em&gt;request item&lt;/em&gt; types that provide a convenient mechanism for specifying HTTP headers, simple JSON and form data, files, and URL parameters.&lt;/p&gt;
&lt;p&gt;They are key/value pairs specified after the URL. All have in common that they become part of the actual request that is sent and that their type is distinguished only by the separator used: &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;:=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;=@&lt;/code&gt;, and &lt;code&gt;:=@&lt;/code&gt;. The ones with an &lt;code&gt;@&lt;/code&gt; expect a file path as value.&lt;/p&gt;
&lt;table&gt;&lt;thead valign=&quot;bottom&quot;&gt;&lt;tr&gt;&lt;th&gt;Item Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;HTTP Headers &lt;code&gt;Name:Value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Arbitrary HTTP header, e.g. &lt;code&gt;X-API-Token:123&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;URL parameters &lt;code&gt;name==value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Appends the given name/value pair as a query string parameter to the URL. The &lt;code&gt;==&lt;/code&gt; separator is used.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Data Fields &lt;code&gt;field=value&lt;/code&gt;, &lt;code&gt;field=@file.txt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Request data fields to be serialized as a JSON object (default), or to be form-encoded (&lt;code&gt;--form, -f&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Raw JSON fields &lt;code&gt;field:=json&lt;/code&gt;, &lt;code&gt;field:=@file.json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Useful when sending JSON and one or more fields need to be a &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, nested &lt;code&gt;Object&lt;/code&gt;, or an &lt;code&gt;Array&lt;/code&gt;, e.g., &lt;code&gt;meals:='[&quot;ham&quot;,&quot;spam&quot;]'&lt;/code&gt; or &lt;code&gt;pies:=[1,2,3]&lt;/code&gt; (note the quotes).&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Form File Fields &lt;code&gt;field@/dir/file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only available with &lt;code&gt;--form, -f&lt;/code&gt;. For example &lt;code&gt;screenshot@~/Pictures/img.png&lt;/code&gt;. The presence of a file field results in a &lt;code&gt;multipart/form-data&lt;/code&gt; request.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Note that data fields aren't the only way to specify request data: &lt;a href=&quot;https://github.com/jakubroztocil/httpie#redirected-input&quot;&gt;Redirected input&lt;/a&gt; is a mechanism for passing arbitrary request data.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id17&quot;&gt;6.1   Escaping rules&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can use &lt;code&gt;\&lt;/code&gt; to escape characters that shouldn't be used as separators (or parts thereof). For instance, &lt;code&gt;foo\==bar&lt;/code&gt; will become a data key/value pair (&lt;code&gt;foo=&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;) instead of a URL parameter.&lt;/p&gt;
&lt;p&gt;Often it is necessary to quote the values, e.g. &lt;code&gt;foo='bar baz'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If any of the field names or headers starts with a minus (e.g., &lt;code&gt;-fieldname&lt;/code&gt;), you need to place all such items after the special token &lt;code&gt;--&lt;/code&gt; to prevent confusion with &lt;code&gt;--arguments&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http httpbin.org/post  --  -name-starting-with-dash=foo -Unusual-Header:bar
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /post HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;-Unusual-Header:&lt;/span&gt; bar&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; application/json&lt;/span&gt;

{
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;-name-starting-with-dash&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;JSON is the &lt;em&gt;lingua franca&lt;/em&gt; of modern web services and it is also the &lt;strong&gt;implicit content type&lt;/strong&gt; HTTPie uses by default.&lt;/p&gt;
&lt;p&gt;Simple example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http PUT example.org name=John email=john@example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; / HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept:&lt;/span&gt; application/json, */*&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept-Encoding:&lt;/span&gt; gzip, deflate&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; application/json&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; example.org&lt;/span&gt;

{
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;john@example.org&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id19&quot;&gt;7.1   Default behaviour&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your command includes some data &lt;a href=&quot;https://github.com/jakubroztocil/httpie#request-items&quot;&gt;request items&lt;/a&gt;, they are serialized as a JSON object by default. HTTPie also automatically sets the following headers, both of which can be overwritten:&lt;/p&gt;
&lt;table&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;application/json, */*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id20&quot;&gt;7.2   Explicit JSON&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can use &lt;code&gt;--json, -j&lt;/code&gt; to explicitly set &lt;code&gt;Accept&lt;/code&gt; to &lt;code&gt;application/json&lt;/code&gt; regardless of whether you are sending data (it's a shortcut for setting the header via the usual header notation: &lt;code&gt;http url Accept:'application/json, */*'&lt;/code&gt;). Additionally, HTTPie will try to detect JSON responses even when the &lt;code&gt;Content-Type&lt;/code&gt; is incorrectly &lt;code&gt;text/plain&lt;/code&gt; or unknown.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id21&quot;&gt;7.3   Non-string JSON fields&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Non-string fields use the &lt;code&gt;:=&lt;/code&gt; separator, which allows you to embed raw JSON into the resulting object. Text and raw JSON files can also be embedded into fields using &lt;code&gt;=@&lt;/code&gt; and &lt;code&gt;:=@&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http PUT api.example.com/person/1 \
    name=John \
    age:=29 married:=false hobbies:=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;[&quot;http&quot;, &quot;pies&quot;]&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-cce&quot;&gt;\ &lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Raw JSON&lt;/span&gt;
    description=@about-john.txt &lt;span class=&quot;pl-cce&quot;&gt;\ &lt;/span&gt;  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Embed text file&lt;/span&gt;
    bookmarks:=@bookmarks.json      &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Embed JSON file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /person/1 HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept:&lt;/span&gt; application/json, */*&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; application/json&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; api.example.com&lt;/span&gt;

{
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;age&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;29&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hobbies&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pies&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;description&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John is a nice guy who likes pies.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;married&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;John&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;bookmarks&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTTPie&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://httpie.org&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that with this syntax the command gets unwieldy when sending complex data. In that case it's always better to use &lt;a href=&quot;https://github.com/jakubroztocil/httpie#redirected-input&quot;&gt;redirected input&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http POST api.example.com/person/1 &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; person.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Submitting forms is very similar to sending &lt;a href=&quot;https://github.com/jakubroztocil/httpie#json&quot;&gt;JSON&lt;/a&gt; requests. Often the only difference is in adding the &lt;code&gt;--form, -f&lt;/code&gt; option, which ensures that data fields are serialized as, and &lt;code&gt;Content-Type&lt;/code&gt; is set to, &lt;code&gt;application/x-www-form-urlencoded; charset=utf-8&lt;/code&gt;. It is possible to make form data the implicit content type instead of JSON via the &lt;a href=&quot;https://github.com/jakubroztocil/httpie#config&quot;&gt;config&lt;/a&gt; file.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id23&quot;&gt;8.1   Regular forms&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --form POST api.example.org/person/1 name=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;John Smith&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /person/1 HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; application/x-www-form-urlencoded; charset=utf-8&lt;/span&gt;

name&lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;John+Smith&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id24&quot;&gt;8.2   File upload forms&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If one or more file fields is present, the serialization and content type is &lt;code&gt;multipart/form-data&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -f POST example.com/jobs name=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;John Smith&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; cv@~/Documents/cv.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The request above is the same as if the following HTML form were submitted:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;multipart/form-data&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://example.com/jobs&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;file&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;form&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;@&lt;/code&gt; is used to simulate a file upload form field, whereas &lt;code&gt;=@&lt;/code&gt; just embeds the file content as a regular text field value.&lt;/p&gt;


&lt;p&gt;To set custom headers you can use the &lt;code&gt;Header:Value&lt;/code&gt; notation:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org  User-Agent:Bacon/1.0  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Cookie:valued-visitor=yes;foo=bar&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;  \
    X-Foo:Bar  Referer:https://httpie.org/
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; / HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept:&lt;/span&gt; */*&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept-Encoding:&lt;/span&gt; gzip, deflate&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Cookie:&lt;/span&gt; valued-visitor=yes;foo=bar&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; example.org&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Referer:&lt;/span&gt; https://httpie.org/&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;User-Agent:&lt;/span&gt; Bacon/1.0&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;X-Foo:&lt;/span&gt; Bar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id26&quot;&gt;9.1   Default request headers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are a couple of default headers that HTTPie sets:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; / HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept:&lt;/span&gt; */*&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept-Encoding:&lt;/span&gt; gzip, deflate&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;User-Agent:&lt;/span&gt; HTTPie/&amp;lt;version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; &amp;lt;taken-from-URL&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any of these except &lt;code&gt;Host&lt;/code&gt; can be overwritten and some of them unset.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id27&quot;&gt;9.2   Empty headers and header un-setting&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To unset a previously specified header (such a one of the default headers), use &lt;code&gt;Header:&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http httpbin.org/headers Accept: User-Agent:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To send a header with an empty value, use &lt;code&gt;Header;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http httpbin.org/headers &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Header;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id28&quot;&gt;9.3   Limiting response headers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;--max-headers=n&lt;/code&gt; options allows you to control the number of headers HTTPie reads before giving up (the default &lt;code&gt;0&lt;/code&gt;, i.e., there’s no limit).&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --max-headers=100 httpbin.org/get
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTP clients send cookies to the server as regular &lt;a href=&quot;https://github.com/jakubroztocil/httpie#http-headers&quot;&gt;HTTP headers&lt;/a&gt;. That means, HTTPie does not offer any special syntax for specifying cookies — the usual &lt;code&gt;Header:Value&lt;/code&gt; notation is used:&lt;/p&gt;
&lt;p&gt;Send a single cookie:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org Cookie:sessionid=foo
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; / HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept:&lt;/span&gt; */*&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept-Encoding:&lt;/span&gt; gzip, deflate&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Connection:&lt;/span&gt; keep-alive&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Cookie:&lt;/span&gt; sessionid=foo&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; example.org&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;User-Agent:&lt;/span&gt; HTTPie/0.9.9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Send multiple cookies (note the header is quoted to prevent the shell from interpreting the &lt;code&gt;;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Cookie:sessionid=foo;another-cookie=bar&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; / HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept:&lt;/span&gt; */*&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept-Encoding:&lt;/span&gt; gzip, deflate&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Connection:&lt;/span&gt; keep-alive&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Cookie:&lt;/span&gt; sessionid=foo;another-cookie=bar&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Host:&lt;/span&gt; example.org&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;User-Agent:&lt;/span&gt; HTTPie/0.9.9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you often deal with cookies in your requests, then chances are you'd appreciate the &lt;a href=&quot;https://github.com/jakubroztocil/httpie#sessions&quot;&gt;sessions&lt;/a&gt; feature.&lt;/p&gt;


&lt;p&gt;The currently supported authentication schemes are Basic and Digest (see &lt;a href=&quot;https://github.com/jakubroztocil/httpie#auth-plugins&quot;&gt;auth plugins&lt;/a&gt; for more). There are two flags that control authentication:&lt;/p&gt;
&lt;table&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--auth, -a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Pass a &lt;code&gt;username:password&lt;/code&gt; pair as the argument. Or, if you only specify a username (&lt;code&gt;-a username&lt;/code&gt;), you'll be prompted for the password before the request is sent. To send an empty password, pass &lt;code&gt;username:&lt;/code&gt;. The &lt;code&gt;username:password@hostname&lt;/code&gt; URL syntax is supported as well (but credentials passed via &lt;code&gt;-a&lt;/code&gt; have higher priority).&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--auth-type, -A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Specify the auth mechanism. Possible values are &lt;code&gt;basic&lt;/code&gt; and &lt;code&gt;digest&lt;/code&gt;. The default value is &lt;code&gt;basic&lt;/code&gt; so it can often be omitted.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id31&quot;&gt;11.1   Basic auth&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -a username:password example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id32&quot;&gt;11.2   Digest auth&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -A digest -a username:password example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id33&quot;&gt;11.3   Password prompt&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -a username example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id34&quot;&gt;11.4   &lt;code&gt;.netrc&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Authentication information from your &lt;code&gt;~/.netrc&lt;/code&gt; file is by default honored as well.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat &lt;span class=&quot;pl-k&quot;&gt;~&lt;/span&gt;/.netrc
machine httpbin.org
login httpie
password &lt;span class=&quot;pl-c1&quot;&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http httpbin.org/basic-auth/httpie/test
HTTP/1.1 200 OK
[...]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be disable with the &lt;code&gt;--ignore-netrc&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --ignore-netrc httpbin.org/basic-auth/httpie/test
HTTP/1.1 401 UNAUTHORIZED
[...]
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id35&quot;&gt;11.5   Auth plugins&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Additional authentication mechanism can be installed as plugins. They can be found on the &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=httpie&amp;amp;submit=search&quot; rel=&quot;nofollow&quot;&gt;Python Package Index&lt;/a&gt;. Here's a few picks:&lt;/p&gt;


&lt;p&gt;By default, HTTP redirects are not followed and only the first response is shown:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http httpbin.org/redirect/3
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id37&quot;&gt;12.1   Follow &lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To instruct HTTPie to follow the &lt;code&gt;Location&lt;/code&gt; header of &lt;code&gt;30x&lt;/code&gt; responses and show the final response instead, use the &lt;code&gt;--follow, -F&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --follow httpbin.org/redirect/3
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id38&quot;&gt;12.2   Showing intermediary redirect responses&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you additionally wish to see the intermediary requests/responses, then use the &lt;code&gt;--all&lt;/code&gt; option as well:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --follow --all httpbin.org/redirect/3
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id39&quot;&gt;12.3   Limiting maximum redirects followed&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To change the default limit of maximum &lt;code&gt;30&lt;/code&gt; redirects, use the &lt;code&gt;--max-redirects=&amp;lt;limit&amp;gt;&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --follow --all --max-redirects=5 httpbin.org/redirect/3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can specify proxies to be used through the &lt;code&gt;--proxy&lt;/code&gt; argument for each protocol (which is included in the value in case of redirects across protocols):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --proxy=http:http://10.10.1.10:3128 --proxy=https:https://10.10.1.10:1080 example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With Basic authentication:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --proxy=http:http://user:pass@10.10.1.10:3128 example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id41&quot;&gt;13.1   Environment variables&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can also configure proxies by environment variables &lt;code&gt;ALL_PROXY&lt;/code&gt;, &lt;code&gt;HTTP_PROXY&lt;/code&gt; and &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, and the underlying Requests library will pick them up as well. If you want to disable proxies configured through the environment variables for certain hosts, you can specify them in &lt;code&gt;NO_PROXY&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In your &lt;code&gt;~/.bash_profile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; HTTP_PROXY=http://10.10.1.10:3128
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; HTTPS_PROXY=https://10.10.1.10:1080
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; NO_PROXY=localhost,example.com
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id42&quot;&gt;13.2   SOCKS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Homebrew-installed HTTPie comes with SOCKS proxy support out of the box. To enable SOCKS proxy support for non-Homebrew installations, you'll might need to install &lt;code&gt;requests[socks]&lt;/code&gt; manually using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ pip install -U requests[socks]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usage is the same as for other types of &lt;a href=&quot;https://github.com/jakubroztocil/httpie#proxies&quot;&gt;proxies&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --proxy=http:socks5://user:pass@host:port --proxy=https:socks5://user:pass@host:port example.org
&lt;/pre&gt;&lt;/div&gt;



&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id44&quot;&gt;14.1   Server SSL certificate verification&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To skip the host's SSL certificate verification, you can pass &lt;code&gt;--verify=no&lt;/code&gt; (default is &lt;code&gt;yes&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --verify=no https://example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id45&quot;&gt;14.2   Custom CA bundle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can also use &lt;code&gt;--verify=&amp;lt;CA_BUNDLE_PATH&amp;gt;&lt;/code&gt; to set a custom CA bundle path:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --verify=/ssl/custom_ca_bundle https://example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id46&quot;&gt;14.3   Client side SSL certificate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To use a client side certificate for the SSL communication, you can pass the path of the cert file with &lt;code&gt;--cert&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --cert=client.pem https://example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the private key is not contained in the cert file you may pass the path of the key file with &lt;code&gt;--cert-key&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --cert=client.crt --cert-key=client.key https://example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id47&quot;&gt;14.4   SSL version&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;--ssl=&amp;lt;PROTOCOL&amp;gt;&lt;/code&gt; to specify the desired protocol version to use. This will default to SSL v2.3 which will negotiate the highest protocol that both the server and your installation of OpenSSL support. The available protocols are &lt;code&gt;ssl2.3&lt;/code&gt;, &lt;code&gt;ssl3&lt;/code&gt;, &lt;code&gt;tls1&lt;/code&gt;, &lt;code&gt;tls1.1&lt;/code&gt;, &lt;code&gt;tls1.2&lt;/code&gt;, &lt;code&gt;tls1.3&lt;/code&gt;. (The actually available set of protocols may vary depending on your OpenSSL installation.)&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Specify the vulnerable SSL v3 protocol to talk to an outdated server:&lt;/span&gt;
$ http --ssl=ssl3 https://vulnerable.example.org
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, HTTPie only outputs the final response and the whole response message is printed (headers as well as the body). You can control what should be printed via several options:&lt;/p&gt;
&lt;table&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--headers, -h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only the response headers are printed.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--body, -b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only the response body is printed.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--verbose, -v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Print the whole HTTP exchange (request and response). This option also enables &lt;code&gt;--all&lt;/code&gt; (see below).&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--print, -p&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Selects parts of the HTTP exchange.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;code&gt;--verbose&lt;/code&gt; can often be useful for debugging the request and generating documentation examples:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --verbose PUT httpbin.org/put hello=world
PUT /put HTTP/1.1
Accept: application/json, &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;
Accept-Encoding: gzip, deflate
Content-Type: application/json
Host: httpbin.org
User-Agent: HTTPie/0.2.7dev

{
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hello&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;world&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}


HTTP/1.1 200 OK
Connection: keep-alive
Content-Length: 477
Content-Type: application/json
Date: Sun, 05 Aug 2012 00:25:23 GMT
Server: gunicorn/0.13.4

{
    […]
}
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id49&quot;&gt;15.1   What parts of the HTTP exchange should be printed&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;All the other &lt;a href=&quot;https://github.com/jakubroztocil/httpie#output-options&quot;&gt;output options&lt;/a&gt; are under the hood just shortcuts for the more powerful &lt;code&gt;--print, -p&lt;/code&gt;. It accepts a string of characters each of which represents a specific part of the HTTP exchange:&lt;/p&gt;
&lt;table&gt;&lt;thead valign=&quot;bottom&quot;&gt;&lt;tr&gt;&lt;th&gt;Character&lt;/th&gt;
&lt;th&gt;Stands for&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;request headers&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;request body&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;response headers&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;response body&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Print request and response headers:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --print=Hh PUT httpbin.org/put hello=world
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id50&quot;&gt;15.2   Viewing intermediary requests/responses&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To see all the HTTP communication, i.e. the final request/response as well as any possible intermediary requests/responses, use the &lt;code&gt;--all&lt;/code&gt; option. The intermediary HTTP communication include followed redirects (with &lt;code&gt;--follow&lt;/code&gt;), the first unauthorized request when HTTP digest authentication is used (&lt;code&gt;--auth=digest&lt;/code&gt;), etc.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Include all responses that lead to the final one:&lt;/span&gt;
$ http --all --follow httpbin.org/redirect/3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The intermediary requests/response are by default formatted according to &lt;code&gt;--print, -p&lt;/code&gt; (and its shortcuts described above). If you'd like to change that, use the &lt;code&gt;--history-print, -P&lt;/code&gt; option. It takes the same arguments as &lt;code&gt;--print, -p&lt;/code&gt; but applies to the intermediary requests only.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Print the intermediary requests/responses differently than the final one:&lt;/span&gt;
$ http -A digest -a foo:bar --all -p Hh -P H httpbin.org/digest-auth/auth/foo/bar
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id51&quot;&gt;15.3   Conditional body download&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As an optimization, the response body is downloaded from the server only if it's part of the output. This is similar to performing a &lt;code&gt;HEAD&lt;/code&gt; request, except that it applies to any HTTP method you use.&lt;/p&gt;
&lt;p&gt;Let's say that there is an API that returns the whole resource when it is updated, but you are only interested in the response headers to see the status code after an update:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --headers PATCH example.org/Really-Huge-Resource name=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;New Name&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we are only printing the HTTP headers here, the connection to the server is closed as soon as all the response headers have been received. Therefore, bandwidth and time isn't wasted downloading the body which you don't care about. The response headers are downloaded always, even if they are not part of the output&lt;/p&gt;


&lt;p&gt;The universal method for passing request data is through redirected &lt;code&gt;stdin&lt;/code&gt; (standard input)—piping. Such data is buffered and then with no further processing used as the request body. There are multiple useful ways to use piping:&lt;/p&gt;
&lt;p&gt;Redirect from a file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http PUT example.com/person/1 X-API-Token:123 &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; person.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or the output of another program:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ grep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;401 Unauthorized&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /var/log/httpd/error_log &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http POST example.org/intruders
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use &lt;code&gt;echo&lt;/code&gt; for simple data:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{&quot;name&quot;: &quot;John&quot;}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http PATCH example.com/person/1 X-API-Token:123
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use a Bash &lt;em&gt;here string&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.com/ &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{&quot;name&quot;: &quot;John&quot;}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even pipe web services together using HTTPie:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http GET https://api.github.com/repos/jakubroztocil/httpie &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http POST httpbin.org/post
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use &lt;code&gt;cat&lt;/code&gt; to enter multiline data on the terminal:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http POST example.com
&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;paste&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
^D
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ cat &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http POST example.com/todos Content-Type:text/plain
- buy milk
- call parents
^D
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On OS X, you can send the contents of the clipboard with &lt;code&gt;pbpaste&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ pbpaste &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http PUT example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passing data through &lt;code&gt;stdin&lt;/code&gt; cannot be combined with data fields specified on the command line:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;data&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http POST example.org more=data   &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; This is invalid&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To prevent HTTPie from reading &lt;code&gt;stdin&lt;/code&gt; data you can use the &lt;code&gt;--ignore-stdin&lt;/code&gt; option.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id53&quot;&gt;16.1   Request data from a filename&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An alternative to redirected &lt;code&gt;stdin&lt;/code&gt; is specifying a filename (as &lt;code&gt;@/path/to/file&lt;/code&gt;) whose content is used as if it came from &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It has the advantage that the &lt;code&gt;Content-Type&lt;/code&gt; header is automatically set to the appropriate value based on the filename extension. For example, the following request sends the verbatim contents of that XML file with &lt;code&gt;Content-Type: application/xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http PUT httpbin.org/put @/data/file.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTPie does several things by default in order to make its terminal output easy to read.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id55&quot;&gt;17.1   Colors and formatting&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Syntax highlighting is applied to HTTP headers and bodies (where it makes sense). You can choose your preferred color scheme via the &lt;code&gt;--style&lt;/code&gt; option if you don't like the default one (see &lt;code&gt;$ http --help&lt;/code&gt; for the possible values).&lt;/p&gt;
&lt;p&gt;Also, the following formatting is applied:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;HTTP headers are sorted by name.&lt;/li&gt;
&lt;li&gt;JSON data is indented, sorted by keys, and unicode escapes are converted to the characters they represent.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;One of these options can be used to control output processing:&lt;/p&gt;
&lt;table&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--pretty=all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Apply both colors and formatting. Default for terminal output.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--pretty=colors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Apply colors.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--pretty=format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Apply formatting.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;--pretty=none&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Disables output processing. Default for redirected output.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id56&quot;&gt;17.2   Binary data&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Binary data is suppressed for terminal output, which makes it safe to perform requests to URLs that send back binary data. Binary data is suppressed also in redirected, but prettified output. The connection is closed as soon as we know that the response body is binary,&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org/Movie.mov
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will nearly instantly see something like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
HTTP/&lt;span class=&quot;pl-c1&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt; OK
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Accept-Ranges:&lt;/span&gt; bytes&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Encoding:&lt;/span&gt; gzip&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; video/quicktime&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Transfer-Encoding:&lt;/span&gt; chunked&lt;/span&gt;

+-----------------------------------------+
| NOTE: binary data not shown in terminal |
+-----------------------------------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTPie uses a different set of defaults for redirected output than for &lt;a href=&quot;https://github.com/jakubroztocil/httpie#terminal-output&quot;&gt;terminal output&lt;/a&gt;. The differences being:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Formatting and colors aren't applied (unless &lt;code&gt;--pretty&lt;/code&gt; is specified).&lt;/li&gt;
&lt;li&gt;Only the response body is printed (unless one of the &lt;a href=&quot;https://github.com/jakubroztocil/httpie#output-options&quot;&gt;output options&lt;/a&gt; is set).&lt;/li&gt;
&lt;li&gt;Also, binary data isn't suppressed.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The reason is to make piping HTTPie's output to another programs and downloading files work with no extra flags. Most of the time, only the raw response body is of an interest when the output is redirected.&lt;/p&gt;
&lt;p&gt;Download a file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http example.org/Movie.mov &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; Movie.mov
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download an image of Octocat, resize it using ImageMagick, upload it elsewhere:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http octodex.github.com/images/original.jpg &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; convert - -resize 25% -  &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http example.org/Octocats
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Force colorizing and formatting, and show both the request and the response in &lt;code&gt;less&lt;/code&gt; pager:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --pretty=all --verbose example.org &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; less -R
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-R&lt;/code&gt; flag tells &lt;code&gt;less&lt;/code&gt; to interpret color escape sequences included HTTPie`s output.&lt;/p&gt;
&lt;p&gt;You can create a shortcut for invoking HTTPie with colorized and paged output by adding the following to your &lt;code&gt;~/.bash_profile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;httpless&lt;/span&gt; {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; `httpless example.org'&lt;/span&gt;
    http --pretty=all --print=hb &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; less -R&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;HTTPie features a download mode in which it acts similarly to &lt;code&gt;wget&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When enabled using the &lt;code&gt;--download, -d&lt;/code&gt; flag, response headers are printed to the terminal (&lt;code&gt;stderr&lt;/code&gt;), and a progress bar is shown while the response body is being saved to a file.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --download https://github.com/jakubroztocil/httpie/archive/master.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
HTTP/&lt;span class=&quot;pl-c1&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt; OK
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Disposition:&lt;/span&gt; attachment; filename=httpie-master.tar.gz&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Length:&lt;/span&gt; 257336&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; application/x-gzip&lt;/span&gt;

Downloading &lt;span class=&quot;pl-c1&quot;&gt;251.30&lt;/span&gt; kB to &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;httpie-master.tar.gz&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
Done. &lt;span class=&quot;pl-c1&quot;&gt;251.30&lt;/span&gt; kB in &lt;span class=&quot;pl-c1&quot;&gt;2.73862&lt;/span&gt;s (&lt;span class=&quot;pl-c1&quot;&gt;91.76&lt;/span&gt; kB/s)
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id59&quot;&gt;19.1   Downloaded filename&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are three mutually exclusive ways through which HTTPie determines the output filename (with decreasing priority):&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You can explicitly provide it via &lt;code&gt;--output, -o&lt;/code&gt;. The file gets overwritten if it already exists (or appended to with &lt;code&gt;--continue, -c&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;The server may specify the filename in the optional &lt;code&gt;Content-Disposition&lt;/code&gt; response header. Any leading dots are stripped from a server-provided filename.&lt;/li&gt;
&lt;li&gt;The last resort HTTPie uses is to generate the filename from a combination of the request URL and the response &lt;code&gt;Content-Type&lt;/code&gt;. The initial URL is always used as the basis for the generated filename — even if there has been one or more redirects.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;To prevent data loss by overwriting, HTTPie adds a unique numerical suffix to the filename when necessary (unless specified with &lt;code&gt;--output, -o&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id60&quot;&gt;19.2   Piping while downloading&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can also redirect the response body to another program while the response headers and progress are still shown in the terminal:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -d https://github.com/jakubroztocil/httpie/archive/master.tar.gz &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt;  tar zxf -
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id61&quot;&gt;19.3   Resuming downloads&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If &lt;code&gt;--output, -o&lt;/code&gt; is specified, you can resume a partial download using the &lt;code&gt;--continue, -c&lt;/code&gt; option. This only works with servers that support &lt;code&gt;Range&lt;/code&gt; requests and &lt;code&gt;206 Partial Content&lt;/code&gt; responses. If the server doesn't support that, the whole file will simply be downloaded:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -dco file.zip example.org/file
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id62&quot;&gt;19.4   Other notes&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;The &lt;code&gt;--download&lt;/code&gt; option only changes how the response body is treated.&lt;/li&gt;
&lt;li&gt;You can still set custom headers, use sessions, &lt;code&gt;--verbose, -v&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--download&lt;/code&gt; always implies &lt;code&gt;--follow&lt;/code&gt; (redirects are followed).&lt;/li&gt;
&lt;li&gt;HTTPie exits with status code &lt;code&gt;1&lt;/code&gt; (error) if the body hasn't been fully downloaded.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Accept-Encoding&lt;/code&gt; cannot be set with &lt;code&gt;--download&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Responses are downloaded and printed in chunks which allows for streaming and large file downloads without using too much memory. However, when &lt;a href=&quot;https://github.com/jakubroztocil/httpie#colors-and-formatting&quot;&gt;colors and formatting&lt;/a&gt; is applied, the whole response is buffered and only then processed at once.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id64&quot;&gt;20.1   Disabling buffering&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can use the &lt;code&gt;--stream, -S&lt;/code&gt; flag to make two things happen:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The output is flushed in much smaller chunks without any buffering, which makes HTTPie behave kind of like &lt;code&gt;tail -f&lt;/code&gt; for URLs.&lt;/li&gt;
&lt;li&gt;Streaming becomes enabled even when the output is prettified: It will be applied to each line of the response and flushed immediately. This makes it possible to have a nice output for long-lived requests, such as one to the Twitter streaming API.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id65&quot;&gt;20.2   Examples use cases&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Prettified streamed response:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Justin Bieber&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Streamed output by small chunks alá &lt;code&gt;tail -f&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Send each new tweet (JSON object) mentioning &quot;Apple&quot; to another&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; server as soon as it arrives from the Twitter streaming API:&lt;/span&gt;
$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track=Apple \
&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;read&lt;/span&gt; tweet&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$tweet&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; http POST example.org/tweets &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, every request HTTPie makes is completely independent of any previous ones to the same host.&lt;/p&gt;
&lt;p&gt;However, HTTPie also supports persistent sessions via the &lt;code&gt;--session=SESSION_NAME_OR_PATH&lt;/code&gt; option. In a session, custom &lt;a href=&quot;https://github.com/jakubroztocil/httpie#http-headers&quot;&gt;HTTP headers&lt;/a&gt; (except for the ones starting with &lt;code&gt;Content-&lt;/code&gt; or &lt;code&gt;If-&lt;/code&gt;), &lt;a href=&quot;https://github.com/jakubroztocil/httpie#authentication&quot;&gt;authentication&lt;/a&gt;, and &lt;a href=&quot;https://github.com/jakubroztocil/httpie#cookies&quot;&gt;cookies&lt;/a&gt; (manually specified or sent by the server) persist between requests to the same host.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Create a new session&lt;/span&gt;
$ http --session=/tmp/session.json example.org API-Token:123

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Re-use an existing session — API-Token will be set:&lt;/span&gt;
$ http --session=/tmp/session.json example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All session data, including credentials, cookie data, and custom headers are stored in plain text. That means session files can also be created and edited manually in a text editor—they are regular JSON. It also means that they can be read by anyone who has access to the session file.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id67&quot;&gt;21.1   Named sessions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can create one or more named session per host. For example, this is how you can create a new session named &lt;code&gt;user1&lt;/code&gt; for &lt;code&gt;example.org&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --session=user1 -a user1:password example.org X-Foo:Bar
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From now on, you can refer to the session by its name. When you choose to use the session again, any previously specified authentication or HTTP headers will automatically be set:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --session=user1 example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create or reuse a different session, simple specify a different name:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --session=user2 -a user2:password example.org X-Bar:Foo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named sessions' data is stored in JSON files in the directory &lt;code&gt;~/.httpie/sessions/&amp;lt;host&amp;gt;/&amp;lt;name&amp;gt;.json&lt;/code&gt; (&lt;code&gt;%APPDATA%\httpie\sessions\&amp;lt;host&amp;gt;\&amp;lt;name&amp;gt;.json&lt;/code&gt; on Windows).&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id68&quot;&gt;21.2   Anonymous sessions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Instead of a name, you can also directly specify a path to a session file. This allows for sessions to be re-used across multiple hosts:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http --session=/tmp/session.json example.org
$ http --session=/tmp/session.json admin.example.org
$ http --session=&lt;span class=&quot;pl-k&quot;&gt;~&lt;/span&gt;/.httpie/sessions/another.example.org/test.json example.org
$ http --session-read-only=/tmp/session.json example.org
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id69&quot;&gt;21.3   Readonly session&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To use an existing session file without updating it from the request/response exchange once it is created, specify the session name via &lt;code&gt;--session-read-only=SESSION_NAME_OR_PATH&lt;/code&gt; instead.&lt;/p&gt;


&lt;p&gt;HTTPie uses a simple JSON config file.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id71&quot;&gt;22.1   Config file location&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The default location of the configuration file is &lt;code&gt;~/.httpie/config.json&lt;/code&gt; (or &lt;code&gt;%APPDATA%\httpie\config.json&lt;/code&gt; on Windows). The config directory location can be changed by setting the &lt;code&gt;HTTPIE_CONFIG_DIR&lt;/code&gt; environment variable. To view the exact location run &lt;code&gt;http --debug&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id72&quot;&gt;22.2   Configurable options&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The JSON file contains an object with the following keys:&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id73&quot;&gt;22.2.1   &lt;code&gt;default_options&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;An &lt;code&gt;Array&lt;/code&gt; (by default empty) of default options that should be applied to every invocation of HTTPie.&lt;/p&gt;
&lt;p&gt;For instance, you can use this option to change the default style and output options: &lt;code&gt;&quot;default_options&quot;: [&quot;--style=fruity&quot;, &quot;--body&quot;]&lt;/code&gt; Another useful default option could be &lt;code&gt;&quot;--session=default&quot;&lt;/code&gt; to make HTTPie always use &lt;a href=&quot;https://github.com/jakubroztocil/httpie#sessions&quot;&gt;sessions&lt;/a&gt; (one named &lt;code&gt;default&lt;/code&gt; will automatically be used). Or you could change the implicit request content type from JSON to form by adding &lt;code&gt;--form&lt;/code&gt; to the list.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id74&quot;&gt;22.2.2   &lt;code&gt;__meta__&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;HTTPie automatically stores some of its metadata here. Please do not change.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id75&quot;&gt;22.3   Un-setting previously specified options&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Default options from the config file, or specified any other way, can be unset for a particular invocation via &lt;code&gt;--no-OPTION&lt;/code&gt; arguments passed on the command line (e.g., &lt;code&gt;--no-style&lt;/code&gt; or &lt;code&gt;--no-session&lt;/code&gt;).&lt;/p&gt;


&lt;p&gt;When using HTTPie from shell scripts, it can be handy to set the &lt;code&gt;--check-status&lt;/code&gt; flag. It instructs HTTPie to exit with an error if the HTTP status is one of &lt;code&gt;3xx&lt;/code&gt;, &lt;code&gt;4xx&lt;/code&gt;, or &lt;code&gt;5xx&lt;/code&gt;. The exit status will be &lt;code&gt;3&lt;/code&gt; (unless &lt;code&gt;--follow&lt;/code&gt; is set), &lt;code&gt;4&lt;/code&gt;, or &lt;code&gt;5&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/bin/bash&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; http --check-status --ignore-stdin --timeout=2.5 HEAD example.org/health &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;OK!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$?&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt;
        2) &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Request timed out!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; ;;
        3) &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Unexpected HTTP 3xx Redirection!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; ;;
        4) &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;HTTP 4xx Client Error!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; ;;
        5) &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;HTTP 5xx Server Error!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; ;;
        6) &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Exceeded --max-redirects=&amp;lt;n&amp;gt; redirects!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; ;;
        &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Other Error!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; ;;
    &lt;span class=&quot;pl-k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id77&quot;&gt;23.1   Best practices&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The default behaviour of automatically reading &lt;code&gt;stdin&lt;/code&gt; is typically not desirable during non-interactive invocations. You most likely want to use the &lt;code&gt;--ignore-stdin&lt;/code&gt; option to disable it.&lt;/p&gt;
&lt;p&gt;It is a common gotcha that without this option HTTPie seemingly hangs. What happens is that when HTTPie is invoked for example from a cron job, &lt;code&gt;stdin&lt;/code&gt; is not connected to a terminal. Therefore, rules for &lt;a href=&quot;https://github.com/jakubroztocil/httpie#redirected-input&quot;&gt;redirected input&lt;/a&gt; apply, i.e., HTTPie starts to read it expecting that the request body will be passed through. And since there's no data nor &lt;code&gt;EOF&lt;/code&gt;, it will be stuck. So unless you're piping some data to HTTPie, this flag should be used in scripts.&lt;/p&gt;
&lt;p&gt;Also, it might be good to set a connection &lt;code&gt;--timeout&lt;/code&gt; limit to prevent your program from hanging if the server never responds.&lt;/p&gt;



&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id79&quot;&gt;24.1   Interface design&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The syntax of the command arguments closely corresponds to the actual HTTP requests sent over the wire. It has the advantage that it's easy to remember and read. It is often possible to translate an HTTP request to an HTTPie argument list just by inlining the request elements. For example, compare this HTTP request:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-httpspec&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt; /collection HTTP/1.1&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;X-API-Key:&lt;/span&gt; 123&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;User-Agent:&lt;/span&gt; Bacon/1.0&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-v&quot;&gt;Content-Type:&lt;/span&gt; application/x-www-form-urlencoded&lt;/span&gt;

name&lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;name2&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;value2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with the HTTPie command that sends it:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ http -f POST example.org/collection \
  X-API-Key:123 \
  User-Agent:Bacon/1.0 \
  name=value \
  name2=value2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that both the order of elements and the syntax is very similar, and that only a small portion of the command is used to control HTTPie and doesn't directly correspond to any part of the request (here it's only &lt;code&gt;-f&lt;/code&gt; asking HTTPie to send a form request).&lt;/p&gt;
&lt;p&gt;The two modes, &lt;code&gt;--pretty=all&lt;/code&gt; (default for terminal) and &lt;code&gt;--pretty=none&lt;/code&gt; (default for redirected output), allow for both user-friendly interactive use and usage from scripts, where HTTPie serves as a generic HTTP client.&lt;/p&gt;
&lt;p&gt;As HTTPie is still under heavy development, the existing command line syntax and some of the &lt;code&gt;--OPTIONS&lt;/code&gt; may change slightly before HTTPie reaches its final version &lt;code&gt;1.0&lt;/code&gt;. All changes are recorded in the &lt;a href=&quot;https://github.com/jakubroztocil/httpie#change-log&quot;&gt;change log&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id80&quot;&gt;24.2   User support&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Please use the following support channels:&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id81&quot;&gt;24.3   Related projects&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id82&quot;&gt;24.3.1   Dependencies&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Under the hood, HTTPie uses these two amazing libraries:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://python-requests.org&quot; rel=&quot;nofollow&quot;&gt;Requests&lt;/a&gt; — Python HTTP library for humans&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pygments.org/&quot; rel=&quot;nofollow&quot;&gt;Pygments&lt;/a&gt; — Python syntax highlighter&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id83&quot;&gt;24.3.2   HTTPie friends&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;HTTPie plays exceptionally well with the following tools:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/&quot; rel=&quot;nofollow&quot;&gt;jq&lt;/a&gt; — CLI JSON processor that works great in conjunction with HTTPie&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eliangcs/http-prompt&quot;&gt;http-prompt&lt;/a&gt; — interactive shell for HTTPie featuring autocomplete and command syntax highlighting&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id84&quot;&gt;24.3.3   Alternatives&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpcat&quot;&gt;httpcat&lt;/a&gt; — a lower-level sister utility of HTTPie for constructing raw HTTP requests on the command line.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://curl.haxx.se&quot; rel=&quot;nofollow&quot;&gt;curl&lt;/a&gt; — a &quot;Swiss knife&quot; command line tool and an exceptional library for transferring data with URLs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id85&quot;&gt;24.4   Contributing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/jakubroztocil/httpie/blob/master/CONTRIBUTING.rst&quot;&gt;CONTRIBUTING.rst&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id86&quot;&gt;24.5   Change log&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/jakubroztocil/httpie/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id87&quot;&gt;24.6   Artwork&lt;/a&gt;&lt;/h3&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id88&quot;&gt;24.7   Licence&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BSD-3-Clause: &lt;a href=&quot;https://github.com/jakubroztocil/httpie/blob/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://github.com/jakubroztocil/httpie#id89&quot;&gt;24.8   Authors&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://roztocil.co&quot; rel=&quot;nofollow&quot;&gt;Jakub Roztocil&lt;/a&gt; (&lt;a href=&quot;https://twitter.com/jakubroztocil&quot; rel=&quot;nofollow&quot;&gt;@jakubroztocil&lt;/a&gt;) created HTTPie and &lt;a href=&quot;https://github.com/jakubroztocil/httpie/contributors&quot;&gt;these fine people&lt;/a&gt; have contributed.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 01 Dec 2019 09:47:09 +0000</pubDate>
<dc:creator>rsapkf</dc:creator>
<og:image>https://repository-images.githubusercontent.com/3544424/7ace0800-d309-11e9-8f35-4f73513bd651</og:image>
<og:type>object</og:type>
<og:title>jakubroztocil/httpie</og:title>
<og:url>https://github.com/jakubroztocil/httpie</og:url>
<og:description>As easy as HTTPie /aitch-tee-tee-pie/ 🥧 Modern command line HTTP client – user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc....</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/jakubroztocil/httpie</dc:identifier>
</item>
<item>
<title>Shibboleths that get you past the initial script stage</title>
<link>https://twitter.com/patio11/status/1201003855770607618</link>
<guid isPermaLink="true" >https://twitter.com/patio11/status/1201003855770607618</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/patio11/status/1201003855770607618&quot;&gt;https://twitter.com/patio11/status/1201003855770607618&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21674599&quot;&gt;https://news.ycombinator.com/item?id=21674599&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 310&lt;/p&gt;
&lt;p&gt;# Comments: 193&lt;/p&gt;
</description>
<pubDate>Sun, 01 Dec 2019 08:51:53 +0000</pubDate>
<dc:creator>signor_bosco</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/patio11/status/1201003855770607618</dc:identifier>
</item>
<item>
<title>EU antitrust regulators say they are investigating Google&amp;#039;s data collection</title>
<link>https://www.reuters.com/article/us-eu-alphabet-antitrust-exclusive/exclusive-eu-antitrust-regulators-say-they-are-investigating-googles-data-collection-idUSKBN1Y40NX</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-eu-alphabet-antitrust-exclusive/exclusive-eu-antitrust-regulators-say-they-are-investigating-googles-data-collection-idUSKBN1Y40NX</guid>
<description>&lt;div class=&quot;PrimaryAsset_container&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;Image_container&quot; tabindex=&quot;-1&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;LazyImage_container LazyImage_dark&quot;&gt;&lt;img src=&quot;https://s2.reutersmedia.net/resources/r/?m=02&amp;amp;d=20191130&amp;amp;t=2&amp;amp;i=1458671059&amp;amp;r=LYNXMPEFAT0QH&amp;amp;w=20&quot; aria-label=&quot;FILE PHOTO: A man passes a Google signage outside their office in Singapore May 24, 2019. REUTERS/Edgar Su/File Photo&quot;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;FILE PHOTO: A man passes a Google signage outside their office in Singapore May 24, 2019. REUTERS/Edgar Su/File Photo&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;BRUSSELS (Reuters) - EU antitrust regulators are investigating Google’s collection of data, the European Commission told Reuters on Saturday, suggesting the world’s most popular internet search engine remains in its sights despite record fines in recent years.&lt;/p&gt;
&lt;p&gt;Competition enforcers on both sides of the Atlantic are now looking into how dominant tech companies use and monetise data.&lt;/p&gt;
&lt;p&gt;The EU executive said it was seeking information on how and why Alphabet unit Google is collecting data, confirming a Reuters story on Friday.&lt;/p&gt;
&lt;p&gt;“The Commission has sent out questionnaires as part of a preliminary investigation into Google’s practices relating to Google’s collection and use of data. The preliminary investigation is ongoing,” the EU regulator told Reuters in an email.&lt;/p&gt;
&lt;p&gt;A document seen by Reuters shows the EU’s focus is on data related to local search services, online advertising, online ad targeting services, login services, web browsers and others.&lt;/p&gt;
&lt;p&gt;European Competition Commissioner Margrethe Vestager has handed down fines totalling more than 8 billion euros to Google in the last two years and ordered it to change its business practices.&lt;/p&gt;
&lt;p&gt;Google has said it uses data to better its services and that users can manage, delete and transfer their data at any time.&lt;/p&gt;
&lt;p&gt;(This story has been refiled to fix spelling in first paragraph to sights, not sites.)&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Reporting by Foo Yun Chee; Editing by Hugh Lawson&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 01 Dec 2019 02:14:05 +0000</pubDate>
<dc:creator>PretzelFisch</dc:creator>
<og:title>Exclusive: EU antitrust regulators say they are investigating Google's data collection</og:title>
<og:url>https://www.reuters.com/article/us-eu-alphabet-antitrust-exclusive-idUSKBN1Y40NX</og:url>
<og:type>article</og:type>
<og:description>EU antitrust regulators are investigating Google's collection of data, the ...</og:description>
<og:image>https://s2.reutersmedia.net/resources/r/?m=02&amp;d=20191130&amp;t=2&amp;i=1458671059&amp;w=1200&amp;r=LYNXMPEFAT0QH</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-eu-alphabet-antitrust-exclusive/exclusive-eu-antitrust-regulators-say-they-are-investigating-googles-data-collection-idUSKBN1Y40NX</dc:identifier>
</item>
<item>
<title>Small Projects, Big Companies</title>
<link>https://pioneer.app/blog/small-projects-big-companies/</link>
<guid isPermaLink="true" >https://pioneer.app/blog/small-projects-big-companies/</guid>
<description>&lt;p&gt;Pizza delivery. Event planning. Bill splitting. We see many of these at Pioneer. I call them “incombustible ideas”. Founders relentlessly try to ignite them, but &lt;em&gt;they just don’t light up&lt;/em&gt;. I don’t blame the firebrands. Solving anecdotal problems is a good instinct in most situations. But it can also lead founding teams down a stray path, spending years working on a company in a dog market.&lt;/p&gt;&lt;p&gt;There's a bit of a meta-issue at play. People who want to start startups aren’t exposed to enough of the &lt;em&gt;right&lt;/em&gt; frustrations. Sure, it’s slightly annoying to split a bill with friends. But the frustration is small. The market difficult to monetize. It’s really annoying to use Google Groups in a large organization. And that’s very easy to monetize. I doubt most humans know this “secret”.&lt;/p&gt;
&lt;p&gt;Our hope with this post is to enlighten the hacker-class to some of the small-but-big problems that large enterprises face. Any of these projects could turn into a $200M+ startup within one year if executed properly. Pick one, start working on it, and get in touch with us!&lt;/p&gt;
&lt;h2 id=&quot;1-better-zendesk&quot;&gt;1. Better Zendesk&lt;/h2&gt;
&lt;p&gt;Zendesk is a $9B public company. The product is good, not great. The company has few moats. If you built a Roadster to their Corolla, you might win a few deals quickly. Something that was fast, responsive, undercut on price and gave leadership a sense of control.&lt;/p&gt;
&lt;p&gt;Small startups find Zendesk uncomfortably expensive. Larger businesses are looking for something with better reporting. This is an important problem, because it makes &lt;em&gt;executives&lt;/em&gt; unhappy. It’s one thing if the customer service rep finds the Zendesk UI slow. They aren’t the buyer of the software, so that doesn’t matter much. If you’re making the executive unhappy ( “are we getting better or worse at support?”), you’re at risk of losing customers. Make something managers want. Here are some specific issues you’d want to fix:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No built-in support for account context (which every company needs).&lt;/li&gt;
&lt;li&gt;No support for authenticating customers (which every company needs to do).&lt;/li&gt;
&lt;li&gt;Doesn’t interoperate with G Suite and other communication tools.&lt;/li&gt;
&lt;li&gt;Janky subject line prefixes like [CASE 34984311111].&lt;/li&gt;
&lt;li&gt;Doesn’t interoperate properly with the rest of email (CCs etc.).&lt;/li&gt;
&lt;li&gt;Has been breached twice.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;2-better-google-groups&quot;&gt;2. Better Google Groups&lt;/h2&gt;
&lt;p&gt;Every company has internal email lists. Managing them through the Google Admin UI is terrible. Build something better here, one that allows for *-prefix rules, has a nice internal viewer interface, etc.&lt;/p&gt;
&lt;h2 id=&quot;3-backchannel-app&quot;&gt;3. Backchannel.app&lt;/h2&gt;
&lt;p&gt;Every company runs reference checks as part of a hiring process. Some references are provided by the candidate. The best are often unsolicited. A friend, or a friend-of-friend. These are often more useful than the interview. Backchannel references are tricky: you don’t want to call people at Foo’s current company because they haven’t told them they’re leaving. Even once you find people from a past company or position, you’ll need to somehow incentivize them to be honest (non-monetary rewards work best).&lt;/p&gt;
&lt;p&gt;Figure this out and you’ll find yourself establishing the next LinkedIn.&lt;/p&gt;
&lt;h2 id=&quot;4-better-personality-models&quot;&gt;4. Better Personality Models&lt;/h2&gt;
&lt;p&gt;The Big Five Aspects Scale is considered the cutting-edge of personality models, yet like much of social sciences it’s on the backbone of self-report surveys. I doubt a Google Form is the best we can do. We need something better. Something that durably captures differences in human personality. Instead of measuring using self-report surveys, look at emissions: the messaging, music, movies, browsing history, that people create, and cluster based on that. You might not know the labels of the clusters (“openness”, “conscientiousness”), but you’ll at least know who is similar to who. Monetizing this should be relatively easy. (We certainly have a few ideas ourselves we’d be happy to share).&lt;/p&gt;
&lt;h2 id=&quot;5-org-chart-as-a-service&quot;&gt;5. Org Chart As a Service&lt;/h2&gt;
&lt;p&gt;Like a scene from an FBI movie, every good sales team has a cork board of people within the organization they’re selling to. The golden dataset everyone wants is the org chart. Who reports to whom. Who is new. Who has been at the company for a while. Find a way to get this data and sell it to companies. I suspect you’ll have many takers.&lt;/p&gt;
&lt;h2 id=&quot;6-image-graph-search&quot;&gt;6. Image Graph Search&lt;/h2&gt;
&lt;p&gt;Find all the images on the web that look like charts/graphs. Convert those pixels into data. Let users search the entire Internet’s store of graphs, both by name and shape (“what are Things that are trending up?”). Like a Tesla Roadster, this product wouldn’t have billions of users, but you could charge the elite few quite a bit for using it.&lt;/p&gt;
&lt;h2 id=&quot;7-legal-doc-to-google-form&quot;&gt;7. Legal-Doc-to-Google-Form&lt;/h2&gt;
&lt;p&gt;Every founder goes through an identical process: downloading Microsoft Word, changing variables in a legal template, opening it in Preview, attaching their signature, and sending it over to the counterparty. Automate this process. Offer templates for common documents (company formation, SAFEs, etc). In time, you might become the store-of-record for company documents.&lt;/p&gt;
&lt;h2 id=&quot;pioneer-sales-booster&quot;&gt;Pioneer Sales Booster&lt;/h2&gt;
&lt;p&gt;Success in the enterprise is equal parts software and sales. Getting 3 landmark deals can catalyze a feedback loop that turns a small project into the next Oracle. In addition to funding, Pioneer will try to help you get these for any of the ideas above. We can’t guarantee anything (you’ll have to make a good product, of course!), but we’ve got customers lined up for the right thing. Mention this post in your application when you &lt;a href=&quot;https://pioneer.app&quot;&gt;apply&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 30 Nov 2019 22:46:28 +0000</pubDate>
<dc:creator>marceee0901</dc:creator>
<og:type>article</og:type>
<og:title>Small Projects, Big Companies</og:title>
<og:description>Pizza delivery. Event planning. Bill splitting. We see many of these at Pioneer. I call them “incombustible ideas”. Founders relentlessly try to ignite them, but they just don’t light up. I don’t blame the firebrands. Solving anecdotal problems is a good instinct in most situations. But it can</og:description>
<og:url>https://pioneer.app/blog/small-projects-big-companies/</og:url>
<og:image>https://s3-us-west-1.amazonaws.com/pioneer-blog/2019/11/z-2.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://pioneer.app/blog/small-projects-big-companies/</dc:identifier>
</item>
<item>
<title>Gnu: Net</title>
<link>https://gnunet.org/en/#about</link>
<guid isPermaLink="true" >https://gnunet.org/en/#about</guid>
<description>&lt;div class=&quot;alert&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Notice: GNUnet is still undergoing major development. It is largely &lt;em&gt;not yet ready&lt;/em&gt; for usage beyond developers&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;jumbotron&quot; readability=&quot;4.8657105606258&quot;&gt;
&lt;div class=&quot;container&quot;&gt;
&lt;div class=&quot;row&quot; readability=&quot;11.183108108108&quot;&gt;
&lt;div class=&quot;col-lg-6&quot;&gt;
&lt;center&gt;&lt;img src=&quot;https://gnunet.org/static/images/gnunet-logo-dark-text.png&quot; alt=&quot;GNUnet&quot;/&gt;&lt;/center&gt;
&lt;/div&gt;
&lt;div class=&quot;col-lg-6&quot; readability=&quot;18.224324324324&quot;&gt;
&lt;p&gt;GNUnet is a new network protocol stack for building secure, distributed, and privacy-preserving applications. With strong roots in &lt;a href=&quot;https://bib.gnunet.org&quot;&gt;academic research&lt;/a&gt;, our goal is to replace the &lt;a href=&quot;https://secushare.org/broken-internet&quot;&gt;old insecure Internet&lt;/a&gt; protocol stack.&lt;/p&gt;&lt;p&gt;GNUnet is typically run as an &lt;a href=&quot;https://en.wikipedia.org/wiki/Overlay_network&quot;&gt;overlay network&lt;/a&gt; on top of the existing Internet infrastructure forming the basis of a hybrid &lt;a href=&quot;https://gnunet.org/en/architecture.html&quot;&gt;peer-to-peer mesh and relay backbone&lt;/a&gt; for applications to run on. It could just as well be run independently of the Internet, over &lt;a href=&quot;https://en.wikipedia.org/wiki/Physical_layer&quot;&gt;dedicated radio and cable&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;GNUnet is made for a free and open society: It's a self-organizing network and it is &lt;a href=&quot;http://www.gnu.org/philosophy/free-sw.html&quot;&gt;free software&lt;/a&gt; as in freedom. GNUnet puts you in control of your data. You determine which data to share with whom, and you're not pressured to accept compromises.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;container-fluid&quot;&gt;
&lt;div class=&quot;container&quot;&gt;

&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-12&quot; readability=&quot;6.7352941176471&quot;&gt;
&lt;section class=&quot;item-preview&quot; readability=&quot;3.8487394957983&quot;&gt;&lt;header&gt;&lt;h3&gt;GNS@ICANN66&lt;/h3&gt;
&lt;p class=&quot;item-date&quot;&gt;2019-11-10&lt;/p&gt;
&lt;/header&gt;&lt;p class=&quot;item-abstract&quot;&gt;The ICANN Annual General Meeting is concluded. We were invited to join a panel discussion on Emerging Internet Identifier Technologies in order to share our ideas and work on the GNU Name System (GNS)... [&lt;a href=&quot;https://gnunet.org/en/news/2019-11-ICANNUpdate.html&quot; title=&quot;2019-11-10&quot;&gt;read more&lt;/a&gt;]&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-12&quot; readability=&quot;9.3600654664484&quot;&gt;
&lt;section class=&quot;item-preview&quot; readability=&quot;8.8674304418985&quot;&gt;&lt;header&gt;&lt;h3&gt;GNUnet 0.11.8&lt;/h3&gt;
&lt;p class=&quot;item-date&quot;&gt;2019-10-30&lt;/p&gt;
&lt;/header&gt;&lt;p class=&quot;item-abstract&quot;&gt;We are pleased to announce the release of GNUnet 0.11.8. This is a hotfix release for 0.11.7. As always: In terms of usability, users should be aware that there are still a large number of known open issues in particular with respect to ease of use, but also some critical privacy issues especially for mobile users. Also, the nascent network is tiny (about 200 peers) and thus unlikely to provide good anonymity or extensive amounts of interesting information. As a result, the 0.11.8 release is still only suitable for early adopters with some reasonable pain tolerance... [&lt;a href=&quot;https://gnunet.org/en/news/2019-0.11.8.html&quot; title=&quot;2019-10-30&quot;&gt;read more&lt;/a&gt;]&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-12&quot; readability=&quot;11.37575030012&quot;&gt;
&lt;section class=&quot;item-preview&quot; readability=&quot;12.859543817527&quot;&gt;&lt;header&gt;&lt;h3&gt;GNUnet 0.11.7&lt;/h3&gt;
&lt;p class=&quot;item-date&quot;&gt;2019-10-27&lt;/p&gt;
&lt;/header&gt;&lt;p class=&quot;item-abstract&quot;&gt;We are pleased to announce the release of GNUnet 0.11.7. This is a bugfix release for 0.11.6, fixing a lot of minor bugs, improving stability and code quality. Further, win32 support was removed for reasons you may read below. In this release, we again improved the webpage in general and updated our documentation. As always: In terms of usability, users should be aware that there are still a large number of known open issues in particular with respect to ease of use, but also some critical privacy issues especially for mobile users. Also, the nascent network is tiny (about 200 peers) and thus unlikely to provide good anonymity or extensive amounts of interesting information. As a result, the 0.11.7 release is still only suitable for early adopters with some reasonable pain tolerance... [&lt;a href=&quot;https://gnunet.org/en/news/2019-0.11.7.html&quot; title=&quot;2019-10-27&quot;&gt;read more&lt;/a&gt;]&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-12&quot; readability=&quot;7.3291139240506&quot;&gt;
&lt;section class=&quot;item-preview&quot; readability=&quot;4.8860759493671&quot;&gt;&lt;header&gt;&lt;h3&gt;GNUnet invited to ICANN Panel&lt;/h3&gt;
&lt;p class=&quot;item-date&quot;&gt;2019-10-20&lt;/p&gt;
&lt;/header&gt;&lt;p class=&quot;item-abstract&quot;&gt;We are delighted to announce that ICANN has invited the GNUnet project to speak at the next ICANN Annual General Meeting. We have been invited to join a panel discussion on Emerging Internet Identifier Technologies in order to share our ideas and work on the GNU Name System (GNS). ICANN generously offered to cover travel and accomodation... [&lt;a href=&quot;https://gnunet.org/en/news/2019-10-ICANNPanel.html&quot; title=&quot;2019-10-20&quot;&gt;read more&lt;/a&gt;]&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;container-fluid c_acronym link-white&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;5.6463113307448&quot;&gt;

&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;9&quot;&gt;
&lt;section readability=&quot;8&quot;&gt;&lt;h3&gt;Imagine...&lt;/h3&gt;
&lt;p&gt;The conventional Internet is currently like a system of roads with deep potholes and highwaymen all over the place. Even if you still can use the roads (e.g. send emails, or browse websites) your vehicle might get hijacked, damaged, or long arms might reach into its back and steal your items (data) to use it against you and sell it to others - while you can't even notice the thievery nor accuse and hold the scroungers accountable. &lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;10.539408866995&quot;&gt;
&lt;section readability=&quot;11.497536945813&quot;&gt;&lt;h3&gt;The Internet is broken&lt;/h3&gt;
&lt;p&gt;Protocols from Ethernet and IP to BGP and X.509 PKI are insecure by default: protecting against address forgery, routers learning metadata, or choosing trustworthy CAs is nontrivial and sometimes impossible. &lt;/p&gt;
&lt;p&gt;GNUnet provides &lt;a href=&quot;https://www.w3.org/2014/strint/papers/65.pdf&quot;&gt;privacy by design&lt;/a&gt;, improving addressing, routing, naming and content distribution in a technically robust manner - as opposed to ad-hoc designs in place today. &lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;10.5&quot;&gt;
&lt;section readability=&quot;11&quot;&gt;&lt;h3&gt;Decentralization is hard&lt;/h3&gt;
&lt;p&gt; Instead of sharing common components and tools for building P2P systems, every P2P project seems to re-invent the wheel.  This heightens the effort and increases the potential number of vulnerabilities.&lt;/p&gt;
&lt;p&gt;GNUnet is a metadata-preserving foundation for your application, covering areas from addressing to reliable bidirectional Axolotl-encrypted channels, with advanced routing. Our work is based on continuous research spanning almost two decades.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;10.824156305506&quot;&gt;
&lt;section readability=&quot;11.808170515098&quot;&gt;&lt;h3&gt;Metadata is exposed&lt;/h3&gt;
&lt;p&gt;Your metadata is just as revealing as the actual content; and it gets exposed on the Internet.&lt;br/&gt;Even though transport encryption is increasingly being deployed on the Internet, it still reveals data that can threaten democracy: the identities of senders and receivers, the times, frequency and the volume of communication are all still revealed.&lt;br/&gt;GNUnet &lt;a href=&quot;https://secushare.org/anonymity&quot;&gt;addresses&lt;/a&gt; these concerns with perfect forward secrecy via ephemeral public key addressing, fixed packet size to hinder traffic analysis, layered encryption, Sybil-resistant routing, and more.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;11.04&quot;&gt;
&lt;section readability=&quot;12.48&quot;&gt;&lt;h3&gt;Freedoms are not respected&lt;/h3&gt;
&lt;p&gt;Today, monitoring increasingly centralized infrastructure, proprietary implementations, traffic shapers and firewalls restrict all of the &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.html&quot;&gt;essential freedoms&lt;/a&gt; to various degrees.&lt;/p&gt;
&lt;p&gt;GNUnet gives users freedoms to securely access information (&quot;run&quot; the network), to study all aspects of the network's operation (&quot;access the code&quot;), to distribute information (&quot;copy&quot;), as well as the freedom to deploy new applications (&quot;modify&quot;).&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;container-fluid&quot;&gt;
&lt;div class=&quot;container&quot;&gt;

&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;6.2030456852792&quot;&gt;
&lt;section readability=&quot;2.8629441624365&quot;&gt;&lt;h3&gt;GNU Taler (Alpha)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://taler.net/&quot;&gt;GNU Taler&lt;/a&gt; is a new privacy-preserving electronic payment system. Payments are cryptographically secured and are confirmed within milliseconds with extremely low transaction costs.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;8.026525198939&quot;&gt;
&lt;section readability=&quot;6.6100795755968&quot;&gt;&lt;h3&gt;The GNU Name System&lt;/h3&gt;
&lt;p&gt; The &lt;a href=&quot;https://docs.gnunet.org/handbook/gnunet.html#The-GNU-Name-System&quot;&gt;GNU Name System (GNS)&lt;/a&gt; is a fully decentralized replacement for the Domain Name System (DNS). Instead of using a hierarchy, GNS uses a directed graph. Naming conventions are similar to DNS, but queries and replies are private even with respect to peers providing the answers. The integrity of records and privacy of look-ups is cryptographically secured. &lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;6.6888888888889&quot;&gt;
&lt;section readability=&quot;3.8222222222222&quot;&gt;&lt;h3&gt;re:claimID&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://reclaim-identity.io/&quot;&gt;re:claimID&lt;/a&gt; is a decentralized Identity Provider (IdP) service built in top of the GNU Name System. It allows users to securely share personal information with websites using standardized protocols (OpenID Connect).&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;6.6315789473684&quot;&gt;
&lt;section readability=&quot;3.7894736842105&quot;&gt;&lt;h3&gt;Filesharing (Alpha)&lt;/h3&gt;
&lt;p&gt;GNUnet &lt;a href=&quot;https://gnunet.org/en/use.html#fs&quot;&gt;filesharing&lt;/a&gt; is an application that aims to provide censorship-resistant, anonymous filesharing. The publisher is empowered to make a gradual choice between performance and anonymity.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot; readability=&quot;6.5&quot;&gt;
&lt;section readability=&quot;3&quot;&gt;&lt;h3&gt;Conversation (Pre-Alpha)&lt;/h3&gt;
&lt;p&gt;GNUnet conversation is an application that provides secure voice communication in a fully decentralized way by employing GNUnet for routing and transport.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;container-fluid c_acronym link-white&quot;&gt;
&lt;div class=&quot;container&quot;&gt;

&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-6&quot; readability=&quot;7.2127659574468&quot;&gt;
&lt;section readability=&quot;4.8085106382979&quot;&gt;&lt;h3&gt;secushare&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://secushare.org/&quot;&gt;secushare&lt;/a&gt; is creating a decentralized social networking application on top of GNUnet. Using overlay multicast and the extensible PSYC protocol, notifications are distributed end-to-end encrypted to authorized recipients only.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;div class=&quot;col-lg-6&quot; readability=&quot;6.4388185654008&quot;&gt;
&lt;section readability=&quot;3.6793248945148&quot;&gt;&lt;h3&gt;pretty Easy privacy&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://pep.foundation/&quot;&gt;pretty Easy privacy&lt;/a&gt; (p≡p) is creating a usable end-to-end encrypted e-mail solution using opportunistic key exchange. p≡p will use GNUnet to protect metadata and exploit new cryptographic protocols to verify keys.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 30 Nov 2019 22:36:44 +0000</pubDate>
<dc:creator>tomrod</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gnunet.org/en/</dc:identifier>
</item>
<item>
<title>Urbit</title>
<link>https://urbit.org/</link>
<guid isPermaLink="true" >https://urbit.org/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;/&gt;&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@urbit&quot;/&gt;&lt;meta name=&quot;twitter:creator&quot; content=&quot;@urbit&quot;/&gt;&lt;meta name=&quot;twitter:image&quot; content=&quot;https://media.urbit.org/logo/urbit-logo-card.png&quot;/&gt;&lt;meta name=&quot;og:title&quot; content=&quot;Urbit - Your last computer&quot;/&gt;&lt;title&gt;Urbit - Your last computer&lt;/title&gt;&lt;meta name=&quot;og:description&quot; content=&quot;Urbit is your last computer. It's is a simple, durable computer that you own 100% and forever.&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;Urbit is your last computer. It's is a simple, durable computer that you own 100% and forever.&quot;/&gt;&lt;meta name=&quot;author&quot; content=&quot;urbit.org&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; href=&quot;/images/favicon.ico&quot;/&gt;&lt;link rel=&quot;alternative&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot; href=&quot;/rss.xml&quot;/&gt;&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/indigo.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/styles.css&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;index&quot; id=&quot;readabilityBody&quot; readability=&quot;22.309782608696&quot;&gt;
&lt;nav id=&quot;search-overlay&quot; class=&quot;search-overlay black fixed w-100 full b-transparent z-999 dn&quot;&gt;
&lt;/nav&gt;&lt;section class=&quot;full p0 vid-insert-wrap full-bleed&quot; readability=&quot;1&quot;&gt;&lt;div class=&quot;grid12&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Urbit is your last computer.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;section class=&quot;full c2-7-md c3-7-lg mt6&quot; readability=&quot;3&quot;&gt;&lt;p class=&quot;lh-copy mt1 mb4&quot;&gt;Urbit is a simple, durable computer that you own 100% and forever.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;full c2-7-md c3-7-lg mt6&quot;/&gt;&lt;section class=&quot;full c2-7-md c3-7-lg mt6&quot; readability=&quot;1.5657370517928&quot;&gt;
&lt;p class=&quot;lh-copy mt1&quot;&gt;This sequence of posts will give you a high-level overview of Urbit. They take about 12 minutes to read.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;full c7-12-md c7-11-lg mt6&quot; readability=&quot;4.3264248704663&quot;&gt;
&lt;p class=&quot;lh-copy mt1&quot;&gt;We share ongoing project developments, discuss technical considerations, and update our public roadmap as often as possible. You can follow along here.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;full c2-7-md c3-7-lg mv6&quot; readability=&quot;6.3777777777778&quot;&gt;
&lt;p class=&quot;lh-copy mt1 mb4&quot;&gt;Urbit is actively being built, explored, and experimented with. To follow our progress you can:&lt;/p&gt;
&lt;p class=&quot;lh-copy&quot;&gt;Or, boot Urbit and join &lt;code&gt;~dopzod/urbit-help&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;full c7-12-md c7-11-lg mb6 mt6-xl mt6-l mt6-m&quot; id=&quot;newsletter-subscribe-top&quot; readability=&quot;2&quot;&gt;
&lt;p class=&quot;lh-copy mt1 mb3&quot;&gt;We send regular updates about our project. Enter your email to get them.&lt;/p&gt;


&lt;/section&gt;&lt;footer class=&quot;full-bleed mt4 grid12 bg-black white full pb6&quot;&gt;&lt;section class=&quot;full grid12 mb4&quot;&gt;&lt;nav class=&quot;c1-4-md c3-5-lg half-1 mt5&quot;&gt;&lt;h3 class=&quot;mt0 mb3 pt0 pb0&quot;&gt;Understanding Urbit&lt;/h3&gt;
&lt;/nav&gt;&lt;nav class=&quot;c4-7-md c5-7-lg half-2 mt5&quot;&gt;&lt;h3 class=&quot;mt0 mb3 pt0 pb0&quot;&gt;Learn more&lt;/h3&gt;
&lt;/nav&gt;&lt;nav class=&quot;c7-10-md c7-9-lg half-1 mt5&quot;&gt;&lt;h3 class=&quot;mt0 mb3 pt0 pb0&quot;&gt;Using + Contributing&lt;/h3&gt;
&lt;/nav&gt;&lt;nav class=&quot;c10-13-md c9-11-lg half-2 mt5&quot;&gt;&lt;h3 class=&quot;mt0 mb3 pt0 pb0&quot;&gt;Community&lt;/h3&gt;
&lt;/nav&gt;&lt;/section&gt;&lt;section class=&quot;full-bleed full grid12&quot;&gt;&lt;nav class=&quot;c1-4-md c3-5-lg half-1 mt4 mb5&quot;&gt;&lt;h3 class=&quot;mt0 mb3 pt0 pb0&quot;&gt;Developers&lt;/h3&gt;
&lt;/nav&gt;&lt;nav class=&quot;c4-7-md c5-7-lg half-2 mt4 mb5&quot;&gt;&lt;h2 class=&quot;mb3 mt0&quot;&gt;About Urbit.org&lt;/h2&gt;
&lt;/nav&gt;&lt;nav class=&quot;c10-13-md c7-9-lg half-1 mt4 mb5&quot;&gt;&lt;h2 class=&quot;mb3&quot;&gt;Need help?&lt;/h2&gt;
&lt;/nav&gt;&lt;/section&gt;&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Sat, 30 Nov 2019 22:23:39 +0000</pubDate>
<dc:creator>tomrod</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://urbit.org/</dc:identifier>
</item>
<item>
<title>My .in domain has been transferred to another registrant without notification</title>
<link>https://twitter.com/susam/status/1200678538254393345</link>
<guid isPermaLink="true" >https://twitter.com/susam/status/1200678538254393345</guid>
<description>&lt;p&gt;I am really sorry to hear about that, Susam. I've located your ticket with us and checked its status with our team. Our provider is currently investigating the matter with the Registry. Once we have any news from them, we'll update you via ticket right away.&lt;/p&gt;
</description>
<pubDate>Sat, 30 Nov 2019 19:01:37 +0000</pubDate>
<dc:creator>susam</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/susam/status/1200678538254393345</dc:identifier>
</item>
</channel>
</rss>